{"version":3,"file":"js/6825.js","mappings":"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","sources":["webpack://nottvbeta/./resources/js/Stores/GoLiveStore.js","webpack://nottvbeta/./resources/js/Stores/MistStore.js","webpack://nottvbeta/./resources/js/Stores/VideoAuxPlayerStore.js","webpack://nottvbeta/./resources/js/Utilities/PageSetup.js","webpack://nottvbeta/./resources/js/Components/Pages/GoLive/CopyDestinationsModal.vue?d16c","webpack://nottvbeta/./resources/js/Components/Pages/GoLive/GoLiveHeader.vue?b885","webpack://nottvbeta/./resources/js/Components/Global/Buttons/CancelButton.vue?b7c6","webpack://nottvbeta/./resources/js/Components/Global/Buttons/CancelButton.vue","webpack://nottvbeta/./resources/js/Components/Pages/GoLive/GoLiveHeader.vue","webpack://nottvbeta/./resources/js/Components/Pages/GoLive/GoLiveHeader.vue?0614","webpack://nottvbeta/./resources/js/Components/Pages/GoLive/GoLiveHeader.vue?1285","webpack://nottvbeta/./resources/js/Components/Global/VideoPlayer/VideoJs/VideoJsAux.vue?cfd4","webpack://nottvbeta/./resources/js/Components/Global/VideoPlayer/VideoJs/VideoJsAux.vue","webpack://nottvbeta/./resources/js/Components/Pages/GoLive/GoLiveAuxVideoPlayer.vue?768b","webpack://nottvbeta/./resources/js/Components/Pages/GoLive/GoLiveAuxVideoPlayer.vue","webpack://nottvbeta/./resources/js/Components/Global/MistStreams/MistStreamPushDestinationForm.vue?5647","webpack://nottvbeta/./resources/js/Components/Global/MistStreams/MistStreamPushDestinationForm.vue","webpack://nottvbeta/./resources/js/Components/Pages/GoLive/GoLiveDestinationList.vue?e4fc","webpack://nottvbeta/./resources/js/Components/Pages/GoLive/GoLiveDestinationList.vue","webpack://nottvbeta/./resources/js/Components/Pages/GoLive/CopyDestinationsModal.vue","webpack://nottvbeta/./resources/js/Components/Pages/GoLive/CopyDestinationsModal.vue?6eef","webpack://nottvbeta/./resources/js/Components/Pages/GoLive/CopyDestinationsModal.vue?3c13","webpack://nottvbeta/./resources/js/Components/Pages/GoLive/GoLivePushDestinations.vue?e3d7","webpack://nottvbeta/./resources/js/Components/Pages/GoLive/GoLivePushDestinations.vue","webpack://nottvbeta/./resources/js/Components/Pages/GoLive/GoLiveCommercialBreaks.vue","webpack://nottvbeta/./resources/js/Components/Pages/GoLive/GoLiveCommercialBreaks.vue?f15d","webpack://nottvbeta/./resources/js/Components/Global/GoLive/GoLive.vue?3856","webpack://nottvbeta/./resources/js/Components/Global/GoLive/GoLive.vue","webpack://nottvbeta/./resources/js/Components/Global/Modals/Messages.vue?dfe9","webpack://nottvbeta/./resources/js/Components/Global/Modals/Messages.vue","webpack://nottvbeta/./resources/js/Components/Global/Modals/PopUpModal.vue?0d51","webpack://nottvbeta/./resources/js/Components/Global/Modals/PopUpModal.vue","webpack://nottvbeta/./resources/js/Components/Pages/ShowEpisodes/Elements/ManageShowEpisodeNoticeModals.vue","webpack://nottvbeta/./resources/js/Pages/GoLive.vue?e1d2","webpack://nottvbeta/./resources/js/Pages/GoLive.vue"],"sourcesContent":["import { defineStore } from 'pinia'\nimport { useNotificationStore } from '@/Stores/NotificationStore'\nimport { useVideoPlayerStore } from '@/Stores/VideoPlayerStore'\nimport { useVideoAuxPlayerStore } from '@/Stores/VideoAuxPlayerStore'\nimport videojs from 'video.js'\n\nconst initialState = () => ({\n    displayEpisodeGoLiveComponent: false,\n    isEpisode: null,\n    episode: null,\n    selectedEpisodeId: null,\n    preSelectedShowId: null,\n    selectedShowId: null,\n    // selectedShow: null, this uses the getter... set it up in the component as a computed property\n    shows: [], // Assuming you might want to store shows here too\n    streamKey: '', // Optional: Store the generated stream key if needed\n    wildcardId: '',\n    isLive: false,\n    isRecording: false,\n    streamInfo: null,\n    rtmpUri: null,\n    destinations: [], // New state for holding destinations\n    otherShowDestinations: [],\n    loadingOtherDestinations: false,\n    isLoadingDestinations: false,\n    loadingDestinationId: null,\n    processingRecordingChange: false,\n    isProcessingDisableAllAutoPushes: false,\n    playerIsReloading: false,\n    pushDestinationFormSubmitProcessing: false,\n    mistServerUri: null,\n    previousStreamStatus: null,\n    mistStreamPushDestinationFormModalMode: null,\n    destinationDetails: {},\n})\n\nexport const useGoLiveStore = defineStore('goLiveStore', {\n    state: initialState,\n    actions: {\n        reset() {\n            // Reset the store to its original state (clear all data)\n            Object.assign(this, initialState())\n        },\n        async fetchShows() {\n            try {\n                const response = await axios.get('/go-live/shows') // Adjust the URL as needed\n                this.shows = response.data\n            } catch (error) {\n                // console.error('Failed to fetch shows:', error)\n                // Handle error appropriately\n            }\n        },\n\n\n        // temporarily commenting this out\n        async generateStreamKey() {\n            if (!this.selectedShowId) {\n                // console.error('No show selected')\n                throw new Error('No show selected') // Throw an error to be caught by the caller\n            }\n\n            try {\n                const response = await axios.post(`/go-live/shows/${this.selectedShowId}/stream-key`)\n                // console.log('Stream key generated:', response.data)\n                // this.streamKey = response.data.stream_key // Assuming the response includes the stream key\n                // console.log('this new stream key: ' + this.streamKey)\n                // console.log('response data stream key: ' + response.data.stream_key)\n                // Update goLiveStore.selectedShow.mist_stream_wildcard_id with the returned stream key\n                if (this.selectedShowId && response.data.stream_key) {\n                    this.selectedShow.mist_stream_wildcard = response.data\n                    this.selectedShow.mist_stream_wildcard_id = response.data.stream_key\n                }\n                return response.data // Return the response data\n            } catch (error) {\n                // console.error('Error generating stream key:', error.response ? error.response.data : error)\n                throw error // Re-throw the error to be caught by the component\n            }\n        },\n\n        // Other actions...\n        updateAndGetStreamKey() {\n            const show = this.shows.find(show => show.id === this.selectedShowId) || null\n            const streamKey = show?.mist_stream_wildcard?.name || ' < RELOAD THIS PAGE TO GET YOUR STREAM KEY > '\n\n            // Perform the state update\n            this.streamKey = streamKey\n\n            // Return the stream key for immediate use\n            return streamKey\n        },\n\n\n        // async generateStreamKey() {\n        //     if (!this.selectedShowId) {\n        //         console.error(\"No show selected\");\n        //         throw new Error(\"No show selected\");\n        //     }\n        //\n        //     try {\n        //         const response = await axios.post(`/go-live/shows/${this.selectedShowId}/stream-key`);\n        //         console.log(\"Stream key generated:\", response.data);\n        //\n        //         // Find the index of the selected show in the shows array\n        //         const selectedIndex = this.shows.findIndex(show => show.id === this.selectedShowId);\n        //         if (selectedIndex !== -1) {\n        //             // Update the selected show with the new stream key information\n        //             this.shows[selectedIndex].mist_stream_wildcard = response.data;\n        //             this.shows[selectedIndex].mist_stream_wildcard_id = response.data.stream_key;\n        //         }\n        //         return response.data;\n        //     } catch (error) {\n        //         console.error(\"Error generating stream key:\", error.response ? error.response.data : error);\n        //         throw error;\n        //     }\n        // },\n\n\n        // setPreSelectedShowId(id) {\n        //     this.preSelectedShowId = id;\n        //     console.log('preSelectedShowId updated to:', this.preSelectedShowId);\n        // },\n        // Action to update selectedShowId and selectedShow based on selectedShowId\n        setSelectedShowId(showId) {\n            this.selectedShowId = showId\n            this.updateSelectedShow() // Call the method to update selectedShow based on new selectedShowId\n        },\n        // Method to find and update selectedShow based on selectedShowId\n        updateSelectedShow() {\n            this.selectedShow = this.shows.find(show => show.id === this.selectedShowId) || null\n        },\n        goLive() {\n            this.isLive = true\n        },\n        stopLive() {\n            this.isLive = false\n        },\n        async startRecording() {\n            // console.log('1 start recording in Go Live Store')\n            const notificationStore = useNotificationStore()\n            const showSlug = this.selectedShow.slug\n            // console.log(`Starting recording for show ${showSlug}`)\n            this.processingRecordingChange = true\n            try {\n                // console.log('2a post to /mist-stream/start-recording/')\n                const response = await axios.post('/mist-stream/start-recording/' + showSlug, {\n                    stream_name: this.streamKey,\n                })\n                // console.log('5 and we\\'re back in the GoLiveStore')\n                // console.log('Recording started successfully:', response.data)\n                // console.log('Stream Name:', this.streamKey)\n                const {message, status} = response.data\n                // Use the status from the response for the notification\n                notificationStore.setToastNotification(message, status)\n                // Update the recording status\n                this.isRecording = true\n            } catch (error) {\n                // console.error('Error starting push:', error)\n                notificationStore.setToastNotification('Failed to start recording.', 'error')\n                // Handle the error appropriately in your UI\n            } finally {\n                this.processingRecordingChange = false // Stop processing spinner regardless of outcome\n            }\n        },\n        async stopRecording() {\n            const notificationStore = useNotificationStore()\n            const showSlug = this.selectedShow.slug\n            // console.log(`Stopping recording for show ${showSlug}`)\n            this.processingRecordingChange = true\n            // console.log(`Stopping recording for show ${showSlug}`)\n            try {\n                const response = await axios.post('/mist-stream/stop-recording/' + showSlug, {\n                    stream_name: this.streamKey,\n                })\n                // console.log('Recording stopped successfully:', response.data)\n                const {message, status} = response.data\n                notificationStore.setToastNotification(message, status)\n                // Update the recording status\n                this.isRecording = false\n            } catch (error) {\n                // console.error('Error stopping recording:', error)\n                notificationStore.setToastNotification('Failed to stop push.', 'error')\n            } finally {\n                this.processingRecordingChange = false // Stop processing spinner regardless of outcome\n            }\n        },\n        // async fetchStreamInfo(streamName) {\n        //     try {\n        //         // const response = await fetch(`http://mist.nottv.io:8080/json_${encodedStreamName}.js`); // Replace with your URL\n        //         const response = await fetch(`/fetch-stream-info/${streamName}`) // Replace with your URL\n        //         if (!response.ok) throw new Error('Failed to fetch')\n        //         this.streamInfo = await response.json() // Store the data in serverInfo\n        //     } catch (error) {\n        //         console.error('Error fetching server info:', error)\n        //     }\n        // },\n        async fetchStreamInfo() {\n            const notificationStore = useNotificationStore()\n            // console.log('start fetch stream info...')\n            try {\n                if (!this.mistServerUri) {\n                    await this.fetchMistServerUri()\n                }\n                // Then, use the URI in your next request\n                const response = await axios.post('/fetch-stream-info', {\n                    streamName: this.streamKey,\n                    mistServerUri: this.mistServerUri, // Pass it as a string\n                })\n                // console.log('response returned...')\n                // console.log(response.data);\n                this.streamInfo = response.data.streamInfo || []\n                // Assuming a successful response might look like {\"message\": \"Stream is online\", \"status\": \"success\"}\n                let message, status\n\n                // Check if the response contains an error field\n                if (response.data.streamInfo.error) {\n                    message = response.data.streamInfo.error\n                    status = 'error' // Assuming 'error' as a fallback status\n                    // console.log('error returned...')\n                } else if (response.data.message && response.data.success) {\n                    // If it's a success message with a status\n                    message = response.data.message\n                    status = 'info'\n                    // console.log('success returned...')\n\n                } else {\n                    // Fallback for unexpected response structure\n                    message = 'Received unexpected response from server.'\n                    status = 'info' // Default to 'info' or another appropriate fallback status\n                    // console.log('unexpected response returned...')\n                }\n\n                // Use the status from the response for the notification\n                // notificationStore.setToastNotification(message, status)\n            } catch (error) {\n                // console.error(error);\n                notificationStore.setToastNotification('Failed to fetch stream info.', 'error')\n                // console.log('catch error...')\n            }\n        },\n        async fetchRtmpUri() {\n            try {\n                const response = await fetch(`/fetch-rtmp-uri`)\n                if (!response.ok) throw new Error('Failed to fetch')\n\n                // Parse the plain text body of the response\n                // Store the RTMP URI string in a Vue data property or similar\n                this.rtmpUri = await response.text()\n            } catch (error) {\n                // console.error('Error fetching RTMP URI:', error)\n            }\n        },\n        clearStreamInfo() {\n            this.streamInfo = null\n        },\n        toggleDisplayEpisodeGoLiveComponent(episode) {\n            // const videoPlayerAuxStore = useVideoAuxPlayerStore()\n            // videoPlayerAuxStore.reset()\n            this.displayEpisodeGoLiveComponent = !this.displayEpisodeGoLiveComponent\n            this.isEpisode = !!this.displayEpisodeGoLiveComponent\n            this.episode = episode\n            this.selectedShowId = this?.episode?.show_id\n\n        },\n        updateEpisode(episode) {\n            this.episode = episode\n        },\n        async fetchMistServerUri() {\n            const videoAuxPlayerStore = useVideoAuxPlayerStore()\n            let uriResponse = await axios.get('/mist-server/uri')\n            this.mistServerUri = uriResponse.data\n            videoAuxPlayerStore.setMistServerUri(this.mistServerUri)\n        },\n        async reloadPlayer() {\n            const videoAuxPlayerStore = useVideoAuxPlayerStore()\n            const notificationStore = useNotificationStore()\n            this.playerIsReloading = true // Start loading\n            try {\n                // First, fetch the URI\n\n                // let uriResponse = await axios.get('/mist-server/uri');\n                // this.mistServerUri = uriResponse.data; // Accessing the data prop// erty\n                // // Create an object and set the 'name' property\n                const mistStream = {\n                    name: this.streamKey,\n                }\n                // // Now, use this URI in your next request\n                // const response = await axios.post('/fetch-stream-info', {\n                //     streamName: this.streamKey,\n                //     mistServerUri: this.mistServerUri,\n                // });\n                // Now, you can pass the 'mistStream' object to the method\n                await videoAuxPlayerStore.loadMistStreamVideo(mistStream, true).then(\n                    // await this.fetchStreamInfo(),\n                )\n            } catch (error) {\n                // console.error(error);\n                // notificationStore.setGeneralServiceNotification('Failed to reload player', error)\n                notificationStore.setToastNotification('Failed to reload player.', 'error')\n            } finally {\n                this.playerIsReloading = false // Stop loading regardless of outcome\n            }\n\n        },\n        async fetchOtherShowDestinations() {\n            this.loadingOtherDestinations = true\n            try {\n                const response = await axios.get('/go-live/existing-destinations', {\n                    params: {\n                        showId: this.selectedShowId,\n                        episodeId: this.selectedEpisodeId,\n                    },\n                })\n                this.otherShowDestinations = response.data.destinations\n                this.loadingOtherDestinations = false\n            } catch (error) {\n                notificationStore.setToastNotification('Failed to fetch destinations.', 'error')\n                console.error('Error fetching other show destinations', error)\n                this.loadingOtherDestinations = false\n            }\n        },\n        async copyDestinations(destinationIds) {\n            this.loadingOtherDestinations = true;\n            try {\n                const payload = {\n                    destinationIds,\n                    showId: this.selectedShowId,\n                    episodeId: this.selectedEpisodeId,\n                    mistStreamWildcardId: this.wildcardId\n                };\n                console.log('Sending copy destinations request', payload);\n\n                const response = await axios.post('/go-live/copy-destinations', payload);\n                console.log('Received response', response.data);\n\n                this.destinations = response.data.destinations || [];\n                const notificationStore = useNotificationStore();\n                notificationStore.setToastNotification(response.data.message, response.data.status);\n                this.loadingOtherDestinations = false;\n                return true; // Indicate success\n            } catch (error) {\n                console.error('Error copying destinations', error);\n                const notificationStore = useNotificationStore();\n                notificationStore.setToastNotification('Failed to copy destinations.', 'error');\n                this.loadingOtherDestinations = false;\n                return false; // Indicate failure\n            }\n        },\n        async fetchPushDestinations() {\n            const notificationStore = useNotificationStore()\n            this.isLoadingDestinations = true // Start loading\n            try {\n                const response = await axios.post('/go-live/fetch-push-destinations', {\n                    showId: this.selectedShowId,\n                    streamName: this.streamKey,\n                    backgroundFetch: false,\n                })\n                // console.log(response.data);\n                this.destinations = response.data.destinations || []\n                this.isRecording = response.data.recording || false\n                console.log('response about recording: ' + response.data.recording)\n                // Extract message and status from the response\n                const {message, status} = response.data\n                // Use the status from the response fo\n                // r the notification\n                // notificationStore.setToastNotification(message, status)\n            } catch (error) {\n                // console.error(error);\n                // notificationStore.setGeneralServiceNotification('Failed to reload player', error)\n                notificationStore.setToastNotification('Failed to fetch push destinations.', 'error')\n            } finally {\n                this.isLoadingDestinations = false // Stop loading regardless of outcome\n            }\n        },\n        async backgroundFetchPushDestinations() {\n            // Background Fetch doesn't use Toast Notifications,\n            // Keep the fetch silent in the background.\n\n            this.isLoadingDestinations = true // Start loading\n            try {\n                const response = await axios.post('/go-live/fetch-push-destinations/', {\n                    showId: this.selectedShowId,\n                    streamName: this.streamKey,\n                    backgroundFetch: true,\n                })\n                this.destinations = response.data.destinations || []\n                this.isRecording = response.data.recording || false\n            } catch (error) {\n                // console.error(error);\n                // notificationStore.setGeneralServiceNotification('Error Fetching Push Destinations', error)\n                notificationStore.setToastNotification('Failed to fetch push destinations.', 'error')\n            } finally {\n                this.isLoadingDestinations = false // Stop loading regardless of outcome\n            }\n        },\n        async deleteDestination(destinationId) {\n            // Confirm deletion with the user before proceeding\n            if (confirm(`Are you sure you want to delete the destination with ID: ${destinationId}?`)) {\n                try {\n                    // Perform the delete operation\n                    await axios.delete('/mist-stream-push-destinations/' + destinationId)\n                    // Optionally, remove the item from your local state to update the UI\n                    this.destinations = this.destinations.filter(destination => destination.id !== destinationId)\n                } catch (error) {\n                    notificationStore.setGeneralServiceNotification('Error deleting destination', error)\n                    // console.error(`Error deleting destination with ID: ${destinationId}`, error)\n                }\n            }\n        },\n        async startPush(destinationId, fullPushUri) {\n            const notificationStore = useNotificationStore()\n            this.loadingDestinationId = destinationId\n            // console.log(`Starting push for destination ${destinationId}`)\n            try {\n                const response = await axios.post('/mist-stream/start-push', {\n                    destination_id: destinationId,\n                    full_push_uri: fullPushUri,\n                    stream_name: this.streamKey,\n                })\n                // console.log('Push started successfully:', response.data)\n                // console.log('Destination ID:', destinationId)\n                // console.log('Full Push URI:', fullPushUri)\n                // console.log('Stream Name:', this.streamKey)\n                const {message, status} = response.data\n                // Use the status from the response for the notification\n                notificationStore.setToastNotification(message, status)\n                // Update the component's state to reflect the change\n                const index = this.destinations.findIndex(destination => destination.id === destinationId)\n                if (index !== -1) {\n                    this.destinations[index].push_is_started = 1\n                }\n            } catch (error) {\n                // console.error('Error starting push:', error)\n                notificationStore.setToastNotification('Failed to start push.', 'error')\n                // Handle the error appropriately in your UI\n            } finally {\n                this.loadingDestinationId = null // Stop loading regardless of outcome\n            }\n        },\n        async stopPush(destinationId) {\n            const notificationStore = useNotificationStore()\n            this.loadingDestinationId = destinationId\n            // console.log(`Stopping push for destination ${destinationId}`)\n            try {\n                const response = await axios.post('/mist-stream/stop-push', {destination_id: destinationId})\n                // console.log('Push stopped successfully:', response.data)\n                const {message, status} = response.data\n                notificationStore.setToastNotification(message, status)\n                // Update the component's state to reflect the change\n            } catch (error) {\n                // console.error('Error stopping push:', error)\n                notificationStore.setToastNotification('Failed to stop push.', 'error')\n            } finally {\n                this.loadingDestinationId = null // Stop loading regardless of outcome\n                const index = this.destinations.findIndex(destination => destination.id === destinationId)\n                if (index !== -1) {\n                    this.destinations[index].push_is_started = 0\n                }\n            }\n        },\n        async enableAutoPush(destinationId) {\n            this.loadingDestinationId = destinationId\n            const notificationStore = useNotificationStore()\n            try {\n                const response = await axios.post('/mist-stream/push-auto-add/' + destinationId)\n                // console.log('Auto push enabled successfully:', response.data)\n                const {message, status} = response.data\n                notificationStore.setToastNotification(message, status)\n                const index = this.destinations.findIndex(destination => destination.id === destinationId)\n                if (index !== -1) {\n                    this.destinations[index].has_auto_push = 1\n                }\n            } catch (error) {\n                // console.error('Error enabling auto push:', error)\n                notificationStore.setToastNotification('Failed to enable auto push.', 'error')\n            } finally {\n                this.loadingDestinationId = null // Stop loading regardless of outcome\n            }\n        },\n        async disableAutoPush(destinationId) {\n            const notificationStore = useNotificationStore()\n            this.loadingDestinationId = destinationId\n            try {\n                const response = await axios.post('/mist-stream/push-auto-remove/' + destinationId)\n                // console.log('Auto push removed successfully:', response.data)\n                const {message, status} = response.data\n                notificationStore.setToastNotification(message, status)\n                const index = this.destinations.findIndex(destination => destination.id === destinationId)\n                if (index !== -1) {\n                    this.destinations[index].has_auto_push = 0\n                }\n            } catch (error) {\n                // console.error('Error disabling auto push:', error)\n                notificationStore.setToastNotification('Failed to disable auto push.', 'error')\n            } finally {\n                this.loadingDestinationId = null // Stop loading regardless of outcome\n            }\n        },\n        async disableAllAutoPushes() {\n            const notificationStore = useNotificationStore()\n            this.isProcessingDisableAllAutoPushes = true\n            try {\n                const response = await axios.post('/mist-stream/remove-all-auto-pushes-for-stream', {'streamName': this.streamKey})\n                // console.log('Auto push disabled successfully:', response.data)\n                const {message, status} = response.data\n                notificationStore.setToastNotification(message, status)\n                await this.fetchPushDestinations()\n            } catch (error) {\n                // console.error('Error disabling auto push:', error)\n                notificationStore.setToastNotification('Failed to disable auto push.', 'error')\n            } finally {\n                this.isProcessingDisableAllAutoPushes = false // Stop loading regardless of outcome\n                await this.fetchPushDestinations()\n            }\n        },\n    },\n    getters: {\n        selectedShow: (state) => {\n            const show = state.shows.find(show => show.id === state.selectedShowId) || null\n            state.streamKey = show?.mist_stream_wildcard?.name || 'Fallback value if undefined'\n            state.wildcardId = show?.mist_stream_wildcard?.id || 'Fallback value if undefined'\n            state.isRecording = show?.mist_stream_wildcard?.is_recording || false\n            return show\n        },\n        fullRtmpUri: (state) => {\n            return state.rtmpUri ? state.rtmpUri + 'live/' : ''\n        },\n        fullUrl: (state) => {\n            // Directly construct fullRtmpUri from state\n            const fullRtmpUri = state.rtmpUri ? state.rtmpUri + 'live/' : ''\n\n            // Directly find the show based on selectedShowId to avoid using getters\n            // const show = state.shows.find(show => show.id === state.selectedShowId) || null;\n            // const streamKey = show?.mist_stream_wildcard?.name || 'Fallback value if undefined';\n\n            // Return the concatenated URL\n            return `${fullRtmpUri}${state.streamKey}`\n        },\n        // Example getter that might filter destinations based on some criteria\n        activeDestinations: (state) => {\n            return state.destinations.filter(destination => destination.push_is_started)\n        },\n        sourceName: (state) => {\n            if (state.selectedShow?.mist_stream_wildcard?.name) {\n                return state.selectedShow.mist_stream_wildcard.name\n            } else if (state.episode?.mist_stream_wildcard?.name) {\n                return state.episode.mist_stream_wildcard.name\n            }\n            return null // No source available\n        },\n        streamOffline: (state) => {\n            // Check if the 'error' key exists and if its value is 'Stream is offline'\n            // If streamInfo is null or undefined, it defaults to an empty object {}\n            return (state.streamInfo?.error ?? '') === 'Stream is offline'\n        },\n    },\n\n\n})\n","import { defineStore } from 'pinia';\n\nconst initialState = () => ({\n    apiRequest: [],\n    challenge: [],\n    status: [],\n    apiResponse: [],\n    apiActiveStreams: [],\n    mistUsername: [],\n    mistPassword: [],\n    mistStatus: Boolean,\n    mistDisplayPushForm: Boolean,\n    mistDisplay: String,\n    mistNewHashedPassword: [],\n    mistStreamPushDestinations: [],\n});\n\nexport const useMistStore = defineStore('mistStore', {\n    state: initialState,\n    actions: {\n        reset() {\n            // Reset the store to its original state (clear all data)\n            Object.assign(this, initialState());\n        },\n        // add additional actions here\n        async getMistStreamPushDestinations(wildcardId) {\n\n\n            //////////////////////////\n            // replaced by goLiveStore\n            /////////////////////////\n\n\n            // // Assuming `goLiveStore.selectedShow.mist_stream_wildcard.id` holds the wildcard ID\n            // // const wildcardId = goLiveStore?.selectedShow?.mist_stream_wildcard?.id\n            // if (wildcardId) {\n            //     try {\n            //         // Append the wildcard ID as a query parameter\n            //         const response = await axios.get(`/mist-stream-push-destinations?wildcardId=${wildcardId}`)\n            //         this.mistStreamPushDestinations = response.data // Update the reactive variable\n            //     } catch (error) {\n            //         console.error('Failed to fetch push destinations:', error)\n            //     }\n            // } else {\n            //     console.error('No wildcard ID found (getMistStreamPushDestinations)')\n            // }\n        },\n        async getMistStreamPushAutoList(wildcardId) {\n            // Assuming `goLiveStore.selectedShow.mist_stream_wildcard.id` holds the wildcard ID\n            // const wildcardId = goLiveStore?.selectedShow?.mist_stream_wildcard?.id\n            if (wildcardId) {\n                try {\n                    // Append the wildcard ID as a query parameter\n                    const response = await axios.post(`/mist-stream/get-push-auto-list?wildcardId=${wildcardId}`)\n                    this.mistStreamPushDestinations = response.data // Update the reactive variable\n                } catch (error) {\n                    console.error('Failed to fetch push auto list:', error)\n                }\n            } else {\n                console.error('No wildcard ID found (getMistStreamPushAutoList)')\n            }\n        },\n        async getMistStreamPushList(wildcardId) {\n            // Assuming `goLiveStore.selectedShow.mist_stream_wildcard.id` holds the wildcard ID\n            // const wildcardId = goLiveStore?.selectedShow?.mist_stream_wildcard?.id\n            if (wildcardId) {\n                try {\n                    // Append the wildcard ID as a query parameter\n                    const response = await axios.post(`/mist-stream/get-push-list?wildcardId=${wildcardId}`)\n                    this.mistStreamPushDestinations = response.data // Update the reactive variable\n                } catch (error) {\n                    console.error('Failed to fetch push list:', error)\n                }\n            } else {\n                console.error('No wildcard ID found (getMistStreamPushList)')\n            }\n        },\n        // async startPush(destinationId) {\n        //     console.log(`Starting push for destination ${destinationId}`)\n        //     const data = {destinationId}\n        //\n        //     try {\n        //         const response = await axios.post('/mist-stream/start-push', data, {\n        //             headers: {\n        //                 'Content-Type': 'application/json',\n        //             },\n        //         })\n        //\n        //         console.log('Push started successfully:', response.data)\n        //         // Update the component's state to reflect the change\n        //         const index = this.mistStreamPushDestinations.findIndex(destination => destination.id === destinationId)\n        //         if (index !== -1) {\n        //             this.mistStreamPushDestinations[index].push_is_started = 1\n        //         }\n        //     } catch (error) {\n        //         console.error('Error starting push:', error)\n        //         // Handle the error appropriately in your UI\n        //     }\n        // },\n        // async stopPush(destinationId) {\n        //     console.log(`Stopping push for destination ${destinationId}`)\n        //     const data = {destinationId}\n        //\n        //     try {\n        //         const response = await axios.post('/mist-stream/stop-push', data, {\n        //             headers: {\n        //                 'Content-Type': 'application/json',\n        //             },\n        //         })\n        //\n        //         console.log('Push stopped successfully:', response.data)\n        //         // Update the component's state to reflect the change\n        //         const index = this.mistStreamPushDestinations.findIndex(destination => destination.id === destinationId)\n        //         if (index !== -1) {\n        //             this.mistStreamPushDestinations[index].push_is_started = 0\n        //         }\n        //     } catch (error) {\n        //         console.error('Error stopping push:', error)\n        //         // Handle the error appropriately in your UI\n        //     }\n        // },\n        // async enableAutoPush(destinationId) {\n        //     const data = {\n        //         destinationId,\n        //     }\n        //\n        //     try {\n        //         const response = await axios.post('/mist-stream/push-auto-add', data, {\n        //             headers: {\n        //                 'Content-Type': 'application/json',\n        //             },\n        //         })\n        //         console.log('Auto push enabled successfully:', response.data)\n        //         const index = this.mistStreamPushDestinations.findIndex(destination => destination.id === destinationId)\n        //         if (index !== -1) {\n        //             this.mistStreamPushDestinations[index].has_auto_push = 1\n        //         }\n        //     } catch (error) {\n        //         console.error('Error enabling auto push:', error)\n        //     }\n        // },\n        // async disableAutoPush(destinationId) {\n        //     console.log(`Disabling auto push for destination ${destinationId}`)\n        //     const data = {\n        //         destinationId,\n        //     }\n        //\n        //     try {\n        //         const response = await axios.post('/mist-stream/push-auto-remove', data, {\n        //             headers: {\n        //                 'Content-Type': 'application/json',\n        //             },\n        //         })\n        //\n        //         console.log('Auto push disabled successfully:', response.data)\n        //         const index = this.mistStreamPushDestinations.findIndex(destination => destination.id === destinationId)\n        //         if (index !== -1) {\n        //             this.mistStreamPushDestinations[index].has_auto_push = 0\n        //         }\n        //     } catch (error) {\n        //         console.error('Error disabling auto push:', error)\n        //     }\n        // },\n        // async deleteDestination (destinationId) {\n        //     // Confirm deletion with the user before proceeding\n        //     if (confirm(`Are you sure you want to delete the destination with ID: ${destinationId}?`)) {\n        //         try {\n        //             // Perform the delete operation\n        //             await axios.delete('/mist-stream-push-destinations/'+destinationId)\n        //             // Optionally, remove the item from your local state to update the UI\n        //             this.mistStreamPushDestinations = this.mistStreamPushDestinations.filter(destination => destination.id !== destinationId)\n        //         } catch (error) {\n        //             console.error(`Error deleting destination with ID: ${destinationId}`, error)\n        //         }\n        //     }\n        // }\n    }\n});\n","import { defineStore } from 'pinia'\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\nimport { useStreamStore } from '@/Stores/StreamStore'\nimport { useUserStore } from '@/Stores/UserStore'\nimport { useChannelStore } from '@/Stores/ChannelStore'\nimport { useShowStore } from '@/Stores/ShowStore'\nimport { useAudioStore } from '@/Stores/AudioStore'\nimport videojs from 'video.js'\nimport { usePage } from '@inertiajs/vue3'\nimport { nextTick } from 'vue'\nimport { useNotificationStore } from '@/Stores/NotificationStore'\n\nconst initialState = () => ({\n    mistServerUri: 'https://mist.nottv.io/', // tec21: 2024-02-09, if we don't start with the address here changing channels is really slow and buggy. Address for the MistServer listed in the Admin Settings saved in AppSetting\n    player: null, // Video.js player instance\n    eventListenersAttached: false, // Track if listeners are attached\n    videoPlayerLoaded: false,\n    class: '',\n    videoContainerClass: '',\n    // ottClass: 'OttClose',\n    videoSourceIdSrc1: '',\n    videoSourceIdSrc2: '',\n    videoSourceIdSrc3: '',\n    videoSourceTypeSrc1: '',\n    videoSourceTypeSrc2: '',\n    videoSourceTypeSrc3: '',\n    firstPlayVideoSourceType: '',\n    firstPlayVideoSource: '',\n    key: '',\n    videoName: '',\n    videoSource: '',\n    videoSourceType: '',\n    videoPoster: '',\n    nextSource: '',\n    previousSource: '',\n    currentView: '',\n    currentChannelId: 0,\n    currentChannelName: '',\n    currentShow: {},\n    currentShowEpisode: {},\n    currentVideo: {},\n    hasVideo: false,\n    controls: true,\n    muted: true,\n    paused: true,\n    // videoCurrentTime: '',\n    currentTime: 0, // Current playback time in seconds\n    duration: 0, // Total video duration in seconds\n    formattedTime: '00:00 / 00:00', // Formatted time string\n    blue: false, // DO NOT REMOVE\n    videoIsYoutube: false,\n    videoUploadComplete: false,\n})\n\nexport const useVideoAuxPlayerStore = defineStore('videoAuxPlayerStore', {\n    state: initialState,\n    actions: {\n        reset() {\n            // Reset the store to its original state (clear all data)\n            Object.assign(this, initialState())\n        },\n\n        async getMistServerUri() {\n            try {\n                let response = await axios.get('/mist-server/uri')\n                this.mistServerUri = response.data\n            } catch (error) {\n                console.error(error)\n            }\n        },\n\n        // Initialize or update the player instance\n        setPlayer(playerInstance) {\n            this.player = playerInstance\n            this.initializePlayer().then(() => {\n                this.attachEventListeners() // Attach event listeners after initialization\n            }).catch(error => {\n                console.error('Error during video player initialization:', error)\n            })\n        },\n\n        // Initialize the player with necessary settings and start playback\n        async initializePlayer() {\n            if (!this.player) {\n                console.error('Video.js player is not initialized.')\n                return\n            }\n\n            await nextTick() // Ensure Vue's DOM updates are processed\n\n            // Perform any necessary audio context and node setup\n            await useAudioStore().ensureAudioContextAndNodesReady(this.player)\n\n            // Apply initial player settings\n            this.player.controls(false)\n            this.player.muted(this.muted)\n\n            // Attempt to start playback\n            this.player.ready(() => {\n                this.player.play().then(() => {\n                    console.log('Playback started successfully')\n                }).catch(error => {\n                    console.error('Error trying to play the video:', error)\n                    // Handle the error (e.g., showing a user-friendly message)\n                })\n            })\n        },\n\n        // Attach event listeners to the player\n        attachEventListeners() {\n            if (!this.player || this.eventListenersAttached) {\n                console.log('Event listeners are already attached or video player is not initialized.')\n                return\n            }\n\n            this.player.on('timeupdate', this.handleTimeUpdate)\n            this.player.on('fullscreenchange', this.handleFullscreenChange)\n            this.player.on('play', this.handlePlay)\n            this.player.on('pause', this.handlePause)\n            this.player.on('error', this.handleError)\n\n            this.eventListenersAttached = true\n            console.log('Event listeners attached.')\n        },\n\n        // Detach event listeners from the player\n        detachEventListeners() {\n            if (!this.player || !this.eventListenersAttached) {\n                console.log('Event listeners are already detached or video player is not initialized.')\n                return\n            }\n\n            useAudioStore().stopAudioLevelMonitoring()\n            this.player.off('timeupdate', this.handleTimeUpdate)\n            this.player.off('fullscreenchange', this.handleFullscreenChange)\n            this.player.off('play', this.handlePlay)\n            this.player.off('pause', this.handlePause)\n            this.player.off('error', this.handleError)\n\n            this.eventListenersAttached = false\n            console.log('Event listeners detached.')\n        },\n\n        // Dispose of the player and perform cleanup\n        disposePlayer() {\n            if (!this.player) {\n                console.error('Video player is not initialized.')\n                return\n            }\n            this.detachEventListeners() // Detach event listeners if attached\n            this.player.dispose() // Dispose of the player instance\n            this.player = null // Reset the player state\n\n            // Optionally, stop audio level monitoring if linked to the player lifecycle\n            // const audioStore = useAudioStore();\n            // audioStore.stopAudioLevelMonitoring();\n\n            console.log('Video player disposed and cleaned up.')\n        },\n\n        // New method to prepare for a new video source\n        prepareForNewVideoSource(source) {\n            console.log('Preparing for new video source')\n\n            // Example: Clear any existing channel or video-specific state\n            // useChannelStore().clearChannel()\n\n            // Reset or cleanup any existing video playback, if necessary\n            // this.resetPlayback();\n\n            // Load and play the new video source\n            this.loadNewVideo(source)\n        },\n\n        resetPlayback() {\n            if (this.player) {\n                this.player.pause()\n                this.player.muted(true)\n                this.player.currentTime(0) // Optionally reset the time\n                // Further cleanup logic here, if necessary\n                this.detachEventListeners() // Detach event listeners if attached\n            }\n        },\n\n        // Event handlers\n        handleTimeUpdate() {\n            // console.log('Handling timeupdate...');\n            // Implement your logic\n            this.currentTime = this.player.currentTime()\n            this.duration = this.player.duration()\n            const progressPercentage = (this.currentTime / this.duration) * 100\n            this.formattedTime = `${this.formatDuration(this.currentTime)} / ${this.formatDuration(this.duration)}`\n\n            // Update UI elements or emit events as needed\n            // Note: Direct manipulation of the DOM or component refs from the store is not recommended\n\n        },\n        // for the handleTimeUpdate eventHandler\n        formatDuration(durationInSeconds) {\n            const hours = Math.floor(durationInSeconds / 3600)\n            const minutes = Math.floor((durationInSeconds % 3600) / 60)\n            const seconds = Math.floor(durationInSeconds % 60)\n\n            const parts = [hours, minutes, seconds].map(part => part.toString().padStart(2, '0'))\n            return parts.join(':')\n        },\n        handleFullscreenChange() {\n            console.log('Handling fullscreenchange...')\n            // Implement your logic\n            this.player?.on('fullscreenchange', () => {\n                if (this.player.isFullscreen()) {\n                    // Video is entering fullscreen mode\n                    // You can add custom behavior for entering fullscreen here if needed\n                } else {\n                    // Video is exiting fullscreen mode\n                    // Check if the video was playing before entering fullscreen\n                    if (this.player.paused() === false) {\n                        // Resume playback after exiting fullscreen\n                        this.player.play()\n                    }\n                }\n            })\n        },\n        handlePlay() {\n            console.log('Handling play...')\n            // Implement your logic\n            this.player?.on('play', () => {\n                this.paused = false\n            })\n        },\n        handlePause() {\n            console.log('Handling pause...')\n            // Implement your logic\n            this.player?.on('pause', () => {\n                this.paused = true\n            })\n        },\n        handleError() {\n            console.log('Handling error...')\n            // Implement your logic\n            this.player?.on('error', function () {\n                const error = this.player.error()\n                console.error('Video.js Error:', error.code, error.message)\n            })\n        },\n        makeBlue() {\n            // for testing. DO NOT REMOVE.\n            this.blue = true\n        },\n        // Apparently this loadFirstPlay isn't being used...\n        // loadFirstPlay() {\n        //     const {props} = usePage()\n        //     let videoJs = videojs('aux-player')\n        //     const type = props.firstPlayVideoSourceType\n        //     const src = props.firstPlayVideoSource\n        //     videoJs.ready(() => {\n        //         videoJs.src({src, type})\n        //         videoJs.play().then(() => {\n        //             console.log('Playback started successfully')\n        //         }).catch(error => {\n        //             console.error('Error trying to play the video:', error)\n        //             // Handle the error (e.g., showing a user-friendly message)\n        //         })\n        //     })\n        //     console.log(type)\n        //     console.log(src)\n        // },\n        // Toggle mute state\n        toggleMute() {\n            if (this.muted) {\n                this.unMute()\n            } else {\n                this.mute()\n            }\n        },\n        // Mute the video\n        mute() {\n            if (this.player) {\n                this.player.muted(true)\n                this.muted = true\n            }\n        },\n        // Unmute the video\n        unMute() {\n            // const audioStore = useAudioStore()\n\n            if (this.player) {\n                // Prepare audio setup for when it's unmuted\n                // audioStore.userInteractionForAudio()\n\n                // Optionally, if fadeInAudioFromMuted is a gradual process,\n                // ensure this.player.muted(false) is called within that function.\n                // audioStore.fadeInAudioFromMuted()\n\n                this.player.muted(false)\n                this.muted = false\n            }\n        },\n        togglePlay() {\n            let videoJs = videojs('aux-player')\n\n            if (this.paused) {\n                videoJs.play()\n            } else {\n                videoJs.pause()\n            }\n        },\n        load() {\n            let videoJs = videojs('aux-player')\n            videoJs.load()\n        },\n        loadNewLiveSource(source, sourceType) {\n            let videoJs = videojs('aux-player')\n            let fullSourceUrl = this.mistServerUri + '/hls/' + source + '/index.m3u8'\n            videoJs.src({'src': fullSourceUrl, 'type': sourceType});\n            videoJs.play()\n        },\n        pause() {\n            let videoJs = videojs('aux-player')\n            videoJs.controls(false)\n            videoJs.pause()\n            this.paused = true\n        },\n        play() {\n            let videoJs = videojs('aux-player')\n\n            videoJs.play()\n            videoJs.controls(false)\n            this.paused = false\n        },\n        // next not built yet\n        next() {\n            let videoJs = videojs('aux-player')\n            videoJs.controls(false)\n            videoJs.src(this.nextSource)\n        },\n        // back not built yet\n        back() {\n            let videoJs = videojs('aux-player')\n            videoJs.controls(false)\n            videoJs.src(this.previousSource)\n        },\n        fullscreen() {\n            let videoJs = videojs('aux-player')\n            videoJs.controls(false)\n            // videoJs.fullscreen(this.previousSource)\n            videoJs.requestFullscreen()\n        },\n        getVideoCurrentTime() {\n            let videoJs = videojs('aux-player')\n            videoJs.controls(false)\n            this.videoCurrentTime = videoJs.currentTime\n        },\n\n\n        // This playNewVideo was created to access the audioContext\n        // which our audio compressor uses. This is new as of 2/2/2024\n        // ~ tec21\n\n        // playNewVideo(source) {\n        //     useChannelStore().clearChannel() // Reset or clear channel store\n        //     const videoJs = videojs('aux-player')\n        //     let videoSrc, videoSourceType\n        //     // Determine the source type and construct the source URL if necessary\n        //     if (source.mediaType === 'externalVideo') {\n        //         videoSrc = source.video_url // Direct URL to the video\n        //         videoSourceType = source.type // MIME type, e.g., 'video/youtube', 'video/mp4'\n        //     } else {\n        //         // Construct file path for internal videos\n        //         videoSrc = `${source.cdn_endpoint}${source.cloud_folder}${source.folder}/${source.file_name}`\n        //         videoSourceType = source.type // MIME type, typically 'video/mp4' for file-based sources\n        //     }\n        //     this.resumeAudioContextIfNeeded()\n        //     videoJs.src({src: videoSrc, type: videoSourceType})\n        //     videoJs.muted(false)\n        // },\n\n        // getSourceDetails(source) {\n        //     let videoSrc = source.video_url; // Directly access the video URL\n        //\n        //     // Default to 'video/mp4' if type is falsy ('', null, undefined, etc.)\n        //     let videoSourceType = source.type || 'video/mp4'\n        //\n        //     // Determine the mediaType and construct the source URL if necessary\n        //     if (source.mediaType === 'externalVideo') {\n        //         videoSrc = source.video_url // Direct URL to the video\n        //     } else {\n        //         // Internal video: construct the path, ensuring the file name is encoded\n        //         let encodedFileName = encodeURIComponent(source.file_name);\n        //         console.log(encodedFileName)\n        //         videoSrc = `${source.cdn_endpoint}${source.cloud_folder}${source.folder}/${encodedFileName}`\n        //     }\n        //     // Logic to determine videoSrc and videoSourceType\n        //     console.log(`Video Source: ${videoSrc}, Type: ${videoSourceType}`);\n        //     return { videoSrc, videoSourceType } // Return as an object\n        // },\n\n\n        getSourceDetails(source) {\n            let videoSrc, videoSourceType\n\n            console.log('getSourceDetails called with source:', source);\n\n            // Default to 'video/mp4' if type is not specified or is empty\n            videoSourceType = source.type || 'video/mp4'\n            console.log(`Determined Video Source Type: ${videoSourceType}`);\n\n            if (source.mediaType === 'externalVideo') {\n                // For external videos, use the URL as provided without encoding\n                videoSrc = source.video_url\n                console.log('Using external video source:', videoSrc);\n            } else {\n                console.log('CDN Endpoint:', source.cdn_endpoint);\n                console.log('Cloud Folder:', source.cloud_folder);\n                console.log('Folder:', source.folder);\n                console.log('File Name:', source.file_name);\n                // For internal videos, construct the URL from its components\n                // Here, we assume the cdn_endpoint, cloud_folder, and folder are correctly formatted\n                // and do not require encoding. Only the file_name might need encoding.\n                const basePath = `${source.cdn_endpoint}${source.cloud_folder}${source.folder}/`\n                // const encodedFileName = encodeURIComponent(source.file_name);\n                const fileName = source.file_name\n                videoSrc = basePath + fileName\n                console.log('Constructed internal video source:', videoSrc);\n                // If your server or CDN is configured to handle spaces in URLs without %20 encoding\n                // or if the original working URLs did not use standard URL encoding,\n                // you might adjust the encoding strategy here.\n                // For example, to replace spaces with %20 but leave other characters as-is:\n                // const fileNameForUrl = source.file_name.replace(/ /g, '%20');\n                // videoSrc = basePath + fileNameForUrl;\n            }\n\n            console.log(`Final Constructed Video Source: ${videoSrc}, Type: ${videoSourceType}`);\n            return {videoSrc, videoSourceType}\n        },\n\n\n        loadNewVideo(source) {\n            try {\n                let videoJs = videojs('aux-player');\n                console.log('LOAD NEW VIDEO');\n                const audioStore = useAudioStore();\n                // Correctly destructure the returned object to get videoSrc and videoSourceType\n                const {videoSrc, videoSourceType} = this.getSourceDetails(source);\n\n                // Example: Stopping and cleaning up the current video and audio setup\n                if (videoJs) {\n                    videoJs.src({'src': videoSrc, 'type': videoSourceType});\n\n                    videoJs.ready(() => {\n                        // ensureAudioContextAndNodesReady does the following:\n                        // 1. Resumes AudioContext if suspended.\n                        // 2. (Re)connects MediaElementSource from the video element to AudioContext.\n                        audioStore.deferAudioSetup = false;\n                        audioStore.ensureAudioContextAndNodesReady(videoJs).then(() => {\n                            // Only attempt to play the video after ensuring the AudioContext is ready\n                            videoJs.play().catch(error => {\n                                useNotificationStore().setGeneralServiceNotification('Error', 'Playback initiation error: ' + error)\n                                console.error('Playback initiation error: ', error);\n                            });\n\n                            // Consider toggling mute based on the user's preference or previous state\n                            videoJs.muted(false);\n                            this.muted = false;\n                        });\n                    });\n                }\n            } catch (error) {\n                // Log the error or perform any other error handling\n                useNotificationStore().setGeneralServiceNotification('Error', 'Error loading new video: ' + error)\n                console.error('Error loading new video: ', error);\n            }\n        },\n\n        // loadNewVideo(source) {\n        //     console.log('LOAD NEW VIDEO TTTTTTTTTTTTTTTTTTTTTTTTTS');\n        //     console.log('LOAD NEW VIDEO initiated with source:', source);\n        //     const audioStore = useAudioStore();\n        //     this.unMute();\n        //     // Destructure the returned object to get videoSrc and videoSourceType\n        //     const { videoSrc, videoSourceType } = this.getSourceDetails(source);\n        //     console.log(`Video source details received: Src - ${videoSrc}, Type - ${videoSourceType}`);\n        //\n        //     // Ensure you're using the same player instance (`videoJs` in this context) for consistency\n        //     let videoJs = videojs('aux-player'); // Ensure this ID matches your video player element\n        //     console.log('Video.js player instance created or retrieved.');\n        //\n        //     // Stop and clean up the current video and audio setup if necessary\n        //     videoJs.ready(() => {\n        //         console.log('Video.js player is ready.');\n        //         videoJs.src({ 'src': videoSrc, 'type': videoSourceType });\n        //         console.log(`Video source set: ${videoSrc} of type ${videoSourceType}`);\n        //\n        //         // Ensure AudioContext and nodes are ready\n        //         audioStore.ensureAudioContextAndNodesReady(videoJs).then(() => {\n        //             console.log('Audio context and nodes are ready. Attempting to play video.');\n        //\n        //             videoJs.play().then(() => {\n        //                 console.log('Video playback started successfully.');\n        //             }).catch(error => {\n        //                 console.error('Playback initiation error:', error);\n        //             });\n        //             // Attempt to play the video after ensuring the AudioContext is ready\n        //             // videoJs.play().catch(error => {\n        //             //     console.error('Playback initiation error:', error);\n        //             // });\n        //\n        //             // Apply the unMute logic from loadMistStreamVideo to ensure audio is correctly configured\n        //             this.unMute();\n        //             console.log('Audio unmuted.');\n        //             this.paused = false;\n        //             console.log('Paused flag set to false.');\n        //         }).catch(error => {\n        //             console.error('Error ensuring audio context and nodes are ready:', error);\n        //         });\n        //     });\n        // },\n\n        playNewVideo() {\n            console.log('PLAY NEW VIDEO')\n            if (this.player) {\n                // Wait for the video to be ready before playing\n                this.player.ready(() => {\n                    this.player.play()\n                    // Assuming you want to unmute here; check if this aligns with user interaction policies\n                    this.player.muted(false)\n                    this.muted = false\n                })\n            }\n        },\n\n\n// load video from different types of sources:\n// Url\n// YouTube\n// EmbedCode\n// Mist\n// File\n        loadNewSourceFromYouTube(source) {\n            this.videoIsYoutube = true\n            useChannelStore().clearChannel()\n            let videoJs = videojs('aux-player')\n            this.videoSource = source\n            this.videoSourceType = 'video/youtube'\n            videoJs.src({'src': this.videoSource, 'type': this.videoSourceType})\n            videoJs.controls(false)\n            this.unMute()\n            this.paused = false\n        },\n        loadNewLiveSourceFromRumble(source) {\n            this.videoIsYoutube = true\n            useChannelStore().clearChannel()\n            let videoJs = videojs('aux-player')\n            this.videoSource = source\n            this.videoSourceType = 'application/x-mpegURL'\n            videoJs.src({'src': this.videoSource, 'type': this.videoSourceType})\n            videoJs.controls(false)\n            this.unMute()\n            this.paused = false\n        },\n        loadNewSourceFromUrl(source) {\n            try {\n                this.videoIsYoutube = false;\n                useChannelStore().clearChannel();\n                let videoJs = videojs('aux-player');\n\n                if (!source.video_url || !source.type) {\n                    useNotificationStore().setGeneralServiceNotification('Error', 'Invalid video source.')\n                    throw new Error(\"Invalid video source.\");\n                }\n\n                this.videoSource = source.video_url;\n                this.videoSourceType = source.type;\n                videoJs.src({'src': source.video_url, 'type': source.type});\n\n                this.unMute();\n                this.paused = false;\n            } catch (error) {\n                useNotificationStore().setGeneralServiceNotification('Error', 'Failed to load new source: ' + error)\n                console.error(\"Failed to load new source:\", error);\n                throw error; // Re-throw the error to be caught by the caller\n            }\n        },\n        loadNewSourceFromMist(source) {\n            this.videoIsYoutube = false\n            let videoJs = videojs('aux-player')\n            let filePath = 'https://mist.not.tv/hls/'\n            this.videoSource = filePath + source + '/index.m3u8'\n            this.videoSourceType = 'application/x-mpegURL'\n            videoJs.src({'src': this.videoSource, 'type': this.videoSourceType})\n            this.unMute()\n            this.paused = false\n        },\n        loadNewSourceFromFile(source) {\n            this.videoIsYoutube = false\n            useChannelStore().clearChannel()\n            let videoJs = videojs('aux-player')\n            let filePath = source.cdn_endpoint + source.cloud_folder + source.folder + '/'\n            this.videoSource = source.file_name\n            this.videoSourceType = source.type\n            videoJs.src({'src': filePath + this.videoSource, 'type': this.videoSourceType})\n            this.unMute()\n            this.paused = false\n        },\n\n        // The new load video functions (2024-02-09 tec21 and ChatGPT)\n        loadExternalSourceVideo() {\n\n        },\n        loadPlaylistVideos() {\n\n        },\n        async loadMistStreamVideo(mistStream, stayMuted) {\n            let shouldUnmute = true\n            if(stayMuted) {\n                shouldUnmute = false\n            };\n            // console.log('Loading Mist Stream Video for:', mistStream.name); // Log which Mist Stream is being loaded\n            // This mistServerUri comes from appSettings\n            if (!this.mistServerUri) {\n                console.log('Mist Server URI not set, fetching...') // Log fetching attempt\n                await this.getMistServerUri()\n            }\n            if (this.mistServerUri) {\n                // console.log('Mist Server URI:', this.mistServerUri); // Log the URI to confirm it's fetched\n                let basePath = this.mistServerUri\n                this.videoSource = basePath + 'hls/' + mistStream.name + '/index.m3u8'\n                // console.log('Video Source Set To:', this.videoSource); // Log the final video source\n\n                this.videoSourceType = 'application/vnd.apple.mpegURL'\n                // console.log('Setting player source to:', this.videoSource, 'of type:', this.videoSourceType); // Log the source setting\n                let videoJs = videojs('aux-player')\n                videoJs.src({'src': this.videoSource, 'type': this.videoSourceType})\n                if (shouldUnmute) {\n                    this.unMute()\n                }\n                this.paused = false\n            } else {\n                console.error('Mist Server URI is still not set after fetching.')\n            }\n            // let basePath = this.mistServerUri\n            // this.videoSource = basePath + 'hls/' + mistStream.name + '/index.m3u8'\n            // this.videoSourceType = \"application/vnd.apple.mpegURL\"\n            // this.player.src({'src': this.videoSource, 'type': this.videoSourceType})\n            // this.unMute()\n            // this.paused = false\n        },\n        async loadVideoFromFile(video) {\n            // console.log('Loading Mist Stream Video for:', mistStream.name); // Log which Mist Stream is being loaded\n            // This mistServerUri comes from appSettings\n            // if (!this.mistServerUri) {\n            //     console.log('Mist Server URI not set, fetching...') // Log fetching attempt\n            //     await this.getMistServerUri()\n            // }\n            // if (this.mistServerUri) {\n                // console.log('Mist Server URI:', this.mistServerUri); // Log the URI to confirm it's fetched\n                // let basePath = this.mistServerUri\n                // this.videoSource = basePath + 'hls/' + video.name + '/index.m3u8'\n                // console.log('Video Source Set To:', this.videoSource); // Log the final video source\n\n            // this.videoSourceType = 'video/mp4'\n            console.log('Video Source Type:', video.type);\n            console.log('Video URL:', video.video_url);\n            console.log('CDN Endpoint:', video.cdn_endpoint);\n            console.log('Cloud Folder:', video.cloud_folder);\n            console.log('Folder:', video.folder);\n            console.log('File Name:', video.file_name);\n\n            let videoSource = video.cdn_endpoint + video.cloud_folder + video.folder + '/' + video.file_name\n                // console.log('Setting player source to:', this.videoSource, 'of type:', this.videoSourceType); // Log the source setting\n                let videoJs = videojs('aux-player')\n                videoJs.src({'src': videoSource, 'type': video.type})\n                this.unMute()\n                this.paused = false\n            // } else {\n            //     console.error('Mist Server URI is still not set after fetching.')\n            // }\n            // let basePath = this.mistServerUri\n            // this.videoSource = basePath + 'hls/' + mistStream.name + '/index.m3u8'\n            // this.videoSourceType = \"application/vnd.apple.mpegURL\"\n            // this.player.src({'src': this.videoSource, 'type': this.videoSourceType})\n            // this.unMute()\n            // this.paused = false\n        },\n\n\n        setNowPlayingInfoVideoFile(source) {\n            this.nowPlayingType = 'Video File'\n            this.nowPlayingName = source.file_name\n            useStreamStore().currentChannel = 'On Demand'\n        },\n        setNowPlayingInfoShow(show, episode) {\n            this.clearNowPlayingInfo()\n            const showStore = useShowStore()\n\n            if (show.firstPlayVideo) {\n                showStore.setName(show.firstPlayVideo.name)\n                showStore.setEpisodeUrl(`/shows/${show.slug}/episode/${source.firstPlayVideo.slug}`)\n            } else if (episode) {\n                showStore.setName(show.name)\n                showStore.setUrl(`/shows/${show.slug}`)\n                showStore.setEpisodeName(episode.name)\n                showStore.setEpisodeUrl(`/shows/${show.slug}/episode/${episode.slug}`)\n            } else {\n                showStore.setName(show.name)\n                showStore.setUrl(`/shows/${show.slug}`)\n            }\n        },\n// change video size/position and page layout\n        makeVideoPiP() {\n            // const appSettingStore = useAppSettingStore();\n            // const userStore = useUserStore();\n            //\n            // if (userStore.isMobile) {\n            //     let videoJs = videojs('aux-player')\n            //     videoJs.controls(false)\n            //     if(this.fullPage) {\n            //         this.class = 'pipVideoClassFullPage'\n            //         this.videoContainerClass = 'pipVideoContainerFullPage'\n            //     } else {\n            //         this.class = 'pipVideoClassTopRight'\n            //         this.videoContainerClass = 'pipVideoContainerTopRight'\n            //     }\n            //     appSettingStore.togglePipChatMode()\n            // }\n        },\n        makeVideoFullPage() {\n            const appSettingStore = useAppSettingStore()\n            const userStore = useUserStore()\n\n            // this.fullPage = true; // to be deleted and replaced by appSettingStore.fullPage\n            appSettingStore.fullPage = true\n            // userStore.hidePage = true // to be deleted and replaced by appSettingStore.hidePage\n            appSettingStore.hidePage = true\n            appSettingStore.ott = 0\n\n            this.videoContainerClass = 'fullPageVideoContainer'\n            this.class = 'fullPageVideoClass'\n            this.controls = !userStore.isMobile\n        },\n        makeVideoTopRight() {\n            const appSettingStore = useAppSettingStore()\n\n            // this.fullPage = false // to be deleted and replaced by appSettingStore.fullPage\n            appSettingStore.fullPage = false\n            // userStore.hidePage = false // to be deleted and replaced by appSettingStore.hidePage\n            appSettingStore.hidePage = false\n            // this.currentPageIsStream = false // to be deleted and replaced by appSettingStore.currentPageIsStream\n            appSettingStore.currentPageIsStream = false\n\n            this.videoContainerClass = 'topRightVideoContainer'\n            this.class = 'topRightVideoClass'\n            this.controls = false\n        },\n        makeVideoWelcomePage() {\n            const appSettingStore = useAppSettingStore()\n            this.videoContainerClass = 'welcomeVideoContainer'\n            this.class = 'welcomeVideoClass'\n            appSettingStore.loggedIn = false\n            appSettingStore.fullPage = true\n            appSettingStore.hidePage = false\n        },\n        setMistServerUri(mistServerUri) {\n            this.mistServerUri = mistServerUri\n        }\n\n\n    },\n\n    getters: {},\n})\n","import { onBeforeMount, onMounted, watch } from 'vue'\nimport { useUserStore } from \"@/Stores/UserStore\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useVideoPlayerStore } from \"@/Stores/VideoPlayerStore\"\nimport { router } from '@inertiajs/vue3'\n\nexport function usePageSetup(pageName) {\n    const userStore = useUserStore()\n    const appSettingStore = useAppSettingStore()\n    const videoPlayerStore = useVideoPlayerStore()\n\n    appSettingStore.currentPage = pageName\n    appSettingStore.showFlashMessage = true\n    appSettingStore.pageIsHidden = false\n\n// PageSetup utility\n    if (userStore.isMobile || window.innerWidth < 1024) {\n        appSettingStore.ott = 0; // Close all panels on mobile devices\n    } else if (appSettingStore.fullPage) {\n        appSettingStore.ott = 0; // Default to closed in fullPage mode\n    } else {\n        if (appSettingStore.ott === 0) {\n            appSettingStore.ott = 4\n        }\n        // appSettingStore.ott = 4; // Open OttChat by default on larger screens\n        appSettingStore.showOttButtons = true;\n    }\n\n    videoPlayerStore.makeVideoTopRight()\n\n    if (appSettingStore.pageReload) {\n        appSettingStore.pageReload = false\n        appSettingStore.pageWasReloaded = true\n        window.location.reload();\n    }\n    // Check if the URL contains query strings\n\n\n    // Only scroll into view if there are no query strings\n\n        // const topDiv = document.getElementById(\"topDiv\")\n        // if (topDiv) {\n        //     topDiv.scrollIntoView()\n        // }\n        router.on('navigate', (event) => {\n            // Ensure OTT panels do not open automatically on mobile devices\n            if (userStore.isMobile || window.innerWidth < 1024 || appSettingStore.fullPage) {\n                appSettingStore.ott = 0; // Close all panels on mobile devices\n            } else {\n                if (appSettingStore.ott === 0) {\n                    appSettingStore.ott = 4\n                }\n                // appSettingStore.ott = 0; // Default to closed on larger screens\n            }\n            const hasQueryStrings = window.location.search !== '';\n            if (!hasQueryStrings || appSettingStore.shouldScrollToTop) {\n                requestAnimationFrame(() => {\n                    const topDiv = document.getElementById(\"topDiv\");\n                    if (topDiv) {\n                        topDiv.scrollIntoView({behavior: 'auto'});\n                    } else {\n                        window.scrollTo(0, 0);\n                    }\n                });\n            }\n            appSettingStore.shouldScrollToTop = false;\n        })\n    // Only update if we're not already on this page to avoid overwriting with the current URL\n    appSettingStore.setPrevUrl()\n    appSettingStore.showOttButtons = true\n    appSettingStore.noLayout = false\n\n    // router.reload()\n\n    watch(\n        () => appSettingStore.isSmallScreen,\n        (newValue) => {\n            if (newValue) {\n                appSettingStore.ott = 0;\n            } else {\n                appSettingStore.ott = 4;\n            }\n        },\n        { immediate: true } // This option ensures the watch executes immediately with the current value\n    );\n\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".btn-ghost[data-v-7dba5fe6]:hover{color:#1d4ed8}.cursor-pointer[data-v-7dba5fe6]{cursor:pointer}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/Components/Pages/GoLive/CopyDestinationsModal.vue\"],\"names\":[],\"mappings\":\"AA2HA,kCACE,aACF,CACA,iCACE,cACF\",\"sourcesContent\":[\"<template>\\n  <dialog id=\\\"copyDestinationsModal\\\" class=\\\"modal\\\">\\n    <div class=\\\"modal-box bg-white dark:bg-gray-800 dark:text-white\\\">\\n      <form method=\\\"dialog\\\">\\n        <button @click=\\\"closeModal\\\" :disabled=\\\"loading\\\" class=\\\"btn btn-sm btn-circle btn-ghost hover:text-blue-300 absolute right-2 top-2\\\">\\n          ✕\\n        </button>\\n      </form>\\n      <h3 class=\\\"font-bold text-lg\\\">Copy Destinations</h3>\\n      <div v-if=\\\"filteredDestinations.length\\\">\\n        <div class=\\\"flex flex-wrap justify-start items-center my-2\\\">\\n          <button @click=\\\"selectAllDestinations\\\" :disabled=\\\"loading || allSelected\\\" class=\\\"btn btn-sm btn-secondary text-white\\\">\\n            <font-awesome-icon icon=\\\"check-square\\\" class=\\\"mr-2\\\" />\\n            Select All\\n          </button>\\n          <button @click=\\\"deselectAllDestinations\\\" :disabled=\\\"loading || noneSelected\\\" class=\\\"btn btn-sm btn-secondary text-white ml-2\\\">\\n            <font-awesome-icon icon=\\\"minus-square\\\" class=\\\"mr-2\\\" />\\n            Deselect All\\n          </button>\\n        </div>\\n        <div v-for=\\\"destination in filteredDestinations\\\" :key=\\\"destination.id\\\" class=\\\"my-3 cursor-pointer\\\" @click=\\\"toggleSelection(destination.id)\\\">\\n          <div class=\\\"flex items-center\\\">\\n            <input\\n                type=\\\"checkbox\\\"\\n                :value=\\\"destination.id\\\"\\n                v-model=\\\"selectedDestinations\\\"\\n                :disabled=\\\"loading\\\"\\n                class=\\\"checkbox mr-2\\\"\\n                @click.stop\\n            />\\n            <div class=\\\"flex flex-col\\\">\\n              <span class=\\\"font-bold text-blue-600\\\">{{ destination.show_name }}</span>\\n              <span>{{ destination.comment }} - ({{ destination.rtmp_url }}{{ destination.rtmp_key }})</span>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"flex justify-end mt-4\\\">\\n          <button\\n              @click=\\\"copySelectedDestinations\\\"\\n              class=\\\"btn btn-primary text-white mr-2\\\"\\n              :disabled=\\\"loading || selectedDestinations.length === 0\\\"\\n          >\\n            <font-awesome-icon icon=\\\"copy\\\" class=\\\"mr-2\\\" />\\n            Copy Selected\\n            <span v-if=\\\"loading\\\" class=\\\"loading loading-spinner loading-md ml-2\\\"></span>\\n          </button>\\n          <button @click=\\\"closeModal\\\" :disabled=\\\"loading\\\" class=\\\"btn btn-ghost\\\">\\n            Cancel\\n          </button>\\n        </div>\\n      </div>\\n      <div v-else>\\n        <p>No destinations to copy.</p>\\n      </div>\\n    </div>\\n  </dialog>\\n</template>\\n\\n<script setup>\\nimport { ref, computed } from 'vue';\\nimport { useGoLiveStore } from '@/Stores/GoLiveStore';\\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome';\\n\\nconst goLiveStore = useGoLiveStore();\\n\\nconst otherShowDestinations = computed(() => goLiveStore.otherShowDestinations);\\nconst selectedDestinations = ref([]);\\nconst loading = ref(false);\\n\\nconst filteredDestinations = computed(() => {\\n  const currentDestinations = goLiveStore.destinations;\\n  // Ensure otherShowDestinations.value is an array\\n  const otherDestinations = Array.isArray(otherShowDestinations.value) ? otherShowDestinations.value : [];\\n\\n  return otherDestinations.filter(destination =>\\n      !currentDestinations.some(d => d.rtmp_url === destination.rtmp_url && d.rtmp_key === destination.rtmp_key)\\n  );\\n});\\n\\nconst allSelected = computed(() => {\\n  return filteredDestinations.value.length > 0 && selectedDestinations.value.length === filteredDestinations.value.length;\\n});\\n\\nconst noneSelected = computed(() => {\\n  return selectedDestinations.value.length === 0;\\n});\\n\\nconst selectAllDestinations = () => {\\n  selectedDestinations.value = filteredDestinations.value.map(destination => destination.id);\\n};\\n\\nconst deselectAllDestinations = () => {\\n  selectedDestinations.value = [];\\n};\\n\\n// Function to toggle selection of an id\\nconst toggleSelection = (id) => {\\n  if (!Array.isArray(selectedDestinations.value)) {\\n    selectedDestinations.value = [];\\n  }\\n\\n  if (selectedDestinations.value.includes(id)) {\\n    selectedDestinations.value = selectedDestinations.value.filter(destId => destId !== id);\\n  } else {\\n    selectedDestinations.value.push(id);\\n  }\\n};\\n\\nconst copySelectedDestinations = async () => {\\n  loading.value = true;\\n  const success = await goLiveStore.copyDestinations(selectedDestinations.value);\\n  loading.value = false;\\n  if (success) {\\n    closeModal();\\n  }\\n};\\n\\nconst closeModal = () => {\\n  document.getElementById('copyDestinationsModal').close();\\n};\\n</script>\\n\\n<style scoped>\\n.btn-ghost:hover {\\n  color: #1d4ed8; /* Tailwind blue-700 */\\n}\\n.cursor-pointer {\\n  cursor: pointer;\\n}\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"@keyframes fadeOut-b9d59aca{0%{opacity:1}to{opacity:0}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/Components/Pages/GoLive/GoLiveHeader.vue\"],\"names\":[],\"mappings\":\"AAqNA,4BACE,GACE,SACF,CACA,GACE,SACF,CACF\",\"sourcesContent\":[\"<template>\\n  <div :class=\\\"containerClass\\\">\\n    <div>\\n      <div :class=\\\"buttonContainerClass\\\">\\n        <div>\\n          <button @click=\\\"openObsInstructions = !openObsInstructions\\\"\\n                  class=\\\"btn bg-blue-500 hover:bg-blue-700 text-white ml-2\\\"\\n                  :class=\\\"{'bg-yellow-800 hover:bg-yellow-900 ':openObsInstructions}\\\">\\n            <span v-if=\\\"!openObsInstructions\\\">View Your Stream Key</span>\\n            <span v-else>Hide Your Stream Key</span>\\n          </button>\\n        </div>\\n        <div v-if=\\\"!openObsInstructions\\\">\\n          <button @click=\\\"appSettingStore.btnRedirect('/training/go-live-using-zoom')\\\"\\n                  class=\\\"btn bg-blue-500 hover:bg-blue-700 text-white\\\">How To Stream From Zoom\\n          </button>\\n        </div>\\n      </div>\\n      <div v-if=\\\"openObsInstructions\\\" :class=\\\"obsInstructionsClass\\\">\\n        <h3>Stream from OBS or other software using these details:</h3>\\n        <div>RTMP full url: <span v-if=\\\"fullUrl\\\" class=\\\"font-bold\\\">{{ fullUrl }}</span>\\n          &nbsp;<button v-if=\\\"rtmpUri && streamKey\\\" @click=\\\"copyFullUrl\\\">\\n            <font-awesome-icon v-if=\\\"rtmpUri && streamKey\\\" icon=\\\"fa-clipboard\\\"\\n                               class=\\\"text-blue-500 hover:text-blue-700 hover:cursor-pointer\\\"/>\\n          </button>\\n          <span v-if=\\\"showCopiedFullUrl\\\" class=\\\"ml-1 copied-message\\\" style=\\\"transition: opacity 0.5s; opacity: 1;\\\">Copied!</span>\\n        </div>\\n        <div>RTMP url: <span class=\\\"font-bold\\\">{{ rtmpUri }}</span>\\n          &nbsp;<button v-if=\\\"rtmpUri\\\" @click=\\\"copyRtmpUri\\\">\\n            <font-awesome-icon v-if=\\\"rtmpUri\\\" icon=\\\"fa-clipboard\\\"\\n                               class=\\\"text-blue-500 hover:text-blue-700 hover:cursor-pointer\\\"/>\\n          </button>\\n          <span v-if=\\\"showCopiedRtmpUri\\\" class=\\\"ml-1 copied-message\\\" style=\\\"transition: opacity 0.5s; opacity: 1;\\\">Copied!</span>\\n        </div>\\n        <div>RTMP stream key: <span class=\\\"font-bold\\\">{{ streamKey }}</span>\\n          &nbsp;<button v-if=\\\"streamKey\\\" @click=\\\"copyStreamKey\\\">\\n            <font-awesome-icon v-if=\\\"streamKey\\\" icon=\\\"fa-clipboard\\\"\\n                               class=\\\"text-blue-500 hover:text-blue-700 hover:cursor-pointer\\\"/>\\n          </button>\\n          <span v-if=\\\"showCopiedStreamKey\\\" class=\\\"ml-1 copied-message\\\"\\n                style=\\\"transition: opacity 0.5s; opacity: 1;\\\">Copied!</span>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div v-if=\\\"!openObsInstructions\\\" :class=\\\"liveControlsClass\\\">\\n      <div class=\\\"flex flex-col justify-center border-2 border-green-500 rounded-lg px-2 py-2 gap-2\\\">\\n        <div class=\\\"flex flex-row gap-2\\\">\\n          <div class=\\\"mb-2\\\">\\n            <button v-if=\\\"!goLiveStore.isRecording\\\" @click=\\\"goLiveStore.startRecording\\\"\\n                    class=\\\"w-36 btn btn-sm text-white bg-green-500 hover:bg-green-700 uppercase\\\"\\n            >\\n              <span v-if=\\\"!goLiveStore.processingRecordingChange\\\">Start Recording</span>\\n              <span v-else class=\\\"loading loading-spinner loading-xs text-white\\\"></span>\\n            </button>\\n            <button v-else @click=\\\"goLiveStore.stopRecording\\\"\\n                    class=\\\"w-36 btn btn-sm text-white bg-red-700 hover:bg-red-900 uppercase\\\"\\n            >\\n              <span v-if=\\\"!goLiveStore.processingRecordingChange\\\">Stop Recording</span>\\n              <span v-else class=\\\"loading loading-spinner loading-xs text-white\\\"></span>\\n            </button>\\n          </div>\\n          <div class=\\\"ml-2\\\">\\n            <button v-if=\\\"!goLiveStore.isLive\\\" disabled @click=\\\"goLiveStore.goLive\\\"\\n                    class=\\\"btn btn-sm text-white bg-green-500 hover:bg-green-700 uppercase\\\"\\n            >Go Live Now\\n            </button>\\n            <button v-else disabled @click=\\\"goLiveStore.stopLive\\\"\\n                    class=\\\"btn btn-sm text-white bg-red-700 hover:bg-red-900 uppercase\\\"\\n            >End Live\\n            </button>\\n          </div>\\n        </div>\\n        <div v-if=\\\"!goLiveStore.isRecording || !goLiveStore.isLive\\\"\\n             class=\\\"text-xs text-green-500 font-semibold tracking-wider text-center\\\">\\n          Coming Soon!\\n        </div>\\n      </div>\\n\\n      <div class=\\\"ml-2\\\">\\n        <button class=\\\"btn btn-secondary\\\" @click=\\\"openStats\\\">Live Analytics</button>\\n      </div>\\n\\n      <div>\\n        <div>Live will begin in... &nbsp;</div>\\n        <div class=\\\"countdown font-mono text-2xl\\\">\\n          <span :style=\\\"{ '--value': hours }\\\">{{ hours.toString().padStart(2, '0') }}</span>h\\n          <span :style=\\\"{ '--value': minutes }\\\">{{ minutes.toString().padStart(2, '0') }}</span>m\\n          <span :style=\\\"{ '--value': seconds }\\\">{{ seconds.toString().padStart(2, '0') }}</span>s\\n        </div>\\n        <div class=\\\"text-xs\\\">for demo purposes only</div>\\n      </div>\\n    </div>\\n  </div>\\n</template>\\n<script setup>\\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\\nimport { useGoLiveStore } from '@/Stores/GoLiveStore'\\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome'\\nimport { computed, onMounted, onUnmounted, ref, watchEffect } from 'vue'\\nimport { useClipboard } from '@vueuse/core'\\n\\nconst appSettingStore = useAppSettingStore()\\nconst goLiveStore = useGoLiveStore()\\n\\nconst showCopiedFullUrl = ref(false)\\nconst showCopiedRtmpUri = ref(false)\\nconst showCopiedStreamKey = ref(false)\\n\\nconst {copy} = useClipboard()\\nconst openObsInstructions = ref(false)\\n\\nconst rtmpUri = computed(() => goLiveStore.fullRtmpUri)\\nconst streamKey = computed(() => goLiveStore.streamKey)\\nconst fullUrl = computed(() => goLiveStore.fullUrl)\\n\\nconst copyFullUrl = () => {\\n  copy(fullUrl.value)\\n  showCopiedFullUrl.value = true\\n  setTimeout(() => showCopiedFullUrl.value = false, 1000)\\n}\\n\\nconst copyRtmpUri = () => {\\n  copy(rtmpUri.value)\\n  showCopiedRtmpUri.value = true\\n  setTimeout(() => showCopiedRtmpUri.value = false, 1000)\\n}\\n\\nconst copyStreamKey = () => {\\n  copy(streamKey.value)\\n  showCopiedStreamKey.value = true\\n  setTimeout(() => showCopiedStreamKey.value = false, 1000)\\n}\\n\\n\\nconst containerClass = computed(() => {\\n  return appSettingStore.isSmallScreen ? 'flex flex-col w-full' : 'flex flex-row flex-wrap-reverse w-full justify-between gap-2'\\n})\\n\\nconst buttonContainerClass = computed(() => {\\n  return appSettingStore.isSmallScreen ? 'flex flex-col gap-2 mb-2' : 'flex flex-row flex-wrap gap-x-2 gap-y-2 mb-2'\\n})\\n\\nconst aobsButtonClass = computed(() => {\\n  return openObsInstructions.value ? 'bg-yellow-800 hover:bg-yellow-900' : 'bg-blue-500 hover:bg-blue-700'\\n})\\n\\nconst zoomButtonClass = computed(() => {\\n  return appSettingStore.isSmallScreen ? 'w-full mt-2' : 'bg-blue-500 hover:bg-blue-700'\\n})\\n\\nconst obsInstructionsClass = computed(() => {\\n  return appSettingStore.isSmallScreen ? 'my-4' : 'my-4 ml-10'\\n})\\n\\nconst liveControlsClass = computed(() => {\\n  return appSettingStore.isSmallScreen ? 'flex flex-col gap-2' : 'flex flex-row flex-wrap justify-between grow ml-4 gap-2'\\n})\\n\\n// Keep a reference to the interval ID so it can be cleared\\nlet intervalId = null\\n\\n// Initial countdown time in seconds (5 minutes * 60 seconds)\\nconst countdownTime = 5 * 60\\n// Reactive state for the countdown\\nconst countdown = ref(countdownTime)\\n\\n// Computed properties for hours, minutes, and seconds\\nconst hours = computed(() => Math.floor(countdown.value / 3600))\\nconst minutes = computed(() => Math.floor((countdown.value % 3600) / 60))\\nconst seconds = computed(() => countdown.value % 60)\\n\\nconst openStats = () => {\\n  window.open('/stats', '_blank')\\n}\\n\\n\\n// Function to start the countdown\\nconst startCountdown = () => {\\n  // // Clear any existing interval to prevent multiple intervals\\n  // if (intervalId !== null) {\\n  //   clearInterval(intervalId)\\n  // }\\n  //\\n  // // Reset countdown to initial value\\n  // countdown.value = countdownTime\\n  //\\n  // // Start a new interval\\n  // intervalId = setInterval(() => {\\n  //   countdown.value--\\n  //\\n  //   if (countdown.value < 0) {\\n  //     clearInterval(intervalId) // Stop the interval\\n  //     intervalId = null // Reset the interval ID\\n  //     // Optionally, you can reset countdown.value to countdownTime or another value here\\n  //   }\\n  // }, 1000)\\n}\\n\\nonMounted(async () => {\\n  // Automatically start the countdown or trigger based on an event\\n  startCountdown()\\n})\\n\\n// Cleanup when the component unmounts\\nonUnmounted(() => {\\n  // Cleanup interval on component unmount (countdown timer)\\n  if (intervalId !== null) {\\n    clearInterval(intervalId)\\n  }\\n})\\n</script>\\n<style scoped>\\n@keyframes fadeOut {\\n  from {\\n    opacity: 1;\\n  }\\n  to {\\n    opacity: 0;\\n  }\\n}\\n</style>\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import script from \"./CancelButton.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CancelButton.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n    <button\n        @click.prevent=\"cancel\"\n        class=\"ml-2 px-4 py-2 text-white bg-orange-600 hover:bg-orange-500 rounded-lg\"\n    >Cancel\n    </button>\n  </div>\n</template>\n\n<script setup>\nimport { router } from '@inertiajs/vue3'\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useUserStore } from '@/Stores/UserStore'\n\nconst appSettingStore = useAppSettingStore()\nconst userStore = useUserStore()\n\nlet props = defineProps({\n  url: String\n})\n\nfunction cancel() {\n  if (appSettingStore.prevUrl) {\n    if (props.url) {\n      router.visit(props.url)\n    } else {\n      router.visit(appSettingStore.prevUrl)\n    }\n  } else {\n    if (props.url) {\n      router.visit(props.url)\n    } else {\n      // Fallback if prevUrl is not available\n      let prevUrl = userStore.isCreator ? '/dashboard' : '/';\n      router.visit(prevUrl);\n    }\n  }\n}\n</script>\n","<template>\n  <div :class=\"containerClass\">\n    <div>\n      <div :class=\"buttonContainerClass\">\n        <div>\n          <button @click=\"openObsInstructions = !openObsInstructions\"\n                  class=\"btn bg-blue-500 hover:bg-blue-700 text-white ml-2\"\n                  :class=\"{'bg-yellow-800 hover:bg-yellow-900 ':openObsInstructions}\">\n            <span v-if=\"!openObsInstructions\">View Your Stream Key</span>\n            <span v-else>Hide Your Stream Key</span>\n          </button>\n        </div>\n        <div v-if=\"!openObsInstructions\">\n          <button @click=\"appSettingStore.btnRedirect('/training/go-live-using-zoom')\"\n                  class=\"btn bg-blue-500 hover:bg-blue-700 text-white\">How To Stream From Zoom\n          </button>\n        </div>\n      </div>\n      <div v-if=\"openObsInstructions\" :class=\"obsInstructionsClass\">\n        <h3>Stream from OBS or other software using these details:</h3>\n        <div>RTMP full url: <span v-if=\"fullUrl\" class=\"font-bold\">{{ fullUrl }}</span>\n          &nbsp;<button v-if=\"rtmpUri && streamKey\" @click=\"copyFullUrl\">\n            <font-awesome-icon v-if=\"rtmpUri && streamKey\" icon=\"fa-clipboard\"\n                               class=\"text-blue-500 hover:text-blue-700 hover:cursor-pointer\"/>\n          </button>\n          <span v-if=\"showCopiedFullUrl\" class=\"ml-1 copied-message\" style=\"transition: opacity 0.5s; opacity: 1;\">Copied!</span>\n        </div>\n        <div>RTMP url: <span class=\"font-bold\">{{ rtmpUri }}</span>\n          &nbsp;<button v-if=\"rtmpUri\" @click=\"copyRtmpUri\">\n            <font-awesome-icon v-if=\"rtmpUri\" icon=\"fa-clipboard\"\n                               class=\"text-blue-500 hover:text-blue-700 hover:cursor-pointer\"/>\n          </button>\n          <span v-if=\"showCopiedRtmpUri\" class=\"ml-1 copied-message\" style=\"transition: opacity 0.5s; opacity: 1;\">Copied!</span>\n        </div>\n        <div>RTMP stream key: <span class=\"font-bold\">{{ streamKey }}</span>\n          &nbsp;<button v-if=\"streamKey\" @click=\"copyStreamKey\">\n            <font-awesome-icon v-if=\"streamKey\" icon=\"fa-clipboard\"\n                               class=\"text-blue-500 hover:text-blue-700 hover:cursor-pointer\"/>\n          </button>\n          <span v-if=\"showCopiedStreamKey\" class=\"ml-1 copied-message\"\n                style=\"transition: opacity 0.5s; opacity: 1;\">Copied!</span>\n        </div>\n      </div>\n    </div>\n\n    <div v-if=\"!openObsInstructions\" :class=\"liveControlsClass\">\n      <div class=\"flex flex-col justify-center border-2 border-green-500 rounded-lg px-2 py-2 gap-2\">\n        <div class=\"flex flex-row gap-2\">\n          <div class=\"mb-2\">\n            <button v-if=\"!goLiveStore.isRecording\" @click=\"goLiveStore.startRecording\"\n                    class=\"w-36 btn btn-sm text-white bg-green-500 hover:bg-green-700 uppercase\"\n            >\n              <span v-if=\"!goLiveStore.processingRecordingChange\">Start Recording</span>\n              <span v-else class=\"loading loading-spinner loading-xs text-white\"></span>\n            </button>\n            <button v-else @click=\"goLiveStore.stopRecording\"\n                    class=\"w-36 btn btn-sm text-white bg-red-700 hover:bg-red-900 uppercase\"\n            >\n              <span v-if=\"!goLiveStore.processingRecordingChange\">Stop Recording</span>\n              <span v-else class=\"loading loading-spinner loading-xs text-white\"></span>\n            </button>\n          </div>\n          <div class=\"ml-2\">\n            <button v-if=\"!goLiveStore.isLive\" disabled @click=\"goLiveStore.goLive\"\n                    class=\"btn btn-sm text-white bg-green-500 hover:bg-green-700 uppercase\"\n            >Go Live Now\n            </button>\n            <button v-else disabled @click=\"goLiveStore.stopLive\"\n                    class=\"btn btn-sm text-white bg-red-700 hover:bg-red-900 uppercase\"\n            >End Live\n            </button>\n          </div>\n        </div>\n        <div v-if=\"!goLiveStore.isRecording || !goLiveStore.isLive\"\n             class=\"text-xs text-green-500 font-semibold tracking-wider text-center\">\n          Coming Soon!\n        </div>\n      </div>\n\n      <div class=\"ml-2\">\n        <button class=\"btn btn-secondary\" @click=\"openStats\">Live Analytics</button>\n      </div>\n\n      <div>\n        <div>Live will begin in... &nbsp;</div>\n        <div class=\"countdown font-mono text-2xl\">\n          <span :style=\"{ '--value': hours }\">{{ hours.toString().padStart(2, '0') }}</span>h\n          <span :style=\"{ '--value': minutes }\">{{ minutes.toString().padStart(2, '0') }}</span>m\n          <span :style=\"{ '--value': seconds }\">{{ seconds.toString().padStart(2, '0') }}</span>s\n        </div>\n        <div class=\"text-xs\">for demo purposes only</div>\n      </div>\n    </div>\n  </div>\n</template>\n<script setup>\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\nimport { useGoLiveStore } from '@/Stores/GoLiveStore'\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome'\nimport { computed, onMounted, onUnmounted, ref, watchEffect } from 'vue'\nimport { useClipboard } from '@vueuse/core'\n\nconst appSettingStore = useAppSettingStore()\nconst goLiveStore = useGoLiveStore()\n\nconst showCopiedFullUrl = ref(false)\nconst showCopiedRtmpUri = ref(false)\nconst showCopiedStreamKey = ref(false)\n\nconst {copy} = useClipboard()\nconst openObsInstructions = ref(false)\n\nconst rtmpUri = computed(() => goLiveStore.fullRtmpUri)\nconst streamKey = computed(() => goLiveStore.streamKey)\nconst fullUrl = computed(() => goLiveStore.fullUrl)\n\nconst copyFullUrl = () => {\n  copy(fullUrl.value)\n  showCopiedFullUrl.value = true\n  setTimeout(() => showCopiedFullUrl.value = false, 1000)\n}\n\nconst copyRtmpUri = () => {\n  copy(rtmpUri.value)\n  showCopiedRtmpUri.value = true\n  setTimeout(() => showCopiedRtmpUri.value = false, 1000)\n}\n\nconst copyStreamKey = () => {\n  copy(streamKey.value)\n  showCopiedStreamKey.value = true\n  setTimeout(() => showCopiedStreamKey.value = false, 1000)\n}\n\n\nconst containerClass = computed(() => {\n  return appSettingStore.isSmallScreen ? 'flex flex-col w-full' : 'flex flex-row flex-wrap-reverse w-full justify-between gap-2'\n})\n\nconst buttonContainerClass = computed(() => {\n  return appSettingStore.isSmallScreen ? 'flex flex-col gap-2 mb-2' : 'flex flex-row flex-wrap gap-x-2 gap-y-2 mb-2'\n})\n\nconst aobsButtonClass = computed(() => {\n  return openObsInstructions.value ? 'bg-yellow-800 hover:bg-yellow-900' : 'bg-blue-500 hover:bg-blue-700'\n})\n\nconst zoomButtonClass = computed(() => {\n  return appSettingStore.isSmallScreen ? 'w-full mt-2' : 'bg-blue-500 hover:bg-blue-700'\n})\n\nconst obsInstructionsClass = computed(() => {\n  return appSettingStore.isSmallScreen ? 'my-4' : 'my-4 ml-10'\n})\n\nconst liveControlsClass = computed(() => {\n  return appSettingStore.isSmallScreen ? 'flex flex-col gap-2' : 'flex flex-row flex-wrap justify-between grow ml-4 gap-2'\n})\n\n// Keep a reference to the interval ID so it can be cleared\nlet intervalId = null\n\n// Initial countdown time in seconds (5 minutes * 60 seconds)\nconst countdownTime = 5 * 60\n// Reactive state for the countdown\nconst countdown = ref(countdownTime)\n\n// Computed properties for hours, minutes, and seconds\nconst hours = computed(() => Math.floor(countdown.value / 3600))\nconst minutes = computed(() => Math.floor((countdown.value % 3600) / 60))\nconst seconds = computed(() => countdown.value % 60)\n\nconst openStats = () => {\n  window.open('/stats', '_blank')\n}\n\n\n// Function to start the countdown\nconst startCountdown = () => {\n  // // Clear any existing interval to prevent multiple intervals\n  // if (intervalId !== null) {\n  //   clearInterval(intervalId)\n  // }\n  //\n  // // Reset countdown to initial value\n  // countdown.value = countdownTime\n  //\n  // // Start a new interval\n  // intervalId = setInterval(() => {\n  //   countdown.value--\n  //\n  //   if (countdown.value < 0) {\n  //     clearInterval(intervalId) // Stop the interval\n  //     intervalId = null // Reset the interval ID\n  //     // Optionally, you can reset countdown.value to countdownTime or another value here\n  //   }\n  // }, 1000)\n}\n\nonMounted(async () => {\n  // Automatically start the countdown or trigger based on an event\n  startCountdown()\n})\n\n// Cleanup when the component unmounts\nonUnmounted(() => {\n  // Cleanup interval on component unmount (countdown timer)\n  if (intervalId !== null) {\n    clearInterval(intervalId)\n  }\n})\n</script>\n<style scoped>\n@keyframes fadeOut {\n  from {\n    opacity: 1;\n  }\n  to {\n    opacity: 0;\n  }\n}\n</style>","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-10.use[1]!../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-10.use[2]!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./GoLiveHeader.vue?vue&type=style&index=0&id=b9d59aca&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./GoLiveHeader.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./GoLiveHeader.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./GoLiveHeader.vue?vue&type=style&index=0&id=b9d59aca&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-b9d59aca\"]])\n\nexport default __exports__","import script from \"./VideoJsAux.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./VideoJsAux.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"w-full h-auto max-w-screen\">\n\n    <video-js :id=\"id\"\n              class=\"video-js vjs-layout-tiny w-full max-w-full min-h-64 h-auto bg-blue-400\"\n              autoplay\n              muted\n              playsinline\n              crossorigin=\"anonymous\"\n    >\n      <source :src=\"source\"\n              :type=\"sourceType\">\n    </video-js>\n\n  </div>\n</template>\n\n\n<script setup>\nimport { onMounted, onBeforeUnmount } from 'vue'\nimport videojs from 'video.js'\nimport 'video.js/dist/video-js.css'\nimport { useVideoAuxPlayerStore } from '@/Stores/VideoAuxPlayerStore'\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\n\nconst appSettingStore = useAppSettingStore()\nimport { useStreamStore } from '@/Stores/StreamStore'\nimport VideoJs from '@/Components/Global/VideoPlayer/VideoJs/VideoJs.vue'\n\nconst videoAuxPlayerStore = useVideoAuxPlayerStore()\nconst streamStore = useStreamStore()\n\nconst props = defineProps({\n  options: Object,\n  id: String,\n  source: String,\n  sourceType: String,\n})\n\nonMounted(() => {\n  const videoElementId = props.id\n  const playerOptions = {\n    // Define your player options here\n    controlBar: {\n      audioTrackButton: false,\n      autoHide: true,\n      captionsButton: false,\n      chaptersButton: false,\n      currentTimeDisplay: false,\n      customControlSpacer: false,\n      descriptionsButton: false,\n      durationDisplay: false,\n      fullscreenToggle: false, // Removes the full screen option\n      liveDisplay: false,\n      pictureInPictureToggle: false,\n      playToggle: false,\n      playbackRateMenuButton: false,\n      progressControl: {seekBar: false},\n      remainingTimeDisplay: false,\n      seekToLive: false,\n      subsCapsButton: false,\n      subtitlesButton: false,\n      timeDivider: false,\n      volumePanel: {\n        inline: true,\n        volumeBar: {\n          vertical: false,\n          liveDisplay: false,\n        },\n      },\n    },\n    userActions: {\n      hotkeys: true, // Enable hotkeys to show/hide controls\n    },\n    controls: true,\n    muted: false, // Start muted to comply with autoplay policies\n    inactivityTimeout: 0,\n    autoplay: true,\n    preload: 'auto',\n    // techOrder: ['html5'],\n    html5: {\n      hls: {\n        overrideNative: !videojs.browser.IS_SAFARI, // Override native HLS on non-Safari browsers\n      },\n    },\n  }\n\n  // Initialize Video.js player\n  const videoAuxPlayer = videojs(videoElementId, playerOptions)\n\n  // Use the store to manage the player\n  videoAuxPlayerStore.setPlayer(videoAuxPlayer)\n\n  // Access the video DOM element controlled by VideoJS\n  const videoDomElement = videoAuxPlayer.el()\n\n  // Disable right-click on the video element\n  videoDomElement.addEventListener('contextmenu', (event) => {\n    event.preventDefault()\n  })\n})\n\nonBeforeUnmount(() => {\n  let videoAuxPlayer = videojs(props.id)\n  videoAuxPlayer.dispose()\n})\n\n</script>","import script from \"./GoLiveAuxVideoPlayer.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./GoLiveAuxVideoPlayer.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div :class=\"containerClass\">\n    <div class=\"text-xs tracking-wider font-semibold mb-1\" :class=\"labelClass\">LIVE VIDEO STREAM</div>\n\n    <div :class=\"flexRowClass\">\n      <div class=\"flex flex-col\">\n\n        <div :class=\"playerContainerClass\">\n          <button @click=\"goLiveStore.reloadPlayer();\" class=\"btn btn-xs w-full py-1\" :class=\"liveOrRecordingGrayButtonClass\">\n            <span v-if=\"goLiveStore.playerIsReloading\" class=\"loading loading-spinner loading-xs\"></span> Reload Player\n          </button>\n          <div v-if=\"goLiveStore.isLive || goLiveStore.isRecording\" class=\"w-full bg-red-700 text-white text-center uppercase font-bold\">\n            <span v-if=\"goLiveStore.isLive\">LIVE</span> <span v-if=\"goLiveStore.isLive && goLiveStore.isRecording\"> + </span>\n            <span v-if=\"goLiveStore.isRecording\">RECORDING</span>\n          </div>\n          <video-js-aux :id=\"`aux-player`\" :source=\"videoSource\" :sourceType=\"videoSourceType\" class=\"\" :class=\"liveOrRecordingVideoBorderClass\"/>\n        </div>\n\n        <div :class=\"controlsContainerClass\">\n          <div class=\"mt-2\">\n            <button v-if=\"!videoPlayerStore.muted\" class=\"btn btn-warning btn-xs\" @click=\"videoPlayerStore.mute\">\n              <font-awesome-icon icon=\"fa-volume-mute\" class=\"mr-1 cursor-pointer hover:text-blue-500\"/> Mute Main Video Audio\n            </button>\n            <button v-else class=\"btn btn-neutral text-white btn-xs\" @click=\"videoPlayerStore.unMute\">\n              <font-awesome-icon icon=\"fa-volume-up\" class=\"mr-1 cursor-pointer hover:text-blue-500\"/> Turn On Main Video Audio\n            </button>\n          </div>\n          <div class=\"mt-2 ml-2\">\n            <button v-if=\"!videoAuxPlayerStore.muted\" class=\"btn btn-warning btn-xs\" @click=\"videoAuxPlayerStore.mute\">\n              <font-awesome-icon icon=\"fa-volume-mute\" class=\"mr-1 cursor-pointer hover:text-blue-500\"/> Mute Live Stream Audio\n            </button>\n            <button v-else class=\"btn btn-neutral text-white btn-xs\" @click=\"videoAuxPlayerStore.unMute\">\n              <font-awesome-icon icon=\"fa-volume-up\" class=\"mr-1 cursor-pointer hover:text-blue-500\"/> Turn On Live Stream Audio\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <div v-if=\"goLiveStore.streamInfo && !goLiveStore.streamInfo.error\" class=\"w-80\" :key=\"goLiveStore.selectedShowId\">\n        <div>\n          <h3>Stream Info</h3>\n          <p><strong>Width:</strong> {{ goLiveStore.streamInfo?.width }}</p>\n          <p><strong>Height:</strong> {{ goLiveStore.streamInfo?.height }}</p>\n\n          <div v-if=\"goLiveStore.streamInfo?.meta?.tracks\">\n            <div><span class=\"font-semibold\">Live: </span> {{ goLiveStore.streamInfo?.meta?.live }}</div>\n            <div><span class=\"font-semibold\">Buffer Window: </span>{{ formatBufferWindow(goLiveStore.streamInfo?.meta?.buffer_window) }}</div>\n            <h4 class=\"font-semibold\">Tracks:</h4>\n              <div v-for=\"(track, name) in goLiveStore?.streamInfo?.meta.tracks\" :key=\"name\">\n                <div class=\"flex flex-col\">\n                  <div>&middot; {{ name }}</div>\n                  <div class=\"pl-2\">\n                    <span v-if=\"track.type === 'video' || track.type === 'audio'\">{{ formatBitrate(track.bps) }}</span>\n                  </div>\n                </div>\n\n              </div>\n          </div>\n        </div>\n      </div>\n\n      <div v-if=\"!goLiveStore?.streamInfo && !goLiveStore?.streamInfo?.error\" class=\"flex flex-col\">\n        <span class=\"mb-2\">Loading stream data...</span>\n        <span class=\"loading loading-spinner text-neutral\"></span>\n      </div>\n\n      <div v-if=\"goLiveStore?.streamInfo?.error\" class=\"flex flex-col\">\n        <span class=\"mb-2\">{{ goLiveStore?.streamInfo?.error }}</span>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { useGoLiveStore } from '@/Stores/GoLiveStore'\nimport { useVideoAuxPlayerStore } from '@/Stores/VideoAuxPlayerStore'\nimport { useVideoPlayerStore } from '@/Stores/VideoPlayerStore'\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\n\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome'\nimport { computed, onMounted, onUnmounted, ref, watchEffect } from 'vue'\nimport VideoJsAux from '@/Components/Global/VideoPlayer/VideoJs/VideoJsAux'\n\nconst goLiveStore = useGoLiveStore()\nconst videoAuxPlayerStore = useVideoAuxPlayerStore()\nconst videoPlayerStore = useVideoPlayerStore()\nconst appSettingStore = useAppSettingStore()\n\nconst liveOrRecordingGrayButtonClass = computed(() => {\n  if (goLiveStore.isLive || goLiveStore.isRecording) {\n    return 'bg-gray-200 hover:bg-gray-400'\n  } else {\n    return ''\n  }\n})\n\nconst liveOrRecordingVideoBorderClass = computed(() => {\n  if (goLiveStore.isLive || goLiveStore.isRecording) {\n    return 'border-4 border-red-700'\n  } else {\n    return ''\n  }\n})\n\nconst videoSource = ref(videoPlayerStore.mistServerUri + 'hls/' + goLiveStore?.selectedShow?.mist_stream_wildcard.name\n    + '/index.m3u8')\nconst videoSourceType = ref('application/vnd.apple.mpegURL')\n\n\nconst containerClass = computed(() => {\n  return appSettingStore.isSmallScreen ? 'flex flex-col justify-center mt-3 h-fit' : 'flex flex-col justify-center mt-3 h-fit'\n})\n\nconst labelClass = computed(() => {\n  return appSettingStore.isSmallScreen ? 'pl-3' : 'pl-11'\n})\n\nconst flexRowClass = computed(() => {\n  return appSettingStore.isSmallScreen ? 'flex flex-col' : 'flex flex-row flex-wrap'\n})\n\nconst playerContainerClass = computed(() => {\n  return appSettingStore.isSmallScreen ? 'px-3' : 'px-10'\n})\n\nconst controlsContainerClass = computed(() => {\n  return appSettingStore.isSmallScreen ? 'flex flex-col w-full px-3 justify-center' : 'flex flex-row px-10 w-full justify-center'\n})\n\nconst formatBufferWindow = (ms) => {\n  if (ms >= 60000) {\n    const minutes = Math.floor(ms / 60000)\n    const seconds = ((ms % 60000) / 1000).toFixed(0)\n    return `${minutes} minute${minutes > 1 ? 's' : ''} ${seconds} second${seconds > 1 ? 's' : ''}`\n  } else if (ms >= 1000) {\n    return (ms / 1000).toFixed(2) + ' s'\n  } else {\n    return ms + ' ms'\n  }\n}\n\nconst formatBitrate = (bps) => {\n  if (bps >= 1000000) {\n    return (bps / 1000000).toFixed(2) + ' Mbps'\n  } else if (bps >= 1000) {\n    return (bps / 1000).toFixed(2) + ' Kbps'\n  } else {\n    return bps + ' bps'\n  }\n}\n\nonMounted(async() => {\n  console.log('onPlayerReady AUX')\n  // await goLiveStore.fetchStreamInfo()\n})\n\n// Cleanup when the component unmounts\nonUnmounted(() => {\n  videoAuxPlayerStore.disposePlayer()\n})\n</script>","import script from \"./MistStreamPushDestinationForm.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./MistStreamPushDestinationForm.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <!-- You can open the modal using ID.showModal() method -->\n\n  <dialog id=\"mistStreamPushDestinationForm\" class=\"modal\">\n    <div class=\"modal-box bg-white dark:bg-gray-800 dark:text-white\">\n      <form method=\"dialog\">\n        <button class=\"btn btn-sm btn-circle btn-ghost absolute right-2 top-2\">✕</button>\n      </form>\n      <h3 class=\"font-bold text-lg\">{{ mode === 'add' ? 'Add Push Destination' : 'Edit Push Destination' }}</h3>\n\n      <form @submit.prevent=\"submitForm\">\n        <!-- Form fields for your model's attributes -->\n        <div class=\"my-3 flex flex-col space-y-2\">\n          <input v-model=\"form.rtmp_url\"\n                 type=\"text\"\n                 placeholder=\"Server URL (RTMP Url)\"\n                 class=\"input input-bordered bg-white dark:bg-gray-800 dark:text-white\"\n                 required >\n          <input v-model=\"form.rtmp_key\"\n                 type=\"text\"\n                 placeholder=\"Stream Key (RTMP Key)\"\n                 class=\"input input-bordered bg-white dark:bg-gray-800 dark:text-white\" >\n          <textarea v-model=\"form.comment\" class=\"textarea textarea-bordered bg-white dark:bg-gray-800 dark:text-white\" placeholder=\"Optional Comment...\" />\n\n          <div v-if=\"hasErrorMessage\" role=\"alert\" class=\"alert alert-error\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n            </svg>\n            <div class=\"w-full flex flex-row justify-between\">\n              <div>{{ notificationStore.formattedErrorMessage }}</div>\n              <div><button @click.prevent=\"notificationStore.clearErrorMessage\" class=\"btn btn-xs\">OK</button></div>\n            </div>\n          </div>\n          <!-- Add other fields as necessary -->\n          <button type=\"submit\"\n                  :disabled=\"goLiveStore.pushDestinationFormSubmitProcessing\"\n                  class=\"mt-2 btn btn-primary text-white disabled:cursor-not-allowed disabled:bg-gray-400\">\n            <span v-if=\"!goLiveStore.pushDestinationFormSubmitProcessing\">{{ mode    === 'add' ? 'Add' : 'Save Changes' }}</span>\n            <span v-else>Saving<span class=\"my-2 loading loading-dots loading-sm\"></span> Please Wait</span>\n          </button>\n        </div>\n      </form>\n    </div>\n  </dialog>\n</template>\n\n<script setup>\nimport { computed, ref, watchEffect } from 'vue'\nimport { useNotificationStore } from '@/Stores/NotificationStore'\nimport { useGoLiveStore } from '@/Stores/GoLiveStore'\nimport { useMistStore } from '@/Stores/MistStore'\n\nconst notificationStore = useNotificationStore()\nconst goLiveStore = useGoLiveStore()\nconst mistStore = useMistStore()\n\nlet props = defineProps({\n  destinationDetails: Object,\n  mode: String,\n})\n\n// Define your emits\nconst emit = defineEmits(['update-success']);\n\nconst form = ref({\n  show_id: goLiveStore.selectedShowId,\n  stream_name: goLiveStore.streamKey,\n  mist_stream_wildcard_id: props.destinationDetails.mist_stream_wildcard_id,\n  id: props.destinationDetails.id,\n  rtmp_url: props.destinationDetails.rtmp_url,\n  rtmp_key: props.destinationDetails.rtmp_key,\n  comment: props.destinationDetails.comment,\n  errors: '',\n  // Initialize other model attributes here\n});\n\nconst hasErrorMessage = computed(() => {\n  return notificationStore.errorMessage && Object.keys(notificationStore.errorMessage).length > 0\n})\n\n// Use watchEffect to reactively update form whenever props.destinationDetails changes\nwatchEffect(() => {\n  form.value.mist_stream_wildcard_id = props.destinationDetails.mist_stream_wildcard_id || '';\n  form.value.id = props.destinationDetails.id || '';\n  form.value.rtmp_url = props.destinationDetails.rtmp_url || '';\n  form.value.rtmp_key = props.destinationDetails.rtmp_key || '';\n  form.value.comment = props.destinationDetails.comment || '';\n  // Initialize other model attributes here\n});\n\nconst submitForm = async () => {\n  goLiveStore.pushDestinationFormSubmitProcessing = true\n  let url = '/mist-stream-push-destinations'; // Default URL for adding\n  let method = 'post'; // Default method for adding\n\n  // Check if the mode is 'edit' to adjust the URL and method as needed\n  if (props.mode === 'edit' && props.destinationDetails.id) {\n    url += `/${props.destinationDetails.id}`; // Append the destination ID for the update operation\n    method = 'put'; // Use PUT for updating, assuming your Laravel resource controller follows RESTful conventions\n  }\n\n  try {\n    // Perform the request using Axios\n    const response = await axios({\n      method: method,\n      url: url,\n      data: form.value, // Assuming formData is a reactive ref holding your form data\n    });\n\n    // Handle response here, e.g., show a success message, fetch updated list, etc.\n    // console.log('Success:', response.data);\n    emit('update-success');\n    form.value.errors = ''\n\n    // Assuming the wildcard ID is part of the response or known at this point\n    // const wildcardId = response.data.wildcardId || someOtherWayToDetermineWildcardId();\n    // console.log('just about to send this wildcardID: ' + goLiveStore.wildcardId)\n    // await mistStore.getMistStreamPushDestinations(goLiveStore.wildcardId); // Fetch updated push destinations\n    // Close the modal\n    await goLiveStore.fetchPushDestinations(); // Fetch updated push destinations\n    goLiveStore.pushDestinationFormSubmitProcessing = false\n    document.getElementById('mistStreamPushDestinationForm').close();\n\n  } catch (error) {\n    if (error.response && error.response.data && error.response.data.errors) {\n      // Assign all errors from the response to formErrors\n      notificationStore.errorMessage = error.response.data.errors;\n      goLiveStore.pushDestinationFormSubmitProcessing = false\n    } else {\n      // General error handling\n      // console.error('Submission error', error);\n      notificationStore.setGeneralServiceNotification('Submission error', error)\n      goLiveStore.pushDestinationFormSubmitProcessing = false\n    }\n  }\n}\n\n</script>","import script from \"./GoLiveDestinationList.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./GoLiveDestinationList.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"flex flex-col gap-4\">\n    <div v-for=\"destination in goLiveStore.destinations\" :key=\"destination.id\" class=\"border p-4 rounded-lg shadow flex flex-col md:flex-row items-center gap-4\">\n      <img :src=\"destination.destination_image\" alt=\"Destination Image\" class=\"w-24 h-24 object-cover rounded-full\" />\n      <div class=\"flex-grow\">\n        <h3 class=\"text-lg font-semibold\">{{ destination.destination_name }}</h3>\n        <h4>{{ destination.comment }}</h4>\n        <p v-if=\"destination.push_is_started\" class=\"text-red-500 font-semibold\">Push Is Active</p>\n        <div class=\"flex flex-col xl:flex-row gap-2 mt-2\">\n          <button v-if=\"destination.push_is_started\"\n                  @click=\"goLiveStore.stopPush(destination.id, destination.mist_push_id)\"\n                  :disabled=\"goLiveStore.loadingDestinationId === destination.id\"\n                  class=\"py-2 px-4 text-white rounded transition duration-150 disabled:bg-gray-400 disabled:cursor-not-allowed\"\n                  :class=\"stopButtonClass\">\n            Stop Push\n          </button>\n          <button v-else\n                  @click=\"goLiveStore.startPush(destination.id, destination.full_push_uri, destination.mist_push_id)\"\n                  :disabled=\"goLiveStore.loadingDestinationId === destination.id\"\n                  class=\"py-2 px-4 text-white rounded transition duration-150 disabled:bg-gray-400 disabled:cursor-not-allowed\"\n                  :class=\"startButtonClass\">\n            Start Push\n          </button>\n          <button v-if=\"!destination.has_auto_push\"\n                  @click=\"goLiveStore.enableAutoPush(destination.id)\"\n                  :disabled=\"goLiveStore.loadingDestinationId === destination.id\"\n                  class=\"py-2 px-4 text-white rounded transition duration-150 disabled:bg-gray-400 disabled:cursor-not-allowed\"\n                  :class=\"autoPushButtonClass\">\n            Enable Auto Push\n          </button>\n          <button v-if=\"destination.has_auto_push\"\n                  @click=\"goLiveStore.disableAutoPush(destination.id)\"\n                  :disabled=\"goLiveStore.loadingDestinationId === destination.id\"\n                  class=\"hidden py-2 px-4 text-white rounded transition duration-150 disabled:bg-gray-400 disabled:cursor-not-allowed\">\n            Disable Auto Push\n          </button>\n          <p v-if=\"destination.has_auto_push\" class=\"text-yellow-500 font-semibold\">Auto push is enabled</p>\n          <span v-if=\"goLiveStore.loadingDestinationId === destination.id\" class=\"loading loading-spinner text-info\"></span>\n        </div>\n      </div>\n      <div class=\"flex flex-row flex-wrap justify-end\">\n        <button @click.prevent=\"editDestination(destination)\" class=\"btn btn-sm text-white font-semibold rounded-lg\" :class=\"editButtonClass\">\n          <font-awesome-icon icon=\"fa-pencil\" class=\"my-1 mx-1\" />\n        </button>\n      </div>\n      <button @click.prevent=\"goLiveStore.deleteDestination(destination.id)\" class=\"btn btn-sm text-white font-semibold rounded-lg\" :class=\"deleteButtonClass\">\n        <font-awesome-icon icon=\"fa-trash-can\" class=\"my-1 mx-1\" />\n      </button>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { computed } from 'vue'\nimport { useGoLiveStore } from '@/Stores/GoLiveStore'\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\n\nconst goLiveStore = useGoLiveStore()\nconst appSettingStore = useAppSettingStore()\n\nconst stopButtonClass = computed(() => {\n  return appSettingStore.isSmallScreen ? 'bg-red-500 hover:bg-red-700' : 'bg-red-500 hover:bg-red-700'\n})\n\nconst startButtonClass = computed(() => {\n  return appSettingStore.isSmallScreen ? 'bg-blue-500 hover:bg-blue-700' : 'bg-blue-500 hover:bg-blue-700'\n})\n\nconst autoPushButtonClass = computed(() => {\n  return appSettingStore.isSmallScreen ? 'bg-yellow-500 hover:bg-yellow-600' : 'bg-yellow-500 hover:bg-yellow-600'\n})\n\nconst editButtonClass = computed(() => {\n  return appSettingStore.isSmallScreen ? 'bg-blue-500 hover:bg-blue-600' : 'bg-blue-500 hover:bg-blue-600'\n})\n\nconst deleteButtonClass = computed(() => {\n  return appSettingStore.isSmallScreen ? 'bg-red-500 hover:bg-red-600' : 'bg-red-500 hover:bg-red-600'\n})\n\nconst editDestination = async (destination) => {\n  goLiveStore.mistStreamPushDestinationFormModalMode = 'edit'\n  goLiveStore.destinationDetails = destination\n  document.getElementById('mistStreamPushDestinationForm').showModal()\n  // console.log(`Editing destination with ID: ${destination}`)\n  // const index = mistStreamPushDestinations.value.findIndex(destination => destination.id === destinationDetails.value.id)\n  // if (index !== -1) {\n  //   mistStreamPushDestinations.value[index].has_auto_push = 0\n  // }\n}\n\n\n</script>\n","<template>\n  <dialog id=\"copyDestinationsModal\" class=\"modal\">\n    <div class=\"modal-box bg-white dark:bg-gray-800 dark:text-white\">\n      <form method=\"dialog\">\n        <button @click=\"closeModal\" :disabled=\"loading\" class=\"btn btn-sm btn-circle btn-ghost hover:text-blue-300 absolute right-2 top-2\">\n          ✕\n        </button>\n      </form>\n      <h3 class=\"font-bold text-lg\">Copy Destinations</h3>\n      <div v-if=\"filteredDestinations.length\">\n        <div class=\"flex flex-wrap justify-start items-center my-2\">\n          <button @click=\"selectAllDestinations\" :disabled=\"loading || allSelected\" class=\"btn btn-sm btn-secondary text-white\">\n            <font-awesome-icon icon=\"check-square\" class=\"mr-2\" />\n            Select All\n          </button>\n          <button @click=\"deselectAllDestinations\" :disabled=\"loading || noneSelected\" class=\"btn btn-sm btn-secondary text-white ml-2\">\n            <font-awesome-icon icon=\"minus-square\" class=\"mr-2\" />\n            Deselect All\n          </button>\n        </div>\n        <div v-for=\"destination in filteredDestinations\" :key=\"destination.id\" class=\"my-3 cursor-pointer\" @click=\"toggleSelection(destination.id)\">\n          <div class=\"flex items-center\">\n            <input\n                type=\"checkbox\"\n                :value=\"destination.id\"\n                v-model=\"selectedDestinations\"\n                :disabled=\"loading\"\n                class=\"checkbox mr-2\"\n                @click.stop\n            />\n            <div class=\"flex flex-col\">\n              <span class=\"font-bold text-blue-600\">{{ destination.show_name }}</span>\n              <span>{{ destination.comment }} - ({{ destination.rtmp_url }}{{ destination.rtmp_key }})</span>\n            </div>\n          </div>\n        </div>\n        <div class=\"flex justify-end mt-4\">\n          <button\n              @click=\"copySelectedDestinations\"\n              class=\"btn btn-primary text-white mr-2\"\n              :disabled=\"loading || selectedDestinations.length === 0\"\n          >\n            <font-awesome-icon icon=\"copy\" class=\"mr-2\" />\n            Copy Selected\n            <span v-if=\"loading\" class=\"loading loading-spinner loading-md ml-2\"></span>\n          </button>\n          <button @click=\"closeModal\" :disabled=\"loading\" class=\"btn btn-ghost\">\n            Cancel\n          </button>\n        </div>\n      </div>\n      <div v-else>\n        <p>No destinations to copy.</p>\n      </div>\n    </div>\n  </dialog>\n</template>\n\n<script setup>\nimport { ref, computed } from 'vue';\nimport { useGoLiveStore } from '@/Stores/GoLiveStore';\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome';\n\nconst goLiveStore = useGoLiveStore();\n\nconst otherShowDestinations = computed(() => goLiveStore.otherShowDestinations);\nconst selectedDestinations = ref([]);\nconst loading = ref(false);\n\nconst filteredDestinations = computed(() => {\n  const currentDestinations = goLiveStore.destinations;\n  // Ensure otherShowDestinations.value is an array\n  const otherDestinations = Array.isArray(otherShowDestinations.value) ? otherShowDestinations.value : [];\n\n  return otherDestinations.filter(destination =>\n      !currentDestinations.some(d => d.rtmp_url === destination.rtmp_url && d.rtmp_key === destination.rtmp_key)\n  );\n});\n\nconst allSelected = computed(() => {\n  return filteredDestinations.value.length > 0 && selectedDestinations.value.length === filteredDestinations.value.length;\n});\n\nconst noneSelected = computed(() => {\n  return selectedDestinations.value.length === 0;\n});\n\nconst selectAllDestinations = () => {\n  selectedDestinations.value = filteredDestinations.value.map(destination => destination.id);\n};\n\nconst deselectAllDestinations = () => {\n  selectedDestinations.value = [];\n};\n\n// Function to toggle selection of an id\nconst toggleSelection = (id) => {\n  if (!Array.isArray(selectedDestinations.value)) {\n    selectedDestinations.value = [];\n  }\n\n  if (selectedDestinations.value.includes(id)) {\n    selectedDestinations.value = selectedDestinations.value.filter(destId => destId !== id);\n  } else {\n    selectedDestinations.value.push(id);\n  }\n};\n\nconst copySelectedDestinations = async () => {\n  loading.value = true;\n  const success = await goLiveStore.copyDestinations(selectedDestinations.value);\n  loading.value = false;\n  if (success) {\n    closeModal();\n  }\n};\n\nconst closeModal = () => {\n  document.getElementById('copyDestinationsModal').close();\n};\n</script>\n\n<style scoped>\n.btn-ghost:hover {\n  color: #1d4ed8; /* Tailwind blue-700 */\n}\n.cursor-pointer {\n  cursor: pointer;\n}\n</style>\n","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-10.use[1]!../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-10.use[2]!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./CopyDestinationsModal.vue?vue&type=style&index=0&id=7dba5fe6&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./CopyDestinationsModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CopyDestinationsModal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./CopyDestinationsModal.vue?vue&type=style&index=0&id=7dba5fe6&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-7dba5fe6\"]])\n\nexport default __exports__","import script from \"./GoLivePushDestinations.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./GoLivePushDestinations.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"mx-4 mt-4 mb-2 px-6 py-1\">\n\n    <div\n        class=\"text-sm font-semibold bg-blue-600 text-white text-center w-full border-2 border-blue-600 rounded uppercase px-6 py-1 \">\n      Push Destinations\n    </div>\n\n    <div role=\"alert\" class=\"alert\">\n      <!-- Ensure you're importing Tailwind CSS in your project -->\n      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\"\n           class=\"stroke-current text-blue-500 w-6 h-6\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n      </svg>\n\n      <span>🌟 Our push statuses get a little refresh every minute. Hang tight and keep the creativity flowing – more awesome updates are on their way!</span>\n    </div>\n\n    <div class=\"shadow bg-blue-100 overflow-hidden border-2 border-blue-600 rounded p-6 space-y-3\">\n\n      <div class=\"flex flex-row flex-wrap-reverse w-full justify-between\">\n        <div class=\"mb-2\">\n          <button @click=\"appSettingStore.btnRedirect('/training/how-to-push-to-facebook')\"\n                  class=\"btn btn-sm bg-blue-500 hover:bg-blue-700 rounded-lg text-white\">How To Push To Facebook\n          </button>\n          <button @click=\"appSettingStore.btnRedirect('/training/how-to-push-to-rumble')\"\n                  class=\"btn btn-sm bg-blue-500 hover:bg-blue-700 rounded-lg text-white ml-2 \">How To Push To Rumble\n          </button>\n        </div>\n        <div class=\"flex flex-col gap-2\">\n          <button\n              class=\"btn bg-blue-600 hover:bg-blue-500 text-white font-semibold rounded-lg flex items-center justify-center gap-2\"\n              @click.prevent=\"copyDestinations\">\n            <font-awesome-icon icon=\"copy\" class=\"text-white\"/>\n            Copy Destinations\n          </button>\n          <button\n              class=\"btn bg-green-600 hover:bg-green-500 text-white font-semibold rounded-lg flex items-center justify-center gap-2\"\n              @click.prevent=\"addDestination\">\n            <font-awesome-icon icon=\"plus\" class=\"text-white\"/>\n            Add Push Destinations\n          </button>\n          <div class=\"flex flex-row justify-end gap-2\">\n            <span v-if=\"goLiveStore.isProcessingDisableAllAutoPushes\" class=\"loading loading-spinner text-info\"></span>\n            <span v-show=\"!goLiveStore.isProcessingDisableAllAutoPushes\" class=\"text-xs\">Next refresh in... {{\n                countdown\n              }}</span>\n            <button\n                v-if=\"anyDestinationHasActiveAutoPush\"\n                @click=\"goLiveStore.disableAllAutoPushes()\"\n                :disabled=\"goLiveStore.isProcessingDisableAllAutoPushes\"\n                class=\"py-2 px-4 bg-gray-500 text-white rounded hover:bg-gray-600 transition duration-150 disabled:bg-gray-400 disabled:cursor-not-allowed\"\n            >\n              Disable All Auto Pushes\n            </button>\n          </div>\n\n        </div>\n      </div>\n\n      <div class=\"flex flex-row justify-between mb-2 py-2 h-12\">\n        <div><h2 class=\"text-xl font-bold\">Push Destinations</h2>\n        </div>\n        <div v-if=\"goLiveStore.isLoadingDestinations\">\n          <span class=\"loading loading-bars loading-lg text-info mr-2\"> </span><span class=\"text-xs uppercase\">Refreshing...</span>\n        </div>\n      </div>\n\n\n      <div v-if=\"goLiveStore.destinations.length === 0\">\n        <div>Set up <span class=\"font-bold\">push destinations:</span></div>\n        <div>Here you can set additional streaming destinations such as Facebook, YouTube, Rumble, Twitch, etc. and\n          notTV will automatically start pushing to those destinations when you go live.\n        </div>\n      </div>\n      <div v-if=\"goLiveStore.destinations.length > 0\">\n        <GoLiveDestinationList/>\n      </div>\n    </div>\n\n    <MistStreamPushDestinationForm @update-success=\"mistStore.getMistStreamPushDestinations\"\n                                   :destinationDetails=\"goLiveStore.destinationDetails\"\n\n                                   :mode=\"goLiveStore.mistStreamPushDestinationFormModalMode\"/>\n    <CopyDestinationsModal />\n    <ToastNotification/>\n  </div>\n</template>\n<script setup>\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\nimport { useMistStore } from '@/Stores/MistStore'\nimport { useGoLiveStore } from '@/Stores/GoLiveStore'\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome'\nimport MistStreamPushDestinationForm from '@/Components/Global/MistStreams/MistStreamPushDestinationForm'\nimport { computed, onMounted, onUnmounted, ref, watch, watchEffect } from 'vue'\nimport ToastNotification from '@/Components/Global/Notifications/Toast/ToastNotification.vue'\nimport GoLiveDestinationList from '@/Components/Pages/GoLive/GoLiveDestinationList.vue'\nimport CopyDestinationsModal from '@/Components/Pages/GoLive/CopyDestinationsModal.vue'\n\nconst appSettingStore = useAppSettingStore()\nconst mistStore = useMistStore()\nconst goLiveStore = useGoLiveStore()\n\nconst countdown = ref(15) // Set initial countdown (in seconds)\nconst intervalId = ref(null)\n\nconst anyDestinationHasActiveAutoPush = computed(() => {\n  return goLiveStore.destinations.some(destination => destination.has_auto_push === 1)\n})\n\nconst addDestination = async () => {\n  goLiveStore.mistStreamPushDestinationFormModalMode = 'add'\n  const wildcardId = goLiveStore.selectedShow?.mist_stream_wildcard?.id\n  goLiveStore.destinationDetails = {mist_stream_wildcard_id: wildcardId} // Initialize destinationDetails with the wildcard ID\n  document.getElementById('mistStreamPushDestinationForm').showModal()\n}\n\nconst copyDestinations = async () => {\n  await goLiveStore.fetchOtherShowDestinations()\n  document.getElementById('copyDestinationsModal').showModal()\n}\n\nconst backgroundFetchPushDestinationsStatus = async () => {\n  if (goLiveStore.wildcardId) {\n    await goLiveStore.backgroundFetchPushDestinations()\n  }\n}\n\nconst fetchPushDestinationsStatus = async () => {\n  if (goLiveStore.wildcardId) {\n    await goLiveStore.fetchPushDestinations()\n  }\n}\n\nconst fetchStreamInfo = async () => {\n  await goLiveStore.fetchStreamInfo()\n}\n\nconst reloadPlayer = async () => {\n  await goLiveStore.reloadPlayer()\n}\n\nconst backgroundFetch = async () => {\n  try {\n    // Fetch data concurrently\n    await Promise.all([\n      fetchPushDestinationsStatus(),\n      fetchStreamInfo(),\n    ])\n\n    // Reset the countdown at the beginning of the fetch cycle\n    countdown.value = 15\n\n    // Check if the stream just transitioned from offline to online\n    if (goLiveStore.previousStreamStatus === true && !goLiveStore.streamOffline) {\n      // console.log('Stream just transitioned from offline to online, reloading player');\n      await reloadPlayer()\n    } else if (goLiveStore.streamOffline) {\n      // console.log('Stream is offline, no action taken');\n    } else {\n      // console.log('Stream is online, no action taken');\n    }\n\n    // Update the previous stream status for the next check\n    goLiveStore.previousStreamStatus = goLiveStore.streamOffline\n  } catch (error) {\n    console.error('Error during background fetch:', error)\n    // Depending on your application's needs, handle the error appropriately\n  }\n}\n\n\n// Decrement the countdown every second\nconst startCountdown = () => {\n  if (intervalId.value !== null) return // Prevent multiple intervals\n  intervalId.value = setInterval(() => {\n    if (countdown.value > 0) {\n      countdown.value -= 1\n    } else {\n      backgroundFetch() // Refresh data when countdown reaches 0\n    }\n  }, 1000)\n}\n\n\nwatch(() => goLiveStore.selectedShow, async (newVal, oldVal) => {\n  if (newVal !== '') {\n    await backgroundFetch()\n    await fetchPushDestinationsStatus()\n    // Additional logic to load the video based on selectedShow can be added here\n  }\n})\n\nonMounted(async () => {\n  // Fetch immediately and then set up an interval for periodic fetching\n  startCountdown()\n  await backgroundFetch()\n  // intervalId = setInterval(backgroundFetch, 60000) // Fetch every 60 seconds\n})\n\nonUnmounted(() => {\n  // Clear the interval when the component unmounts to prevent memory leaks\n  clearInterval(intervalId.value)\n})\n\n\n</script>","<template>\n  <div class=\"mt-4 mb-8 px-6 py-1 w-full \">\n    <div\n        class=\"text-sm font-semibold bg-orange-600 text-white text-center w-full border-2 border-orange-600 rounded uppercase px-6 py-1 \">\n      Commercial Breaks\n    </div>\n    <div class=\"shadow bg-orange-100 overflow-hidden border-2 border-orange-600 rounded py-6 px-10 space-y-3 w-full\">\n      <div></div>\n      <div>Click the <span class=\"font-bold\">Trigger Commercial Break</span> button below to go to commercial.</div>\n      <div>You will see a countdown timer until the show resumes. This will be 1-2 minutes.</div>\n      <div>As a notTV creator, your voice matters. How can this feature be improved to better serve you and your\n        sponsors?\n        Please email and let us know: <a href=\"mailto:hello@not.tv\" target=\"_blank\"\n                                         class=\"text-blue-500 hover:text-blue-600\">hello@not.tv</a>\n      </div>\n      <div class=\"w-full flex justify-center pt-4\">\n        <button onclick=\"setCommercialBreakNotice.showModal()\"\n                class=\"bg-orange-600 hover:bg-orange-500 text-white font-semibold rounded-lg px-4 py-2\">Trigger\n          Commercial Break\n        </button>\n      </div>\n    </div>\n\n  </div>\n</template>\n<script setup>\n</script>","import { render } from \"./GoLiveCommercialBreaks.vue?vue&type=template&id=4e85c934\"\nconst script = {}\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import script from \"./GoLive.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./GoLive.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div :class=\"containerClass\">\n    <div\n        class=\"text-sm font-semibold text-white text-center w-full border-2 rounded uppercase\"\n        :class=\"liveStatusClass\"\n    >\n      <span v-if=\"goLiveStore.isLive\">Now Live</span>\n      <span v-else>Live Setup</span>\n    </div>\n    <div\n        class=\"shadow overflow-hidden border-2 rounded\"\n        :class=\"contentClass\"\n    >\n      <GoLiveHeader/>\n      <GoLiveAuxVideoPlayer/>\n      <GoLivePushDestinations :key=\"goLiveStore.selectedShowId\"/>\n    </div>\n    <GoLiveCommercialBreaks/>\n  </div>\n</template>\n<script setup>\nimport { useGoLiveStore } from '@/Stores/GoLiveStore'\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\n\n\nimport GoLiveHeader from '@/Components/Pages/GoLive/GoLiveHeader.vue'\nimport GoLiveAuxVideoPlayer from '@/Components/Pages/GoLive/GoLiveAuxVideoPlayer.vue'\nimport GoLivePushDestinations from '@/Components/Pages/GoLive/GoLivePushDestinations.vue'\nimport GoLiveCommercialBreaks from '@/Components/Pages/GoLive/GoLiveCommercialBreaks.vue'\nimport { computed } from 'vue'\n\n\nconst goLiveStore = useGoLiveStore()\nconst appSettingStore = useAppSettingStore()\n\n\nconst containerClass = computed(() => {\n  return appSettingStore.isSmallScreen ? 'mx-0 mt-4 mb-2 px-2 py-1' : 'mx-0 md:mx-4 mt-4 mb-2 px-2 md:px-6 py-1'\n})\n\nconst liveStatusClass = computed(() => {\n  return [\n    goLiveStore.isLive ? 'bg-gray-600 border-gray-600' : 'bg-red-600 border-red-600',\n    appSettingStore.isSmallScreen ? 'px-0 py-1' : 'px-0 md:px-6 py-1',\n  ]\n})\n\nconst contentClass = computed(() => {\n  return [\n    goLiveStore.isLive ? 'bg-gray-100' : 'bg-red-100',\n    appSettingStore.isSmallScreen ? 'p-2' : 'p-2 md:p-6',\n    'border-red-600',\n  ]\n})\n\n// Initialize fetching of server information\ngoLiveStore.updateAndGetStreamKey()\ngoLiveStore.fetchStreamInfo()\ngoLiveStore.fetchRtmpUri()\n</script>","import script from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"mx-4 my-4\">\n    <div class=\"alert alert-info mt-4\"\n         v-if=\"props.flash.message\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" class=\"stroke-current shrink-0 w-6 h-6\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n      </svg>\n      <span>{{ props.flash.message }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-success mt-4 mx-3\"\n         v-if=\"props.flash.success\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.success }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-warning mt-4 mx-3\"\n         v-if=\"props.flash.warning\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"/>\n      </svg>\n      <span>{{ props.flash.warning }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-error mt-4 mx-3\"\n         v-if=\"props.flash.error\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.error }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n  </div>\n\n</template>\n\n<script setup>\nimport { router } from '@inertiajs/vue3'\nimport { computed } from \"vue\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\n\nconst appSettingStore = useAppSettingStore()\n\nappSettingStore.showFlashMessage = true\n\nlet props = defineProps({\n  flash: Object,\n\n})\n\nconst messageType = computed(() => ({\n  'text-green-700 bg-green-100 dark:bg-green-200 dark:text-green-800': props.flash.success,\n  'text-blue-700 bg-blue-100 dark:bg-blue-200 dark:text-blue-800': props.flash.message,\n  'text-orange-700 bg-orange-100 dark:bg-orange-200 dark:text-orange-800': props.flash.warning,\n  'text-red-700 bg-red-100 dark:bg-red-200 dark:text-red-800': props.flash.error,\n}))\n\nconst clearFlashMessage = async () => {\n  await router.post(route('flash.clear'));\n  router.reload();\n};\n</script>\n","import script from \"./PopUpModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./PopUpModal.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n    <dialog :id=\"id\" class=\"modal\">\n      <div class=\"modal-box text-center my-auto border-2 border-secondary\" data-theme=\"dark\">\n        <h2 class=\"font-bold text-3xl text-secondary\">\n          <slot name=\"header\"></slot>\n        </h2>\n        <p class=\"py-4 text-xl\">\n          <slot name=\"main\"></slot>\n        </p>\n        <div class=\"modal-action justify-center w-full\">\n          <form method=\"dialog\">\n            <!-- if there is a button in form, it will close the modal -->\n            <button @click=\"notificationStore.showPopUpModal = false\" class=\"btn btn-secondary\">Okay</button>\n          </form>\n        </div>\n      </div>\n    </dialog>\n  </div>\n</template>\n<script setup>\nimport { useNotificationStore } from \"@/Stores/NotificationStore\"\n\nconst notificationStore = useNotificationStore()\n\ndefineProps({\n  id: String,\n})\n</script>\n","import script from \"./ManageShowEpisodeNoticeModals.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ManageShowEpisodeNoticeModals.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./GoLive.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./GoLive.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <Head title=\"Go Live\"/>\n\n  <div :class=\"containerClass\">\n    <div id=\"topDiv\" class=\"bg-white text-black p-5 mb-10\">\n      <Message v-if=\"appSettingStore.showFlashMessage\" :flash=\"$page.props.flash\"/>\n\n      <div :class=\"headerClass\">\n        <div>\n          <h1 :class=\"titleClass\">Go Live</h1>\n        </div>\n        <div :class=\"buttonContainerClass\">\n          <CancelButton />\n        </div>\n      </div>\n\n      <div v-if=\"goLiveStore.shows && goLiveStore.shows.length > 0\" class=\"mb-6 w-full\" :class=\"showSelectorClass\">\n        <label class=\"block mb-2 uppercase font-bold text-xs text-light text-neutral dark:text-white\" for=\"show\">\n          Select Show To Go Live On\n        </label>\n        <select\n            class=\"select select-info select-lg w-full p-2 block my-2 uppercase font-bold text-lg bg-white dark:bg-gray-800 dark:text-white\"\n            v-model=\"goLiveStore.selectedShowId\"\n            @change=\"reloadPlayer\"\n        >\n          <option disabled selected>Select show</option>\n          <option v-for=\"show in goLiveStore.shows\" :key=\"show.id\" :value=\"show.id\">{{ show.name }}</option>\n        </select>\n      </div>\n\n      <div v-else class=\"bg-black text-center py-6 text-white mx-auto border-red-700 border-2\" :class=\"noShowsClass\">\n        You don't have any shows to go live with... please check your show(s).\n      </div>\n\n      <div v-if=\"goLiveStore.selectedShow\" class=\"text-center w-full hover:text-blue-500\" :class=\"selectedShowClass\">\n        <Link :href=\"`/shows/${goLiveStore.selectedShow.slug}/manage`\">{{ goLiveStore.selectedShow.name }}</Link>\n      </div>\n\n      <GoLive v-if=\"goLiveStore.selectedShow && goLiveStore.selectedShow.mist_stream_wildcard_id\" />\n      <div v-if=\"goLiveStore.selectedShow && !goLiveStore.selectedShow.mist_stream_wildcard_id\" class=\"flex flex-col justify-items-center text-center\" :class=\"streamKeyClass\">\n        <div v-if=\"generateStreamKeyError\" class=\"text-red-700\">{{ generateStreamKeyError }}</div>\n        <div v-if=\"generateStreamKeyProcessing && !generateStreamKeyError\">\n          <div>Stream key is being generated...</div>\n          <div><span class=\"loading loading-infinity loading-lg text-primary\"></span></div>\n        </div>\n        <div v-if=\"!generateStreamKeyProcessing && !generateStreamKeyError\">\n          <div class=\"mb-3\">Please generate a stream key:</div>\n          <div><button @click=\"handleGenerateStreamKey\" class=\"btn btn-sm w-fit bg-green-500 hover:bg-green-700 text-white\">Generate Key</button></div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <ManageShowEpisodeNoticeModals />\n</template>\n\n<script setup>\nimport { usePageSetup } from '@/Utilities/PageSetup'\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\nimport { useVideoPlayerStore } from '@/Stores/VideoPlayerStore'\nimport { useVideoAuxPlayerStore } from '@/Stores/VideoAuxPlayerStore'\nimport { useGoLiveStore } from '@/Stores/GoLiveStore'\nimport Message from '@/Components/Global/Modals/Messages'\nimport CancelButton from '@/Components/Global/Buttons/CancelButton'\nimport GoLive from '@/Components/Global/GoLive/GoLive'\nimport { computed, onMounted, ref } from 'vue'\nimport videojs from 'video.js'\nimport ManageShowEpisodeNoticeModals from '@/Components/Pages/ShowEpisodes/Elements/ManageShowEpisodeNoticeModals.vue'\nimport Button from '@/Jetstream/Button.vue'\n\nusePageSetup('goLive')\n\nconst appSettingStore = useAppSettingStore()\nconst videoPlayerStore = useVideoPlayerStore()\nconst videoAuxPlayerStore = useVideoAuxPlayerStore()\nconst goLiveStore = useGoLiveStore()\n\nconst props = defineProps({\n  shows: Object\n})\n\nconst containerClass = computed(() => {\n  return 'place-self-center flex flex-col gap-y-3 min-h-screen bg-blue-900'\n})\n\nconst headerClass = computed(() => {\n  return appSettingStore.isSmallScreen ? 'flex flex-row flex-wrap justify-between mx-4 px-6 w-full' : 'flex flex-row justify-between mx-4 px-6 w-full'\n})\n\nconst titleClass = computed(() => {\n  return appSettingStore.isSmallScreen ? 'text-xl font-semibold' : 'text-3xl font-semibold'\n})\n\nconst buttonContainerClass = computed(() => {\n  return appSettingStore.isSmallScreen ? 'my-2' : 'mt-0'\n})\n\nconst showSelectorClass = computed(() => {\n  return appSettingStore.isSmallScreen ? 'px-4' : 'px-6'\n})\n\nconst noShowsClass = computed(() => {\n  return appSettingStore.isSmallScreen ? 'w-full px-4' : 'w-3/4 px-10'\n})\n\nconst selectedShowClass = computed(() => {\n  return appSettingStore.isSmallScreen ? 'text-xl font-semibold' : 'text-3xl font-semibold'\n})\n\nconst streamKeyClass = computed(() => {\n  return appSettingStore.isSmallScreen ? 'px-4' : 'px-16'\n})\n\nonMounted(async () => {\n  goLiveStore.isEpisode = null\n  goLiveStore.episode = null\n  goLiveStore.fetchShows().then(() => {\n    if (goLiveStore.preSelectedShowId) {\n      goLiveStore.selectedShowId = goLiveStore.preSelectedShowId;\n    }\n  });\n});\n\nconst reloadPlayer = async () => {\n  // Use a new Promise to wait for 1 second\n  await new Promise(resolve => setTimeout(resolve, 1000)); // 1000 milliseconds = 1 second\n  // After waiting, call the reloadPlayer method\n  await goLiveStore.reloadPlayer();\n\n};\n\nconst generateStreamKeyProcessing = ref(false)\nconst generateStreamKeyError = ref('')\n\nconst onChangeShow = async (event) => {\n  goLiveStore.setSelectedShowId(event);\n  await goLiveStore.fetchStreamInfo(goLiveStore?.selectedShow?.mist_stream_wildcard?.name);\n  await goLiveStore.reloadPlayer();\n};\n\n\n\nconst handleGenerateStreamKey = async () => {\n  generateStreamKeyProcessing.value = true; // Start processing\n\n  try {\n    // Await the store's generateStreamKey method\n    await goLiveStore.generateStreamKey();\n    // Optional: Perform any additional actions after the key has been generated\n    await goLiveStore.fetchStreamInfo(goLiveStore?.selectedShow?.mist_stream_wildcard?.name);\n    await goLiveStore.reloadPlayer();\n  } catch (error) {\n    // Check if the error is from Axios and has a response object\n    let displayError = 'Failed to generate stream key: ';\n    if (error.response && error.response.data && error.response.data.error) {\n      // If there's an error message in the response data, use it\n      displayError += error.response.data.error;\n    } else if (error.message) {\n      // Fallback to the error's message if no detailed response data is available\n      displayError += error.message;\n    } else {\n      // Generic error text if neither of the above is available\n      displayError += 'An unexpected error occurred.';\n    }\n    console.log(displayError);\n    generateStreamKeyError.value = displayError; // Display the detailed error message on the page\n  } finally {\n    generateStreamKeyProcessing.value = false; // End processing\n  }\n};\n</script>\n\n"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","initialState","displayEpisodeGoLiveComponent","isEpisode","episode","selectedEpisodeId","preSelectedShowId","selectedShowId","shows","streamKey","wildcardId","isLive","isRecording","streamInfo","rtmpUri","destinations","otherShowDestinations","loadingOtherDestinations","isLoadingDestinations","loadingDestinationId","processingRecordingChange","isProcessingDisableAllAutoPushes","playerIsReloading","pushDestinationFormSubmitProcessing","mistServerUri","previousStreamStatus","mistStreamPushDestinationFormModalMode","destinationDetails","useGoLiveStore","defineStore","state","actions","assign","this","fetchShows","_this","_callee","response","_context","axios","get","data","t0","generateStreamKey","_this2","_callee2","_context2","post","concat","stream_key","selectedShow","mist_stream_wildcard","mist_stream_wildcard_id","updateAndGetStreamKey","_show$mist_stream_wil","_this3","show","find","id","setSelectedShowId","showId","updateSelectedShow","_this4","goLive","stopLive","startRecording","_this5","_callee3","notificationStore","showSlug","_response$data","message","status","_context3","useNotificationStore","slug","stream_name","setToastNotification","stopRecording","_this6","_callee4","_response$data2","_context4","fetchStreamInfo","_this7","_callee5","_context5","fetchMistServerUri","streamName","error","success","fetchRtmpUri","_this8","_callee6","_context6","fetch","ok","text","clearStreamInfo","toggleDisplayEpisodeGoLiveComponent","_this$episode","show_id","updateEpisode","_this9","_callee7","videoAuxPlayerStore","uriResponse","_context7","useVideoAuxPlayerStore","setMistServerUri","reloadPlayer","_this10","_callee8","mistStream","_context8","loadMistStreamVideo","fetchOtherShowDestinations","_this11","_callee9","_context9","params","episodeId","console","copyDestinations","destinationIds","_this12","_callee10","payload","_context10","mistStreamWildcardId","log","fetchPushDestinations","_this13","_callee11","_response$data3","_context11","backgroundFetch","recording","backgroundFetchPushDestinations","_this14","_callee12","_context12","deleteDestination","destinationId","_this15","_callee13","_context13","confirm","filter","destination","setGeneralServiceNotification","startPush","fullPushUri","_this16","_callee14","_response$data4","index","_context14","destination_id","full_push_uri","findIndex","push_is_started","stopPush","_this17","_callee15","_response$data5","_context15","enableAutoPush","_this18","_callee16","_response$data6","_context16","has_auto_push","disableAutoPush","_this19","_callee17","_response$data7","_context17","disableAllAutoPushes","_this20","_callee18","_response$data8","_context18","getters","_show$mist_stream_wil2","_show$mist_stream_wil3","_show$mist_stream_wil4","is_recording","fullRtmpUri","fullUrl","activeDestinations","sourceName","_state$selectedShow","_state$episode","streamOffline","_state$streamInfo$err","_state$streamInfo","apiRequest","challenge","apiResponse","apiActiveStreams","mistUsername","mistPassword","mistStatus","Boolean","mistDisplayPushForm","mistDisplay","String","mistNewHashedPassword","mistStreamPushDestinations","useMistStore","getMistStreamPushDestinations","getMistStreamPushAutoList","getMistStreamPushList","player","eventListenersAttached","videoPlayerLoaded","class","videoContainerClass","videoSourceIdSrc1","videoSourceIdSrc2","videoSourceIdSrc3","videoSourceTypeSrc1","videoSourceTypeSrc2","videoSourceTypeSrc3","firstPlayVideoSourceType","firstPlayVideoSource","key","videoName","videoSource","videoSourceType","videoPoster","nextSource","previousSource","currentView","currentChannelId","currentChannelName","currentShow","currentShowEpisode","currentVideo","hasVideo","controls","muted","paused","currentTime","duration","formattedTime","blue","videoIsYoutube","videoUploadComplete","getMistServerUri","setPlayer","playerInstance","initializePlayer","attachEventListeners","nextTick","useAudioStore","ensureAudioContextAndNodesReady","ready","play","on","handleTimeUpdate","handleFullscreenChange","handlePlay","handlePause","handleError","detachEventListeners","stopAudioLevelMonitoring","off","disposePlayer","dispose","prepareForNewVideoSource","source","loadNewVideo","resetPlayback","pause","formatDuration","durationInSeconds","Math","floor","map","part","toString","padStart","join","_this$player","isFullscreen","_this$player2","_this$player3","_this$player4","code","makeBlue","toggleMute","unMute","mute","togglePlay","videoJs","videojs","load","loadNewLiveSource","sourceType","fullSourceUrl","src","back","fullscreen","requestFullscreen","getVideoCurrentTime","videoCurrentTime","getSourceDetails","videoSrc","mediaType","video_url","cdn_endpoint","cloud_folder","folder","file_name","audioStore","_this$getSourceDetail","deferAudioSetup","playNewVideo","loadNewSourceFromYouTube","useChannelStore","clearChannel","loadNewLiveSourceFromRumble","loadNewSourceFromUrl","loadNewSourceFromMist","loadNewSourceFromFile","filePath","loadExternalSourceVideo","loadPlaylistVideos","stayMuted","shouldUnmute","basePath","loadVideoFromFile","video","setNowPlayingInfoVideoFile","nowPlayingType","nowPlayingName","useStreamStore","currentChannel","setNowPlayingInfoShow","clearNowPlayingInfo","showStore","useShowStore","firstPlayVideo","setName","setEpisodeUrl","setUrl","setEpisodeName","makeVideoPiP","makeVideoFullPage","appSettingStore","useAppSettingStore","userStore","useUserStore","fullPage","hidePage","ott","isMobile","makeVideoTopRight","currentPageIsStream","makeVideoWelcomePage","loggedIn","usePageSetup","pageName","videoPlayerStore","useVideoPlayerStore","currentPage","showFlashMessage","pageIsHidden","window","innerWidth","showOttButtons","pageReload","pageWasReloaded","location","reload","router","event","search","shouldScrollToTop","requestAnimationFrame","topDiv","document","getElementById","scrollIntoView","behavior","scrollTo","setPrevUrl","noLayout","watch","isSmallScreen","newValue","immediate","___CSS_LOADER_EXPORT___","module","props","__props","cancel","prevUrl","url","visit","isCreator","goLiveStore","showCopiedFullUrl","ref","showCopiedRtmpUri","showCopiedStreamKey","copy","useClipboard","openObsInstructions","computed","copyFullUrl","setTimeout","copyRtmpUri","copyStreamKey","containerClass","buttonContainerClass","obsInstructionsClass","liveControlsClass","countdown","hours","minutes","seconds","openStats","open","onMounted","onUnmounted","intervalId","options","locals","videoElementId","playerOptions","controlBar","audioTrackButton","autoHide","captionsButton","chaptersButton","currentTimeDisplay","customControlSpacer","descriptionsButton","durationDisplay","fullscreenToggle","liveDisplay","pictureInPictureToggle","playToggle","playbackRateMenuButton","progressControl","seekBar","remainingTimeDisplay","seekToLive","subsCapsButton","subtitlesButton","timeDivider","volumePanel","inline","volumeBar","vertical","userActions","hotkeys","inactivityTimeout","autoplay","preload","html5","hls","overrideNative","browser","IS_SAFARI","videoAuxPlayer","el","addEventListener","preventDefault","onBeforeUnmount","liveOrRecordingGrayButtonClass","liveOrRecordingVideoBorderClass","_goLiveStore$selected","labelClass","flexRowClass","playerContainerClass","controlsContainerClass","formatBufferWindow","ms","toFixed","bps","emit","__emit","form","rtmp_url","rtmp_key","comment","errors","hasErrorMessage","errorMessage","watchEffect","submitForm","_ref2","mode","close","stopButtonClass","startButtonClass","autoPushButtonClass","editButtonClass","deleteButtonClass","editDestination","_ref","showModal","_x","selectedDestinations","loading","filteredDestinations","currentDestinations","Array","isArray","some","allSelected","noneSelected","selectAllDestinations","deselectAllDestinations","copySelectedDestinations","closeModal","includes","destId","mistStore","anyDestinationHasActiveAutoPush","addDestination","fetchPushDestinationsStatus","_ref4","_ref5","_ref6","_ref7","all","_ref8","newVal","oldVal","_x2","setInterval","clearInterval","_createElementVNode","_createTextVNode","href","target","onclick","script","_createElementBlock","_hoisted_1","_hoisted_4","liveStatusClass","contentClass","clearFlashMessage","flash","warning","route","headerClass","titleClass","showSelectorClass","noShowsClass","selectedShowClass","streamKeyClass","generateStreamKeyProcessing","generateStreamKeyError","handleGenerateStreamKey","_goLiveStore$selected2","displayError"],"sourceRoot":""}
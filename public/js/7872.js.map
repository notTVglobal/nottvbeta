{"version":3,"file":"js/7872.js","mappings":"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","sources":["webpack:///./resources/js/Stores/GoLiveStore.js","webpack:///./resources/js/Stores/ScheduleStore.js","webpack:///./resources/js/Utilities/TimeUtils.js","webpack:///./resources/js/Stores/TeamStore.js","webpack:///./resources/js/Stores/VideoAuxPlayerStore.js","webpack:///./resources/js/Utilities/PageSetup.js","webpack:///./resources/js/Components/Pages/Shows/Elements/ShowRecordings.vue?3756","webpack:///./resources/js/Pages/Shows/{$id}/Manage.vue?9722","webpack:///./resources/js/Components/Global/Buttons/DashboardButton.vue?3fff","webpack:///./resources/js/Components/Global/Buttons/DashboardButton.vue","webpack:///./resources/js/Components/Global/Calendar/DateTimePickerSelect.vue?a94f","webpack:///./resources/js/Components/Global/Calendar/DateTimePickerSelect.vue","webpack:///./resources/js/Components/Global/Modals/Messages.vue?dfe9","webpack:///./resources/js/Components/Global/Modals/Messages.vue","webpack:///./resources/js/Components/Global/Paginators/Pagination.vue?0305","webpack:///./resources/js/Components/Global/Paginators/Pagination.vue","webpack:///./resources/js/Components/Pages/Shows/Layout/ShowFooter.vue?be4d","webpack:///./resources/js/Components/Pages/Shows/Layout/ShowFooter.vue","webpack:///./resources/js/Jetstream/Label.vue","webpack:///./resources/js/Components/Global/Calendar/DateTimePicker.vue?15b5","webpack:///./resources/js/Components/Global/Calendar/DateTimePicker.vue","webpack:///./resources/js/Components/Global/Calendar/DatePicker.vue?300b","webpack:///./resources/js/Components/Global/Calendar/DatePicker.vue","webpack:///./resources/js/Components/Global/Schedule/StepSixCongratulations.vue","webpack:///./resources/js/Components/Global/Schedule/AddShowToSchedule.vue","webpack:///./resources/js/Components/Global/Schedule/AddShowToSchedule.vue?fa06","webpack:///./resources/js/Components/Global/Schedule/ChangeShowSchedule.vue?b054","webpack:///./resources/js/Components/Global/Schedule/ChangeShowSchedule.vue","webpack:///./resources/js/Components/Pages/Shows/Layout/ShowHeader.vue?b9fd","webpack:///./resources/js/Components/Pages/Shows/Layout/ShowHeader.vue","webpack:///./resources/js/Components/Pages/Shows/Elements/ManageShowEpisodesStatuses.vue?ba1d","webpack:///./resources/js/Components/Pages/Shows/Elements/ManageShowEpisodesStatuses.vue","webpack:///./resources/js/Components/Pages/Shows/Elements/ManageEpisodeEditNote.vue?89fa","webpack:///./resources/js/Components/Pages/Shows/Elements/ManageEpisodeEditNote.vue","webpack:///./resources/js/Components/Pages/Shows/Elements/ManageShowEpisode.vue?f7cf","webpack:///./resources/js/Components/Pages/Shows/Elements/ManageShowEpisode.vue","webpack:///./resources/js/Components/Pages/Shows/Elements/ManageShowEpisodesList.vue?8642","webpack:///./resources/js/Components/Pages/Shows/Elements/ManageShowEpisodesList.vue","webpack:///./resources/js/Components/Pages/Shows/Elements/ManageShowCreditsList.vue","webpack:///./resources/js/Components/Pages/Shows/Elements/ManageShowCreditsList.vue?74d6","webpack:///./resources/js/Components/Pages/Shows/Elements/ShowRecordings.vue","webpack:///./resources/js/Components/Pages/Shows/Elements/ShowRecordings.vue?031e","webpack:///./resources/js/Components/Pages/Shows/Elements/ShowRecordings.vue?c05b","webpack:///./resources/js/Pages/Shows/{$id}/Manage.vue","webpack:///./resources/js/Pages/Shows/{$id}/Manage.vue?fb67","webpack:///./resources/js/Pages/Shows/{$id}/Manage.vue?9a3e"],"sourcesContent":["import { defineStore } from 'pinia'\nimport { useNotificationStore } from '@/Stores/NotificationStore'\nimport { useVideoPlayerStore } from '@/Stores/VideoPlayerStore'\nimport { useVideoAuxPlayerStore } from '@/Stores/VideoAuxPlayerStore'\nimport videojs from 'video.js'\n\nconst initialState = () => ({\n    displayEpisodeGoLiveComponent: false,\n    isEpisode: null,\n    episode: null,\n    preSelectedShowId: null,\n    selectedShowId: null,\n    // selectedShow: null, this uses the getter... set it up in the component as a computed property\n    shows: [], // Assuming you might want to store shows here too\n    streamKey: '', // Optional: Store the generated stream key if needed\n    wildcardId: '',\n    isLive: false,\n    isRecording: false,\n    streamInfo: null,\n    rtmpUri: null,\n    destinations: [], // New state for holding destinations\n    isLoadingDestinations: false,\n    loadingDestinationId: null,\n    processingRecordingChange: false,\n    isProcessingDisableAllAutoPushes: false,\n    playerIsReloading: false,\n    pushDestinationFormSubmitProcessing: false,\n    mistServerUri: null,\n    previousStreamStatus: null,\n})\n\nexport const useGoLiveStore = defineStore('goLiveStore', {\n    state: initialState,\n    actions: {\n        reset() {\n            // Reset the store to its original state (clear all data)\n            Object.assign(this, initialState())\n        },\n        async fetchShows() {\n            try {\n                const response = await axios.get('/go-live/shows') // Adjust the URL as needed\n                this.shows = response.data\n            } catch (error) {\n                // console.error('Failed to fetch shows:', error)\n                // Handle error appropriately\n            }\n        },\n\n\n        // temporarily commenting this out\n        async generateStreamKey() {\n            if (!this.selectedShowId) {\n                // console.error('No show selected')\n                throw new Error('No show selected') // Throw an error to be caught by the caller\n            }\n\n            try {\n                const response = await axios.post(`/go-live/shows/${this.selectedShowId}/stream-key`)\n                // console.log('Stream key generated:', response.data)\n                // this.streamKey = response.data.stream_key // Assuming the response includes the stream key\n                // console.log('this new stream key: ' + this.streamKey)\n                // console.log('response data stream key: ' + response.data.stream_key)\n                // Update goLiveStore.selectedShow.mist_stream_wildcard_id with the returned stream key\n                if (this.selectedShowId && response.data.stream_key) {\n                    this.selectedShow.mist_stream_wildcard = response.data\n                    this.selectedShow.mist_stream_wildcard_id = response.data.stream_key\n                }\n                return response.data // Return the response data\n            } catch (error) {\n                // console.error('Error generating stream key:', error.response ? error.response.data : error)\n                throw error // Re-throw the error to be caught by the component\n            }\n        },\n\n        // Other actions...\n        updateAndGetStreamKey() {\n            const show = this.shows.find(show => show.id === this.selectedShowId) || null\n            const streamKey = show?.mist_stream_wildcard?.name || ' < RELOAD THIS PAGE TO GET YOUR STREAM KEY > '\n\n            // Perform the state update\n            this.streamKey = streamKey\n\n            // Return the stream key for immediate use\n            return streamKey\n        },\n\n\n        // async generateStreamKey() {\n        //     if (!this.selectedShowId) {\n        //         console.error(\"No show selected\");\n        //         throw new Error(\"No show selected\");\n        //     }\n        //\n        //     try {\n        //         const response = await axios.post(`/go-live/shows/${this.selectedShowId}/stream-key`);\n        //         console.log(\"Stream key generated:\", response.data);\n        //\n        //         // Find the index of the selected show in the shows array\n        //         const selectedIndex = this.shows.findIndex(show => show.id === this.selectedShowId);\n        //         if (selectedIndex !== -1) {\n        //             // Update the selected show with the new stream key information\n        //             this.shows[selectedIndex].mist_stream_wildcard = response.data;\n        //             this.shows[selectedIndex].mist_stream_wildcard_id = response.data.stream_key;\n        //         }\n        //         return response.data;\n        //     } catch (error) {\n        //         console.error(\"Error generating stream key:\", error.response ? error.response.data : error);\n        //         throw error;\n        //     }\n        // },\n\n\n        // setPreSelectedShowId(id) {\n        //     this.preSelectedShowId = id;\n        //     console.log('preSelectedShowId updated to:', this.preSelectedShowId);\n        // },\n        // Action to update selectedShowId and selectedShow based on selectedShowId\n        setSelectedShowId(showId) {\n            this.selectedShowId = showId\n            this.updateSelectedShow() // Call the method to update selectedShow based on new selectedShowId\n        },\n        // Method to find and update selectedShow based on selectedShowId\n        updateSelectedShow() {\n            this.selectedShow = this.shows.find(show => show.id === this.selectedShowId) || null\n        },\n        goLive() {\n            this.isLive = true\n        },\n        stopLive() {\n            this.isLive = false\n        },\n        async startRecording() {\n            // console.log('1 start recording in Go Live Store')\n            const notificationStore = useNotificationStore()\n            const showSlug = this.selectedShow.slug\n            // console.log(`Starting recording for show ${showSlug}`)\n            this.processingRecordingChange = true\n            try {\n                // console.log('2a post to /mist-stream/start-recording/')\n                const response = await axios.post('/mist-stream/start-recording/'+showSlug, {\n                    stream_name: this.streamKey,\n                })\n                // console.log('5 and we\\'re back in the GoLiveStore')\n                // console.log('Recording started successfully:', response.data)\n                // console.log('Stream Name:', this.streamKey)\n                const {message, status} = response.data\n                // Use the status from the response for the notification\n                notificationStore.setToastNotification(message, status)\n                // Update the recording status\n                this.isRecording = true\n            } catch (error) {\n                // console.error('Error starting push:', error)\n                notificationStore.setToastNotification('Failed to start recording.', 'error')\n                // Handle the error appropriately in your UI\n            } finally {\n                this.processingRecordingChange = false // Stop processing spinner regardless of outcome\n            }\n        },\n        async stopRecording() {\n            const notificationStore = useNotificationStore()\n            const showSlug = this.selectedShow.slug\n            // console.log(`Stopping recording for show ${showSlug}`)\n            this.processingRecordingChange = true\n            // console.log(`Stopping recording for show ${showSlug}`)\n            try {\n                const response = await axios.post('/mist-stream/stop-recording/'+showSlug, {\n                    stream_name: this.streamKey,\n                })\n                // console.log('Recording stopped successfully:', response.data)\n                const {message, status} = response.data\n                notificationStore.setToastNotification(message, status)\n                // Update the recording status\n                this.isRecording = false\n            } catch (error) {\n                // console.error('Error stopping recording:', error)\n                notificationStore.setToastNotification('Failed to stop push.', 'error')\n            } finally {\n                this.processingRecordingChange = false // Stop processing spinner regardless of outcome\n            }\n        },\n        // async fetchStreamInfo(streamName) {\n        //     try {\n        //         // const response = await fetch(`http://mist.nottv.io:8080/json_${encodedStreamName}.js`); // Replace with your URL\n        //         const response = await fetch(`/fetch-stream-info/${streamName}`) // Replace with your URL\n        //         if (!response.ok) throw new Error('Failed to fetch')\n        //         this.streamInfo = await response.json() // Store the data in serverInfo\n        //     } catch (error) {\n        //         console.error('Error fetching server info:', error)\n        //     }\n        // },\n        async fetchStreamInfo() {\n            const notificationStore = useNotificationStore()\n            // console.log('start fetch stream info...')\n            try {\n                if (!this.mistServerUri) {\n                    await this.fetchMistServerUri()\n                }\n                // Then, use the URI in your next request\n                const response = await axios.post('/fetch-stream-info', {\n                    streamName: this.streamKey,\n                    mistServerUri: this.mistServerUri, // Pass it as a string\n                })\n                // console.log('response returned...')\n                // console.log(response.data);\n                this.streamInfo = response.data.streamInfo || []\n                // Assuming a successful response might look like {\"message\": \"Stream is online\", \"status\": \"success\"}\n                let message, status\n\n                // Check if the response contains an error field\n                if (response.data.streamInfo.error) {\n                    message = response.data.streamInfo.error\n                    status = 'error' // Assuming 'error' as a fallback status\n                    // console.log('error returned...')\n                } else if (response.data.message && response.data.success) {\n                    // If it's a success message with a status\n                    message = response.data.message\n                    status = 'info'\n                    // console.log('success returned...')\n\n                } else {\n                    // Fallback for unexpected response structure\n                    message = 'Received unexpected response from server.'\n                    status = 'info' // Default to 'info' or another appropriate fallback status\n                    // console.log('unexpected response returned...')\n                }\n\n                // Use the status from the response for the notification\n                // notificationStore.setToastNotification(message, status)\n            } catch (error) {\n                // console.error(error);\n                notificationStore.setToastNotification('Failed to fetch stream info.', 'error')\n                // console.log('catch error...')\n            }\n        },\n        async fetchRtmpUri() {\n            try {\n                const response = await fetch(`/fetch-rtmp-uri`)\n                if (!response.ok) throw new Error('Failed to fetch')\n\n                // Parse the plain text body of the response\n                // Store the RTMP URI string in a Vue data property or similar\n                this.rtmpUri = await response.text()\n            } catch (error) {\n                // console.error('Error fetching RTMP URI:', error)\n            }\n        },\n        clearStreamInfo() {\n            this.streamInfo = null\n        },\n        toggleDisplayEpisodeGoLiveComponent(episode) {\n            // const videoPlayerAuxStore = useVideoAuxPlayerStore()\n            // videoPlayerAuxStore.reset()\n            this.displayEpisodeGoLiveComponent = !this.displayEpisodeGoLiveComponent\n            this.isEpisode = !!this.displayEpisodeGoLiveComponent\n            this.episode = episode\n            this.selectedShowId = this?.episode?.show_id\n\n        },\n        updateEpisode(episode) {\n            this.episode = episode\n        },\n        async fetchMistServerUri() {\n            const videoAuxPlayerStore = useVideoAuxPlayerStore();\n            let uriResponse = await axios.get('/mist-server/uri')\n            this.mistServerUri = uriResponse.data\n            videoAuxPlayerStore.setMistServerUri(this.mistServerUri)\n        },\n        async reloadPlayer() {\n            const videoAuxPlayerStore = useVideoAuxPlayerStore()\n            this.playerIsReloading = true // Start loading\n            try {\n                // First, fetch the URI\n\n                // let uriResponse = await axios.get('/mist-server/uri');\n                // this.mistServerUri = uriResponse.data; // Accessing the data prop// erty\n                // // Create an object and set the 'name' property\n                const mistStream = {\n                    name: this.streamKey,\n                }\n                // // Now, use this URI in your next request\n                // const response = await axios.post('/fetch-stream-info', {\n                //     streamName: this.streamKey,\n                //     mistServerUri: this.mistServerUri,\n                // });\n                // Now, you can pass the 'mistStream' object to the method\n                await videoAuxPlayerStore.loadMistStreamVideo(mistStream, true).then(\n                    // await this.fetchStreamInfo(),\n                )\n            } catch (error) {\n                // console.error(error);\n                // notificationStore.setGeneralServiceNotification('Failed to reload player', error)\n                notificationStore.setToastNotification('Failed to reload player.', 'error')\n            } finally {\n                this.playerIsReloading = false // Stop loading regardless of outcome\n            }\n\n        },\n        async fetchPushDestinations() {\n            const notificationStore = useNotificationStore()\n            this.isLoadingDestinations = true // Start loading\n            try {\n                const response = await axios.post('/go-live/fetch-push-destinations', {\n                    showId: this.selectedShowId,\n                    streamName: this.streamKey,\n                    backgroundFetch: false,\n                })\n                // console.log(response.data);\n                this.destinations = response.data.destinations || []\n                this.isRecording = response.data.recording || false\n                console.log('response about recording: ' + response.data.recording)\n                // Extract message and status from the response\n                const {message, status} = response.data\n                // Use the status from the response fo\n                // r the notification\n                // notificationStore.setToastNotification(message, status)\n            } catch (error) {\n                // console.error(error);\n                // notificationStore.setGeneralServiceNotification('Failed to reload player', error)\n                notificationStore.setToastNotification('Failed to fetch push destinations.', 'error')\n            } finally {\n                this.isLoadingDestinations = false // Stop loading regardless of outcome\n            }\n        },\n        async backgroundFetchPushDestinations() {\n            // Background Fetch doesn't use Toast Notifications,\n            // Keep the fetch silent in the background.\n\n            this.isLoadingDestinations = true // Start loading\n            try {\n                const response = await axios.post('/go-live/fetch-push-destinations/', {\n                    showId: this.selectedShowId,\n                    streamName: this.streamKey,\n                    backgroundFetch: true,\n                })\n                this.destinations = response.data.destinations || []\n                this.isRecording = response.data.recording || false\n            } catch (error) {\n                // console.error(error);\n                // notificationStore.setGeneralServiceNotification('Error Fetching Push Destinations', error)\n                notificationStore.setToastNotification('Failed to fetch push destinations.', 'error')\n            } finally {\n                this.isLoadingDestinations = false // Stop loading regardless of outcome\n            }\n        },\n        async deleteDestination(destinationId) {\n            // Confirm deletion with the user before proceeding\n            if (confirm(`Are you sure you want to delete the destination with ID: ${destinationId}?`)) {\n                try {\n                    // Perform the delete operation\n                    await axios.delete('/mist-stream-push-destinations/' + destinationId)\n                    // Optionally, remove the item from your local state to update the UI\n                    this.destinations = this.destinations.filter(destination => destination.id !== destinationId)\n                } catch (error) {\n                    notificationStore.setGeneralServiceNotification('Error deleting destination', error)\n                    // console.error(`Error deleting destination with ID: ${destinationId}`, error)\n                }\n            }\n        },\n        async startPush(destinationId, fullPushUri) {\n            const notificationStore = useNotificationStore()\n            this.loadingDestinationId = destinationId\n            // console.log(`Starting push for destination ${destinationId}`)\n            try {\n                const response = await axios.post('/mist-stream/start-push', {\n                    destination_id: destinationId,\n                    full_push_uri: fullPushUri,\n                    stream_name: this.streamKey,\n                })\n                // console.log('Push started successfully:', response.data)\n                // console.log('Destination ID:', destinationId)\n                // console.log('Full Push URI:', fullPushUri)\n                // console.log('Stream Name:', this.streamKey)\n                const {message, status} = response.data\n                // Use the status from the response for the notification\n                notificationStore.setToastNotification(message, status)\n                // Update the component's state to reflect the change\n                const index = this.destinations.findIndex(destination => destination.id === destinationId)\n                if (index !== -1) {\n                    this.destinations[index].push_is_started = 1\n                }\n            } catch (error) {\n                // console.error('Error starting push:', error)\n                notificationStore.setToastNotification('Failed to start push.', 'error')\n                // Handle the error appropriately in your UI\n            } finally {\n                this.loadingDestinationId = null // Stop loading regardless of outcome\n            }\n        },\n        async stopPush(destinationId) {\n            const notificationStore = useNotificationStore()\n            this.loadingDestinationId = destinationId\n            // console.log(`Stopping push for destination ${destinationId}`)\n            try {\n                const response = await axios.post('/mist-stream/stop-push', {destination_id: destinationId})\n                // console.log('Push stopped successfully:', response.data)\n                const {message, status} = response.data\n                notificationStore.setToastNotification(message, status)\n                // Update the component's state to reflect the change\n            } catch (error) {\n                // console.error('Error stopping push:', error)\n                notificationStore.setToastNotification('Failed to stop push.', 'error')\n            } finally {\n                this.loadingDestinationId = null // Stop loading regardless of outcome\n                const index = this.destinations.findIndex(destination => destination.id === destinationId)\n                if (index !== -1) {\n                    this.destinations[index].push_is_started = 0\n                }\n            }\n        },\n        async enableAutoPush(destinationId) {\n            this.loadingDestinationId = destinationId\n            const notificationStore = useNotificationStore()\n            try {\n                const response = await axios.post('/mist-stream/push-auto-add/' + destinationId)\n                // console.log('Auto push enabled successfully:', response.data)\n                const {message, status} = response.data\n                notificationStore.setToastNotification(message, status)\n                const index = this.destinations.findIndex(destination => destination.id === destinationId)\n                if (index !== -1) {\n                    this.destinations[index].has_auto_push = 1\n                }\n            } catch (error) {\n                // console.error('Error enabling auto push:', error)\n                notificationStore.setToastNotification('Failed to enable auto push.', 'error')\n            } finally {\n                this.loadingDestinationId = null // Stop loading regardless of outcome\n            }\n        },\n        async disableAutoPush(destinationId) {\n            const notificationStore = useNotificationStore()\n            this.loadingDestinationId = destinationId\n            try {\n                const response = await axios.post('/mist-stream/push-auto-remove/' + destinationId)\n                // console.log('Auto push removed successfully:', response.data)\n                const {message, status} = response.data\n                notificationStore.setToastNotification(message, status)\n                const index = this.destinations.findIndex(destination => destination.id === destinationId)\n                if (index !== -1) {\n                    this.destinations[index].has_auto_push = 0\n                }\n            } catch (error) {\n                // console.error('Error disabling auto push:', error)\n                notificationStore.setToastNotification('Failed to disable auto push.', 'error')\n            } finally {\n                this.loadingDestinationId = null // Stop loading regardless of outcome\n            }\n        },\n        async disableAllAutoPushes() {\n            const notificationStore = useNotificationStore()\n            this.isProcessingDisableAllAutoPushes = true\n            try {\n                const response = await axios.post('/mist-stream/remove-all-auto-pushes-for-stream', {'streamName': this.streamKey})\n                // console.log('Auto push disabled successfully:', response.data)\n                const {message, status} = response.data\n                notificationStore.setToastNotification(message, status)\n                await this.fetchPushDestinations()\n            } catch (error) {\n                // console.error('Error disabling auto push:', error)\n                notificationStore.setToastNotification('Failed to disable auto push.', 'error')\n            } finally {\n                this.isProcessingDisableAllAutoPushes = false // Stop loading regardless of outcome\n                await this.fetchPushDestinations()\n            }\n        },\n    },\n    getters: {\n        selectedShow: (state) => {\n            const show = state.shows.find(show => show.id === state.selectedShowId) || null\n            state.streamKey = show?.mist_stream_wildcard?.name || 'Fallback value if undefined'\n            state.wildcardId = show?.mist_stream_wildcard?.id || 'Fallback value if undefined'\n            state.isRecording = show?.mist_stream_wildcard?.is_recording || false\n            return show\n        },\n        fullRtmpUri: (state) => {\n            return state.rtmpUri ? state.rtmpUri + 'live/' : ''\n        },\n        fullUrl: (state) => {\n            // Directly construct fullRtmpUri from state\n            const fullRtmpUri = state.rtmpUri ? state.rtmpUri + 'live/' : ''\n\n            // Directly find the show based on selectedShowId to avoid using getters\n            // const show = state.shows.find(show => show.id === state.selectedShowId) || null;\n            // const streamKey = show?.mist_stream_wildcard?.name || 'Fallback value if undefined';\n\n            // Return the concatenated URL\n            return `${fullRtmpUri}${state.streamKey}`\n        },\n        // Example getter that might filter destinations based on some criteria\n        activeDestinations: (state) => {\n            return state.destinations.filter(destination => destination.push_is_started)\n        },\n        sourceName: (state) => {\n            if (state.selectedShow?.mist_stream_wildcard?.name) {\n                return state.selectedShow.mist_stream_wildcard.name\n            } else if (state.episode?.mist_stream_wildcard?.name) {\n                return state.episode.mist_stream_wildcard.name\n            }\n            return null // No source available\n        },\n        streamOffline: (state) => {\n            // Check if the 'error' key exists and if its value is 'Stream is offline'\n            // If streamInfo is null or undefined, it defaults to an empty object {}\n            return (state.streamInfo?.error ?? '') === 'Stream is offline';\n        },\n    },\n\n\n})\n","import { defineStore } from 'pinia'\nimport { useUserStore } from '@/Stores/UserStore'\nimport { createTimeSlots } from '@/Utilities/TimeUtils'\nimport {\n    addDays,\n    addHours,\n    addMonths,\n    eachDayOfInterval,\n    eachHourOfInterval,\n    endOfMonth,\n    endOfWeek,\n    format,\n    getHours,\n    getMonth,\n    getYear,\n    isSameDay,\n    isToday,\n    isTomorrow,\n    isYesterday,\n    startOfDay,\n    startOfHour,\n    startOfMonth,\n    startOfWeek,\n    subMonths,\n} from 'date-fns'\n\n// Import dayjs and its plugins\nimport dayjs from 'dayjs'\nimport relativeTime from 'dayjs/plugin/relativeTime'\nimport timezone from 'dayjs/plugin/timezone'\nimport utc from 'dayjs/plugin/utc'\n\n// Extend dayjs with the plugins\ndayjs.extend(relativeTime)\ndayjs.extend(timezone)\ndayjs.extend(utc)\n\nfunction convertScheduleToTimezone(scheduleData) {\n    const userStore = useUserStore() // Access the UserStore\n\n    return scheduleData.data.map(item => {\n        // Convert top-level start_time and end_time using UserStore methods\n        const startTimeInUserTz = item.start_time ? userStore.formatDateTimeFromUtcToUserTimezone(item.start_time, 'YYYY-MM-DD HH:mm:ss') : null\n        const endTimeInUserTz = item.end_time ? userStore.formatDateTimeFromUtcToUserTimezone(item.end_time, 'YYYY-MM-DD HH:mm:ss') : null\n\n        // Check and convert recurrenceDetails if present\n        let recurrenceDetailsInUserTz = null\n        if (item.recurrenceDetails) {\n            const {start_time, start_date, end_date} = item.recurrenceDetails\n            recurrenceDetailsInUserTz = {\n                ...item.recurrenceDetails,\n                start_time: start_time ? userStore.formatTimeInUserTimezone(start_time, 'HH:mm:ss') : null,\n                start_date: start_date ? userStore.formatDateTimeFromUtcToUserTimezone(start_date, 'YYYY-MM-DD') : null,\n                end_date: end_date ? userStore.formatDateTimeFromUtcToUserTimezone(end_date, 'YYYY-MM-DD') : null,\n            }\n        }\n\n        return {\n            ...item,\n            start_time: startTimeInUserTz,\n            end_time: endTimeInUserTz,\n            recurrenceDetails: recurrenceDetailsInUserTz,\n        }\n    })\n}\n\n// Helper function to get dates within the next 6 hours from viewingWindowStart\nfunction getUpcomingContentDates(viewingWindowStart) {\n    let dates = []\n    let start = new Date(viewingWindowStart)\n    for (let i = 0; i < 6; i++) {\n        dates.push(new Date(start.setHours(start.getHours() + i)))\n    }\n    return dates\n}\n\n/**\n * Filters shows that are scheduled within a specified datetime range, adjusted to the user's timezone.\n *\n * This function ensures that show scheduling comparisons are made accurately by converting all involved\n * datetime values to the user's local timezone using functions from the userStore. It includes type checking\n * to ensure input dates are valid and handles edge cases where shows start or end at the boundary times.\n *\n * @param {Object} state - The state object containing the shows' data.\n * @param {Date} startDateTime - The start datetime from which to filter shows, expected to be a Date object.\n * @param {Date} endDateTime - The end datetime up to which to filter shows, expected to be a Date object.\n * @returns {Array} An array of shows that start within the specified datetime range.\n */\nfunction fetchShowsScheduledBetween(state, startDateTime, endDateTime) {\n    const userStore = useUserStore() // Access user-specific settings and utilities\n\n    if (!(startDateTime instanceof Date && endDateTime instanceof Date)) {\n        throw new TypeError('startDateTime and endDateTime must be Date objects.');\n    }\n\n    // Convert start and end DateTime to the user's timezone for accurate comparison\n    const startInUserTZ = userStore.convertUtcToUserTimezone(startDateTime.toISOString())\n    const endInUserTZ = userStore.convertUtcToUserTimezone(endDateTime.toISOString())\n\n    return state.weeklyContent.filter(show => {\n        if (typeof show.start_time !== 'string') {\n            console.warn('Expected show.start_time to be a string in ISO format.');\n            return false;\n        }\n        const showStartTimeInUserTZ = userStore.convertUtcToUserTimezone(show.start_time);\n\n        // Check if the show's start time is within the specified datetime range, inclusive of start and exclusive of end\n        return new Date(showStartTimeInUserTZ) >= new Date(startInUserTZ) && new Date(showStartTimeInUserTZ) < new Date(endInUserTZ);\n    });\n}\n\nfunction resolveSchedulingConflicts(shows) {\n    // Sort shows by start time, then by priority for shows with the same start time\n    const sortedShows = shows.sort((a, b) => {\n        const startTimeComparison = new Date(a.start_time) - new Date(b.start_time)\n        if (startTimeComparison === 0) { // If start times are the same\n            return a.priority - b.priority // Compare by priority\n        }\n        return startTimeComparison\n    })\n\n    const resolvedShows = []\n    const showsByStartTime = {}\n\n    // Group shows by their start time\n    sortedShows.forEach(show => {\n        const startTime = new Date(show.start_time).toISOString()\n        if (!showsByStartTime[startTime]) {\n            showsByStartTime[startTime] = []\n        }\n        showsByStartTime[startTime].push(show)\n    })\n\n    // For each start time, select the show with the highest priority (lowest priority number)\n    Object.values(showsByStartTime).forEach(group => {\n        if (group.length > 1) {\n            // If there are conflicts, push only the show with the highest priority\n            resolvedShows.push(group[0]) // Assuming the group is already sorted by priority\n        } else {\n            // No conflict, push the single show\n            resolvedShows.push(group[0])\n        }\n    })\n\n    return resolvedShows\n}\n\nfunction adjustShowsForGrid(shows, timeSlots) {\n    return shows.map(show => {\n        // Your existing logic for calculating show placement\n        const showStart = new Date(show.start_time)\n        const showEnd = new Date(show.start_time)\n        showEnd.setMinutes(showEnd.getMinutes() + show.durationMinutes)\n        const slotIndex = timeSlots.findIndex(slot => showStart >= slot && showStart < new Date(slot.getTime() + 30 * 60000))\n        let span = Math.ceil(show.durationMinutes / 30)\n        if (slotIndex + span > timeSlots.length) {\n            span = timeSlots.length - slotIndex\n        }\n\n        return {\n            ...show,\n            gridStart: slotIndex + 1,\n            gridSpan: span,\n        }\n    })\n}\n\nfunction fillEmptySlotsWithPlaceholders(showsWithPlacement, timeSlots) {\n    const gridItems = []\n\n    timeSlots.forEach((slot, index) => {\n        // Ensure every slot is a Date object, convert if necessary\n        console.log('type of slot: ' + slot, typeof slot); // Check what `slot` contains and its type\n\n        if (!(slot instanceof Date)) {\n            console.error('slot is not a Date object:', slot);\n            return; // Skip this iteration if `slot` is not a Date object\n        }\n\n        const slotStart = slot\n        const showExistsInSlot = showsWithPlacement.some(show =>\n            slotStart >= new Date(show.start_time) &&\n            slotStart < new Date(new Date(show.start_time).getTime() + show.durationMinutes * 60000),\n        )\n\n        if (!showExistsInSlot) {\n            // Insert a placeholder show for this slot\n            gridItems.push({\n                placeholder: true,\n                start_time: slot.toISOString(),\n                gridStart: index + 1,\n                gridSpan: 1,\n                content: {show: {name: 'Nothing scheduled.'}},\n            })\n        }\n    })\n\n    // Merge and sort the grid items by their start time/gridStart to maintain chronological order\n    return [...showsWithPlacement, ...gridItems].sort((a, b) => a.gridStart - b.gridStart)\n}\n\n\nconst initialState = () => ({\n    viewingWindowStart: new Date(),\n    currentMonth: new Date(),\n    selectedDay: new Date(),\n    currentWeekStart: null,\n    currentWeekEnd: null,\n    // viewingMode: 'automatic', // or 'userSelected'\n    fiveDaySixHourSchedule: [], // Holds the schedule shows 5 day / 6 hour structured data\n    todaysContent: [],\n    weeklyContent: [],\n    dataFetchLog: [],\n    scheduleIsLoading: false,\n    savingToSchedule: false,\n})\n\nexport const useScheduleStore = defineStore('scheduleStore', {\n    state: initialState,\n    actions: {\n        resetAll() {\n            // Reset the store to its original state (clear all data)\n            Object.assign(this, initialState())\n        },\n        reset() {\n            const now = new Date()\n            this.viewingWindowStart = now\n            this.currentMonth = now\n            this.selectedDay = now\n        },\n        async setSelectedDay(day) {\n            this.selectedDay = day\n            // Explicitly set the viewingWindowStart to 4 AM for the selected day\n            this.viewingWindowStart = addHours(startOfDay(day), 4)\n            this.currentWeekStart = startOfWeek(day, {weekStartsOn: 0})\n            this.currentWeekEnd = endOfWeek(day, {weekStartsOn: 0})\n\n            // // Check if the week of the selected day is already loaded\n            // this.currentWeekStart = startOfWeek(day, {weekStartsOn: 0});\n            // this.currentWeekEnd = endOfWeek(day, {weekStartsOn: 0});\n\n            // Use the updated fetch logic\n            await this.fetchWeekDataIfNeeded()\n\n            // // First, check if we need to load data for the new week\n            // if (this.needsDataForWeek(weekStart, weekEnd)) {\n            //     // If new data is needed for the week, load it\n            //     await this.loadWeekFromDate(day).catch(error => {\n            //         console.error(\"Failed to load data for the new week:\", error);\n            //     });\n            // }\n\n            // Then, check and fetch for any missing upcoming content\n            // This is necessary in case the week data is present but specific upcoming content within the week is missing\n            // await this.checkAndFetchForUpcomingContent();\n        },\n        setSelectedDayToToday(day) {\n            const now = new Date()\n            this.selectedDay = now\n            this.viewingWindowStart = startOfHour(now)\n        },\n        async changeDay(days) {\n            const currentTime = this.viewingWindowStart.getHours() * 60 + this.viewingWindowStart.getMinutes()\n            let newDay = addDays(startOfDay(this.viewingWindowStart), days)\n            newDay = new Date(newDay.setMinutes(currentTime)) // Preserve time of day\n\n            this.selectedDay = newDay\n            this.viewingWindowStart = newDay\n\n            // Update the week's range based on the new day\n            this.currentWeekStart = startOfWeek(newDay, {weekStartsOn: 0})\n            this.currentWeekEnd = endOfWeek(newDay, {weekStartsOn: 0})\n\n            // // Check if the week of the new day is already loaded\n            // const weekStart = startOfWeek(newDay, {weekStartsOn: 0});\n            // const weekEnd = endOfWeek(newDay, {weekStartsOn: 0});\n\n            // Use the updated centralized fetch logic without redundant checks\n            await this.fetchWeekDataIfNeeded()\n\n            // // Check for the need to load data for the new week\n            // if (this.needsDataForWeek(weekStart, weekEnd)) {\n            //     await this.loadWeekFromDate(newDay).catch(error => {\n            //         console.error(\"Failed to load data for the new week:\", error);\n            //     });\n            // }\n\n            // // Check for the need to load data for the new week\n            // if (!this.needsDataForWeek()) {\n            //     // Data for the current week has already been loaded; skip fetching\n            //     console.log(\"Data for the current week has already been loaded; skipping redundant fetch.\");\n            //     return;\n            // }\n            //\n            // // Proceed with data fetching if needed\n            // await this.checkAndFetchForUpcomingContent();\n        },\n        async shiftHours(hours) {\n            // Shift the viewing window\n            this.viewingWindowStart = addHours(this.viewingWindowStart, hours)\n            this.currentWeekStart = startOfWeek(this.viewingWindowStart, {weekStartsOn: 0})\n            this.currentWeekEnd = endOfWeek(this.viewingWindowStart, {weekStartsOn: 0})\n\n            // // Update selectedDay if the day has changed\n            // if (!isSameDay(this.viewingWindowStart, this.selectedDay)) {\n            //     this.selectedDay = startOfDay(this.viewingWindowStart);\n            // }\n\n            // If the day has changed, update selectedDay and the week's range\n            if (!isSameDay(this.viewingWindowStart, this.selectedDay)) {\n                this.selectedDay = startOfDay(this.viewingWindowStart)\n            }\n\n            // // Check if the week of the new viewing window is already loaded\n            // this.currentWeekStart = startOfWeek(this.viewingWindowStart, { weekStartsOn: 0 });\n            // this.currentWeekEnd = endOfWeek(this.viewingWindowStart, { weekStartsOn: 0 });\n\n            // Use the updated fetch logic\n            await this.fetchWeekDataIfNeeded()\n\n            // // Check for the need to load data for the new week\n            // if (!this.needsDataForWeek()) {\n            //     // Data for the current week has already been loaded; skip fetching\n            //     console.log(\"Data for the current week has already been loaded; skipping redundant fetch.\");\n            //     return;\n            // }\n\n            //\n            // await this.loadWeekFromDate(this.viewingWindowStart).catch(error => {\n            //     console.error(\"Failed to load data for the new week:\", error);\n            // });\n\n            // Proceed with data fetching if needed\n            // await this.checkAndFetchForUpcomingContent();\n        },\n        isElevenPM(date) {\n            return getHours(date) === 23 // Checks if the hour is 23 (11 PM)\n        },\n        // Actions to change the month\n        async subtractMonth() {\n            // Subtract one month from the currentMonth\n            this.currentMonth = subMonths(this.currentMonth, 1)\n\n            try {\n                await this.setSelectedDay(this.currentMonth)\n                console.log('Set selected day based on current month:', this.currentMonth)\n            } catch (error) {\n                console.error(`Failed to set selected day based on current month ${this.currentMonth}:`, error)\n            }\n        },\n        async addMonth() {\n            this.currentMonth = addMonths(this.currentMonth, 1)\n            try {\n                await this.setSelectedDay(this.currentMonth)\n                console.log('Set selected day based on current month:', this.currentMonth)\n            } catch (error) {\n                console.error(`Failed to set selected day based on current month ${this.currentMonth}:`, error)\n            }\n        },\n        async fetchFiveDaySixHourSchedule() {\n            console.error('fetchFiveDaySixHourSchedule')\n            try {\n                const userStore = useUserStore()\n                const response = await axios.get('/api/schedule')\n\n                // Fallback to response timezone if userStore.timezone is not set\n                const timezone = userStore.timezone || response.data.userTimezone || 'UTC' // Additional fallback to 'UTC'\n\n                // Convert the entire schedule, including nested recurrenceDetails, to the user's timezone\n                this.fiveDaySixHourSchedule = convertScheduleToTimezone(response.data, timezone)\n                console.error('fetchFiveDaySixHourSchedule', response.data)\n            } catch (error) {\n                console.error('Failed to load schedule shows:', error)\n                // Handle the error state as needed, e.g., setting an error state property\n            }\n        },\n        async fetchTodaysContent() {\n            try {\n                const userStore = useUserStore()\n                const response = await axios.get('/api/schedule/today')\n\n                // Fallback to response timezone if userStore.timezone is not set\n                const timezone = userStore.timezone || response.data.userTimezone || 'UTC' // Additional fallback to 'UTC'\n\n                this.todaysContent = convertScheduleToTimezone(response.data, timezone)\n            } catch (error) {\n                console.error('Failed to fetch today\\'s content:', error)\n            }\n        },\n        async preloadWeeklyContent() {\n            // Use the current date to preload content for the current week\n            const currentDate = new Date()\n\n            try {\n                // Call loadWeekFromDate with the current date\n                await this.loadWeekFromDate(currentDate)\n            } catch (error) {\n                console.error('Failed to preload weekly content:', error)\n            }\n        },\n        async loadWeekFromDate(date) {\n            let formattedDate // Declare formattedDate outside of the try block\n            this.scheduleIsLoading = true\n            try {\n                const userStore = useUserStore()\n                // Ensure the date is in UTC format for the request\n                console.log('Date before formatted: ' + date)\n                const fullISODate = date.toISOString()\n\n                console.log(`Loading week data for date in UTC: ${fullISODate}`)\n\n                // Send the dateTime and timezone as a JSON object in a POST request\n                const response = await axios.post(`/api/schedule/week/${fullISODate}`)\n\n                // const formattedDate = date.toISOString().split('T')[0];\n                // console.log(`Loading week data for date: ${formattedDate}`); // Log the date being requested\n                //\n                // const response = await axios.get(`/api/schedule/week/${formattedDate}`);\n                console.log('Received response:', response.data) // Log the raw response data\n\n                // Fallback to response timezone if userStore.timezone is not set\n                const timezone = userStore.timezone || response.data.userTimezone || 'UTC' // Additional fallback to 'UTC'\n                console.log(`Using timezone: ${timezone}`) // Log the timezone being used\n\n                const newData = convertScheduleToTimezone(response.data, timezone) // Ensure you are accessing the correct data property from the response\n\n                // Update the fetch log with the current fetch\n                const weekStart = startOfWeek(new Date(date), {weekStartsOn: 0}).toISOString()\n                const weekEnd = endOfWeek(new Date(date), {weekStartsOn: 0}).toISOString()\n                const fetchTime = new Date().toISOString()\n\n                const existingLogIndex = this.dataFetchLog.findIndex(log => log.weekStart === weekStart && log.weekEnd === weekEnd)\n                if (existingLogIndex !== -1) {\n                    this.dataFetchLog[existingLogIndex].lastFetch = fetchTime\n                } else {\n                    this.dataFetchLog.push({weekStart, weekEnd, lastFetch: fetchTime})\n                }\n\n                // Merge newData into weeklyContent, avoiding duplicates\n                this.weeklyContent = [...this.weeklyContent, ...newData].filter((value, index, self) =>\n                        index === self.findIndex((t) => (\n                            t.id === value.id && t.start_time === value.start_time\n                        )),\n                )\n                this.scheduleIsLoading = false\n            } catch (error) {\n                console.error(`Failed to load content for week starting ${formattedDate}:`, error)\n                this.scheduleIsLoading = false\n            }\n        },\n        needsDataForWeek() {\n            // Helper function to format ISO date strings for easier comparison\n            const formatISODate = date => date.toISOString().split('T')[0]\n\n            // Current week range in ISO date string format\n            const weekStartStr = formatISODate(this.currentWeekStart)\n            const weekEndStr = formatISODate(this.currentWeekEnd)\n\n            // Enhanced logging for debugging\n            console.log(`Current week range: ${weekStartStr} to ${weekEndStr}`)\n            console.log('Existing data fetch log entries:', this.dataFetchLog)\n\n            // Iterate through the fetch log to check if the current week has been fetched\n            const weekHasBeenFetched = this.dataFetchLog.some(log => {\n                // Convert log dates to ISO string format for comparison\n                const logWeekStartStr = formatISODate(new Date(log.weekStart))\n                const logWeekEndStr = formatISODate(new Date(log.weekEnd))\n\n                // Log each comparison for insight\n                console.log(`Comparing to fetched range: ${logWeekStartStr} to ${logWeekEndStr}`)\n\n                return logWeekStartStr <= weekStartStr && logWeekEndStr >= weekEndStr\n            })\n\n            // Log the final determination\n            console.log(`Week from ${weekStartStr} to ${weekEndStr} has ${weekHasBeenFetched ? '' : 'not '}been fetched.`)\n\n            return !weekHasBeenFetched\n            // // Extend weekEnd to cover the span of upcoming content from viewingWindowStart\n            // const extendedEnd = this.calculateExtendedEndForUpcomingContent();\n            // let checkWeekEnd = new Date(this.currentWeekEnd); // Work with a copy to avoid side effects\n            //\n            // if (extendedEnd > checkWeekEnd) {\n            //     checkWeekEnd = extendedEnd;\n            // }\n            //\n            // // Now weekEnd includes any additional day(s) that might be displayed\n            // // Adjust the checkWeekEnd to include the entire day\n            // checkWeekEnd.setHours(23, 59, 59, 999);\n            //\n            // const hasDataForExtendedWeek = this.weeklyContent.some(content => {\n            //     const contentDate = new Date(content.start_time);\n            //     return contentDate >= this.currentWeekStart && contentDate <= checkWeekEnd;\n            // });\n            //\n            // console.log('Has data for extended week range:', hasDataForExtendedWeek);\n            // return !hasDataForExtendedWeek;\n        },\n        calculateExtendedEndForUpcomingContent() {\n            // Assuming viewingWindowStart is the reference start time for upcoming content\n            const baseStartTime = new Date(this.viewingWindowStart)\n            // Extend by 6 hours to cover the upcoming content span\n            // Return the extended end time, potentially adjusting into the next day\n            return new Date(baseStartTime.getTime() + (6 * 60 * 60 * 1000))\n        },\n        // Function to check for and fetch missing upcoming content\n        async checkAndFetchForUpcomingContent() {\n            const upcomingDates = getUpcomingContentDates(this.viewingWindowStart)\n            const now = new Date()\n            const fifteenMinutesAgo = new Date(now.getTime() - 15 * 60000)\n\n            for (const date of upcomingDates) {\n                const dateString = date.toISOString().split('T')[0]\n                const contentCoverageAndFreshness = this.weeklyContent.some(content => {\n                    const contentDate = new Date(content.start_time).toDateString()\n                    const lastFetchedTime = this.dataFetchLog[dateString]\n                    const isFresh = lastFetchedTime && new Date(lastFetchedTime) > fifteenMinutesAgo\n                    return date.toDateString() === contentDate && isFresh\n                })\n\n                if (!contentCoverageAndFreshness) {\n                    // This date needs data fetching\n                    await this.fetchDataAndUpdateLog(dateString, date)\n                    break // Assuming you fetch data for the week, so no need to check further dates within the same week\n                }\n            }\n        },\n        async fetchDataAndUpdateLog(dateString, date) {\n            try {\n                await this.loadWeekFromDate(date)\n                // Successfully fetched, so update the log\n                this.dataFetchLog[dateString] = new Date().toISOString()\n                console.log('Data fetched successfully for date:', dateString)\n            } catch (error) {\n                console.error(`Failed to fetch data for date ${dateString}:`, error)\n            }\n        },\n\n        // Updated to use this.currentWeekStart and this.currentWeekEnd directly\n        async fetchWeekDataIfNeeded() {\n            // Assumes this.currentWeekStart and this.currentWeekEnd are already set\n            if (this.needsDataForWeek()) {\n                await this.checkAndFetchForUpcomingContent().catch(error => {\n                    console.error('Failed to load data for the week:', error)\n                    return false // Indicates failure to fetch when an error occurs\n                })\n                // await this.loadWeekFromDate(this.currentWeekStart).catch(error => {\n                //     console.error(\"Failed to load data for the week:\", error);\n                //     return false; // Indicates failure to fetch when an error occurs\n                // });\n            } else {\n                console.log('Week data already loaded; no need to fetch.')\n            }\n\n            // Conditionally check for missing upcoming content within the current week\n            // only if new week data hasn't been fetched.\n            // if (!dataFetched) {\n            //     await this.checkAndFetchForUpcomingContent();\n            // }\n        },\n        // createTimeSlots(start, durationHours = 4, intervalMinutes = 30) {\n        //     let slots = [];\n        //     for (let i = 0; i < (durationHours * 60) / intervalMinutes; i++) {\n        //         let slotTime = new Date(start.getTime() + i * intervalMinutes * 60000);\n        //         slots.push(slotTime);\n        //     }\n        //     return slots;\n        // },\n\n\n        mapShowsToTimeSlots(shows, timeSlots) {\n            const showsWithAdjustedSpans = shows.map(show => {\n                const showStart = new Date(show.start_time)\n                const showEnd = new Date(show.start_time)\n                showEnd.setMinutes(showEnd.getMinutes() + show.durationMinutes)\n                const slotIndex = timeSlots.findIndex(slot => showStart >= slot && showStart < new Date(slot.getTime() + 30 * 60000))\n\n                // Initially set the span based on the show's duration\n                let span = Math.ceil(show.durationMinutes / 30)\n\n                // Adjust the span if there's an overlap with the next show's start time\n                if (slotIndex + span > timeSlots.length) {\n                    span = timeSlots.length - slotIndex // Adjust to not exceed the grid\n                }\n\n                // Return the show with adjusted span and calculated start index\n                return {\n                    ...show,\n                    gridStart: slotIndex + 1,\n                    gridSpan: span,\n                }\n            })\n\n            // Now handle placing the shows with adjusted spans in the grid, including placeholders for empty slots\n            return timeSlots.map((slot, index) => {\n                const showForSlot = showsWithAdjustedSpans.find(show => show.gridStart === index + 1)\n                if (showForSlot) {\n                    return showForSlot\n                } else {\n                    // If no show for this slot, return a placeholder\n                    return {\n                        placeholder: true,\n                        gridStart: index + 1,\n                        gridSpan: 1,\n                        content: {show: {name: 'Nothing scheduled.'}},\n                    }\n                }\n            })\n        },\n\n    },\n\n    getters: {\n        nextFourHoursOfContent: (state) => {\n            const now = new Date()\n            const startOfCurrentHour = new Date(now.setMinutes(0, 0, 0))\n            const fourHoursLater = new Date(startOfCurrentHour.getTime() + 4 * 60 * 60 * 1000)\n\n            const timeSlots = createTimeSlots(startOfCurrentHour, 4, 30)\n            let shows = fetchShowsScheduledBetween(state, startOfCurrentHour, fourHoursLater)\n            let resolvedShows = resolveSchedulingConflicts(shows)\n            let adjustedShows = adjustShowsForGrid(resolvedShows, timeSlots)\n            return fillEmptySlotsWithPlaceholders(adjustedShows, timeSlots)\n        },\n        // nextFourHoursOfContent: (state) => {\n        //     const userStore = useUserStore()\n        //     const now = new Date() // Current time\n        //     // const startOfCurrentHour = new Date(now.getFullYear(), now.getMonth(), now.getDate(), now.getHours());\n        //     const startOfCurrentHour = new Date(now.setMinutes(0, 0, 0))\n        //     const fourHoursLater = new Date(startOfCurrentHour.getTime() + 4 * 60 * 60 * 1000)\n        //\n        //\n        //     // Create time slots for the next four hours, at 30-minute intervals, in UTC\n        //     const utcTimeSlots = createTimeSlots(startOfCurrentHour, 4, 30)\n        //     // Convert each UTC time slot to the user's local timezone\n        //     const timeSlots = utcTimeSlots.map(slot =>\n        //         new Date(userStore.convertUtcToUserTimezone(slot)),\n        //     )\n        //\n        //     // Iterate over each time slot to either find a show that matches or insert a placeholder\n        //     const filledShows = timeSlots.map((slot, index) => {\n        //         const slotStart = dayjs(slot).format('YYYY-MM-DD HH:mm:ss')\n        //         const matchingShow = state.weeklyContent.find(show => {\n        //             const showStart = dayjs(show.start_time).format('YYYY-MM-DD HH:mm:ss')\n        //             return showStart === slotStart\n        //         })\n        //\n        //         if (matchingShow) {\n        //             // Calculate grid placement based on the show's start time and duration\n        //             return {\n        //                 ...matchingShow,\n        //                 gridStart: index + 1,\n        //                 gridSpan: Math.ceil(matchingShow.durationMinutes / 30),\n        //             }\n        //         } else {\n        //             // Create a placeholder for empty time slots\n        //             return {\n        //                 placeholder: true,\n        //                 start_time: slot.toISOString(),\n        //                 durationMinutes: 30,\n        //                 gridStart: index + 1,\n        //                 gridSpan: 1,\n        //                 content: {show: {name: 'Nothing scheduled.'}},\n        //             }\n        //         }\n        //     })\n        //\n        //     return filledShows\n        // },\n\n        // // Group shows by start time\n        // const showsGroupedByStartTime = state.weeklyContent.reduce((acc, item) => {\n        //     const itemStart = dayjs(item.start_time).format('YYYY-MM-DD HH:mm:ss');\n        //     if (!acc[itemStart]) {\n        //         acc[itemStart] = [];\n        //     }\n        //     acc[itemStart].push(item);\n        //     return acc;\n        // }, {});\n        //\n        // // Select the show with the lowest priority for each start time\n        // const selectedShows = Object.values(showsGroupedByStartTime).map(group => {\n        //     return group.reduce((selected, item) => {\n        //         return !selected || item.priority < selected.priority ? item : selected;\n        //     }, null);\n        // });\n        //\n        // // Sort, adjust for overlaps, and calculate grid placement as before\n        // let sortedShows = selectedShows\n        //     .filter(item => {\n        //         const itemStart = new Date(item.start_time);\n        //         return itemStart >= startOfCurrentHour && itemStart < fourHoursLater;\n        //     })\n        //     .sort((a, b) => {\n        //         const startDiff = new Date(a.start_time) - new Date(b.start_time);\n        //         return startDiff !== 0 ? startDiff : a.priority - b.priority;\n        //     })\n        //     .map((item, index, array) => {\n        //         // Grid placement logic remains the same as before\n        //         // Ensure the span doesn't exceed the grid or become negative\n        //         const itemStart = new Date(item.start_time);\n        //         const slotIndex = timeSlots.findIndex(slot => new Date(item.start_time) >= slot && new Date(item.start_time) < new Date(slot.getTime() + 30 * 60000));\n        //         let durationSlots = Math.ceil(item.durationMinutes / 30);\n        //         if (index < array.length - 1) {\n        //             // Adjust for overlaps with subsequent shows\n        //         }\n        //         const adjustedSpan = Math.max(1, Math.min(durationSlots, timeSlots.length - slotIndex));\n        //         return {\n        //             ...item,\n        //             gridStart: slotIndex + 1,\n        //             gridSpan: adjustedSpan\n        //         };\n        //     });\n\n        // Filter, sort, and adjust shows based on start time, duration, and priority\n        // let sortedShows = state.weeklyContent\n        //     .filter(item => {\n        //         const itemStart = new Date(item.start_time);\n        //         return itemStart >= startOfCurrentHour && itemStart < fourHoursLater;\n        //     })\n        //     .sort((a, b) => {\n        //         // Sort by start time; if equal, then by priority\n        //         const startDiff = new Date(a.start_time) - new Date(b.start_time);\n        //         return startDiff !== 0 ? startDiff : a.priority - b.priority;\n        //     })\n        //     .map((item, index, array) => {\n        //         // Convert back to string format matching start_time format\n        //         const formattedItemStartTime = dayjs(item.start_time).format('YYYY-MM-DD HH:mm:ss');\n        //\n        //         console.log('itemStartTimeInUserTZ: ' + formattedItemStartTime)\n        //         // Calculate grid placement for each show\n        //         const itemStart = new Date(item.start_time);\n        //         const itemEnd = new Date(item.start_time);\n        //         itemEnd.setMinutes(itemEnd.getMinutes() + item.durationMinutes);\n        //\n        //         // Find the index of the slot that the item starts in\n        //         // const slotIndex = timeSlots.findIndex(slot => itemStart >= slot && itemStart < new Date(slot.getTime() + 30 * 60000));\n        //\n        //         // Find the index of the slot that the item starts in\n        //         const slotIndex = timeSlots.findIndex(slot => {\n        //             return formattedItemStartTime >= slot && formattedItemStartTime < new Date(slot.getTime() + 30 * 60000);\n        //         });\n        //\n        //         let durationSlots = Math.ceil(item.durationMinutes / 30);\n        //         // Adjust for overlaps with subsequent shows\n        //         if (index < array.length - 1) {\n        //             const nextItemStart = new Date(array[index + 1].start_time);\n        //             if (itemEnd > nextItemStart) {\n        //                 // If overlap, reduce durationSlots\n        //                 const overlap = Math.ceil((itemEnd - nextItemStart) / (30 * 60000));\n        //                 durationSlots -= overlap;\n        //             }\n        //         }\n        //\n        //         // Ensure the span doesn't exceed the grid or become negative\n        //         const adjustedSpan = Math.max(1, Math.min(durationSlots, timeSlots.length - slotIndex));\n        //\n        //         // Return the adjusted show with grid placement information\n        //         return {\n        //             ...item,\n        //             gridStart: slotIndex + 1, // Grid is 1-indexed\n        //             gridSpan: adjustedSpan\n        //         };\n        //     });\n\n        // Create placeholders for each time slot if there's no show scheduled\n        // const filledShows = timeSlots.map(slot => {\n        //     const formattedSlot = dayjs(slot).format('YYYY-MM-DD HH:mm:ss');\n        //     const showForSlot = sortedShows.find(show => dayjs(show.start_time).format('YYYY-MM-DD HH:mm:ss') === formattedSlot);\n        //\n        //     if (showForSlot) {\n        //         return showForSlot; // Return the actual show if it exists\n        //     } else {\n        //         // Return a placeholder show for empty slots\n        //         return {\n        //             placeholder: true, // Indicate this is a placeholder\n        //             start_time: slot.toISOString(),\n        //             durationMinutes: 30, // Assuming a standard 30-minute slot\n        //             gridStart: timeSlots.indexOf(slot) + 1,\n        //             gridSpan: 1,\n        //             content: {\n        //                 show: {\n        //                     name: \"Nothing scheduled.\"\n        //                 }\n        //             }\n        //         };\n        //     }\n        // });\n\n        // Return the filled array of shows and placeholders\n        // return filledShows;\n        // return sortedShows;\n        // },\n        // nextFourHoursOfContent: (state) => {\n        //     const now = new Date(); // Get the current date and time\n        //     const start = new Date(now.getFullYear(), now.getMonth(), now.getDate(), now.getHours()); // Set to the top of the current hour\n        //     const end = new Date(start.getTime() + 4 * 60 * 60 * 1000); // 4 hours later from the start\n        //\n        //     // Filter weeklyContent for the next 6 hours window\n        //     return state.weeklyContent.filter(item => {\n        //         const itemStart = new Date(item.start_time);\n        //         return itemStart >= start && itemStart < end;\n        //     }).sort((a, b) => new Date(a.start_time) - new Date(b.start_time));\n        // },\n        nextFourHoursWithHalfHourIntervals: (state) => {\n            const userStore = useUserStore() // Access the user store\n            const userTimezone = userStore.timezone // Get the user's timezone\n\n            const intervals = []\n            const now = dayjs().tz(userTimezone) // Get the current time in the user's timezone\n            // Use dayjs to handle time correctly in the specified timezone\n            let current = now.startOf('hour') // Set to the top of the current hour\n\n            // Generate intervals for the next 4 hours, each 30 minutes apart\n            for (let i = 0; i < 8; i++) { // 4 hours / 30 minutes = 8 intervals\n                // Push an object with both the formatted time for display and the actual DateTime object\n                intervals.push({\n                    formatted: current.format('hh:mm A'), // Formatted time for display\n                    dateTimeString: current.format('YYYY-MM-DD HH:mm:ss'), // Y-m-d H:m:s format for comparisons\n                })\n                current = current.add(30, 'minute') // Move to the next 30-minute interval\n            }\n\n            return intervals\n        },\n        upcomingContent: (state) => {\n            const start = new Date(state.viewingWindowStart.getTime() - 60 * 60 * 1000) // 1 hour earlier\n            const end = new Date(start.getTime() + 7 * 60 * 60 * 1000) // 6 hours later\n\n            // Group shows by start time\n            const showsGroupedByStartTime = state.weeklyContent.reduce((acc, item) => {\n                const itemStart = new Date(item.start_time).getTime()\n                if (!acc[itemStart]) {\n                    acc[itemStart] = []\n                }\n                acc[itemStart].push(item)\n                return acc\n            }, {})\n\n            // Select the show with the lowest priority for each start time\n            const selectedShows = Object.values(showsGroupedByStartTime).map(group => {\n                return group.reduce((selected, item) => {\n                    return !selected || item.priority < selected.priority ? item : selected\n                }, null)\n            })\n\n            // Filter, ensuring they fall within the next 6-hour window, and sort\n            return selectedShows\n                .filter(item => {\n                    const itemStart = new Date(item.start_time)\n                    return itemStart >= start && itemStart < end\n                })\n                .sort((a, b) => new Date(a.start_time) - new Date(b.start_time))\n\n            // // Filter weeklyContent for the next 6 hours window\n            // return state.weeklyContent.filter(item => {\n            //     const itemStart = new Date(item.start_time);\n            //     return itemStart >= start && itemStart < end;\n            // }).sort((a, b) => new Date(a.start_time) - new Date(b.start_time));\n        },\n        nextSixHours: (state) => {\n            let adjustedStart = state.viewingWindowStart\n            const end = addHours(adjustedStart, 5)\n            return eachHourOfInterval({start: adjustedStart, end})\n        },\n        dateMessage: (state) => {\n            const startDay = startOfDay(state.viewingWindowStart)\n            const formattedDate = format(startDay, 'EEEE MMMM do, yyyy')\n            if (isToday(startDay)) {\n                return `Today - ${formattedDate}`\n            } else if (isYesterday(startDay)) {\n                return `Yesterday - ${formattedDate}`\n            } else if (isTomorrow(startDay)) {\n                return `Tomorrow - ${formattedDate}`\n            } else {\n                return formattedDate\n            }\n        },\n        currentMonthIndex: (state) => getMonth(state.currentMonth), // Adds a getter to get the current month's index\n        currentMonthName: (state) => format(state.currentMonth, 'MMMM'),\n        currentYear: (state) => getYear(state.currentMonth),\n        daysInMonth: (state) => {\n            const startOfCurrentMonth = startOfMonth(state.currentMonth)\n            const endOfCurrentMonth = endOfMonth(state.currentMonth)\n\n            // Adjust these to ensure the grid starts on Sunday and ends on Saturday\n            const startOfGrid = startOfWeek(startOfCurrentMonth, {weekStartsOn: 0})\n            const endOfGrid = endOfWeek(endOfCurrentMonth, {weekStartsOn: 0})\n\n            // Generate the days for the calendar grid\n            return eachDayOfInterval({start: startOfGrid, end: endOfGrid})\n        },\n        isToday: (state) => {\n            const today = new Date()\n            const viewingStart = new Date(state.viewingWindowStart)\n\n            return today.toDateString() === viewingStart.toDateString()\n        },\n    },\n})\n","// utilities/timeUtils.js\n/**\n * Creates an array of Date objects representing time slots.\n *\n * This function generates a sequence of time slots starting from a specified\n * start time, continuing for a given number of hours, and spaced apart\n * by a specified interval in minutes.\n *\n * @param {Date} start - The start time from which to generate slots, as a Date object.\n * @param {number} [durationHours=4] - The total duration for which to generate slots, in hours.\n * @param {number} [intervalMinutes=30] - The interval between each slot, in minutes.\n * @returns {Date[]} An array of Date objects, each representing a time slot.\n *\n * Example:\n * If start is `new Date('2024-01-01T08:00:00Z')`, durationHours is 2, and intervalMinutes is 30,\n * the output will be an array of Date objects representing the times:\n * `08:00`, `08:30`, `09:00`, and `09:30`.\n */\nexport function createTimeSlots(start, durationHours = 4, intervalMinutes = 30) {\n    let slots = [];\n    for (let i = 0; i < (durationHours * 60) / intervalMinutes; i++) {\n        let slotTime = new Date(start.getTime() + i * intervalMinutes * 60000);\n        slots.push(slotTime);  // Keep as Date object\n    }\n    return slots;\n}","import {defineStore} from \"pinia\";\nimport {Inertia} from \"@inertiajs/inertia\";\n\nconst initialState = () => ({\n    id: 0,\n    name: '',\n    description: '',\n    slug: '',\n    totalSpots: '',\n    memberSpots: '',\n    teamCreator: [],\n    teamLeader: [],\n    members: [],\n    managers: [],\n    activeShow: [],\n    activeEpisode: [],\n    creators: [],\n    showModal: Boolean,\n    confirmDialog: false,\n    confirmManagerDialog: false,\n    selectedManagerName: '',\n    selectedManagerId: 0,\n    addManager: false,\n    removeManager: false,\n    deleteMemberName: '',\n    deleteMemberId: 0,\n    noteEdit: 0,\n    note: '',\n    saveNoteProcessing: Boolean,\n    // on the show episode manage page\n    // turn on the go live div\n    goLiveDisplay: false,\n    can: [],\n    openComponent: 'teamShows',\n})\n\nexport const useTeamStore = defineStore('teamStore', {\n    state: initialState,\n    actions: {\n        reset() {\n            // Reset the store to its original state (clear all data)\n            Object.assign(this, initialState());\n        },\n        // async fill() {\n        //     let r = await import('@/Json/team.json');\n        //     this.$state = r.default;\n        // },\n        setActiveTeam(team) {\n            this.id = team.id;\n            this.name = team.name;\n            this.description = team.description;\n            this.slug = team.slug;\n            this.totalSpots = team.totalSpots;\n            this.memberSpots = team.memberSpots;\n        },\n        setActiveShow(show) {\n            this.activeShow = show;\n        },\n        setActiveEpisode(episode) {\n            this.activeShow = episode;\n        },\n        // getCreators() {\n        //     Inertia.reload({ only: ['creators'] })\n        // },\n        deleteTeamMemberCancel() {\n            this.confirmDialog = false;\n        },\n        confirmTeamManagerCancel() {\n            this.confirmManagerDialog = false;\n        },\n        // loadTeamMembers(members){\n        //     this.members = members;\n        // }\n        deleteTeamMember() {\n            Inertia.visit(route('teams.removeTeamMember'), {\n                method: 'post',\n                data: {\n                    user_id: this.deleteMemberId,\n                    team_id: this.id,\n                    team_slug: this.slug\n                },\n            })\n        },\n        addTeamManager() {\n            Inertia.visit(route('teams.addTeamManager'), {\n                method: 'post',\n                data: {\n                    user_id: this.selectedManagerId,\n                    team_id: this.id,\n                    team_slug: this.slug\n                },\n            })\n            this.confirmManagerDialog = false;\n        },\n        removeTeamManager() {\n            Inertia.visit(route('teams.removeTeamManager'), {\n                method: 'post',\n                data: {\n                    user_id: this.selectedManagerId,\n                    team_id: this.id,\n                    team_slug: this.slug\n                },\n            })\n            this.confirmManagerDialog = false;\n        },\n        toggleGoLiveDisplay() {\n            this.goLiveDisplay = ! this.goLiveDisplay;\n        },\n        async fetchTeamMembers() {\n            await axios.get('/team/team-members').then().error()\n        },\n    },\n\n    getters: {\n        spotsRemaining() {\n            if (this.totalSpots - this.memberSpots < 1){\n                return 0\n            }\n            return this.totalSpots - this.memberSpots;\n        },\n    }\n});\n\n\n// Another option for declaring specific data to return:\n// let data = r.default;\n//\n// import('@/Json/team.json').then(r => {\n// this.$patch({\n//     name: data.name,\n//     spots: data.spots,\n//     members: data.members\n// });\n// });\n","import { defineStore } from 'pinia'\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\nimport { useStreamStore } from '@/Stores/StreamStore'\nimport { useUserStore } from '@/Stores/UserStore'\nimport { useChannelStore } from '@/Stores/ChannelStore'\nimport { useShowStore } from '@/Stores/ShowStore'\nimport { useAudioStore } from '@/Stores/AudioStore'\nimport videojs from 'video.js'\nimport { usePage } from '@inertiajs/inertia-vue3'\nimport { nextTick } from 'vue'\nimport { useNotificationStore } from '@/Stores/NotificationStore'\n\nconst initialState = () => ({\n    mistServerUri: 'https://mist.nottv.io/', // tec21: 2024-02-09, if we don't start with the address here changing channels is really slow and buggy. Address for the MistServer listed in the Admin Settings saved in AppSetting\n    player: null, // Video.js player instance\n    eventListenersAttached: false, // Track if listeners are attached\n    videoPlayerLoaded: false,\n    class: '',\n    videoContainerClass: '',\n    // ottClass: 'OttClose',\n    videoSourceIdSrc1: '',\n    videoSourceIdSrc2: '',\n    videoSourceIdSrc3: '',\n    videoSourceTypeSrc1: '',\n    videoSourceTypeSrc2: '',\n    videoSourceTypeSrc3: '',\n    firstPlayVideoSourceType: '',\n    firstPlayVideoSource: '',\n    key: '',\n    videoName: '',\n    videoSource: '',\n    videoSourceType: '',\n    videoPoster: '',\n    nextSource: '',\n    previousSource: '',\n    currentView: '',\n    currentChannelId: 0,\n    currentChannelName: '',\n    currentShow: {},\n    currentShowEpisode: {},\n    currentVideo: {},\n    hasVideo: false,\n    controls: true,\n    muted: true,\n    paused: true,\n    // videoCurrentTime: '',\n    currentTime: 0, // Current playback time in seconds\n    duration: 0, // Total video duration in seconds\n    formattedTime: '00:00 / 00:00', // Formatted time string\n    blue: false, // DO NOT REMOVE\n    videoIsYoutube: false,\n    videoUploadComplete: false,\n})\n\nexport const useVideoAuxPlayerStore = defineStore('videoAuxPlayerStore', {\n    state: initialState,\n    actions: {\n        reset() {\n            // Reset the store to its original state (clear all data)\n            Object.assign(this, initialState())\n        },\n\n        async getMistServerUri() {\n            try {\n                let response = await axios.get('/mist-server/uri')\n                this.mistServerUri = response.data\n            } catch (error) {\n                console.error(error)\n            }\n        },\n\n        // Initialize or update the player instance\n        setPlayer(playerInstance) {\n            this.player = playerInstance\n            this.initializePlayer().then(() => {\n                this.attachEventListeners() // Attach event listeners after initialization\n            }).catch(error => {\n                console.error('Error during video player initialization:', error)\n            })\n        },\n\n        // Initialize the player with necessary settings and start playback\n        async initializePlayer() {\n            if (!this.player) {\n                console.error('Video.js player is not initialized.')\n                return\n            }\n\n            await nextTick() // Ensure Vue's DOM updates are processed\n\n            // Perform any necessary audio context and node setup\n            await useAudioStore().ensureAudioContextAndNodesReady(this.player)\n\n            // Apply initial player settings\n            this.player.controls(false)\n            this.player.muted(this.muted)\n\n            // Attempt to start playback\n            this.player.ready(() => {\n                this.player.play().then(() => {\n                    console.log('Playback started successfully')\n                }).catch(error => {\n                    console.error('Error trying to play the video:', error)\n                    // Handle the error (e.g., showing a user-friendly message)\n                })\n            })\n        },\n\n        // Attach event listeners to the player\n        attachEventListeners() {\n            if (!this.player || this.eventListenersAttached) {\n                console.log('Event listeners are already attached or video player is not initialized.')\n                return\n            }\n\n            this.player.on('timeupdate', this.handleTimeUpdate)\n            this.player.on('fullscreenchange', this.handleFullscreenChange)\n            this.player.on('play', this.handlePlay)\n            this.player.on('pause', this.handlePause)\n            this.player.on('error', this.handleError)\n\n            this.eventListenersAttached = true\n            console.log('Event listeners attached.')\n        },\n\n        // Detach event listeners from the player\n        detachEventListeners() {\n            if (!this.player || !this.eventListenersAttached) {\n                console.log('Event listeners are already detached or video player is not initialized.')\n                return\n            }\n\n            useAudioStore().stopAudioLevelMonitoring()\n            this.player.off('timeupdate', this.handleTimeUpdate)\n            this.player.off('fullscreenchange', this.handleFullscreenChange)\n            this.player.off('play', this.handlePlay)\n            this.player.off('pause', this.handlePause)\n            this.player.off('error', this.handleError)\n\n            this.eventListenersAttached = false\n            console.log('Event listeners detached.')\n        },\n\n        // Dispose of the player and perform cleanup\n        disposePlayer() {\n            if (!this.player) {\n                console.error('Video player is not initialized.')\n                return\n            }\n            this.detachEventListeners() // Detach event listeners if attached\n            this.player.dispose() // Dispose of the player instance\n            this.player = null // Reset the player state\n\n            // Optionally, stop audio level monitoring if linked to the player lifecycle\n            // const audioStore = useAudioStore();\n            // audioStore.stopAudioLevelMonitoring();\n\n            console.log('Video player disposed and cleaned up.')\n        },\n\n        // New method to prepare for a new video source\n        prepareForNewVideoSource(source) {\n            console.log('Preparing for new video source')\n\n            // Example: Clear any existing channel or video-specific state\n            // useChannelStore().clearChannel()\n\n            // Reset or cleanup any existing video playback, if necessary\n            // this.resetPlayback();\n\n            // Load and play the new video source\n            this.loadNewVideo(source)\n        },\n\n        resetPlayback() {\n            if (this.player) {\n                this.player.pause()\n                this.player.muted(true)\n                this.player.currentTime(0) // Optionally reset the time\n                // Further cleanup logic here, if necessary\n                this.detachEventListeners() // Detach event listeners if attached\n            }\n        },\n\n        // Event handlers\n        handleTimeUpdate() {\n            // console.log('Handling timeupdate...');\n            // Implement your logic\n            this.currentTime = this.player.currentTime()\n            this.duration = this.player.duration()\n            const progressPercentage = (this.currentTime / this.duration) * 100\n            this.formattedTime = `${this.formatDuration(this.currentTime)} / ${this.formatDuration(this.duration)}`\n\n            // Update UI elements or emit events as needed\n            // Note: Direct manipulation of the DOM or component refs from the store is not recommended\n\n        },\n        // for the handleTimeUpdate eventHandler\n        formatDuration(durationInSeconds) {\n            const hours = Math.floor(durationInSeconds / 3600)\n            const minutes = Math.floor((durationInSeconds % 3600) / 60)\n            const seconds = Math.floor(durationInSeconds % 60)\n\n            const parts = [hours, minutes, seconds].map(part => part.toString().padStart(2, '0'))\n            return parts.join(':')\n        },\n        handleFullscreenChange() {\n            console.log('Handling fullscreenchange...')\n            // Implement your logic\n            this.player?.on('fullscreenchange', () => {\n                if (this.player.isFullscreen()) {\n                    // Video is entering fullscreen mode\n                    // You can add custom behavior for entering fullscreen here if needed\n                } else {\n                    // Video is exiting fullscreen mode\n                    // Check if the video was playing before entering fullscreen\n                    if (this.player.paused() === false) {\n                        // Resume playback after exiting fullscreen\n                        this.player.play()\n                    }\n                }\n            })\n        },\n        handlePlay() {\n            console.log('Handling play...')\n            // Implement your logic\n            this.player?.on('play', () => {\n                this.paused = false\n            })\n        },\n        handlePause() {\n            console.log('Handling pause...')\n            // Implement your logic\n            this.player?.on('pause', () => {\n                this.paused = true\n            })\n        },\n        handleError() {\n            console.log('Handling error...')\n            // Implement your logic\n            this.player?.on('error', function () {\n                const error = this.player.error()\n                console.error('Video.js Error:', error.code, error.message)\n            })\n        },\n        makeBlue() {\n            // for testing. DO NOT REMOVE.\n            this.blue = true\n        },\n        // Apparently this loadFirstPlay isn't being used...\n        // loadFirstPlay() {\n        //     const {props} = usePage()\n        //     let videoJs = videojs('aux-player')\n        //     const type = props.firstPlayVideoSourceType\n        //     const src = props.firstPlayVideoSource\n        //     videoJs.ready(() => {\n        //         videoJs.src({src, type})\n        //         videoJs.play().then(() => {\n        //             console.log('Playback started successfully')\n        //         }).catch(error => {\n        //             console.error('Error trying to play the video:', error)\n        //             // Handle the error (e.g., showing a user-friendly message)\n        //         })\n        //     })\n        //     console.log(type)\n        //     console.log(src)\n        // },\n        // Toggle mute state\n        toggleMute() {\n            if (this.muted) {\n                this.unMute()\n            } else {\n                this.mute()\n            }\n        },\n        // Mute the video\n        mute() {\n            if (this.player) {\n                this.player.muted(true)\n                this.muted = true\n            }\n        },\n        // Unmute the video\n        unMute() {\n            // const audioStore = useAudioStore()\n\n            if (this.player) {\n                // Prepare audio setup for when it's unmuted\n                // audioStore.userInteractionForAudio()\n\n                // Optionally, if fadeInAudioFromMuted is a gradual process,\n                // ensure this.player.muted(false) is called within that function.\n                // audioStore.fadeInAudioFromMuted()\n\n                this.player.muted(false)\n                this.muted = false\n            }\n        },\n        togglePlay() {\n            let videoJs = videojs('aux-player')\n\n            if (this.paused) {\n                videoJs.play()\n            } else {\n                videoJs.pause()\n            }\n        },\n        load() {\n            let videoJs = videojs('aux-player')\n            videoJs.load()\n        },\n        loadNewLiveSource(source, sourceType) {\n            let videoJs = videojs('aux-player')\n            let fullSourceUrl = this.mistServerUri + '/hls/' + source + '/index.m3u8'\n            videoJs.src({'src': fullSourceUrl, 'type': sourceType});\n            videoJs.play()\n        },\n        pause() {\n            let videoJs = videojs('aux-player')\n            videoJs.controls(false)\n            videoJs.pause()\n            this.paused = true\n        },\n        play() {\n            let videoJs = videojs('aux-player')\n\n            videoJs.play()\n            videoJs.controls(false)\n            this.paused = false\n        },\n        // next not built yet\n        next() {\n            let videoJs = videojs('aux-player')\n            videoJs.controls(false)\n            videoJs.src(this.nextSource)\n        },\n        // back not built yet\n        back() {\n            let videoJs = videojs('aux-player')\n            videoJs.controls(false)\n            videoJs.src(this.previousSource)\n        },\n        fullscreen() {\n            let videoJs = videojs('aux-player')\n            videoJs.controls(false)\n            // videoJs.fullscreen(this.previousSource)\n            videoJs.requestFullscreen()\n        },\n        getVideoCurrentTime() {\n            let videoJs = videojs('aux-player')\n            videoJs.controls(false)\n            this.videoCurrentTime = videoJs.currentTime\n        },\n\n\n        // This playNewVideo was created to access the audioContext\n        // which our audio compressor uses. This is new as of 2/2/2024\n        // ~ tec21\n\n        // playNewVideo(source) {\n        //     useChannelStore().clearChannel() // Reset or clear channel store\n        //     const videoJs = videojs('aux-player')\n        //     let videoSrc, videoSourceType\n        //     // Determine the source type and construct the source URL if necessary\n        //     if (source.mediaType === 'externalVideo') {\n        //         videoSrc = source.video_url // Direct URL to the video\n        //         videoSourceType = source.type // MIME type, e.g., 'video/youtube', 'video/mp4'\n        //     } else {\n        //         // Construct file path for internal videos\n        //         videoSrc = `${source.cdn_endpoint}${source.cloud_folder}${source.folder}/${source.file_name}`\n        //         videoSourceType = source.type // MIME type, typically 'video/mp4' for file-based sources\n        //     }\n        //     this.resumeAudioContextIfNeeded()\n        //     videoJs.src({src: videoSrc, type: videoSourceType})\n        //     videoJs.muted(false)\n        // },\n\n        // getSourceDetails(source) {\n        //     let videoSrc = source.video_url; // Directly access the video URL\n        //\n        //     // Default to 'video/mp4' if type is falsy ('', null, undefined, etc.)\n        //     let videoSourceType = source.type || 'video/mp4'\n        //\n        //     // Determine the mediaType and construct the source URL if necessary\n        //     if (source.mediaType === 'externalVideo') {\n        //         videoSrc = source.video_url // Direct URL to the video\n        //     } else {\n        //         // Internal video: construct the path, ensuring the file name is encoded\n        //         let encodedFileName = encodeURIComponent(source.file_name);\n        //         console.log(encodedFileName)\n        //         videoSrc = `${source.cdn_endpoint}${source.cloud_folder}${source.folder}/${encodedFileName}`\n        //     }\n        //     // Logic to determine videoSrc and videoSourceType\n        //     console.log(`Video Source: ${videoSrc}, Type: ${videoSourceType}`);\n        //     return { videoSrc, videoSourceType } // Return as an object\n        // },\n\n\n        getSourceDetails(source) {\n            let videoSrc, videoSourceType\n\n            console.log('getSourceDetails called with source:', source);\n\n            // Default to 'video/mp4' if type is not specified or is empty\n            videoSourceType = source.type || 'video/mp4'\n            console.log(`Determined Video Source Type: ${videoSourceType}`);\n\n            if (source.mediaType === 'externalVideo') {\n                // For external videos, use the URL as provided without encoding\n                videoSrc = source.video_url\n                console.log('Using external video source:', videoSrc);\n            } else {\n                console.log('CDN Endpoint:', source.cdn_endpoint);\n                console.log('Cloud Folder:', source.cloud_folder);\n                console.log('Folder:', source.folder);\n                console.log('File Name:', source.file_name);\n                // For internal videos, construct the URL from its components\n                // Here, we assume the cdn_endpoint, cloud_folder, and folder are correctly formatted\n                // and do not require encoding. Only the file_name might need encoding.\n                const basePath = `${source.cdn_endpoint}${source.cloud_folder}${source.folder}/`\n                // const encodedFileName = encodeURIComponent(source.file_name);\n                const fileName = source.file_name\n                videoSrc = basePath + fileName\n                console.log('Constructed internal video source:', videoSrc);\n                // If your server or CDN is configured to handle spaces in URLs without %20 encoding\n                // or if the original working URLs did not use standard URL encoding,\n                // you might adjust the encoding strategy here.\n                // For example, to replace spaces with %20 but leave other characters as-is:\n                // const fileNameForUrl = source.file_name.replace(/ /g, '%20');\n                // videoSrc = basePath + fileNameForUrl;\n            }\n\n            console.log(`Final Constructed Video Source: ${videoSrc}, Type: ${videoSourceType}`);\n            return {videoSrc, videoSourceType}\n        },\n\n\n        loadNewVideo(source) {\n            try {\n                let videoJs = videojs('aux-player');\n                console.log('LOAD NEW VIDEO');\n                const audioStore = useAudioStore();\n                // Correctly destructure the returned object to get videoSrc and videoSourceType\n                const {videoSrc, videoSourceType} = this.getSourceDetails(source);\n\n                // Example: Stopping and cleaning up the current video and audio setup\n                if (videoJs) {\n                    videoJs.src({'src': videoSrc, 'type': videoSourceType});\n\n                    videoJs.ready(() => {\n                        // ensureAudioContextAndNodesReady does the following:\n                        // 1. Resumes AudioContext if suspended.\n                        // 2. (Re)connects MediaElementSource from the video element to AudioContext.\n                        audioStore.deferAudioSetup = false;\n                        audioStore.ensureAudioContextAndNodesReady(videoJs).then(() => {\n                            // Only attempt to play the video after ensuring the AudioContext is ready\n                            videoJs.play().catch(error => {\n                                useNotificationStore().setGeneralServiceNotification('Error', 'Playback initiation error: ' + error)\n                                console.error('Playback initiation error: ', error);\n                            });\n\n                            // Consider toggling mute based on the user's preference or previous state\n                            videoJs.muted(false);\n                            this.muted = false;\n                        });\n                    });\n                }\n            } catch (error) {\n                // Log the error or perform any other error handling\n                useNotificationStore().setGeneralServiceNotification('Error', 'Error loading new video: ' + error)\n                console.error('Error loading new video: ', error);\n            }\n        },\n\n        // loadNewVideo(source) {\n        //     console.log('LOAD NEW VIDEO TTTTTTTTTTTTTTTTTTTTTTTTTS');\n        //     console.log('LOAD NEW VIDEO initiated with source:', source);\n        //     const audioStore = useAudioStore();\n        //     this.unMute();\n        //     // Destructure the returned object to get videoSrc and videoSourceType\n        //     const { videoSrc, videoSourceType } = this.getSourceDetails(source);\n        //     console.log(`Video source details received: Src - ${videoSrc}, Type - ${videoSourceType}`);\n        //\n        //     // Ensure you're using the same player instance (`videoJs` in this context) for consistency\n        //     let videoJs = videojs('aux-player'); // Ensure this ID matches your video player element\n        //     console.log('Video.js player instance created or retrieved.');\n        //\n        //     // Stop and clean up the current video and audio setup if necessary\n        //     videoJs.ready(() => {\n        //         console.log('Video.js player is ready.');\n        //         videoJs.src({ 'src': videoSrc, 'type': videoSourceType });\n        //         console.log(`Video source set: ${videoSrc} of type ${videoSourceType}`);\n        //\n        //         // Ensure AudioContext and nodes are ready\n        //         audioStore.ensureAudioContextAndNodesReady(videoJs).then(() => {\n        //             console.log('Audio context and nodes are ready. Attempting to play video.');\n        //\n        //             videoJs.play().then(() => {\n        //                 console.log('Video playback started successfully.');\n        //             }).catch(error => {\n        //                 console.error('Playback initiation error:', error);\n        //             });\n        //             // Attempt to play the video after ensuring the AudioContext is ready\n        //             // videoJs.play().catch(error => {\n        //             //     console.error('Playback initiation error:', error);\n        //             // });\n        //\n        //             // Apply the unMute logic from loadMistStreamVideo to ensure audio is correctly configured\n        //             this.unMute();\n        //             console.log('Audio unmuted.');\n        //             this.paused = false;\n        //             console.log('Paused flag set to false.');\n        //         }).catch(error => {\n        //             console.error('Error ensuring audio context and nodes are ready:', error);\n        //         });\n        //     });\n        // },\n\n        playNewVideo() {\n            console.log('PLAY NEW VIDEO')\n            if (this.player) {\n                // Wait for the video to be ready before playing\n                this.player.ready(() => {\n                    this.player.play()\n                    // Assuming you want to unmute here; check if this aligns with user interaction policies\n                    this.player.muted(false)\n                    this.muted = false\n                })\n            }\n        },\n\n\n// load video from different types of sources:\n// Url\n// YouTube\n// EmbedCode\n// Mist\n// File\n        loadNewSourceFromYouTube(source) {\n            this.videoIsYoutube = true\n            useChannelStore().clearChannel()\n            let videoJs = videojs('aux-player')\n            this.videoSource = source\n            this.videoSourceType = 'video/youtube'\n            videoJs.src({'src': this.videoSource, 'type': this.videoSourceType})\n            videoJs.controls(false)\n            this.unMute()\n            this.paused = false\n        },\n        loadNewLiveSourceFromRumble(source) {\n            this.videoIsYoutube = true\n            useChannelStore().clearChannel()\n            let videoJs = videojs('aux-player')\n            this.videoSource = source\n            this.videoSourceType = 'application/x-mpegURL'\n            videoJs.src({'src': this.videoSource, 'type': this.videoSourceType})\n            videoJs.controls(false)\n            this.unMute()\n            this.paused = false\n        },\n        loadNewSourceFromUrl(source) {\n            try {\n                this.videoIsYoutube = false;\n                useChannelStore().clearChannel();\n                let videoJs = videojs('aux-player');\n\n                if (!source.video_url || !source.type) {\n                    useNotificationStore().setGeneralServiceNotification('Error', 'Invalid video source.')\n                    throw new Error(\"Invalid video source.\");\n                }\n\n                this.videoSource = source.video_url;\n                this.videoSourceType = source.type;\n                videoJs.src({'src': source.video_url, 'type': source.type});\n\n                this.unMute();\n                this.paused = false;\n            } catch (error) {\n                useNotificationStore().setGeneralServiceNotification('Error', 'Failed to load new source: ' + error)\n                console.error(\"Failed to load new source:\", error);\n                throw error; // Re-throw the error to be caught by the caller\n            }\n        },\n        loadNewSourceFromMist(source) {\n            this.videoIsYoutube = false\n            let videoJs = videojs('aux-player')\n            let filePath = 'https://mist.not.tv/hls/'\n            this.videoSource = filePath + source + '/index.m3u8'\n            this.videoSourceType = 'application/x-mpegURL'\n            videoJs.src({'src': this.videoSource, 'type': this.videoSourceType})\n            this.unMute()\n            this.paused = false\n        },\n        loadNewSourceFromFile(source) {\n            this.videoIsYoutube = false\n            useChannelStore().clearChannel()\n            let videoJs = videojs('aux-player')\n            let filePath = source.cdn_endpoint + source.cloud_folder + source.folder + '/'\n            this.videoSource = source.file_name\n            this.videoSourceType = source.type\n            videoJs.src({'src': filePath + this.videoSource, 'type': this.videoSourceType})\n            this.unMute()\n            this.paused = false\n        },\n\n        // The new load video functions (2024-02-09 tec21 and ChatGPT)\n        loadExternalSourceVideo() {\n\n        },\n        loadPlaylistVideos() {\n\n        },\n        async loadMistStreamVideo(mistStream, stayMuted) {\n            let shouldUnmute = true\n            if(stayMuted) {\n                shouldUnmute = false\n            };\n            // console.log('Loading Mist Stream Video for:', mistStream.name); // Log which Mist Stream is being loaded\n            // This mistServerUri comes from appSettings\n            if (!this.mistServerUri) {\n                console.log('Mist Server URI not set, fetching...') // Log fetching attempt\n                await this.getMistServerUri()\n            }\n            if (this.mistServerUri) {\n                // console.log('Mist Server URI:', this.mistServerUri); // Log the URI to confirm it's fetched\n                let basePath = this.mistServerUri\n                this.videoSource = basePath + 'hls/' + mistStream.name + '/index.m3u8'\n                // console.log('Video Source Set To:', this.videoSource); // Log the final video source\n\n                this.videoSourceType = 'application/vnd.apple.mpegURL'\n                // console.log('Setting player source to:', this.videoSource, 'of type:', this.videoSourceType); // Log the source setting\n                let videoJs = videojs('aux-player')\n                videoJs.src({'src': this.videoSource, 'type': this.videoSourceType})\n                if (shouldUnmute) {\n                    this.unMute()\n                }\n                this.paused = false\n            } else {\n                console.error('Mist Server URI is still not set after fetching.')\n            }\n            // let basePath = this.mistServerUri\n            // this.videoSource = basePath + 'hls/' + mistStream.name + '/index.m3u8'\n            // this.videoSourceType = \"application/vnd.apple.mpegURL\"\n            // this.player.src({'src': this.videoSource, 'type': this.videoSourceType})\n            // this.unMute()\n            // this.paused = false\n        },\n        async loadVideoFromFile(video) {\n            // console.log('Loading Mist Stream Video for:', mistStream.name); // Log which Mist Stream is being loaded\n            // This mistServerUri comes from appSettings\n            // if (!this.mistServerUri) {\n            //     console.log('Mist Server URI not set, fetching...') // Log fetching attempt\n            //     await this.getMistServerUri()\n            // }\n            // if (this.mistServerUri) {\n                // console.log('Mist Server URI:', this.mistServerUri); // Log the URI to confirm it's fetched\n                // let basePath = this.mistServerUri\n                // this.videoSource = basePath + 'hls/' + video.name + '/index.m3u8'\n                // console.log('Video Source Set To:', this.videoSource); // Log the final video source\n\n            // this.videoSourceType = 'video/mp4'\n            console.log('Video Source Type:', video.type);\n            console.log('Video URL:', video.video_url);\n            console.log('CDN Endpoint:', video.cdn_endpoint);\n            console.log('Cloud Folder:', video.cloud_folder);\n            console.log('Folder:', video.folder);\n            console.log('File Name:', video.file_name);\n\n            let videoSource = video.cdn_endpoint + video.cloud_folder + video.folder + '/' + video.file_name\n                // console.log('Setting player source to:', this.videoSource, 'of type:', this.videoSourceType); // Log the source setting\n                let videoJs = videojs('aux-player')\n                videoJs.src({'src': videoSource, 'type': video.type})\n                this.unMute()\n                this.paused = false\n            // } else {\n            //     console.error('Mist Server URI is still not set after fetching.')\n            // }\n            // let basePath = this.mistServerUri\n            // this.videoSource = basePath + 'hls/' + mistStream.name + '/index.m3u8'\n            // this.videoSourceType = \"application/vnd.apple.mpegURL\"\n            // this.player.src({'src': this.videoSource, 'type': this.videoSourceType})\n            // this.unMute()\n            // this.paused = false\n        },\n\n\n        setNowPlayingInfoVideoFile(source) {\n            this.nowPlayingType = 'Video File'\n            this.nowPlayingName = source.file_name\n            useStreamStore().currentChannel = 'On Demand'\n        },\n        setNowPlayingInfoShow(show, episode) {\n            this.clearNowPlayingInfo()\n            const showStore = useShowStore()\n\n            if (show.firstPlayVideo) {\n                showStore.setName(show.firstPlayVideo.name)\n                showStore.setEpisodeUrl(`/shows/${show.slug}/episode/${source.firstPlayVideo.slug}`)\n            } else if (episode) {\n                showStore.setName(show.name)\n                showStore.setUrl(`/shows/${show.slug}`)\n                showStore.setEpisodeName(episode.name)\n                showStore.setEpisodeUrl(`/shows/${show.slug}/episode/${episode.slug}`)\n            } else {\n                showStore.setName(show.name)\n                showStore.setUrl(`/shows/${show.slug}`)\n            }\n        },\n// change video size/position and page layout\n        makeVideoPiP() {\n            // const appSettingStore = useAppSettingStore();\n            // const userStore = useUserStore();\n            //\n            // if (userStore.isMobile) {\n            //     let videoJs = videojs('aux-player')\n            //     videoJs.controls(false)\n            //     if(this.fullPage) {\n            //         this.class = 'pipVideoClassFullPage'\n            //         this.videoContainerClass = 'pipVideoContainerFullPage'\n            //     } else {\n            //         this.class = 'pipVideoClassTopRight'\n            //         this.videoContainerClass = 'pipVideoContainerTopRight'\n            //     }\n            //     appSettingStore.togglePipChatMode()\n            // }\n        },\n        makeVideoFullPage() {\n            const appSettingStore = useAppSettingStore()\n            const userStore = useUserStore()\n\n            // this.fullPage = true; // to be deleted and replaced by appSettingStore.fullPage\n            appSettingStore.fullPage = true\n            // userStore.hidePage = true // to be deleted and replaced by appSettingStore.hidePage\n            appSettingStore.hidePage = true\n            appSettingStore.ott = 0\n\n            this.videoContainerClass = 'fullPageVideoContainer'\n            this.class = 'fullPageVideoClass'\n            this.controls = !userStore.isMobile\n        },\n        makeVideoTopRight() {\n            const appSettingStore = useAppSettingStore()\n\n            // this.fullPage = false // to be deleted and replaced by appSettingStore.fullPage\n            appSettingStore.fullPage = false\n            // userStore.hidePage = false // to be deleted and replaced by appSettingStore.hidePage\n            appSettingStore.hidePage = false\n            // this.currentPageIsStream = false // to be deleted and replaced by appSettingStore.currentPageIsStream\n            appSettingStore.currentPageIsStream = false\n\n            this.videoContainerClass = 'topRightVideoContainer'\n            this.class = 'topRightVideoClass'\n            this.controls = false\n        },\n        makeVideoWelcomePage() {\n            const appSettingStore = useAppSettingStore()\n            this.videoContainerClass = 'welcomeVideoContainer'\n            this.class = 'welcomeVideoClass'\n            appSettingStore.loggedIn = false\n            appSettingStore.fullPage = true\n            appSettingStore.hidePage = false\n        },\n        setMistServerUri(mistServerUri) {\n            this.mistServerUri = mistServerUri\n        }\n\n\n    },\n\n    getters: {},\n})\n","import { onBeforeMount, onMounted } from 'vue'\nimport { useUserStore } from \"@/Stores/UserStore\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useVideoPlayerStore } from \"@/Stores/VideoPlayerStore\"\nimport { Inertia } from '@inertiajs/inertia'\n\nexport function usePageSetup(pageName) {\n    const userStore = useUserStore()\n    const appSettingStore = useAppSettingStore()\n    const videoPlayerStore = useVideoPlayerStore()\n\n    appSettingStore.currentPage = pageName\n    appSettingStore.showFlashMessage = true\n    appSettingStore.pageIsHidden = false\n\n    if (userStore.isMobile || window.innerWidth < 1024 || appSettingStore.fullPage) {\n        appSettingStore.ott = 0;\n    } else {\n        appSettingStore.ott = 1;\n        appSettingStore.showOttButtons = true;\n    }\n\n    videoPlayerStore.makeVideoTopRight()\n\n    if (appSettingStore.pageReload) {\n        appSettingStore.pageReload = false\n        window.location.reload(true);\n    }\n    // Check if the URL contains query strings\n\n\n    // Only scroll into view if there are no query strings\n\n        // const topDiv = document.getElementById(\"topDiv\")\n        // if (topDiv) {\n        //     topDiv.scrollIntoView()\n        // }\n        Inertia.on('navigate', (event) => {\n            if (userStore.isMobile || window.innerWidth < 1024 || appSettingStore.fullPage) {\n                appSettingStore.ott = 0;\n            } else {\n                appSettingStore.ott = 1;\n            }\n            const hasQueryStrings = window.location.search !== '';\n            if (!hasQueryStrings || appSettingStore.shouldScrollToTop) {\n                requestAnimationFrame(() => {\n                    const topDiv = document.getElementById(\"topDiv\");\n                    if (topDiv) {\n                        topDiv.scrollIntoView({behavior: 'auto'});\n                    } else {\n                        window.scrollTo(0, 0);\n                    }\n                });\n            }\n            appSettingStore.shouldScrollToTop = false;\n        })\n    // Only update if we're not already on this page to avoid overwriting with the current URL\n    appSettingStore.setPrevUrl()\n    appSettingStore.showOttButtons = true\n    appSettingStore.noLayout = false\n\n    // Inertia.reload()\n\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".copy-message{background-color:#000000bf;border-radius:10px;bottom:20%;color:#fff;font-size:1.5rem;left:50%;padding:20px;position:fixed;transform:translateX(-50%);z-index:100}.copy-message,.fade-enter-active,.fade-leave-active{transition:opacity .5s ease}.fade-enter-from,.fade-leave-to{opacity:0}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/Components/Pages/Shows/Elements/ShowRecordings.vue\"],\"names\":[],\"mappings\":\"AA8WA,cAKE,0BAAqC,CAGrC,kBAAmB,CANnB,UAAW,CAIX,UAAY,CAGZ,gBAAiB,CANjB,QAAS,CAIT,YAAa,CANb,cAAe,CAGf,0BAA2B,CAM3B,WAEF,CAEA,oDAHE,2BAKF,CAEA,gCACE,SACF\",\"sourcesContent\":[\"<template>\\n\\n  <table class=\\\"min-w-full divide-y divide-gray-200\\\">\\n    <thead class=\\\"divide-y divide-gray-200\\\">\\n    <!--                                <tr v-for=\\\"episode in episodes.data\\\" :key=\\\"episode.id\\\">-->\\n    <tr>\\n      <td class=\\\"px-6 py-4 whitespace-nowrap\\\">\\n        <div class=\\\"flex items-center\\\">\\n          <div>\\n            <div class=\\\"text-sm font-semibold pl-14\\\">\\n              <!--                                                    <Link :href=\\\"`/admin/users/${episode.id}`\\\" class=\\\"text-indigo-600 hover:text-indigo-900\\\">{{ episode.name }}</Link>-->\\n              Date\\n            </div>\\n          </div>\\n        </div>\\n      </td>\\n\\n      <td class=\\\"px-6 py-4 whitespace-nowrap text-sm font-semibold\\\">\\n        Start Time\\n      </td>\\n\\n      <td class=\\\"px-6 py-4 whitespace-nowrap text-sm font-semibold\\\">\\n        End Time\\n      </td>\\n\\n      <td class=\\\"px-6 py-4 whitespace-nowrap text-sm font-semibold\\\">\\n        Duration\\n      </td>\\n\\n      <td class=\\\"px-6 py-4 whitespace-nowrap text-sm font-semibold text-right\\\">\\n        Expires in\\n      </td>\\n\\n      <td class=\\\"px-6 py-4 whitespace-nowrap text-sm font-semibold text-right\\\">\\n\\n      </td>\\n    </tr>\\n    </thead>\\n    <tbody class=\\\"bg-white divide-y divide-gray-200\\\">\\n    <tr v-for=\\\"recording in showRecordings.data\\\" :key=\\\"recording.id\\\"\\n        @mouseover=\\\"state.hoveredRow = recording.id\\\"\\n        @mouseleave=\\\"state.hoveredRow = null\\\"\\n        @click=\\\"openVideo(recording)\\\"\\n        :class=\\\"rowClass(recording.id)\\\"\\n    >\\n      <td class=\\\"px-6 py-4 whitespace-nowrap\\\">\\n        <div>{{ userStore.formatDateInUserTimezone(recording.start_time) }}</div>\\n        <div v-if=\\\"recording.comment\\\" class=\\\"text-xs uppercase text-orange-700 font-semibold break-words\\\">\\n          <span :class=\\\"{ 'text-indigo-600': recording.comment !== 'automated recording' }\\\">{{\\n              recording.comment\\n            }}</span>\\n        </div>\\n      </td>\\n      <td class=\\\"px-6 py-4 whitespace-nowrap\\\">\\n        {{ userStore.formatTimeFromDateInUserTimezone(recording.start_time) }}\\n      </td>\\n      <td class=\\\"px-6 py-4 whitespace-nowrap\\\">\\n        {{ userStore.formatTimeFromDateInUserTimezone(recording.end_time) }}\\n      </td>\\n      <td class=\\\"px-6 py-4 whitespace-nowrap\\\">\\n        {{ formatDuration(recording.total_milliseconds_recorded) }}\\n      </td>\\n      <td class=\\\"px-6 py-4 whitespace-nowrap\\\">\\n        <!-- Placeholder for expiration logic -->\\n\\n      </td>\\n      <!-- We are not making recordings shareable at this time. -->\\n      <td class=\\\" px-6 py-4 whitespace-nowrap text-right text-sm font-medium space-x-1\\\">\\n        <button @click.stop=\\\"shareRecording(recording.shareUrl)\\\"\\n                class=\\\"hidden btn btn-xs bg-orange-200 hover:bg-orange-300 text-black\\\">\\n          <font-awesome-icon icon=\\\"fa-share\\\" class=\\\"\\\"/>\\n          Share\\n        </button>\\n        <button @click.stop=\\\"confirmAddToEpisode\\\"\\n                class=\\\"btn btn-xs\\\">Add To Episode\\n        </button>\\n        <button @click.stop=\\\"confirmDownload(recording)\\\"\\n                class=\\\"btn btn-xs btn-info\\\">Download\\n        </button>\\n        <div @click.stop=\\\"confirmSaveToPremium\\\"\\n                class=\\\"btn btn-xs\\\">Save to Premium Storage\\n        </div>\\n      </td>\\n    </tr>\\n    </tbody>\\n  </table>\\n\\n  <div class=\\\"flex flex-row flex-wrap w-full justify-center\\\">\\n    <Pagination :data=\\\"showRecordings\\\" class=\\\"\\\" />\\n  </div>\\n\\n  <dialog id=\\\"confirmRecordingPlaybackModal\\\" class=\\\"modal\\\">\\n    <div class=\\\"modal-box w-full items-center text-center\\\">\\n      <form method=\\\"dialog\\\">\\n        <button class=\\\"btn btn-sm btn-circle btn-ghost absolute right-2 top-2\\\">✕</button>\\n      </form>\\n      <h3 class=\\\"font-bold text-lg\\\"></h3>\\n      <p class=\\\"py-4 text-xl mt-4\\\">Would you like to play the recording<br/> from\\n        <span class=\\\"font-semibold\\\">{{ selectedRecordingDate }}</span>?</p>\\n      <p class=\\\"my-2 text-left\\\" v-if=\\\"selectedRecording && selectedRecording.path\\\"><span\\n          class=\\\"font-semibold\\\">Path: </span>{{ selectedRecording.path }}</p>\\n      <p class=\\\"my-2 text-left\\\" v-if=\\\"selectedRecording && selectedRecording.comment\\\">\\n        <span class=\\\"font-semibold\\\">Comment: </span>\\n        <span>{{ selectedRecording.comment }}</span>\\n      </p>\\n      <button class=\\\"mt-4 btn\\\" @click=\\\"play\\\">Play</button>\\n    </div>\\n\\n    <form method=\\\"dialog\\\" class=\\\"modal-backdrop\\\">\\n      <button>close</button>\\n    </form>\\n  </dialog>\\n\\n  <transition name=\\\"fade\\\">\\n    <div v-if=\\\"showCopyMessage\\\" class=\\\"copy-message\\\">\\n      {{ copyMessage }}\\n    </div>\\n  </transition>\\n\\n  <dialog id=\\\"confirmAddToEpisodeModal\\\" class=\\\"modal\\\">\\n    <div class=\\\"modal-box text-center\\\">\\n      <h3 class=\\\"font-bold text-lg pt-8\\\">Add Recording To Episode</h3>\\n      <p class=\\\"py-4\\\">We are working on this feature!</p>\\n      <div class=\\\"modal-action\\\">\\n        <form method=\\\"dialog\\\">\\n          <!-- if there is a button in form, it will close the modal -->\\n          <button class=\\\"btn\\\">Okay</button>\\n        </form>\\n      </div>\\n    </div>\\n  </dialog>\\n\\n  <dialog id=\\\"confirmDownloadModal\\\" class=\\\"modal\\\">\\n    <div class=\\\"modal-box text-center\\\">\\n      <h3 class=\\\"font-bold text-lg pt-8\\\">Confirm Download</h3>\\n      <p class=\\\"py-4\\\">Are you sure you want to download the recording?</p>\\n      <div class=\\\"modal-action\\\">\\n        <form method=\\\"dialog\\\" class=\\\"w-full flex justify-center\\\">\\n          <!-- if there is a button in form, it will close the modal -->\\n          <button @click=\\\"beginDownload\\\" class=\\\"btn btn-info w-20\\\">Yes</button>\\n        </form>\\n      </div>\\n    </div>\\n  </dialog>\\n\\n  <dialog id=\\\"downloadStarted\\\" class=\\\"modal\\\">\\n    <div class=\\\"modal-box text-center\\\">\\n      <h3 class=\\\"font-bold text-lg pt-8\\\">Download Started</h3>\\n      <p class=\\\"py-4\\\">Your recording is now downloading!</p>\\n      <div class=\\\"modal-action\\\">\\n        <form method=\\\"dialog\\\" class=\\\"w-full flex justify-center\\\">\\n          <!-- if there is a button in form, it will close the modal -->\\n          <button class=\\\"btn\\\">Okay</button>\\n        </form>\\n      </div>\\n    </div>\\n  </dialog>\\n\\n  <dialog id=\\\"confirmSaveToPremiumModal\\\" class=\\\"modal\\\">\\n    <div class=\\\"modal-box text-center\\\">\\n      <h3 class=\\\"font-bold text-lg pt-8\\\">Save To Premium Storage</h3>\\n      <p class=\\\"py-4\\\">We are working on this feature!</p>\\n      <div class=\\\"modal-action\\\">\\n        <form method=\\\"dialog\\\">\\n          <!-- if there is a button in form, it will close the modal -->\\n          <button class=\\\"btn\\\">Okay</button>\\n        </form>\\n      </div>\\n    </div>\\n  </dialog>\\n\\n\\n</template>\\n\\n<script setup>\\nimport { useVideoPlayerStore } from '@/Stores/VideoPlayerStore'\\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\\nimport { useNowPlayingStore } from '@/Stores/NowPlayingStore'\\nimport { useUserStore } from '@/Stores/UserStore'\\nimport { computed, reactive, ref } from 'vue'\\nimport { useClipboard } from '@vueuse/core'\\nimport Pagination from '@/Components/Global/Paginators/Pagination.vue'\\n\\nconst videoPlayerStore = useVideoPlayerStore()\\nconst appSettingStore = useAppSettingStore()\\nconst nowPlayingStore = useNowPlayingStore()\\nconst userStore = useUserStore()\\n\\nconst shareClip = useClipboard()\\n\\nconst props = defineProps({\\n  showName: String,\\n  showSlug: String,\\n  showImage: Object,\\n  showRecordings: Object,\\n})\\n\\nconst formatDuration = (totalMilliseconds) => {\\n  let seconds = Math.floor(totalMilliseconds / 1000)\\n  let minutes = Math.floor(seconds / 60)\\n  const hours = Math.floor(minutes / 60)\\n\\n  seconds = seconds % 60\\n  minutes = minutes % 60\\n\\n  // Padding numbers to always show two digits\\n  const paddedHours = hours.toString().padStart(2, '0')\\n  const paddedMinutes = minutes.toString().padStart(2, '0')\\n  const paddedSeconds = seconds.toString().padStart(2, '0')\\n\\n  return `${paddedHours}h ${paddedMinutes}m ${paddedSeconds}s`\\n}\\n\\nconst state = reactive({\\n  hoveredRow: null,\\n})\\n\\nconst selectedRecording = ref(null)\\nconst selectedRecordingDate = ref('')\\nconst selectedRecordingStreamName = ref('')\\nconst selectedRecordingId = ref('')\\nconst nowPlayingRecording = ref(null)\\nconst nowPlayingRecordingId = ref('')\\nconst nowPlayingStreamName = ref('')\\n\\n// Computed property returning a function to determine row classes\\nconst rowClass = computed(() => (recordingId) => ({\\n  'hover:bg-blue-100 cursor-pointer': state.hoveredRow === recordingId,\\n  'bg-green-100': nowPlayingRecordingId.value === recordingId,\\n}))\\n\\nconst openVideo = (recording) => {\\n  document.getElementById('confirmRecordingPlaybackModal').showModal()\\n  selectedRecording.value = recording\\n  console.log(recording)\\n  console.log(selectedRecording.value)\\n  selectedRecordingStreamName.value = recording.streamName\\n  selectedRecordingId.value = recording.id\\n  selectedRecordingDate.value = userStore.formatDateInUserTimezone(recording.start_time)\\n  console.log('Opening video for stream:', recording.streamName)\\n  // Implement the video opening logic here\\n}\\n\\nconst source = ref({\\n  mediaType: '',\\n  recording: {\\n    source: '',\\n    sourceType: '',\\n  },\\n})\\nconsole.log('slug: ' + props.showSlug)\\nconst play = () => {\\n  source.value.mediaType = 'recording'\\n  source.value.recording = {\\n    source: selectedRecordingStreamName,\\n    sourceType: 'video/mp4',\\n  }\\n  console.log('recording source: ' + selectedRecordingStreamName.value)\\n  try {\\n    videoPlayerStore.loadNewVideo(source.value)\\n    nowPlayingRecording.value = selectedRecording.value\\n    nowPlayingRecordingId.value = selectedRecordingId.value\\n    nowPlayingStreamName.value = selectedRecordingStreamName.value\\n    appSettingStore.toggleOttInfo()\\n    console.log('now playing ID: ' + nowPlayingRecordingId.value)\\n    const nowPlayingDate = userStore.formatDateInUserTimezone(nowPlayingRecording.value.start_time)\\n    const nowPlayingStartTime = userStore.formatTimeFromDateInUserTimezone(nowPlayingRecording.value.start_time)\\n    const secondaryName = nowPlayingDate + ' ' + nowPlayingStartTime + ' Recording'\\n\\n    // Set common details specific to this video play event for nowPlayingStore\\n    const mediaType = source.value.mediaType\\n    const commonDetails = {\\n      primaryName: props.showName, //showName\\n      secondaryName: secondaryName, //date startTime Recording\\n      description: nowPlayingRecording?.value?.comment ?? null, // Comment\\n      primaryUrl: 'shows/' + props.showSlug,\\n      secondaryUrl: null,\\n      channelName: null,\\n      image: props?.showImage,\\n      team: null,\\n      creative_commons: null,\\n    }\\n    const videoDetails = {\\n      // Assuming video details are structured correctly in your episode data\\n      video_url: '',\\n      type: source.value.recording.sourceType, // MIME type for video.js\\n    }\\n\\n    // Update the currently playing media in nowPlayingStore with the latest details\\n    nowPlayingStore.setActiveMedia(mediaType, {\\n      ...commonDetails,\\n      videoDetails, // Spread in the specific details for internal or external video\\n    })\\n\\n    // Close the modal upon successful video playback\\n    document.getElementById('confirmRecordingPlaybackModal').close()\\n  } catch (error) {\\n    console.error('Error loading new video:', error)\\n    // Handle error appropriately, possibly with user feedback\\n  }\\n\\n}\\n\\nconst shareRecording = (shareUrl) => {\\n  shareClip.copy(shareUrl)\\n  copyMessage.value = 'Video share URL copied!'\\n  showCopyMessage.value = true\\n  setTimeout(() => {\\n    showCopyMessage.value = false\\n  }, 1000) // Hide after 3 seconds\\n}\\n\\nconst showCopyMessage = ref(false)\\nconst copyMessage = ref('')\\n\\nconst confirmAddToEpisode = () => {\\n  document.getElementById('confirmAddToEpisodeModal').showModal()\\n}\\n\\nconst confirmDownload = (recording) => {\\n  selectedRecording.value = recording\\n  // Confirm the download.\\n  document.getElementById('confirmDownloadModal').showModal()\\n}\\n\\nconst beginDownload = () => {\\n  // Once confirmed, execute the download.\\n\\n  // The URL where your files are hosted\\n  const url = selectedRecording.value.download.url\\n\\n  console.log('download url: ' + url)\\n  // Create an anchor (<a>) element\\n  const downloadLink = document.createElement('a')\\n  downloadLink.href = url\\n\\n  // Optionally, if you want the download to have a specific filename:\\n  // downloadLink.download = 'YourCustomFileNameHere';\\n\\n  // This is necessary for the download to work in Firefox when triggered programmatically\\n  document.body.appendChild(downloadLink)\\n\\n  downloadLink.click()\\n\\n  // Clean up by removing the element after triggering the download\\n  document.body.removeChild(downloadLink)\\n  selectedRecording.value = null\\n  document.getElementById('downloadStarted').showModal()\\n}\\n\\nconst confirmSaveToPremium = () => {\\n  document.getElementById('confirmSaveToPremiumModal').showModal()\\n}\\n\\n\\n// function triggerDownload(url, filename = \\\"\\\") {\\n//   const a = document.createElement('a');\\n//   a.href = url;\\n//   a.download = filename; // You can specify a filename here, or leave it empty\\n//   document.body.appendChild(a);\\n//   a.click();\\n//   document.body.removeChild(a);\\n// }\\n\\n</script>\\n<style>\\n.copy-message {\\n  position: fixed;\\n  bottom: 20%;\\n  left: 50%;\\n  transform: translateX(-50%);\\n  background-color: rgba(0, 0, 0, 0.75);\\n  color: white;\\n  padding: 20px;\\n  border-radius: 10px;\\n  font-size: 1.5rem;\\n  z-index: 100;\\n  transition: opacity 0.5s ease;\\n}\\n\\n.fade-enter-active, .fade-leave-active {\\n  transition: opacity 0.5s ease;\\n}\\n\\n.fade-enter-from, .fade-leave-to {\\n  opacity: 0;\\n}\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"@keyframes wave-bg-8696ee86{0%,to{background-color:#dbeafe}50%{background-color:#bfdbfe}}.wave-background[data-v-8696ee86]{animation:wave-bg-8696ee86 5s ease-in-out infinite;background-color:#dbeafe}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/Pages/Shows/{$id}/Manage.vue\"],\"names\":[],\"mappings\":\"AA8PA,4BACE,MACE,wBACF,CACA,IACE,wBACF,CACF,CAEA,kCACE,kDAA0C,CAC1C,wBACF\",\"sourcesContent\":[\"<template>\\n\\n  <Head :title=\\\"`Manage Show: ${props.show.name}`\\\"/>\\n\\n  <div id=\\\"topDiv\\\" class=\\\"place-self-center flex flex-col\\\">\\n    <div class=\\\"min-h-screen bg-white text-black dark:bg-gray-900 dark:text-gray-50 rounded px-5\\\">\\n\\n      <Message v-if=\\\"appSettingStore.showFlashMessage\\\" :flash=\\\"$page.props.flash\\\"/>\\n      <div class=\\\"alert alert-error mt-4 mx-3\\\"\\n           v-if=\\\"showStore.errorMessage\\\">\\n        <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" class=\\\"stroke-current shrink-0 h-6 w-6\\\" fill=\\\"none\\\" viewBox=\\\"0 0 24 24\\\">\\n          <path stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" stroke-width=\\\"2\\\"\\n                d=\\\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\\\"/>\\n        </svg>\\n        <span>{{ showStore.errorMessage }}</span>\\n        <button class=\\\"text-xs ml-12\\\" @click=\\\"showStore.errorMessage = ''\\\"> Close</button>\\n      </div>\\n\\n      <header class=\\\"bg-gradient-to-r from-blue-100 via-white to-transparent p-4 text-black font-bold rounded-lg\\\">\\n        <!--            <header class=\\\"wave-background p-4 text-black font-bold rounded-lg\\\">-->\\n\\n        <div class=\\\"flex justify-between mb-3 pt-6\\\">\\n          <div class=\\\"font-bold mb-4 text-black align-bottom text-lg\\\">MANAGE SHOW</div>\\n\\n          <div class=\\\"flex flex-col\\\">\\n            <div class=\\\"flex flex-row w-full justify-end mb-2\\\">\\n              <button\\n                  @click=\\\"appSettingStore.btnRedirect(`/teams/${team.slug}/manage`)\\\"\\n                  class=\\\"px-4 py-2 mr-2 mb-2 h-fit text-white font-semibold bg-orange-500 hover:bg-orange-600 rounded-lg\\\"\\n              >Back to<br/>\\n                Team Page\\n              </button>\\n            </div>\\n            <div class=\\\"flex flex-wrap-reverse justify-end\\\">\\n              <button\\n                  v-if=\\\"teamStore.can.editShow\\\"\\n                  @click=\\\"goLive\\\"\\n                  class=\\\"px-4 py-2 mr-2 mb-2 h-fit text-white font-semibold bg-red-500 hover:bg-red-600 rounded-lg\\\"\\n              >Go Live\\n              </button>\\n              <button\\n                  v-if=\\\"teamStore.can.editShow\\\"\\n                  @click=\\\"appSettingStore.btnRedirect(`/shows/${show.slug}/edit`)\\\"\\n                  class=\\\"px-4 py-2 mb-2 h-fit text-white font-semibold bg-blue-500 hover:bg-blue-600 rounded-lg\\\"\\n              >Edit Show\\n              </button>\\n\\n              <DashboardButton class=\\\"mb-2\\\"/>\\n\\n            </div>\\n          </div>\\n\\n        </div>\\n\\n        <ShowHeader\\n            :show=\\\"props.show\\\"\\n            :team=\\\"props.team\\\"\\n            :can=\\\"can\\\"\\n        />\\n\\n        <div class=\\\"flex justify-end mt-6\\\">\\n\\n\\n        </div>\\n      </header>\\n\\n\\n      <!--            <div class=\\\"my-6 ml-10 w-3/4\\\">-->\\n      <!--                {{ teamStore.activeShow.description }}-->\\n      <!--            </div>-->\\n\\n      <div class=\\\"my-6 text-gray-100\\\">\\n        <span class=\\\"uppercase text-xs font-semibold text-black\\\">SHOW NOTES: </span>\\n        <span class=\\\"text-black light:text-black dark:text-white\\\">{{ props.show.notes }}</span>\\n      </div>\\n\\n\\n      <div class=\\\"flex flex-col\\\">\\n        <div class=\\\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\\\">\\n          <div class=\\\"py-2 align-middle inline-block w-full sm:px-6 lg:px-8 space-y-4\\\">\\n            <!--          <div class=\\\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\\\">-->\\n            <!--            <div class=\\\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\\\">-->\\n\\n            <!-- This code doesn't work .. it's meant to become a header button that collapses/expands each section -->\\n            <!--                            <button class=\\\"bg-orange-300 p-2 font-bold w-full text-left\\\" type=\\\"button\\\"-->\\n            <!--                                    data-bs-toggle=\\\"collapse\\\" data-bs-target=\\\"#collapseExample\\\" aria-expanded=\\\"true\\\"-->\\n            <!--                                    aria-controls=\\\"collapseExample\\\">Episodes-->\\n            <!--                            </button>-->\\n\\n            <!--                            <div class=\\\"collapse\\\" id=\\\"collapseExample\\\">-->\\n            <!--              <div>-->\\n            <!--                <div class=\\\"bg-blue-100 p-2 font-bold text-black\\\">Episodes</div>-->\\n            <div @click=\\\"toggleComponent('showEpisodes')\\\"\\n                 :class=\\\"{'rounded-t-lg': showStore.openComponent === 'showEpisodes', 'rounded-lg': showStore.openComponent !== 'showEpisodes'}\\\"\\n                 class=\\\"accordion-header p-2 font-bold transition duration-300 ease-in-out transform focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 overflow-hidden shadow-lg bg-blue-100 hover:bg-blue-300 dark:hover:bg-blue-900 text-black hover:text-blue-900 dark:text-blue-100 dark:hover:text-white\\\">\\n              <font-awesome-icon icon=\\\"fa-play-circle\\\" class=\\\"\\\"/>\\n              Episodes\\n            </div>\\n            <div v-if=\\\"showStore.openComponent === 'showEpisodes'\\\">\\n              <div class=\\\"mt-4 mb-12 pb-6 shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\\\">\\n                <ShowEpisodesList :episodes=\\\"props.episodes\\\" :show=\\\"props.show\\\"\\n                                  :episodeStatuses=\\\"props.episodeStatuses\\\"/>\\n              </div>\\n            </div>\\n            <!--              </div>-->\\n\\n            <!--                            <table class=\\\"min-w-full divide-y divide-gray-200\\\">-->\\n            <!--                                <tbody class=\\\"bg-white divide-y divide-gray-200\\\">-->\\n            <!--                                <tr v-for=\\\"episode in episodes.data\\\" :key=\\\"episode.id\\\">-->\\n            <!--                                    <td class=\\\"px-6 py-4 whitespace-nowrap\\\">-->\\n            <!--                                        <div class=\\\"flex items-center\\\">-->\\n            <!--                                            <div>-->\\n            <!--                                                <div class=\\\"text-sm font-medium text-gray-900\\\">-->\\n            <!--                                                    <Link :href=\\\"`/admin/users/${episode.id}`\\\" class=\\\"text-indigo-600 hover:text-indigo-900\\\">{{ episode.name }}</Link>-->\\n            <!--                                                </div>-->\\n            <!--                                            </div>-->\\n            <!--                                        </div>-->\\n            <!--                                    </td>-->\\n\\n            <!--                                    <td class=\\\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\\\">-->\\n            <!--                                        <Link :href=\\\"`/admin/users/edit/${episode.id}`\\\" class=\\\"text-indigo-600 hover:text-indigo-900\\\">Edit</Link>-->\\n            <!--                                    </td>-->\\n            <!--                                </tr>-->\\n            <!--                                </tbody>-->\\n            <!--                            </table>-->\\n\\n            <!--                            &lt;!&ndash; Paginator &ndash;&gt;-->\\n            <!--                            <Pagination :links=\\\"episode.links\\\" class=\\\"mt-6\\\"/>-->\\n\\n            <!--            </div>-->\\n\\n            <!--            <div class=\\\"mt-4 shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\\\">-->\\n            <!--              <div class=\\\"bg-blue-100 p-2 font-bold text-black\\\">Credits</div>-->\\n            <!--              -->\\n            <!--              -->\\n            <div @click=\\\"toggleComponent('showCredits')\\\"\\n                 :class=\\\"{'rounded-t-lg': showStore.openComponent === 'showCredits', 'rounded-lg': showStore.openComponent !== 'showCredits'}\\\"\\n                 class=\\\"accordion-header p-2 font-bold transition duration-300 ease-in-out transform focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 overflow-hidden shadow-lg bg-blue-100 hover:bg-blue-300 dark:hover:bg-blue-900 text-black hover:text-blue-900 dark:text-blue-100 dark:hover:text-white\\\">\\n              <font-awesome-icon icon=\\\"fa-clipboard-list\\\" class=\\\"\\\"/>\\n              Credits and Assignments\\n            </div>\\n            <div v-if=\\\"showStore.openComponent === 'showCredits'\\\">\\n              <div class=\\\"mt-4 mb-12 pb-6 shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\\\">\\n                <div class=\\\"border-1 border-t mb-3 bg-blue-100 py-1 px-2 text-xs font-semibold text-red-800\\\">\\n                  In development. Not currently working.\\n                </div>\\n                <Link\\n                    :href=\\\"`#`\\\"\\n                    v-if=\\\"teamStore.can.createAssignment\\\">\\n                  <button\\n                      class=\\\"bg-green-500 hover:bg-green-600 text-white ml-2 my-2 px-4 py-2 rounded disabled:bg-gray-400 h-max w-max\\\"\\n                      disabled\\n                  >Create Assignment\\n                  </button>\\n                </Link>\\n\\n                <ShowCreditsList/>\\n              </div>\\n            </div>\\n            <!--            </div>-->\\n\\n            <!--            <div class=\\\"mt-4 shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\\\">-->\\n            <!--              <div class=\\\"bg-blue-100 p-2 font-bold text-black\\\">Recordings</div>-->\\n            <div @click=\\\"toggleComponent('showRecordings')\\\"\\n                 :class=\\\"{'rounded-t-lg': showStore.openComponent === 'showRecordings', 'rounded-lg': showStore.openComponent !== 'showRecordings'}\\\"\\n                 class=\\\"accordion-header p-2 font-bold transition duration-300 ease-in-out transform focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 overflow-hidden shadow-lg bg-blue-100 hover:bg-blue-300 dark:hover:bg-blue-900 text-black hover:text-blue-900 dark:text-blue-100 dark:hover:text-white\\\">\\n              <font-awesome-icon icon=\\\"fa-circle\\\" class=\\\"text-red-700\\\"/>\\n              Recordings\\n            </div>\\n            <div v-if=\\\"showStore.openComponent === 'showRecordings'\\\">\\n              <div class=\\\"mt-4 mb-12 pb-6 shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\\\">\\n                <ShowRecordings :showRecordings=\\\"show.recordings\\\" :showName=\\\"show.name\\\" :showSlug=\\\"show.slug\\\" :showImage=\\\"show.image\\\"/>\\n\\n                <!--            </div>-->\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <ShowFooter :team=\\\"team\\\" :show=\\\"show\\\"/>\\n    </div>\\n  </div>\\n\\n</template>\\n\\n<script setup>\\nimport { onUnmounted } from 'vue'\\nimport { usePageSetup } from '@/Utilities/PageSetup'\\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\\nimport { useShowStore } from '@/Stores/ShowStore'\\nimport { useTeamStore } from '@/Stores/TeamStore'\\nimport { useGoLiveStore } from '@/Stores/GoLiveStore'\\nimport ShowHeader from '@/Components/Pages/Shows/Layout/ShowHeader'\\nimport ShowFooter from '@/Components/Pages/Shows/Layout/ShowFooter'\\nimport ShowEpisodesList from '@/Components/Pages/Shows/Elements/ManageShowEpisodesList'\\nimport ShowCreditsList from '@/Components/Pages/Shows/Elements/ManageShowCreditsList'\\nimport Message from '@/Components/Global/Modals/Messages'\\nimport DashboardButton from '@/Components/Global/Buttons/DashboardButton.vue'\\nimport ShowRecordings from '@/Components/Pages/Shows/Elements/ShowRecordings.vue'\\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome'\\nimport { Inertia } from '@inertiajs/inertia'\\n\\nusePageSetup('shows/slug/manage')\\n\\nconst appSettingStore = useAppSettingStore()\\nconst showStore = useShowStore()\\nconst teamStore = useTeamStore()\\nconst goLiveStore = useGoLiveStore()\\n\\nconst toggleComponent = (componentName) => {\\n  showStore.openComponent = showStore.openComponent === componentName ? null : componentName\\n}\\n\\n\\nonUnmounted(() => {\\n  showStore.errorMessage = ''\\n  // const topDiv = document.getElementById(\\\"topDiv\\\");\\n  // if (topDiv) {\\n  //   topDiv.scrollIntoView();\\n  // }\\n})\\n\\nlet props = defineProps({\\n  show: Object,\\n  team: Object,\\n  episodes: Object,\\n  episodeStatuses: Object,\\n  // filters: Object,\\n  can: Object,\\n})\\n\\nteamStore.setActiveTeam(props.team)\\nteamStore.setActiveShow(props.show)\\nteamStore.can = props.can\\n\\n// let search = ref(props.filters.search);\\n//\\n// watch(search, throttle(function (value) {\\n//     Inertia.get('/shows', { search: value }, {\\n//         preserveState: true,\\n//         replace: true\\n//     });\\n// }, 300));\\n\\nconst goLive = () => {\\n  goLiveStore.reset()\\n  goLiveStore.preSelectedShowId = props.show.id\\n  appSettingStore.btnRedirect(`/golive`)\\n}\\n\\n</script>\\n\\n\\n<style scoped>\\n@keyframes wave-bg {\\n  0%, 100% {\\n    background-color: #dbeafe; /* Original color */\\n  }\\n  50% {\\n    background-color: #bfdbfe; /* Slightly lighter color */\\n  }\\n}\\n\\n.wave-background {\\n  animation: wave-bg 5s infinite ease-in-out;\\n  background-color: #dbeafe; /* Starting color */\\n}\\n\\n\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import script from \"./DashboardButton.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./DashboardButton.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n    <button\n        @click=\"appSettingStore.btnRedirect('/dashboard')\"\n        class=\"bg-black hover:bg-gray-800 text-white font-semibold ml-2 mt-2 px-4 py-2 rounded-lg disabled:bg-gray-400 h-max w-max\"\n    >Dashboard\n    </button>\n  </div>\n</template>\n\n<script setup>\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\n\nconst appSettingStore = useAppSettingStore()\n\n</script>\n","import script from \"./DateTimePickerSelect.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./DateTimePickerSelect.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n    <!--        &lt;!&ndash; Date Picker &ndash;&gt;-->\n    <!--        <v-date-picker-->\n    <!--            v-model=\"selectedDate\"-->\n    <!--            is-inline-->\n    <!--            :attributes=\"{-->\n    <!--        placeholder: 'Select a Date',-->\n    <!--      }\"-->\n    <!--        />-->\n\n    <!--        &lt;!&ndash; Time Picker &ndash;&gt;-->\n    <!--        <v-time-picker-->\n    <!--            v-model=\"selectedTime\"-->\n    <!--            :step-minutes=\"15\"-->\n    <!--            :format=\"12\"-->\n    <!--            :min-time=\"'00:00:00'\"-->\n    <!--            :max-time=\"'23:59:59'\"-->\n    <!--            :attributes=\"{-->\n    <!--        placeholder: 'Select a Time',-->\n    <!--      }\"-->\n    <!--        />-->\n\n\n    <!--        <template>-->\n    <!--            <Calendar />-->\n    <!--&lt;!&ndash;            <DatePicker v-model=\"date\" />&ndash;&gt;-->\n    <!--            <VDatePicker v-model=\"date\" mode=\"dateTime\" :popover=\"false\" hide-time-header>-->\n    <!--                <template #default=\"{ togglePopover, inputValue, inputEvents }\">-->\n    <!--                    <div-->\n    <!--                        class=\"flex rounded-lg border border-gray-300 dark:border-gray-600 overflow-hidden\"-->\n    <!--                    >-->\n    <!--                        <button-->\n    <!--                            class=\"flex justify-center items-center px-2 bg-accent-100 hover:bg-accent-200 text-accent-700 border-r border-gray-300 dark:bg-gray-700 dark:text-accent-300 dark:border-gray-600 dark:hover:bg-gray-600\"-->\n    <!--                            @click=\"() => togglePopover()\"-->\n    <!--                        >-->\n    <!--                            <IconCalendar class=\"w-5 h-5\" />-->\n    <!--                        </button>-->\n    <!--                        <input-->\n    <!--                            :value=\"inputValue\"-->\n    <!--                            v-on=\"inputEvents\"-->\n    <!--                            class=\"flex-grow px-2 py-1 bg-white dark:bg-gray-700\"-->\n    <!--                        />-->\n    <!--                    </div>-->\n    <!--                </template>-->\n    <!--            </VDatePicker>-->\n    <!--        </template>-->\n\n    <DatePicker v-model=\"date\" mode=\"dateTime\" hide-time-header>\n      <template #default=\"{ togglePopover }\">\n        <button\n            class=\"px-3 py-2 bg-blue-500 text-sm text-white font-semibold rounded-md\"\n            @click.prevent=\"togglePopover\"\n        >\n          <slot name=\"buttonName\">Select date</slot>\n        </button>\n      </template>\n    </DatePicker>\n\n  </div>\n</template>\n\n<script setup>\nimport { ref, defineProps, defineEmits, watch } from 'vue'\nimport VDatePicker from 'v-calendar'\n// import VCalendar from 'v-calendar'\nimport { Calendar, DatePicker } from 'v-calendar'\nimport 'v-calendar/style.css'\n\nconst props = defineProps({\n  // initialDate: Date,\n  // initialTime: String,\n  inputValue: String,\n  date: String,\n});\n\nconst emits = defineEmits();\n\n// let date = new Date();\n// let date = ref(new Date());\nlet date = ref(props.date);\nconst calendar = ref(null);\nconst inputValue = ref(props.inputValue || null);\n\n// Define refs to store selected date and time\n// const selectedDate = ref(props.initialDate || null);\n// const selectedTime = ref(props.initialTime || null);\n\n\n// Watch for changes in selected dateTime emit it\nwatch([date], ([newDate]) => {\n  emits('date-time-selected', {date: newDate});\n});\n</script>\n","import script from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"mx-4 my-4\">\n    <div class=\"alert alert-info mt-4\"\n         v-if=\"props.flash.message\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" class=\"stroke-current shrink-0 w-6 h-6\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n      </svg>\n      <span>{{ props.flash.message }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-success mt-4 mx-3\"\n         v-if=\"props.flash.success\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.success }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-warning mt-4 mx-3\"\n         v-if=\"props.flash.warning\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"/>\n      </svg>\n      <span>{{ props.flash.warning }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-error mt-4 mx-3\"\n         v-if=\"props.flash.error\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.error }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n  </div>\n\n</template>\n\n<script setup>\nimport { Inertia } from \"@inertiajs/inertia\"\nimport { computed } from \"vue\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\n\nconst appSettingStore = useAppSettingStore()\n\nappSettingStore.showFlashMessage = true\n\nlet props = defineProps({\n  flash: Object,\n\n})\n\nconst messageType = computed(() => ({\n  'text-green-700 bg-green-100 dark:bg-green-200 dark:text-green-800': props.flash.success,\n  'text-blue-700 bg-blue-100 dark:bg-blue-200 dark:text-blue-800': props.flash.message,\n  'text-orange-700 bg-orange-100 dark:bg-orange-200 dark:text-orange-800': props.flash.warning,\n  'text-red-700 bg-red-100 dark:bg-red-200 dark:text-red-800': props.flash.error,\n}))\n\nconst clearFlashMessage = async () => {\n  await Inertia.post(route('flash.clear'));\n  Inertia.reload();\n};\n</script>\n","import script from \"./Pagination.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Pagination.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div v-if=\"data.last_page > 1\" class=\"flex flex-wrap justify-center my-4 space-x-4 space-y-2\">\n    <div></div>\n    <Component\n        :is=\"link.url ? 'Link' : 'span'\"\n        v-for=\"(link, key) in data.links\"\n        :key=\"key\"\n        :href=\"link.url\"\n        @click.prevent=\"saveScrollPosition\"\n        v-html=\"link.label\"\n        class=\"px-4 py-3 text-sm leading-4 h-fit\"\n        :class=\"{ 'text-white bg-orange-400 hover:bg-orange-400 dark:bg-orange-400 dark:hover:bg-orange-400': link.active,\n                      'rounded mt-2 mr-0.5 text-gray-300 dark:text-gray-700': ! link.url,\n                      'rounded bg-gray-200 hover:bg-gray-300 dark:bg-gray-800 dark:hover:bg-gray-600 text-gray-800 dark:text-gray-50 focus:text-indigo-500 hover:shadow': link.url }\"\n    />\n  </div>\n</template>\n\n\n<script setup>\nimport { onMounted, onUpdated } from 'vue'\n\ndefineProps({\n  data: Object,\n})\nlet savedScrollPosition = 0\nconst saveScrollPosition = () => {\n  savedScrollPosition = window.scrollY\n}\nonMounted(() => {\n  window.scrollTo(0, savedScrollPosition)\n})\n</script>\n\n\n<!--class=\"px-1 text-gray-800 dark:text-gray-50 dark:hover:text-blue-400 hover:text-blue-400\"-->\n<!--:class=\"{ 'text-gray-300 dark:text-gray-700 dark:hover:text-gray-700 hover:text-gray-300': ! link.url, 'font-bold' : link.active }\"-->\n","import script from \"./ShowFooter.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ShowFooter.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n\n  <div class=\"flex justify-between mt-64 mb-4\">\n    <div>\n      <span class=\"text-xs uppercase font-semibold\">Show ID: </span>\n      <span class=\"text-xs\">{{ show.ulid }}</span>\n    </div>\n\n    <div class=\"flex justify-end\">\n\n\n      <!-- Paginator -->\n      <!--                            <Pagination :links=\"`#`\" class=\"mt-6\"/>-->\n      <div class=\"text-gray-200 ml-2 uppercase\">\n        {{ show.name }}&nbsp;\n      </div>\n      <div>\n        ©\n        <!--                    If there is a copyright year display it... we need to remove the &copy; and replace it with whichever creative commons icon it needs -->\n        <span v-if=\"show.last_release_year > 0\">{{ show.first_release_year }}-{{ show.last_release_year }}</span>\n        <span v-if=\"!show.last_release_year && show.first_release_year\">{{ show.first_release_year }}</span>\n        <span class=\"text-xs font-semibold text-gray-500\"\n              v-if=\"!show.last_release_year && !show.first_release_year && show.copyrightYear\">{{\n            show.copyrightYear\n          }}</span>\n        <span class=\"text-xs font-semibold text-gray-500\"\n              v-if=\"show.creative_commons?.id === 7\">&nbsp;&copy;&nbsp;</span>\n        <!--                    If there is no copyright year then it's probably public domain... so we'll just display the creative commons name-->\n        <span v-if=\"show.creative_commons?.name\"\n              class=\"text-xs font-semibold text-gray-500\">&nbsp;&bull;&nbsp;{{ show.creative_commons?.name }}&nbsp;&bull;&nbsp;</span>\n\n\n      </div>\n    </div>\n\n  </div>\n\n</template>\n\n<script setup>\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\n\nconst appSettingStore = useAppSettingStore()\n\ndefineProps({\n  team: Object,\n  show: Object,\n})\n\nlet currentYear = new Date().getFullYear()\n\n</script>\n","import script from \"./Label.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Label.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./DateTimePicker.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./DateTimePicker.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n    <DatePicker v-model=\"date\" mode=\"dateTime\"/>\n\n  </div>\n</template>\n\n<script setup>\nimport { ref, defineProps, defineEmits, watch, watchEffect } from 'vue'\nimport { DatePicker } from 'v-calendar'\nimport 'v-calendar/style.css'\nimport { useUserStore } from '@/Stores/UserStore'\n\nconst userStore = useUserStore()\n\nconst props = defineProps({\n  date: null,\n});\n\nconst emits = defineEmits();\n\nlet date = ref(props.date);\nconst calendar = ref(null);\n\n// Watch for changes in selected dateTime emit it\nwatch([date], ([newDate]) => {\n  emits('date-time-selected', {date: newDate});\n});\n</script>\n","import script from \"./DatePicker.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./DatePicker.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n    <DatePicker v-model=\"date\" mode=\"date\" view=\"weekly\" :disabled-dates=\"disabledDays\" expanded/>\n\n  </div>\n</template>\n\n<script setup>\nimport { ref, defineProps, defineEmits, watch, computed } from 'vue'\nimport { DatePicker } from 'v-calendar'\nimport 'v-calendar/style.css'\n\nconst props = defineProps({\n  date: null,\n  disabledDays: {\n    type: Array,\n    default: () => [], // Default to an empty array if not provided\n  },\n});\n\nconst emits = defineEmits();\n\nlet date = ref(props.date);\nconst calendar = ref(null);\n//\n// // Compute allowedDayNumbers only if allowedDays is provided and not empty\n// const allowedDayNumbers = computed(() => {\n//   if (props.disabledDays.length > 0) {\n//     const dayMap = { 'Sunday': 0, 'Monday': 1, 'Tuesday': 2, 'Wednesday': 3, 'Thursday': 4, 'Friday': 5, 'Saturday': 6 };\n//     return props.disabledDays.map(day => dayMap[day]);\n//   }\n//   return null; // Return null to indicate no restrictions\n// });\n//\n// // Compute dateAttributes based on whether allowedDayNumbers is null\n// const dateAttributes = computed(() => {\n//   if (allowedDayNumbers.value !== null) {\n//     return [\n//       {\n//         key: 'disabled',\n//         dates: date => !allowedDayNumbers.value.includes(date.getDay()),\n//       },\n//       {\n//         key: 'tomorrow',\n//         highlight: true,\n//         dates: new Date(new Date().setDate(new Date().getDate() + 1)),\n//       },\n//     ];\n//   }\n//   // Return an empty array or any default attributes when no allowedDays are provided\n//   return [];\n// });\n\n// Watch for changes in selected dateTime emit it\nwatch([date], ([newDate]) => {\n  emits('date-time-selected', {date: newDate});\n});\n</script>\n","import script from \"./StepSixCongratulations.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./StepSixCongratulations.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n\n  <dialog id=\"addShowToScheduleModal\" class=\"modal\">\n    <div class=\"modal-box w-11/12 max-w-5xl\">\n\n      <div class=\"flex flex-row justify-between\">\n        <div>\n          <h2 v-if=\"currentStep !== 6\" class=\"font-bold text-xl\">\n            <slot name=\"form-title\">Default Form Title</slot>\n            <span class=\"font-medium\">({{ selectedTimezone }})</span>\n          </h2>\n        </div>\n        <div>\n          <button v-if=\"currentStep <= 5\"\n                  class=\"btn\"\n                  @click.prevent=\"closeModalAndReset\">Cancel\n          </button>\n        </div>\n      </div>\n\n      <div>\n        <h4 v-if=\"currentStep !== 6\" class=\"font-medium text-lg\">\n          <slot name=\"form-description\">Default Form Description</slot>\n        </h4>\n      </div>\n\n      <div class=\"flex flex-col space-y-2 px-12 mt-6\">\n        <form @submit.prevent=\"submit\">\n\n          <div v-if=\"currentStep === 0\" class=\"mt-6\">\n            <!-- Step 0 content -->\n            <!-- Part 1: Confirm Timezone -->\n\n            <div v-if=\"!timezoneConfirmed\">\n              <div class=\"mb-2 pb-6 text-primary text-center\">Confirm Timezone</div>\n              <div class=\"flex flex-row justify-center\">\n                <select id=\"timezone-select\" v-model=\"selectedTimezone\" @change=\"updateTimezone\" class=\"ml-2 rounded-lg select select-bordered\">\n                  <option v-for=\"timezone in userStore.timezones\" :key=\"timezone\" :value=\"timezone\">{{ timezone }}</option>\n                </select>\n              </div>\n              <div class=\"flex flex-row justify-center pt-6\">\n                <button @click.prevent=\"confirmTimezone\" class=\"btn btn-primary\">Confirm Timezone</button>\n              </div>\n            </div>\n\n\n            <!-- Part 2: Choose Schedule Type -->\n            <div v-else>\n              <div class=\"mb-2 text-primary text-center\">Choose Schedule Type</div>\n              <div class=\"flex justify-center space-x-4 mt-4\">\n                <button @click.prevent=\"selectScheduleType('one-time')\"\n                        class=\"btn btn-primary h-40 w-60 bg-indigo-500 hover:bg-indigo-700 text-white rounded-lg flex flex-col p-4\">\n                  <span class=\"text-lg\">One-time Event</span>\n                </button>\n                <button @click.prevent=\"selectScheduleType('recurring')\"\n                        class=\"btn btn-primary h-40 w-60 bg-indigo-500 hover:bg-indigo-700 text-white rounded-lg flex flex-col p-4\">\n                  <span class=\"text-lg\">Recurring Show</span>\n                </button>\n              </div>\n              <div @click.prevent=\"timezoneConfirmed = false\" class=\"mt-4 btn btn-sm\">< change timezone</div>\n            </div>\n\n\n          </div>\n\n\n          <div v-if=\"form.scheduleType === 'one-time'\" class=\"py-6\">\n            <!-- Steps Header for one-time shows -->\n            <ul v-if=\"currentStep <= 5 && currentStep !== 0\" class=\"steps w-full\">\n              <li @click.prevent=\"goToStep(1)\" class=\"step cursor-pointer\"\n                  :class=\"{ 'step-primary': currentStep >= 1 && currentStep !== 6}\">\n                <div>&nbsp;</div>\n                <div :class=\"{ 'text-primary': currentStep === 1 }\">Choose Start Day/Time</div>\n                <div :class=\"{ 'text-primary': currentStep === 1 }\">{{ formattedStartDate }}&nbsp;</div>\n                <div :class=\"{ 'text-primary': currentStep === 1 }\">{{ formattedStartTimeForOneTime }}&nbsp;</div>\n              </li>\n              <li @click.prevent=\"goToStep(2)\" class=\"step cursor-pointer\"\n                  :class=\"{ 'step-primary': currentStep >= 2 }\">\n                <div>&nbsp;</div>\n                <div :class=\"{ 'text-primary': currentStep === 2 }\">Set Duration</div>\n                <div :class=\"{ 'text-primary': currentStep === 2 }\"> {{ form.durationDisplay }}&nbsp;</div>\n                <div>&nbsp;</div>\n              </li>\n            </ul>\n\n            <div class=\"mt-6 pt-6\">\n\n              <div v-if=\"currentStep === 1\" class=\"flex flex-row justify-center\">\n                <!-- Step 1 content -->\n                <div class=\"flex flex-col\">\n                  <div class=\"mb-2\">1. Choose start date and time.</div>\n                  <DateTimePicker :date=\"form.startDate\" @date-time-selected=\"handleStartDateSelected\"/>\n                </div>\n              </div>\n            </div>\n\n            <div v-if=\"currentStep === 2\" class=\"flex flex-row justify-center\">\n              <!-- Step 3 content -->\n              <div class=\"flex flex-col\">\n                <div class=\"mb-2\">3. Choose duration (maximum 3 hours)</div>\n                <div class=\"flex items-center gap-2\">\n                  <select v-model=\"form.durationHour\" class=\"select select-bordered\">\n                    <option value=\"0\">0 hours</option>\n                    <option value=\"1\">1 hour</option>\n                    <option value=\"2\">2 hours</option>\n                    <option value=\"3\">3 hours</option>\n                  </select>\n                  <select v-model=\"form.durationMinute\" class=\"select select-bordered \">\n                    <option v-for=\"option in minuteOptions\" :key=\"option\" :value=\"option\">{{ option }} minutes</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n\n          </div>\n\n          <div v-if=\"form.scheduleType === 'recurring'\" class=\"py-6\">\n            <!-- Steps Header for recurring shows -->\n            <ul v-if=\"currentStep <= 5 && currentStep !== 0\" class=\"steps w-full\">\n              <li @click.prevent=\"goToStep(1)\" class=\"step cursor-pointer\"\n                  :class=\"{ 'step-primary': currentStep >= 1 && currentStep !== 6}\">\n                <div>&nbsp;</div>\n                <div :class=\"{ 'text-primary': currentStep === 1 }\">Choose Days</div>\n                <div :class=\"{ 'text-primary': currentStep === 1 }\">{{ abbreviatedDaysOfWeekOrdered }}&nbsp;</div>\n              </li>\n              <li @click.prevent=\"goToStep(2)\" class=\"step cursor-pointer\"\n                  :class=\"{ 'step-primary': currentStep >= 2 }\">\n                <div>&nbsp;</div>\n                <div :class=\"{ 'text-primary': currentStep === 2 }\">Start time</div>\n                <div :class=\"{ 'text-primary': currentStep === 2 }\">{{ formattedStartTime }}&nbsp;</div>\n              </li>\n              <li @click.prevent=\"goToStep(3)\" class=\"step cursor-pointer\"\n                  :class=\"{ 'step-primary': currentStep >= 3 }\">\n                <div>&nbsp;</div>\n                <div :class=\"{ 'text-primary': currentStep === 3 }\">Duration</div>\n                <div :class=\"{ 'text-primary': currentStep === 3 }\"> {{ form.durationDisplay }}&nbsp;</div>\n              </li>\n              <li @click.prevent=\"goToStep(4)\" class=\"step cursor-pointer\"\n                  :class=\"{ 'step-primary': currentStep >= 4 }\">\n                <div>&nbsp;</div>\n                <div :class=\"{ 'text-primary': currentStep === 4 }\">Start date</div>\n                <div :class=\"{ 'text-primary': currentStep === 4 }\">{{ formattedStartDate }}&nbsp;</div>\n              </li>\n              <li @click.prevent=\"goToStep(5)\" class=\"step cursor-pointer\"\n                  :class=\"{ 'step-primary': currentStep >= 5 }\">\n                <div>&nbsp;</div>\n                <div :class=\"{ 'text-primary': currentStep === 5 }\">End date</div>\n                <div :class=\"{ 'text-primary': currentStep === 5 }\">{{ formattedEndDate }}&nbsp;</div>\n              </li>\n            </ul>\n\n\n            <div class=\"mt-6 pt-6\">\n\n              <div v-if=\"currentStep === 1\">\n                <!-- Step 1 content -->\n                <div class=\"mb-2\">1. Choose days of the week.</div>\n                <label v-for=\"day in ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\"\n                       :key=\"day\"\n                       class=\"ml-4 cursor-pointer\">\n                  <input type=\"checkbox\" v-model=\"form.daysOfWeek\" :value=\"day\" class=\"cursor-pointer checkbox\"> <span\n                    class=\"pl-1\">{{ day }}</span>\n                </label>\n              </div>\n              <div v-if=\"currentStep === 2\">\n                <!-- Step 2 content -->\n                <div class=\"mb-2\">2. Choose start time</div>\n                <div class=\"flex items-center gap-2\">\n                  <!-- Hour selection -->\n                  <select v-model=\"form.startTime.hour\" class=\"form-select select select-bordered \">\n                    <option v-for=\"hour in hours\" :key=\"hour\" :value=\"hour\">{{ hour }}</option>\n                  </select>\n\n                  <!-- Minute selection -->\n                  <select v-model=\"form.startTime.minute\" class=\"form-select select select-bordered \">\n                    <option value=\"00\">00</option>\n                    <option value=\"30\">30</option>\n                  </select>\n\n                  <!-- AM/PM selection -->\n                  <select v-model=\"form.startTime.meridian\" class=\"form-select select select-bordered \">\n                    <option value=\"AM\">AM</option>\n                    <option value=\"PM\">PM</option>\n                  </select>\n                </div>\n              </div>\n              <div v-if=\"currentStep === 3\">\n                <!-- Step 3 content -->\n                <div class=\"mb-2\">3. Choose duration (maximum 3 hours)</div>\n                <div class=\"flex items-center gap-2\">\n                  <select v-model=\"form.durationHour\" class=\"select select-bordered\">\n                    <option value=\"0\">0 hours</option>\n                    <option value=\"1\">1 hour</option>\n                    <option value=\"2\">2 hours</option>\n                    <option value=\"3\">3 hours</option>\n                  </select>\n                  <select v-model=\"form.durationMinute\" class=\"select select-bordered\">\n                    <option v-for=\"option in minuteOptions\" :key=\"option\" :value=\"option\">{{ option }} minutes</option>\n                  </select>\n                </div>\n              </div>\n              <div v-if=\"currentStep === 4\">\n                <!-- Step 4 content -->\n                <div class=\"mb-2\">4. Choose start date (tomorrow or later)</div>\n                <DatePicker :date=\"form.startDate\" :disabledDays=\"disabledDays\"\n                            @date-time-selected=\"handleStartDateSelected\"/>\n              </div>\n              <div v-if=\"currentStep === 5\">\n                <!-- Step 5 content -->\n                <div class=\"mb-2\">5. Choose end date (cannot be longer than 3 months, so 3 months is pre-set)</div>\n                <DatePicker :date=\"form.endDate\" :disabledDays=\"disabledDays\"\n                            @date-time-selected=\"handleEndDateSelected\"/>\n              </div>\n            </div>\n          </div>\n\n          <StepSixCongratulations v-if=\"currentStep === 6 && Object.keys(form.errors).length === 0\" class=\"p-4\">\n          <template #header>Congratulations!</template>\n            <template #subHeader>You've successfully scheduled your show on notTV!</template>\n          </StepSixCongratulations>\n\n          <div v-if=\"currentStep === 6 && Object.keys(form.errors).length > 0\" class=\"p-4 text-red-700\">\n            <ul>\n              <li v-for=\"(error, key) in form.errors\" :key=\"key\">{{ error }}</li>\n            </ul>\n          </div>\n\n\n          <div class=\"flex flex-row justify-between mt-12\">\n            <button v-if=\"(currentStep <= 5 && currentStep !== 0) || (currentStep === 6 && form.errors.length > 0)\"\n                    @click.prevent=\"goToPreviousStep\"\n                    :disabled=\"currentStep === 0\"\n                    class=\"btn\">Back\n            </button>\n            <div></div>\n            <div v-if=\"stepError\" class=\"px-3 text-red-700\" v-html=\"stepError\"/>\n            <div></div>\n            <button v-if=\"currentStep <=5 && currentStep !== 0\"\n                    @click.prevent=\"goToNextStep\"\n                    :disabled=\"currentStep === totalSteps\"\n                    class=\"btn btn-primary text-white\">Next\n            </button>\n            <button v-if=\"currentStep === 6\"\n                    @click.prevent=\"closeModal\"\n                    :disabled=\"currentStep !== totalSteps\"\n                    class=\"btn justify-self-end\">Close\n            </button>\n          </div>\n\n\n        </form>\n      </div>\n    </div>\n  </dialog>\n\n  <dialog id=\"confirmAddShowModal\" class=\"modal\">\n    <div class=\"modal-box text-center\">\n      <h3 class=\"font-bold text-lg\">Are you sure you want to add your show to the schedule?</h3>\n      <div class=\"modal-action flex flex-row justify-center\">\n        <button class=\"btn btn-success text-white px-6\" @click.prvent=\"submit\">Yes!</button>\n        <button class=\"btn\" @click.prvent=\"closeConfirmAddShowModal\">Go back</button>\n      </div>\n    </div>\n  </dialog>\n\n</template>\n<script setup>\nimport { computed, onMounted, onUnmounted, reactive, ref, watch, watchEffect } from 'vue'\nimport { useForm } from '@inertiajs/inertia-vue3'\nimport dayjs from 'dayjs'\nimport utc from 'dayjs/plugin/utc' // Required for UTC support\nimport timezone from 'dayjs/plugin/timezone' // Required for timezone support\nimport { useUserStore } from '@/Stores/UserStore'\nimport { useScheduleStore } from '@/Stores/ScheduleStore'\n\nimport Label from '@/Jetstream/Label.vue'\nimport Button from '@/Jetstream/Button.vue'\n\nconst userStore = useUserStore()\nconst scheduleStore = useScheduleStore()\n\ndayjs.extend(utc)\ndayjs.extend(timezone)\n\nlet props = defineProps({\n  id: String,\n  show: Object,\n  // errors: Object,\n})\n\n// const errors = ref(props.errors);\n\nlet endDate = ''\nconst formEndDate = ref('')\nconst selectedEndDate = ref(null)\nconst timezoneConfirmed = ref(false)\nconst modalVisible = ref(false)\n\nconst currentStep = ref(0)\nconst totalSteps = ref(6)\nconst stepError = ref('') // To store the error message for the current step\n\n\nconst form = reactive(useForm({\n  scheduleType: '', // 'one-time' or 'recurring'\n  daysOfWeek: [],\n  startTime: {\n    hour: '12',\n    minute: '00',\n    meridian: 'AM',\n  },\n  duration: '',\n  durationHour: '0', // Initialize as '0' to represent the default selection\n  durationMinute: '30', // Default to '30' minutes for '0' hours\n  durationDisplay: '30 minutes', // Default display text\n  startDate: '',\n  endDate: '',\n  errors: {},\n}))\n\nform.reset() // on modal load, reset form.\n\nfunction confirmTimezone() {\n  timezoneConfirmed.value = true\n}\n\nfunction selectScheduleType(type) {\n  form.scheduleType = type\n  // Proceed to the next step based on the selection\n  goToNextStep()\n}\n\nfunction goToNextStep() {\n  // Clear any existing error message\n  stepError.value = ''\n\n  if (form.scheduleType === 'recurring') {\n    if (currentStep.value === 1 && form.daysOfWeek.length === 0) {\n      // If no days are selected and the current step is 1, set an error message\n      stepError.value = 'Please select at least one day of the week.'\n    } else if (currentStep.value === 4 && !form.startDate) {\n      // If no start date is selected and the current step is 4, set an error message\n      stepError.value = 'Please select a start date.'\n    } else if (currentStep.value === 4 && dayjs(form.startDate).isBefore(dayjs().add(24, 'hour'))) {\n      // If the start date is within the next 24 hours when the current step is 4, set an error message\n      stepError.value = 'Start date must be at least 24 hours in the future.';\n    } else if (currentStep.value === 5 && dayjs(form.endDate).isAfter(dayjs(form.startDate).add(3, 'months').add(1, 'week'))) {\n      // Allow the end date to be up to one week beyond exactly three months from the start date\n      // const latestEndDate = dayjs(form.startDate).add(3, 'months').add(1, 'week').format('ddd MMM D YYYY')\n      stepError.value = `End date must be within 3 months and 1 week of the start date. <\\/br>The latest possible end date is ${provisionalEndDate.value}. <\\/br>This limitation is for the Beta Version of notTV only.`\n    } else if (currentStep.value === 5) {\n      document.getElementById('confirmAddShowModal').showModal()\n    } else if (currentStep.value < totalSteps.value) {\n      // Proceed to the next step if there are no errors\n      currentStep.value++\n    }\n  } else if (form.scheduleType === 'one-time') {\n    if (currentStep.value === 1 && !form.startDate) {\n      // If no start date is selected and the current step is 1, set an error message\n      stepError.value = 'Please select a start date.'\n    } else if (currentStep.value === 1 && dayjs(form.startDate).isBefore(dayjs().add(1, 'day').startOf('day'))) {\n      // If the start date is today or earlier when the current step is 1, set an error message\n      stepError.value = 'Start date must be later than today.'\n    } else if (currentStep.value === 2) {\n      document.getElementById('confirmAddShowModal').showModal()\n    } else if (currentStep.value < totalSteps.value) {\n      // Proceed to the next step if there are no errors\n      currentStep.value++\n    }\n  }\n\n}\n\nfunction goToPreviousStep() {\n  if (form.scheduleType === 'recurring' && currentStep.value > 0) {\n    currentStep.value--\n  } else if (form.scheduleType === 'one-time' && currentStep.value > 2) {\n    currentStep.value = 2\n  } else if (form.scheduleType === 'one-time') {\n    currentStep.value--\n  }\n}\n\nfunction goToStep(num) {\n  // Clear any existing error message\n  stepError.value = ''\n  if (form.scheduleType === 'recurring') {\n    if (currentStep.value === 1 && form.daysOfWeek.length === 0) {\n      // If no days are selected and the current step is 1, set an error message\n      stepError.value = 'Please select at least one day of the week.'\n    } else if ((currentStep.value === 4 && !form.startDate) || (num === 5 && !form.startDate)) {\n      // If no start date is selected and the current step is 4, set an error message\n      stepError.value = 'Please select a start date.'\n    } else if ((currentStep.value === 4 && dayjs(form.startDate).isBefore(dayjs().add(1, 'day').startOf('day'))) || (num === 5 && dayjs(form.startDate).isBefore(dayjs().add(1, 'day').startOf('day')))) {\n      // If the start date is today or earlier when the current step is 4, set an error message\n      stepError.value = 'Start date must be later than today.'\n    } else\n      currentStep.value = num\n  } else if (form.scheduleType === 'one-time') {\n    if (currentStep.value === 1 && !form.startDate) {\n      // If no start date is selected and the current step is 1, set an error message\n      stepError.value = 'Please select a start date.'\n    } else if (currentStep.value === 1 && dayjs(form.startDate).isBefore(dayjs().add(1, 'day').startOf('day'))) {\n      // If the start date is today or earlier when the current step is 1, set an error message\n      stepError.value = 'Start date must be later than today.'\n    } else\n      currentStep.value = num\n  }\n\n}\n\n// Define the order of days\nconst daysOrder = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n\n// Mapping full day names to their abbreviations\nconst dayAbbreviations = {\n  'Sunday': 'Su',\n  'Monday': 'M',\n  'Tuesday': 'Tu',\n  'Wednesday': 'W',\n  'Thursday': 'Th',\n  'Friday': 'F',\n  'Saturday': 'Sa',\n}\n\n// Define the mapping from day names to their numerical values (0 = Sunday, 6 = Saturday)\nconst dayNameToNumber = {\n  'Sunday': 1,\n  'Monday': 2,\n  'Tuesday': 3,\n  'Wednesday': 4,\n  'Thursday': 5,\n  'Friday': 6,\n  'Saturday': 7,\n}\n\n// Computed property to get the abbreviated days of the week in the correct order\nconst abbreviatedDaysOfWeekOrdered = computed(() => {\n  // Sort the selected days based on their index in daysOrder\n  const sortedSelectedDays = form.daysOfWeek\n      .map(day => ({day, index: daysOrder.indexOf(day)}))\n      .sort((a, b) => a.index - b.index)\n      .map(sortedDay => dayAbbreviations[sortedDay.day]) // Map to abbreviations\n\n  return sortedSelectedDays.join(', ')\n})\n\n// Watch for changes in the selected days of the week\nwatch(() => form.daysOfWeek, (newDays) => {\n  // If currently on the first step and at least one day is selected, clear the error message\n  if (currentStep.value === 1 && newDays.length > 0) {\n    stepError.value = ''\n  }\n}, {immediate: true})\n\n\n// Generate hours (1-12 for AM/PM format)\nconst hours = Array.from({length: 12}, (_, i) => (i + 1).toString().padStart(2, '0'))\n\n// A computed property to format the time for display\nlet formattedStartTime = computed(() => {\n  // Only format the time if all parts have been selected\n  if (form.startTime.hour && form.startTime.minute && form.startTime.meridian) {\n    return `${form.startTime.hour}:${form.startTime.minute} ${form.startTime.meridian}`\n  } else {\n    return '' // Default message\n  }\n})\n\n// Compute the available minute options based on the selected hour\nconst minuteOptions = computed(() => {\n  if (form.durationHour === '0') {\n    return ['30'] // Only '30' minutes if '0 hours' is selected\n  } else if (form.durationHour === '3') {\n    return ['00'] // Only '00' minutes if '3 hours' is selected\n  } else {\n    return ['00', '30'] // Both '00' and '30' minutes options available otherwise\n  }\n})\n\n// Function to update the duration display text based on current selections\nconst updateDurationDisplay = () => {\n  let display = `${form.durationHour} hour${form.durationHour === '1' ? '' : 's'}`\n  if (form.durationHour === '0') {\n    display = '30 minutes' // Display '30 minutes' for '0 hours' selection\n  } else if (form.durationMinute === '30' && form.durationHour !== '0') {\n    display += ' and 30 minutes' // Append 'and 30 minutes' for selections other than '0 hours'\n  }\n  form.durationDisplay = display // Update the display text in the form state\n}\n\n// Watch the durationMinute for changes to update the display accordingly\nwatch(() => form.durationMinute, () => {\n  updateDurationDisplay()\n}, {immediate: true})\n\n// Automatically adjust the minute selection when the hour changes\nwatch(() => form.durationHour, (newHour) => {\n  if (newHour === '1' || newHour === '2' || newHour === '3') {\n    form.durationMinute = '00' // Force to '00' if '3 hours' is selected\n  } else if (newHour === '0') {\n    form.durationMinute = '30' // Force to '30' if '0 hours' is selected\n  }\n  // Update the duration display based on the new selections\n  updateDurationDisplay()\n}, {immediate: true})\n\n// Initialize the display text based on the default selections\nupdateDurationDisplay()\n\n// Assuming form.startDate is in 'YYYY-MM-DD' format or a Date object\nconst formattedStartTimeForOneTime = computed(() => {\n  if (!form.startDate) return ''\n  // Directly parse and format the date in local time without converting timezones\n  const timeIn = dayjs(form.startDate).format('hh:mm A');\n  console.log('formattedStartTimeForOneTime time in: ' + form.startDate);\n  console.log('formattedStartTimeForOneTime time out: ' + timeIn);\n  return timeIn; // This should match the local time equivalent of the input\n\n\n})\n\nconst formattedStartDate = computed(() => {\n  if (!form.startDate) return ''\n  return dayjs(form.startDate).format('ddd MMM D YYYY') // Formats to \"Wed Feb 21 2024\"\n})\n\nlet formattedEndDate = computed(() => {\n  if (!form.endDate) return ''\n  return dayjs(form.endDate).format('ddd MMM D YYYY') // Formats to \"Wed Feb 21 2024\"\n})\n\n// Compute the disabled days based on the selected days of the week\nconst disabledDays = computed(() => {\n  const selectedDayNumbers = form.daysOfWeek.map(day => dayNameToNumber[day])\n  const disabledDayNumbers = Object.values(dayNameToNumber).filter(dayNum => !selectedDayNumbers.includes(dayNum))\n  // Return the structure expected by the DatePicker component for disabling days\n  return [\n    {\n      repeat: {\n        weekdays: disabledDayNumbers,\n      },\n    },\n  ]\n})\n\nconst provisionalEndDate = ref('')\n// Handle date selection from DatePicker\nconst handleStartDateSelected = ({date}) => {\n  stepError.value = '' // Clear any existing error messages\n  const dayjsDate = dayjs(date);\n  // form.startDate = dayjsDate.tz(userStore.canadianTimezone, true).format(); // Update the start date\n  form.startDate = date; // Update the start date\n  console.log('handleStartDate form.startDate: ' + form.startDate)\n  console.log('handleStartDate raw date: ' + date)\n\n  // Calculate a rough endDate 3 months from the startDate\n  endDate = dayjs(date).add(3, 'months')\n\n  // If endDate's weekday differs from startDate's, adjust to the next occurrence of the same weekday\n  const startWeekday = dayjs(date).day()\n  while (endDate.day() !== startWeekday) {\n    endDate = endDate.add(1, 'day')\n  }\n\n  // If the endDate is more than a week away from being exactly 3 months, adjust by subtracting days to get closer to the 3-month mark\n  if (endDate.diff(dayjs(date).add(3, 'months'), 'week') > 1) {\n    endDate = endDate.subtract(endDate.diff(dayjs(date).add(3, 'months'), 'days') % 7, 'days')\n\n  }\n\n  form.endDate = endDate\n  console.log('handleStartDate form.endDate: ' + form.endDate)\n  provisionalEndDate.value = form.endDate.format('ddd MMM D YYYY') // Update the endDate in the form\n  console.log('provisionalEndDate: ' + provisionalEndDate.value)\n}\n\n// Handles end date selection\nconst handleEndDateSelected = ({date}) => {\n  console.log('handleEndDate: ' + date)\n  // form.endDate = dayjs(date).tz(userStore.timezone) // Directly set the end date from the selection\n  form.endDate = date // Directly set the end date from the selection\n  console.log('handleEndDate form.endDate: ' + form.endDate)\n  console.log('NEW handleEndDate form.endDate: ' + selectedEndDate.value)\n  // You might want to add validation or adjustment logic here as well\n}\n\nasync function submit() {\n  closeConfirmAddShowModal()\n  let formattedDuration = ''\n\n  console.log('==================================================')\n\n  // If we reach here, user confirmed. Proceed with submission.\n  if (form.scheduleType === 'one-time') {\n\n    // 1. Start date/time\n      // Parse the startDate as a Day.js object\n      console.log('SUBMIT start date in: ' + form.startDate)\n      // form.startDate = dayjs(form.startDate).tz(userStore.canadianTimezone, true).format()\n      // console.log('SUBMIT start date out: ' + form.startDate)\n      let startDate = dayjs(form.startDate).tz(userStore.canadianTimezone, true);\n      form.startDate = startDate.format()\n      console.log('SUBMIT start date formatted: ' + form.startDate);\n\n    // 2. Duration\n      // Ensure duration hours and minutes are treated as numbers\n      let durationHours = Number(form.durationHour);\n      let durationMinutes = Number(form.durationMinute);\n\n      form.duration = (durationHours * 60) + durationMinutes;\n\n    // 3. End date/time\n\n      // Adjust the endDate by setting the correct hour and minute, then adding the duration\n      endDate = startDate\n          .add(durationHours, 'hour')\n          .add(durationMinutes, 'minute');\n\n      // If you need to adjust for a specific timezone without changing the local time\n        // Note: The true flag in tz() might not be necessary depending on your exact needs for timezone handling\n        form.endDate = dayjs(endDate).tz(userStore.canadianTimezone, true).format();\n        console.log('SUBMIT end date out: ' + form.endDate);\n\n\n    // 4. Other values are null\n      form.startTime = null // not used for one-time\n      form.daysOfWeek = null // not used for one-time\n\n\n  }\n\n\n  if (form.scheduleType === 'recurring') {\n\n\n    // 1. Start date in, add start time\n      console.log('SUBMIT startDate in: ' + form.startDate);\n\n      // Assuming form.startTime.hour, form.startTime.minute are in correct format and form.startTime.meridian is either 'AM' or 'PM'\n      let hour = parseInt(form.startTime.hour) % 12;// Convert to 12-hour format\n      if (form.startTime.meridian === 'PM') hour += 12; // Convert PM to 24-hour format\n\n      // Parse the startDate and set the time\n      let startDate = dayjs(form.startDate).hour(hour).minute(form.startTime.minute);\n      form.startDate = dayjs(startDate).tz(userStore.canadianTimezone, true).format()\n    console.log('whats the start date? ' + form.startDate)\n      let newEndTime = dayjs(form.startDate).add(form.durationHour, 'hours').add(form.durationMinute, 'minutes')\n    form.endTime = newEndTime.format('HH:mm:ss')\n    console.log('NEW END TIME: ' + form.endTime);\n    // Extract the date part of form.endDate\n    let endDateOnly = dayjs(form.endDate).format('YYYY-MM-DD');\n// Combine endDateOnly with form.endTime to update the form.endDate\n    form.endDate = dayjs(endDateOnly + ' ' + form.endTime).format('YYYY-MM-DD HH:mm:ss');\n\n    let newFormattedEndDateTime = dayjs(form.endDate).tz(userStore.canadianTimezone, true).format()\n    console.log('NEW END DATETIME: ' + newFormattedEndDateTime);\n      form.endDate = newFormattedEndDateTime\n    console.log('CONFIRM END DATETIME: ' + form.endDate);\n    // Calculating endDate based on startDate and the duration\n    // let endDate = startDate.add(totalDurationMinutes, 'minute');\n\n    // Setting form.endDate and logging\n    // let endDate = form.endDate.format()\n    // form.endDate = endDate.format();\n\n\n    // 2. Start time (HH:MM:SS)\n      // formattedStartTime = startDate.format('HH:mm:ss');\n      form.startTime = startDate.format('HH:mm:ss'); // Use the desired format\n      console.log('SUBMIT start time formatted in dayjs: ' + form.startTime);\n\n    // 3. Duration\n      console.log('SUBMIT duration minute in: ' + form.durationMinute);\n      console.log('SUBMIT duration hour in: ' + form.durationHour);\n\n    // Correctly calculating total duration in minutes\n    let totalDurationMinutes = (parseInt(form.durationHour) * 60) + parseInt(form.durationMinute);\n    console.log('SUBMIT formatted duration in minutes: ' + totalDurationMinutes);\n\n      // // Calculate total duration in minutes\n      formattedDuration = (Number(form.durationHour) * 60) + Number(form.durationMinute);\n      form.duration = formattedDuration\n\n\n      // console.log('SUBMIT formatted duration in minutes: ' + form.duration);\n\n    // 4. End date, add end time (end date with HH:MM:SS = start time + duration)\n    //   // Ensure the initial timestamp is correctly parsed as a Day.js date object\n    //       if (!selectedEndDate) {\n    //         form.endDate = startDate.add(totalDurationMinutes, 'minutes')\n    //         console.log('no selected end date')\n    //       } else {\n    //         form.endDate = dayjs(selectedEndDate.value).add(totalDurationMinutes, 'minutes')\n    //         console.log('Selected end date!')\n    //       }\n\n    // Log the original values to ensure they're what you expect\n    // console.log('Original duration hour:', form.durationHour);\n    // console.log('Original duration minute:', form.durationMinute);\n    //       const durationHours = parseInt(form.durationHour, 10);\n    //       const durationMinutes = parseInt(form.durationMinute, 10);\n    // // Log the parsed values to confirm they've been correctly interpreted\n    // console.log('Parsed duration hour (as integer):', durationHours);\n    // console.log('Parsed duration minute (as integer):', durationMinutes);\n    //\n    //       form.endDate = dayjs(form.endDate)\n    //           .add(durationHours, 'hours')\n    //           .add(durationMinutes, 'minutes')\n    //           .format()\n    //       // form.duration = totalDurationMinutes\n    //       console.log('SUBMIT end date in: ' + form.endDate);\n\n          //\n          // let endDate = dayjs(form.endDate).hour(hour).minute(form.startTime.minute);\n          // console.log('SUBMIT end date formatted in dayjs: ' + endDate);\n\n      // Convert hour and minute from form.startTime to numbers\n      //     let newHour = Number(form.startTime.hour) % 12;\n      //     if (form.startTime.meridian === 'PM') newHour += 12; // Adjust for 24-hour format if PM\n\n      // Ensure duration hours and minutes are treated as numbers\n      //     let durationHours = Number(form.durationHour);\n      //     let durationMinutes = Number(form.durationMinute);\n\n      // Adjust the endDate by setting the correct hour and minute, then adding the duration\n      //     let endDate = dayjs(endDate)\n      //         .add(totalDurationMinutes, 'minutes')\n    //\n    // endDate.value = dayjs(endDate.value)\n    //     .add(totalDurationMinutes, 'minutes')\n    //\n    // console.log('NEW end date WITH MINUTES ADDED: ' + endDate.value);\n\n              // .add(durationMinutes, 'minute');\n\n      // If you need to adjust for a specific timezone without changing the local time\n      // Note: The true flag in tz() might not be necessary depending on your exact needs for timezone handling\n    // Adding duration directly to startDate to avoid confusion and ensure accuracy\n\n    //\n    // form.endDate = dayjs(endDate.value).format();\n    //       console.log('NEW ADJUSTED == form.endDate: ' + form.endDate);\n\n\n    // 5. Days of week\n\n\n\n  }\n\n\n  // Prepare the payload for the API based on the schedule type\n  const payload = {\n    contentType: 'show',\n    contentId: props.show.id,\n    scheduleType: form.scheduleType,\n    startTime: form.startTime,\n    duration: form.duration,\n    // startDate: form.startDate,\n    startDate: form.startDate,\n    endDate: form.endDate,\n    daysOfWeek: form.scheduleType === 'recurring' ? form.daysOfWeek : [],\n    timezone: userStore.canadianTimezone,\n    // Include other relevant form data here\n  }\n\n  console.log('==================================================')\n  console.log('PAYLOAD: Content Type: ' + payload.contentType)\n  console.log('PAYLOAD: Content ID: ' + payload.contentId)\n  console.log('PAYLOAD: Formatted Start Date: ' + payload.startDate)\n  console.log('PAYLOAD: Formatted Start Time: ' + payload.startTime)\n  console.log('PAYLOAD: Formatted Duration in minutes: ' + payload.duration)\n  console.log('PAYLOAD: Formatted End Date: ' + payload.endDate)\n  console.log('PAYLOAD: Formatted Days of Week: ' + payload.daysOfWeek)\n  console.log('PAYLOAD: User Timezone: ' + userStore.canadianTimezone)\n\n  // Adjust the start and end time based on the selected time and meridian\n  // const adjustedStartTime = dayjs(`${form.startDate} ${payload.startTime}`, 'YYYY-MM-DD hh:mm A').toISOString()\n  // const durationInMinutes = parseInt(form.durationHour) * 60 + parseInt(form.durationMinute)\n  // const adjustedEndTime = dayjs(adjustedStartTime).add(durationInMinutes, 'minute').toISOString()\n\n  try {\n    // Replace '/api/schedule' with your actual API endpoint\n    const response = await axios.post('/api/schedule/addToSchedule', payload);\n\n    // Handle success - process response.data as needed\n    console.log('Success:', response.data);\n    goToStep(6);\n    startConfetti();\n    scheduleStore.savingToSchedule = true\n  } catch (error) {\n    // Handle errors\n    console.error('Error submitting form:', error);\n    goToStep(6); // Navigate to the error display step\n    // Populate `form.errors` with the error details for display\n    // Axios wraps the response error in `error.response`\n    if (error.response && error.response.data) {\n      form.errors.value = error.response.data;\n    } else {\n      form.errors.value = error.message || 'An unknown error occurred';\n    }\n  }\n}\n\nconst postSubmissionActions = async () => {\n  form.reset() // Reset form fields\n  closeModal() // Close modal\n}\n\nfunction closeModal() {\n  document.getElementById('addShowToScheduleModal').close()\n  // Reset the form fields to their initial values\n  form.reset()\n  // Clear all validation errors\n  form.clearErrors()\n  stopConfetti()\n  currentStep.value = 0\n  Inertia.visit(`/shows/${props.show.slug}/manage`);\n}\n\nfunction closeConfirmAddShowModal() {\n  document.getElementById('confirmAddShowModal').close()\n}\n\nconst closeModalAndReset = () => {\n  currentStep.value = 0\n  closeModal()\n  Inertia.visit(`/shows/${props.show.slug}/manage`);\n}\n\n// Watcher for currentStep to display Confetti\n// watch(currentStep, (newVal) => {\n//   if (newVal === 6) {\n//     startConfetti()\n//   }\n// })\n\nimport { getCurrentInstance } from 'vue'\nimport DateTimePicker from '@/Components/Global/Calendar/DateTimePicker.vue'\nimport DatePicker from '@/Components/Global/Calendar/DatePicker.vue'\nimport { Inertia } from '@inertiajs/inertia'\nimport StepSixCongratulations from '@/Components/Global/Schedule/StepSixCongratulations.vue'\n\n// Access the global properties\nconst {proxy} = getCurrentInstance()\n\nconst startConfetti = () => {\n  proxy.$confetti.start()\n}\n\nconst stopConfetti = () => {\n  proxy.$confetti.stop()\n}\n\n// Initialize selectedTimezone with the current value from userStore\nconst selectedTimezone = ref(userStore.canadianTimezone);\n\n// Watch for changes in userStore's timezone and update selectedTimezone accordingly\nwatch(() => userStore.canadianTimezone, (newTimezone) => {\n  selectedTimezone.value = newTimezone;\n  // dayjs.tz.setDefault(userStore.timezone);\n});\n\n\n// Function to handle the keydown event\nconst handleKeydown = (event) => {\n  if (event.key === \"Escape\") {\n    console.log('ESC pressed, modal is open');\n    stopConfetti();\n    currentStep.value = 0\n    Inertia.redirect(`/shows/${props.show.slug}/manage`)\n\n  }\n};\n\nonMounted(() => {\n  document.addEventListener('keydown', handleKeydown);\n});\n\nonUnmounted(() => {\n  document.removeEventListener('keydown', handleKeydown);\n});\n\n// onMounted(async () => {\n//   timezones.value = await getTimeZones(); // Fetch the list of timezones\n// });\n\nfunction updateTimezone() {\n  // Update the timezone in your store\n  userStore.setUserTimezone(selectedTimezone.value);\n  // Optionally, send the updated timezone to your backend here\n}\n\n</script>","import script from \"./AddShowToSchedule.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AddShowToSchedule.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./ChangeShowSchedule.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChangeShowSchedule.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <dialog id=\"changeScheduleModal\" class=\"modal\">\n    <div class=\"modal-box w-11/12 max-w-5xl\">\n\n      <div class=\"flex flex-row justify-center text-center\">\n        <div>\n          <h2 class=\"font-bold text-xl\">\n            Change Show Schedule\n          </h2>\n          <div class=\"my-6 font-medium\">\n            We are developing this feature. Check back soon.\n            <!--            <slot name=\"form-description\">Default Form Description</slot>-->\n          </div>\n          <div class=\"mb-6\">\n            For now you can <button @click.prevent=\"removeFromSchedule\" class=\"text-blue-700 hover:text-blue-500\">remove the show</button> from the schedule and re-add it again.\n          </div>\n          <div class=\"mt-4 mb-2 text-left\"></div>\n          <StepSixCongratulations/>\n          <div v-if=\"errors\" class=\"mb-6 text-red-700\">\n            <div>{{ errors }}</div>\n            <div>Please let Travis know.</div>\n          </div>\n          <div class=\"flex flex-row justify-center\">\n            <button @click.prevent=\"closeModal\" class=\"btn\">Okay</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </dialog>\n</template>\n\n<script setup>\nimport { Inertia } from '@inertiajs/inertia';\nimport { ref } from 'vue'\nimport StepSixCongratulations from '@/Components/Global/Schedule/StepSixCongratulations.vue'\n\nlet props = defineProps({\n  show: Object\n})\n\nconst errors = ref()\n\nconst removeFromSchedule = async() => {\n  const payload = {\n    data: {\n      contentType: props.show.scheduleDetails.contentType,\n      contentId: props.show.scheduleDetails.contentId,\n    }\n  }\n  await axios.delete('/api/schedule/removeFromSchedule', payload)\n      .then(() => {\n        // Assuming `show` is accessible here, otherwise, you might need `props.show.slug`\n        Inertia.visit(`/shows/${props.show.slug}/manage`);\n      })\n      .catch(error => {\n        console.error('There was an error removing the item from the schedule:', error);\n        errors.value = error\n        // Handle error (show a message, etc.)\n      });\n}\n\nfunction closeModal() {\n  document.getElementById('changeScheduleModal').close()\n}\n</script>","import script from \"./ShowHeader.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ShowHeader.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n      <div class=\"flex flex-row items-start\">\n        <!--                <img :src=\"'/storage/images/' + show.poster\" alt=\"\" class=\"w-20 mr-2 justify-left\">-->\n        <Link :href=\"`/shows/${show.slug}`\" class=\"uppercase\">\n          <div class=\"h-80\">\n            <SingleImage :image=\"show.image\" alt=\"'show poster'\" class=\"w-60 object-contain mr-2 justify-left\"/>\n          </div>\n        </Link>\n        <div class=\"flex flex-col pl-4\">\n          <Link :href=\"`/shows/${show.slug}`\" class=\"uppercase\"><span class=\"hover:text-blue-600 mb-3 inline-flex items-center text-3xl font-semibold relative\">{{ show.name }}</span></Link>\n            <div><span class=\"text-xs  font-semibold uppercase\">Team: </span>\n              <Link :href=\"`/teams/${team.slug}/manage`\" class=\"text-blue-500 hover:text-blue-600 ml-2 uppercase font-bold\"> {{\n                  team.name\n                }}\n              </Link>\n            </div>\n            <div><span class=\"text-xs font-semibold mr-2 uppercase\">Show Runner: </span><span\n                class=\"font-medium font-bold\"> {{ show.showRunner.name }} </span></div>\n            <div class=\"pt-4\"><span class=\"text-xs font-semibold mr-2 uppercase\">Category: </span><span\n                class=\"font-medium text-orange-800\"> {{ show.category.name }} </span></div>\n            <div><span class=\"text-xs font-semibold mr-2 uppercase\">Sub-category: </span><span\n                class=\"font-medium text-orange-800\"> {{ show.subCategory.name }} </span></div>\n\n          <div class=\"mt-12 w-full h-full flex flex-col\">\n            <div class=\"flex-grow\"></div>\n            <div v-if=\"show.isScheduled && show.scheduleDetails\">\n              <div>\n                Your show is currently scheduled as <strong>{{ show.scheduleDetails.type }}</strong>.\n                <div v-if=\"show.scheduleDetails.type === 'one-time'\">\n                  It will start on <strong>{{ userStore.formatDateTimeFromUtcToUserTimezone(show.scheduleDetails.startTime) }}&nbsp;{{ userStore.timezoneAbbreviation }}</strong> and last for <strong>{{ show.scheduleDetails.durationMinutes }} minutes</strong>.\n                </div>\n                <div v-else>\n                  <template v-if=\"Array.isArray(show.scheduleDetails.daysOfWeek)\">\n                    It recurs on <strong>{{ show.scheduleDetails.daysOfWeek.join(', ') }}</strong>\n                  </template>\n                  <template v-else>\n                    It recurs on <strong>{{ show.scheduleDetails.daysOfWeek }}</strong>\n                  </template>\n                  starting at <strong>{{ userStore.formatTimeFromDateInUserTimezone(show.scheduleDetails.startTime) }}&nbsp;{{ userStore.timezoneAbbreviation }}</strong> with each occurrence lasting <strong>{{ show.scheduleDetails.durationMinutes }} minutes</strong>.\n                </div>\n              </div>\n            </div>\n\n            <div v-if=\"can.editShow\">\n            <button v-if=\"!show.isScheduled\" onclick=\"addShowToScheduleModal.showModal()\"\n                    :disabled=\"scheduleStore.savingToSchedule\"\n                    class=\"btn btn-lg bg-green-500 hover:bg-green-700 border-green-500 text-white drop-shadow-lg py-2 flex flex-col\">\n              <span v-if=\"!scheduleStore.savingToSchedule\">Add Show To Schedule</span>\n              <span v-else>The schedule is being updated...</span>\n            </button>\n            <button v-if=\"show.isScheduled\" onclick=\"changeScheduleModal.showModal()\"\n                    class=\"btn btn-lg bg-indigo-500 hover:bg-indigo-700 border-indigo-500 text-white drop-shadow-lg py-2 flex flex-col\">\n              <span>Change Schedule</span>\n            </button>\n            </div>\n          </div>\n        </div>\n\n      </div>\n\n    <AddShowToSchedule :show=\"show\">\n      <template #form-title>\n        Add your show to the schedule\n      </template>\n      <template #form-description>\n        NOTE: You may want to schedule episodes individually.\n      </template>\n      <template #button-label>\n        Add\n      </template>\n    </AddShowToSchedule>\n\n    <ChangeSchedule :show=\"show\"/>\n\n\n  </div>\n</template>\n\n<script setup>\nimport { useShowStore } from \"@/Stores/ShowStore\"\nimport { useTeamStore } from \"@/Stores/TeamStore\"\nimport { useUserStore } from \"@/Stores/UserStore\"\nimport { useScheduleStore } from \"@/Stores/ScheduleStore\"\nimport SingleImage from \"@/Components/Global/Multimedia/SingleImage\"\nimport Button from '@/Jetstream/Button.vue'\nimport AddShowToSchedule from '@/Components/Global/Schedule/AddShowToSchedule.vue'\nimport ChangeSchedule from '@/Components/Global/Schedule/ChangeShowSchedule.vue'\n\nconst showStore = useShowStore()\nconst teamStore = useTeamStore()\nconst userStore = useUserStore()\nconst scheduleStore = useScheduleStore()\n\ndefineProps({\n  show: Object,\n  team: Object,\n  can: Object,\n})\n\n</script>\n","import script from \"./ManageShowEpisodesStatuses.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ManageShowEpisodesStatuses.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <div>\n        <div v-if=\"!userStore.isAdmin\">\n            <button v-if=\"teamStore.can.editShow && props.episodeStatusId !== 9 && props.episodeStatusId !== 10\" :class=\"episodeStatusClass\" @click=\"openEpisodeStatuses()\">{{ episodeStatus }}</button>\n            <div v-if=\"!teamStore.can.editShow || props.episodeStatusId === 9 || props.episodeStatusId === 10\" class=\"cursor-not-allowed\" :class=\"episodeStatusClass\">{{ episodeStatus }}</div>\n        </div>\n        <div v-else>\n            <button :class=\"episodeStatusClass\" @click=\"openEpisodeStatuses()\">{{ episodeStatus }}</button>\n        </div>\n\n        <dialog :id=\"dialogId\" class=\"modal\">\n            <div class=\"modal-box h-fit bg-white text-black\">\n                <div v-if=\"props.episodeStatusId === 7\">\n                    <h3 class=\"text-center mb-2\">Episode is Published</h3>\n                    <p class=\"text-center mb-2\">\n                        Please contact the notTV Team if you need to change the episode status. This is because the episode is already promoted and distributed.\n                    </p>\n                    <p class=\"text-center\">\n                        Email <a class=\"text-blue-600 hover:text-blue-500\" :href=\"`mailto:hello@not.tv?subject=Need%20Help%20With%20Published%20Episode%20ID:%20${props.episodeUlid}&body=Episode%20ID:%20${props.episodeUlid}%0AEpisode%20Name:%20${props.episodeName}%0AShow%20Name:%20${props.showName}`\">hello@not.tv</a> for assistance\n                    </p>\n                    <p v-if=\"userStore.isAdmin\" class=\"text-center mt-2\">\n                        <button @click=\"openAdminChangeStatusModal()\" class=\"btn btn-wide my-2 text-white bg-orange-600 hover:bg-orange-500\">Change Status (admin only)</button>\n                    </p>\n                </div>\n                <div v-else>\n                    <div v-if=\"!setDateTime\">\n                        <h2 class=\"text-center mb-2\">Change the Episode Status:</h2>\n                        <div v-for=\"(status, key)  in episodeStatuses\" :key=\"key\" class=\"text-center\">\n                            <div class=\"btn btn-wide my-1\" @click=\"checkEpisodeStatus(episodeId, status.id)\">{{ status.name }}</div>\n                        </div>\n                    </div>\n                    <div v-if=\"setDateTime\">\n                        <h3 class=\"text-center mb-2\">Set the Scheduled Release Date and Time:</h3>\n                        <div class=\"text-center\">\n                            <DateTimePicker :date=\"convertedDate\" @date-time-selected=\"handleScheduledDateTime\" />\n                            <button class=\"btn my-2\" @click=\"changeEpisodeStatus(episodeId, 6)\">Schedule it!</button>\n                            <button class=\"btn ml-2 my-2\" @click=\"cancelScheduleEpisode\">Cancel</button>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n\n            <form method=\"dialog\" class=\"modal-backdrop\">\n                <button>close</button>\n            </form>\n        </dialog>\n\n        <dialog :id=\"`confirmPublishModal.${episodeId}`\" class=\"modal\">\n            <div class=\"modal-box\">\n                <h3 class=\"text-center font-bold text-lg\">Are you sure you want to publish?</h3>\n                <p class=\"text-center py-4\">This action cannot be undone. When you publish an episode it registers it on the blockchain and promotes it on the network.</p>\n                <div class=\"modal-action\">\n                    <form method=\"dialog\">\n                            <button @click=\"changeEpisodeStatus(episodeId, 7)\" class=\"btn text-white bg-green-600 hover:bg-green-500 mr-2\">Yes! Publish Now!</button>\n                            <button class=\"btn text-white bg-orange-600 hover:bg-orange-500\">No, cancel</button>\n                    </form>\n                </div>\n            </div>\n        </dialog>\n\n        <dialog :id=\"`adminChangeStatusModal.${episodeId}`\" class=\"modal\">\n            <div class=\"modal-box\">\n                <h3 class=\"text-center font-bold text-lg\">Change Status (Admin Only)</h3>\n                <p class=\"text-center py-4\">This is the Admin Override to change the episode status. If the episode is already published and you un-publish it the episode will be reverted to \"Review\" and become inaccessible to the public.</p>\n                <div class=\"w-full flex justify-center mt-2 pb-4\">\n                    <form method=\"dialog\">\n                        <button @click=\"changeEpisodeStatus(episodeId, 5)\" class=\"btn text-white bg-blue-600 hover:bg-blue-500 mr-2\">Un-publish</button>\n                        <button @click=\"changeEpisodeStatus(episodeId, 9)\" class=\"btn text-white bg-orange-600 hover:bg-orange-500 mr-2\">Freeze</button>\n                        <button @click=\"changeEpisodeStatus(episodeId, 10)\" class=\"btn text-white bg-red-600 hover:bg-red-500\">Restrict</button>\n                    </form>\n                </div>\n                <p class=\"text-center py-4\"><span class=\"font-semibold\">Please Note:</span> Un-publishing will have an adverse affect on the promotional links already used.</p>\n                <p class=\"text-center py-4\"><span class=\"italic\">Press ESC to close or <button @click=\"closeModals\" class=\"text-blue-600 hover:text-blue-500\">click here</button> to close.</span></p>\n            </div>\n        </dialog>\n\n    </div>\n\n</template>\n\n<script setup>\nimport { Inertia } from \"@inertiajs/inertia\"\nimport { computed, ref, watch, watchEffect } from 'vue'\nimport { format } from \"date-fns\"\nimport { useTeamStore } from \"@/Stores/TeamStore\"\nimport { useShowStore } from \"@/Stores/ShowStore\"\nimport { useUserStore } from \"@/Stores/UserStore\"\nimport DateTimePicker from \"@/Components/Global/Calendar/DateTimePicker\"\nimport DateTimePickerSelect from \"@/Components/Global/Calendar/DateTimePickerSelect\"\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport timezone from 'dayjs/plugin/timezone';\nimport utc from 'dayjs/plugin/utc'; // Required for timezone support\n\nconst teamStore = useTeamStore()\nconst showStore = useShowStore()\nconst userStore = useUserStore()\n\n// Extend Day.js with the plugins\ndayjs.extend(relativeTime);\ndayjs.extend(timezone);\ndayjs.extend(utc);\n\nlet props = defineProps({\n    episodeId: '',\n    episodeUlid: '',\n    episodeName: '',\n    episodeSlug: '',\n    episodeStatus: '',\n    episodeStatusId: '',\n    episodeStatuses: Object,\n    showName: '',\n    showSlug: '',\n    scheduledDateTime: String,\n})\n\n// Ref for reactive timezone\nconst userTimezone = ref(userStore.timezone);\n\nconst convertedDate = ref('');\nwatchEffect(() => {\n  if (userStore.timezone) {\n    convertedDate.value = dayjs.utc(props.scheduledDateTime).tz(userStore.timezone).format();\n  }\n})\n\nconst convertTimeToUserTimezone = (date, timezone) => {\n  // Convert the date to the provided timezone using Day.js\n  return dayjs.tz(date, timezone);\n};\n\nconst errorMessage = ref('');\nconst dialogId = props.episodeId+'episodeStatuses'\n\nlet scheduledDateTime = ref(null)\nlet setDateTime = ref(false)\n\nfunction openEpisodeStatuses() {\n    document.getElementById(dialogId).showModal()\n}\n\n// function checkEpisodeStatus(episodeId, newStatusId) {\n//     setDateTime = true;\n//     if (newStatusId === 6 && scheduledDateTime === null) {\n//         // open a model to set scheduled dateTime\n//\n//         Inertia.reload()\n//     }\n// }\n\nconst checkEpisodeStatus = (episodeId, statusId) => {\n    if (statusId === 6) {\n        // update the modal to set scheduled dateTime\n        setDateTime.value = !setDateTime.value;\n    } else if (statusId === 7) {\n        // open modal to confirm they want to publish.\n        document.getElementById('confirmPublishModal.' + props.episodeId).showModal()\n    }\n    else if (statusId !== 6) {\n        changeEpisodeStatus(episodeId, statusId)\n    }\n};\n\nconst cancelScheduleEpisode = () => {\n    setDateTime.value = !setDateTime.value;\n};\n\nconst openAdminChangeStatusModal = () => {\n    document.getElementById('adminChangeStatusModal.'+props.episodeId).showModal()\n}\n\nconst handleScheduledDateTime = (newDate) => {\n    selectedScheduledDateTime.value = newDate;\n    scheduledDateTime = newDate.date;\n    console.log(scheduledDateTime)\n    updateScheduledDateTime()\n    console.log(formattedScheduledDateTime)\n}\n\nconsole.log('we already have the user timezone: ' + userStore.timezone)\n\n// const getUserTimezone = () => {\n//     // Use the Intl object to get the user's timezone\n//     userTimezone.value = Intl.DateTimeFormat().resolvedOptions().timeZone;\n// };\n\nlet selectedScheduledDateTime = ref('');\nlet formattedScheduledDateTime = ref(''); // This will display the formatted date and time\n\nconst convertToTimeZone = (dateTime, userTimezone) => {\n    return format(dateTime, 'yyyy-MM-dd HH:mm:ssXXX', { userTimezone });\n};\n\nconst updateScheduledDateTime = () => {\n    if (selectedScheduledDateTime.value) {\n        // Convert the selected date and time to the desired time zone\n        // const timeZone = 'UTC'; // Change this to your desired time zone\n        formattedScheduledDateTime.value = convertToTimeZone(\n            new Date(scheduledDateTime),\n            userTimezone\n        );\n    } else {\n        formattedScheduledDateTime.value = '';\n    }\n};\n\nasync function changeEpisodeStatus(episodeId, statusId) {\n    try {\n        const response = await axios.post('/shows/episode/changeEpisodeStatus', {\n            episode_id: episodeId,\n            new_status_id: statusId,\n            scheduled_release_dateTime: formattedScheduledDateTime.value\n        });\n        // Handle success response as needed\n        // ...\n        // Check if the response contains an \"alert\" message\n        if (response.data.alert) {\n            // Display the alert message\n            alert(response.data.alert);\n        }\n    } catch (error) {\n        if (error.response) {\n            showStore.errorMessage = error.response.data.error\n        } else {\n            // console.error(error);\n        }\n    }\n    // return response\n    document.getElementById(dialogId).close()\n    Inertia.reload()\n}\n\nconst closeModals = () => {\n    document.getElementById(dialogId).close()\n    document.getElementById('confirmPublishModal.'+props.episodeId).close()\n    document.getElementById('adminChangeStatusModal.'+props.episodeId).close()\n    Inertia.reload()\n}\n\nconst episodeStatusClass = computed(() => ({\n    'btn m-1 w-fit font-semibold text-xl text-orange-400': props.episodeStatusId===1,\n    'btn m-1 w-fit text-xl text-green-400': props.episodeStatusId===2,\n    'btn m-1 w-fit font-semibold text-xl text-green-600': props.episodeStatusId===3,\n    'btn m-1 w-fit font-bold text-xl text-green-600': props.episodeStatusId===4,\n    'btn m-1 w-fit font-semibold text-xl text-purple-700': props.episodeStatusId===5,\n    'btn m-1 w-fit font-italic text-xl text-pink-500': props.episodeStatusId===6,\n    'btn m-1 w-fit font-bold text-xl light:text-black dark:text-white': props.episodeStatusId===7,\n    'btn m-1 w-fit font-medium text-xl text-gray-500': props.episodeStatusId===8,\n    'btn m-1 w-fit font-semibold font-italic text-xl text-red-700': props.episodeStatusId===9,\n    'btn m-1 w-fit font-bold text-xl text-red-800': props.episodeStatusId===10,\n}))\n\n</script>\n","import script from \"./ManageEpisodeEditNote.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ManageEpisodeEditNote.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n    <form @submit.prevent=\"\">\n      <input\n          class=\"bg-white text-black p-1 w-3/4\"\n          placeholder=\"Write a note...\"\n          type=\"text\"\n          ref=\"episodeNote\"\n          v-model=\"form.note\"\n          @keyup.enter=\"saveNote\"\n          @focusout=\"closeNote\">\n    </form>\n  </div>\n\n</template>\n\n<script setup>\nimport { onMounted, ref } from \"vue\"\nimport note from \"lodash/seq\"\nimport { useShowStore } from \"@/Stores/ShowStore\"\nimport { useForm } from \"@inertiajs/inertia-vue3\"\n\nconst showStore = useShowStore()\n\nshowStore.saveNoteProcessing = false\n\nlet props = defineProps({\n  episode: Object,\n});\n\nlet form = useForm({\n  note: '',\n});\nform.note = props.episode.notes;\nconst emit = defineEmits(['saveNoteProcessing'])\nconst episodeNote = ref(null);\n\n// Focus the input element when the component is mounted\nonMounted(() => {\n  episodeNote.value.focus();\n});\n\nfunction closeNote() {\n  if (form.note === props.episode.notes) {\n    showStore.noteEdit = 0;\n  }\n  saveNote()\n}\n\nfunction saveNote() {\n\n  // axios.post('/shows/notes', {\n  //     notes: form.note,\n  //     showId: props.show.id,\n  // })\n  //     teamStore.noteEdit = 0;\n  //     updateNote++;\n  //     props.show.note = 'update';\n\n// Why does this not work? We are not\n// getting a response.\n//\n  showStore.saveNoteProcessing = true;\n  showStore.note = form.note;\n  emit('saveNoteProcessing');\n  axios.post('/shows/episode/notes', {\n    notes: form.note,\n    episodeId: props.episode.id,\n  }).then(response => {\n    showStore.noteEdit = 0;\n    console.log('note saved');\n    showStore.saveNoteProcessing = false;\n  })\n      .catch(error => {\n        console.log(error);\n      })\n}\n\n</script>\n","import script from \"./ManageShowEpisode.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ManageShowEpisode.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <tr v-if=\"showStore.episodeIsBeingDeleted !== episode.id\" class=\"bg-yellow-100\">\n    <td class=\"px-6 py-4 text-sm\">\n\n      <!-- If there is no episode number set by the user\n             the episode number defaults to the episode id           -->\n      <div v-if=\"!episode.episodeNumber\">{{ episode.id }}</div>\n      <div v-if=\"episode.episodeNumber\">{{ episode.episodeNumber }}</div>\n\n    </td>\n    <td class=\"text-xl font-medium align-center my-auto justify-center gap-x-4 px-6 py-4 uppercase h-full\">\n      <!-- Example image and link setup, uncomment or adjust as needed -->\n<!--       <img :src=\"`/storage/images/${episode.poster}`\" alt=\"\" class=\"rounded-xl w-10\">-->\n      <div @click=\"Inertia.visit(`/shows/${showSlug}/episode/${episode.slug}/manage`)\" class=\"flex flex-row flex-wrap gap-x-2 gap-y-2 hover:cursor-pointer\">\n        <SingleImage :image=\"episode.image\" :alt=\"episode.name\" :class=\"`rounded-xl w-10`\" />\n        <span class=\"hover:text-blue-600 font-semibold dark:text-blue-400 dark:hover:text-blue-200 text-center\">\n          {{ episode.name }}\n        </span>\n      </div>\n    </td>\n\n\n    <!--        <td class=\"text-gray-500 px-6 py-4 text-sm\">-->\n    <!--            {{episode.notes}}-->\n    <!--        </td>-->\n    <td class=\"light:text-gray-600 dark:text-gray-100 px-6 py-4 text-sm w-full min-w-[16rem]\">\n      <span v-if=\"!episode.notes\" v-show=\"showStore.noteEdit !== props.episode.id\" class=\"italic\" @click=\"editNote\">Click here to add/edit a note.</span>\n      <span v-if=\"episode.notes\" v-show=\"showStore.noteEdit !== props.episode.id\" :key=\"componentKey\" @click=\"editNote\">{{\n          episode.notes\n        }}</span>\n      <div v-if=\"showStore.noteEdit === props.episode.id\">\n\n        <EpisodeNoteEdit :episode=\"props.episode\" v-on:saveNoteProcessing=\"reloadNote\"/>\n        <div v-if=\"showStore.saveNoteProcessing\">Saving...</div>\n      </div>\n\n    </td>\n    <td class=\"px-6 py-4 text-right\">\n      <div class=\"dropdown dropdown-left\">\n        <!--                <button tabindex=\"0\" :class=\"episodeStatus\" @click=\"openEpisodeStatuses\">{{ episode.episodeStatus }}</button>-->\n        <ShowEpisodeStatuses :episodeStatus=\"props.episode.episodeStatus\"\n                             :episodeStatusId=\"props.episode.episodeStatusId\"\n                             :episodeStatuses=\"props.episodeStatuses\"\n                             :episodeId=\"props.episode.id\"\n                             :episodeUlid=\"props.episode.ulid\"\n                             :episodeName=\"props.episode.name\"\n                             :episodeSlug=\"props.episode.slug\"\n                             :showSlug=\"props.showSlug\"\n                             :showName=\"props.showName\"\n                             :scheduledDateTime=\"props.episode.scheduledReleaseDateTime\"/>\n      </div>\n      <div v-if=\"episode.episodeStatusId === 6\">\n        Scheduled for: <br />\n        {{ scheduledReleaseDateTime }}\n      </div>\n      <div v-if=\"episode.episodeStatusId === 7\">\n        Released on: <br/>\n        {{ releaseDateTime }}\n      </div>\n\n    </td>\n    <td>\n      <div class=\"flex flex-row justify-start mr-2\">\n        <div>\n          <button\n              v-if=\"teamStore.can.editShow\"\n              @click=\"appSettingStore.btnRedirect(`/shows/${showSlug}/episode/${episode.slug}/edit`)\"\n              class=\"px-4 py-2 text-white font-semibold bg-blue-500 hover:bg-blue-600 rounded-lg mr-2\"\n          >Edit\n          </button>\n        </div>\n        <button\n            v-if=\"teamStore.can.manageShow && !props.episode.isPublished\"\n            @click=\"deleteShowEpisode\"\n            class=\"px-4 py-2 text-white font-semibold bg-red-500 hover:bg-red-600 rounded-lg\"\n        >\n          <font-awesome-icon icon=\"fa-trash-can\"/>\n        </button>\n      </div>\n    </td>\n  </tr>\n  <tr v-else>\n    <td class=\"w-full text-center\">\n      <span class=\"loading loading-infinity loading-lg\"></span><span class=\"ml-3\">The episode is being deleted...</span>\n    </td>\n  </tr>\n</template>\n\n<script setup>\nimport { Inertia } from \"@inertiajs/inertia\"\nimport { useForm } from \"@inertiajs/inertia-vue3\"\nimport { computed, ref } from \"vue\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useTeamStore } from \"@/Stores/TeamStore\"\nimport { useShowStore } from \"@/Stores/ShowStore\"\nimport { useUserStore } from \"@/Stores/UserStore\"\nimport { FontAwesomeIcon } from \"@fortawesome/vue-fontawesome\"\nimport ShowEpisodeStatuses from \"@/Components/Pages/Shows/Elements/ManageShowEpisodesStatuses\"\nimport EpisodeNoteEdit from \"@/Components/Pages/Shows/Elements/ManageEpisodeEditNote\"\nimport SingleImage from '@/Components/Global/Multimedia/SingleImage.vue'\n\nconst appSettingStore = useAppSettingStore()\nconst teamStore = useTeamStore()\nconst showStore = useShowStore()\nconst userStore = useUserStore()\n\nlet props = defineProps({\n  episode: Object,\n  episodeStatuses: Object,\n  showSlug: String,\n  showName: String,\n});\n\nlet showEpisodeStatuses = ref(false)\n\nconst releaseDateTime = userStore.formatDateInUserTimezone(props.episode.releaseDateTime, 'ddd DD MMM YYYY')\nconst scheduledReleaseDateTime = userStore.formatDateInUserTimezone(props.episode.scheduledReleaseDateTime, 'ddd DD MMM YYYY, hh:mm A' + ' ' + userStore.timezoneAbbreviation)\n\nshowStore.noteEdit = 0\nconst componentKey = ref(0);\n\nfunction reloadNote() {\n  props.episode.notes = showStore.note;\n  componentKey.value += 1;\n}\n\nlet form = useForm({\n  note: '',\n});\n\nfunction editNote() {\n  showStore.noteEdit = props.episode.id\n}\n\nfunction openEpisodeStatuses() {\n  document.getElementById('episodeStatuses').showModal()\n}\n\nconst deleteShowEpisode = async () => {\n\n  // episode is being deleted\n\n\n  const confirmation = confirm('Are you sure you want to delete this show episode?');\n\n  if (confirmation) {\n    try {\n      showStore.episodeIsBeingDeleted = props.episode.id;\n      // Make the DELETE request to delete the show episode\n      await axios.delete(`/shows/${props.showSlug}/episode/${props.episode.slug}`)\n          .then((response) => {\n            // Handle the response\n            if (response.status === 200) {\n              // Display the JSON message from the response\n              showStore.errorMessage = response.data.message\n              // alert(response.data.message);\n              // Update the UI\n              Inertia.reload()\n              showStore.episodeIsBeingDeleted = 0;\n              // For example, you can use Inertia's visit method to navigate to a new page:\n              // await Inertia.visit(route('some.route'));\n            } else {\n              // Handle other response statuses if needed\n              showStore.errorMessage = response.statusText\n              console.error('Delete request failed:', response.statusText);\n              showStore.episodeIsBeingDeleted = 0;\n              Inertia.reload()\n            }\n          })\n          .catch((error) => {\n            console.error('Error deleting show episode:', error);\n            showStore.errorMessage = error\n            showStore.episodeIsBeingDeleted = 0;\n            Inertia.reload()\n          });\n\n\n      // await Inertia.delete(route('shows.showEpisodes.destroy', [props.showSlug, props.episode.slug]));\n      console.log(\"it should've been deleted\");\n      // Redirect to a different page or update the UI as needed\n\n      console.log('inertia reload');\n      // For example, you can use Inertia's visit method to navigate to a new page:\n      // await Inertia.visit(route('some.route'));\n    } catch (error) {\n      console.error('Error deleting show episode:', error);\n    }\n  }\n};\n\n\n</script>\n","import script from \"./ManageShowEpisodesList.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ManageShowEpisodesList.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n\n  <div>\n    <button\n        v-if=\"teamStore.can.createEpisode\"\n        @click=\"appSettingStore.btnRedirect(`/shows/${show.slug}/episode/create`)\"\n        class=\"ml-6 my-4 px-4 py-2 text-white font-semibold bg-green-500 hover:bg-green-600 rounded-lg disabled:bg-gray-400\"\n\n    >Create Episode\n    </button>\n  </div>\n  <table class=\"min-w-full divide-y divide-gray-200\">\n    <thead class=\"divide-y divide-gray-200\">\n    <!--                                <tr v-for=\"episode in episodes.data\" :key=\"episode.id\">-->\n    <tr>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n        Ep.#\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap w-1/3\">\n        <div class=\"flex items-start\">\n          <div class=\"text-sm font-medium\">\n            <!--                                                    <Link :href=\"`/admin/users/${episode.id}`\" class=\"text-indigo-600 hover:text-indigo-900\">{{ episode.name }}</Link>-->\n            Episode Name\n          </div>\n        </div>\n      </td>\n\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n        Episode Notes\n      </td>\n\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n        Episode Notes\n      </td>\n\n      <td>\n        <!--edit button goes in this column-->\n      </td>\n    </tr>\n    </thead>\n\n    <tbody class=\"divide-y divide-gray-200\">\n\n    <ShowEpisode v-for=\"episode in props.episodes.data\"\n                 :episode=\"episode\"\n                 :showSlug=\"props.show.slug\"\n                 :showName=\"props.show.name\"\n                 :episodeStatuses=\"props.episodeStatuses\"/>\n\n    </tbody>\n  </table>\n\n  <!-- Paginator -->\n  <Pagination :data=\"episodes\" class=\"\"/>\n\n</template>\n\n<script setup>\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useTeamStore } from \"@/Stores/TeamStore\"\nimport ShowEpisode from \"@/Components/Pages/Shows/Elements/ManageShowEpisode\"\nimport Pagination from \"@/Components/Global/Paginators/Pagination\"\n\nconst appSettingStore = useAppSettingStore()\nconst teamStore = useTeamStore()\n\nlet props = defineProps({\n  show: Object,\n  episodes: Object,\n  episodeStatuses: Object,\n  filters: Object,\n  can: Object,\n});\n\n// Access flashed messages from Inertia's props\n// const { success, error } = page.props;\n\n// Create refs to hold success and error messages\n// const successMessage = ref(success);\n// const errorMessage = ref(error);\n\n</script>\n","<template>\n\n    <table class=\"min-w-full divide-y divide-gray-200\">\n        <thead class=\"divide-y divide-gray-200\">\n        <!--                                <tr v-for=\"episode in episodes.data\" :key=\"episode.id\">-->\n        <tr>\n            <td class=\"px-6 py-4 whitespace-nowrap\">\n                <div class=\"flex items-center\">\n                    <div>\n                        <div class=\"text-sm font-medium pl-14\">\n                            <!--                                                    <Link :href=\"`/admin/users/${episode.id}`\" class=\"text-indigo-600 hover:text-indigo-900\">{{ episode.name }}</Link>-->\n                            Name\n                        </div>\n                    </div>\n                </div>\n            </td>\n\n            <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n                Role\n            </td>\n\n            <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n                Completed Assignments\n            </td>\n\n            <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n                Total Credits\n            </td>\n\n            <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-right\">\n                Status\n            </td>\n        </tr>\n        </thead>\n        <tbody class=\"bg-white divide-y divide-gray-200\">\n        <!--  INSERT CREDITS HERE  -->\n        </tbody>\n\n    </table>\n\n</template>\n\n<script setup>\n\n\n</script>\n","import { render } from \"./ManageShowCreditsList.vue?vue&type=template&id=65646f00\"\nconst script = {}\n\nimport exportComponent from \"../../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n\n  <table class=\"min-w-full divide-y divide-gray-200\">\n    <thead class=\"divide-y divide-gray-200\">\n    <!--                                <tr v-for=\"episode in episodes.data\" :key=\"episode.id\">-->\n    <tr>\n      <td class=\"px-6 py-4 whitespace-nowrap\">\n        <div class=\"flex items-center\">\n          <div>\n            <div class=\"text-sm font-semibold pl-14\">\n              <!--                                                    <Link :href=\"`/admin/users/${episode.id}`\" class=\"text-indigo-600 hover:text-indigo-900\">{{ episode.name }}</Link>-->\n              Date\n            </div>\n          </div>\n        </div>\n      </td>\n\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm font-semibold\">\n        Start Time\n      </td>\n\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm font-semibold\">\n        End Time\n      </td>\n\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm font-semibold\">\n        Duration\n      </td>\n\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm font-semibold text-right\">\n        Expires in\n      </td>\n\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm font-semibold text-right\">\n\n      </td>\n    </tr>\n    </thead>\n    <tbody class=\"bg-white divide-y divide-gray-200\">\n    <tr v-for=\"recording in showRecordings.data\" :key=\"recording.id\"\n        @mouseover=\"state.hoveredRow = recording.id\"\n        @mouseleave=\"state.hoveredRow = null\"\n        @click=\"openVideo(recording)\"\n        :class=\"rowClass(recording.id)\"\n    >\n      <td class=\"px-6 py-4 whitespace-nowrap\">\n        <div>{{ userStore.formatDateInUserTimezone(recording.start_time) }}</div>\n        <div v-if=\"recording.comment\" class=\"text-xs uppercase text-orange-700 font-semibold break-words\">\n          <span :class=\"{ 'text-indigo-600': recording.comment !== 'automated recording' }\">{{\n              recording.comment\n            }}</span>\n        </div>\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap\">\n        {{ userStore.formatTimeFromDateInUserTimezone(recording.start_time) }}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap\">\n        {{ userStore.formatTimeFromDateInUserTimezone(recording.end_time) }}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap\">\n        {{ formatDuration(recording.total_milliseconds_recorded) }}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap\">\n        <!-- Placeholder for expiration logic -->\n\n      </td>\n      <!-- We are not making recordings shareable at this time. -->\n      <td class=\" px-6 py-4 whitespace-nowrap text-right text-sm font-medium space-x-1\">\n        <button @click.stop=\"shareRecording(recording.shareUrl)\"\n                class=\"hidden btn btn-xs bg-orange-200 hover:bg-orange-300 text-black\">\n          <font-awesome-icon icon=\"fa-share\" class=\"\"/>\n          Share\n        </button>\n        <button @click.stop=\"confirmAddToEpisode\"\n                class=\"btn btn-xs\">Add To Episode\n        </button>\n        <button @click.stop=\"confirmDownload(recording)\"\n                class=\"btn btn-xs btn-info\">Download\n        </button>\n        <div @click.stop=\"confirmSaveToPremium\"\n                class=\"btn btn-xs\">Save to Premium Storage\n        </div>\n      </td>\n    </tr>\n    </tbody>\n  </table>\n\n  <div class=\"flex flex-row flex-wrap w-full justify-center\">\n    <Pagination :data=\"showRecordings\" class=\"\" />\n  </div>\n\n  <dialog id=\"confirmRecordingPlaybackModal\" class=\"modal\">\n    <div class=\"modal-box w-full items-center text-center\">\n      <form method=\"dialog\">\n        <button class=\"btn btn-sm btn-circle btn-ghost absolute right-2 top-2\">✕</button>\n      </form>\n      <h3 class=\"font-bold text-lg\"></h3>\n      <p class=\"py-4 text-xl mt-4\">Would you like to play the recording<br/> from\n        <span class=\"font-semibold\">{{ selectedRecordingDate }}</span>?</p>\n      <p class=\"my-2 text-left\" v-if=\"selectedRecording && selectedRecording.path\"><span\n          class=\"font-semibold\">Path: </span>{{ selectedRecording.path }}</p>\n      <p class=\"my-2 text-left\" v-if=\"selectedRecording && selectedRecording.comment\">\n        <span class=\"font-semibold\">Comment: </span>\n        <span>{{ selectedRecording.comment }}</span>\n      </p>\n      <button class=\"mt-4 btn\" @click=\"play\">Play</button>\n    </div>\n\n    <form method=\"dialog\" class=\"modal-backdrop\">\n      <button>close</button>\n    </form>\n  </dialog>\n\n  <transition name=\"fade\">\n    <div v-if=\"showCopyMessage\" class=\"copy-message\">\n      {{ copyMessage }}\n    </div>\n  </transition>\n\n  <dialog id=\"confirmAddToEpisodeModal\" class=\"modal\">\n    <div class=\"modal-box text-center\">\n      <h3 class=\"font-bold text-lg pt-8\">Add Recording To Episode</h3>\n      <p class=\"py-4\">We are working on this feature!</p>\n      <div class=\"modal-action\">\n        <form method=\"dialog\">\n          <!-- if there is a button in form, it will close the modal -->\n          <button class=\"btn\">Okay</button>\n        </form>\n      </div>\n    </div>\n  </dialog>\n\n  <dialog id=\"confirmDownloadModal\" class=\"modal\">\n    <div class=\"modal-box text-center\">\n      <h3 class=\"font-bold text-lg pt-8\">Confirm Download</h3>\n      <p class=\"py-4\">Are you sure you want to download the recording?</p>\n      <div class=\"modal-action\">\n        <form method=\"dialog\" class=\"w-full flex justify-center\">\n          <!-- if there is a button in form, it will close the modal -->\n          <button @click=\"beginDownload\" class=\"btn btn-info w-20\">Yes</button>\n        </form>\n      </div>\n    </div>\n  </dialog>\n\n  <dialog id=\"downloadStarted\" class=\"modal\">\n    <div class=\"modal-box text-center\">\n      <h3 class=\"font-bold text-lg pt-8\">Download Started</h3>\n      <p class=\"py-4\">Your recording is now downloading!</p>\n      <div class=\"modal-action\">\n        <form method=\"dialog\" class=\"w-full flex justify-center\">\n          <!-- if there is a button in form, it will close the modal -->\n          <button class=\"btn\">Okay</button>\n        </form>\n      </div>\n    </div>\n  </dialog>\n\n  <dialog id=\"confirmSaveToPremiumModal\" class=\"modal\">\n    <div class=\"modal-box text-center\">\n      <h3 class=\"font-bold text-lg pt-8\">Save To Premium Storage</h3>\n      <p class=\"py-4\">We are working on this feature!</p>\n      <div class=\"modal-action\">\n        <form method=\"dialog\">\n          <!-- if there is a button in form, it will close the modal -->\n          <button class=\"btn\">Okay</button>\n        </form>\n      </div>\n    </div>\n  </dialog>\n\n\n</template>\n\n<script setup>\nimport { useVideoPlayerStore } from '@/Stores/VideoPlayerStore'\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\nimport { useNowPlayingStore } from '@/Stores/NowPlayingStore'\nimport { useUserStore } from '@/Stores/UserStore'\nimport { computed, reactive, ref } from 'vue'\nimport { useClipboard } from '@vueuse/core'\nimport Pagination from '@/Components/Global/Paginators/Pagination.vue'\n\nconst videoPlayerStore = useVideoPlayerStore()\nconst appSettingStore = useAppSettingStore()\nconst nowPlayingStore = useNowPlayingStore()\nconst userStore = useUserStore()\n\nconst shareClip = useClipboard()\n\nconst props = defineProps({\n  showName: String,\n  showSlug: String,\n  showImage: Object,\n  showRecordings: Object,\n})\n\nconst formatDuration = (totalMilliseconds) => {\n  let seconds = Math.floor(totalMilliseconds / 1000)\n  let minutes = Math.floor(seconds / 60)\n  const hours = Math.floor(minutes / 60)\n\n  seconds = seconds % 60\n  minutes = minutes % 60\n\n  // Padding numbers to always show two digits\n  const paddedHours = hours.toString().padStart(2, '0')\n  const paddedMinutes = minutes.toString().padStart(2, '0')\n  const paddedSeconds = seconds.toString().padStart(2, '0')\n\n  return `${paddedHours}h ${paddedMinutes}m ${paddedSeconds}s`\n}\n\nconst state = reactive({\n  hoveredRow: null,\n})\n\nconst selectedRecording = ref(null)\nconst selectedRecordingDate = ref('')\nconst selectedRecordingStreamName = ref('')\nconst selectedRecordingId = ref('')\nconst nowPlayingRecording = ref(null)\nconst nowPlayingRecordingId = ref('')\nconst nowPlayingStreamName = ref('')\n\n// Computed property returning a function to determine row classes\nconst rowClass = computed(() => (recordingId) => ({\n  'hover:bg-blue-100 cursor-pointer': state.hoveredRow === recordingId,\n  'bg-green-100': nowPlayingRecordingId.value === recordingId,\n}))\n\nconst openVideo = (recording) => {\n  document.getElementById('confirmRecordingPlaybackModal').showModal()\n  selectedRecording.value = recording\n  console.log(recording)\n  console.log(selectedRecording.value)\n  selectedRecordingStreamName.value = recording.streamName\n  selectedRecordingId.value = recording.id\n  selectedRecordingDate.value = userStore.formatDateInUserTimezone(recording.start_time)\n  console.log('Opening video for stream:', recording.streamName)\n  // Implement the video opening logic here\n}\n\nconst source = ref({\n  mediaType: '',\n  recording: {\n    source: '',\n    sourceType: '',\n  },\n})\nconsole.log('slug: ' + props.showSlug)\nconst play = () => {\n  source.value.mediaType = 'recording'\n  source.value.recording = {\n    source: selectedRecordingStreamName,\n    sourceType: 'video/mp4',\n  }\n  console.log('recording source: ' + selectedRecordingStreamName.value)\n  try {\n    videoPlayerStore.loadNewVideo(source.value)\n    nowPlayingRecording.value = selectedRecording.value\n    nowPlayingRecordingId.value = selectedRecordingId.value\n    nowPlayingStreamName.value = selectedRecordingStreamName.value\n    appSettingStore.toggleOttInfo()\n    console.log('now playing ID: ' + nowPlayingRecordingId.value)\n    const nowPlayingDate = userStore.formatDateInUserTimezone(nowPlayingRecording.value.start_time)\n    const nowPlayingStartTime = userStore.formatTimeFromDateInUserTimezone(nowPlayingRecording.value.start_time)\n    const secondaryName = nowPlayingDate + ' ' + nowPlayingStartTime + ' Recording'\n\n    // Set common details specific to this video play event for nowPlayingStore\n    const mediaType = source.value.mediaType\n    const commonDetails = {\n      primaryName: props.showName, //showName\n      secondaryName: secondaryName, //date startTime Recording\n      description: nowPlayingRecording?.value?.comment ?? null, // Comment\n      primaryUrl: 'shows/' + props.showSlug,\n      secondaryUrl: null,\n      channelName: null,\n      image: props?.showImage,\n      team: null,\n      creative_commons: null,\n    }\n    const videoDetails = {\n      // Assuming video details are structured correctly in your episode data\n      video_url: '',\n      type: source.value.recording.sourceType, // MIME type for video.js\n    }\n\n    // Update the currently playing media in nowPlayingStore with the latest details\n    nowPlayingStore.setActiveMedia(mediaType, {\n      ...commonDetails,\n      videoDetails, // Spread in the specific details for internal or external video\n    })\n\n    // Close the modal upon successful video playback\n    document.getElementById('confirmRecordingPlaybackModal').close()\n  } catch (error) {\n    console.error('Error loading new video:', error)\n    // Handle error appropriately, possibly with user feedback\n  }\n\n}\n\nconst shareRecording = (shareUrl) => {\n  shareClip.copy(shareUrl)\n  copyMessage.value = 'Video share URL copied!'\n  showCopyMessage.value = true\n  setTimeout(() => {\n    showCopyMessage.value = false\n  }, 1000) // Hide after 3 seconds\n}\n\nconst showCopyMessage = ref(false)\nconst copyMessage = ref('')\n\nconst confirmAddToEpisode = () => {\n  document.getElementById('confirmAddToEpisodeModal').showModal()\n}\n\nconst confirmDownload = (recording) => {\n  selectedRecording.value = recording\n  // Confirm the download.\n  document.getElementById('confirmDownloadModal').showModal()\n}\n\nconst beginDownload = () => {\n  // Once confirmed, execute the download.\n\n  // The URL where your files are hosted\n  const url = selectedRecording.value.download.url\n\n  console.log('download url: ' + url)\n  // Create an anchor (<a>) element\n  const downloadLink = document.createElement('a')\n  downloadLink.href = url\n\n  // Optionally, if you want the download to have a specific filename:\n  // downloadLink.download = 'YourCustomFileNameHere';\n\n  // This is necessary for the download to work in Firefox when triggered programmatically\n  document.body.appendChild(downloadLink)\n\n  downloadLink.click()\n\n  // Clean up by removing the element after triggering the download\n  document.body.removeChild(downloadLink)\n  selectedRecording.value = null\n  document.getElementById('downloadStarted').showModal()\n}\n\nconst confirmSaveToPremium = () => {\n  document.getElementById('confirmSaveToPremiumModal').showModal()\n}\n\n\n// function triggerDownload(url, filename = \"\") {\n//   const a = document.createElement('a');\n//   a.href = url;\n//   a.download = filename; // You can specify a filename here, or leave it empty\n//   document.body.appendChild(a);\n//   a.click();\n//   document.body.removeChild(a);\n// }\n\n</script>\n<style>\n.copy-message {\n  position: fixed;\n  bottom: 20%;\n  left: 50%;\n  transform: translateX(-50%);\n  background-color: rgba(0, 0, 0, 0.75);\n  color: white;\n  padding: 20px;\n  border-radius: 10px;\n  font-size: 1.5rem;\n  z-index: 100;\n  transition: opacity 0.5s ease;\n}\n\n.fade-enter-active, .fade-leave-active {\n  transition: opacity 0.5s ease;\n}\n\n.fade-enter-from, .fade-leave-to {\n  opacity: 0;\n}\n</style>\n","import api from \"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-9.use[1]!../../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-9.use[2]!../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./ShowRecordings.vue?vue&type=style&index=0&id=4af0312e&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./ShowRecordings.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ShowRecordings.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ShowRecordings.vue?vue&type=style&index=0&id=4af0312e&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n\n  <Head :title=\"`Manage Show: ${props.show.name}`\"/>\n\n  <div id=\"topDiv\" class=\"place-self-center flex flex-col\">\n    <div class=\"min-h-screen bg-white text-black dark:bg-gray-900 dark:text-gray-50 rounded px-5\">\n\n      <Message v-if=\"appSettingStore.showFlashMessage\" :flash=\"$page.props.flash\"/>\n      <div class=\"alert alert-error mt-4 mx-3\"\n           v-if=\"showStore.errorMessage\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n        </svg>\n        <span>{{ showStore.errorMessage }}</span>\n        <button class=\"text-xs ml-12\" @click=\"showStore.errorMessage = ''\"> Close</button>\n      </div>\n\n      <header class=\"bg-gradient-to-r from-blue-100 via-white to-transparent p-4 text-black font-bold rounded-lg\">\n        <!--            <header class=\"wave-background p-4 text-black font-bold rounded-lg\">-->\n\n        <div class=\"flex justify-between mb-3 pt-6\">\n          <div class=\"font-bold mb-4 text-black align-bottom text-lg\">MANAGE SHOW</div>\n\n          <div class=\"flex flex-col\">\n            <div class=\"flex flex-row w-full justify-end mb-2\">\n              <button\n                  @click=\"appSettingStore.btnRedirect(`/teams/${team.slug}/manage`)\"\n                  class=\"px-4 py-2 mr-2 mb-2 h-fit text-white font-semibold bg-orange-500 hover:bg-orange-600 rounded-lg\"\n              >Back to<br/>\n                Team Page\n              </button>\n            </div>\n            <div class=\"flex flex-wrap-reverse justify-end\">\n              <button\n                  v-if=\"teamStore.can.editShow\"\n                  @click=\"goLive\"\n                  class=\"px-4 py-2 mr-2 mb-2 h-fit text-white font-semibold bg-red-500 hover:bg-red-600 rounded-lg\"\n              >Go Live\n              </button>\n              <button\n                  v-if=\"teamStore.can.editShow\"\n                  @click=\"appSettingStore.btnRedirect(`/shows/${show.slug}/edit`)\"\n                  class=\"px-4 py-2 mb-2 h-fit text-white font-semibold bg-blue-500 hover:bg-blue-600 rounded-lg\"\n              >Edit Show\n              </button>\n\n              <DashboardButton class=\"mb-2\"/>\n\n            </div>\n          </div>\n\n        </div>\n\n        <ShowHeader\n            :show=\"props.show\"\n            :team=\"props.team\"\n            :can=\"can\"\n        />\n\n        <div class=\"flex justify-end mt-6\">\n\n\n        </div>\n      </header>\n\n\n      <!--            <div class=\"my-6 ml-10 w-3/4\">-->\n      <!--                {{ teamStore.activeShow.description }}-->\n      <!--            </div>-->\n\n      <div class=\"my-6 text-gray-100\">\n        <span class=\"uppercase text-xs font-semibold text-black\">SHOW NOTES: </span>\n        <span class=\"text-black light:text-black dark:text-white\">{{ props.show.notes }}</span>\n      </div>\n\n\n      <div class=\"flex flex-col\">\n        <div class=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\n          <div class=\"py-2 align-middle inline-block w-full sm:px-6 lg:px-8 space-y-4\">\n            <!--          <div class=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">-->\n            <!--            <div class=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">-->\n\n            <!-- This code doesn't work .. it's meant to become a header button that collapses/expands each section -->\n            <!--                            <button class=\"bg-orange-300 p-2 font-bold w-full text-left\" type=\"button\"-->\n            <!--                                    data-bs-toggle=\"collapse\" data-bs-target=\"#collapseExample\" aria-expanded=\"true\"-->\n            <!--                                    aria-controls=\"collapseExample\">Episodes-->\n            <!--                            </button>-->\n\n            <!--                            <div class=\"collapse\" id=\"collapseExample\">-->\n            <!--              <div>-->\n            <!--                <div class=\"bg-blue-100 p-2 font-bold text-black\">Episodes</div>-->\n            <div @click=\"toggleComponent('showEpisodes')\"\n                 :class=\"{'rounded-t-lg': showStore.openComponent === 'showEpisodes', 'rounded-lg': showStore.openComponent !== 'showEpisodes'}\"\n                 class=\"accordion-header p-2 font-bold transition duration-300 ease-in-out transform focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 overflow-hidden shadow-lg bg-blue-100 hover:bg-blue-300 dark:hover:bg-blue-900 text-black hover:text-blue-900 dark:text-blue-100 dark:hover:text-white\">\n              <font-awesome-icon icon=\"fa-play-circle\" class=\"\"/>\n              Episodes\n            </div>\n            <div v-if=\"showStore.openComponent === 'showEpisodes'\">\n              <div class=\"mt-4 mb-12 pb-6 shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\n                <ShowEpisodesList :episodes=\"props.episodes\" :show=\"props.show\"\n                                  :episodeStatuses=\"props.episodeStatuses\"/>\n              </div>\n            </div>\n            <!--              </div>-->\n\n            <!--                            <table class=\"min-w-full divide-y divide-gray-200\">-->\n            <!--                                <tbody class=\"bg-white divide-y divide-gray-200\">-->\n            <!--                                <tr v-for=\"episode in episodes.data\" :key=\"episode.id\">-->\n            <!--                                    <td class=\"px-6 py-4 whitespace-nowrap\">-->\n            <!--                                        <div class=\"flex items-center\">-->\n            <!--                                            <div>-->\n            <!--                                                <div class=\"text-sm font-medium text-gray-900\">-->\n            <!--                                                    <Link :href=\"`/admin/users/${episode.id}`\" class=\"text-indigo-600 hover:text-indigo-900\">{{ episode.name }}</Link>-->\n            <!--                                                </div>-->\n            <!--                                            </div>-->\n            <!--                                        </div>-->\n            <!--                                    </td>-->\n\n            <!--                                    <td class=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">-->\n            <!--                                        <Link :href=\"`/admin/users/edit/${episode.id}`\" class=\"text-indigo-600 hover:text-indigo-900\">Edit</Link>-->\n            <!--                                    </td>-->\n            <!--                                </tr>-->\n            <!--                                </tbody>-->\n            <!--                            </table>-->\n\n            <!--                            &lt;!&ndash; Paginator &ndash;&gt;-->\n            <!--                            <Pagination :links=\"episode.links\" class=\"mt-6\"/>-->\n\n            <!--            </div>-->\n\n            <!--            <div class=\"mt-4 shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">-->\n            <!--              <div class=\"bg-blue-100 p-2 font-bold text-black\">Credits</div>-->\n            <!--              -->\n            <!--              -->\n            <div @click=\"toggleComponent('showCredits')\"\n                 :class=\"{'rounded-t-lg': showStore.openComponent === 'showCredits', 'rounded-lg': showStore.openComponent !== 'showCredits'}\"\n                 class=\"accordion-header p-2 font-bold transition duration-300 ease-in-out transform focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 overflow-hidden shadow-lg bg-blue-100 hover:bg-blue-300 dark:hover:bg-blue-900 text-black hover:text-blue-900 dark:text-blue-100 dark:hover:text-white\">\n              <font-awesome-icon icon=\"fa-clipboard-list\" class=\"\"/>\n              Credits and Assignments\n            </div>\n            <div v-if=\"showStore.openComponent === 'showCredits'\">\n              <div class=\"mt-4 mb-12 pb-6 shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\n                <div class=\"border-1 border-t mb-3 bg-blue-100 py-1 px-2 text-xs font-semibold text-red-800\">\n                  In development. Not currently working.\n                </div>\n                <Link\n                    :href=\"`#`\"\n                    v-if=\"teamStore.can.createAssignment\">\n                  <button\n                      class=\"bg-green-500 hover:bg-green-600 text-white ml-2 my-2 px-4 py-2 rounded disabled:bg-gray-400 h-max w-max\"\n                      disabled\n                  >Create Assignment\n                  </button>\n                </Link>\n\n                <ShowCreditsList/>\n              </div>\n            </div>\n            <!--            </div>-->\n\n            <!--            <div class=\"mt-4 shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">-->\n            <!--              <div class=\"bg-blue-100 p-2 font-bold text-black\">Recordings</div>-->\n            <div @click=\"toggleComponent('showRecordings')\"\n                 :class=\"{'rounded-t-lg': showStore.openComponent === 'showRecordings', 'rounded-lg': showStore.openComponent !== 'showRecordings'}\"\n                 class=\"accordion-header p-2 font-bold transition duration-300 ease-in-out transform focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 overflow-hidden shadow-lg bg-blue-100 hover:bg-blue-300 dark:hover:bg-blue-900 text-black hover:text-blue-900 dark:text-blue-100 dark:hover:text-white\">\n              <font-awesome-icon icon=\"fa-circle\" class=\"text-red-700\"/>\n              Recordings\n            </div>\n            <div v-if=\"showStore.openComponent === 'showRecordings'\">\n              <div class=\"mt-4 mb-12 pb-6 shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\n                <ShowRecordings :showRecordings=\"show.recordings\" :showName=\"show.name\" :showSlug=\"show.slug\" :showImage=\"show.image\"/>\n\n                <!--            </div>-->\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <ShowFooter :team=\"team\" :show=\"show\"/>\n    </div>\n  </div>\n\n</template>\n\n<script setup>\nimport { onUnmounted } from 'vue'\nimport { usePageSetup } from '@/Utilities/PageSetup'\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\nimport { useShowStore } from '@/Stores/ShowStore'\nimport { useTeamStore } from '@/Stores/TeamStore'\nimport { useGoLiveStore } from '@/Stores/GoLiveStore'\nimport ShowHeader from '@/Components/Pages/Shows/Layout/ShowHeader'\nimport ShowFooter from '@/Components/Pages/Shows/Layout/ShowFooter'\nimport ShowEpisodesList from '@/Components/Pages/Shows/Elements/ManageShowEpisodesList'\nimport ShowCreditsList from '@/Components/Pages/Shows/Elements/ManageShowCreditsList'\nimport Message from '@/Components/Global/Modals/Messages'\nimport DashboardButton from '@/Components/Global/Buttons/DashboardButton.vue'\nimport ShowRecordings from '@/Components/Pages/Shows/Elements/ShowRecordings.vue'\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome'\nimport { Inertia } from '@inertiajs/inertia'\n\nusePageSetup('shows/slug/manage')\n\nconst appSettingStore = useAppSettingStore()\nconst showStore = useShowStore()\nconst teamStore = useTeamStore()\nconst goLiveStore = useGoLiveStore()\n\nconst toggleComponent = (componentName) => {\n  showStore.openComponent = showStore.openComponent === componentName ? null : componentName\n}\n\n\nonUnmounted(() => {\n  showStore.errorMessage = ''\n  // const topDiv = document.getElementById(\"topDiv\");\n  // if (topDiv) {\n  //   topDiv.scrollIntoView();\n  // }\n})\n\nlet props = defineProps({\n  show: Object,\n  team: Object,\n  episodes: Object,\n  episodeStatuses: Object,\n  // filters: Object,\n  can: Object,\n})\n\nteamStore.setActiveTeam(props.team)\nteamStore.setActiveShow(props.show)\nteamStore.can = props.can\n\n// let search = ref(props.filters.search);\n//\n// watch(search, throttle(function (value) {\n//     Inertia.get('/shows', { search: value }, {\n//         preserveState: true,\n//         replace: true\n//     });\n// }, 300));\n\nconst goLive = () => {\n  goLiveStore.reset()\n  goLiveStore.preSelectedShowId = props.show.id\n  appSettingStore.btnRedirect(`/golive`)\n}\n\n</script>\n\n\n<style scoped>\n@keyframes wave-bg {\n  0%, 100% {\n    background-color: #dbeafe; /* Original color */\n  }\n  50% {\n    background-color: #bfdbfe; /* Slightly lighter color */\n  }\n}\n\n.wave-background {\n  animation: wave-bg 5s infinite ease-in-out;\n  background-color: #dbeafe; /* Starting color */\n}\n\n\n</style>\n","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-9.use[1]!../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-9.use[2]!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./Manage.vue?vue&type=style&index=0&id=8696ee86&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./Manage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Manage.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Manage.vue?vue&type=style&index=0&id=8696ee86&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-8696ee86\"]])\n\nexport default __exports__"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","initialState","displayEpisodeGoLiveComponent","isEpisode","episode","preSelectedShowId","selectedShowId","shows","streamKey","wildcardId","isLive","isRecording","streamInfo","rtmpUri","destinations","isLoadingDestinations","loadingDestinationId","processingRecordingChange","isProcessingDisableAllAutoPushes","playerIsReloading","pushDestinationFormSubmitProcessing","mistServerUri","previousStreamStatus","useGoLiveStore","defineStore","state","actions","assign","this","fetchShows","_this","_callee","response","_context","axios","get","data","t0","generateStreamKey","_this2","_callee2","_context2","post","concat","stream_key","selectedShow","mist_stream_wildcard","mist_stream_wildcard_id","updateAndGetStreamKey","_show$mist_stream_wil","_this3","show","find","id","setSelectedShowId","showId","updateSelectedShow","_this4","goLive","stopLive","startRecording","_this5","_callee3","notificationStore","showSlug","_response$data","message","status","_context3","useNotificationStore","slug","stream_name","setToastNotification","stopRecording","_this6","_callee4","_response$data2","_context4","fetchStreamInfo","_this7","_callee5","_context5","fetchMistServerUri","streamName","success","fetchRtmpUri","_this8","_callee6","_context6","fetch","ok","text","clearStreamInfo","toggleDisplayEpisodeGoLiveComponent","_this$episode","show_id","updateEpisode","_this9","_callee7","videoAuxPlayerStore","uriResponse","_context7","useVideoAuxPlayerStore","setMistServerUri","reloadPlayer","_this10","_callee8","mistStream","_context8","loadMistStreamVideo","fetchPushDestinations","_this11","_callee9","_response$data3","_context9","backgroundFetch","recording","console","log","backgroundFetchPushDestinations","_this12","_callee10","_context10","deleteDestination","destinationId","_this13","_callee11","_context11","confirm","filter","destination","setGeneralServiceNotification","startPush","fullPushUri","_this14","_callee12","_response$data4","index","_context12","destination_id","full_push_uri","findIndex","push_is_started","stopPush","_this15","_callee13","_response$data5","_context13","enableAutoPush","_this16","_callee14","_response$data6","_context14","has_auto_push","disableAutoPush","_this17","_callee15","_response$data7","_context15","disableAllAutoPushes","_this18","_callee16","_response$data8","_context16","getters","_show$mist_stream_wil2","_show$mist_stream_wil3","_show$mist_stream_wil4","is_recording","fullRtmpUri","fullUrl","activeDestinations","sourceName","_state$selectedShow","_state$episode","streamOffline","_state$streamInfo$err","_state$streamInfo","_toConsumableArray","arr","Array","isArray","_arrayLikeToArray","_arrayWithoutHoles","iter","from","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","minLen","toString","test","len","arr2","ownKeys","getOwnPropertySymbols","getOwnPropertyDescriptor","_objectSpread","_defineProperty","getOwnPropertyDescriptors","defineProperties","obj","toPrimitive","String","Number","_toPrimitive","convertScheduleToTimezone","scheduleData","userStore","useUserStore","map","item","startTimeInUserTz","start_time","formatDateTimeFromUtcToUserTimezone","endTimeInUserTz","end_time","recurrenceDetailsInUserTz","recurrenceDetails","_item$recurrenceDetai","start_date","end_date","formatTimeInUserTimezone","getUpcomingContentDates","viewingWindowStart","dates","start","Date","setHours","getHours","dayjs","relativeTime","timezone","utc","currentMonth","selectedDay","currentWeekStart","currentWeekEnd","fiveDaySixHourSchedule","todaysContent","weeklyContent","dataFetchLog","scheduleIsLoading","savingToSchedule","useScheduleStore","resetAll","now","setSelectedDay","day","addHours","startOfDay","startOfWeek","weekStartsOn","endOfWeek","fetchWeekDataIfNeeded","setSelectedDayToToday","startOfHour","changeDay","days","currentTime","newDay","getMinutes","addDays","setMinutes","shiftHours","hours","isSameDay","isElevenPM","date","subtractMonth","subMonths","addMonth","addMonths","fetchFiveDaySixHourSchedule","userTimezone","fetchTodaysContent","preloadWeeklyContent","currentDate","loadWeekFromDate","fullISODate","_timezone3","newData","weekStart","weekEnd","fetchTime","existingLogIndex","toISOString","lastFetch","formattedDate","needsDataForWeek","formatISODate","split","weekStartStr","weekEndStr","weekHasBeenFetched","some","logWeekStartStr","logWeekEndStr","calculateExtendedEndForUpcomingContent","baseStartTime","getTime","checkAndFetchForUpcomingContent","upcomingDates","fifteenMinutesAgo","_iterator","_step","_loop","_createForOfIteratorHelper","dateString","content","contentDate","toDateString","lastFetchedTime","isFresh","fetchDataAndUpdateLog","t1","mapShowsToTimeSlots","timeSlots","showsWithAdjustedSpans","showStart","showEnd","durationMinutes","slotIndex","slot","span","Math","ceil","gridStart","gridSpan","showForSlot","placeholder","nextFourHoursOfContent","startOfCurrentHour","fourHoursLater","durationHours","intervalMinutes","slots","slotTime","createTimeSlots","startDateTime","endDateTime","startInUserTZ","convertUtcToUserTimezone","endInUserTZ","warn","showStartTimeInUserTZ","fetchShowsScheduledBetween","resolvedShows","sortedShows","sort","b","startTimeComparison","priority","showsByStartTime","startTime","group","resolveSchedulingConflicts","adjustedShows","adjustShowsForGrid","showsWithPlacement","gridItems","slotStart","fillEmptySlotsWithPlaceholders","nextFourHoursWithHalfHourIntervals","intervals","current","tz","startOf","formatted","format","dateTimeString","add","upcomingContent","end","showsGroupedByStartTime","reduce","acc","itemStart","selected","nextSixHours","adjustedStart","eachHourOfInterval","dateMessage","startDay","isToday","isYesterday","isTomorrow","currentMonthIndex","getMonth","currentMonthName","currentYear","getYear","daysInMonth","startOfCurrentMonth","startOfMonth","endOfCurrentMonth","endOfMonth","startOfGrid","endOfGrid","eachDayOfInterval","today","viewingStart","description","totalSpots","memberSpots","teamCreator","teamLeader","members","managers","activeShow","activeEpisode","creators","showModal","Boolean","confirmDialog","confirmManagerDialog","selectedManagerName","selectedManagerId","addManager","removeManager","deleteMemberName","deleteMemberId","noteEdit","note","saveNoteProcessing","goLiveDisplay","can","openComponent","useTeamStore","setActiveTeam","team","setActiveShow","setActiveEpisode","deleteTeamMemberCancel","confirmTeamManagerCancel","deleteTeamMember","Inertia","visit","route","user_id","team_id","team_slug","addTeamManager","removeTeamManager","toggleGoLiveDisplay","fetchTeamMembers","spotsRemaining","player","eventListenersAttached","videoPlayerLoaded","class","videoContainerClass","videoSourceIdSrc1","videoSourceIdSrc2","videoSourceIdSrc3","videoSourceTypeSrc1","videoSourceTypeSrc2","videoSourceTypeSrc3","firstPlayVideoSourceType","firstPlayVideoSource","videoName","videoSource","videoSourceType","videoPoster","nextSource","previousSource","currentView","currentChannelId","currentChannelName","currentShow","currentShowEpisode","currentVideo","hasVideo","controls","muted","paused","duration","formattedTime","blue","videoIsYoutube","videoUploadComplete","getMistServerUri","setPlayer","playerInstance","initializePlayer","attachEventListeners","nextTick","useAudioStore","ensureAudioContextAndNodesReady","ready","play","on","handleTimeUpdate","handleFullscreenChange","handlePlay","handlePause","handleError","detachEventListeners","stopAudioLevelMonitoring","off","disposePlayer","dispose","prepareForNewVideoSource","source","loadNewVideo","resetPlayback","pause","formatDuration","durationInSeconds","floor","part","padStart","join","_this$player","isFullscreen","_this$player2","_this$player3","_this$player4","code","makeBlue","toggleMute","unMute","mute","togglePlay","videoJs","videojs","load","loadNewLiveSource","sourceType","fullSourceUrl","src","back","fullscreen","requestFullscreen","getVideoCurrentTime","videoCurrentTime","getSourceDetails","videoSrc","mediaType","video_url","cdn_endpoint","cloud_folder","folder","file_name","audioStore","_this$getSourceDetail","deferAudioSetup","playNewVideo","loadNewSourceFromYouTube","useChannelStore","clearChannel","loadNewLiveSourceFromRumble","loadNewSourceFromUrl","loadNewSourceFromMist","loadNewSourceFromFile","filePath","loadExternalSourceVideo","loadPlaylistVideos","stayMuted","shouldUnmute","basePath","loadVideoFromFile","video","setNowPlayingInfoVideoFile","nowPlayingType","nowPlayingName","useStreamStore","currentChannel","setNowPlayingInfoShow","clearNowPlayingInfo","showStore","useShowStore","firstPlayVideo","setName","setEpisodeUrl","setUrl","setEpisodeName","makeVideoPiP","makeVideoFullPage","appSettingStore","useAppSettingStore","fullPage","hidePage","ott","isMobile","makeVideoTopRight","currentPageIsStream","makeVideoWelcomePage","loggedIn","usePageSetup","pageName","videoPlayerStore","useVideoPlayerStore","currentPage","showFlashMessage","pageIsHidden","window","innerWidth","showOttButtons","pageReload","location","reload","event","search","shouldScrollToTop","requestAnimationFrame","topDiv","document","getElementById","scrollIntoView","behavior","scrollTo","setPrevUrl","noLayout","___CSS_LOADER_EXPORT___","module","props","__props","emits","ref","inputValue","watch","_ref2","newDate","_slicedToArray","clearFlashMessage","computed","flash","warning","_ref","savedScrollPosition","saveScrollPosition","scrollY","onMounted","getFullYear","__emit","scheduleStore","endDate","selectedEndDate","timezoneConfirmed","currentStep","totalSteps","stepError","form","reactive","useForm","scheduleType","daysOfWeek","hour","minute","meridian","durationHour","durationMinute","durationDisplay","startDate","errors","confirmTimezone","selectScheduleType","goToNextStep","isBefore","isAfter","provisionalEndDate","goToPreviousStep","goToStep","num","daysOrder","dayAbbreviations","dayNameToNumber","abbreviatedDaysOfWeekOrdered","indexOf","sortedDay","newDays","immediate","_","formattedStartTime","minuteOptions","updateDurationDisplay","display","newHour","formattedStartTimeForOneTime","timeIn","formattedStartDate","formattedEndDate","disabledDays","selectedDayNumbers","repeat","weekdays","dayNum","includes","handleStartDateSelected","startWeekday","diff","subtract","handleEndDateSelected","submit","_submit","formattedDuration","_startDate","newEndTime","endDateOnly","newFormattedEndDateTime","totalDurationMinutes","payload","closeConfirmAddShowModal","canadianTimezone","parseInt","endTime","contentType","contentId","startConfetti","closeModal","close","clearErrors","stopConfetti","closeModalAndReset","proxy","getCurrentInstance","$confetti","selectedTimezone","newTimezone","handleKeydown","redirect","updateTimezone","setUserTimezone","addEventListener","onUnmounted","removeEventListener","removeFromSchedule","scheduleDetails","teamStore","convertedDate","watchEffect","scheduledDateTime","dialogId","episodeId","setDateTime","openEpisodeStatuses","cancelScheduleEpisode","handleScheduledDateTime","selectedScheduledDateTime","updateScheduledDateTime","formattedScheduledDateTime","dateTime","convertToTimeZone","changeEpisodeStatus","_x","_x2","_changeEpisodeStatus","statusId","episode_id","new_status_id","scheduled_release_dateTime","alert","errorMessage","closeModals","episodeStatusClass","episodeStatusId","notes","emit","episodeNote","closeNote","saveNote","focus","releaseDateTime","formatDateInUserTimezone","scheduledReleaseDateTime","timezoneAbbreviation","componentKey","reloadNote","editNote","deleteShowEpisode","episodeIsBeingDeleted","statusText","_createElementVNode","script","_createElementBlock","_hoisted_1","_hoisted_4","nowPlayingStore","useNowPlayingStore","shareClip","useClipboard","totalMilliseconds","seconds","minutes","paddedHours","paddedMinutes","paddedSeconds","hoveredRow","selectedRecording","selectedRecordingDate","selectedRecordingStreamName","selectedRecordingId","nowPlayingRecording","nowPlayingRecordingId","nowPlayingStreamName","rowClass","recordingId","_nowPlayingRecording$","_nowPlayingRecording$2","toggleOttInfo","secondaryName","formatTimeFromDateInUserTimezone","commonDetails","primaryName","showName","comment","primaryUrl","secondaryUrl","channelName","image","showImage","creative_commons","videoDetails","setActiveMedia","showCopyMessage","copyMessage","confirmAddToEpisode","beginDownload","url","download","downloadLink","createElement","href","body","appendChild","click","removeChild","confirmSaveToPremium","shareUrl","copy","setTimeout","options","locals","goLiveStore","toggleComponent","componentName","btnRedirect"],"sourceRoot":""}
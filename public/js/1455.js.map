{"version":3,"file":"js/1455.js","mappings":";8JAMO,SAASA,EAAaC,GACzB,IAAMC,GAAYC,EAAAA,EAAAA,gBACZC,GAAkBC,EAAAA,EAAAA,sBAClBC,GAAmBC,EAAAA,EAAAA,uBAEzBH,EAAgBI,YAAcP,EAC9BG,EAAgBK,kBAAmB,EACnCL,EAAgBM,cAAe,EAE3BR,EAAUS,UAAYC,OAAOC,WAAa,MAAQT,EAAgBU,SAClEV,EAAgBW,IAAM,GAEtBX,EAAgBW,IAAM,EACtBX,EAAgBY,gBAAiB,GAGrCV,EAAiBW,oBAEbb,EAAgBc,aAChBd,EAAgBc,YAAa,EAC7Bd,EAAgBe,iBAAkB,EAClCP,OAAOQ,SAASC,UAWhBC,EAAAA,QAAQC,GAAG,YAAY,SAACC,GAChBtB,EAAUS,UAAYC,OAAOC,WAAa,MAAQT,EAAgBU,SAClEV,EAAgBW,IAAM,EAEtBX,EAAgBW,IAAM,EAEyB,KAA3BH,OAAOQ,SAASK,SAChBrB,EAAgBsB,mBACpCC,uBAAsB,WAClB,IAAMC,EAASC,SAASC,eAAe,UACnCF,EACAA,EAAOG,eAAe,CAACC,SAAU,SAEjCpB,OAAOqB,SAAS,EAAG,EAE3B,IAEJ7B,EAAgBsB,mBAAoB,CACxC,IAEJtB,EAAgB8B,aAChB9B,EAAgBY,gBAAiB,EACjCZ,EAAgB+B,UAAW,CAI/B,oEC3DA,8CCQA,IAAM/B,GAAkBC,EAAAA,EAAAA,uoRCRxB,6DC0CwBA,EAAAA,EAAAA,sBAERI,kBAAmB,EAEnC,IAAI2B,EAAQC,EAYNC,IAPcC,EAAAA,EAAAA,WAAS,iBAAO,CAClC,oEAAqEH,EAAMI,MAAMC,QACjF,gEAAiEL,EAAMI,MAAME,QAC7E,wEAAyEN,EAAMI,MAAMG,QACrF,4DAA6DP,EAAMI,MAAMI,MAC1E,IAEsB,iBAAAC,KAAAC,IAAAC,MAAG,SAAAC,IAAA,OAAAF,IAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAClB9B,EAAAA,QAAQ+B,KAAKC,MAAM,gBAAe,OACxChC,EAAAA,QAAQD,SAAS,wBAAA6B,EAAAK,OAAA,GAAAP,EAAA,mLAClB,kBAHsB,OAAAH,EAAAW,MAAA,KAAAC,UAAA,o5CC1DvB,6DCiBA,IAAMrD,GAAkBC,EAAAA,EAAAA,sBAOxBD,EAAgBsD,oBAAsB,EACtC,IAAMC,EAAqB,WACzBvD,EAAgBsD,oBAAsB9C,OAAOgD,OAC/C,SACAhD,OAAOqB,SAAS,EAAG7B,EAAgBsD,i+CC5BnC,iFC+CA,IAAItB,EAAQC,EAKRZ,GAASoC,EAAAA,EAAAA,KAAIzB,EAAM0B,QAAQrC,eAE/BsC,EAAAA,EAAAA,OAAMtC,EAAQuC,KAAS,SAAUC,GAC/B3C,EAAAA,QAAQ4C,IAAI,SAAU,CAACzC,OAAQwC,GAAQ,CACrCE,eAAe,EACfC,SAAS,GAEb,GAAG,mhEC3DH,oFCmCApE,EAAAA,EAAAA,GAAa,SAEb,IAAMI,GAAkBC,EAAAA,EAAAA,sBAEpB+B,EAAQC,EAMRZ,GAASoC,EAAAA,EAAAA,KAAIzB,EAAM0B,QAAQrC,eAE/BsC,EAAAA,EAAAA,OAAMtC,EAAQuC,KAAS,SAAUC,GAC/B3C,EAAAA,QAAQ4C,IAAI,SAAU,CAACzC,OAAQwC,GAAQ,CACrCE,eAAe,EACfC,SAAS,GAEb,GAAG","sources":["webpack:///./resources/js/Utilities/PageSetup.js","webpack:///./resources/js/Components/Global/Buttons/DashboardButton.vue?3fff","webpack:///./resources/js/Components/Global/Buttons/DashboardButton.vue","webpack:///./resources/js/Components/Global/Modals/Messages.vue?dfe9","webpack:///./resources/js/Components/Global/Modals/Messages.vue","webpack:///./resources/js/Components/Global/Paginators/Pagination.vue?0305","webpack:///./resources/js/Components/Global/Paginators/Pagination.vue","webpack:///./resources/js/Components/Pages/Teams/Elements/TeamsIndexGrid.vue?74e5","webpack:///./resources/js/Components/Pages/Teams/Elements/TeamsIndexGrid.vue","webpack:///./resources/js/Pages/Teams/Index.vue?b2f0","webpack:///./resources/js/Pages/Teams/Index.vue"],"sourcesContent":["import { onBeforeMount, onMounted } from 'vue'\nimport { useUserStore } from \"@/Stores/UserStore\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useVideoPlayerStore } from \"@/Stores/VideoPlayerStore\"\nimport { Inertia } from '@inertiajs/inertia'\n\nexport function usePageSetup(pageName) {\n    const userStore = useUserStore()\n    const appSettingStore = useAppSettingStore()\n    const videoPlayerStore = useVideoPlayerStore()\n\n    appSettingStore.currentPage = pageName\n    appSettingStore.showFlashMessage = true\n    appSettingStore.pageIsHidden = false\n\n    if (userStore.isMobile || window.innerWidth < 1024 || appSettingStore.fullPage) {\n        appSettingStore.ott = 0;\n    } else {\n        appSettingStore.ott = 1;\n        appSettingStore.showOttButtons = true;\n    }\n\n    videoPlayerStore.makeVideoTopRight()\n\n    if (appSettingStore.pageReload) {\n        appSettingStore.pageReload = false\n        appSettingStore.pageWasReloaded = true\n        window.location.reload();\n    }\n    // Check if the URL contains query strings\n\n\n    // Only scroll into view if there are no query strings\n\n        // const topDiv = document.getElementById(\"topDiv\")\n        // if (topDiv) {\n        //     topDiv.scrollIntoView()\n        // }\n        Inertia.on('navigate', (event) => {\n            if (userStore.isMobile || window.innerWidth < 1024 || appSettingStore.fullPage) {\n                appSettingStore.ott = 0;\n            } else {\n                appSettingStore.ott = 1;\n            }\n            const hasQueryStrings = window.location.search !== '';\n            if (!hasQueryStrings || appSettingStore.shouldScrollToTop) {\n                requestAnimationFrame(() => {\n                    const topDiv = document.getElementById(\"topDiv\");\n                    if (topDiv) {\n                        topDiv.scrollIntoView({behavior: 'auto'});\n                    } else {\n                        window.scrollTo(0, 0);\n                    }\n                });\n            }\n            appSettingStore.shouldScrollToTop = false;\n        })\n    // Only update if we're not already on this page to avoid overwriting with the current URL\n    appSettingStore.setPrevUrl()\n    appSettingStore.showOttButtons = true\n    appSettingStore.noLayout = false\n\n    // Inertia.reload()\n\n}\n","import script from \"./DashboardButton.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./DashboardButton.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n    <button\n        @click=\"appSettingStore.btnRedirect('/dashboard')\"\n        class=\"bg-black hover:bg-gray-800 text-white font-semibold ml-2 mt-2 px-4 py-2 rounded-lg disabled:bg-gray-400 h-max w-max\"\n    >Dashboard\n    </button>\n  </div>\n</template>\n\n<script setup>\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\n\nconst appSettingStore = useAppSettingStore()\n\n</script>\n","import script from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"mx-4 my-4\">\n    <div class=\"alert alert-info mt-4\"\n         v-if=\"props.flash.message\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" class=\"stroke-current shrink-0 w-6 h-6\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n      </svg>\n      <span>{{ props.flash.message }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-success mt-4 mx-3\"\n         v-if=\"props.flash.success\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.success }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-warning mt-4 mx-3\"\n         v-if=\"props.flash.warning\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"/>\n      </svg>\n      <span>{{ props.flash.warning }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-error mt-4 mx-3\"\n         v-if=\"props.flash.error\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.error }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n  </div>\n\n</template>\n\n<script setup>\nimport { Inertia } from \"@inertiajs/inertia\"\nimport { computed } from \"vue\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\n\nconst appSettingStore = useAppSettingStore()\n\nappSettingStore.showFlashMessage = true\n\nlet props = defineProps({\n  flash: Object,\n\n})\n\nconst messageType = computed(() => ({\n  'text-green-700 bg-green-100 dark:bg-green-200 dark:text-green-800': props.flash.success,\n  'text-blue-700 bg-blue-100 dark:bg-blue-200 dark:text-blue-800': props.flash.message,\n  'text-orange-700 bg-orange-100 dark:bg-orange-200 dark:text-orange-800': props.flash.warning,\n  'text-red-700 bg-red-100 dark:bg-red-200 dark:text-red-800': props.flash.error,\n}))\n\nconst clearFlashMessage = async () => {\n  await Inertia.post(route('flash.clear'));\n  Inertia.reload();\n};\n</script>\n","import script from \"./Pagination.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Pagination.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div v-if=\"data.last_page > 1\" class=\"flex flex-wrap justify-center my-4 space-x-4 space-y-2\">\n    <div></div>\n    <Component\n        :is=\"link.url ? 'Link' : 'span'\"\n        v-for=\"(link, key) in data.links\"\n        :key=\"key\"\n        :href=\"link.url\"\n        @click.prevent=\"saveScrollPosition\"\n        v-html=\"link.label\"\n        class=\"px-4 py-3 text-sm leading-4 h-fit\"\n        :class=\"{ 'text-white bg-orange-400 hover:bg-orange-400 dark:bg-orange-400 dark:hover:bg-orange-400': link.active,\n                      'rounded mt-2 mr-0.5 text-gray-300 dark:text-gray-700': ! link.url,\n                      'rounded bg-gray-200 hover:bg-gray-300 dark:bg-gray-800 dark:hover:bg-gray-600 text-gray-800 dark:text-gray-50 focus:text-indigo-500 hover:shadow': link.url }\"\n    />\n  </div>\n</template>\n\n\n<script setup>\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\n\nconst appSettingStore = useAppSettingStore()\n\ndefineProps({\n  data: Object,\n})\n\n\nappSettingStore.savedScrollPosition = 0\nconst saveScrollPosition = () => {\n  appSettingStore.savedScrollPosition = window.scrollY\n}\nwindow.scrollTo(0, appSettingStore.savedScrollPosition)\n\n</script>\n\n\n<!--class=\"px-1 text-gray-800 dark:text-gray-50 dark:hover:text-blue-400 hover:text-blue-400\"-->\n<!--:class=\"{ 'text-gray-300 dark:text-gray-700 dark:hover:text-gray-700 hover:text-gray-300': ! link.url, 'font-bold' : link.active }\"-->\n","import script from \"./TeamsIndexGrid.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TeamsIndexGrid.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"p-6\">\n\n    <div class=\"flex flex-col w-full justify-center items-center mb-6 lg:mb-0\">\n      <!-- Paginator -->\n      <!--                    <Pagination :data=\"teams\" class=\"\"/>-->\n\n      <h1 class=\"text-3xl font-semibold pb-3 text-white\">Browse Teams</h1>\n      <div class=\"gap-x-4 mb-4\">\n        <input v-model=\"search\" type=\"search\" placeholder=\"Search Teams...\"\n               class=\"border px-2 rounded-lg text-gray-900 bg-white dark:bg-white dark:text-gray-900\"/>\n      </div>\n    </div>\n\n    <div class=\"gap-4 flex flex-row flex-wrap justify-center w-full overflow-x-none\">\n      <div v-for=\"team in teams.data\"\n           :key=\"team.id\"\n           @click=\"Inertia.visit(`/teams/${team.slug}`)\"\n           class=\" bg-gray-300 shadow-md hover:bg-yellow-400 hover:cursor-pointer flex flex-col max-w-[12rem] justify-center items-center py-4 rounded-lg\">\n\n        <div class=\"flex items-center justify-center min-w-[12rem] px-6 pb-4 font-medium text-gray-900 dark:text-white whitespace-nowrap\">\n          <!--                                                <img :src=\"`/storage/${team.logo}`\" class=\"rounded-full h-20 w-20 object-cover\">-->\n          <!--                                                <img :src=\"'/storage/images/' + team.logo\" class=\"rounded-full h-20 w-20 object-cover\">-->\n          <SingleImage :image=\"team.image\"\n                       :alt=\"'team logo rounded full'\"\n                       :key=\"team.image.id\"\n                       :class=\"'rounded-full h-20 w-20 object-cover'\"/>\n\n        </div>\n        <div class=\"max-w-[10rem] px-6 font-medium text-gray-900 dark:text-white break-words text-center \">\n          <Link :href=\"`/teams/${team.slug}`\" class=\"font-semibold text-blue-800 hover:text-blue-600\">{{\n              team.name\n            }}\n          </Link>\n        </div>\n      </div>\n\n    </div>\n\n    <!-- Paginator -->\n    <Pagination :data=\"teams\" class=\"\"/>\n\n  </div>\n</template>\n\n<script setup>\nimport { Inertia } from '@inertiajs/inertia'\nimport { ref, watch } from 'vue'\nimport throttle from 'lodash/throttle'\nimport SingleImage from '@/Components/Global/Multimedia/SingleImage'\nimport Pagination from '@/Components/Global/Paginators/Pagination'\n\nlet props = defineProps({\n  teams: Object,\n  filters: Object\n})\n\nlet search = ref(props.filters.search)\n\nwatch(search, throttle(function (value) {\n  Inertia.get('/teams', {search: value}, {\n    preserveState: true,\n    replace: true,\n  })\n}, 300))\n</script>","import script from \"./Index.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Index.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <Head title=\"Teams\"/>\n\n  <div class=\"place-self-center flex flex-col gap-y-3\">\n    <div id=\"topDiv\" class=\"min-h-screen bg-gray-700 text-gray-50 dark:bg-gray-700 dark:text-gray-50 p-5\">\n\n      <Message v-if=\"appSettingStore.showFlashMessage\" :flash=\"$page.props.flash\"/>\n\n      <div v-if=\"props.can.viewCreator\" class=\"flex justify-end flex-wrap-reverse gap-x-2 pt-6\">\n\n        <Link v-if=\"can.createTeam\" :href=\"`/teams/create`\">\n          <button\n              class=\"bg-green-600 hover:bg-green-500 text-white px-4 py-2 rounded disabled:bg-gray-400\"\n          >Add Team\n          </button>\n        </Link>\n        <DashboardButton />\n      </div>\n\n      <TeamsIndexGrid :teams =\"teams\" :filters=\"filters\"/>\n\n\n    </div>\n  </div>\n\n</template>\n\n<script setup>\nimport { Inertia } from '@inertiajs/inertia'\nimport { ref, watch } from 'vue'\n\nimport throttle from 'lodash/throttle'\nimport { usePageSetup } from '@/Utilities/PageSetup'\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\nimport Message from '@/Components/Global/Modals/Messages'\nimport SingleImage from '@/Components/Global/Multimedia/SingleImage'\nimport Pagination from '@/Components/Global/Paginators/Pagination'\nimport TeamsIndexGrid from '@/Components/Pages/Teams/Elements/TeamsIndexGrid.vue'\nimport DashboardButton from '@/Components/Global/Buttons/DashboardButton.vue'\n\nusePageSetup('teams')\n\nconst appSettingStore = useAppSettingStore()\n\nlet props = defineProps({\n  teams: Object,\n  filters: Object,\n  can: Object,\n})\n\nlet search = ref(props.filters.search)\n\nwatch(search, throttle(function (value) {\n  Inertia.get('/teams', {search: value}, {\n    preserveState: true,\n    replace: true,\n  })\n}, 300))\n\n</script>\n\n\n"],"names":["usePageSetup","pageName","userStore","useUserStore","appSettingStore","useAppSettingStore","videoPlayerStore","useVideoPlayerStore","currentPage","showFlashMessage","pageIsHidden","isMobile","window","innerWidth","fullPage","ott","showOttButtons","makeVideoTopRight","pageReload","pageWasReloaded","location","reload","Inertia","on","event","search","shouldScrollToTop","requestAnimationFrame","topDiv","document","getElementById","scrollIntoView","behavior","scrollTo","setPrevUrl","noLayout","props","__props","clearFlashMessage","computed","flash","success","message","warning","error","_ref","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","post","route","stop","apply","arguments","savedScrollPosition","saveScrollPosition","scrollY","ref","filters","watch","throttle","value","get","preserveState","replace"],"sourceRoot":""}
{"version":3,"file":"js/4990.js","mappings":";8JAMO,SAASA,EAAaC,GACzB,IAAMC,GAAYC,EAAAA,EAAAA,gBACZC,GAAkBC,EAAAA,EAAAA,sBAClBC,GAAmBC,EAAAA,EAAAA,uBAEzBH,EAAgBI,YAAcP,EAC9BG,EAAgBK,kBAAmB,EACnCL,EAAgBM,cAAe,EAE3BR,EAAUS,WACVP,EAAgBQ,IAAM,GAG1BN,EAAiBO,qBAEjBC,EAAAA,EAAAA,gBAAc,WAENV,EAAgBW,aAChBX,EAAgBW,YAAa,EAC7BC,OAAOC,SAASC,QAAO,GAE/B,KAEAC,EAAAA,EAAAA,YAAU,WAKN,KAHmD,KAA3BH,OAAOC,SAASG,QAGlB,CAClB,IAAMC,EAASC,SAASC,eAAe,UACnCF,GACAA,EAAOG,gBAEf,CAEApB,EAAgBqB,aAChBrB,EAAgBsB,UAAW,EAC3BtB,EAAgBuB,gBAAiB,CAGrC,GACJ,uDC7CEC,EAAAA,EAAAA,oBAAmI,OAA9HC,MAAM,sGAAqG,iBAAa,ICD/H,MAAMC,EAAS,CAAC,EAKhB,GAFiC,cAAgBA,EAAQ,CAAC,CAAC,gDDH3DC,EAAAA,EAAAA,oBAEM,WAHNC,4DEEIJ,EAAAA,EAAAA,oBAAwH,OAAnHC,MAAM,qGAAoG,OAAG,ICDtH,MAAMC,EAAS,CAAC,EAKhB,GAFiC,cAAgBA,EAAQ,CAAC,CAAC,gDDHzDC,EAAAA,EAAAA,oBAEM,WAHRC,kyQEKA,6DC0CwB3B,EAAAA,EAAAA,sBAERI,kBAAmB,EAEnC,IAAIwB,EAAQC,EAYNC,IAPcC,EAAAA,EAAAA,WAAS,iBAAO,CAClC,oEAAqEH,EAAMI,MAAMC,QACjF,gEAAiEL,EAAMI,MAAME,QAC7E,wEAAyEN,EAAMI,MAAMG,QACrF,4DAA6DP,EAAMI,MAAMI,MAC1E,IAEsB,iBAAAC,KAAAC,IAAAC,MAAG,SAAAC,IAAA,OAAAF,IAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAClBC,EAAAA,QAAQC,KAAKC,MAAM,gBAAe,OACxCF,EAAAA,QAAQhC,SAAS,wBAAA6B,EAAAM,OAAA,GAAAR,EAAA,mLAClB,kBAHsB,OAAAH,EAAAY,MAAA,KAAAC,UAAA,m3JC1DvB,6HCoMAvD,EAAAA,EAAAA,GAAa,SAEb,IAAMI,GAAkBC,EAAAA,EAAAA,sBAExB,SAASmD,IACPlC,SAASC,eAAe,gBAAgBC,eAAe,CAACiC,SAAU,UACpE,CAEA,SAASC,IACPpC,SAASC,eAAe,eAAeC,eAAe,CAACiC,SAAU,UACnE,CAUA,IAAIxB,GAAQC,EAURd,IAASuC,EAAAA,EAAAA,KAAI1B,GAAM2B,QAAQxC,eAE/ByC,EAAAA,EAAAA,OAAMzC,GAAQ0C,KAAS,SAAUC,GAC/Bb,EAAAA,QAAQc,IAAI,SAAU,CAAC5C,OAAQ2C,GAAQ,CACrCE,eAAe,EACfC,SAAS,GAEb,GAAG","sources":["webpack:///./resources/js/Utilities/PageSetup.js","webpack:///./resources/js/Components/Global/Badges/CreatorsOnlyBadge.vue","webpack:///./resources/js/Components/Global/Badges/CreatorsOnlyBadge.vue?37b5","webpack:///./resources/js/Components/Global/Badges/NewContentBadge.vue","webpack:///./resources/js/Components/Global/Badges/NewContentBadge.vue?2508","webpack:///./resources/js/Components/Global/Modals/Messages.vue?dfe9","webpack:///./resources/js/Components/Global/Modals/Messages.vue","webpack:///./resources/js/Pages/Shows/Index.vue?a327","webpack:///./resources/js/Pages/Shows/Index.vue"],"sourcesContent":["import { onBeforeMount, onMounted } from 'vue'\nimport { useUserStore } from \"@/Stores/UserStore\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useVideoPlayerStore } from \"@/Stores/VideoPlayerStore\"\nimport { Inertia } from \"@inertiajs/inertia\"\n\nexport function usePageSetup(pageName) {\n    const userStore = useUserStore()\n    const appSettingStore = useAppSettingStore()\n    const videoPlayerStore = useVideoPlayerStore()\n\n    appSettingStore.currentPage = pageName\n    appSettingStore.showFlashMessage = true\n    appSettingStore.pageIsHidden = false\n\n    if (userStore.isMobile) {\n        appSettingStore.ott = 0\n    }\n\n    videoPlayerStore.makeVideoTopRight()\n\n    onBeforeMount(() => {\n        // reload page\n        if (appSettingStore.pageReload) {\n            appSettingStore.pageReload = false\n            window.location.reload(true);\n        }\n    });\n\n    onMounted(() => {\n        // Check if the URL contains query strings\n        const hasQueryStrings = window.location.search !== '';\n\n        // Only scroll into view if there are no query strings\n        if (!hasQueryStrings) {\n            const topDiv = document.getElementById(\"topDiv\")\n            if (topDiv) {\n                topDiv.scrollIntoView()\n            }\n        }\n        // Only update if we're not already on this page to avoid overwriting with the current URL\n        appSettingStore.setPrevUrl()\n        appSettingStore.noLayout = false\n        appSettingStore.showOttButtons = true\n        // Inertia.reload()\n\n    });\n}\n","<template>\n<div>\n  <div class=\"badge bg-accent border-accent text-accent-content drop-shadow-lg badge-xs md:badge-md py-2 md:py-0\">Creators Only</div>\n</div>\n</template>\n<script setup>\n\n</script>","import { render } from \"./CreatorsOnlyBadge.vue?vue&type=template&id=4ebb6eb9\"\nconst script = {}\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div>\n    <div class=\"badge bg-yellow-500 border-yellow-500 text-black drop-shadow-lg badge-xs md:badge-md py-2 md:py-0\">New</div>\n  </div>\n</template>\n<script setup>\n\n</script>","import { render } from \"./NewContentBadge.vue?vue&type=template&id=7351f8b6\"\nconst script = {}\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import script from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"mx-4 my-4\">\n    <div class=\"alert alert-info mt-4\"\n         v-if=\"props.flash.message\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" class=\"stroke-current shrink-0 w-6 h-6\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n      </svg>\n      <span>{{ props.flash.message }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-success mt-4 mx-3\"\n         v-if=\"props.flash.success\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.success }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-warning mt-4 mx-3\"\n         v-if=\"props.flash.warning\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"/>\n      </svg>\n      <span>{{ props.flash.warning }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-error mt-4 mx-3\"\n         v-if=\"props.flash.error\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.error }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n  </div>\n\n</template>\n\n<script setup>\nimport { Inertia } from \"@inertiajs/inertia\"\nimport { computed } from \"vue\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\n\nconst appSettingStore = useAppSettingStore()\n\nappSettingStore.showFlashMessage = true\n\nlet props = defineProps({\n  flash: Object,\n\n})\n\nconst messageType = computed(() => ({\n  'text-green-700 bg-green-100 dark:bg-green-200 dark:text-green-800': props.flash.success,\n  'text-blue-700 bg-blue-100 dark:bg-blue-200 dark:text-blue-800': props.flash.message,\n  'text-orange-700 bg-orange-100 dark:bg-orange-200 dark:text-orange-800': props.flash.warning,\n  'text-red-700 bg-red-100 dark:bg-red-200 dark:text-red-800': props.flash.error,\n}))\n\nconst clearFlashMessage = async () => {\n  await Inertia.post(route('flash.clear'));\n  Inertia.reload();\n};\n</script>\n","import script from \"./Index.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Index.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <Head title=\"Shows\"/>\n\n  <div class=\"place-self-center flex flex-col gap-y-3 w-full overflow-x-hidden\">\n    <div id=\"topDiv\" class=\"bg-gray-900 text-white px-5\">\n\n      <Message v-if=\"appSettingStore.showFlashMessage\" :flash=\"$page.props.flash\"/>\n\n      <header class=\"flex justify-between mb-3 border-b border-gray-800\">\n        <div class=\"container mx-auto flex flex-col xl:flex-row items-center justify-between px-4 pb-4 md:py-6\">\n\n          <div class=\"hidden md:block flex flex-col xl:flex-row items-center\">\n            <h1 class=\"text-3xl font-semibold\">Shows</h1>\n            <ul class=\"flex md:pt-6 ml-0 xl:ml-16 mt-6 xl:mt-0 space-x-8\">\n              <li>\n                <button :href=\"``\" class=\"text-gray-700 cursor-not-allowed\">Categories</button>\n              </li>\n              <li>\n                <button :href=\"``\" @click.prevent=\"scrollToNewEpisodes\" class=\"hover:text-blue-800\">\n                  Newest Episodes\n                </button>\n              </li>\n              <li>\n                <button :href=\"``\" @click.prevent=\"scrollToComingSoon\" class=\"hover:text-blue-800\">Coming Soon</button>\n              </li>\n            </ul>\n          </div>\n          <div class=\"flex items-center mt-0 md:mt-6 xl:mt-0\">\n            <div class=\"relative\">\n              <input v-model=\"search\" type=\"search\" class=\"bg-gray-50 text-black text-md rounded-full\n                            focus:outline-none focus:shadow w-64 pl-8 px-3 py-1\" placeholder=\"Search Shows...\">\n              <div class=\"absolute top-0 flex items-center h-full ml-2\">\n                <svg class=\"fill-current text-gray-400 w-4\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n                  <path\n                      d=\"M456.69 421.39 362.6 327.3a173.81 173.81 0 0 0 34.84-104.58C397.44 126.38 319.06 48 222.72 48S48 126.38 48 222.72s78.38 174.72 174.72 174.72A173.81 173.81 0 0 0 327.3 362.6l94.09 94.09a25 25 0 0 0 35.3-35.3ZM97.92 222.72a124.8 124.8 0 1 1 124.8 124.8 124.95 124.95 0 0 1-124.8-124.8Z\"/>\n                </svg>\n\n              </div>\n            </div>\n          </div>\n        </div>\n\n      </header>\n\n      <main class=\"pb-8\">\n\n\n        <div class=\"container mx-auto px-6 border-b border-gray-800 pb-16 max-w-calc[100%-96rem]\">\n          <h2 id=\"popular-shows\" class=\"text-yellow-500 uppercase tracking-wide font-semibold text-2xl\">\n            Popular Shows</h2>\n          <div\n              class=\"popular-shows text-sm grid grid-cols-1 md:grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 md:gap-12 pb-12 justify-items-center\">\n\n            <div v-for=\"show in shows.data\"\n                 :key=\"show.id\"\n                 class=\"show mt-8 relative w-full\">\n              <div v-if=\"show.statusId === 9\" class=\"absolute flex justify-start md:justify-end w-full -mt-4 md:-mt-3 z-50\">\n                <CreatorsOnlyBadge />\n              </div>\n              <div v-if=\"show.statusId === 1\" class=\"absolute flex justify-start md:justify-end w-full -mt-4 md:-mt-3 z-50\">\n                <NewContentBadge />\n              </div>\n              <Link :href=\"`/shows/${show.slug}`\"\n                    class=\"flex flex-row md:flex-col hover:text-blue-400 hover:opacity-75 transition ease-in-out duration-150\">\n                <div class=\"relative inline-block\">\n                  <!--                                    <SingleImage :image=\"show.image\" :alt=\"'show cover'\" class=\"min-h-[24rem]  max-h-[24rem] min-w-[16rem] w-fit object-cover\"/>-->\n                  <SingleImage :image=\"show.image\" :alt=\"'show cover'\"\n                               class=\"md:h-96 md:min-w-[16rem] mr-2 md:mr-0 min-w-20 w-20 md:w-64 mb-6 object-cover lg:mb-0 m-auto lg:m-0\"/>\n                </div>\n                <div class=\"flex flex-col\">\n                  <div class=\"block md:text-xl font-semibold leading-tight md:mt-4 w-full md:max-w-[16rem]\">{{\n                      show.name\n                    }}\n                  </div>\n                  <div class=\"uppercase tracking-wider flex flex-row align-middle text-yellow-700 md:text-lg mt-1\">{{ show.category.name }}&nbsp;\n                    <div class=\"text-gray-600 text-md md:text-lg\">\n                      <span v-if=\"show.last_release_year > 0\">({{ show.last_release_year }})</span>\n                      <span v-if=\"show.first_release_year > 0 && !show.last_release_year\">({{ show.first_release_year }})</span>\n                      <span v-if=\"!show.last_release_year && !show.first_release_year\">({{ show.copyrightYear }})</span>\n                    </div>\n\n                  </div>\n                  <div class=\"tracking-wide text-yellow-500 mt-1 font-thin\">{{ show.subCategory.name }}</div>\n                </div>\n\n              </Link>\n            </div>\n\n          </div>\n          <!-- Paginator -->\n          <PaginationDark :data=\"shows\" class=\"\"/>\n        </div>\n\n        <div class=\"w-full flex flex-col xl:flex-row my-10 px-6\">\n\n          <div class=\"w-full xl:w-3/4 mr-0 md:mr-16 xl:mr-32\">\n            <h2 id=\"new-episodes\" class=\"text-yellow-500 uppercase tracking-wide font-semibold text-2xl\">\n              Newest Episodes</h2>\n            <div class=\"recently-reviewed-container space-y-12 mt-8\">\n              <div v-for=\"episode in newestEpisodes\"\n                   :key=\"episode.id\">\n\n                <Link :href=\"`/shows/${episode.showSlug}/episode/${episode.slug}`\"\n                      class=\"hover:text-blue-400 hover:opacity-75 transition ease-in-out duration-150\">\n                  <div class=\"flex flex-row bg-gray-800 rounded-lg shadow-md px-6 py-6\">\n\n                    <div class=\"relative w-48 min-w-[12rem]\">\n                      <!--                                        <img :src=\"'/storage/images/' + episode.poster\" alt=\"show cover\" class=\"h-32 md:h-64 md:min-w-[8rem] w-24 md:w-48 object-cover\">-->\n                      <SingleImage :image=\"episode.image\" :alt=\"'episode cover'\"\n                                   class=\"h-28 w-48 min-w-[12rem] object-cover bg-black\"/>\n                      <div class=\"flex flex-col mt-4 w-full\">\n                        <div class=\"uppercase tracking-wider text-yellow-700 font-semibold\">{{ episode.category.name }}</div>\n                        <div v-if=\"episode.subCategory.name\" class=\"text-yellow-500 font-thin\">{{ episode.subCategory.name }}\n                        </div>\n                      </div>\n                    </div>\n\n                    <div class=\"ml-3 block\">\n                      <!--                                            <div class=\"text-gray-400 font-light text-xs mt-1 \">Released on {{ episode.release_date }}</div>-->\n                      <!--                                    <Link :href=\"`/shows/${episode.showSlug}/episode/${episode.slug}`\" class=\"block text-lg font-semibold leading-tight hover:text-gray-400 mt-4\">-->\n                      <span class=\"text-lg font-semibold tracking-wide\">{{ episode.name }}</span>\n                      <!--                                </Link>-->\n\n                      <div class=\"flex flex-row w-full text-gray-200 font-light text-sm\">\n\n                        {{ episode.showName }}&nbsp; &bull;\n                        &nbsp;<ConvertDateTimeToTimeAgo :dateTime=\"episode.releaseDateTime\" :class=\"`text-yellow-400`\" />\n                      </div>\n\n                      <p class=\"mt-2 pr-4 text-gray-300 xl:block\">\n                        {{ episode.description }}\n                      </p>\n                    </div>\n\n                  </div>\n                </Link>\n\n\n              </div>\n\n            </div>\n          </div>\n\n          <!--                    <MostAnticipated :mostAnticipated=\"mostAnticipated\"/>-->\n          <div class=\"xl:w-1/4 mt-12 xl:mt-0 xl:ml-4 mr-8\">\n            <h2 id=\"coming-soon\" class=\"tracking-wider text-yellow-500 uppercase font-semibold mt-10 xl:mt-0 text-2xl\">\n              Coming Soon</h2>\n            <div class=\"space-y-10 mt-8\">\n\n              <div v-for=\"show in comingSoon\"\n                   :key=\"show.id\"\n                   class=\"show\">\n                <button @click=\"appSettingStore.btnRedirect(`/shows/${show.slug}`)\" class=\"flex flex-row text-left\">\n<!--                  <Link :href=\"`/shows/${show.slug}`\">-->\n                    <SingleImage :image=\"show.image\" :alt=\"'show cover'\"\n                                 class=\"h-24 min-w-[4rem] w-16 object-cover hover:opacity-75 transition ease-in-out duration-150\"/>\n\n                    <div class=\"ml-4\">\n                      <Link :href=\"`/shows/${show.slug}`\" class=\"tracking-wide hover:text-gray-300\">{{ show.name }}</Link>\n                      <div class=\"uppercase tracking-wider text-yellow-700 text-sm mt-1\">{{ show.category.name }}</div>\n                      <div class=\"tracking-wide text-yellow-500 text-sm font-thin mt-1\">{{ show.subCategory.name }}</div>\n                    </div>\n\n                </button>\n\n\n              </div>\n            </div>\n          </div>\n\n\n        </div>\n      </main>\n\n      <footer class=\"border-t border-gray-800\">\n        <div class=\"container text-right text-gray-800 mx-auto px-4 py-6\">\n          Powered by not.tv\n        </div>\n\n      </footer>\n\n    </div>\n  </div>\n\n</template>\n\n<script setup>\nimport { Inertia } from '@inertiajs/inertia'\nimport { ref, watch } from 'vue'\nimport { useTimeAgo } from '@vueuse/core'\nimport throttle from 'lodash/throttle'\nimport { usePageSetup } from '@/Utilities/PageSetup'\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\nimport MostAnticipated from '@/Components/Pages/Shows/Elements/MostAnticipated'\nimport PaginationDark from '@/Components/Global/Paginators/PaginationDark'\nimport SingleImage from '@/Components/Global/Multimedia/SingleImage'\nimport Message from '@/Components/Global/Modals/Messages'\nimport ConvertDateTimeToTimeAgo from '@/Components/Global/DateTime/ConvertDateTimeToTimeAgo.vue'\nimport CreatorsOnlyBadge from '@/Components/Global/Badges/CreatorsOnlyBadge.vue'\nimport NewContentBadge from '@/Components/Global/Badges/NewContentBadge.vue'\n\nusePageSetup('shows')\n\nconst appSettingStore = useAppSettingStore()\n\nfunction scrollToNewEpisodes() {\n  document.getElementById('new-episodes').scrollIntoView({behavior: 'smooth'})\n}\n\nfunction scrollToComingSoon() {\n  document.getElementById('coming-soon').scrollIntoView({behavior: 'smooth'})\n}\n\nfunction scrollToPopularShows() {\n  document.getElementById('popular-shows').scrollIntoView({behavior: 'smooth'})\n}\n\n// function getTimeAgoDate(date) {\n//     return TimeAgo(date).replace(/\"/g, ''); // This will remove all double quotes from the string\n// }\n\nlet props = defineProps({\n  shows: Object,\n  newestEpisodes: Object,\n  // mostAnticipated: Object,\n  comingSoon: Object,\n  filters: Object,\n  can: Object,\n\n})\n\nlet search = ref(props.filters.search)\n\nwatch(search, throttle(function (value) {\n  Inertia.get('/shows', {search: value}, {\n    preserveState: true,\n    replace: true,\n  })\n}, 300))\n\n</script>\n\n\n"],"names":["usePageSetup","pageName","userStore","useUserStore","appSettingStore","useAppSettingStore","videoPlayerStore","useVideoPlayerStore","currentPage","showFlashMessage","pageIsHidden","isMobile","ott","makeVideoTopRight","onBeforeMount","pageReload","window","location","reload","onMounted","search","topDiv","document","getElementById","scrollIntoView","setPrevUrl","noLayout","showOttButtons","_createElementVNode","class","script","_createElementBlock","_hoisted_2","props","__props","clearFlashMessage","computed","flash","success","message","warning","error","_ref","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","Inertia","post","route","stop","apply","arguments","scrollToNewEpisodes","behavior","scrollToComingSoon","ref","filters","watch","throttle","value","get","preserveState","replace"],"sourceRoot":""}
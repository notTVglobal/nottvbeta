{"version":3,"file":"js/7809.js","mappings":"0GAIWA,GAAeC,E,SAAAA,IAAY,YAAa,CAC/CC,MAAK,WACD,MAAO,CACHC,oBAAqB,GACrBC,uBAAwB,GACxBC,yBAA0B,GAElC,EAEAC,QAAS,CACL,G,sFCTR,E,kjJCAA,E,kHCSA,SAASC,EAAWC,GAChB,IAAIC,EAAWD,EAAEE,OAGbC,EAAMF,EAASG,MACfC,EAAQJ,EAASK,eACjBC,EAAMN,EAASO,aAGnBP,EAASG,MAAQD,EAAIM,UAAU,EAAGJ,GAAS,KAAOF,EAAIM,UAAUF,GAGhEN,EAASK,eAAiBL,EAASO,aAAeH,EAAQ,CAC9D,C,miBCtBA,E,6CCDA,IAAMK,GAASC,EAAAA,EAAAA,WAAS,kBAAMC,EAAAA,EAAAA,MAAUC,MAAMT,MAAMM,MAAM,IACpDI,GAAYH,EAAAA,EAAAA,WAAS,kBAAMI,OAAOC,KAAKN,EAAON,OAAOa,OAAS,CAAC,I,ozBCArE,E,+CC8CA,IAAIC,GAAY1B,EAAAA,EAAAA,KAEV2B,EAAS,IAAIC,EAAAA,GAAO,CACtBC,QAASH,EAAUrB,yBACnByB,WAAY,CACRC,EAAAA,EACAC,EAAAA,EAAUC,UAAU,CAChBC,eAAgB,CACZC,MAAO,qBAQnBC,SAAU,SAAAC,GAAgB,IAAbV,EAAMU,EAANV,OACTD,EAAUrB,yBAA2BsB,EAAOW,SAQhD,EAEAC,WAAW,EACXC,YAAa,CACTC,WAAY,CACRN,MAAO,+F,olCC5EnB,E,wEC+GIO,GAAmBC,EAAAA,EAAAA,KACnBC,GAAYC,EAAAA,EAAAA,KACZnB,GAAY1B,EAAAA,EAAAA,KAYV8C,GAAOC,EAAAA,EAAAA,IAAQ,CACjBC,GAAI3B,EAAM4B,KAAKD,GACfE,MAAO7B,EAAM4B,KAAKC,MAClBC,KAAMzB,EAAUrB,2BAId+C,EAAS,WACXN,EAAKK,KAAOzB,EAAUrB,yBACtByC,EAAKO,IAAIC,MAAM,cAAejC,EAAM4B,KAAKD,IAC7C,EAqBA,SAASO,IACL7B,EAAUrB,yBAA2B,GACrCmD,EAAAA,QAAQC,MAAMb,EAAUc,QAC5B,C,OArBAhB,EAAiBiB,YAAc,WAC/Bf,EAAUgB,kBAAmB,EAE7BlC,EAAUvB,oBAAsBkB,EAAM4B,KAAKD,GAC3CtB,EAAUtB,uBAAyBiB,EAAM4B,KAAKC,MAC9CxB,EAAUrB,yBAA2BgB,EAAM4B,KAAKpB,QAChDiB,EAAKK,KAAOzB,EAAUrB,0BAGtBwD,EAAAA,EAAAA,YAAU,WACNnB,EAAiBoB,oBACblB,EAAUmB,WACVrB,EAAiBsB,SAAW,WAC5BtB,EAAiBuB,IAAM,GAE3BC,SAASC,eAAe,UAAUC,gBACtC,I","sources":["webpack:///./resources/js/Stores/NewsStore.js","webpack:///./resources/js/Components/News/TiptapButtons.vue","webpack:///./resources/js/Components/TabbableTextarea.vue?5ddb","webpack:///./resources/js/Components/TabbableTextarea.vue","webpack:///./resources/js/Jetstream/ValidationErrors.vue?5fdc","webpack:///./resources/js/Jetstream/ValidationErrors.vue","webpack:///./resources/js/Components/TextEditor/TiptapNewsPostEdit.vue?cc0c","webpack:///./resources/js/Components/TextEditor/TiptapNewsPostEdit.vue","webpack:///./resources/js/Pages/News/{$id}/Edit.vue?6454","webpack:///./resources/js/Pages/News/{$id}/Edit.vue"],"sourcesContent":["import { defineStore } from \"pinia\";\n\n\n\nexport let useNewsStore = defineStore('newsStore', {\n    state() {\n        return {\n            newsArticleIdTiptop: '',\n            newsArticleTitleTiptop: '',\n            newsArticleContentTiptop: [],\n        };\n    },\n\n    actions: {\n        //\n    },\n\n})\n","import script from \"./TiptapButtons.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TiptapButtons.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./TabbableTextarea.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TabbableTextarea.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <textarea\n        @keydown.tab.prevent=\"onTabPress\"\n        @keyup=\"emit('update:modelValue', $event.target.value)\"\n        v-text=\"modelValue\" />\n</template>\n\n<script setup>\ndefineProps ({\n    modelValue: String\n});\n\nlet emit = defineEmits(['update:modelValue']);\n\nfunction onTabPress(e) {\n    let textarea = e.target;\n\n    // get caret position/selection\n    let val = textarea.value,\n        start = textarea.selectionStart,\n        end = textarea.selectionEnd;\n\n    // set textarea value to: text before caret + tab + text after caret\n    textarea.value = val.substring(0, start) + \"\\t\" + val.substring(end);\n\n    // put caret at right position again\n    textarea.selectionStart = textarea.selectionEnd = start + 1;\n}\n\n</script>\n","import script from \"./ValidationErrors.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ValidationErrors.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { computed } from 'vue';\nimport { usePage } from '@inertiajs/inertia-vue3';\n\nconst errors = computed(() => usePage().props.value.errors);\nconst hasErrors = computed(() => Object.keys(errors.value).length > 0);\n</script>\n\n<template>\n    <div v-if=\"hasErrors\">\n        <div class=\"font-medium text-red-600\">\n            Whoops! Something went wrong.\n        </div>\n\n        <ul class=\"mt-3 list-disc list-inside text-sm text-red-600\">\n            <li v-for=\"(error, key) in errors\" :key=\"key\">\n                {{ error }}\n            </li>\n        </ul>\n    </div>\n</template>\n","import script from \"./TiptapNewsPostEdit.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TiptapNewsPostEdit.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <TiptapButtons :editor=\"editor\"/>\n<!--    <button-->\n<!--        @click=\"editor.chain().focus().undo().run()\"-->\n<!--        :disabled=\"!editor.can().undo()\"-->\n<!--    >-->\n<!--        undo-->\n<!--    </button>-->\n<!--    <button-->\n<!--        @click=\"editor.chain().focus().redo().run()\"-->\n<!--        :disabled=\"!editor.can().redo()\"-->\n<!--    >-->\n<!--        redo-->\n<!--    </button>-->\n<!--    <button @click.prevent=\"editor.chain().focus().toggleBulletList().run()\"  class=\"ProseMirror py-1 px-3 ml-2 mb-2 bg-gray-200 rounded-lg\">-->\n<!--        Bullets-->\n<!--    </button>-->\n<!--    <button @click.prevent=\"editor.chain().focus().toggleList().run()\" class=\"py-1 px-3 ml-2 mb-2 bg-gray-200 rounded-lg\">-->\n<!--        List-->\n<!--    </button>-->\n<!--    <button @click.prevent=\"editor.chain().focus().toggleBlockquote().run()\" class=\"py-1 px-3 ml-2 mb-2 bg-gray-200 rounded-lg\">-->\n<!--        Block-->\n<!--    </button>-->\n<!--    <button @click.prevent=\"editor.chain().focus().toggleCode().run()\" class=\"py-1 px-3 ml-2 mb-2 bg-gray-200 rounded-lg\">-->\n<!--        Code-->\n<!--    </button>-->\n<!--    <tabbable-textarea :editor=\"editor\" class=\"element\" />-->\n\n    <div class=\"h-auto overflow-y-auto min-h-[13rem] max-h-[96rem] mb-2 pb-2 bg-gray-50 border border-1 border-gray-300 focus:outline-none text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 \">\n        <editor-content :editor=\"editor\" class=\"\"/>\n    </div>\n</template>\n\n<script setup>\nimport {useNewsStore} from \"@/Stores/NewsStore\"\nimport { Editor, EditorContent } from '@tiptap/vue-3'\nimport StarterKit from '@tiptap/starter-kit'\nimport Document from '@tiptap/extension-document'\nimport Paragraph from '@tiptap/extension-paragraph'\nimport Text from '@tiptap/extension-text'\nimport HardBreak from '@tiptap/extension-hard-break'\n// import {History} from \"@tiptap/extension-history\";\n// import {BulletList} from \"@tiptap/extension-bullet-list\";\nimport {ListItem} from \"@tiptap/extension-list-item\";\n// import {onBeforeUnmount} from \"vue\";\nimport {Inertia} from \"@inertiajs/inertia\";\nimport throttle from \"lodash/throttle\"\nimport axios from \"axios\";\nimport TabbableTextarea from \"@/Components/TabbableTextarea.vue\";\nimport TiptapButtons from \"@/Components/News/TiptapButtons.vue\";\n\nlet newsStore = useNewsStore();\n\nconst editor = new Editor({\n    content: newsStore.newsArticleContentTiptop,\n    extensions: [\n        StarterKit,\n        Paragraph.configure({\n            HTMLAttributes: {\n                class: 'news-paragraph',\n            },\n        }),\n    ],\n\n\n\n\n    onUpdate: ({ editor }) => {\n        newsStore.newsArticleContentTiptop = editor.getHTML()\n        // newsStore.newsArticleContentTiptop = editor.getJSON()\n        // const value = editor.getJSON()\n\n        // Auto-save -> triggered on every change,\n        // currently disabled. Needs to be throttled.\n        //\n        // axios.post('/news/save', { id: newsStore.newsArticleIdTiptop, body:newsStore.newsArticleContentTiptop, title:newsStore.newsArticleTitleTiptop })\n    },\n\n    autofocus: true,\n    editorProps: {\n        attributes: {\n            class: 'h-auto min-h-[12rem] max-h-[96rem] overflow-y-auto block w-full p-2.5 focus:outline-none'\n        }\n    }\n})\n\n// editor.commands.setContent({\n//     \"type\": \"doc\",\n//     \"content\": newsStore.newsArticleTiptop,\n// })\n\n// const json = editor.getJSON()\n// newsStore.newsArticleTiptop = editor.getHTML()\n\n\n// onBeforeUnmount(() => {\n//     // this isn't working, I think it's\n//     // needed for the history extension.\n//     editor.destroy()\n// })\n\n// History.configure({\n//     depth: 10,\n// })\n\n</script>\n\n<style scoped>\n\n</style>\n","import script from \"./Edit.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Edit.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n\n    <Head title=\"Edit News Post\" />\n\n    <div class=\"place-self-center flex flex-col gap-y-3\">\n        <div id=\"topDiv\" class=\"bg-white text-black dark:bg-gray-800 dark:text-gray-50 p-5 mb-10\">\n\n            <Message v-if=\"userStore.showFlashMessage\" :flash=\"$page.props.flash\"/>\n\n            <div class=\"flex flex-row justify-between mt-6\">\n                <h2 class=\"text-xl font-semibold leading-tight\">\n                    Edit News Post\n                </h2>\n                <div class=\"flex justify-end space-x-2\">\n                    <div>\n                        <button\n                            v-if=\"props.can.viewNewsroom\"\n                            @click=\"userStore.btnRedirect(`/newsroom`)\"\n                            class=\"px-4 py-2 text-white bg-yellow-600 hover:bg-yellow-500 rounded-lg disabled:bg-gray-400\"\n\n                        >Newsroom</button>\n                    </div>\n                    <div>\n                        <button\n                            @click=\"back\"\n                            class=\"px-4 py-2 text-white bg-orange-600 hover:bg-orange-500 rounded-lg\"\n                        >Cancel\n                        </button>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"p-6 border-b border-gray-200\">\n                <form @submit.prevent=\"submit\">\n                    <div class=\"mb-6\">\n                        <label\n                            for=\"Title\"\n                            class=\"block mb-2 text-sm font-bold text-gray-900 dark:text-gray-300\"\n                        >Title</label\n                        >\n                        <input\n                            type=\"text\"\n                            v-model=\"form.title\"\n                            name=\"title\"\n                            class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\"\n                            placeholder=\"\"\n                        />\n                        <div\n                            v-if=\"form.errors.title\"\n                            class=\"text-sm text-red-600\"\n                        >\n                            {{ form.errors.title }}\n                        </div>\n                    </div>\n                    <div class=\"mb-6\">\n                        <label\n                            for=\"slug\"\n                            class=\"block mb-2 text-sm font-bold text-gray-900 dark:text-gray-300\"\n                        >Content</label>\n                        <tiptap v-if=\"videoPlayerStore.currentPage === 'newsEdit'\" />\n<!--                        <tabbable-textarea-->\n<!--                            type=\"text\"-->\n<!--                            v-model=\"form.content\"-->\n<!--                            name=\"content\"-->\n<!--                            id=\"\"-->\n<!--                            rows=10-->\n<!--                            class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\"-->\n<!--                        ></tabbable-textarea>-->\n\n                        <div\n                            v-if=\"form.errors.body\"\n                            class=\"text-sm text-red-600\"\n                        >\n                            {{ form.errors.body }}\n                        </div>\n                    </div>\n                    <div class=\" flex justify-start\">\n                        <button\n                            type=\"submit\"\n                            class=\"text-white bg-blue-700 hover:bg-blue-500 focus:outline-none  font-medium rounded-lg text-sm px-5 py-2.5 \"\n                            :disabled=\"form.processing\"\n                            :class=\"{ 'opacity-25': form.processing }\"\n                        >\n                            Save\n                        </button>\n                        <JetValidationErrors class=\"ml-4\" />\n                    </div>\n<!--                    <Link :href=\"`/news/${news.slug}`\"><button-->\n<!--                        class=\"ml-2 px-4 py-2 text-white bg-blue-500 hover:bg-blue-300 rounded-lg\"-->\n<!--                    >Cancel</button>-->\n<!--                    </Link>-->\n<!--                    <Link :href=\"`/news/${news.slug}`\"><button-->\n<!--                        class=\"text-white bg-blue-700 hover:bg-blue-500 focus:outline-none font-medium rounded-lg text-sm px-5 py-2.5 \"-->\n<!--                    >Save</button>-->\n<!--                    </Link>-->\n                </form>\n            </div>\n\n        </div>\n\n    </div>\n\n</template>\n\n<script setup>\nimport { onBeforeMount, onMounted, ref } from \"vue\";\nimport {useForm, usePage} from '@inertiajs/inertia-vue3'\nimport { useVideoPlayerStore } from \"@/Stores/VideoPlayerStore.js\"\nimport { useUserStore } from \"@/Stores/UserStore\";\nimport { useNewsStore } from \"@/Stores/NewsStore\"\nimport JetValidationErrors from '@/Jetstream/ValidationErrors.vue';\n// import TabbableTextarea from \"@/Components/TabbableTextarea.vue\";\nimport Tiptap from \"@/Components/TextEditor/TiptapNewsPostEdit.vue\";\nimport Message from \"@/Components/Modals/Messages\";\nimport {Inertia} from \"@inertiajs/inertia\";\n\nlet videoPlayerStore = useVideoPlayerStore()\nlet userStore = useUserStore()\nlet newsStore = useNewsStore()\n\nconst props = defineProps({\n    news: Object,\n    can: Object,\n});\n\n// note: as of March 2023 the form submission cannot use \"content\" as\n// a form field name. It conflicts with the HTMLRequest content item.\n// Our news post content is called content in the database, but it is\n// now called body in our form submission back to Laravel.\n//\nconst form = useForm({\n    id: props.news.id,\n    title: props.news.title,\n    body: newsStore.newsArticleContentTiptop,\n    // content: newsStore.newsArticleContentTiptop,\n});\n\nconst submit = () => {\n    form.body = newsStore.newsArticleContentTiptop;\n    form.put(route(\"news.update\", props.news.id));\n};\n\n\nvideoPlayerStore.currentPage = 'newsEdit'\nuserStore.showFlashMessage = true;\n\nnewsStore.newsArticleIdTiptop = props.news.id;\nnewsStore.newsArticleTitleTiptop = props.news.title;\nnewsStore.newsArticleContentTiptop = props.news.content;\nform.body = newsStore.newsArticleContentTiptop;\n// form.content = newsStore.newsArticleContentTiptop;\n\nonMounted(() => {\n    videoPlayerStore.makeVideoTopRight();\n    if (userStore.isMobile) {\n        videoPlayerStore.ottClass = 'ottClose'\n        videoPlayerStore.ott = 0\n    }\n    document.getElementById(\"topDiv\").scrollIntoView()\n});\n\nfunction back() {\n    newsStore.newsArticleContentTiptop = '';\n    Inertia.visit(userStore.prevUrl)\n}\n\n</script>\n"],"names":["useNewsStore","defineStore","state","newsArticleIdTiptop","newsArticleTitleTiptop","newsArticleContentTiptop","actions","onTabPress","e","textarea","target","val","value","start","selectionStart","end","selectionEnd","substring","errors","computed","usePage","props","hasErrors","Object","keys","length","newsStore","editor","Editor","content","extensions","StarterKit","Paragraph","configure","HTMLAttributes","class","onUpdate","_ref","getHTML","autofocus","editorProps","attributes","videoPlayerStore","useVideoPlayerStore","userStore","useUserStore","form","useForm","id","news","title","body","submit","put","route","back","Inertia","visit","prevUrl","currentPage","showFlashMessage","onMounted","makeVideoTopRight","isMobile","ottClass","ott","document","getElementById","scrollIntoView"],"sourceRoot":""}
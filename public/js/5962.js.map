{"version":3,"file":"js/5962.js","mappings":"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","sources":["webpack:///./resources/js/Stores/AdminStore.js","webpack:///./resources/js/Utilities/TimeUtils.js","webpack:///./resources/js/Stores/ScheduleStore.js","webpack:///./resources/js/Utilities/PageSetup.js","webpack:///./resources/js/Components/Global/Calendar/MonthView.vue?59eb","webpack:///./resources/js/Components/Global/Calendar/ThreeDayView.vue?efc6","webpack:///./resources/js/Components/Global/Calendar/TodayView.vue?9920","webpack:///./resources/js/Components/Global/Calendar/WeekView.vue?3b61","webpack:///./resources/js/Components/Pages/Admin/Channels/SourceSelector.vue?beba","webpack:///./resources/js/Pages/Admin/Schedule/Index.vue?7327","webpack:///./resources/js/Components/Global/Calendar/TodayView.vue","webpack:///./resources/js/Components/Global/Calendar/TodayView.vue?9ee3","webpack:///./resources/js/Components/Global/Calendar/TodayView.vue?ee4f","webpack:///./resources/js/Components/Global/MistStreams/AddOrUpdateMistStreamModal.vue?ba39","webpack:///./resources/js/Components/Global/MistStreams/AddOrUpdateMistStreamModal.vue","webpack:///./resources/js/Components/Global/Modals/Messages.vue?dfe9","webpack:///./resources/js/Components/Global/Modals/Messages.vue","webpack:///./resources/js/Components/Global/Paginators/Pagination.vue?0305","webpack:///./resources/js/Components/Global/Paginators/Pagination.vue","webpack:///./resources/js/Components/Pages/Admin/AdminHeader.vue?239a","webpack:///./resources/js/Components/Pages/Admin/AdminHeader.vue","webpack:///./resources/js/Components/Pages/Admin/Channels/DynamicModal.vue?a432","webpack:///./resources/js/Components/Pages/Admin/Channels/DynamicModal.vue","webpack:///./resources/js/Components/Pages/Admin/Channels/SourceSelector.vue","webpack:///./resources/js/Components/Pages/Admin/Channels/SourceSelector.vue?93c4","webpack:///./resources/js/Components/Pages/Admin/Channels/SourceSelector.vue?98e8","webpack:///./resources/js/Jetstream/Label.vue","webpack:///./resources/js/Components/Global/Calendar/MonthView.vue","webpack:///./resources/js/Components/Global/Calendar/MonthView.vue?1158","webpack:///./resources/js/Components/Global/Calendar/MonthView.vue?bbfc","webpack:///./resources/js/Components/Global/Calendar/WeekView.vue?66b0","webpack:///./resources/js/Components/Global/Calendar/WeekView.vue","webpack:///./resources/js/Components/Global/Calendar/ThreeDayView.vue?cf08","webpack:///./resources/js/Components/Global/Calendar/ThreeDayView.vue","webpack:///./resources/js/Pages/Admin/Schedule/Index.vue","webpack:///./resources/js/Pages/Admin/Schedule/Index.vue?3222","webpack:///./resources/js/Pages/Admin/Schedule/Index.vue?a503"],"sourcesContent":["import { defineStore } from 'pinia'\nimport { useNotificationStore } from '@/Stores/NotificationStore'\nimport { useVideoPlayerStore } from '@/Stores/VideoPlayerStore'\n\nconst initialState = () => ({\n    channels: [], // For Admin Channels page\n    items: [], // for Admin Channels DynamicModal... ExternalSource, ChannelPlaylist, MistStream\n    activeItemId: null,\n    selectedChannel: null, // The currently active item\n    currentType: '', // 'externalSource', 'channelPlaylist', 'mistStream'\n    searchTerm: '',\n    type: '',\n    modalHeader: '',\n    currentPage: 1,\n    itemsPerPage: 10,\n    currentChannelsPage: 1,\n    itemsPerChannelsPage: 7,\n    sourceSelector: {\n        source: null,\n        sourceType: null\n    },\n    firstPlaySettings: {\n        useCustomVideo: false,\n        customVideoSource: '',\n        customVideoSourceType: '',\n    },\n    validationErrors: {},\n    checkSendProcessing: false,\n    activeStreams: [],\n    fetchingActiveStreams: false,\n    settingsForm: {\n        subscriptionSettings: {\n            monthly: {\n                price: '',\n                api_id: ''\n            },\n            yearly: {\n                price: '',\n                api_id: ''\n            }\n        },\n    }\n})\n\nexport const useAdminStore = defineStore('adminStore', {\n    state: initialState,\n    actions: {\n        reset() {\n            // Reset the store to its original state (clear all data)\n            Object.assign(this, initialState())\n        },\n\n        loadChannels(channels) {\n            this.channels = channels\n        },\n        setCheckSendProcessing() {\n          this.checkSendProcessing = true\n        },\n        unsetCheckSendProcessing() {\n            this.checkSendProcessing = false\n        },\n        async fetchChannels() {\n            await axios.get('/api/channels_list')\n                .then(response => {\n                    this.channels = response.data\n                })\n                .catch(error => {\n                    console.log(error)\n                })\n        },\n        async toggleChannelActiveStatus(channelId) {\n            const notificationStore = useNotificationStore();\n            try {\n                const response = await axios.post('/admin/channels/' + channelId + '/toggleChannelActive');\n                // Extract message and status from the response\n                const { message, status } = response.data;\n                // Use the status from the response for the notification\n                notificationStore.setToastNotification(message, status);\n            } catch (error) {\n                console.error(error);\n                notificationStore.setToastNotification('Failed to toggle channel status.', 'error');\n            }\n        },\n        async addChannel(name) {\n            const notificationStore = useNotificationStore();\n            try {\n                const response = await axios.post('/admin/channels/add', {'name': name});\n\n                if (response.data.success) {\n                    // Operation was a success\n                    await this.fetchChannels();\n                    notificationStore.setToastNotification(response.data.message, 'success');\n                } else {\n                    // Handle logical errors even when the HTTP response was OK\n                    // Assuming 'status' and 'message' are part of the error response\n                    const { message, status } = response.data;\n                    let errorMessage = 'Failed to add channel due to a server error.';\n\n                    if (status === 'error' && message && message.fallbackMessages) {\n                        // Construct a more detailed error message based on validation feedback\n                        const validationMessages = Object.values(message.fallbackMessages)\n                            .map(msgs => msgs.join(' ')) // Join messages if there are multiple for one field\n                            .join('; '); // Separate field messages with semicolons\n\n                        errorMessage = validationMessages || errorMessage;\n                    }\n\n                    notificationStore.setToastNotification(errorMessage, 'error');\n                }\n            } catch (error) {\n                console.error(error);\n                notificationStore.setToastNotification('Failed to add channel due to a network or server error.', 'error');\n            }\n        },\n        async updateChannel(channelId, newName) {\n            const notificationStore = useNotificationStore();\n            try {\n                const response = await axios.post(`/admin/channels/${channelId}`, {'name': newName});\n\n                if (response.data.success) {\n                    // Operation was a success\n                    await this.fetchChannels();\n                    notificationStore.setToastNotification(response.data.message, 'success');\n                } else {\n                    // Handle logical errors even when the HTTP response was OK\n                    // Assuming 'status' and 'message' are part of the error response\n                    const { message, status } = response.data;\n                    let errorMessage = 'Failed to add channel due to a server error.';\n\n                    if (status === 'error' && message && message.fallbackMessages) {\n                        // Construct a more detailed error message based on validation feedback\n                        const validationMessages = Object.values(message.fallbackMessages)\n                            .map(msgs => msgs.join(' ')) // Join messages if there are multiple for one field\n                            .join('; '); // Separate field messages with semicolons\n\n                        errorMessage = validationMessages || errorMessage;\n                    }\n\n                    notificationStore.setToastNotification(errorMessage, 'error');\n                }\n            } catch (error) {\n                console.error(error);\n                notificationStore.setToastNotification('Failed to add channel due to a network or server error.', 'error');\n            }\n        },\n        setSelectedChannel(item) {\n            this.selectedChannel = item\n        },\n        setCurrentType(type) {\n            this.currentType = type\n            this.modalHeader = type + ' list'\n        },\n        clearSelectedChannelAndItems() {\n            this.selectedChannel = null\n            this.items = []\n            this.activeItemId = null\n            this.currentType = ''\n            this.modalHeader = ''\n            this.currentPage = 1\n            this.itemsPerPage = 10\n            this.searchTerm = ''\n        },\n        // async searchItems(type, searchTerm = '') {\n        //     this.currentType = type;\n        //     this.searchTerm = searchTerm;\n        //     // Assuming you have a function to perform the fetch; adjust accordingly\n        //     const response = await fetch(`/admin/channels/search/${type}?search=${searchTerm}`);\n        //     const data = await response.json();\n        //     this.items = data.items;\n        // },\n        async fetchItems(type) {\n            this.currentType = type\n            if (this.currentType === 'mistStream') {\n                // retrieve all mistStreams paginated.\n                // Can Vue search through the items?\n                const response = await fetch(`/mistStreams`)\n                this.items = await response.json()\n                if (this.selectedChannel.mist_stream_id) {\n                    this.activeItemId = this.selectedChannel.mist_stream_id\n                }\n            } else if (this.currentType === 'externalSource') {\n                // retrieve all externalSources\n                const response = await fetch(`/externalSources`)\n                this.items = await response.json()\n                if (this.selectedChannel.channel_external_source_id) {\n                    this.activeItemId = this.selectedChannel.channel_external_source_id\n                }\n            } else if (this.currentType === 'channelPlaylist') {\n                // retrieve all channelPlaylists\n                const response = await fetch(`/channelPlaylists`)\n                this.items = await response.json()\n                if (this.selectedChannel.channel_playlist_id) {\n                    this.activeItemId = this.selectedChannel.channel_playlist_id\n                }\n            }\n            // Assuming you have a function to perform the fetch; adjust accordingly\n            // const response = await fetch(`/admin/channels/search/${type}?search=${searchTerm}`);\n            // const data = await response.json();\n            // this.items = data.items;\n        },\n        async updateActiveItemId(id) {\n            this.activeItemId = id\n            if (this.currentType === 'mistStream') {\n                await this.setMistStream(this.selectedChannel, id)\n            } else if (this.currentType === 'channelPlaylist') {\n                await this.setChannelPlaylist(this.selectedChannel, id)\n            } else if (this.currentType === 'externalSource') {\n                await this.setExternalSource(this.selectedChannel, id)\n            }\n        },\n        // Add more actions as needed\n        // this next one should probably go in AdminChannelStore\n        async setPlaybackPriorityType(channel, priorityType) {\n            const dataToSend = {setPriorityType: priorityType}\n            try {\n                const response = await axios.post(`/admin/channels/${channel.id}/setPlaybackPriorityType`, dataToSend)\n                if (response.data.success) {\n                    this.fetchChannels()\n                    // Find the index of the updated channel in the channels array\n                    const index = this.channels.findIndex(c => c.id === channel.id)\n                    if (index !== -1) {\n                        // Update the channel in the channels array with the updated data\n                        this.channels[index] = response.data.channel\n                    }\n                }\n            } catch (error) {\n                console.error(error)\n            }\n        },\n        async setMistStream(channel, mistStreamId) {\n            const dataToSend = {mistStreamId: mistStreamId}\n            try {\n                const response = await axios.post(`/admin/channels/${channel.id}/setMistStream`, dataToSend)\n                if (response.data.success) {\n                    this.fetchChannels()\n                    // Find the index of the updated channel in the channels array\n                    const index = this.channels.findIndex(c => c.id === channel.id)\n                    if (index !== -1) {\n                        // Update the channel in the channels array with the updated data\n                        this.channels[index] = response.data.channel\n                    }\n                }\n            } catch (error) {\n                console.error(error)\n            }\n        },\n        async setChannelPlaylist(channel, channelPlaylistId) {\n            const dataToSend = {channelPlaylistId: channelPlaylistId}\n            try {\n                const response = await axios.post(`/admin/channels/${channel.id}/setChannelPlaylist`, dataToSend)\n                if (response.data.success) {\n                    this.fetchChannels()\n                    // Find the index of the updated channel in the channels array\n                    const index = this.channels.findIndex(c => c.id === channel.id)\n                    if (index !== -1) {\n                        // Update the channel in the channels array with the updated data\n                        this.channels[index] = response.data.channel\n                    }\n                }\n            } catch (error) {\n                console.error(error)\n            }\n        },\n        async setExternalSource(channel, externalSourceId) {\n            const dataToSend = {mistStreamId: externalSourceId}\n            try {\n                const response = await axios.post(`/admin/channels/${channel.id}/setExternalSource`, dataToSend)\n                if (response.data.success) {\n                    this.fetchChannels()\n                    // Find the index of the updated channel in the channels array\n                    const index = this.channels.findIndex(c => c.id === channel.id)\n                    if (index !== -1) {\n                        // Update the channel in the channels array with the updated data\n                        this.channels[index] = response.data.channel\n                    }\n                }\n            } catch (error) {\n                console.error(error)\n            }\n        },\n        nextPage() {\n            const totalModalPages = Math.ceil(this.items.length / this.itemsPerPage)\n            if (this.currentPage < totalModalPages) this.currentPage++\n        },\n        prevPage() {\n            if (this.currentPage > 1) this.currentPage--\n        },\n        setPage(page) {\n            this.currentPage = page\n        },\n        nextChannelsPage() {\n            const totalModalPages = Math.ceil(this.channels.length / this.itemsPerChannelsPage)\n            if (this.currentChannelsPage < totalModalPages) this.currentChannelsPage++\n        },\n        prevChannelsPage() {\n            if (this.currentChannelsPage > 1) this.currentChannelsPage--\n        },\n        setChannelsPage(page) {\n            this.currentChannelsPage = page\n        },\n        ////// FIRST PLAY SETTINGS\n        /////////////////////////// admin/update-first-play-settings\n        async fetchFirstPlaySettings() {\n            const notificationStore = useNotificationStore();\n            try {\n                const response = await axios.post(`/admin/fetch-first-play-settings`);\n                if (response.data.success) {\n                    // Operation was a success\n                    this.firstPlaySettings = response.data.firstPlaySettings\n                    notificationStore.setToastNotification(response.data.message, 'success', 1500);\n                } else {\n                    // Handle logical errors even when the HTTP response was OK\n                    // Assuming 'status' and 'message' are part of the error response\n                    const { message, status } = response.data;\n                    let errorMessage = 'Failed to fetch First Play Settings due to a server error.';\n\n                    if (status === 'error' && message && message.fallbackMessages) {\n                        // Construct a more detailed error message based on validation feedback\n                        const validationMessages = Object.values(message.fallbackMessages)\n                            .map(msgs => msgs.join(' ')) // Join messages if there are multiple for one field\n                            .join('; '); // Separate field messages with semicolons\n\n                        errorMessage = validationMessages || errorMessage;\n                    }\n\n                    notificationStore.setToastNotification(errorMessage, 'error');\n                }\n            } catch (error) {\n                console.error(error);\n                notificationStore.setToastNotification('Failed to fetch First Play Settings due to a network or server error.', 'error');\n            }\n        },\n        async updateFirstPlaySettings() {\n            const notificationStore = useNotificationStore();\n\n            try {\n                const response = await axios.patch('/admin/update-first-play-settings', this.firstPlaySettings);\n\n                if (response.data.success) {\n                    // Operation was a success\n                    this.firstPlaySettings = response.data.firstPlaySettings;\n                    this.validationErrors = {}; // Clear any existing validation errors\n                    notificationStore.setToastNotification(response.data.message, 'success', 1500);\n                }\n                else if (!response.data.success) {\n                    // This block might not be necessary if your server correctly uses HTTP status codes for errors\n                    this.validationErrors = response.data.errors || {};\n                    notificationStore.setToastNotification(response.data.message, 'error');\n                     // Exit early since we've handled the error case\n                }\n            } catch (error) {\n                // Properly handle the error response\n                if (error.response && error.response.data) {\n                    // Server responded with a non-2xx status code\n                    console.log(\"Error response data:\", error.response.data);\n                    this.validationErrors = error.response.data.errors || {};\n                    const errorMessage = error.response.data.message || 'Failed to save First Play Settings due to a network or server error.';\n                    notificationStore.setToastNotification(errorMessage, 'error');\n                } else {\n                    // The request was made but no response was received or other errors occurred\n                    notificationStore.setToastNotification('Failed to save First Play Settings due to a network or server error.', 'error');\n                }\n            }\n        },\n        handleErrors(data) {\n            const notificationStore = useNotificationStore();\n            let errorMessage = 'Failed to save First Play Settings due to a server error.';\n\n            if (data.status === 'error') {\n                if (data.errors) {\n                    // Directly use the validation errors from the server response\n                    this.validationErrors = data.errors;\n                    errorMessage = \"Please check your input.\";\n                } else if (data.message) {\n                    // Use the message provided by the server as the error message\n                    errorMessage = data.message;\n                }\n\n                notificationStore.setToastNotification(errorMessage, 'error');\n            }\n        },\n        async fetchActiveStreams() {\n            const notificationStore = useNotificationStore();\n            this.fetchingActiveStreams = true\n            try {\n                const response = await axios.post(`/admin/fetch-active-streams`);\n                if (response.data.success) {\n                    // Operation was a success\n                    this.activeStreams = response.data.activeStreams\n                    notificationStore.setToastNotification(response.data.message, 'success', 1500);\n                    this.fetchingActiveStreams = false\n                } else {\n                    // Handle logical errors even when the HTTP response was OK\n                    // Assuming 'status' and 'message' are part of the error response\n                    const { message, status } = response.data;\n                    let errorMessage = 'Failed to fetch active streams due to a server error.';\n\n                    if (status === 'error' && message && message.fallbackMessages) {\n                        // Construct a more detailed error message based on validation feedback\n                        const validationMessages = Object.values(message.fallbackMessages)\n                            .map(msgs => msgs.join(' ')) // Join messages if there are multiple for one field\n                            .join('; '); // Separate field messages with semicolons\n\n                        errorMessage = validationMessages || errorMessage;\n                    }\n\n                    notificationStore.setToastNotification(errorMessage, 'error');\n                    this.fetchingActiveStreams = false\n                }\n            } catch (error) {\n                console.error(error);\n                notificationStore.setToastNotification('Failed to fetch Active Streams due to a network or server error.', 'error');\n                this.fetchingActiveStreams = false\n            }\n        },\n        async setActiveStreamAsFirstPlay(activeStream) {\n            const videoPlayerStore = useVideoPlayerStore();\n            if (activeStream === 'test') {\n                this.firstPlaySettings.customVideoSource = videoPlayerStore.mistServerUri + 'hls/test/index.m3u8'\n                this.firstPlaySettings.customVideoSourceType = 'application/x-mpegURL'\n                this.firstPlaySettings.customVideoName = 'Test Stream'\n                this.firstPlaySettings.customMediaType = 'firstPlay'\n            } else {\n                // axios.post save firstPlaySettings and broadcast an event.\n                // this.\n                // showName, streamName, streamMimeType\n                this.firstPlaySettings.customVideoSource = videoPlayerStore.mistServerUri + 'hls/' + activeStream.streamName + '/index.m3u8'\n                this.firstPlaySettings.customVideoSourceType = activeStream.streamMimeType\n                this.firstPlaySettings.customVideoName = activeStream.showName\n                this.firstPlaySettings.customMediaType = 'firstPlay'\n            }\n            await this.updateFirstPlaySettings()\n            // broadcast\n            // source\n            // mediaType\n            // type\n            // name\n\n        }\n    },\n\n    // Getters (if needed)\n    getters: {\n        filteredItems: (state) => state.items, // Placeholder, adjust if you need actual filtering\n        currentItem: (state) => state.items.find((item) => item.id === state.activeItem),\n        // setHeader: (state) => state.modalHeader = state.currentType + ' list',\n        paginatedItems: (state) => {\n            const start = (state.currentPage - 1) * state.itemsPerPage\n            const end = start + state.itemsPerPage\n            return state.items.slice(start, end)\n        },\n        paginatedChannels: (state) => {\n            const start = (state.currentChannelsPage - 1) * state.itemsPerChannelsPage\n            const end = start + state.itemsPerChannelsPage\n            return state.channels.slice(start, end)\n        },\n        totalModalPages(state) {\n            return Math.ceil(state.items.length / state.itemsPerPage)\n        },\n        totalChannelsPages(state) {\n            return Math.ceil(state.channels.length / state.itemsPerChannelsPage)\n        },\n        // Getter to count active channels\n        activeChannelsCount: (state) => {\n            // Use Array.prototype.filter to keep only items with 'active' true,\n            // then use the length property to get the count\n            return state.channels.filter(channel => channel.active).length;\n        },\n    },\n})\n","// utilities/timeUtils.js\nimport dayjs from 'dayjs';\nimport utc from 'dayjs/plugin/utc';\nimport timezone from 'dayjs/plugin/timezone';\n\ndayjs.extend(utc);\ndayjs.extend(timezone);\n\n/**\n * Creates an array of Date objects representing time slots.\n *\n * This function generates a sequence of time slots starting from a specified\n * start time, continuing for a given number of hours, and spaced apart\n * by a specified interval in minutes.\n *\n * @param {Date} start - The start time from which to generate slots, as a Date object.\n * @param {number} [durationHours=4] - The total duration for which to generate slots, in hours.\n * @param {number} [intervalMinutes=30] - The interval between each slot, in minutes.\n * @param {string} timezone - The timezone in which the time slots will be calculated.\n * @returns {Date[]} An array of Date objects, each representing a time slot.\n *\n * Example:\n * If start is `new Date('2024-01-01T08:00:00Z')`, durationHours is 2, and intervalMinutes is 30,\n * the output will be an array of Date objects representing the times:\n * `08:00`, `08:30`, `09:00`, and `09:30`.\n */\nexport function createTimeSlots(start, durationHours = 4, intervalMinutes = 30, timezone) {\n    // console.log(`Creating time slots starting from ${start}, for ${durationHours} hours, every ${intervalMinutes} minutes in timezone ${timezone}.`);\n    let slots = [];\n    let startTime = dayjs(start).tz(timezone);  // Convert start time to the correct time zone\n    for (let i = 0; i < (durationHours * 60) / intervalMinutes; i++) {\n        let slotTime = startTime.add(i * intervalMinutes, 'minute').toDate();  // Generate slots in the correct time zone\n        slots.push(slotTime);  // Keep as Date object\n    }\n    return slots;\n}\n// export function createTimeSlots(start, durationHours = 4, intervalMinutes = 30) {\n//     let slots = [];\n//     let startTime = dayjs(start).tz(userStore.timezone);  // Convert start time to the correct time zone\n//     for (let i = 0; i < (durationHours * 60) / intervalMinutes; i++) {\n//         let slotTime = new Date(start.getTime() + i * intervalMinutes * 60000);\n//         slots.push(slotTime);  // Keep as Date object\n//     }\n//     return slots;\n// }","import { defineStore } from 'pinia'\nimport { useUserStore } from '@/Stores/UserStore'\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\nimport { createTimeSlots } from '@/Utilities/TimeUtils'\nimport {\n    format,\n    isToday,\n    isTomorrow,\n    isYesterday,\n    startOfDay,\n} from 'date-fns'\n\n// Import dayjs and its plugins\nimport dayjs from 'dayjs'\nimport isSameOrAfter from 'dayjs/plugin/isSameOrAfter'\nimport isSameOrBefore from 'dayjs/plugin/isSameOrBefore' // To check if the day is the same\nimport timezone from 'dayjs/plugin/timezone'\nimport utc from 'dayjs/plugin/utc'\nimport weekOfYear from 'dayjs/plugin/weekOfYear' // For week start and end calculations\nimport advancedFormat from 'dayjs/plugin/advancedFormat' // For more complex formatting options\n\n// Extend dayjs with the plugins\ndayjs.extend(timezone)\ndayjs.extend(weekOfYear)\ndayjs.extend(advancedFormat)\ndayjs.extend(utc)\ndayjs.extend(isSameOrAfter)\ndayjs.extend(isSameOrBefore)\n\nfunction convertScheduleToTimezone(scheduleData) {\n    const userStore = useUserStore() // Access the UserStore\n\n    return scheduleData.data.map(item => {\n        // Convert top-level start_time and end_time using UserStore methods\n        // console.log(`Original startTime for ${item.id}: ${item.startTime}`)\n        const startTimeInUserTz = item.startTime ? userStore.formatDateTimeFromUtcToUserTimezone(item.startTime, 'YYYY-MM-DD HH:mm:ss') : null\n        const endTimeInUserTz = item.endTime ? userStore.formatDateTimeFromUtcToUserTimezone(item.endTime, 'YYYY-MM-DD HH:mm:ss') : null\n        // Add debug logging to help trace conversion issues or confirm correct conversions\n        // console.log(`Converted startTime for ${item.id}: ${startTimeInUserTz}`)\n\n        return {\n            ...item,\n            startTime: startTimeInUserTz,\n            endTime: endTimeInUserTz,\n            timezone: userStore.timezone,\n        }\n    })\n}\n\n// Helper function to get dates within the next 6 hours from viewingWindowStart\nfunction getUpcomingContentDates(viewingWindowStart) {\n    let dates = []\n    let start = dayjs(viewingWindowStart) // Ensure viewingWindowStart is a Day.js object\n\n    for (let i = 0; i < 6; i++) {\n        // Add i hours to the start time, each time creating a new Day.js object\n        dates.push(start.add(i, 'hour').toDate()) // Convert to Date if necessary; otherwise keep as Day.js object\n    }\n    // console.log(1)\n    return dates\n\n}\n\nconst getTimeZone = () => {\n    const userStore = useUserStore()\n    // This function should return the timezone of the user.\n    // This could be dynamic based on the user's settings or browser settings.\n    // return Intl.DateTimeFormat().resolvedOptions().timeZone;\n    // console.log(2)\n    return userStore.timezone\n}\n\nconst initialState = () => ({\n    baseTime: dayjs().tz(getTimeZone()).toDate(),\n    currentHalfHour: dayjs().tz(getTimeZone()).startOf('hour').add(dayjs().minute() >= 30 ? 30 : 0, 'minute').toDate(),\n    fourHoursLater: dayjs().tz(getTimeZone()).startOf('hour').add(dayjs().minute() >= 30 ? 30 : 0, 'minute').add(4, 'hour').toDate(),\n    viewingWindowStart: dayjs().tz(getTimeZone()).startOf('hour').toDate(),\n    currentMonth: dayjs().tz(getTimeZone()).startOf('month').toDate(),\n    selectedDay: dayjs().tz(getTimeZone()).toDate(),\n    currentWeekStart: dayjs().tz(getTimeZone()).startOf('week').toDate(),\n    currentWeekEnd: dayjs().tz(getTimeZone()).endOf('week').toDate(),\n    nextFourHoursOfContent: [],\n    nextFourHoursOfContentWithPlaceholders: [],\n    // nextFourHoursWithHalfHourIntervals: [],\n    // viewingMode: 'automatic', // or 'userSelected'\n    fiveDaySixHourSchedule: [], // Holds the schedule shows 5 day / 6 hour structured data\n    schedules: [], // this is our new schedules array, storing fetched schedule data\n    isLoading: true, // This flag indicates if data is currently being fetched\n    nextPage: 1, // This keeps track of the next page to fetch for pagination\n    hasMore: true, // This flag indicates if there are more schedules to fetch\n    todaysContent: [],\n    weeklyContent: [],\n    dataFetchLog: [],\n    savingToSchedule: false,\n    slotIntervalMinutes: 30,\n    mediumScreenSlotHours: 4, // 4 hours = 8 slots\n    smallScreenSlotHours: 2, // 2 hours = 4 slots\n    verySmallScreenSlotHours: 1, // 1 hour = 2 slots\n    timeSlots: [],\n    timeBanners: [\n        {id: 1, name: 'Early Morning', startTime: '04:00', duration: 2},\n        {id: 2, name: 'Morning', startTime: '06:00', duration: 6},\n        {id: 3, name: 'Afternoon', startTime: '12:00', duration: 5},\n        {id: 4, name: 'Prime Time', startTime: '17:00', duration: 3},\n        {id: 5, name: 'Late Prime Time', startTime: '20:00', duration: 3},\n        {id: 6, name: 'Late Night', startTime: '23:00', duration: 2}, // Spans midnight to 01:00\n        {id: 7, name: 'Overnight', startTime: '01:00', duration: 3}, // Spans from 01:00 to 04:00\n    ],\n})\n\nexport const useScheduleStore = defineStore('scheduleStore', {\n    state: initialState,\n    actions: {\n        resetAll() {\n            // Reset the store to its original state (clear all data)\n            Object.assign(this, initialState())\n            // console.log(3)\n        },\n        reset() {\n            this.viewingWindowStart = dayjs().tz(getTimeZone()).startOf('hour').toDate()\n            this.currentMonth = dayjs().tz(getTimeZone()).startOf('month').toDate()\n            this.selectedDay = dayjs().tz(getTimeZone()).toDate()\n            // console.log(4)\n        },\n        async setSelectedDay(day) {\n            // Ensure that 'day' is a Day.js object, convert if coming as a native Date or string\n            const selectedDay = dayjs(day)\n\n            // Set the selected day\n            this.selectedDay = selectedDay.toDate() // Convert back to Date if necessary; otherwise keep as Day.js object\n\n            // Explicitly set the viewingWindowStart to 4 AM for the selected day\n            this.viewingWindowStart = selectedDay.startOf('day').add(4, 'hours').toDate()\n\n            // Set the start and end of the week based on the selected day\n            this.currentWeekStart = selectedDay.startOf('week').toDate() // Consider week starting on Sunday\n            this.currentWeekEnd = selectedDay.endOf('week').toDate() // Consider week ending on Saturday\n\n            // Use the updated fetch logic\n            await this.fetchWeekDataIfNeeded()\n            // console.log(5)\n        },\n        setSelectedDayToToday(day) {\n            const now = dayjs()  // Create a Day.js object for the current date and time\n\n            // Set selectedDay to the current date and time\n            this.selectedDay = now.toDate() // Convert back to Date if necessary; otherwise keep as Day.js object\n\n            // Set viewingWindowStart to the start of the current hour using Day.js\n            this.viewingWindowStart = now.startOf('hour').toDate()\n            // console.log(6)\n        },\n        async changeDay(days) {\n            const currentTimeZone = getTimeZone() // or however you obtain the timezone\n            // Extract the time component from the current viewing window start\n            const currentTime = dayjs(this.viewingWindowStart).hour() * 60 + dayjs(this.viewingWindowStart).minute()\n\n            // Create a new day and set it to the start of that day\n            let newDay = dayjs(this.viewingWindowStart).tz(currentTimeZone).add(days, 'day').startOf('day')\n\n            // Set the time back to the original time\n            newDay = newDay.add(currentTime, 'minute')\n\n            // Depending on your application's needs, you may or may not need to convert it back to a JavaScript Date object\n            // If you need a Date object:\n            this.viewingWindowStart = newDay.toDate()\n\n            // If you can use dayjs objects directly (preferred if possible):\n            this.viewingWindowStart = newDay\n\n            // // Check if the week of the new day is already loaded\n            // const weekStart = startOfWeek(newDay, {weekStartsOn: 0});\n            // const weekEnd = endOfWeek(newDay, {weekStartsOn: 0});\n\n            // Use the updated centralized fetch logic without redundant checks\n            await this.fetchWeekDataIfNeeded()\n\n            // // Check for the need to load data for the new week\n            // if (this.needsDataForWeek(weekStart, weekEnd)) {\n            //     await this.loadWeekFromDate(newDay).catch(error => {\n            //         console.error(\"Failed to load data for the new week:\", error);\n            //     });\n            // }\n\n            // // Check for the need to load data for the new week\n            // if (!this.needsDataForWeek()) {\n            //     // Data for the current week has already been loaded; skip fetching\n            //     console.log(\"Data for the current week has already been loaded; skipping redundant fetch.\");\n            //     return;\n            // }\n            //\n            // // Proceed with data fetching if needed\n            // await this.checkAndFetchForUpcomingContent();\n            // console.log(7)\n        },\n        async shiftHours(hours) {\n            // Shift the viewing window by the specified number of hours\n            this.viewingWindowStart = dayjs(this.viewingWindowStart).add(hours, 'hour').toDate()\n\n            // Set the current week start and end based on the new viewing window start\n            this.currentWeekStart = dayjs(this.viewingWindowStart).startOf('week').toDate()\n            this.currentWeekEnd = dayjs(this.viewingWindowStart).endOf('week').toDate()\n\n            // If the day has changed, update selectedDay and the week's range\n            if (!dayjs(this.viewingWindowStart).isSame(dayjs(this.selectedDay), 'day')) {\n                this.selectedDay = dayjs(this.viewingWindowStart).startOf('day').toDate()\n            }\n\n            // Use the updated fetch logic\n            await this.fetchWeekDataIfNeeded()\n            // console.log(8)\n        },\n        isElevenPM(date) {\n            // Convert the date to a Day.js object if it's not already one\n            const time = dayjs(date)\n            // Check if the hour is 23 (11 PM)\n            // console.log(9)\n            return time.hour() === 23\n\n        },\n        // Actions to change the month\n        async subtractMonth() {\n            // Convert currentMonth to a Day.js object if it's not already and subtract one month\n            this.currentMonth = dayjs(this.currentMonth).subtract(1, 'month').toDate()\n\n            try {\n                // Pass the new currentMonth to setSelectedDay\n                await this.setSelectedDay(this.currentMonth)\n                // console.log('Set selected day based on current month:', this.currentMonth)\n            } catch (error) {\n                console.error(`Failed to set selected day based on current month ${this.currentMonth}:`, error)\n            }\n            // console.log(10)\n        },\n        async addMonth() {\n            // Convert currentMonth to a Day.js object if it's not already and add one month\n            this.currentMonth = dayjs(this.currentMonth).add(1, 'month').toDate()\n\n            try {\n                // Pass the new currentMonth to setSelectedDay\n                await this.setSelectedDay(this.currentMonth)\n                // console.log('Set selected day based on current month:', this.currentMonth)\n            } catch (error) {\n                console.error(`Failed to set selected day based on current month ${this.currentMonth}:`, error)\n            }\n            // console.log(11)\n        },\n        async fetchFiveDaySixHourSchedule() {\n            console.error('fetchFiveDaySixHourSchedule')\n            try {\n                const userStore = useUserStore()\n                const response = await axios.get('/api/schedule')\n\n                // Fallback to response timezone if userStore.timezone is not set\n                const timezone = userStore.timezone || response.data.userTimezone || 'UTC' // Additional fallback to 'UTC'\n\n                // Convert the entire schedule, including nested recurrenceDetails, to the user's timezone\n                this.fiveDaySixHourSchedule = convertScheduleToTimezone(response.data, timezone)\n                // console.error('fetchFiveDaySixHourSchedule', response.data)\n            } catch (error) {\n                console.error('Failed to load schedule shows:', error)\n                // Handle the error state as needed, e.g., setting an error state property\n            }\n            // console.log(12)\n        },\n        async fetchTodaysContent() {\n            try {\n                const userStore = useUserStore()\n                const response = await axios.get('/api/schedule/today')\n\n                // Fallback to response timezone if userStore.timezone is not set\n                const timezone = userStore.timezone || response.data.userTimezone || 'UTC' // Additional fallback to 'UTC'\n\n                this.todaysContent = convertScheduleToTimezone(response.data, timezone)\n            } catch (error) {\n                console.error('Failed to fetch today\\'s content:', error)\n            }\n            // console.log(13)\n        },\n        async preloadWeeklyContent() {\n            console.log('preloading weekly content...')\n            // Use the current date to preload content for the current week\n            const currentDate = dayjs(this.baseTime) // Creates a Day.js object representing the current date and time\n\n            try {\n                // Call loadWeekFromDate with the current Day.js date object\n                await this.loadWeekFromDate(currentDate) // loadWeekFromDate uses dayjs\n            } catch (error) {\n                console.error('Failed to preload weekly content:', error)\n            }\n            // console.log(14)\n        },\n        // this is our new fetch schedules method.\n        async fetchSchedules(startDate, endDate) {\n            this.isLoading = true\n            console.log(`Loading schedule between: ${startDate} and ${endDate}`) // Log the date being requested\n            try {\n                const userStore = useUserStore()\n                const dayStartDate = dayjs(startDate)\n                const dayEndDate = dayjs(endDate)\n                const fullISOStartDate = dayStartDate.toISOString()\n                const fullISOEndDate = dayEndDate.toISOString()\n\n                const response = await axios.get(`/api/schedules/range?start=${fullISOStartDate}&end=${fullISOEndDate}`)\n\n                const formattedStartDate = dayStartDate.format('YYYY-MM-DD') // For potential error messages and logging\n                const formattedEndDate = dayEndDate.format('YYYY-MM-DD') // For potential error messages and logging\n                // console.log(`Loading schedule between: ${formattedStartDate} and ${formattedEndDate}`) // Log the date being requested\n                // console.log('Received response:', response.data) // Log the raw response data\n\n                // Fallback to response timezone if userStore.timezone is not set\n                const timezone = userStore.timezone || response.data.userTimezone\n\n                const newData = convertScheduleToTimezone(response.data, timezone) // Ensure you are accessing the correct data property from the response\n\n                // Merge newData into schedules, avoiding duplicates\n                // this.schedules = [...this.schedules, ...newData].filter((value, index, self) =>\n                //         index === self.findIndex((t) => (\n                //             t.id === value.id && t.startTime === value.startTime\n                //         )),\n                // )\n                // Merge newData into schedules, avoiding duplicates\n                this.schedules = [...new Set([...this.schedules, ...newData].map(item => JSON.stringify(item)))].map(item => JSON.parse(item));\n                // console.log('Updated schedules:', this.schedules); // Log the updated schedules\n\n                // Optionally update fetch logs or perform additional state updates\n                // this.updateFetchLogs(startDate) // this was designed to just log a week fetching at a time.\n\n            } catch (error) {\n                console.error('Failed to fetch schedules:', error)\n                this.isLoading = false\n                // console.log('012')\n            } finally {\n                this.isLoading = false\n                // console.log('Schedule loaded!')\n            }\n        },\n\n        async fetchMoreSchedules() {\n            // Prevent fetching if already loading or if there are no more schedules to fetch\n            if (this.isLoading || !this.hasMore) return;\n\n            this.isLoading = true;\n            console.log('Fetching more schedules...');\n            try {\n                const lastSchedule = this.schedules[this.schedules.length - 1];\n                const startDate = lastSchedule ? dayjs(lastSchedule.startTime).format('YYYY-MM-DD') : dayjs().format('YYYY-MM-DD');\n                const endDate = dayjs(startDate).add(7, 'day').format('YYYY-MM-DD'); // Fetch the next 7 days\n\n                await this.fetchSchedules(startDate, endDate);\n\n                // Check if new schedules were added\n                const newSchedules = this.schedules.slice(this.schedules.length - 1);\n                // If no new schedules are fetched, set hasMore to false\n                if (newSchedules.length === 0) {\n                    this.hasMore = false;\n                } else {\n                    // Increment the next page number for future fetches\n                    this.nextPage += 1;\n                }\n            } catch (error) {\n                console.error('Failed to fetch more schedules:', error);\n            } finally {\n                this.isLoading = false;\n            }\n        },\n\n        async loadWeekFromDate(date) {\n            let formattedDate = null // Declare formattedDate outside of the try block\n            this.isLoading = true\n            console.log('Loading week from date...')\n            try {\n                const userStore = useUserStore()\n                // Ensure the date is in UTC format for the request\n                // console.log('Date before formatted: ' + date)\n                // Convert date to Day.js object and format it in ISO string with UTC\n                const dayDate = dayjs(date)\n                const fullISODate = dayDate.toISOString()\n                // console.log(`Loading week data for date in UTC: ${fullISODate}`)\n\n                // Fetch the week's schedule data\n                // Send the dateTime and timezone as a JSON object in a POST request\n                const response = await axios.post(`/api/schedule/week/${fullISODate}`)\n\n                // const formattedDate = date.toISOString().split('T')[0];\n                // Log and error handling\n                const formattedDate = dayDate.format('YYYY-MM-DD') // For potential error messages and logging\n                // console.log(`Loading week data for date: ${formattedDate}`) // Log the date being requested\n                //\n                // const response = await axios.get(`/api/schedule/week/${formattedDate}`);\n                // console.log('Received response:', response.data) // Log the raw response data\n\n                // Fallback to response timezone if userStore.timezone is not set\n                const timezone = userStore.timezone || response.data.userTimezone\n                // console.log(`Using timezone: ${timezone}`) // Log the timezone being used\n\n                const newData = convertScheduleToTimezone(response.data, timezone) // Ensure you are accessing the correct data property from the response\n\n                // Merge newData into weeklyContent, avoiding duplicates\n                this.weeklyContent = [...this.weeklyContent, ...newData].filter((value, index, self) =>\n                        index === self.findIndex((t) => (\n                            t.id === value.id && t.startTime === value.startTime\n                        )),\n                )\n\n                // console.log('Updated weeklyContent:', this.weeklyContent) // Log the updated weekly content\n\n                // Optionally update fetch logs or perform additional state updates\n                this.updateFetchLogs(date)\n\n                this.isLoading = false\n                // console.log('Week from date loaded!')\n            } catch (error) {\n                console.error(`Failed to load content for week starting ${formattedDate}:`, error)\n                this.isLoading = false\n                // console.log('002')\n            }\n            // console.log(15)\n            // console.log('End of loadWeekFromDate function')\n        },\n        updateFetchLogs(date) {\n            // Convert date to a Day.js object if it's not already one\n            const dayDate = dayjs(date)\n\n            // Use Day.js to calculate the start and end of the week\n            const weekStart = dayDate.startOf('week').toISOString() // Assumes the week starts on Sunday\n            const weekEnd = dayDate.endOf('week').toISOString() // Assumes the week ends on Saturday\n            const fetchTime = dayjs().toISOString() // Current time in ISO format\n\n            // Find existing log entry for the week\n            const existingLogIndex = this.dataFetchLog.findIndex(log =>\n                log.weekStart === weekStart && log.weekEnd === weekEnd)\n\n            if (existingLogIndex !== -1) {\n                // Update the last fetch time if the log already exists\n                this.dataFetchLog[existingLogIndex].lastFetch = fetchTime\n            } else {\n                // Add a new log entry if it does not exist\n                this.dataFetchLog.push({weekStart, weekEnd, lastFetch: fetchTime})\n            }\n            // console.log(16)\n        },\n        needsDataForWeek() {\n            // Helper function to format dates to 'YYYY-MM-DD' for easier comparison\n            const formatISODate = (date) => dayjs(date).format('YYYY-MM-DD')\n\n            // Current week range in 'YYYY-MM-DD' format\n            const weekStartStr = formatISODate(this.currentWeekStart)\n            const weekEndStr = formatISODate(this.currentWeekEnd)\n\n            // Enhanced logging for debugging\n            // console.log(`Current week range: ${weekStartStr} to ${weekEndStr}`)\n            // console.log('Existing data fetch log entries:', this.dataFetchLog)\n\n            // Iterate through the fetch log to check if the current week has been fetched\n            const weekHasBeenFetched = this.dataFetchLog.some(log => {\n                // Convert log dates to 'YYYY-MM-DD' format for comparison\n                const logWeekStartStr = formatISODate(log.weekStart)\n                const logWeekEndStr = formatISODate(log.weekEnd)\n\n                // Log each comparison for insight\n                // console.log(`Comparing to fetched range: ${logWeekStartStr} to ${logWeekEndStr}`)\n\n                return logWeekStartStr <= weekStartStr && logWeekEndStr >= weekEndStr\n            })\n\n            // Log the final determination\n            // console.log(`Week from ${weekStartStr} to ${weekEndStr} has ${weekHasBeenFetched ? '' : 'not '}been fetched.`)\n            // console.log(17)\n            return !weekHasBeenFetched\n        },\n        calculateExtendedEndForUpcomingContent() {\n            // Convert viewingWindowStart to a Day.js object if it's not already one\n            const baseStartTime = dayjs(this.viewingWindowStart)\n\n            // Extend by 6 hours to cover the upcoming content span\n            // Day.js handles date and time addition cleanly, returning a new Day.js object\n            const extendedEndTime = baseStartTime.add(6, 'hour')\n\n            // console.log(18)\n            // Return the extended end time as a Date object, if needed elsewhere as a Date\n            return extendedEndTime.toDate()\n        },\n        // Function to check for and fetch missing upcoming content\n        async checkAndFetchForUpcomingContent() {\n            const upcomingDates = getUpcomingContentDates(this.viewingWindowStart) // Assuming this returns Day.js objects\n            const now = dayjs()\n            const fifteenMinutesAgo = now.subtract(15, 'minutes')\n\n            for (const date of upcomingDates) {\n                const dateString = date.format('YYYY-MM-DD')  // Day.js format for 'YYYY-MM-DD'\n                const contentCoverageAndFreshness = this.weeklyContent.some(content => {\n                    const contentDate = dayjs(content.startTime).format('YYYY-MM-DD')  // Convert and compare as 'YYYY-MM-DD'\n                    const lastFetchedTime = this.dataFetchLog[dateString]\n                    const isFresh = lastFetchedTime && dayjs(lastFetchedTime) > fifteenMinutesAgo\n                    return dateString === contentDate && isFresh\n                })\n\n                if (!contentCoverageAndFreshness) {\n                    // This date needs data fetching\n                    await this.fetchDataAndUpdateLog(dateString, date.toDate()) // Pass as Date if needed, or adjust downstream functions to accept Day.js objects\n                    break // Assuming you fetch data for the week, so no need to check further dates within the same week\n                }\n            }\n            // console.log(19)\n        },\n        async fetchDataAndUpdateLog(dateString, date) {\n            try {\n                // Assuming 'date' is already a Day.js object; if not, convert it\n                const dayDate = dayjs(date)\n\n                await this.loadWeekFromDate(dayDate.toDate())  // Pass as a Date if needed, or adjust 'loadWeekFromDate' to accept Day.js objects\n                // Successfully fetched, so update the log\n                this.dataFetchLog[dateString] = dayjs().toISOString()  // Use Day.js to get the current time in ISO format\n                // console.log('Data fetched successfully for date:', dateString)\n            } catch (error) {\n                console.error(`Failed to fetch data for date ${dateString}:`, error)\n            }\n            // console.log(20)\n        },\n\n        // Updated to use this.currentWeekStart and this.currentWeekEnd directly\n        async fetchWeekDataIfNeeded() {\n            // Assumes this.currentWeekStart and this.currentWeekEnd are already set\n            if (this.needsDataForWeek()) {\n                await this.checkAndFetchForUpcomingContent().catch(error => {\n                    console.error('Failed to load data for the week:', error)\n                    return false // Indicates failure to fetch when an error occurs\n                })\n            } else {\n                console.log('Week data already loaded; no need to fetch.')\n            }\n            // console.log(21)\n        },\n\n        // Function to simply update baseTime with the given time (expected to be a Day.js object or compatible input)\n        updateBaseTime(time) {\n            // Ensure the time is a Day.js object when setting baseTime\n            this.baseTime = dayjs(time).toDate()  // Convert to Date if necessary; consider keeping it as Day.js object if possible\n            // console.log(22)\n        },\n\n        // Function to set baseTime based on a new time input (expected to be a string, Date, etc.)\n        setBaseTime(newTime) {\n            // Convert newTime to a Day.js object and then to Date if necessary\n            this.baseTime = dayjs(newTime).toDate()  // This handles various input formats and ensures consistency\n            // console.log(23)\n        },\n\n\n        /**\n         * This method orchestrates the update of show scheduling data for the next four hours.\n         * It is designed to be triggered when there are changes to the base time or when a manual refresh is needed.\n         * The method handles loading and organizing the scheduling data to be ready for display in the grid.\n         */\n        async updateNextFourHours() {\n            // Set the loading state to true to indicate that data processing is underway.\n            // This can be used to display a loading spinner or disable user interaction temporarily.\n            this.isLoading = true\n\n            // Update the time range for the scheduling grid. This adjusts `currentHalfHour` and `fourHoursLater`\n            // based on the current `baseTime`. These values define the range of time for which shows will be displayed.\n            this.updateTimeRange()\n\n            // Update the time slots\n            this.setTimeSlots()\n\n            // Prepares the shows for the grid display by filtering, calculating grid slots,\n            // resolving conflicts, and optionally filling empty grid slots with placeholders.\n            // This step involves several functions that ensure shows are positioned correctly according to their\n            // start time, duration, and conflicts with other shows.\n            this.prepareShowsForGrid()\n\n            // Reset the loading state to false indicates that the data processing is complete.\n            // This allows the user interface to be interactive again and shows the updated data in the grid.\n            this.isLoading = false\n            // console.log(24)\n        },\n\n\n        updateTimeRange() {\n            // Ensure the baseTime is interpreted correctly in the current user's timezone\n            const baseDate = dayjs(this.baseTime).tz(getTimeZone())\n\n            // Calculate the rounded minutes to either 0 or 30 based on the current time\n            const roundedMinutes = baseDate.minute() < 30 ? 0 : 30\n\n            // Set the current half hour, rounding down to the nearest half-hour mark\n            const currentHalfHour = baseDate.minute(roundedMinutes).second(0).millisecond(0).startOf('minute')\n\n            // Calculate four hours later from the current half-hour mark\n            const fourHoursLater = currentHalfHour.add(4, 'hours')\n\n            // Update the store's currentHalfHour and fourHoursLater ensuring they are Date objects if required\n            this.currentHalfHour = currentHalfHour.toDate()\n            this.fourHoursLater = fourHoursLater.toDate()\n            // console.log(25)\n\n            // console.log('Fetching shows between:', currentHalfHour.format('YYYY-MM-DD HH:mm:ss'), 'and', fourHoursLater.format('YYYY-MM-DD HH:mm:ss'))\n        },\n\n        initializeTimeSlots() {\n            this.timeSlots = createTimeSlots()\n        },\n\n        setTimeSlots() {\n            const appSettingStore = useAppSettingStore()\n            let slotHours\n\n            // Determine the number of slot hours based on screen size\n            if (appSettingStore.isVerySmallScreen) {\n                slotHours = this.verySmallScreenSlotHours\n            } else if (appSettingStore.isSmallScreen) {\n                slotHours = this.smallScreenSlotHours\n            } else {\n                slotHours = this.mediumScreenSlotHours\n            }\n\n            const intervalMinutes = this.slotIntervalMinutes\n            const slots = []\n            const totalSlots = (slotHours * 60) / intervalMinutes\n\n            // Ensure state.currentHalfHour is a Day.js object\n            const currentHalfHour = dayjs(this.currentHalfHour)\n\n            // Calculate the time for each slot using Day.js\n            for (let i = 0; i < totalSlots; i++) {\n                let slotTime = currentHalfHour.add(i * intervalMinutes, 'minute')\n                slots.push(slotTime.toDate())  // Convert back to JavaScript Date if necessary\n            }\n            this.timeSlots = slots\n            // console.log(26)\n            return slots.length\n        },\n\n        prepareShowsForGrid() {\n\n            if (!this.timeSlots || !Array.isArray(this.timeSlots) || this.timeSlots.length === 0) {\n                console.error('timeSlots is not properly initialized.')\n                // console.log(27)\n                // Handle this scenario, e.g., by initializing timeSlots, or skipping the update\n                return\n            }\n\n\n            // Step 1: Filter shows within the desired time range\n            const shows = this.filterShowsForTimeRange()\n\n            // Step 2: Calculate initial grid slots for these shows\n            const processedShows = this.calculateGridSlots(shows, this.timeSlots)\n\n            // Step 3: Process shows to set nowPlaying and comingUpNext flags\n            const showsWithStatusFlags = this.processShows(processedShows)\n\n            // Step 4: Update column occupancy and find the maximum row used\n            const {colOccupancy, maxRowUsed} = this.updateColumnOccupancy(showsWithStatusFlags, this.timeSlots.length)\n\n            // Step 5: Fill gaps in the grid with placeholders\n            const gridItems = this.fillGapsAndCreatePlaceholders(colOccupancy, maxRowUsed, this.timeSlots.length)\n\n            // Step 6: Combine processed shows with the placeholders\n            const combinedShows = [...showsWithStatusFlags, ...gridItems]\n\n            // Step 7: Sort and group shows by rows\n            this.nextFourHoursOfContent = this.sortShowsByPosition(combinedShows)\n            // console.log(28)\n        },\n\n        filterShowsForTimeRange() {\n            return this.schedules.filter(show => {\n                // Validate show data integrity\n                if (typeof show.startTime !== 'string' || typeof show.durationMinutes !== 'number') {\n                    console.warn('Invalid show data:', show.startTime, show.durationMinutes)\n                    // console.log(29)\n                    return false // Skip this show if it doesn't meet data expectations\n                }\n\n                const showStart = dayjs(show.startTime)\n                const showEnd = dayjs(show.endTime)\n                const isInTimeRange = showStart.isBefore(this.fourHoursLater) && showEnd.isAfter(this.currentHalfHour)\n\n                // Detailed logging for debugging\n                if (isInTimeRange) {\n                    const hasStarted = showStart.isBefore(this.currentHalfHour) ? 'already started' : 'starts within range'\n                    // console.log(`Show: ${show.content.name}, ${hasStarted}, Start: ${showStart.format('HH:mm:ss')}, End: ${showEnd.format('HH:mm:ss')}, Duration: ${show.durationMinutes}`)\n                }\n                // console.log(30)\n                return isInTimeRange\n            })\n        },\n\n        calculateGridSlots(shows, timeSlots) {\n            // Validate the timeSlots array to prevent errors\n            if (!Array.isArray(timeSlots) || timeSlots.length === 0) {\n                console.error('Invalid or empty timeSlots array')\n                // console.log(31)\n                return [] // Exit if no valid time slots to work with\n            }\n\n            // Determine the range of timeSlots\n            const firstTimeSlot = dayjs(timeSlots[0])\n            const lastTimeSlot = dayjs(timeSlots[timeSlots.length - 1]).add(30, 'minutes')\n\n\n            return shows.filter(show => {\n                const showStart = dayjs(show.startTime)\n                const showEnd = dayjs(show.endTime)\n                return showStart.isBefore(lastTimeSlot) && showEnd.isAfter(firstTimeSlot)\n            }).map(show => {\n                const showStart = dayjs(show.startTime)\n                const showEnd = dayjs(show.endTime)\n                // console.log('************************************')\n                // console.log(`Processing show: ${show.content.name}, Start: ${show.startTime}, End: ${show.endTime}`)\n\n                // Find the index of the slot where the show should start\n                let slotIndex = timeSlots.findIndex(slot => showStart.isSameOrBefore(dayjs(slot)))\n\n                // Adjust if the show starts exactly at a slot time or just after the last checked slot time\n                if (slotIndex === -1 || showStart.isAfter(dayjs(timeSlots[slotIndex]))) {\n                    slotIndex = Math.max(0, slotIndex)\n                }\n\n                // console.log(`Comparing show start ${showStart.format()} to timeSlot index ${slotIndex} at ${dayjs(timeSlots[slotIndex]).format()}`)\n\n                // Calculate the end slot index\n                let endSlotIndex = timeSlots.findIndex(slot => showEnd.isSameOrBefore(dayjs(slot).add(30, 'minutes')))\n\n                // If the end slot index points to a slot that starts after the show ends, subtract one\n                if (endSlotIndex !== -1 && showEnd.isBefore(dayjs(timeSlots[endSlotIndex]))) {\n                    endSlotIndex--\n                }\n\n                // Handle cases where the show ends after the last slot\n                if (endSlotIndex === -1 || showEnd.isSame(dayjs(timeSlots[timeSlots.length - 1]).add(30, 'minutes'))) {\n                    endSlotIndex = timeSlots.length - 1\n                }\n\n                // console.log(`Comparing show end ${showEnd.format()} to timeSlot index ${endSlotIndex} at ${endSlotIndex !== -1 ? dayjs(timeSlots[endSlotIndex]).format() : 'out of range'}`)\n\n\n                // Calculate the number of slots the show should span\n                let span = endSlotIndex - slotIndex + 1\n\n                // console.log(`Calculated gridStart: ${slotIndex + 1}, gridSpan: ${span}`)\n                // console.log(32)\n                return {\n                    ...show,\n                    gridStart: slotIndex + 1, // Convert to 1-based index for grid positioning\n                    gridSpan: span,\n                }\n            })\n        },\n\n        processShows(shows) {\n            let comingUpNextSet = false\n\n            shows.forEach(show => {\n                const start = dayjs(show.startTime)\n                const end = start.add(show.durationMinutes, 'minutes')\n                const now = dayjs(this.baseTime)\n\n                // Determine if the show is now playing\n                show.nowPlaying = !show.placeholder && now.isAfter(start) && now.isBefore(end) && show.gridStart === 1\n\n                // Find the first show that does not start in the first grid column\n                if (!comingUpNextSet && !show.placeholder && show.gridStart > 1) {\n                    show.comingUpNext = true\n                    comingUpNextSet = true  // Ensure only one show gets this flag\n                }\n            })\n            // console.log(33)\n            return shows\n        },\n\n        updateColumnOccupancy(processedShows, cols) {\n            let colOccupancy = new Array(cols).fill(null).map(() => new Set())\n            let maxRowUsed = 0\n            processedShows.forEach(show => {\n                for (let i = show.gridStart - 1; i < show.gridStart - 1 + show.gridSpan; i++) {\n                    if (i >= 0 && i < cols) {\n                        colOccupancy[i].add(show.gridRow)\n                        maxRowUsed = Math.max(maxRowUsed, show.gridRow)\n                    }\n                }\n            })\n            // console.log(34)\n            return {colOccupancy, maxRowUsed}\n        },\n\n        fillGapsAndCreatePlaceholders(colOccupancy, maxRowUsed, cols) {\n            let gridItems = []\n            // Ensure at least one row is processed even if no shows are present\n            maxRowUsed = Math.max(maxRowUsed, 1)\n            for (let row = 1; row <= maxRowUsed; row++) {\n                gridItems.push(...this.findAndFillGapsForSingleRow(colOccupancy, row, cols))\n            }\n            // console.log(35)\n            return gridItems\n        },\n\n        findAndFillGapsForSingleRow(colOccupancy, row, cols) {\n            let gridItems = []\n            let gapStart = -1\n            for (let i = 0; i < cols; i++) {\n                if (!colOccupancy[i].has(row)) {\n                    gapStart = gapStart === -1 ? i : gapStart\n                } else if (gapStart !== -1) {\n                    // Use different placeholders based on the row number\n                    if (row === 1) {\n                        gridItems.push(this.createPlaceholder(gapStart + 1, i - gapStart, row))\n                    } else {\n                        gridItems.push(this.createBlankSpotPlaceholder(gapStart + 1, i - gapStart, row))\n                    }\n                    gapStart = -1\n                }\n            }\n            if (gapStart !== -1) {\n                // Again, differentiate between the first row and other rows\n                if (row === 1) {\n                    gridItems.push(this.createPlaceholder(gapStart + 1, cols - gapStart, row))\n                } else {\n                    gridItems.push(this.createBlankSpotPlaceholder(gapStart + 1, cols - gapStart, row))\n                }\n            }\n            // console.log(36)\n            return gridItems\n        },\n\n        sortShowsByPosition(combinedShows) {\n            if (!Array.isArray(combinedShows)) {\n                console.error('Expected an array of shows, received:', combinedShows)\n                return [] // Return an empty array if not an array to prevent errors\n            }\n\n            // console.log(37)\n            // Sort shows directly by row and then by start position within each row\n            return combinedShows.sort((a, b) => a.gridRow - b.gridRow || a.gridStart - b.gridStart)\n        },\n\n        createPlaceholder(start, span, row) {\n            // console.log(38)\n            return {\n                placeholder: true,\n                startTime: 'placeholder',\n                priority: 0,\n                gridStart: start,\n                gridSpan: span,\n                gridRow: row,\n                content: {name: 'Nothing scheduled.'},\n            }\n        },\n\n        createBlankSpotPlaceholder(start, span, row) {\n            // console.log(39)\n            return {\n                placeholder: true,\n                startTime: 'placeholder',\n                priority: 0,\n                gridStart: start,\n                gridSpan: span,\n                gridRow: row,\n                content: {name: 'Blank Spot'}, // Ensure it is differentiated from normal placeholders\n            }\n        },\n\n    },\n\n    getters: {\n        currentTime: (state) => {\n            // console.log('getter', 40)\n            return dayjs(state.baseTime).format('h:mm A')\n        },\n        currentDate: (state) => {\n            // console.log('getter', 40)\n            return dayjs(state.baseTime).format('MMMM DD, YYYY')\n        },\n        // Prepare banners with grid positions based on current time slots\n        preparedTimeBanners: (state) => {\n            // console.log('getter', 41)\n            const timeZone = getTimeZone() // Ensure this is defined\n            let now = dayjs().tz(timeZone)\n            let todayStart = now.startOf('day')\n            let tomorrowStart = todayStart.add(1, 'day')\n            let yesterdayStart = todayStart.subtract(1, 'day');\n\n            // console.log('Current Time Slots:', state.timeSlots.map(slot => dayjs(slot).format('HH:mm')))\n\n            return state.timeBanners.flatMap(banner => {\n                // console.log('getter', 42)\n                // Create banner times for today and tomorrow to handle overnight spans\n                let bannerTodayStart = todayStart.hour(parseInt(banner.startTime.split(':')[0])).minute(parseInt(banner.startTime.split(':')[1]))\n                let bannerTodayEnd = bannerTodayStart.clone().add(banner.duration, 'hours')\n                let bannerTomorrowStart = tomorrowStart.hour(parseInt(banner.startTime.split(':')[0])).minute(parseInt(banner.startTime.split(':')[1]))\n                let bannerTomorrowEnd = bannerTomorrowStart.clone().add(banner.duration, 'hours')\n                let bannerYesterdayStart = yesterdayStart.hour(parseInt(banner.startTime.split(':')[0])).minute(parseInt(banner.startTime.split(':')[1]));\n                let bannerYesterdayEnd = bannerYesterdayStart.clone().add(banner.duration, 'hours');\n\n                // Create an array of potential banners for today and tomorrow\n                let potentialBanners = [\n                    {...banner, start: bannerYesterdayStart, end: bannerYesterdayEnd},\n                    {...banner, start: bannerTodayStart, end: bannerTodayEnd},\n                    {...banner, start: bannerTomorrowStart, end: bannerTomorrowEnd},\n                ]\n\n                return potentialBanners.map(banner => {\n                    // console.log('getter', 43)\n                    const startSlotIndex = state.timeSlots.findIndex(slot => banner.start.isSameOrBefore(dayjs(slot)) && banner.end.isAfter(dayjs(slot)))\n                    let endSlotIndex = state.timeSlots.findIndex(slot => banner.end.isSameOrBefore(dayjs(slot)))\n\n                    // Adjust the end index to be inclusive of the end time\n                    if (endSlotIndex === -1 || banner.end.isAfter(dayjs(state.timeSlots[state.timeSlots.length - 1]))) {\n                        endSlotIndex = state.timeSlots.length - 1\n                    } else {\n                        endSlotIndex -= 1\n                    }\n\n                    const gridStart = startSlotIndex + 1\n                    const gridSpan = endSlotIndex - startSlotIndex + 1\n\n                    // console.log(`Processing Banner: ${banner.name}`)\n                    // console.log(`StartTime: ${banner.start.format('HH:mm')}, EndTime: ${banner.end.format('HH:mm')}`)\n                    // console.log(`StartSlotIndex: ${startSlotIndex}, EndSlotIndex: ${endSlotIndex}`)\n                    // console.log(`Calculated gridStart: ${gridStart}, gridSpan: ${gridSpan}`)\n\n                    // Ensure the banner should be displayed within the current time slots\n                    if (gridStart && gridSpan > 0) {\n                        // console.log('getter', 44)\n                        return {...banner, gridStart, gridSpan}\n                    }\n                    // console.log('getter', 45)\n                    return null\n                })\n            }).filter(banner => banner != null) // Filter out banners that don't fit within the current time slots\n                .sort((a, b) => a.gridStart - b.gridStart) // Sort by gridStart, with the lowest number first\n        },\n\n\n        // setTimeSlots: (state) => {\n        //     const appSettingStore = useAppSettingStore()\n        //     let slotHours\n        //\n        //     // Determine the number of slot hours based on screen size\n        //     if (appSettingStore.isVerySmallScreen) {\n        //         slotHours = state.verySmallScreenSlotHours\n        //     } else if (appSettingStore.isSmallScreen) {\n        //         slotHours = state.smallScreenSlotHours\n        //     } else {\n        //         slotHours = state.mediumScreenSlotHours\n        //     }\n        //\n        //     const intervalMinutes = state.slotIntervalMinutes\n        //     const slots = []\n        //     const totalSlots = (slotHours * 60) / intervalMinutes\n        //\n        //     // Ensure state.currentHalfHour is a Day.js object\n        //     const currentHalfHour = dayjs(state.currentHalfHour)\n        //\n        //     // Calculate the time for each slot using Day.js\n        //     for (let i = 0; i < totalSlots; i++) {\n        //         let slotTime = currentHalfHour.add(i * intervalMinutes, 'minute')\n        //         slots.push(slotTime.toDate())  // Convert back to JavaScript Date if necessary\n        //     }\n        //     state.timeSlots = slots\n        //     return slots.length\n        // },\n\n        nextFourHoursWithHalfHourIntervals: (state) => {\n            // Check if timeSlots is not null, undefined, or empty before accessing length\n            if (!state.timeSlots || state.timeSlots.length === 0) {\n                console.log('timeSlots is null or has no elements')\n                // console.log('getter', 46)\n                // Handle this scenario appropriately, such as returning an empty array or a default value\n                return []\n            }\n\n            const userStore = useUserStore() // Access the user store\n            const appSettingStore = useAppSettingStore() // Access the settings store\n            const userTimezone = userStore.timezone // Get the user's timezone\n            const cols = state.timeSlots.length\n\n            const intervals = []\n            const now = dayjs(state.baseTime).tz(userTimezone) // Get the current time in the user's timezone\n\n            // Determine if the current minute is less than 30 to start at the top of the hour or at the half-hour\n            let current = now.minute() < 30 ? now.startOf('hour') : now.startOf('hour').add(30, 'minutes')\n\n\n            // Generate intervals for the next 4 hours, each 30 minutes apart\n            // Adjust the loop count based on the number of columns/ intervals needed\n            for (let i = 0; i < cols; i++) { // Adjust the number of intervals based on the screen size\n                intervals.push({\n                    formatted: current.format('hh:mm A'), // Formatted time for display\n                    dateTimeString: current.format('YYYY-MM-DD HH:mm:ss'), // Y-m-d H:m:s format for comparisons\n                })\n                current = current.add(30, 'minute') // Move to the next 30-minute interval\n            }\n            // console.log('getter', 47)\n            return intervals\n        },\n\n        upcomingContent: (state) => {\n            // Since viewingWindowStart is now a Day.js object, use Day.js methods directly\n            const start = dayjs(state.viewingWindowStart).subtract(1, 'hour') // 1 hour earlier\n            const end = start.add(7, 'hours') // 6 hours later from the start\n\n            // Group shows by start time using Day.js\n            const showsGroupedByStartTime = state.weeklyContent.reduce((acc, item) => {\n                const itemStart = dayjs(item.startTime).valueOf() // Use .valueOf() to get the timestamp\n                if (!acc[itemStart]) {\n                    acc[itemStart] = []\n                }\n                acc[itemStart].push(item)\n                return acc\n            }, {})\n\n            // Select the show with the lowest priority for each start time\n            const selectedShows = Object.values(showsGroupedByStartTime).map(group => {\n                return group.reduce((selected, item) => {\n                    return !selected || item.priority < selected.priority ? item : selected\n                }, null)\n            })\n            // console.log('getter', 48)\n            // Filter shows that fall within the next 6-hour window and sort them\n            return selectedShows\n                .filter(item => {\n                    const itemStart = dayjs(item.startTime)\n                    return itemStart.isSameOrAfter(start) && itemStart.isBefore(end)\n                })\n                .sort((a, b) => dayjs(a.startTime).unix() - dayjs(b.startTime).unix()) // Sorting by Unix timestamp\n        },\n\n\n        nextSixHours: (state) => {\n            // Assuming state.viewingWindowStart is already a Day.js object.\n            // If it's still a native Date, convert it first:\n            let adjustedStart = dayjs(state.viewingWindowStart)\n\n            // Add 6 hours to the adjusted start time\n            const end = adjustedStart.add(6, 'hours')\n\n            // Generate each hour of the interval between adjustedStart and end\n            const hours = []\n            let hour = adjustedStart\n\n            while (hour.isBefore(end)) {\n                hours.push(hour.toDate()) // Convert back to Date if necessary; otherwise, just use `hour` if you can use Day.js objects directly\n                hour = hour.add(1, 'hour')\n            }\n            // console.log('getter', 49)\n            return hours\n        },\n\n        dateMessage: (state) => {\n            const startDay = startOfDay(state.viewingWindowStart)\n            const formattedDate = format(startDay, 'EEEE MMMM do, yyyy')\n            // console.log('getter', 50)\n            if (isToday(startDay)) {\n                return `Today - ${formattedDate}`\n            } else if (isYesterday(startDay)) {\n                return `Yesterday - ${formattedDate}`\n            } else if (isTomorrow(startDay)) {\n                return `Tomorrow - ${formattedDate}`\n            } else {\n                return formattedDate\n            }\n        },\n\n        currentMonthIndex: (state) => {\n            // Ensure state.currentMonth is converted to a Day.js object\n            const month = dayjs(state.currentMonth)\n            // console.log('getter', 51)\n            // Day.js months are 0-indexed just like JavaScript Date, returns the month (0-11)\n            return month.month()\n        },\n\n        currentMonthName: (state) => {\n            // Ensure state.currentMonth is converted to a Day.js object\n            const month = dayjs(state.currentMonth)\n            // console.log('getter', 52)\n            // Returns the full name of the month, e.g., 'January', 'February', etc.\n            return month.format('MMMM')\n        },\n\n        currentYear: (state) => {\n            // Ensure state.currentMonth is converted to a Day.js object\n            const month = dayjs(state.currentMonth)\n            // console.log('getter', 53)\n            // Returns the year\n            return month.year()\n        },\n        isToday: (state) => {\n            const today = dayjs()  // Gets today's date as a Day.js object\n            const viewingStart = dayjs(state.viewingWindowStart)  // Convert to Day.js object if not already\n            // console.log('getter', 54)\n            // Compare if both dates are the same calendar day\n            return today.isSame(viewingStart, 'day')\n        },\n\n        daysInMonth: (state) => {\n            // Assuming state.currentMonth is a Day.js object; if it's a Date, convert it:\n            const currentMonth = dayjs(state.currentMonth)\n\n            const startOfCurrentMonth = currentMonth.startOf('month')\n            const endOfCurrentMonth = currentMonth.endOf('month')\n\n            // Adjust these to ensure the grid starts on Sunday and ends on Saturday\n            const startOfGrid = startOfCurrentMonth.startOf('week')  // Assumes the week starts on Sunday by default\n            const endOfGrid = endOfCurrentMonth.endOf('week')        // Assumes the week ends on Saturday by default\n\n            // Generate the days for the calendar grid\n            const days = []\n            let day = startOfGrid\n\n            while (day.isBefore(endOfGrid) || day.isSame(endOfGrid, 'day')) {\n                days.push(day.toDate()) // Collect days as Date objects; remove toDate() if you can use Day.js objects directly\n                day = day.add(1, 'day')\n            }\n            // console.log('getter', 55)\n            return days\n        },\n\n    },\n})\n","import { onBeforeMount, onMounted } from 'vue'\nimport { useUserStore } from \"@/Stores/UserStore\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useVideoPlayerStore } from \"@/Stores/VideoPlayerStore\"\nimport { router } from '@inertiajs/vue3'\n\nexport function usePageSetup(pageName) {\n    const userStore = useUserStore()\n    const appSettingStore = useAppSettingStore()\n    const videoPlayerStore = useVideoPlayerStore()\n\n    appSettingStore.currentPage = pageName\n    appSettingStore.showFlashMessage = true\n    appSettingStore.pageIsHidden = false\n\n    if (userStore.isMobile || window.innerWidth < 1024 || appSettingStore.fullPage) {\n        appSettingStore.ott = 0;\n    } else {\n        appSettingStore.ott = 1;\n        appSettingStore.showOttButtons = true;\n    }\n\n    videoPlayerStore.makeVideoTopRight()\n\n    if (appSettingStore.pageReload) {\n        appSettingStore.pageReload = false\n        appSettingStore.pageWasReloaded = true\n        window.location.reload();\n    }\n    // Check if the URL contains query strings\n\n\n    // Only scroll into view if there are no query strings\n\n        // const topDiv = document.getElementById(\"topDiv\")\n        // if (topDiv) {\n        //     topDiv.scrollIntoView()\n        // }\n        router.on('navigate', (event) => {\n            if (userStore.isMobile || window.innerWidth < 1024 || appSettingStore.fullPage) {\n                appSettingStore.ott = 0;\n            } else {\n                appSettingStore.ott = 1;\n            }\n            const hasQueryStrings = window.location.search !== '';\n            if (!hasQueryStrings || appSettingStore.shouldScrollToTop) {\n                requestAnimationFrame(() => {\n                    const topDiv = document.getElementById(\"topDiv\");\n                    if (topDiv) {\n                        topDiv.scrollIntoView({behavior: 'auto'});\n                    } else {\n                        window.scrollTo(0, 0);\n                    }\n                });\n            }\n            appSettingStore.shouldScrollToTop = false;\n        })\n    // Only update if we're not already on this page to avoid overwriting with the current URL\n    appSettingStore.setPrevUrl()\n    appSettingStore.showOttButtons = true\n    appSettingStore.noLayout = false\n\n    // router.reload()\n\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".source-selector[data-v-c559967c]{//margin-top:.5rem}.is-priority[data-v-c559967c]{color:#000;font-weight:300}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/Components/Pages/Admin/Channels/SourceSelector.vue\"],\"names\":[],\"mappings\":\"AA8EA,kCAEE,kBACF,CAMA,8BAEE,UAAY,CACZ,eACF\",\"sourcesContent\":[\"<template>\\n  <!--  <div class=\\\"source-selector\\\" :class=\\\"{'is-priority': source?.isPriority, 'is-playing': source?.isPlaying, 'is-fallback': source?.isFallback, 'has-error': source?.hasError}\\\">-->\\n  <div\\n      :class=\\\"['source-selector', {'is-priority': source?.playback_priority_type, 'is-playing': source?.isPlaying, 'is-fallback': source?.isFallback, 'has-error': source?.hasError}]\\\">\\n    <div>\\n      <!-- Display the source status here (playing, fallback, error) -->\\n      <div v-if=\\\"source?.playback_priority_type === sourceType\\\" class=\\\"btn btn-xs mt-1 text-white bg-green-500 hover:bg-green-500\\\">Priority</div>\\n      <span>\\n\\n      </span>\\n      <!-- Icon or button to set this source as priority -->\\n      <!--      <button class=\\\"btn btn-xs\\\" v-if=\\\"!source?.playback_priority_type\\\" @click=\\\"setPriority\\\">Set as Priority</button>-->\\n    </div>\\n  </div>\\n\\n  <!--  <div v-if=\\\"source?.playback_priority_type === 'mistStream'\\\">-->\\n  <!--    <button class=\\\"btn btn-xs hover:bg-green-500 bg-green-500\\\">Priority</button>-->\\n  <!--  </div>-->\\n\\n  <button v-if=\\\"source?.playback_priority_type !== sourceType\\\" class=\\\"btn btn-xs mt-1\\\"\\n          @click=\\\"setPriority\\\">Set as Priority\\n  </button>\\n\\n\\n  <dialog :id=\\\"`confirmPriorityChangeModal`\\\" class=\\\"modal\\\">\\n    <div class=\\\"modal-box\\\">\\n      <h3 class=\\\"font-bold text-lg\\\">Confirm Selection for {{ adminStore.sourceSelector?.source?.name }}</h3>\\n      <p class=\\\"py-4\\\">\\n        Are you sure you want to change priority to <span class=\\\"font-bold\\\">{{ adminStore.sourceSelector?.sourceType }}</span>?\\n      </p>\\n      <div class=\\\"modal-action\\\">\\n        <button class=\\\"btn\\\" @click=\\\"confirmPriorityChange\\\">Confirm</button>\\n        <button class=\\\"btn\\\" onclick=\\\"document.getElementById('confirmPriorityChangeModal').close()\\\">Cancel</button>\\n      </div>\\n    </div>\\n  </dialog>\\n\\n\\n</template>\\n\\n<script setup>\\nimport { useAdminStore } from '@/Stores/AdminStore'\\nimport { ref } from 'vue'\\n\\nconst adminStore = useAdminStore()\\n\\nlet props = defineProps([\\n  'source',\\n  'sourceType',\\n])\\n\\n// const setPriority = (sourceType) => {\\n//   emit('change', { sourceType, priority: true });\\n//   // Implement function to make API call to update the backend\\n// };\\n\\n\\nconst setPriority = () => {\\nadminStore.sourceSelector.source = props.source\\nadminStore.sourceSelector.sourceType = props.sourceType\\n  document.getElementById('confirmPriorityChangeModal').showModal() // Open the modal for confirmation\\n}\\n\\nconst confirmPriorityChange = async () => {\\n  await adminStore.setPlaybackPriorityType(adminStore.sourceSelector.source, adminStore.sourceSelector.sourceType)\\n  document.getElementById('confirmPriorityChangeModal').close() // Close the modal\\n\\n}\\n\\n// const setPriority = async () => {\\n//   // Directly call the store action to update the priority.\\n//   await adminStore.setPlaybackPriorityType(props.source, props.sourceType);\\n//   // No need to emit an event to the parent component.\\n// };\\n\\n</script>\\n\\n<style scoped>\\n.source-selector {\\n  /* Base styles */\\n  //margin-top: 0.5rem;\\n}\\n\\n.is-playing {\\n  /* Styles for playing status */\\n}\\n\\n.is-priority {\\n  /* Styles for isPriority status */\\n  color: black;\\n  font-weight: 300;\\n}\\n\\n.is-fallback {\\n  /* Styles for fallback status */\\n}\\n\\n.has-error {\\n  /* Styles for error status */\\n}\\n\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"#tooltip[data-v-568965d8]{background:#333;border-radius:4px;color:#fff;font-size:13px;font-weight:700;padding:4px 8px}[data-v-568965d8] .popper{background:#333;border-radius:20px;color:#fff;font-weight:700;padding:2px;text-transform:uppercase}[data-v-568965d8] .popper #arrow:before{background:#333}[data-v-568965d8] .popper:hover,[data-v-568965d8] .popper:hover>#arrow:before{background:#333}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/Pages/Admin/Schedule/Index.vue\"],\"names\":[],\"mappings\":\"AA+KA,0BACE,eAAgB,CAKhB,iBAAkB,CAJlB,UAAY,CAGZ,cAAe,CAFf,eAAiB,CACjB,eAGF,CAEA,0BACE,eAAmB,CAEnB,kBAAmB,CACnB,UAAW,CACX,eAAiB,CAHjB,WAAY,CAIZ,wBACF,CAEA,wCACE,eACF,CAEA,8EAEE,eACF\",\"sourcesContent\":[\"<template>\\n  <Head title=\\\"Admin/Schedule\\\"/>\\n\\n  <div class=\\\"place-self-center flex flex-col\\\">\\n    <div id=\\\"topDiv\\\" class=\\\"bg-white text-black dark:bg-gray-800 dark:text-gray-50 p-5 mb-10\\\">\\n\\n      <Message v-if=\\\"appSettingStore.showFlashMessage\\\" :flash=\\\"$page.props.flash\\\"/>\\n\\n      <AdminHeader>Schedule</AdminHeader>\\n\\n      <div class=\\\"flex flex-row justify-between gap-x-4 mb-3\\\">\\n        <div>\\n          <Link :href=\\\"`#`\\\">\\n            <button\\n                class=\\\"btn btn-sm bg-green-500 hover:bg-green-600 text-white px-4 py-2 mr-2 rounded disabled:bg-gray-400\\\"\\n                disabled\\n            >Blank\\n            </button>\\n          </Link>\\n          <Link :href=\\\"`#`\\\">\\n            <button\\n                class=\\\"btn btn-sm bg-green-500 hover:bg-green-600 text-white px-4 py-2 mr-2 rounded disabled:bg-gray-400\\\"\\n                disabled\\n            >Blank\\n            </button>\\n          </Link>\\n          <Link :href=\\\"`#`\\\">\\n            <button\\n                class=\\\"btn btn-sm bg-green-500 hover:bg-green-600 text-white px-4 py-2 mr-2 rounded disabled:bg-gray-400\\\"\\n                disabled\\n            >Blank\\n            </button>\\n          </Link>\\n          <button\\n              @click.prevent=\\\"purgeAllCaches\\\"\\n              class=\\\"btn btn-sm bg-green-500 hover:bg-green-600 text-white px-4 py-2 mr-2 rounded-lg disabled:bg-gray-400\\\"\\n          >\\n            Purge All Caches\\n          </button>\\n\\n\\n        </div>\\n        <input v-model=\\\"adminStore.searchTerm\\\" type=\\\"search\\\" placeholder=\\\"Search...\\\" class=\\\"border px-2 rounded-lg\\\"/>\\n      </div>\\n\\n      <div class=\\\"flex flex-col\\\">\\n        <div class=\\\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\\\">\\n          <div class=\\\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\\\">\\n            <div class=\\\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\\\">\\n\\n              <div class=\\\"relative overflow-x-auto shadow-md sm:rounded-lg\\\">\\n                <div\\n                    class=\\\"table w-full text-sm text-left text-gray-500 dark:text-gray-400\\\"\\n                >\\n                  <div\\n                      class=\\\"table-header-group text-xs text-gray-700 bg-gray-50 dark:bg-gray-700 dark:text-gray-400\\\"\\n                  >\\n                    <div class=\\\"table-row\\\">\\n                      <div scope=\\\"col\\\" class=\\\"table-cell px-6 py-3 uppercase\\\">\\n                        <font-awesome-icon icon=\\\"fa-repeat\\\" class=\\\"mr-2 cursor-pointer hover:text-blue-500\\\"\\n                                           @click.prevent=\\\"resetCalendar\\\"/>\\n                        <span class=\\\"uppercase\\\">Calendar </span>\\n                      </div>\\n\\n\\n                    </div>\\n                  </div>\\n                  <div class=\\\"table-row-group\\\">\\n\\n                    <div class=\\\"calendar\\\">\\n\\n                      <!-- Calendar View -->\\n                      <div class=\\\"calendar-view\\\">\\n                        <MonthView />\\n\\n                        <!-- View Selector -->\\n                        <div class=\\\"view-selector px-6 space-x-2 border-t-2 border-gray-50 pt-6\\\">\\n                          <span class=\\\"text-xm uppercase font-semibold tracking-wider\\\">View: </span>\\n                          <button @click=\\\"setView('week')\\\" class=\\\"py-1 px-2 text-black rounded-lg\\\" :class=\\\"[currentView === 'week' ? 'bg-blue-200' : 'bg-gray-100 hover:bg-gray-200']\\\">Week</button>\\n                          <button @click=\\\"setView('threeDay')\\\" class=\\\"py-1 px-2 text-black rounded-lg\\\" :class=\\\"[currentView === 'threeDay' ? 'bg-blue-200' : 'bg-gray-100 hover:bg-gray-200']\\\">3-Day</button>\\n                          <button @click=\\\"setView('oneDay')\\\" class=\\\"py-1 px-2 text-black rounded-lg\\\" :class=\\\"[currentView === 'oneDay' ? 'bg-blue-200' : 'bg-gray-100 hover:bg-gray-200']\\\">1-Day</button>\\n                          <button  @click=\\\"setToToday\\\" class=\\\"py-1 px-2 text-black rounded-lg\\\" :class=\\\"{'bg-blue-200': scheduleStore.isToday, 'bg-gray-100 hover:bg-gray-200': !scheduleStore.isToday}\\\">Today</button>\\n                        </div>\\n                        <WeekView v-if=\\\"currentView === 'week'\\\"/>\\n                        <ThreeDayView v-if=\\\"currentView === 'threeDay'\\\"/>\\n                        <TodayView v-if=\\\"currentView === 'oneDay'\\\"/>\\n                      </div>\\n                    </div>\\n\\n\\n\\n\\n\\n                  </div>\\n                </div>\\n\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n\\n\\n\\n\\n\\n      </div>\\n    </div>\\n  </div>\\n\\n</template>\\n\\n\\n<script setup>\\nimport { router } from '@inertiajs/vue3'\\nimport { onBeforeUnmount, onMounted, onUnmounted, ref, watch } from 'vue'\\nimport throttle from 'lodash/throttle'\\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome'\\nimport { usePageSetup } from '@/Utilities/PageSetup'\\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\\nimport { useScheduleStore } from '@/Stores/ScheduleStore'\\nimport { useAdminStore } from '@/Stores/AdminStore'\\nimport AdminHeader from '@/Components/Pages/Admin/AdminHeader'\\nimport Message from '@/Components/Global/Modals/Messages'\\nimport Pagination from '@/Components/Global/Paginators/Pagination'\\nimport SourceSelector from '@/Components/Pages/Admin/Channels/SourceSelector'\\nimport DynamicModal from '@/Components/Pages/Admin/Channels/DynamicModal'\\nimport AddOrUpdateMistStreamModal from '@/Components/Global/MistStreams/AddOrUpdateMistStreamModal'\\nimport MonthView from '@/Components/Global/Calendar/MonthView'\\nimport WeekView from '@/Components/Global/Calendar/WeekView'\\nimport ThreeDayView from '@/Components/Global/Calendar/ThreeDayView'\\nimport TodayView from '@/Components/Global/Calendar/TodayView'\\n\\nusePageSetup('admin.schedule')\\n\\nconst appSettingStore = useAppSettingStore()\\nconst scheduleStore = useScheduleStore()\\nconst adminStore = useAdminStore()\\n\\nlet props = defineProps({})\\n\\nconst reloadSchedule = () => {\\n  //\\n}\\n\\nconst setToToday = () => {\\n  // Use the existing action to set the selected day to today\\n  scheduleStore.setSelectedDayToToday(new Date());\\n  currentView.value = 'oneDay'\\n};\\n\\nconst currentView = ref('oneDay')\\n\\nconst setView = (view) => {\\n  currentView.value = view\\n}\\n\\nconst purgeAllCaches = () => {\\n  scheduleStore.resetAll()\\n  router.post('/admin/schedule/admin-reset-cache')\\n  router.reload()\\n}\\n\\nconst resetCalendar = () => {\\n  scheduleStore.reset()\\n  scheduleStore.checkAndFetchForUpcomingContent()\\n}\\n\\nonBeforeUnmount(() => {\\n  scheduleStore.reset()\\n})\\n\\n</script>\\n\\n<style scoped>\\n\\n#tooltip {\\n  background: #333;\\n  color: white;\\n  font-weight: bold;\\n  padding: 4px 8px;\\n  font-size: 13px;\\n  border-radius: 4px;\\n}\\n\\n:deep(.popper) {\\n  background: #333333;\\n  padding: 2px;\\n  border-radius: 20px;\\n  color: #fff;\\n  font-weight: bold;\\n  text-transform: uppercase;\\n}\\n\\n:deep(.popper #arrow::before) {\\n  background: #333333;\\n}\\n\\n:deep(.popper:hover),\\n:deep(.popper:hover > #arrow::before) {\\n  background: #333333;\\n}\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","<template>\n  <!-- Today view layout -->\n  <div class=\" hidden today-view container mx-auto px-4 py-8 flex flex-col\">\n    <div id=\"topDivForTodayView\"></div>\n    <button  v-if=\"!scheduleStore.isToday\"\n             @click=\"scheduleStore.setSelectedDayToToday(new Date());\"\n             class=\"py-1 px-2 text-white rounded-lg w-fit\"\n             :class=\"{'bg-blue-300': scheduleStore.isToday, 'bg-green-600 hover:bg-green-700': !scheduleStore.isToday}\">\n      Go To Now</button>\n    <div class=\"flex justify-center text-center mb-4\">\n      <h2 class=\"text-3xl font-bold mb-2\">{{ dateMessage }}</h2>\n    </div>\n    <div class=\"flex justify-between items-center mb-4\">\n      <button\n          @click=\"scheduleStore.changeDay(-1)\"\n          class=\"bg-gray-100 hover:bg-gray-200 text-black p-2 rounded shadow\"\n      >\n        &lt; Previous Day\n      </button>\n      <div class=\"flex flex-col text-center\">\n\n        <h3>{{ userStore.canadianTimezoneDescription }} Time</h3>\n      </div>\n      <button\n          @click=\"scheduleStore.changeDay(1)\"\n          class=\"bg-gray-100 hover:bg-gray-200 text-black p-2 rounded shadow\"\n      >\n        Next Day &gt;\n      </button>\n    </div>\n    <button\n        @click=\"scheduleStore.shiftHours(-6)\"\n        class=\"mb-4 bg-gray-100 hover:bg-gray-200 text-black py-2 rounded shadow\"\n    >\n      &#8593; Back 6 Hours\n    </button>\n\n    <div class=\"flex flex-col flex-grow\">\n      <div v-for=\"(hour, index) in scheduleStore.nextSixHours\" :key=\"hour.toString()\">\n\n        <!-- Time Segment Label -->\n        <div\n            v-if=\"index === 0 || getTimeSegment(hour).segment !== getTimeSegment(scheduleStore.nextSixHours[index - 1]).segment\"\n            :class=\"getTimeSegment(hour).color\"\n            class=\"mb-4 p-2 text-black text-center font-bold text-2xl rounded shadow\">\n          {{ getTimeSegment(hour).segment }}\n        </div>\n\n        <!-- Content for the current hour -->\n        <template v-for=\"item in upcomingContent\">\n          <div v-if=\"isWithinCurrentHour(item, hour)\" :key=\"item.id\"\n               class=\"hover:bg-blue-400 hover:cursor-pointer\"\n               @click.prevent=\"goToContentPage(item)\"\n               :class=\"['p-4 rounded-lg shadow', getTimeSegment(new Date(item.start_time)).color, 'mb-4']\">\n            <div class=\"flex flex-row flex-wrap gap-x-4 gap-y-2\">\n              <div class=\"flex flex-col w-28 max-w-28 text-gray-500\">\n                <div class=\"font-bold text-black break-words\">{{\n                    formatHour(new Date(item.start_time))\n                  }}&nbsp;{{ userStore.timezoneAbbreviation }}\n                </div>\n                <div class=\"break-words\">{{ formatDuration(item.durationMinutes) }}</div>\n              </div>\n              <div class=\"flex flex-col\">\n                <button @click.prevent=\"goToContentPage(item)\">\n                  <SingleImage v-if=\"item.type === 'show'\" :image=\"item?.content?.show?.image\"\n                               :alt=\"item?.content?.show?.name\" class=\"w-20 h-20\"/>\n                  <SingleImage v-else :image=\"item?.content?.image\" :alt=\"item?.content?.name\" class=\"w-20 h-20\"/>\n                </button>\n              </div>\n              <div class=\"flex flex-col items-start h-full\">\n                <div class=\"text-gray-800 text-2xl tracking-wider\">\n                  <button @click.prevent=\"goToContentPage(item)\" class=\"text-left\">\n                    <span v-if=\"item.type === 'show'\">{{ item?.content?.show?.name }}</span>\n                    <span v-if=\"item.type === 'movie'\">{{ item?.content?.name }}</span>\n                  </button>\n                </div>\n                <div class=\"mt-2 text-gray-700 flex flex-wrap gap-1\">\n                    <div class=\"w-fit text-xs font-semibold uppercase tracking-wide bg-gray-900 px-2 py-1 rounded\">\n                      <span v-if=\"item.type === 'show'\" class=\"text-green-500\">show</span>\n                      <span v-if=\"item.type === 'movie'\"\n                            class=\"text-pink-500 bg-gray-900 px-2 py-1\">movie</span>\n                    </div>\n                    <div v-if=\"item?.content?.show?.category?.name || item?.content?.category?.name\"\n                         class=\"w-fit text-xs font-semibold uppercase tracking-wider text-yellow-600 bg-gray-900 px-2 py-1 rounded\">\n                    <span v-if=\"item.type === 'show' && item?.content?.show?.category?.name\"\n                          class=\"\">{{ item?.content?.show?.category?.name }}</span>\n                      <span v-if=\"item.type === 'movie' && item?.content?.subCategory?.name\"\n                            class=\"\">{{ item?.content?.category?.name }}</span>\n                    </div>\n                    <div v-if=\"item?.content?.show?.subCategory?.name || item?.content?.subCategory?.name\"\n                         class=\"w-fit text-xs font-semibold tracking-wide text-yellow-500 bg-gray-900 px-2 py-1 rounded\">\n                      <span v-if=\"item.type === 'show'\" class=\"\">{{ item?.content?.show?.subCategory?.name }}</span>\n                      <span v-if=\"item.type === 'movie'\" class=\"\">{{ item?.content?.subCategory?.name }}</span>\n                    </div>\n                  </div>\n              </div>\n            </div>\n          </div>\n        </template>\n\n\n        <!-- Fallback if no content is found for the current hour -->\n        <div v-if=\"!isContentAvailableForHour(hour)\" :class=\"getTimeSegment(hour).color\"\n             class=\"mb-4 p-4 rounded-lg shadow text-gray-500\">\n          <div class=\"font-semibold\">{{ formatHour(hour) }}&nbsp;{{ userStore.timezoneAbbreviation }}</div>\n          <div>Nothing scheduled.</div>\n        </div>\n\n        <!-- Dynamically insert the dateMessage for the next day if the hour is 11 PM -->\n        <div v-if=\"scheduleStore.isElevenPM(hour) && scheduleStore.nextSixHours[index + 1]\"\n             class=\"my-4 p-2 bg-blue-800 text-white rounded shadow\">\n          {{ generateDateMessage(addHours(hour, 1)) }}\n        </div>\n      </div>\n    </div>\n\n    <button\n        @click=\"shiftHours(6)\"\n        class=\"bg-gray-100 hover:bg-gray-200 text-black py-2 rounded shadow\"\n    >\n      &#8595; Forward 6 Hours\n    </button>\n  </div>\n</template>\n\n<script setup>\n// Today view logic\n// import { ref, computed } from 'vue'\nimport { useScheduleStore } from '@/Stores/ScheduleStore'\nimport { useUserStore } from '@/Stores/UserStore'\nimport {\n  format,\n  startOfHour,\n  addHours,\n  isToday,\n  isYesterday,\n  isTomorrow,\n  startOfDay,\n  isWithinInterval,\n  isSameDay,\n} from 'date-fns'\nimport { storeToRefs } from 'pinia'\nimport { computed, onMounted, ref, watch, watchEffect } from 'vue'\nimport SingleImage from '@/Components/Global/Multimedia/SingleImage.vue'\nimport { router } from '@inertiajs/vue3'\n\nconst scheduleStore = useScheduleStore()\nconst userStore = useUserStore()\nconst {upcomingContent, dateMessage} = storeToRefs(scheduleStore)\n\nconst selectedDay = ref(scheduleStore.selectedDay)\nconst weeklyContent = computed(() => scheduleStore.weeklyContent)\n\nconst shiftHours = async(hours) => {\n  const topDiv = document.getElementById(\"topDivForTodayView\");\n  topDiv.scrollIntoView({behavior: 'smooth'});\n  await scheduleStore.shiftHours(hours)\n}\n\nwatch(selectedDay, (newValue) => {\n  scheduleStore.setSelectedDay(newValue)\n  // If necessary, trigger other actions when selectedDay changes\n})\n\nfunction isWithinCurrentHour(item, hour) {\n  const startOfCurrentHour = startOfHour(hour)\n  const endOfCurrentHour = addHours(startOfCurrentHour, 1)\n  const contentStartTime = new Date(item.start_time)\n  return contentStartTime >= startOfCurrentHour && contentStartTime < endOfCurrentHour\n}\n\n// Assuming `upcomingContent` is a computed property that already filters\n// content within a 6-hour window from `scheduleStore.viewingWindowStart`\nfunction isContentAvailableForHour(hour) {\n  // Convert the given hour to the start and end of that hour block\n  const startOfCurrentHour = startOfHour(hour)\n  const endOfCurrentHour = addHours(startOfCurrentHour, 1)\n\n  // Check if any item in `upcomingContent` starts within this hour block\n  return upcomingContent.value.some(item => {\n    const contentStartTime = new Date(item.start_time)\n    return contentStartTime >= startOfCurrentHour && contentStartTime < endOfCurrentHour\n  })\n}\n\nfunction formatHour(date) {\n  return format(date, 'h:mm aaaa')\n}\n\nfunction getTimeSegment(hour) {\n  const hourOfDay = hour.getHours()\n  if (hourOfDay >= 4 && hourOfDay < 6) return {segment: 'Early Morning', color: 'bg-gray-200'}\n  if (hourOfDay >= 6 && hourOfDay < 12) return {segment: 'Morning', color: 'bg-yellow-200'}\n  if (hourOfDay >= 12 && hourOfDay < 17) return {segment: 'Afternoon', color: 'bg-green-200'}\n  if (hourOfDay >= 17 && hourOfDay < 20) return {segment: 'Prime Time', color: 'bg-red-200'}\n  if (hourOfDay >= 20 && hourOfDay < 23) return {segment: 'Late Prime Time', color: 'bg-purple-200'}\n  if (hourOfDay >= 23 || hourOfDay < 1) return {segment: 'Late Night', color: 'bg-blue-200'}\n  if (hourOfDay >= 1 && hourOfDay < 4) return {segment: 'Overnight', color: 'bg-indigo-200'}\n  return {segment: '', color: ''} // Default case\n}\n\n// A computed property to determine the starting segment for the displayed hours\nconst startingSegment = computed(() => scheduleStore.nextSixHours.value.length > 0 ? getTimeSegment(scheduleStore.nextSixHours.value[0]) : null)\n\nfunction generateDateMessage(date) {\n  // This method mirrors the logic in the store's getter but accepts any date.\n  const startDay = startOfDay(date)\n  const formattedDate = format(startDay, 'EEEE, MMMM do')\n  if (isToday(startDay)) {\n    return `Today - ${formattedDate}`\n  } else if (isYesterday(startDay)) {\n    return `Yesterday - ${formattedDate}`\n  } else if (isTomorrow(startDay)) {\n    return `Tomorrow - ${formattedDate}`\n  } else {\n    return formattedDate\n  }\n}\n\nconst goToContentPage = (item) => {\n  if (item.type === 'show') {\n    router.visit(`/shows/${item.content.show.slug}`)\n  } else if (item.type === 'movie') {\n    router.visit(`/movie/${item.content.slug}`)\n  }\n}\n\nconst formatDuration = (minutes) => {\n  if (minutes < 60) {\n    return `${minutes} minutes`\n  } else if (minutes === 60) {\n    return `1 hour`\n  } else {\n    const hours = Math.floor(minutes / 60)\n    const remainingMinutes = minutes % 60\n    if (remainingMinutes === 0) {\n      return `${hours} hours`\n    } else {\n      return `${hours} hour${hours > 1 ? 's' : ''} and ${remainingMinutes} minutes`\n    }\n  }\n}\n\n\n// Define a reactive watcher on the timezone\n// This watcher will call preloadWeeklyContent whenever the timezone changes and is not null\nwatch(\n    () => userStore.timezone,\n    async (newTimezone, oldTimezone) => {\n      // Ensure the timezone is set before calling preloadWeeklyContent\n      if (newTimezone) {\n        await scheduleStore.preloadWeeklyContent()\n        console.log('preloaded weekly content from todayView ...')\n      }\n    },\n    {immediate: true}, // This option ensures the watcher is triggered immediately on mount\n)\n\n// Optionally, keep the onMounted if there are other initialization tasks\n// onMounted(async () => {\n//   // Check if timezone is already available on mount and preload content if it hasn't been done by the watcher\n//   if (userStore.timezone) {\n//     await scheduleStore.preloadWeeklyContent()\n//   }\n// })\n</script>\n\n<style scoped>\n/* Styles specific to today view */\n</style>\n","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-10.use[1]!../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-10.use[2]!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./TodayView.vue?vue&type=style&index=0&id=7522e1de&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./TodayView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TodayView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./TodayView.vue?vue&type=style&index=0&id=7522e1de&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-7522e1de\"]])\n\nexport default __exports__","import script from \"./AddOrUpdateMistStreamModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AddOrUpdateMistStreamModal.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n\n  <dialog :id=\"id\" class=\"modal\">\n    <div class=\"modal-box w-11/12 max-w-5xl\">\n      <h3 class=\"font-bold text-lg\">\n        <slot name=\"form-title\">Default Form Title</slot>\n      </h3>\n\n\n      <div>\n        <slot name=\"form-description\">Default Form Description</slot>\n      </div>\n      <div>\n        <div class=\"flex flex-col space-y-2 px-12 mt-6\">\n          <form @submit.prevent=\"submit\">\n\n            <label class=\"block mb-2 uppercase font-bold text-xs dark:text-gray-200\"\n                   for=\"name\">Stream Name</label>\n            <input v-model=\"form.name\"\n                   class=\"bg-gray-50 border border-gray-400 text-gray-900 text-sm p-2 w-full rounded-lg focus:ring-blue-500 focus:border-blue-500 block\"\n                   type=\"text\"\n                   name=\"name\"\n                   id=\"name\" placeholder=\"Stream Name...\">\n            <div v-if=\"form.errors.name\" v-text=\"form.errors.name\" class=\"text-xs text-red-600 mt-1\"></div>\n\n            <label class=\"block mt-4 mb-2 uppercase font-bold text-xs dark:text-gray-200\"\n                   for=\"name\">Source</label>\n            <input v-model=\"form.source\"\n                   class=\"bg-gray-50 border border-gray-400 text-gray-900 text-sm p-2 w-full rounded-lg focus:ring-blue-500 focus:border-blue-500 block\"\n                   type=\"text\"\n                   name=\"source\"\n                   id=\"source\" placeholder=\"Source...\">\n            <div v-if=\"form.errors.source\" v-text=\"form.errors.source\" class=\"text-xs text-red-600 mt-1\"></div>\n\n            <label class=\"block mt-4 mb-2 uppercase font-bold text-xs dark:text-gray-200\"\n                   for=\"name\">MIME Type</label>\n            <input v-model=\"form.mime_type\"\n                   class=\"bg-gray-50 border border-gray-400 text-gray-900 text-sm p-2 w-full rounded-lg focus:ring-blue-500 focus:border-blue-500 block\"\n                   type=\"text\"\n                   name=\"mime_type\"\n                   id=\"mime_type\" placeholder=\"MIME Type...\">\n            <div v-if=\"form.errors.mime_type\" v-text=\"form.errors.mime_type\" class=\"text-xs text-red-600 mt-1\"></div>\n\n            <label class=\"block mt-4 mb-2 uppercase font-bold text-xs dark:text-gray-200\"\n                   for=\"comment\">Comment</label>\n            <input v-model=\"form.comment\"\n                      class=\"bg-gray-50 border border-gray-400 text-gray-900 text-sm p-2 w-full rounded-lg focus:ring-blue-500 focus:border-blue-500 block\"\n                      type=\"text\"\n                      name=\"comment\"\n                      id=\"comment\" placeholder=\"Comment...\"></input>\n            <div v-if=\"form.errors.comment\" v-text=\"form.errors.comment\" class=\"text-xs text-red-600 mt-1\"></div>\n\n            <label class=\"block mt-4 mb-2 uppercase font-bold text-xs dark:text-gray-200\"\n                   for=\"metadata\">Optional Parameters</label>\n            <div v-for=\"(item, index) in form.metadata\" :key=\"index\" class=\"flex items-center\">\n              <input v-model=\"item.key\"\n                     class=\"bg-gray-50 border border-gray-400 text-gray-900 text-sm p-2 mt-2 rounded-lg focus:ring-blue-500 focus:border-blue-500\"\n                     placeholder=\"Key\">\n\n              <input v-model=\"item.value\"\n                     class=\"bg-gray-50 border border-gray-400 text-gray-900 text-sm p-2 ml-2 mt-2 rounded-lg focus:ring-blue-500 focus:border-blue-500\"\n                     placeholder=\"Value\">\n\n              <button @click.prevent=\"removeMetadataField(index)\" class=\"btn btn-sm ml-2 mt-2\">Remove</button>\n            </div>\n            <button @click.prevent=\"addMetadataField\" class=\"btn btn-sm mt-2\">Add Metadata</button>\n\n\n            <div class=\"flex flex-row justify-center pt-6\">\n              <button type=\"submit\" class=\"btn btn-wide bg-green-500 hover:bg-green-400 text-white\"\n                      :disabled=\"form.processing\">\n                <slot name=\"button-label\">Default Form Title</slot>\n              </button>\n\n            </div>\n          </form>\n        </div>\n\n      </div>\n\n\n      <div class=\"modal-action\">\n        <button class=\"btn\" @click.prevent=\"closeModal\">Cancel</button>\n        <form method=\"dialog\">\n          <!-- if there is a button, it will close the modal -->\n\n        </form>\n      </div>\n    </div>\n  </dialog>\n\n</template>\n<script setup>\nimport { reactive, ref, watch } from 'vue'\nimport { useForm } from '@inertiajs/vue3'\nimport { useChannelStore } from '@/Stores/ChannelStore'\nimport { useAdminStore } from '@/Stores/AdminStore'\n\nconst channelStore = useChannelStore()\nconst adminStore = useAdminStore()\n\nimport Label from '@/Jetstream/Label.vue'\nimport Button from '@/Jetstream/Button.vue'\n\nlet props = defineProps({\n  mistStream: Object,\n  id: String,\n  // errors: Object,\n})\n\n// const errors = ref(props.errors);\nconst modalVisible = ref(false)\n\nconst metadata = ref([{key: '', value: ''}])\nlet originalName = ref(''); // used for stream name changes\n\nconst addMetadataField = () => {\n  form.metadata.push({key: '', value: ''})\n}\n\nconst removeMetadataField = (index) => {\n  form.metadata.splice(index, 1)\n}\n\nlet form = reactive(useForm({\n  id: '',\n  name: '',\n  source: 'push://',\n  mime_type: 'application/vnd.apple.mpegurl',\n  comment: '',\n  metadata: [], // Initialize with one empty metadata entry\n}))\n\nform.reset() // on modal load, reset form.\n\n// Watch for changes in the mistStream object in your Pinia store\nwatch(() => channelStore.mistStream, (newVal) => {\n  if (newVal) {\n    // Populate the form with mistStream data\n    form.id = newVal.id || ''\n    form.name = newVal.name || ''\n    originalName.value = newVal.name || ''; // Capture the original name\n    form.source = newVal.source || 'push://'\n    form.mime_type = newVal.mime_type || 'application/vnd.apple.mpegurl'\n    form.comment = newVal.comment || ''\n\n    // Convert metadata object to array format\n    if (newVal.metadata && typeof newVal.metadata === 'object') {\n      form.metadata = Object.entries(newVal.metadata).map(([key, value]) => ({\n        key, value,\n      }))\n    } else {\n      form.metadata = [{key: '', value: ''}] // Reset to initial state if no metadata\n    }\n  } else {\n    // Reset the form to initial state if there's no mistStream selected (e.g., for adding a new stream)\n    form.reset()\n  }\n}, {deep: true, immediate: true})\n//\n// let submit = () => {\n//   form.post(route('mistStream.add'))\n//   form.name = ''\n//   form.comment = ''\n//   if (!form.errors) {\n//     document.getElementById('adminAddMistStreamModal').close()\n//   }\n// }\n\nlet submit = async () => {\n  await form.post(route('mistStream.addOrUpdate', { originalName: originalName.value })), {\n    onSuccess: () => {\n      postSubmissionActions(); // Call the async function\n    },\n    onError: () => {\n      // Handle errors if needed, e.g., log to console or show a message\n      // Errors are automatically attached to the form object\n    },\n\n  }\n  closeModal()\n}\n\nconst postSubmissionActions = async () => {\n  await adminStore.fetchItems('mistStream'); // Await the fetching of items\n  channelStore.clearMistStream(); // Clear selected mistStream\n  form.reset(); // Reset form fields\n  closeModal(); // Close modal\n};\n\nfunction closeModal() {\n  document.getElementById(props.id).close()\n  channelStore.clearMistStream()\n  // Reset the form fields to their initial values\n  form.reset()\n  // Clear all validation errors\n  form.clearErrors()\n}\n\n// function toggleModal() {\n//   console.log('Toggling modal:', !modalVisible.value)\n//   modalVisible.value = !modalVisible.value\n//   form.name = ''\n//   form.comment = ''\n// }\n</script>\n","import script from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"mx-4 my-4\">\n    <div class=\"alert alert-info mt-4\"\n         v-if=\"props.flash.message\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" class=\"stroke-current shrink-0 w-6 h-6\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n      </svg>\n      <span>{{ props.flash.message }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-success mt-4 mx-3\"\n         v-if=\"props.flash.success\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.success }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-warning mt-4 mx-3\"\n         v-if=\"props.flash.warning\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"/>\n      </svg>\n      <span>{{ props.flash.warning }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-error mt-4 mx-3\"\n         v-if=\"props.flash.error\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.error }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n  </div>\n\n</template>\n\n<script setup>\nimport { router } from '@inertiajs/vue3'\nimport { computed } from \"vue\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\n\nconst appSettingStore = useAppSettingStore()\n\nappSettingStore.showFlashMessage = true\n\nlet props = defineProps({\n  flash: Object,\n\n})\n\nconst messageType = computed(() => ({\n  'text-green-700 bg-green-100 dark:bg-green-200 dark:text-green-800': props.flash.success,\n  'text-blue-700 bg-blue-100 dark:bg-blue-200 dark:text-blue-800': props.flash.message,\n  'text-orange-700 bg-orange-100 dark:bg-orange-200 dark:text-orange-800': props.flash.warning,\n  'text-red-700 bg-red-100 dark:bg-red-200 dark:text-red-800': props.flash.error,\n}))\n\nconst clearFlashMessage = async () => {\n  await router.post(route('flash.clear'));\n  router.reload();\n};\n</script>\n","import script from \"./Pagination.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Pagination.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div v-if=\"data.last_page > 1\" class=\"flex flex-wrap justify-center my-4 space-x-4 space-y-2\">\n    <div></div>\n    <Component v-if=\"data && data.links\"\n        :is=\"link.url ? 'Link' : 'span'\"\n        v-for=\"(link, key) in data.links\"\n        :key=\"key\"\n        :href=\"link.url\"\n        @click.prevent=\"saveScrollPosition\"\n        v-html=\"link.label\"\n        class=\"px-4 py-3 text-sm leading-4 h-fit\"\n        :class=\"{ 'text-white bg-orange-400 hover:bg-orange-400 dark:bg-orange-400 dark:hover:bg-orange-400': link.active,\n                      'rounded mt-2 mr-0.5 text-gray-300 dark:text-gray-700': ! link.url,\n                      'rounded bg-gray-200 hover:bg-gray-300 dark:bg-gray-800 dark:hover:bg-gray-600 text-gray-800 dark:text-gray-50 focus:text-indigo-500 hover:shadow': link.url }\"\n    />\n  </div>\n</template>\n\n\n<script setup>\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\n\nconst appSettingStore = useAppSettingStore()\n\ndefineProps({\n  data: Object,\n})\n\n\nappSettingStore.savedScrollPosition = 0\nconst saveScrollPosition = () => {\n  appSettingStore.savedScrollPosition = window.scrollY\n}\nwindow.scrollTo(0, appSettingStore.savedScrollPosition)\n\n</script>\n\n\n<!--class=\"px-1 text-gray-800 dark:text-gray-50 dark:hover:text-blue-400 hover:text-blue-400\"-->\n<!--:class=\"{ 'text-gray-300 dark:text-gray-700 dark:hover:text-gray-700 hover:text-gray-300': ! link.url, 'font-bold' : link.active }\"-->\n","import script from \"./AdminHeader.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AdminHeader.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <header>\n    <div class=\"flex justify-between my-3\">\n      <div class=\"mb-4 relative\">\n        <h1 class=\"text-3xl font-semibold inline-block\">\n          <slot/>\n        </h1>\n        <span v-if=\"displayBadges\" class=\"text-white font-semibold badge badge-success absolute -top-2 -right-10 flex items-center justify-center min-w-[2rem] h-[2rem] rounded-full\">{{ (badgePrimaryNumber ?? 0) > 99 ? '99+' : (badgePrimaryNumber ?? 0) }}</span>\n        <span v-if=\"displayBadges\" class=\"font-semibold badge badge-warning absolute -top-2 -right-20 flex items-center justify-center min-w-[2rem] h-[2rem] rounded-full\">{{ (badgeSecondaryNumber ?? 0) > 99 ? '99+' : (badgeSecondaryNumber ?? 0) }}</span>\n\n      </div>\n      <div>\n        <div class=\"flex flex-wrap-reverse justify-end gap-2\">\n          <Link :href=\"`/admin/settings`\">\n            <button\n                class=\"px-4 py-2 text-white bg-blue-600 hover:bg-blue-500 rounded-lg\"\n            >Admin Settings\n            </button>\n          </Link>\n        </div>\n      </div>\n    </div>\n  </header>\n\n</template>\n\n<script setup>\nimport { reactive } from 'vue'\n\nconst props = defineProps({\n  displayBadges: Boolean,\n  badgePrimaryNumber: Number,\n  badgeSecondaryNumber: Number,\n});\n\nconst defaultProps = {\n  displayBadges: false,\n};\n\nconst finalProps = reactive({ ...defaultProps, ...props });\n\n</script>\n","import script from \"./DynamicModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./DynamicModal.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <dialog id=\"dynamicModal\" class=\"modal\">\n    <div class=\"modal-box w-11/12 max-w-5xl\">\n\n      <div class=\"flex flex-row justify-between align-bottom\">\n        <div >\n         <h3 class=\"font-bold text-lg\">{{ adminStore.modalHeader }}</h3>\n        </div>\n        <div>\n          <h3>{{ adminStore?.selectedChannel?.name }}</h3>\n        </div>\n      </div>\n      <div class=\"flex justify-center mb-6\">\n        <div class=\"flex items-center mt-6 xl:mt-0\">\n          <div class=\"relative\">\n            <input v-model=\"adminStore.searchTerm\" @input=\"debouncedFetchItems\" type=\"search\" class=\"bg-gray-50 text-black text-sm rounded-full\n                        focus:outline-none focus:shadow w-64 pl-8 px-3 py-1\" placeholder=\"Search...\">\n            <div class=\"absolute top-0 flex items-center h-full ml-2\">\n              <svg class=\"fill-current text-gray-400 w-4\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n                <path\n                    d=\"M456.69 421.39 362.6 327.3a173.81 173.81 0 0 0 34.84-104.58C397.44 126.38 319.06 48 222.72 48S48 126.38 48 222.72s78.38 174.72 174.72 174.72A173.81 173.81 0 0 0 327.3 362.6l94.09 94.09a25 25 0 0 0 35.3-35.3ZM97.92 222.72a124.8 124.8 0 1 1 124.8 124.8 124.95 124.95 0 0 1-124.8-124.8Z\"/>\n              </svg>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div>\n        <div class=\"overflow-x-auto\">\n          <table class=\"table table-xs\">\n            <thead>\n            <tr>\n              <th>\n                <span v-if=\"adminStore.currentType === 'channelPlaylist'\">Active</span>\n                <span v-if=\"adminStore.currentType === 'mistStream'\">Active</span>\n              </th>\n              <th>\n                <span v-if=\"adminStore.currentType === 'channelPlaylist'\">Name</span>\n                <span v-if=\"adminStore.currentType === 'mistStream'\">Name</span>\n              </th>\n              <th>\n                <span v-if=\"adminStore.currentType === 'channelPlaylist'\">Type</span>\n                <span v-if=\"adminStore.currentType === 'mistStream'\">Source</span>\n              </th>\n              <th>\n                <span v-if=\"adminStore.currentType === 'channelPlaylist'\">Priority</span>\n                <span v-if=\"adminStore.currentType === 'mistStream'\">MIME Type</span>\n              </th>\n              <th>\n                <span v-if=\"adminStore.currentType === 'channelPlaylist'\">Repeat Mode</span>\n                <span v-if=\"adminStore.currentType === 'mistStream'\">Comment</span>\n              </th>\n              <th>\n                <span v-if=\"adminStore.currentType === 'channelPlaylist'\">Start Time</span>\n                <span v-if=\"adminStore.currentType === 'mistStream'\">Created On</span>\n              </th>\n              <th>\n                <span v-if=\"adminStore.currentType === 'channelPlaylist'\">End Time</span>\n                <span v-if=\"adminStore.currentType === 'mistStream'\"></span>\n              </th>\n              <th>\n                  <!-- For delete -->\n              </th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr v-for=\"item in adminStore.paginatedItems\" :key=\"item.id\" class=\"hover:bg-blue-300 hover:cursor-pointer\" :class=\"{'bg-yellow-500': item.id === adminStore.activeItemId}\">\n              <td @click=\"selectItem(item)\" >\n                <div v-if=\"adminStore.currentType === 'channelPlaylist'\"><span v-if=\"item.active\" class=\"text-green-500\">Active</span><span v-else class=\"text-red-700\">Inactive</span></div>\n                <span v-if=\"adminStore.currentType === 'mistStream'\"><span v-if=\"item.active\" class=\"text-green-500\">Active</span><span v-else class=\"text-red-700\">Inactive</span></span>\n              </td>\n              <td @click=\"selectItem(item)\" >\n                <span v-if=\"adminStore.currentType === 'channelPlaylist'\">{{ item.name }}</span>\n                <span v-if=\"adminStore.currentType === 'mistStream'\">{{ item.name }}</span>\n              </td>\n              <td @click=\"selectItem(item)\" >\n                <span v-if=\"adminStore.currentType === 'channelPlaylist'\">{{ item.type }}</span>\n                <span v-if=\"adminStore.currentType === 'mistStream'\">{{ item.source }}</span>\n              </td>\n              <td @click=\"selectItem(item)\" >\n                <span v-if=\"adminStore.currentType === 'channelPlaylist'\">{{ item.priority }}</span>\n                <span v-if=\"adminStore.currentType === 'mistStream'\">{{ item.mime_type }}</span>\n              </td>\n              <td @click=\"selectItem(item)\" >\n                <span v-if=\"adminStore.currentType === 'channelPlaylist'\">{{ item.repeat_mode }}</span>\n                <span v-if=\"adminStore.currentType === 'mistStream'\">{{ item.comment }}</span>\n              </td>\n              <td @click=\"selectItem(item)\" >\n                <span v-if=\"adminStore.currentType === 'channelPlaylist'\">{{ formatDateTime(item.start_time) }}</span>\n                <span v-if=\"adminStore.currentType === 'mistStream'\">{{ formatDateTime(item.created_at) }}</span>\n\n              </td>\n              <td @click=\"selectItem(item)\" >\n                <span v-if=\"adminStore.currentType === 'channelPlaylist'\">{{ formatDateTime(item.end_time) }}</span>\n                <span v-if=\"adminStore.currentType === 'mistStream'\"></span>\n              </td>\n              <td class=\"w-fit whitespace-nowrap overflow-hidden\">\n                <button\n                    v-if=\"adminStore.currentType === 'mistStream'\"\n                    @click.prevent=\"openEditModal(item)\"\n                    class=\"ml-2 px-2 py-1 text-white font-semibold bg-blue-500 hover:bg-blue-600 rounded-lg\"\n                >\n                  <font-awesome-icon icon=\"fa-pencil\" class=\"text-xs\"/>\n                </button>\n                <button\n                    v-if=\"adminStore.currentType === 'mistStream'\"\n                    @click=\"removeItem(item)\"\n                    class=\"ml-1 px-2 py-1 text-white font-semibold bg-red-500 hover:bg-red-600 rounded-lg\"\n                >\n                  <font-awesome-icon icon=\"fa-trash-can\" class=\"text-xs\"/>\n                </button>\n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </div>\n        <div v-if=\"adminStore.totalModalPages > 1\" class=\"flex flex-row justify-center mt-6 w-full\">\n          <div class=\"join grid grid-cols-2\">\n            <button class=\"join-item btn btn-sm btn-outline\" @click=\"adminStore.prevPage\">Previous page</button>\n            <button class=\"join-item btn btn-sm btn-outline\" @click=\"adminStore.nextPage\">Next</button>\n          </div>\n        </div>\n      </div>\n\n      <AddOrUpdateMistStreamModal :id=\"`updateMistStreamModal`\" :form-errors=\"$page.props.errors\" @update-list=\"refreshList\">\n        <template #form-title>\n          Update Mist Stream\n        </template>\n        <template #form-description>\n          Note: You cannot edit the stream name (right now), it will only create a new stream. This is a bug that needs to be fixed in the AddOrUpdateMistStreamJob\n        </template>\n        <template #button-label>\n          Update\n        </template>\n      </AddOrUpdateMistStreamModal>\n\n\n      <dialog id=\"confirmSelectionModal\" class=\"modal\">\n        <div class=\"modal-box\">\n          <h3 class=\"font-bold text-lg\">Confirm Selection</h3>\n          <p class=\"py-4\">\n            Are you sure you want to select <span id=\"selectedItemName\"></span>?\n          </p>\n          <div class=\"modal-action\">\n            <button class=\"btn\" @click=\"confirmSelection\">Confirm</button>\n            <button class=\"btn\" onclick=\"document.getElementById('confirmSelectionModal').close()\">Cancel</button>\n          </div>\n        </div>\n      </dialog>\n\n      <dialog id=\"confirmRemoveModal\" class=\"modal\">\n        <div class=\"modal-box\">\n          <h3 class=\"font-bold text-lg\">Confirm Remove</h3>\n          <p class=\"py-4\">\n            Are you sure you want to remove <span id=\"selectedForRemovalItemName\"></span>?\n          </p>\n          <div class=\"modal-action\">\n            <button class=\"btn\" @click=\"confirmRemove\">Confirm</button>\n            <button class=\"btn\" onclick=\"document.getElementById('confirmRemoveModal').close()\">Cancel</button>\n          </div>\n        </div>\n      </dialog>\n\n\n      <div class=\"modal-action\">\n        <form method=\"dialog\">\n          <!-- if there is a button, it will close the modal -->\n          <button class=\"btn\" @click=\"adminStore.clearSelectedChannelAndItems\">Close</button>\n        </form>\n      </div>\n    </div>\n  </dialog>\n</template>\n\n<script setup>\nimport { ref, watch, computed, onMounted, nextTick } from 'vue'\nimport { useAdminStore } from '@/Stores/AdminStore'\nimport { useChannelStore } from '@/Stores/ChannelStore'\nimport debounce from \"lodash/debounce\"\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome'\nimport { router } from '@inertiajs/vue3'\nimport AddOrUpdateMistStreamModal from '@/Components/Global/MistStreams/AddOrUpdateMistStreamModal.vue'\n\nconst adminStore = useAdminStore();\nconst channelStore = useChannelStore();\n// const searchTerm = ref('');\n\nlet props = defineProps({\n  type: String\n})\n\nconst items = computed(() => adminStore.filteredItems);\nconst currentItemId = computed(() => adminStore.activeItem);\n\n// const searchItems = () => {\n//   adminStore.searchItems(adminStore.type, searchTerm.value);\n// };\n//\n// const debouncedFetchItems = debounce(adminStore.searchItems, 300);\n\n// watch(searchTerm, debouncedFetchItems);\n\n\nconst selectedItem = ref(null); // A reactive property to hold the currently selected item\n\nconst selectItem = (item) => {\n  selectedItem.value = item; // Store the item temporarily\n  document.getElementById('selectedItemName').textContent = item.name; // Display the name in the modal\n  document.getElementById('confirmSelectionModal').showModal(); // Open the modal for confirmation\n};\n\nconst removeItem = (item) => {\n  selectedItem.value = item; // Store the item temporarily\n  document.getElementById('selectedForRemovalItemName').textContent = item.name; // Display the name in the modal\n  document.getElementById('confirmRemoveModal').showModal(); // Open the modal for confirmation\n};\n\nconst editItem = (item) => {\n  selectedItem.value = item; // Store the item temporarily\n  // Create Modal for editing\n  // document.getElementById('selectedForRemovalItemName').textContent = item.name; // Display the name in the modal\n  // document.getElementById('confirmRemoveModal').showModal(); // Open the modal for confirmation\n};\n\nconst confirmSelection = async () => {\n  if (selectedItem.value) {\n    await adminStore.updateActiveItemId(selectedItem.value.id);\n    document.getElementById('confirmSelectionModal').close(); // Close the modal\n    // Handle additional logic for item selection if necessary\n  }\n};\n\nconst confirmRemove = async () => {\n  if (selectedItem.value) {\n    await removeMistStream(selectedItem.value.name);\n    document.getElementById('confirmRemoveModal').close(); // Close the modal\n    // Handle additional logic for item selection if necessary\n  }\n};\n// const selectItem = async (item) => {\n//   await adminStore.updateActiveItemId(item.id);\n//   // Handle additional logic for item selection if necessary\n// };\n\nconst openEditModal = (item) => {\n  updateMistStreamModal.showModal()\n  channelStore.mistStream = item\n}\n\nonMounted(async () => {\n  await adminStore.fetchItems(props.type)\n})\n\n\nconst removeMistStream = (name) => {\n  router.post(route('mistStream.remove'), { 'name': name } )\n  document.getElementById('dynamicModal').close();\n}\n\nconst refreshList = () => {\n  adminStore.fetchItems(props.type);\n}\n// adminStore.fetchItems(props.type)\n\n// onMounted(adminStore.fetchItems(adminStore.type)); // Optionally fetch items when the modal mounts\n\n// const fetchItems = () => {\n//   router.get(`/admin/channels/search/${props.type}`, { search: searchTerm.value }, {\n//     preserveState: false,\n//     onSuccess: (page) => {\n//       items.value = page.props.items; // Assume your backend sends back 'items'\n//     }\n//   });\n// };\n\n// watch(searchTerm, fetchItems);\n\n// onMounted(fetchItems); // Optionally fetch items when the modal mounts\n</script>\n\n\n<!--<script setup>-->\n<!--import { ref, defineProps, defineEmits } from 'vue';-->\n\n<!--const props = defineProps({-->\n<!--  showModal: Boolean,-->\n<!--  currentItem: Object,-->\n<!--  itemsType: String-->\n<!--});-->\n\n<!--const emits = defineEmits(['update:item', 'close']);-->\n\n<!--const searchTerm = ref('');-->\n<!--const items = ref([]);-->\n\n<!--const fetchItems = async () => {-->\n<!--  // Fetch items based on `itemsType` and `searchTerm`-->\n<!--  // Update `items` with the fetched data-->\n<!--};-->\n\n<!--const selectItem = (item) => {-->\n<!--  emits('update:item', { type: props.itemsType, item });-->\n<!--};-->\n\n<!--const closeModal = () => {-->\n<!--  emits('close');-->\n<!--};-->\n<!--</script>-->\n","<template>\n  <!--  <div class=\"source-selector\" :class=\"{'is-priority': source?.isPriority, 'is-playing': source?.isPlaying, 'is-fallback': source?.isFallback, 'has-error': source?.hasError}\">-->\n  <div\n      :class=\"['source-selector', {'is-priority': source?.playback_priority_type, 'is-playing': source?.isPlaying, 'is-fallback': source?.isFallback, 'has-error': source?.hasError}]\">\n    <div>\n      <!-- Display the source status here (playing, fallback, error) -->\n      <div v-if=\"source?.playback_priority_type === sourceType\" class=\"btn btn-xs mt-1 text-white bg-green-500 hover:bg-green-500\">Priority</div>\n      <span>\n\n      </span>\n      <!-- Icon or button to set this source as priority -->\n      <!--      <button class=\"btn btn-xs\" v-if=\"!source?.playback_priority_type\" @click=\"setPriority\">Set as Priority</button>-->\n    </div>\n  </div>\n\n  <!--  <div v-if=\"source?.playback_priority_type === 'mistStream'\">-->\n  <!--    <button class=\"btn btn-xs hover:bg-green-500 bg-green-500\">Priority</button>-->\n  <!--  </div>-->\n\n  <button v-if=\"source?.playback_priority_type !== sourceType\" class=\"btn btn-xs mt-1\"\n          @click=\"setPriority\">Set as Priority\n  </button>\n\n\n  <dialog :id=\"`confirmPriorityChangeModal`\" class=\"modal\">\n    <div class=\"modal-box\">\n      <h3 class=\"font-bold text-lg\">Confirm Selection for {{ adminStore.sourceSelector?.source?.name }}</h3>\n      <p class=\"py-4\">\n        Are you sure you want to change priority to <span class=\"font-bold\">{{ adminStore.sourceSelector?.sourceType }}</span>?\n      </p>\n      <div class=\"modal-action\">\n        <button class=\"btn\" @click=\"confirmPriorityChange\">Confirm</button>\n        <button class=\"btn\" onclick=\"document.getElementById('confirmPriorityChangeModal').close()\">Cancel</button>\n      </div>\n    </div>\n  </dialog>\n\n\n</template>\n\n<script setup>\nimport { useAdminStore } from '@/Stores/AdminStore'\nimport { ref } from 'vue'\n\nconst adminStore = useAdminStore()\n\nlet props = defineProps([\n  'source',\n  'sourceType',\n])\n\n// const setPriority = (sourceType) => {\n//   emit('change', { sourceType, priority: true });\n//   // Implement function to make API call to update the backend\n// };\n\n\nconst setPriority = () => {\nadminStore.sourceSelector.source = props.source\nadminStore.sourceSelector.sourceType = props.sourceType\n  document.getElementById('confirmPriorityChangeModal').showModal() // Open the modal for confirmation\n}\n\nconst confirmPriorityChange = async () => {\n  await adminStore.setPlaybackPriorityType(adminStore.sourceSelector.source, adminStore.sourceSelector.sourceType)\n  document.getElementById('confirmPriorityChangeModal').close() // Close the modal\n\n}\n\n// const setPriority = async () => {\n//   // Directly call the store action to update the priority.\n//   await adminStore.setPlaybackPriorityType(props.source, props.sourceType);\n//   // No need to emit an event to the parent component.\n// };\n\n</script>\n\n<style scoped>\n.source-selector {\n  /* Base styles */\n  //margin-top: 0.5rem;\n}\n\n.is-playing {\n  /* Styles for playing status */\n}\n\n.is-priority {\n  /* Styles for isPriority status */\n  color: black;\n  font-weight: 300;\n}\n\n.is-fallback {\n  /* Styles for fallback status */\n}\n\n.has-error {\n  /* Styles for error status */\n}\n\n</style>\n","import api from \"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-10.use[1]!../../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-10.use[2]!../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./SourceSelector.vue?vue&type=style&index=0&id=c559967c&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./SourceSelector.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./SourceSelector.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./SourceSelector.vue?vue&type=style&index=0&id=c559967c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-c559967c\"]])\n\nexport default __exports__","import script from \"./Label.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Label.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"month-view\">\n    <!-- Month view layout -->\n    <div class=\"container mx-auto px-4 py-8\">\n      <div class=\"flex justify-between items-center mb-4\">\n        <button @click=\"scheduleStore.subtractMonth\" class=\"p-2 bg-gray-200 rounded-full hover:bg-gray-300\">\n          <!-- Previous Month -->\n          <span>&lt;</span>\n        </button>\n        <span>{{ currentMonthName }} {{ currentYear }}</span>\n        <button @click=\"scheduleStore.addMonth\" class=\"p-2 bg-gray-200 rounded-full hover:bg-gray-300\">\n          <!-- Next Month -->\n          <span>&gt;</span>\n        </button>\n      </div>\n      <div class=\"grid grid-cols-7 gap-4 text-center\">\n        <!-- Day of the week headings -->\n        <div class=\"font-bold\" v-for=\"day in daysOfWeek\" :key=\"day\">{{ day }}</div>\n        <!-- Days -->\n        <div\n            class=\"py-2 rounded-full hover:bg-blue-100 cursor-pointer\"\n            v-for=\"(day, index) in daysInMonth\"\n            :key=\"index\"\n            :class=\"{'bg-blue-200 text-gray-800': isSelectedDay(day), 'text-gray-300': !isCurrentMonth(day), 'text-gray-800': isCurrentMonth(day)}\"\n            @click=\"selectDay(day)\"\n        >\n          {{ day.getDate() }}\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\n// Month view logic\nimport { useScheduleStore } from '@/Stores/ScheduleStore';\nimport { getMonth, isSameDay, isToday as isTodayDate, startOfMonth, endOfMonth, startOfWeek, endOfWeek, eachDayOfInterval, addDays } from 'date-fns';\nimport { storeToRefs } from 'pinia'\nimport { computed, watch } from 'vue'\n\nconst scheduleStore = useScheduleStore();\n// const { currentMonthName, currentYear, daysInMonth, subtractMonth, addMonth, currentMonthIndex } = storeToRefs(scheduleStore);\nconst { viewingWindowStart, currentMonth, currentMonthName, currentYear, daysInMonth } = storeToRefs(scheduleStore);\n\n// const now = new Date();\n// const currentMonth = ref(now);\n\nwatch(viewingWindowStart, (newValue, oldValue) => {\n  // When viewingWindowStart changes, update currentMonth to the new month of viewingWindowStart\n  scheduleStore.currentMonth = new Date(viewingWindowStart.value.getFullYear(), viewingWindowStart.value.getMonth(), 1);\n  }, { deep: true });\n\nconst daysOfWeek = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\n// Computes the days to be displayed in the month, including days from the previous and next months to fill the weeks\n// const daysInMonth = computed(() => {\n//   const currentMonth = scheduleStore.currentMonth; // Assuming currentMonth is a reactive date object for the current month\n//   const startOfCurrentMonth = startOfMonth(currentMonth);\n//   const endOfCurrentMonth = endOfMonth(currentMonth);\n//\n//   // Start at the beginning of the week where the first day of the month is\n//   const startOfGrid = startOfWeek(startOfCurrentMonth, { weekStartsOn: 0 });\n//   // End at the end of the week where the last day of the month is\n//   const endOfGrid = endOfWeek(endOfCurrentMonth, { weekStartsOn: 0 });\n//\n//   // Generate the days for the calendar grid\n//   return eachDayOfInterval({ start: startOfGrid, end: endOfGrid });\n// });\n\n// Method to handle day selection\nfunction selectDay(day) {\n  scheduleStore.setSelectedDay(day); // Assuming you've added setSelectedDay action to your store\n}\n\nfunction isToday(day) {\n  return isTodayDate(day);\n}\n\nfunction isSelectedDay(day) {\n  return isSameDay(day, scheduleStore.selectedDay); // Use isSameDay for comparison\n}\n\nfunction isCurrentMonth(day) {\n  // Since you're already tracking currentMonth in the store, ensure this function uses it directly\n  return getMonth(day) === getMonth(scheduleStore.currentMonth); // Directly compare to the store's currentMonth\n}\n\n// const startDayOfMonth = computed(() => startOfMonth(currentMonth.value));\n// const endDayOfMonth = computed(() => endOfMonth(currentMonth.value));\n\n// const daysInMonth = computed(() =>\n//     eachDayOfInterval({\n//       start: startDayOfMonth.value,\n//       end: endDayOfMonth.value,\n//     })\n// );\n\n// const currentMonthName = computed(() => format(currentMonth.value, 'MMMM'));\n// const currentYear = computed(() => getYear(currentMonth.value));\n\n// function subtractMonth() {\n//   currentMonth.value = subMonths(currentMonth.value, 1);\n// }\n//\n// function addMonth() {\n//   currentMonth.value = addMonths(currentMonth.value, 1);\n// }\n\n// function isToday(day) {\n//   return isTodayDate(day);\n// }\n//\n// function isCurrentMonth(day) {\n//   return getMonth(day) === currentMonthIndex.value; // Use `.value` because `storeToRefs` makes it a ref\n// }\n</script>\n\n<style scoped>\n/* Styles specific to month view */\n</style>","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-10.use[1]!../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-10.use[2]!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./MonthView.vue?vue&type=style&index=0&id=6ea1523e&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./MonthView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./MonthView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./MonthView.vue?vue&type=style&index=0&id=6ea1523e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-6ea1523e\"]])\n\nexport default __exports__","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-10.use[1]!../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-10.use[2]!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./WeekView.vue?vue&type=style&index=0&id=91256a50&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./WeekView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./WeekView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./WeekView.vue?vue&type=style&index=0&id=91256a50&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-91256a50\"]])\n\nexport default __exports__","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-10.use[1]!../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-10.use[2]!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./ThreeDayView.vue?vue&type=style&index=0&id=51271fd0&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./ThreeDayView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ThreeDayView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ThreeDayView.vue?vue&type=style&index=0&id=51271fd0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-51271fd0\"]])\n\nexport default __exports__","<template>\n  <Head title=\"Admin/Schedule\"/>\n\n  <div class=\"place-self-center flex flex-col\">\n    <div id=\"topDiv\" class=\"bg-white text-black dark:bg-gray-800 dark:text-gray-50 p-5 mb-10\">\n\n      <Message v-if=\"appSettingStore.showFlashMessage\" :flash=\"$page.props.flash\"/>\n\n      <AdminHeader>Schedule</AdminHeader>\n\n      <div class=\"flex flex-row justify-between gap-x-4 mb-3\">\n        <div>\n          <Link :href=\"`#`\">\n            <button\n                class=\"btn btn-sm bg-green-500 hover:bg-green-600 text-white px-4 py-2 mr-2 rounded disabled:bg-gray-400\"\n                disabled\n            >Blank\n            </button>\n          </Link>\n          <Link :href=\"`#`\">\n            <button\n                class=\"btn btn-sm bg-green-500 hover:bg-green-600 text-white px-4 py-2 mr-2 rounded disabled:bg-gray-400\"\n                disabled\n            >Blank\n            </button>\n          </Link>\n          <Link :href=\"`#`\">\n            <button\n                class=\"btn btn-sm bg-green-500 hover:bg-green-600 text-white px-4 py-2 mr-2 rounded disabled:bg-gray-400\"\n                disabled\n            >Blank\n            </button>\n          </Link>\n          <button\n              @click.prevent=\"purgeAllCaches\"\n              class=\"btn btn-sm bg-green-500 hover:bg-green-600 text-white px-4 py-2 mr-2 rounded-lg disabled:bg-gray-400\"\n          >\n            Purge All Caches\n          </button>\n\n\n        </div>\n        <input v-model=\"adminStore.searchTerm\" type=\"search\" placeholder=\"Search...\" class=\"border px-2 rounded-lg\"/>\n      </div>\n\n      <div class=\"flex flex-col\">\n        <div class=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\n          <div class=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\n            <div class=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\n\n              <div class=\"relative overflow-x-auto shadow-md sm:rounded-lg\">\n                <div\n                    class=\"table w-full text-sm text-left text-gray-500 dark:text-gray-400\"\n                >\n                  <div\n                      class=\"table-header-group text-xs text-gray-700 bg-gray-50 dark:bg-gray-700 dark:text-gray-400\"\n                  >\n                    <div class=\"table-row\">\n                      <div scope=\"col\" class=\"table-cell px-6 py-3 uppercase\">\n                        <font-awesome-icon icon=\"fa-repeat\" class=\"mr-2 cursor-pointer hover:text-blue-500\"\n                                           @click.prevent=\"resetCalendar\"/>\n                        <span class=\"uppercase\">Calendar </span>\n                      </div>\n\n\n                    </div>\n                  </div>\n                  <div class=\"table-row-group\">\n\n                    <div class=\"calendar\">\n\n                      <!-- Calendar View -->\n                      <div class=\"calendar-view\">\n                        <MonthView />\n\n                        <!-- View Selector -->\n                        <div class=\"view-selector px-6 space-x-2 border-t-2 border-gray-50 pt-6\">\n                          <span class=\"text-xm uppercase font-semibold tracking-wider\">View: </span>\n                          <button @click=\"setView('week')\" class=\"py-1 px-2 text-black rounded-lg\" :class=\"[currentView === 'week' ? 'bg-blue-200' : 'bg-gray-100 hover:bg-gray-200']\">Week</button>\n                          <button @click=\"setView('threeDay')\" class=\"py-1 px-2 text-black rounded-lg\" :class=\"[currentView === 'threeDay' ? 'bg-blue-200' : 'bg-gray-100 hover:bg-gray-200']\">3-Day</button>\n                          <button @click=\"setView('oneDay')\" class=\"py-1 px-2 text-black rounded-lg\" :class=\"[currentView === 'oneDay' ? 'bg-blue-200' : 'bg-gray-100 hover:bg-gray-200']\">1-Day</button>\n                          <button  @click=\"setToToday\" class=\"py-1 px-2 text-black rounded-lg\" :class=\"{'bg-blue-200': scheduleStore.isToday, 'bg-gray-100 hover:bg-gray-200': !scheduleStore.isToday}\">Today</button>\n                        </div>\n                        <WeekView v-if=\"currentView === 'week'\"/>\n                        <ThreeDayView v-if=\"currentView === 'threeDay'\"/>\n                        <TodayView v-if=\"currentView === 'oneDay'\"/>\n                      </div>\n                    </div>\n\n\n\n\n\n                  </div>\n                </div>\n\n              </div>\n            </div>\n          </div>\n        </div>\n\n\n\n\n\n      </div>\n    </div>\n  </div>\n\n</template>\n\n\n<script setup>\nimport { router } from '@inertiajs/vue3'\nimport { onBeforeUnmount, onMounted, onUnmounted, ref, watch } from 'vue'\nimport throttle from 'lodash/throttle'\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome'\nimport { usePageSetup } from '@/Utilities/PageSetup'\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\nimport { useScheduleStore } from '@/Stores/ScheduleStore'\nimport { useAdminStore } from '@/Stores/AdminStore'\nimport AdminHeader from '@/Components/Pages/Admin/AdminHeader'\nimport Message from '@/Components/Global/Modals/Messages'\nimport Pagination from '@/Components/Global/Paginators/Pagination'\nimport SourceSelector from '@/Components/Pages/Admin/Channels/SourceSelector'\nimport DynamicModal from '@/Components/Pages/Admin/Channels/DynamicModal'\nimport AddOrUpdateMistStreamModal from '@/Components/Global/MistStreams/AddOrUpdateMistStreamModal'\nimport MonthView from '@/Components/Global/Calendar/MonthView'\nimport WeekView from '@/Components/Global/Calendar/WeekView'\nimport ThreeDayView from '@/Components/Global/Calendar/ThreeDayView'\nimport TodayView from '@/Components/Global/Calendar/TodayView'\n\nusePageSetup('admin.schedule')\n\nconst appSettingStore = useAppSettingStore()\nconst scheduleStore = useScheduleStore()\nconst adminStore = useAdminStore()\n\nlet props = defineProps({})\n\nconst reloadSchedule = () => {\n  //\n}\n\nconst setToToday = () => {\n  // Use the existing action to set the selected day to today\n  scheduleStore.setSelectedDayToToday(new Date());\n  currentView.value = 'oneDay'\n};\n\nconst currentView = ref('oneDay')\n\nconst setView = (view) => {\n  currentView.value = view\n}\n\nconst purgeAllCaches = () => {\n  scheduleStore.resetAll()\n  router.post('/admin/schedule/admin-reset-cache')\n  router.reload()\n}\n\nconst resetCalendar = () => {\n  scheduleStore.reset()\n  scheduleStore.checkAndFetchForUpcomingContent()\n}\n\nonBeforeUnmount(() => {\n  scheduleStore.reset()\n})\n\n</script>\n\n<style scoped>\n\n#tooltip {\n  background: #333;\n  color: white;\n  font-weight: bold;\n  padding: 4px 8px;\n  font-size: 13px;\n  border-radius: 4px;\n}\n\n:deep(.popper) {\n  background: #333333;\n  padding: 2px;\n  border-radius: 20px;\n  color: #fff;\n  font-weight: bold;\n  text-transform: uppercase;\n}\n\n:deep(.popper #arrow::before) {\n  background: #333333;\n}\n\n:deep(.popper:hover),\n:deep(.popper:hover > #arrow::before) {\n  background: #333333;\n}\n</style>\n","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-10.use[1]!../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-10.use[2]!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./Index.vue?vue&type=style&index=0&id=568965d8&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./Index.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Index.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Index.vue?vue&type=style&index=0&id=568965d8&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-568965d8\"]])\n\nexport default __exports__"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","initialState","channels","items","activeItemId","selectedChannel","currentType","searchTerm","modalHeader","currentPage","itemsPerPage","currentChannelsPage","itemsPerChannelsPage","sourceSelector","source","sourceType","firstPlaySettings","useCustomVideo","customVideoSource","customVideoSourceType","validationErrors","checkSendProcessing","activeStreams","fetchingActiveStreams","settingsForm","subscriptionSettings","monthly","price","api_id","yearly","useAdminStore","defineStore","state","actions","assign","this","loadChannels","setCheckSendProcessing","unsetCheckSendProcessing","fetchChannels","_this","_callee","_context","axios","get","response","data","console","log","toggleChannelActiveStatus","channelId","_callee2","notificationStore","_response$data","message","status","_context2","useNotificationStore","post","setToastNotification","t0","addChannel","_this2","_callee3","_response$data2","errorMessage","validationMessages","_context3","success","fallbackMessages","map","msgs","join","updateChannel","newName","_this3","_callee4","_response$data3","_context4","concat","setSelectedChannel","item","setCurrentType","clearSelectedChannelAndItems","fetchItems","_this4","_callee5","_response","_response2","_context5","fetch","json","mist_stream_id","channel_external_source_id","channel_playlist_id","updateActiveItemId","id","_this5","_callee6","_context6","setMistStream","setChannelPlaylist","setExternalSource","setPlaybackPriorityType","channel","priorityType","_this6","_callee7","dataToSend","index","_context7","setPriorityType","findIndex","mistStreamId","_this7","_callee8","_context8","channelPlaylistId","_this8","_callee9","_context9","externalSourceId","_this9","_callee10","_context10","nextPage","totalModalPages","Math","ceil","prevPage","setPage","page","nextChannelsPage","prevChannelsPage","setChannelsPage","fetchFirstPlaySettings","_this10","_callee11","_response$data4","_context11","updateFirstPlaySettings","_this11","_callee12","_context12","patch","errors","handleErrors","fetchActiveStreams","_this12","_callee13","_response$data5","_context13","setActiveStreamAsFirstPlay","activeStream","_this13","_callee14","videoPlayerStore","_context14","useVideoPlayerStore","mistServerUri","customVideoName","customMediaType","streamName","streamMimeType","showName","getters","filteredItems","currentItem","find","activeItem","paginatedItems","start","end","paginatedChannels","totalChannelsPages","activeChannelsCount","filter","active","dayjs","utc","timezone","ownKeys","getOwnPropertySymbols","getOwnPropertyDescriptor","_objectSpread","_defineProperty","getOwnPropertyDescriptors","defineProperties","obj","toPrimitive","String","Number","_toPrimitive","convertScheduleToTimezone","scheduleData","userStore","useUserStore","startTimeInUserTz","startTime","formatDateTimeFromUtcToUserTimezone","endTimeInUserTz","endTime","getUpcomingContentDates","viewingWindowStart","dates","add","toDate","weekOfYear","advancedFormat","isSameOrAfter","isSameOrBefore","getTimeZone","baseTime","tz","currentHalfHour","startOf","minute","fourHoursLater","currentMonth","selectedDay","currentWeekStart","currentWeekEnd","endOf","nextFourHoursOfContent","nextFourHoursOfContentWithPlaceholders","fiveDaySixHourSchedule","schedules","isLoading","hasMore","todaysContent","weeklyContent","dataFetchLog","savingToSchedule","slotIntervalMinutes","mediumScreenSlotHours","smallScreenSlotHours","verySmallScreenSlotHours","timeSlots","timeBanners","duration","useScheduleStore","resetAll","setSelectedDay","day","fetchWeekDataIfNeeded","setSelectedDayToToday","now","changeDay","days","currentTimeZone","currentTime","newDay","hour","shiftHours","hours","isSame","isElevenPM","date","subtractMonth","subtract","addMonth","fetchFiveDaySixHourSchedule","userTimezone","fetchTodaysContent","preloadWeeklyContent","currentDate","loadWeekFromDate","fetchSchedules","startDate","endDate","dayStartDate","dayEndDate","fullISOStartDate","fullISOEndDate","newData","toISOString","format","_toConsumableArray","Set","JSON","stringify","parse","fetchMoreSchedules","lastSchedule","formattedDate","dayDate","fullISODate","updateFetchLogs","weekStart","weekEnd","fetchTime","existingLogIndex","lastFetch","needsDataForWeek","formatISODate","weekStartStr","weekEndStr","some","logWeekStartStr","logWeekEndStr","calculateExtendedEndForUpcomingContent","checkAndFetchForUpcomingContent","upcomingDates","fifteenMinutesAgo","_iterator","_step","_loop","_createForOfIteratorHelper","dateString","content","contentDate","lastFetchedTime","isFresh","fetchDataAndUpdateLog","t1","_this14","_context15","updateBaseTime","time","setBaseTime","newTime","updateNextFourHours","_this15","_callee15","_context16","updateTimeRange","setTimeSlots","prepareShowsForGrid","baseDate","roundedMinutes","second","millisecond","initializeTimeSlots","durationHours","intervalMinutes","slots","slotTime","createTimeSlots","slotHours","appSettingStore","useAppSettingStore","isVerySmallScreen","isSmallScreen","totalSlots","Array","isArray","shows","filterShowsForTimeRange","processedShows","calculateGridSlots","showsWithStatusFlags","processShows","_this$updateColumnOcc","updateColumnOccupancy","colOccupancy","maxRowUsed","gridItems","fillGapsAndCreatePlaceholders","combinedShows","sortShowsByPosition","_this16","show","durationMinutes","warn","showStart","showEnd","isInTimeRange","isBefore","isAfter","firstTimeSlot","lastTimeSlot","slotIndex","slot","max","endSlotIndex","span","gridStart","gridSpan","_this17","comingUpNextSet","nowPlaying","placeholder","comingUpNext","cols","fill","gridRow","row","findAndFillGapsForSingleRow","gapStart","has","createPlaceholder","createBlankSpotPlaceholder","sort","b","priority","preparedTimeBanners","timeZone","todayStart","tomorrowStart","yesterdayStart","flatMap","banner","bannerTodayStart","parseInt","split","bannerTodayEnd","clone","bannerTomorrowStart","bannerTomorrowEnd","bannerYesterdayStart","bannerYesterdayEnd","startSlotIndex","nextFourHoursWithHalfHourIntervals","intervals","current","formatted","dateTimeString","upcomingContent","showsGroupedByStartTime","reduce","acc","itemStart","valueOf","group","selected","unix","nextSixHours","adjustedStart","dateMessage","startDay","startOfDay","isToday","isYesterday","isTomorrow","currentMonthIndex","month","currentMonthName","currentYear","year","today","viewingStart","daysInMonth","startOfCurrentMonth","endOfCurrentMonth","startOfGrid","endOfGrid","usePageSetup","pageName","showFlashMessage","pageIsHidden","isMobile","window","innerWidth","fullPage","ott","showOttButtons","makeVideoTopRight","pageReload","pageWasReloaded","location","reload","router","on","event","search","shouldScrollToTop","requestAnimationFrame","topDiv","document","getElementById","scrollIntoView","behavior","scrollTo","setPrevUrl","noLayout","___CSS_LOADER_EXPORT___","module","scheduleStore","_storeToRefs","storeToRefs","ref","computed","_ref","_x","isWithinCurrentHour","startOfCurrentHour","startOfHour","endOfCurrentHour","addHours","contentStartTime","Date","start_time","isContentAvailableForHour","formatHour","getTimeSegment","hourOfDay","getHours","segment","color","watch","newValue","goToContentPage","visit","slug","formatDuration","minutes","floor","remainingMinutes","_ref2","newTimezone","oldTimezone","_x2","_x3","immediate","options","locals","channelStore","useChannelStore","props","__props","originalName","addMetadataField","form","metadata","reactive","useForm","mime_type","comment","mistStream","newVal","entries","_slicedToArray","deep","submit","_ref3","route","closeModal","close","clearMistStream","clearErrors","splice","clearFlashMessage","flash","warning","savedScrollPosition","saveScrollPosition","scrollY","displayBadges","adminStore","selectedItem","selectItem","textContent","showModal","confirmSelection","confirmRemove","removeMistStream","onMounted","refreshList","updateMistStreamModal","setPriority","confirmPriorityChange","oldValue","getFullYear","getMonth","daysOfWeek","isSelectedDay","isSameDay","isCurrentMonth","setToToday","currentView","setView","view","purgeAllCaches","resetCalendar","onBeforeUnmount"],"sourceRoot":""}
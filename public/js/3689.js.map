{"version":3,"file":"js/3689.js","mappings":"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","sources":["webpack://nottvbeta/./resources/js/Utilities/PageSetup.js","webpack://nottvbeta/./resources/js/Components/Global/Modals/Messages.vue?dfe9","webpack://nottvbeta/./resources/js/Components/Global/Modals/Messages.vue","webpack://nottvbeta/./resources/js/Pages/Calculations.vue?1853","webpack://nottvbeta/./resources/js/Pages/Calculations.vue"],"sourcesContent":["import { onBeforeMount, onMounted, watch } from 'vue'\nimport { useUserStore } from \"@/Stores/UserStore\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useVideoPlayerStore } from \"@/Stores/VideoPlayerStore\"\nimport { router } from '@inertiajs/vue3'\n\nexport function usePageSetup(pageName) {\n    const userStore = useUserStore()\n    const appSettingStore = useAppSettingStore()\n    const videoPlayerStore = useVideoPlayerStore()\n\n    appSettingStore.currentPage = pageName\n    appSettingStore.showFlashMessage = true\n    appSettingStore.pageIsHidden = false\n\n// PageSetup utility\n    if (userStore.isMobile || window.innerWidth < 1024) {\n        appSettingStore.ott = 0; // Close all panels on mobile devices\n    } else if (appSettingStore.fullPage) {\n        appSettingStore.ott = 0; // Default to closed in fullPage mode\n    } else {\n        if (appSettingStore.ott === 0) {\n            appSettingStore.ott = 4\n        }\n        // appSettingStore.ott = 4; // Open OttChat by default on larger screens\n        appSettingStore.showOttButtons = true;\n    }\n\n    videoPlayerStore.makeVideoTopRight()\n\n    if (appSettingStore.pageReload) {\n        appSettingStore.pageReload = false\n        appSettingStore.pageWasReloaded = true\n        window.location.reload();\n    }\n    // Check if the URL contains query strings\n\n\n    // Only scroll into view if there are no query strings\n\n        // const topDiv = document.getElementById(\"topDiv\")\n        // if (topDiv) {\n        //     topDiv.scrollIntoView()\n        // }\n        router.on('navigate', (event) => {\n            // Ensure OTT panels do not open automatically on mobile devices\n            if (userStore.isMobile || window.innerWidth < 1024 || appSettingStore.fullPage) {\n                appSettingStore.ott = 0; // Close all panels on mobile devices\n            } else {\n                if (appSettingStore.ott === 0) {\n                    appSettingStore.ott = 4\n                }\n                // appSettingStore.ott = 0; // Default to closed on larger screens\n            }\n            const hasQueryStrings = window.location.search !== '';\n            if (!hasQueryStrings || appSettingStore.shouldScrollToTop) {\n                requestAnimationFrame(() => {\n                    const topDiv = document.getElementById(\"topDiv\");\n                    if (topDiv) {\n                        topDiv.scrollIntoView({behavior: 'auto'});\n                    } else {\n                        window.scrollTo(0, 0);\n                    }\n                });\n            }\n            appSettingStore.shouldScrollToTop = false;\n        })\n    // Only update if we're not already on this page to avoid overwriting with the current URL\n    appSettingStore.setPrevUrl()\n    appSettingStore.showOttButtons = true\n    appSettingStore.noLayout = false\n\n    // router.reload()\n\n    watch(\n        () => appSettingStore.isSmallScreen,\n        (newValue) => {\n            if (newValue) {\n                appSettingStore.ott = 0;\n            } else {\n                appSettingStore.ott = 4;\n            }\n        },\n        { immediate: true } // This option ensures the watch executes immediately with the current value\n    );\n\n}\n","import script from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"mx-4 my-4\">\n    <div class=\"alert alert-info mt-4\"\n         v-if=\"props.flash.message\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" class=\"stroke-current shrink-0 w-6 h-6\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n      </svg>\n      <span>{{ props.flash.message }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-success mt-4 mx-3\"\n         v-if=\"props.flash.success\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.success }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-warning mt-4 mx-3\"\n         v-if=\"props.flash.warning\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"/>\n      </svg>\n      <span>{{ props.flash.warning }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-error mt-4 mx-3\"\n         v-if=\"props.flash.error\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.error }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n  </div>\n\n</template>\n\n<script setup>\nimport { router } from '@inertiajs/vue3'\nimport { computed } from \"vue\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\n\nconst appSettingStore = useAppSettingStore()\n\nappSettingStore.showFlashMessage = true\n\nlet props = defineProps({\n  flash: Object,\n\n})\n\nconst messageType = computed(() => ({\n  'text-green-700 bg-green-100 dark:bg-green-200 dark:text-green-800': props.flash.success,\n  'text-blue-700 bg-blue-100 dark:bg-blue-200 dark:text-blue-800': props.flash.message,\n  'text-orange-700 bg-orange-100 dark:bg-orange-200 dark:text-orange-800': props.flash.warning,\n  'text-red-700 bg-red-100 dark:bg-red-200 dark:text-red-800': props.flash.error,\n}))\n\nconst clearFlashMessage = async () => {\n  await router.post(route('flash.clear'));\n  router.reload();\n};\n</script>\n","import script from \"./Calculations.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Calculations.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n\n  <Head title=\"Shop\"/>\n\n  <div class=\"place-self-center flex flex-col gap-y-3\">\n    <div id=\"topDiv\" class=\"bg-white text-black dark:bg-gray-800 dark:text-gray-50 p-5 mb-10\">\n\n      <Message v-if=\"appSettingStore.showFlashMessage\" :flash=\"$page.props.flash\"/>\n\n      <header class=\"flex justify-between items-center mb-3\">\n        <div id=\"topDiv\">\n          <h1 class=\"text-4xl font-bold text-gray-800 pb-3\">Streaming Storage Calculations</h1>\n        </div>\n      </header>\n\n      <div class=\"mb-6\">\n        <p class=\"text-lg text-gray-600\">\n          Estimate your storage needs and compare the costs of different storage providers for continuous streaming.\n        </p>\n      </div>\n\n      <div class=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n        <div class=\"bg-white p-6 rounded-lg shadow-md\">\n          <h2 class=\"text-2xl font-semibold text-blue-600 mb-4\">Storage Requirements</h2>\n          <p class=\"text-gray-700 mb-4\">\n            For a 24x7 streaming at <strong>1920x1080, H.264 1080, 23.98 fps</strong>:\n          </p>\n          <ul class=\"list-disc list-inside text-gray-700\">\n            <li><strong>Bitrate:</strong> 4.5 Mbps</li>\n            <li><strong>Storage per hour:</strong> 2.44 GB</li>\n            <li><strong>Total storage (72 hours):</strong> 2.44 TB</li>\n          </ul>\n          <div class=\"mt-4\">\n            <a href=\"https://www.digitalrebellion.com/webapps/videocalc\" target=\"_blank\">\n              <button class=\"bg-blue-500 text-white font-semibold py-2 px-4 rounded-lg hover:bg-blue-600\">\n                Open Storage Calculator\n              </button>\n            </a>\n          </div>\n        </div>\n\n        <div class=\"bg-white p-6 rounded-lg shadow-md\">\n          <h2 class=\"text-2xl font-semibold text-green-600 mb-4\">Cost Comparison</h2>\n          <p class=\"text-gray-700 mb-4\">Cost to store 1 TB and 72 hours of video:</p>\n          <ul class=\"list-disc list-inside text-gray-700\">\n            <li>\n              <a href=\"https://www.digitalocean.com/pricing/spaces-object-storage\" target=\"_blank\"\n                 class=\"text-blue-500 underline hover:text-blue-700\">\n                DigitalOcean\n              </a>:\n              <ul class=\"pl-5 mt-2\">\n                <li><strong>Cost for 250 GiB:</strong> Included</li>\n                <li><strong>Additional Storage Cost:</strong> $0.02/GiB</li>\n                <li><strong>Cost for 1 TB (additional 750 GiB):</strong> $15.00/mo</li>\n                <li><strong>Cost for 72 hours (2.44 TB):</strong> $36.80/mo</li>\n              </ul>\n            </li>\n            <li class=\"mt-4\">\n              <a href=\"https://wasabi.com/pricing\" target=\"_blank\" class=\"text-blue-500 underline hover:text-blue-700\">\n                Wasabi\n              </a>:\n              <ul class=\"pl-5 mt-2\">\n                <li><strong>Cost per TB:</strong> $6.99/mo</li>\n                <li><strong>Cost for 72 hours (2.44 TB):</strong> $17.05/mo</li>\n              </ul>\n            </li>\n          </ul>\n        </div>\n\n      </div>\n\n      <div class=\"p-6\">\n        <header class=\"flex justify-between items-center mb-8\">\n          <h1 class=\"text-4xl font-bold text-gray-800\">Storage Growth Milestones</h1>\n        </header>\n\n        <!-- Growth Milestones for Storing 72 Hours of Live Stream Buffer -->\n        <div class=\"mb-10\">\n          <h2 class=\"text-2xl font-semibold text-green-600 mb-4\">Growth Milestones for 72 Hours Live Stream Buffer</h2>\n          <div class=\"overflow-x-auto\">\n            <table class=\"min-w-full bg-white border border-gray-300 rounded-lg shadow-md\">\n              <thead>\n              <tr class=\"bg-gray-200 text-gray-700 text-left\">\n                <th class=\"py-2 px-4\">Milestone</th>\n                <th class=\"py-2 px-4\">Channel Count</th>\n                <th class=\"py-2 px-4\">Total Storage (TB)</th>\n                <th class=\"py-2 px-4\">DigitalOcean Cost (Monthly)</th>\n                <th class=\"py-2 px-4\">Wasabi Cost (Monthly)</th>\n              </tr>\n              </thead>\n              <tbody>\n              <tr v-for=\"(milestone, index) in liveStreamBufferMilestones\" :key=\"index\" class=\"border-t\">\n                <td class=\"py-2 px-4\">{{ milestone.milestone }}</td>\n                <td class=\"py-2 px-4\">{{ milestone.streamCount }}</td>\n                <td class=\"py-2 px-4\">{{ milestone.totalStorage }}</td>\n                <td class=\"py-2 px-4\">{{ milestone.digitalOceanCost }}</td>\n                <td class=\"py-2 px-4\">{{ milestone.wasabiCost }}</td>\n              </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n\n        <!-- Accumulated Storage of VOD Content -->\n        <div class=\"mb-10\">\n          <h2 class=\"text-2xl font-semibold text-blue-600 mb-4\">Accumulated Storage of VOD Content</h2>\n          <div class=\"overflow-x-auto\">\n            <table class=\"min-w-full bg-white border border-gray-300 rounded-lg shadow-md\">\n              <thead>\n              <tr class=\"bg-gray-200 text-gray-700 text-left\">\n                <th class=\"py-2 px-4\">Time Period</th>\n                <th class=\"py-2 px-4\">VOD Content Added (TB/Month)</th>\n                <th class=\"py-2 px-4\">Total Storage After Period (TB)</th>\n                <th class=\"py-2 px-4\">DigitalOcean Cost (Monthly)</th>\n                <th class=\"py-2 px-4\">Wasabi Cost (Monthly)</th>\n              </tr>\n              </thead>\n              <tbody>\n              <tr v-for=\"(content, index) in vodStorageMilestones\" :key=\"index\" class=\"border-t\">\n                <td class=\"py-2 px-4\">{{ content.timePeriod }}</td>\n                <td class=\"py-2 px-4\">{{ content.vodContentAdded }}</td>\n                <td class=\"py-2 px-4\">{{ content.totalStorage }}</td>\n                <td class=\"py-2 px-4\">{{ content.digitalOceanCost }}</td>\n                <td class=\"py-2 px-4\">{{ content.wasabiCost }}</td>\n              </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n\n\n        <!-- Content Equivalents -->\n        <div>\n          <h2 class=\"text-2xl font-semibold text-purple-600 mb-4\">Content Equivalents for Accumulated VOD Storage</h2>\n          <div class=\"overflow-x-auto\">\n            <table class=\"min-w-full bg-white border border-gray-300 rounded-lg shadow-md\">\n              <thead>\n              <tr class=\"bg-gray-200 text-gray-700 text-left\">\n                <th class=\"py-2 px-4\">Time Period</th>\n                <th class=\"py-2 px-4\">Total Storage (TB)</th>\n                <th class=\"py-2 px-4\">Hours of HD Content</th>\n                <th class=\"py-2 px-4\">Equivalent to:</th>\n              </tr>\n              </thead>\n              <tbody>\n              <tr v-for=\"(equivalent, index) in contentEquivalents\" :key=\"index\" class=\"border-t\">\n                <td class=\"py-2 px-4\">{{ equivalent.timePeriod }}</td>\n                <td class=\"py-2 px-4\">{{ equivalent.totalStorage }}</td>\n                <td class=\"py-2 px-4\">{{ equivalent.hoursOfContent }}</td>\n                <td class=\"py-2 px-4\">\n                  {{ equivalent.equivalentTo }} <br>\n                  ({{ equivalent.thirtyMinEpisodes }} 30-min episodes)\n                </td>\n              </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n\n\n        <!-- Explanation -->\n        <div class=\"mt-10\">\n          <h2 class=\"text-xl font-semibold text-gray-800\">Explanation of Calculations</h2>\n          <p class=\"text-gray-600 mt-4\">\n            The equivalents in the Content Equivalents chart are calculated based on the following assumptions:\n          </p>\n          <ul class=\"list-disc list-inside text-gray-600 mt-2\">\n            <li><strong>Music Videos:</strong> Each music video is assumed to be 5 minutes long.</li>\n            <li><strong>30-Minute Shows:</strong> Each show is 30 minutes in duration.</li>\n            <li><strong>Movies:</strong> Each movie is considered to be 2 hours (120 minutes) long.</li>\n          </ul>\n          <p class=\"text-gray-600 mt-4\">\n            Using these assumptions, the number of content pieces that can fit into the accumulated storage is calculated as follows:\n          </p>\n          <ul class=\"list-disc list-inside text-gray-600 mt-2\">\n            <li><strong>Music Videos:</strong> 1 hour of content equals 12 music videos (60 minutes / 5 minutes per video).</li>\n            <li><strong>30-Minute Shows:</strong> 1 hour of content equals 2 shows (60 minutes / 30 minutes per show).</li>\n            <li><strong>Movies:</strong> 1 hour of content equals 0.5 movies (60 minutes / 120 minutes per movie).</li>\n          </ul>\n        </div>\n\n      </div>\n\n\n      <!--            <div class=\"flex flex-row justify-end gap-x-4 mb-4\">-->\n\n      <!--                <input v-model=\"search\" type=\"search\" placeholder=\"Search...\" class=\"border px-2 rounded-lg\" />-->\n      <!--            </div>-->\n\n      <div class=\"px-2\">\n        <!--                Display items, services and events here.-->\n      </div>\n\n    </div>\n  </div>\n\n</template>\n\n<script setup>\nimport { usePageSetup } from '@/Utilities/PageSetup'\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\nimport Message from '@/Components/Global/Modals/Messages'\n\nusePageSetup('calculations')\n\nconst appSettingStore = useAppSettingStore()\n\nlet props = defineProps({\n  can: Object,\n})\n\nconst liveStreamBufferMilestones = [\n  {\n    milestone: 'Initial',\n    streamCount: '1 Stream',\n    totalStorage: '2.44 TB',\n    digitalOceanCost: '$36.80',\n    wasabiCost: '$17.05',\n  },\n  {\n    milestone: '10 Streams',\n    streamCount: '10 Streams',\n    totalStorage: '24.4 TB',\n    digitalOceanCost: '$368.00',\n    wasabiCost: '$170.50',\n  },\n  {\n    milestone: '50 Streams',\n    streamCount: '50 Streams',\n    totalStorage: '122 TB',\n    digitalOceanCost: '$1,840.00',\n    wasabiCost: '$852.50',\n  },\n  {\n    milestone: '100 Streams',\n    streamCount: '100 Streams',\n    totalStorage: '244 TB',\n    digitalOceanCost: '$3,680.00',\n    wasabiCost: '$1,705.00',\n  },\n  {\n    milestone: '500 Streams',\n    streamCount: '500 Streams',\n    totalStorage: '1,220 TB',\n    digitalOceanCost: '$18,400.00',\n    wasabiCost: '$8,525.00',\n  },\n  {\n    milestone: '1,000 Streams',\n    streamCount: '1,000 Streams',\n    totalStorage: '2,440 TB',\n    digitalOceanCost: '$36,800.00',\n    wasabiCost: '$17,050.00',\n  },\n]\n\nconst vodStorageMilestones = [\n  {\n    timePeriod: '1st Month',\n    vodContentAdded: '10 TB',\n    totalStorage: '10 TB',\n    digitalOceanCost: '$150.00',\n    wasabiCost: '$69.90',\n  },\n  {\n    timePeriod: '6th Month',\n    vodContentAdded: '60 TB',\n    totalStorage: '70 TB',\n    digitalOceanCost: '$1,350.00',\n    wasabiCost: '$489.30',\n  },\n  {\n    timePeriod: '12th Month',\n    vodContentAdded: '120 TB',\n    totalStorage: '190 TB',\n    digitalOceanCost: '$3,300.00',\n    wasabiCost: '$1,328.10',\n  },\n  {\n    timePeriod: '18th Month',\n    vodContentAdded: '180 TB',\n    totalStorage: '370 TB',\n    digitalOceanCost: '$6,600.00',\n    wasabiCost: '$2,587.50',\n  },\n  {\n    timePeriod: '24th Month',\n    vodContentAdded: '240 TB',\n    totalStorage: '610 TB',\n    digitalOceanCost: '$10,800.00',\n    wasabiCost: '$4,266.90',\n  },\n]\n\nconst contentEquivalents = [\n  { timePeriod: '1st Month', totalStorage: '10 TB', hoursOfContent: '2,500 hours', equivalentTo: '30,000 music videos or 1,250 movies', thirtyMinEpisodes: '5,000' },\n  { timePeriod: '6th Month', totalStorage: '70 TB', hoursOfContent: '17,500 hours', equivalentTo: '210,000 music videos or 8,750 movies', thirtyMinEpisodes: '35,000' },\n  { timePeriod: '12th Month', totalStorage: '190 TB', hoursOfContent: '47,500 hours', equivalentTo: '570,000 music videos or 23,750 movies', thirtyMinEpisodes: '95,000' },\n  { timePeriod: '18th Month', totalStorage: '370 TB', hoursOfContent: '92,500 hours', equivalentTo: '1,110,000 music videos or 46,250 movies', thirtyMinEpisodes: '185,000' },\n  { timePeriod: '24th Month', totalStorage: '610 TB', hoursOfContent: '152,500 hours', equivalentTo: '1,830,000 music videos or 76,250 movies', thirtyMinEpisodes: '305,000' },\n];\n\n</script>\n\n"],"names":["usePageSetup","pageName","userStore","useUserStore","appSettingStore","useAppSettingStore","videoPlayerStore","useVideoPlayerStore","currentPage","showFlashMessage","pageIsHidden","isMobile","window","innerWidth","fullPage","ott","showOttButtons","makeVideoTopRight","pageReload","pageWasReloaded","location","reload","router","on","event","search","shouldScrollToTop","requestAnimationFrame","topDiv","document","getElementById","scrollIntoView","behavior","scrollTo","setPrevUrl","noLayout","watch","isSmallScreen","newValue","immediate","props","__props","clearFlashMessage","computed","flash","success","message","warning","error","_ref","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","post","route","stop","apply","arguments","liveStreamBufferMilestones","milestone","streamCount","totalStorage","digitalOceanCost","wasabiCost","vodStorageMilestones","timePeriod","vodContentAdded","contentEquivalents","hoursOfContent","equivalentTo","thirtyMinEpisodes"],"sourceRoot":""}
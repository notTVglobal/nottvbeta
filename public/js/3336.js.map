{"version":3,"file":"js/3336.js","mappings":"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","sources":["webpack:///./resources/js/Stores/ScheduleStore.js","webpack:///./resources/js/Utilities/PageSetup.js","webpack:///./resources/js/Components/Global/Calendar/TodayView.vue?e38d","webpack:///./resources/js/Pages/Schedule.vue?840f","webpack:///./resources/js/Components/Global/Calendar/TodayView.vue","webpack:///./resources/js/Components/Global/Calendar/TodayView.vue?d129","webpack:///./resources/js/Components/Global/Calendar/TodayView.vue?ee4f","webpack:///./resources/js/Components/Global/Modals/Messages.vue?dfe9","webpack:///./resources/js/Components/Global/Modals/Messages.vue","webpack:///./resources/js/Components/Global/Modals/PopUpModal.vue?0d51","webpack:///./resources/js/Components/Global/Modals/PopUpModal.vue","webpack:///./resources/js/Pages/Schedule.vue","webpack:///./resources/js/Pages/Schedule.vue?c271","webpack:///./resources/js/Pages/Schedule.vue?77d5"],"sourcesContent":["import { defineStore } from 'pinia'\nimport { useUserStore } from '@/Stores/UserStore'\nimport {\n    addDays,\n    addHours,\n    addMonths,\n    eachDayOfInterval,\n    eachHourOfInterval,\n    endOfMonth,\n    endOfWeek,\n    format,\n    getHours,\n    getMonth,\n    getYear,\n    isSameDay,\n    isToday,\n    isTomorrow,\n    isYesterday,\n    startOfDay,\n    startOfHour,\n    startOfMonth,\n    startOfWeek,\n    subMonths,\n} from 'date-fns'\n\n// Import dayjs and its plugins\nimport dayjs from 'dayjs'\nimport relativeTime from 'dayjs/plugin/relativeTime'\nimport timezone from 'dayjs/plugin/timezone'\nimport utc from 'dayjs/plugin/utc'\n\n// Extend dayjs with the plugins\ndayjs.extend(relativeTime)\ndayjs.extend(timezone)\ndayjs.extend(utc)\n\nfunction convertScheduleToTimezone(scheduleData) {\n    const userStore = useUserStore(); // Access the UserStore\n\n    return scheduleData.data.map(item => {\n        // Convert top-level start_time and end_time using UserStore methods\n        const startTimeInUserTz = item.start_time ? userStore.formatDateTimeFromUtcToUserTimezone(item.start_time, 'YYYY-MM-DD HH:mm:ss') : null;\n        const endTimeInUserTz = item.end_time ? userStore.formatDateTimeFromUtcToUserTimezone(item.end_time, 'YYYY-MM-DD HH:mm:ss') : null;\n\n        // Check and convert recurrenceDetails if present\n        let recurrenceDetailsInUserTz = null;\n        if (item.recurrenceDetails) {\n            const { start_time, start_date, end_date } = item.recurrenceDetails;\n            recurrenceDetailsInUserTz = {\n                ...item.recurrenceDetails,\n                start_time: start_time ? userStore.formatTimeInUserTimezone(start_time, 'HH:mm:ss') : null,\n                start_date: start_date ? userStore.formatDateTimeFromUtcToUserTimezone(start_date, 'YYYY-MM-DD') : null,\n                end_date: end_date ? userStore.formatDateTimeFromUtcToUserTimezone(end_date, 'YYYY-MM-DD') : null,\n            };\n        }\n\n        return {\n            ...item,\n            start_time: startTimeInUserTz,\n            end_time: endTimeInUserTz,\n            recurrenceDetails: recurrenceDetailsInUserTz,\n        };\n    });\n}\n\n// Helper function to get dates within the next 6 hours from viewingWindowStart\nfunction getUpcomingContentDates(viewingWindowStart) {\n    let dates = [];\n    let start = new Date(viewingWindowStart);\n    for (let i = 0; i < 6; i++) {\n        dates.push(new Date(start.setHours(start.getHours() + i)));\n    }\n    return dates;\n}\n\nconst initialState = () => ({\n    viewingWindowStart: new Date(),\n    currentMonth: new Date(),\n    selectedDay: new Date(),\n    // viewingMode: 'automatic', // or 'userSelected'\n    fiveDaySixHourSchedule: [], // Holds the schedule shows 5 day / 6 hour structured data\n    todaysContent: [],\n    weeklyContent: [],\n    dataFetchLog: [],\n})\n\nexport const useScheduleStore = defineStore('scheduleStore', {\n    state: initialState,\n    actions: {\n        resetAll() {\n            // Reset the store to its original state (clear all data)\n            Object.assign(this, initialState())\n        },\n        reset() {\n            const now = new Date()\n            this.viewingWindowStart = now\n            this.currentMonth = now\n            this.selectedDay = now\n        },\n        async setSelectedDay(day) {\n            this.selectedDay = day\n            // Explicitly set the viewingWindowStart to 4 AM for the selected day\n            this.viewingWindowStart = addHours(startOfDay(day), 4)\n\n            // Check if the week of the selected day is already loaded\n            const weekStart = startOfWeek(day, {weekStartsOn: 0});\n            const weekEnd = endOfWeek(day, {weekStartsOn: 0});\n\n            // First, check if we need to load data for the new week\n            if (this.needsDataForWeek(weekStart, weekEnd)) {\n                // If new data is needed for the week, load it\n                await this.loadWeekFromDate(day).catch(error => {\n                    console.error(\"Failed to load data for the new week:\", error);\n                });\n            }\n\n            // Then, check and fetch for any missing upcoming content\n            // This is necessary in case the week data is present but specific upcoming content within the week is missing\n            await this.checkAndFetchForUpcomingContent();\n        },\n        setSelectedDayToToday(day) {\n            const now = new Date()\n            this.selectedDay = now\n            this.viewingWindowStart = startOfHour(now)\n        },\n        async changeDay(days) {\n            const currentTime = this.viewingWindowStart.getHours() * 60 + this.viewingWindowStart.getMinutes()\n            let newDay = addDays(startOfDay(this.viewingWindowStart), days)\n            newDay = new Date(newDay.setMinutes(currentTime)) // Preserve time of day\n\n            this.selectedDay = newDay\n            this.viewingWindowStart = newDay\n\n            // Check if the week of the new day is already loaded\n            const weekStart = startOfWeek(newDay, {weekStartsOn: 0});\n            const weekEnd = endOfWeek(newDay, {weekStartsOn: 0});\n\n            // Check for the need to load data for the new week\n            if (this.needsDataForWeek(weekStart, weekEnd)) {\n                await this.loadWeekFromDate(newDay).catch(error => {\n                    console.error(\"Failed to load data for the new week:\", error);\n                });\n            }\n\n            // Then, check and fetch for any missing upcoming content\n            await this.checkAndFetchForUpcomingContent();\n        },\n        async shiftHours(hours) {\n            // Shift the viewing window\n            this.viewingWindowStart = addHours(this.viewingWindowStart, hours);\n\n            // Update selectedDay if the day has changed\n            if (!isSameDay(this.viewingWindowStart, this.selectedDay)) {\n                this.selectedDay = startOfDay(this.viewingWindowStart);\n            }\n\n            // Check if the week of the new viewing window is already loaded\n            const weekStart = startOfWeek(this.viewingWindowStart, { weekStartsOn: 0 });\n            const weekEnd = endOfWeek(this.viewingWindowStart, { weekStartsOn: 0 });\n\n            // Check for the need to load data for the new week\n            if (this.needsDataForWeek(weekStart, weekEnd)) {\n                await this.loadWeekFromDate(this.viewingWindowStart).catch(error => {\n                    console.error(\"Failed to load data for the new week:\", error);\n                });\n            }\n\n            // Then, check and fetch for any missing upcoming content\n            await this.checkAndFetchForUpcomingContent();\n        },\n        isElevenPM(date) {\n            return getHours(date) === 23 // Checks if the hour is 23 (11 PM)\n        },\n        // Actions to change the month\n        async subtractMonth() {\n            // Subtract one month from the currentMonth\n            this.currentMonth = subMonths(this.currentMonth, 1)\n\n            try {\n                await this.setSelectedDay(this.currentMonth)\n                console.log(\"Set selected day based on current month:\", this.currentMonth);\n            } catch (error) {\n                console.error(`Failed to set selected day based on current month ${this.currentMonth}:`, error);\n            }\n        },\n        async addMonth() {\n            this.currentMonth = addMonths(this.currentMonth, 1)\n            try {\n                await this.setSelectedDay(this.currentMonth)\n                console.log(\"Set selected day based on current month:\", this.currentMonth);\n            } catch (error) {\n                console.error(`Failed to set selected day based on current month ${this.currentMonth}:`, error);\n            }\n        },\n        async fetchFiveDaySixHourSchedule() {\n            try {\n                const userStore = useUserStore()\n                const response = await axios.get('/api/schedule')\n\n                // Fallback to response timezone if userStore.timezone is not set\n                const timezone = userStore.timezone || response.data.userTimezone || 'UTC'; // Additional fallback to 'UTC'\n\n                // Convert the entire schedule, including nested recurrenceDetails, to the user's timezone\n                this.fiveDaySixHourSchedule = convertScheduleToTimezone(response.data, timezone)\n            } catch (error) {\n                console.error('Failed to load schedule shows:', error)\n                // Handle the error state as needed, e.g., setting an error state property\n            }\n        },\n        async fetchTodaysContent() {\n            try {\n                const userStore = useUserStore()\n                const response = await axios.get('/api/schedule/today')\n\n                // Fallback to response timezone if userStore.timezone is not set\n                const timezone = userStore.timezone || response.data.userTimezone || 'UTC'; // Additional fallback to 'UTC'\n\n                this.todaysContent = convertScheduleToTimezone(response.data, timezone)\n            } catch (error) {\n                console.error('Failed to fetch today\\'s content:', error)\n            }\n        },\n        async preloadWeeklyContent() {\n            const userStore = useUserStore()\n            try {\n                const response = await axios.get('/api/schedule/week')\n                if (!userStore.timezone) {\n                    console.error(\"Timezone is not set.\");\n                    return; // Or handle this case as appropriate for your app\n                }\n\n                // Fallback to response timezone if userStore.timezone is not set\n                const timezone = userStore.timezone || response.data.userTimezone; // Additional fallback to 'UTC'\n\n                this.weeklyContent = convertScheduleToTimezone(response.data, timezone)\n            } catch (error) {\n                console.error('Failed to preload weekly content:', error)\n            }\n        },\n        async loadWeekFromDate(date) {\n            let formattedDate; // Declare formattedDate outside of the try block\n            try {\n                const userStore = useUserStore();\n                // Ensure the date is in UTC format for the request\n                const formattedDate = date.toISOString().split('T')[0];\n                console.log(`Loading week data for date: ${formattedDate}`); // Log the date being requested\n\n                const response = await axios.get(`/api/schedule/week/${formattedDate}`);\n                console.log('Received response:', response.data); // Log the raw response data\n\n                // Fallback to response timezone if userStore.timezone is not set\n                const timezone = userStore.timezone || response.data.userTimezone || 'UTC'; // Additional fallback to 'UTC'\n                console.log(`Using timezone: ${timezone}`); // Log the timezone being used\n\n                const newData = convertScheduleToTimezone(response.data, timezone); // Ensure you are accessing the correct data property from the response\n\n                // Update the fetch log with the current fetch\n                const weekStart = startOfWeek(new Date(date), { weekStartsOn: 0 }).toISOString();\n                const weekEnd = endOfWeek(new Date(date), { weekStartsOn: 0 }).toISOString();\n                const fetchTime = new Date().toISOString();\n\n                const existingLogIndex = this.dataFetchLog.findIndex(log => log.weekStart === weekStart && log.weekEnd === weekEnd);\n                if (existingLogIndex !== -1) {\n                    this.dataFetchLog[existingLogIndex].lastFetch = fetchTime;\n                } else {\n                    this.dataFetchLog.push({ weekStart, weekEnd, lastFetch: fetchTime });\n                }\n\n                // Merge newData into weeklyContent, avoiding duplicates\n                this.weeklyContent = [...this.weeklyContent, ...newData].filter((value, index, self) =>\n                        index === self.findIndex((t) => (\n                            t.id === value.id && t.start_time === value.start_time\n                        ))\n                );\n            } catch (error) {\n                console.error(`Failed to load content for week starting ${formattedDate}:`, error);\n            }\n        },\n\n        needsDataForWeek(weekStart, weekEnd) {\n            // Extend weekEnd to cover the span of upcoming content from viewingWindowStart\n            const extendedEnd = this.calculateExtendedEndForUpcomingContent();\n\n            // Adjust weekEnd if the extended end is beyond the original weekEnd\n            if (extendedEnd > weekEnd) {\n                weekEnd = extendedEnd;\n            }\n\n            // Now weekEnd includes any additional day(s) that might be displayed\n            weekEnd.setHours(23, 59, 59, 999);\n\n            const hasDataForExtendedWeek = this.weeklyContent.some(content => {\n                const contentDate = new Date(content.start_time);\n                return contentDate >= weekStart && contentDate <= weekEnd;\n            });\n\n            console.log('Has data for extended week range:', hasDataForExtendedWeek);\n            return !hasDataForExtendedWeek;\n        },\n        calculateExtendedEndForUpcomingContent() {\n            // Assuming viewingWindowStart is the reference start time for upcoming content\n            const baseStartTime = new Date(this.viewingWindowStart);\n            // Extend by 6 hours to cover the upcoming content span\n            // Return the extended end time, potentially adjusting into the next day\n            return new Date(baseStartTime.getTime() + (6 * 60 * 60 * 1000));\n        },\n        // Function to check for and fetch missing upcoming content\n        async checkAndFetchForUpcomingContent() {\n            const upcomingDates = getUpcomingContentDates(this.viewingWindowStart);\n            const now = new Date();\n            const fifteenMinutesAgo = new Date(now.getTime() - 15 * 60000);\n\n            for (const date of upcomingDates) {\n                const dateString = date.toISOString().split('T')[0];\n                const contentCoverageAndFreshness = this.weeklyContent.some(content => {\n                    const contentDate = new Date(content.start_time).toDateString();\n                    const lastFetchedTime = this.dataFetchLog[dateString];\n                    const isFresh = lastFetchedTime && new Date(lastFetchedTime) > fifteenMinutesAgo;\n                    return date.toDateString() === contentDate && isFresh;\n                });\n\n                if (!contentCoverageAndFreshness) {\n                    // This date needs data fetching\n                    await this.fetchDataAndUpdateLog(dateString, date);\n                    break; // Assuming you fetch data for the week, so no need to check further dates within the same week\n                }\n            }\n        },\n        async fetchDataAndUpdateLog(dateString, date) {\n            try {\n                await this.loadWeekFromDate(date);\n                // Successfully fetched, so update the log\n                this.dataFetchLog[dateString] = new Date().toISOString();\n                console.log(\"Data fetched successfully for date:\", dateString);\n            } catch (error) {\n                console.error(`Failed to fetch data for date ${dateString}:`, error);\n            }\n        }\n\n    },\n\n    getters: {\n        upcomingContent: (state) => {\n            const start = new Date(state.viewingWindowStart.getTime() - 60 * 60 * 1000); // 1 hour earlier\n            const end = new Date(start.getTime() + 7 * 60 * 60 * 1000); // 6 hours later\n\n            // Filter weeklyContent for the next 6 hours window\n            return state.weeklyContent.filter(item => {\n                const itemStart = new Date(item.start_time);\n                return itemStart >= start && itemStart < end;\n            }).sort((a, b) => new Date(a.start_time) - new Date(b.start_time));\n        },\n        nextSixHours: (state) => {\n            let adjustedStart = state.viewingWindowStart\n            const end = addHours(adjustedStart, 5)\n            return eachHourOfInterval({start: adjustedStart, end})\n        },\n        dateMessage: (state) => {\n            const startDay = startOfDay(state.viewingWindowStart)\n            const formattedDate = format(startDay, 'EEEE MMMM do, yyyy')\n            if (isToday(startDay)) {\n                return `Today - ${formattedDate}`\n            } else if (isYesterday(startDay)) {\n                return `Yesterday - ${formattedDate}`\n            } else if (isTomorrow(startDay)) {\n                return `Tomorrow - ${formattedDate}`\n            } else {\n                return formattedDate\n            }\n        },\n        currentMonthIndex: (state) => getMonth(state.currentMonth), // Adds a getter to get the current month's index\n        currentMonthName: (state) => format(state.currentMonth, 'MMMM'),\n        currentYear: (state) => getYear(state.currentMonth),\n        daysInMonth: (state) => {\n            const startOfCurrentMonth = startOfMonth(state.currentMonth);\n            const endOfCurrentMonth = endOfMonth(state.currentMonth);\n\n            // Adjust these to ensure the grid starts on Sunday and ends on Saturday\n            const startOfGrid = startOfWeek(startOfCurrentMonth, { weekStartsOn: 0 });\n            const endOfGrid = endOfWeek(endOfCurrentMonth, { weekStartsOn: 0 });\n\n            // Generate the days for the calendar grid\n            return eachDayOfInterval({ start: startOfGrid, end: endOfGrid });\n        },\n        isToday: (state) => {\n            const today = new Date()\n            const viewingStart = new Date(state.viewingWindowStart)\n\n            return today.toDateString() === viewingStart.toDateString()\n        },\n    },\n})\n","import { onBeforeMount, onMounted } from 'vue'\nimport { useUserStore } from \"@/Stores/UserStore\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useVideoPlayerStore } from \"@/Stores/VideoPlayerStore\"\nimport { Inertia } from '@inertiajs/inertia'\n\nexport function usePageSetup(pageName) {\n    const userStore = useUserStore()\n    const appSettingStore = useAppSettingStore()\n    const videoPlayerStore = useVideoPlayerStore()\n\n    appSettingStore.currentPage = pageName\n    appSettingStore.showFlashMessage = true\n    appSettingStore.pageIsHidden = false\n\n    if (userStore.isMobile) {\n        appSettingStore.ott = 0\n    } else {\n        appSettingStore.ott = 1\n    }\n\n    videoPlayerStore.makeVideoTopRight()\n\n    if (appSettingStore.pageReload) {\n        appSettingStore.pageReload = false\n        window.location.reload(true);\n    }\n    // Check if the URL contains query strings\n\n\n    // Only scroll into view if there are no query strings\n\n        // const topDiv = document.getElementById(\"topDiv\")\n        // if (topDiv) {\n        //     topDiv.scrollIntoView()\n        // }\n        Inertia.on('navigate', (event) => {\n            const hasQueryStrings = window.location.search !== '';\n            if (!hasQueryStrings || appSettingStore.shouldScrollToTop) {\n                requestAnimationFrame(() => {\n                    const topDiv = document.getElementById(\"topDiv\");\n                    if (topDiv) {\n                        topDiv.scrollIntoView({behavior: 'auto'});\n                    } else {\n                        window.scrollTo(0, 0);\n                    }\n                });\n            }\n            appSettingStore.shouldScrollToTop = false;\n        })\n    // Only update if we're not already on this page to avoid overwriting with the current URL\n    appSettingStore.setPrevUrl()\n    appSettingStore.showOttButtons = true\n    appSettingStore.noLayout = false\n\n    // Inertia.reload()\n\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".column-width[data-v-b3360d00]{@apply w-16}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/Pages/Schedule.vue\"],\"names\":[],\"mappings\":\"AA4JA,+BACE,WACF\",\"sourcesContent\":[\"<script>\\n\\n// DELETE THIS SCRIPT TAG\\n// This is only for notes about building this page.\\n\\n// The schedule page will allow free users to look back 72 hours and look ahead 72 hours.\\n// On a mobile device it's easy enough to create a forever scroll for looking forward.\\n// The easter egg will be scrolling UP to look back at the past 72 hours.\\n// Free users can watch any of the content in the past 72 hours for free.\\n// Users are given credits each month to watch premium notTV content.\\n// They may purchase more credits, or subscribe for unlimited access.\\n// They may also use credits to purchase licenses to content from creators.\\n// Credits may also be spent in the shop.\\n\\n</script>\\n\\n<template>\\n  <Head title=\\\"Schedule\\\"/>\\n\\n  <div class=\\\"place-self-center flex flex-col gap-y-3 w-full overscroll-x-none pb-64\\\">\\n    <div id=\\\"topDiv\\\" class=\\\"flex justify-end px-5\\\">\\n      <div class=\\\"text-3xl font-semibold pt-4\\\">Schedule</div>\\n    </div>\\n    <Message v-if=\\\"appSettingStore.showFlashMessage\\\" :flash=\\\"$page.props.flash\\\"/>\\n    <div class=\\\"mx-6\\\">\\n      <div class=\\\"alert alert-info\\\">\\n        <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" fill=\\\"none\\\" viewBox=\\\"0 0 24 24\\\" class=\\\"stroke-current shrink-0 w-6 h-6\\\">\\n          <path stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" stroke-width=\\\"2\\\"\\n                d=\\\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\\\"></path>\\n        </svg>\\n        <span>The schedule is updated every 15 minutes. Please revisit this page to see the updated changes.</span>\\n      </div>\\n    </div>\\n    <ul class=\\\"w-64 ml-12 my-8\\\">\\n      <li class=\\\"p-2 bg-green-800\\\">Scheduled Shows</li>\\n      <li class=\\\"p-2 bg-purple-800\\\">New Releases</li>\\n      <li class=\\\"p-2 bg-blue-800\\\">Live Events</li>\\n      <li class=\\\"p-2 bg-yellow-800\\\">News</li>\\n      <!--            <li class=\\\"p-2\\\"><font-awesome-icon icon=\\\"fa-leaf\\\" class=\\\"text-red-600 text-3xl pr-2\\\"/> Canadian Content</li>-->\\n      <!--            <li class=\\\"p-2\\\"><font-awesome-icon icon=\\\"fa-flag-usa\\\" class=\\\"text-red-600 text-3xl pr-2\\\"/> American Content</li>-->\\n\\n    </ul>\\n\\n    <div class=\\\"ml-5 px-2\\\">\\n      <span class=\\\"text-sm uppercase text-purple-500\\\">All times are listed in your timezone.</span>\\n    </div>\\n\\n    <table class=\\\"table-fixed mx-5\\\">\\n      <thead class=\\\"bg-gray-900\\\">\\n      <tr class=\\\"border-b border-0.5 border-white\\\">\\n        <th class=\\\"column-width p-2 border-r border-0.5 border-white\\\">10:00am</th>\\n        <th class=\\\"column-width p-2 border-x border-0.5 border-white\\\">10:30am</th>\\n        <th class=\\\"column-width p-2 border-x border-0.5 border-white\\\">11:00am</th>\\n        <th class=\\\"column-width p-2 hidden lg:table-cell border-x border-0.5 border-white\\\">11:30am</th>\\n        <th class=\\\"column-width p-2 hidden xl:table-cell border-x border-0.5 border-white\\\">12:00pm</th>\\n        <th class=\\\"column-width p-2 hidden xl:table-cell\\\">12:30pm</th>\\n        <th class=\\\"column-width p-2 hidden 2xl:table-cell border-x border-0.5 border-white\\\">1:00pm</th>\\n        <th class=\\\"column-width p-2 hidden 2xl:table-cell\\\">1:30pm</th>\\n\\n      </tr>\\n      </thead>\\n      <tbody>\\n      <tr class=\\\"border-b border-0.5 border-white\\\">\\n        <td colspan=\\\"2\\\" onclick=\\\"goToNowPlayingModal.showModal()\\\"\\n            class=\\\"column-width p-2 bg-green-800 text-sm 2xl:text-md border border-0.5 border-green-300 hover:bg-green-600 hover:border-blue-500 cursor-pointer\\\">\\n          <div class=\\\"flex flex-col\\\">\\n            <span class=\\\"text-center pb-2\\\">Scheduled Show</span>\\n            <div class=\\\"w-full h-64 bg-gray-400\\\"></div>\\n          </div>\\n        </td>\\n        <!--                    <td class=\\\"p-2 bg-green-800 text-sm 2xl:text-md border border-0.5 border-green-300 hover:bg-green-600 hover:border-blue-500 cursor-pointer\\\">-->\\n        <!--                        <div class=\\\"flex flex-col\\\">-->\\n        <!--                            <span class=\\\"text-center pb-2\\\">Scheduled Show</span>-->\\n        <!--                            <div class=\\\"w-full h-64 bg-gray-400\\\"></div>-->\\n        <!--                        </div>-->\\n        <!--                    </td>-->\\n        <td onclick=\\\"getReminderModal.showModal()\\\"\\n            class=\\\"column-width p-2 bg-purple-800 text-sm 2xl:text-md border border-0.5 border-green-300 hover:bg-purple-600 hover:border-blue-500 cursor-pointer\\\">\\n          <div class=\\\"flex flex-col\\\">\\n            <span class=\\\"text-center pb-2\\\">New Release</span>\\n            <div class=\\\"w-full h-64 bg-gray-400\\\"></div>\\n          </div>\\n        </td>\\n\\n        <td colspan=\\\"3\\\" onclick=\\\"getReminderModal.showModal()\\\"\\n            class=\\\"column-width p-2 hidden xl:table-cell bg-blue-800 text-sm 2xl:text-md border border-0.5 border-green-300 hover:bg-blue-600 hover:border-blue-500 cursor-pointer\\\">\\n          <div class=\\\"flex flex-col\\\">\\n            <span class=\\\"text-center pb-2\\\">Live Event</span>\\n            <div class=\\\"w-full h-64 bg-gray-400\\\"></div>\\n          </div>\\n        </td>\\n\\n        <td onclick=\\\"getReminderModal.showModal()\\\"\\n            class=\\\"column-width p-2 hidden 2xl:table-cell bg-yellow-800 text-sm 2xl:text-md border border-0.5 border-green-300 hover:bg-yellow-600 hover:border-blue-500 cursor-pointer\\\">\\n          <div class=\\\"flex flex-col\\\">\\n            <span class=\\\"text-center pb-2\\\">News Program</span>\\n            <div class=\\\"w-full h-64 bg-gray-400\\\"></div>\\n          </div>\\n        </td>\\n        <td onclick=\\\"getReminderModal.showModal()\\\"\\n            class=\\\"column-width p-2 hidden 2xl:table-cell bg-green-800 text-sm 2xl:text-md border border-0.5 border-green-300 hover:bg-green-600 hover:border-blue-500 cursor-pointer\\\">\\n          <div class=\\\"flex flex-col\\\">\\n            <span class=\\\"text-center pb-2\\\">Scheduled Show</span>\\n            <div class=\\\"w-full h-64 bg-gray-400\\\"></div>\\n          </div>\\n        </td>\\n\\n      </tr>\\n\\n\\n      </tbody>\\n\\n    </table>\\n\\n    <PopUpModal :id=\\\"`goToNowPlayingModal`\\\">\\n      <template v-slot:header>Now Playing</template>\\n      <template v-slot:main><span class=\\\"text-orange-500\\\">This modal is temporary. This will take you to the now playing show or episode page.</span>\\n      </template>\\n    </PopUpModal>\\n    <PopUpModal :id=\\\"`getReminderModal`\\\">\\n      <template v-slot:header>Set Reminder</template>\\n      <template v-slot:main><span class=\\\"text-orange-500\\\">This modal is temporary. Set a reminder when this show starts and/or subscribe to the show to get all notifications when new episodes are released or the show goes live.</span>\\n      </template>\\n    </PopUpModal>\\n\\n    <div class=\\\"bg-gray-600 rounded-lg shadow m-10 p-4\\\">\\n\\n\\n      <TodayView />\\n    </div>\\n\\n\\n  </div>\\n</template>\\n\\n<script setup>\\nimport { usePageSetup } from '@/Utilities/PageSetup'\\nimport { useAppSettingStore } from \\\"@/Stores/AppSettingStore\\\"\\nimport { useScheduleStore } from \\\"@/Stores/ScheduleStore\\\"\\nimport Message from \\\"@/Components/Global/Modals/Messages\\\"\\nimport PopUpModal from \\\"@/Components/Global/Modals/PopUpModal\\\"\\nimport TodayView from '@/Components/Global/Calendar/TodayView.vue'\\n\\nusePageSetup('schedule')\\n\\nconst appSettingStore = useAppSettingStore()\\nconst scheduleStore = useScheduleStore()\\n\\nlet props = defineProps({\\n  can: Object,\\n})\\n\\n</script>\\n\\n<style scoped>\\n\\n.column-width {\\n  @apply w-16\\n}\\n\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","<template>\n  <!-- Today view layout -->\n  <div class=\"today-view container mx-auto px-4 py-8 flex flex-col\">\n    <button  v-if=\"!scheduleStore.isToday\"\n             @click=\"scheduleStore.setSelectedDayToToday(new Date());\"\n             class=\"py-1 px-2 text-white rounded-lg w-fit\"\n             :class=\"{'bg-blue-300': scheduleStore.isToday, 'bg-green-600 hover:bg-green-700': !scheduleStore.isToday}\">\n      Go To Now</button>\n    <div class=\"flex justify-center text-center mb-4\">\n      <h2 class=\"text-3xl font-bold mb-2\">{{ dateMessage }}</h2>\n    </div>\n    <div class=\"flex justify-between items-center mb-4\">\n      <button\n          @click=\"scheduleStore.changeDay(-1)\"\n          class=\"bg-gray-100 hover:bg-gray-200 text-black p-2 rounded shadow\"\n      >\n        &lt; Previous Day\n      </button>\n      <div class=\"flex flex-col text-center\">\n\n        <h3>{{ userStore.canadianTimezoneDescription }} Time</h3>\n      </div>\n      <button\n          @click=\"scheduleStore.changeDay(1)\"\n          class=\"bg-gray-100 hover:bg-gray-200 text-black p-2 rounded shadow\"\n      >\n        Next Day &gt;\n      </button>\n    </div>\n    <button\n        @click=\"scheduleStore.shiftHours(-6)\"\n        class=\"mb-4 bg-gray-100 hover:bg-gray-200 text-black py-2 rounded shadow\"\n    >\n      &#8593; Back 6 Hours\n    </button>\n\n    <div class=\"flex flex-col flex-grow\">\n      <div v-for=\"(hour, index) in scheduleStore.nextSixHours\" :key=\"hour.toString()\">\n\n        <!-- Time Segment Label -->\n        <div\n            v-if=\"index === 0 || getTimeSegment(hour).segment !== getTimeSegment(scheduleStore.nextSixHours[index - 1]).segment\"\n            :class=\"getTimeSegment(hour).color\"\n            class=\"mb-4 p-2 text-black text-center font-bold text-2xl rounded shadow\">\n          {{ getTimeSegment(hour).segment }}\n        </div>\n\n        <!-- Content for the current hour -->\n        <template v-for=\"item in upcomingContent\">\n          <div v-if=\"isWithinCurrentHour(item, hour)\" :key=\"item.id\"\n               :class=\"['p-4 rounded-lg shadow', getTimeSegment(new Date(item.start_time)).color, 'mb-4']\">\n            <div class=\"flex flex-row\">\n              <div class=\"flex flex-col w-28 max-w-28 mr-4 text-gray-500\">\n                <div class=\"font-bold text-black break-words\">{{\n                    formatHour(new Date(item.start_time))\n                  }}&nbsp;{{ userStore.timezoneAbbreviation }}\n                </div>\n                <div class=\"break-words\">{{ formatDuration(item.durationMinutes) }}</div>\n              </div>\n              <div class=\"\">\n                <button @click.prevent=\"goToContentPage(item)\">\n                  <SingleImage v-if=\"item.type === 'show'\" :image=\"item?.content?.show?.image\"\n                               :alt=\"item?.content?.show?.name\" class=\"w-20 h-20\"/>\n                  <SingleImage v-else :image=\"item?.content?.image\" :alt=\"item?.content?.name\" class=\"w-20 h-20\"/>\n                </button>\n              </div>\n              <div class=\"ml-4\">\n                <div class=\"text-gray-800 text-2xl tracking-wider mt-auto\">\n                  <button @click.prevent=\"goToContentPage(item)\" class=\"text-left\">\n                    <span v-if=\"item.type === 'show'\">{{ item?.content?.show?.name }}</span>\n                    <span v-if=\"item.type === 'movie'\">{{ item?.content?.name }}</span>\n                  </button>\n                </div>\n                <div class=\"mt-2\">\n                  <div class=\"text-gray-700 flex flex-wrap\">\n                    <div class=\"ml-1 my-1 text-xs font-semibold tracking-wide uppercase\">\n                      <span v-if=\"item.type === 'show'\" class=\"text-green-500 bg-gray-900 px-2 py-1 rounded\">show</span>\n                      <span v-if=\"item.type === 'movie'\"\n                            class=\"text-pink-500 bg-gray-900 px-2 py-1 rounded\">movie</span>\n                    </div>\n                    <div v-if=\"item?.content?.show?.category?.name || item?.content?.category?.name\"\n                         class=\"ml-1 my-1 font-semibold text-xs uppercase tracking-wider text-yellow-600 bg-gray-900 px-2 py-1 rounded\">\n                    <span v-if=\"item.type === 'show' && item?.content?.show?.category?.name\"\n                          class=\"\">{{ item?.content?.show?.category?.name }}</span>\n                      <span v-if=\"item.type === 'movie' && item?.content?.subCategory?.name\"\n                            class=\"\">{{ item?.content?.category?.name }}</span>\n                    </div>\n                    <div v-if=\"item?.content?.show?.subCategory?.name || item?.content?.subCategory?.name\"\n                         class=\"ml-1 my\n                         -1 text-xs font-semibold tracking-wide text-yellow-500 bg-gray-900 px-2 py-1 rounded\">\n                      <span v-if=\"item.type === 'show'\" class=\"\">{{ item?.content?.show?.subCategory?.name }}</span>\n                      <span v-if=\"item.type === 'movie'\" class=\"\">{{ item?.content?.subCategory?.name }}</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </template>\n\n\n        <!-- Fallback if no content is found for the current hour -->\n        <div v-if=\"!isContentAvailableForHour(hour)\" :class=\"getTimeSegment(hour).color\"\n             class=\"mb-4 p-4 rounded-lg shadow text-gray-500\">\n          <div class=\"font-semibold\">{{ formatHour(hour) }}&nbsp;{{ userStore.timezoneAbbreviation }}</div>\n          <div>Nothing scheduled.</div>\n        </div>\n\n        <!-- Dynamically insert the dateMessage for the next day if the hour is 11 PM -->\n        <div v-if=\"scheduleStore.isElevenPM(hour) && scheduleStore.nextSixHours[index + 1]\"\n             class=\"my-4 p-2 bg-blue-800 text-white rounded shadow\">\n          {{ generateDateMessage(addHours(hour, 1)) }}\n        </div>\n      </div>\n    </div>\n\n    <button\n        @click=\"scheduleStore.shiftHours(6)\"\n        class=\"bg-gray-100 hover:bg-gray-200 text-black py-2 rounded shadow\"\n    >\n      &#8595; Forward 6 Hours\n    </button>\n  </div>\n</template>\n\n<script setup>\n// Today view logic\n// import { ref, computed } from 'vue'\nimport { useScheduleStore } from '@/Stores/ScheduleStore'\nimport { useUserStore } from '@/Stores/UserStore'\nimport {\n  format,\n  startOfHour,\n  addHours,\n  isToday,\n  isYesterday,\n  isTomorrow,\n  startOfDay,\n  isWithinInterval,\n  isSameDay,\n} from 'date-fns'\nimport { storeToRefs } from 'pinia'\nimport { computed, onMounted, ref, watch, watchEffect } from 'vue'\nimport SingleImage from '@/Components/Global/Multimedia/SingleImage.vue'\nimport { Inertia } from '@inertiajs/inertia'\n\nconst scheduleStore = useScheduleStore()\nconst userStore = useUserStore()\nconst {upcomingContent, dateMessage} = storeToRefs(scheduleStore)\n\nconst selectedDay = ref(scheduleStore.selectedDay)\nconst weeklyContent = computed(() => scheduleStore.weeklyContent)\n\nwatch(selectedDay, (newValue) => {\n  scheduleStore.setSelectedDay(newValue)\n  // If necessary, trigger other actions when selectedDay changes\n})\n\nfunction isWithinCurrentHour(item, hour) {\n  const startOfCurrentHour = startOfHour(hour)\n  const endOfCurrentHour = addHours(startOfCurrentHour, 1)\n  const contentStartTime = new Date(item.start_time)\n  return contentStartTime >= startOfCurrentHour && contentStartTime < endOfCurrentHour\n}\n\n// Assuming `upcomingContent` is a computed property that already filters\n// content within a 6-hour window from `scheduleStore.viewingWindowStart`\nfunction isContentAvailableForHour(hour) {\n  // Convert the given hour to the start and end of that hour block\n  const startOfCurrentHour = startOfHour(hour)\n  const endOfCurrentHour = addHours(startOfCurrentHour, 1)\n\n  // Check if any item in `upcomingContent` starts within this hour block\n  return upcomingContent.value.some(item => {\n    const contentStartTime = new Date(item.start_time)\n    return contentStartTime >= startOfCurrentHour && contentStartTime < endOfCurrentHour\n  })\n}\n\nfunction formatHour(date) {\n  return format(date, 'h:mm aaaa')\n}\n\nfunction getTimeSegment(hour) {\n  const hourOfDay = hour.getHours()\n  if (hourOfDay >= 4 && hourOfDay < 6) return {segment: 'Early Morning', color: 'bg-gray-200'}\n  if (hourOfDay >= 6 && hourOfDay < 12) return {segment: 'Morning', color: 'bg-yellow-200'}\n  if (hourOfDay >= 12 && hourOfDay < 17) return {segment: 'Afternoon', color: 'bg-green-200'}\n  if (hourOfDay >= 17 && hourOfDay < 20) return {segment: 'Prime Time', color: 'bg-red-200'}\n  if (hourOfDay >= 20 && hourOfDay < 23) return {segment: 'Late Prime Time', color: 'bg-purple-200'}\n  if (hourOfDay >= 23 || hourOfDay < 1) return {segment: 'Late Night', color: 'bg-blue-200'}\n  if (hourOfDay >= 1 && hourOfDay < 4) return {segment: 'Overnight', color: 'bg-indigo-200'}\n  return {segment: '', color: ''} // Default case\n}\n\n// A computed property to determine the starting segment for the displayed hours\nconst startingSegment = computed(() => scheduleStore.nextSixHours.value.length > 0 ? getTimeSegment(scheduleStore.nextSixHours.value[0]) : null)\n\nfunction generateDateMessage(date) {\n  // This method mirrors the logic in the store's getter but accepts any date.\n  const startDay = startOfDay(date)\n  const formattedDate = format(startDay, 'EEEE, MMMM do')\n  if (isToday(startDay)) {\n    return `Today - ${formattedDate}`\n  } else if (isYesterday(startDay)) {\n    return `Yesterday - ${formattedDate}`\n  } else if (isTomorrow(startDay)) {\n    return `Tomorrow - ${formattedDate}`\n  } else {\n    return formattedDate\n  }\n}\n\nconst goToContentPage = (item) => {\n  if (item.type === 'show') {\n    Inertia.visit(`/shows/${item.content.show.slug}`)\n  } else if (item.type === 'movie') {\n    Inertia.visit(`/movies/${item.content.slug}`)\n  }\n}\n\nconst formatDuration = (minutes) => {\n  if (minutes < 60) {\n    return `${minutes} minutes`\n  } else if (minutes === 60) {\n    return `1 hour`\n  } else {\n    const hours = Math.floor(minutes / 60)\n    const remainingMinutes = minutes % 60\n    if (remainingMinutes === 0) {\n      return `${hours} hours`\n    } else {\n      return `${hours} hour${hours > 1 ? 's' : ''} and ${remainingMinutes} minutes`\n    }\n  }\n}\n\n\n// Define a reactive watcher on the timezone\n// This watcher will call preloadWeeklyContent whenever the timezone changes and is not null\nwatch(\n    () => userStore.timezone,\n    async (newTimezone, oldTimezone) => {\n      // Ensure the timezone is set before calling preloadWeeklyContent\n      if (newTimezone) {\n        await scheduleStore.preloadWeeklyContent()\n      }\n    },\n    {immediate: true}, // This option ensures the watcher is triggered immediately on mount\n)\n\n// Optionally, keep the onMounted if there are other initialization tasks\nonMounted(async () => {\n  // Check if timezone is already available on mount and preload content if it hasn't been done by the watcher\n  if (userStore.timezone) {\n    await scheduleStore.preloadWeeklyContent()\n  }\n})\n</script>\n\n<style scoped>\n/* Styles specific to today view */\n</style>","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-9.use[1]!../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-9.use[2]!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./TodayView.vue?vue&type=style&index=0&id=c20ec346&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./TodayView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TodayView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./TodayView.vue?vue&type=style&index=0&id=c20ec346&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-c20ec346\"]])\n\nexport default __exports__","import script from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"mx-4 my-4\">\n    <div class=\"alert alert-info mt-4\"\n         v-if=\"props.flash.message\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" class=\"stroke-current shrink-0 w-6 h-6\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n      </svg>\n      <span>{{ props.flash.message }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-success mt-4 mx-3\"\n         v-if=\"props.flash.success\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.success }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-warning mt-4 mx-3\"\n         v-if=\"props.flash.warning\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"/>\n      </svg>\n      <span>{{ props.flash.warning }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-error mt-4 mx-3\"\n         v-if=\"props.flash.error\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.error }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n  </div>\n\n</template>\n\n<script setup>\nimport { Inertia } from \"@inertiajs/inertia\"\nimport { computed } from \"vue\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\n\nconst appSettingStore = useAppSettingStore()\n\nappSettingStore.showFlashMessage = true\n\nlet props = defineProps({\n  flash: Object,\n\n})\n\nconst messageType = computed(() => ({\n  'text-green-700 bg-green-100 dark:bg-green-200 dark:text-green-800': props.flash.success,\n  'text-blue-700 bg-blue-100 dark:bg-blue-200 dark:text-blue-800': props.flash.message,\n  'text-orange-700 bg-orange-100 dark:bg-orange-200 dark:text-orange-800': props.flash.warning,\n  'text-red-700 bg-red-100 dark:bg-red-200 dark:text-red-800': props.flash.error,\n}))\n\nconst clearFlashMessage = async () => {\n  await Inertia.post(route('flash.clear'));\n  Inertia.reload();\n};\n</script>\n","import script from \"./PopUpModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./PopUpModal.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n    <dialog :id=\"id\" class=\"modal\">\n      <div class=\"modal-box text-center my-auto border-2 border-secondary\" data-theme=\"dark\">\n        <h2 class=\"font-bold text-3xl text-secondary\">\n          <slot name=\"header\"></slot>\n        </h2>\n        <p class=\"py-4 text-xl\">\n          <slot name=\"main\"></slot>\n        </p>\n        <div class=\"modal-action justify-center w-full\">\n          <form method=\"dialog\">\n            <!-- if there is a button in form, it will close the modal -->\n            <button @click=\"notificationStore.showPopUpModal = false\" class=\"btn btn-secondary\">Okay</button>\n          </form>\n        </div>\n      </div>\n    </dialog>\n  </div>\n</template>\n<script setup>\nimport { useNotificationStore } from \"@/Stores/NotificationStore\"\n\nconst notificationStore = useNotificationStore()\n\ndefineProps({\n  id: String,\n})\n</script>\n","<script>\n\n// DELETE THIS SCRIPT TAG\n// This is only for notes about building this page.\n\n// The schedule page will allow free users to look back 72 hours and look ahead 72 hours.\n// On a mobile device it's easy enough to create a forever scroll for looking forward.\n// The easter egg will be scrolling UP to look back at the past 72 hours.\n// Free users can watch any of the content in the past 72 hours for free.\n// Users are given credits each month to watch premium notTV content.\n// They may purchase more credits, or subscribe for unlimited access.\n// They may also use credits to purchase licenses to content from creators.\n// Credits may also be spent in the shop.\n\n</script>\n\n<template>\n  <Head title=\"Schedule\"/>\n\n  <div class=\"place-self-center flex flex-col gap-y-3 w-full overscroll-x-none pb-64\">\n    <div id=\"topDiv\" class=\"flex justify-end px-5\">\n      <div class=\"text-3xl font-semibold pt-4\">Schedule</div>\n    </div>\n    <Message v-if=\"appSettingStore.showFlashMessage\" :flash=\"$page.props.flash\"/>\n    <div class=\"mx-6\">\n      <div class=\"alert alert-info\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" class=\"stroke-current shrink-0 w-6 h-6\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n        </svg>\n        <span>The schedule is updated every 15 minutes. Please revisit this page to see the updated changes.</span>\n      </div>\n    </div>\n    <ul class=\"w-64 ml-12 my-8\">\n      <li class=\"p-2 bg-green-800\">Scheduled Shows</li>\n      <li class=\"p-2 bg-purple-800\">New Releases</li>\n      <li class=\"p-2 bg-blue-800\">Live Events</li>\n      <li class=\"p-2 bg-yellow-800\">News</li>\n      <!--            <li class=\"p-2\"><font-awesome-icon icon=\"fa-leaf\" class=\"text-red-600 text-3xl pr-2\"/> Canadian Content</li>-->\n      <!--            <li class=\"p-2\"><font-awesome-icon icon=\"fa-flag-usa\" class=\"text-red-600 text-3xl pr-2\"/> American Content</li>-->\n\n    </ul>\n\n    <div class=\"ml-5 px-2\">\n      <span class=\"text-sm uppercase text-purple-500\">All times are listed in your timezone.</span>\n    </div>\n\n    <table class=\"table-fixed mx-5\">\n      <thead class=\"bg-gray-900\">\n      <tr class=\"border-b border-0.5 border-white\">\n        <th class=\"column-width p-2 border-r border-0.5 border-white\">10:00am</th>\n        <th class=\"column-width p-2 border-x border-0.5 border-white\">10:30am</th>\n        <th class=\"column-width p-2 border-x border-0.5 border-white\">11:00am</th>\n        <th class=\"column-width p-2 hidden lg:table-cell border-x border-0.5 border-white\">11:30am</th>\n        <th class=\"column-width p-2 hidden xl:table-cell border-x border-0.5 border-white\">12:00pm</th>\n        <th class=\"column-width p-2 hidden xl:table-cell\">12:30pm</th>\n        <th class=\"column-width p-2 hidden 2xl:table-cell border-x border-0.5 border-white\">1:00pm</th>\n        <th class=\"column-width p-2 hidden 2xl:table-cell\">1:30pm</th>\n\n      </tr>\n      </thead>\n      <tbody>\n      <tr class=\"border-b border-0.5 border-white\">\n        <td colspan=\"2\" onclick=\"goToNowPlayingModal.showModal()\"\n            class=\"column-width p-2 bg-green-800 text-sm 2xl:text-md border border-0.5 border-green-300 hover:bg-green-600 hover:border-blue-500 cursor-pointer\">\n          <div class=\"flex flex-col\">\n            <span class=\"text-center pb-2\">Scheduled Show</span>\n            <div class=\"w-full h-64 bg-gray-400\"></div>\n          </div>\n        </td>\n        <!--                    <td class=\"p-2 bg-green-800 text-sm 2xl:text-md border border-0.5 border-green-300 hover:bg-green-600 hover:border-blue-500 cursor-pointer\">-->\n        <!--                        <div class=\"flex flex-col\">-->\n        <!--                            <span class=\"text-center pb-2\">Scheduled Show</span>-->\n        <!--                            <div class=\"w-full h-64 bg-gray-400\"></div>-->\n        <!--                        </div>-->\n        <!--                    </td>-->\n        <td onclick=\"getReminderModal.showModal()\"\n            class=\"column-width p-2 bg-purple-800 text-sm 2xl:text-md border border-0.5 border-green-300 hover:bg-purple-600 hover:border-blue-500 cursor-pointer\">\n          <div class=\"flex flex-col\">\n            <span class=\"text-center pb-2\">New Release</span>\n            <div class=\"w-full h-64 bg-gray-400\"></div>\n          </div>\n        </td>\n\n        <td colspan=\"3\" onclick=\"getReminderModal.showModal()\"\n            class=\"column-width p-2 hidden xl:table-cell bg-blue-800 text-sm 2xl:text-md border border-0.5 border-green-300 hover:bg-blue-600 hover:border-blue-500 cursor-pointer\">\n          <div class=\"flex flex-col\">\n            <span class=\"text-center pb-2\">Live Event</span>\n            <div class=\"w-full h-64 bg-gray-400\"></div>\n          </div>\n        </td>\n\n        <td onclick=\"getReminderModal.showModal()\"\n            class=\"column-width p-2 hidden 2xl:table-cell bg-yellow-800 text-sm 2xl:text-md border border-0.5 border-green-300 hover:bg-yellow-600 hover:border-blue-500 cursor-pointer\">\n          <div class=\"flex flex-col\">\n            <span class=\"text-center pb-2\">News Program</span>\n            <div class=\"w-full h-64 bg-gray-400\"></div>\n          </div>\n        </td>\n        <td onclick=\"getReminderModal.showModal()\"\n            class=\"column-width p-2 hidden 2xl:table-cell bg-green-800 text-sm 2xl:text-md border border-0.5 border-green-300 hover:bg-green-600 hover:border-blue-500 cursor-pointer\">\n          <div class=\"flex flex-col\">\n            <span class=\"text-center pb-2\">Scheduled Show</span>\n            <div class=\"w-full h-64 bg-gray-400\"></div>\n          </div>\n        </td>\n\n      </tr>\n\n\n      </tbody>\n\n    </table>\n\n    <PopUpModal :id=\"`goToNowPlayingModal`\">\n      <template v-slot:header>Now Playing</template>\n      <template v-slot:main><span class=\"text-orange-500\">This modal is temporary. This will take you to the now playing show or episode page.</span>\n      </template>\n    </PopUpModal>\n    <PopUpModal :id=\"`getReminderModal`\">\n      <template v-slot:header>Set Reminder</template>\n      <template v-slot:main><span class=\"text-orange-500\">This modal is temporary. Set a reminder when this show starts and/or subscribe to the show to get all notifications when new episodes are released or the show goes live.</span>\n      </template>\n    </PopUpModal>\n\n    <div class=\"bg-gray-600 rounded-lg shadow m-10 p-4\">\n\n\n      <TodayView />\n    </div>\n\n\n  </div>\n</template>\n\n<script setup>\nimport { usePageSetup } from '@/Utilities/PageSetup'\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useScheduleStore } from \"@/Stores/ScheduleStore\"\nimport Message from \"@/Components/Global/Modals/Messages\"\nimport PopUpModal from \"@/Components/Global/Modals/PopUpModal\"\nimport TodayView from '@/Components/Global/Calendar/TodayView.vue'\n\nusePageSetup('schedule')\n\nconst appSettingStore = useAppSettingStore()\nconst scheduleStore = useScheduleStore()\n\nlet props = defineProps({\n  can: Object,\n})\n\n</script>\n\n<style scoped>\n\n.column-width {\n  @apply w-16\n}\n\n</style>\n","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-9.use[1]!../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-9.use[2]!../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./Schedule.vue?vue&type=style&index=0&id=b3360d00&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./Schedule.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Schedule.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Schedule.vue?vue&type=style&index=0&id=b3360d00&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-b3360d00\"]])\n\nexport default __exports__"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","ownKeys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","_objectSpread","_defineProperty","getOwnPropertyDescriptors","defineProperties","obj","toPrimitive","String","Number","_toPrimitive","convertScheduleToTimezone","scheduleData","userStore","useUserStore","data","map","item","startTimeInUserTz","start_time","formatDateTimeFromUtcToUserTimezone","endTimeInUserTz","end_time","recurrenceDetailsInUserTz","recurrenceDetails","_item$recurrenceDetai","start_date","end_date","formatTimeInUserTimezone","getUpcomingContentDates","viewingWindowStart","dates","start","Date","setHours","getHours","dayjs","relativeTime","timezone","utc","initialState","currentMonth","selectedDay","fiveDaySixHourSchedule","todaysContent","weeklyContent","dataFetchLog","useScheduleStore","defineStore","state","actions","resetAll","assign","this","now","setSelectedDay","day","_this","_callee","weekStart","weekEnd","_context","addHours","startOfDay","startOfWeek","weekStartsOn","endOfWeek","needsDataForWeek","loadWeekFromDate","console","checkAndFetchForUpcomingContent","setSelectedDayToToday","startOfHour","changeDay","days","_this2","_callee2","currentTime","newDay","_context2","getMinutes","addDays","setMinutes","shiftHours","hours","_this3","_callee3","_context3","isSameDay","isElevenPM","date","subtractMonth","_this4","_callee4","_context4","subMonths","log","t0","concat","addMonth","_this5","_callee5","_context5","addMonths","fetchFiveDaySixHourSchedule","_this6","_callee6","response","_context6","axios","get","userTimezone","fetchTodaysContent","_this7","_callee7","_context7","preloadWeeklyContent","_this8","_callee8","_context8","_this9","_callee9","_formattedDate","_timezone4","newData","fetchTime","existingLogIndex","_context9","formattedDate","toISOString","split","findIndex","lastFetch","_toConsumableArray","index","id","extendedEnd","calculateExtendedEndForUpcomingContent","hasDataForExtendedWeek","some","content","contentDate","baseStartTime","getTime","_this10","_callee10","upcomingDates","fifteenMinutesAgo","_iterator","_step","_loop","_context11","_createForOfIteratorHelper","dateString","_context10","toDateString","lastFetchedTime","isFresh","fetchDataAndUpdateLog","t1","_this11","_callee11","_context12","getters","upcomingContent","end","itemStart","sort","b","nextSixHours","adjustedStart","eachHourOfInterval","dateMessage","startDay","format","isToday","isYesterday","isTomorrow","currentMonthIndex","getMonth","currentMonthName","currentYear","getYear","daysInMonth","startOfCurrentMonth","startOfMonth","endOfCurrentMonth","endOfMonth","startOfGrid","endOfGrid","eachDayOfInterval","today","viewingStart","usePageSetup","pageName","appSettingStore","useAppSettingStore","videoPlayerStore","useVideoPlayerStore","currentPage","showFlashMessage","pageIsHidden","isMobile","ott","makeVideoTopRight","pageReload","window","location","reload","Inertia","on","event","search","shouldScrollToTop","requestAnimationFrame","topDiv","document","getElementById","scrollIntoView","behavior","scrollTo","setPrevUrl","showOttButtons","noLayout","___CSS_LOADER_EXPORT___","module","scheduleStore","_storeToRefs","storeToRefs","ref","computed","isWithinCurrentHour","hour","startOfCurrentHour","endOfCurrentHour","contentStartTime","isContentAvailableForHour","formatHour","getTimeSegment","hourOfDay","segment","color","watch","newValue","goToContentPage","visit","show","slug","formatDuration","minutes","Math","floor","remainingMinutes","_ref","newTimezone","oldTimezone","_x","_x2","immediate","onMounted","options","locals","props","__props","clearFlashMessage","flash","success","message","warning","post","route","notificationStore","useNotificationStore"],"sourceRoot":""}
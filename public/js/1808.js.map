{"version":3,"file":"js/1808.js","mappings":"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","sources":["webpack://nottvbeta/./resources/js/Stores/GoLiveStore.js","webpack://nottvbeta/./resources/js/Stores/RecordingStore.js","webpack://nottvbeta/./resources/js/Stores/TeamStore.js","webpack://nottvbeta/./resources/js/Stores/VideoAuxPlayerStore.js","webpack://nottvbeta/./resources/js/Utilities/PageSetup.js","webpack://nottvbeta/./resources/js/Components/Pages/ShowRecordings/RecordingsListBody.vue?bd51","webpack://nottvbeta/./resources/js/Components/Pages/ShowRecordings/RecordingsPaginator.vue?4fd5","webpack://nottvbeta/./resources/js/Components/Pages/Shows/Elements/ManageShowEpisode.vue?9b1f","webpack://nottvbeta/./resources/js/Pages/Shows/{$id}/Manage.vue?5d3f","webpack://nottvbeta/./resources/js/Components/Global/Buttons/DashboardButton.vue?3fff","webpack://nottvbeta/./resources/js/Components/Global/Buttons/DashboardButton.vue","webpack://nottvbeta/./resources/js/Components/Global/Calendar/DateTimePicker.vue?15b5","webpack://nottvbeta/./resources/js/Components/Global/Calendar/DateTimePicker.vue","webpack://nottvbeta/./resources/js/Components/Global/Calendar/DateTimePickerSelect.vue?a94f","webpack://nottvbeta/./resources/js/Components/Global/Calendar/DateTimePickerSelect.vue","webpack://nottvbeta/./resources/js/Components/Global/Modals/Messages.vue?dfe9","webpack://nottvbeta/./resources/js/Components/Global/Modals/Messages.vue","webpack://nottvbeta/./resources/js/Components/Global/Paginators/Pagination.vue?0305","webpack://nottvbeta/./resources/js/Components/Global/Paginators/Pagination.vue","webpack://nottvbeta/./resources/js/Components/Global/Schedule/StepSixCongratulations.vue","webpack://nottvbeta/./resources/js/Components/Global/TextEditor/TabbableTextarea.vue?4db8","webpack://nottvbeta/./resources/js/Components/Global/TextEditor/TabbableTextarea.vue","webpack://nottvbeta/./resources/js/Components/Pages/Shows/Layout/ShowFooter.vue?be4d","webpack://nottvbeta/./resources/js/Components/Pages/Shows/Layout/ShowFooter.vue","webpack://nottvbeta/./resources/js/Components/Global/Schedule/ChangeShowSchedule.vue?b054","webpack://nottvbeta/./resources/js/Components/Global/Schedule/ChangeShowSchedule.vue","webpack://nottvbeta/./resources/js/Components/Pages/Shows/Layout/ShowManageHeader.vue?ae3c","webpack://nottvbeta/./resources/js/Components/Pages/Shows/Layout/ShowManageHeader.vue","webpack://nottvbeta/./resources/js/Components/Pages/Shows/Elements/ManageShowEpisodesStatuses.vue?ba1d","webpack://nottvbeta/./resources/js/Components/Pages/Shows/Elements/ManageShowEpisodesStatuses.vue","webpack://nottvbeta/./resources/js/Components/Pages/Shows/Elements/ManageEpisodeEditNote.vue?89fa","webpack://nottvbeta/./resources/js/Components/Pages/Shows/Elements/ManageEpisodeEditNote.vue","webpack://nottvbeta/./resources/js/Components/Pages/Shows/Elements/ManageShowEpisode.vue","webpack://nottvbeta/./resources/js/Components/Pages/Shows/Elements/ManageShowEpisode.vue?321e","webpack://nottvbeta/./resources/js/Components/Pages/Shows/Elements/ManageShowEpisode.vue?f7cf","webpack://nottvbeta/./resources/js/Components/Pages/Shows/Elements/ManageShowEpisodesList.vue?8642","webpack://nottvbeta/./resources/js/Components/Pages/Shows/Elements/ManageShowEpisodesList.vue","webpack://nottvbeta/./resources/js/Components/Pages/Shows/Elements/ManageShowCreditsList.vue","webpack://nottvbeta/./resources/js/Components/Pages/Shows/Elements/ManageShowCreditsList.vue?74d6","webpack://nottvbeta/./resources/js/Components/Pages/ShowRecordings/RecordingsListHeader.vue","webpack://nottvbeta/./resources/js/Components/Pages/ShowRecordings/RecordingsListHeader.vue?9c61","webpack://nottvbeta/./resources/js/Components/Pages/ShowRecordings/RecordingsListBody.vue","webpack://nottvbeta/./resources/js/Components/Pages/ShowRecordings/RecordingsListBody.vue?d22e","webpack://nottvbeta/./resources/js/Components/Pages/ShowRecordings/RecordingsListBody.vue?3094","webpack://nottvbeta/./resources/js/Components/Pages/ShowRecordings/RecordingsPaginator.vue","webpack://nottvbeta/./resources/js/Components/Pages/ShowRecordings/RecordingsPaginator.vue?a91b","webpack://nottvbeta/./resources/js/Components/Pages/ShowRecordings/RecordingsPaginator.vue?d4cf","webpack://nottvbeta/./resources/js/Components/Pages/ShowRecordings/ShowRecordingsModals.vue?19bd","webpack://nottvbeta/./resources/js/Components/Pages/ShowRecordings/ShowRecordingsModals.vue","webpack://nottvbeta/./resources/js/Components/Pages/ShowRecordings/SelectedRecordingMeta.vue?c017","webpack://nottvbeta/./resources/js/Components/Pages/ShowRecordings/SelectedRecordingMeta.vue","webpack://nottvbeta/./resources/js/Components/Pages/ShowRecordings/ShowRecordingsList.vue?0f82","webpack://nottvbeta/./resources/js/Components/Pages/ShowRecordings/ShowRecordingsList.vue","webpack://nottvbeta/./resources/js/Pages/Shows/{$id}/Manage.vue","webpack://nottvbeta/./resources/js/Pages/Shows/{$id}/Manage.vue?a13d","webpack://nottvbeta/./resources/js/Pages/Shows/{$id}/Manage.vue?9a3e"],"sourcesContent":["import { defineStore } from 'pinia'\nimport { useNotificationStore } from '@/Stores/NotificationStore'\nimport { useVideoPlayerStore } from '@/Stores/VideoPlayerStore'\nimport { useVideoAuxPlayerStore } from '@/Stores/VideoAuxPlayerStore'\nimport videojs from 'video.js'\n\nconst initialState = () => ({\n    displayEpisodeGoLiveComponent: false,\n    isEpisode: null,\n    episode: null,\n    selectedEpisodeId: null,\n    preSelectedShowId: null,\n    selectedShowId: null,\n    // selectedShow: null, this uses the getter... set it up in the component as a computed property\n    shows: [], // Assuming you might want to store shows here too\n    streamKey: '', // Optional: Store the generated stream key if needed\n    wildcardId: '',\n    isLive: false,\n    isRecording: false,\n    streamInfo: null,\n    rtmpUri: null,\n    destinations: [], // New state for holding destinations\n    otherShowDestinations: [],\n    loadingOtherDestinations: false,\n    isLoadingDestinations: false,\n    loadingDestinationId: null,\n    processingRecordingChange: false,\n    isProcessingDisableAllAutoPushes: false,\n    playerIsReloading: false,\n    pushDestinationFormSubmitProcessing: false,\n    mistServerUri: null,\n    previousStreamStatus: null,\n    mistStreamPushDestinationFormModalMode: null,\n    destinationDetails: {},\n})\n\nexport const useGoLiveStore = defineStore('goLiveStore', {\n    state: initialState,\n    actions: {\n        reset() {\n            // Reset the store to its original state (clear all data)\n            Object.assign(this, initialState())\n        },\n        async fetchShows() {\n            try {\n                const response = await axios.get('/go-live/shows') // Adjust the URL as needed\n                this.shows = response.data\n            } catch (error) {\n                // console.error('Failed to fetch shows:', error)\n                // Handle error appropriately\n            }\n        },\n\n\n        // temporarily commenting this out\n        async generateStreamKey() {\n            if (!this.selectedShowId) {\n                // console.error('No show selected')\n                throw new Error('No show selected') // Throw an error to be caught by the caller\n            }\n\n            try {\n                const response = await axios.post(`/go-live/shows/${this.selectedShowId}/stream-key`)\n                // console.log('Stream key generated:', response.data)\n                // this.streamKey = response.data.stream_key // Assuming the response includes the stream key\n                // console.log('this new stream key: ' + this.streamKey)\n                // console.log('response data stream key: ' + response.data.stream_key)\n                // Update goLiveStore.selectedShow.mist_stream_wildcard_id with the returned stream key\n                if (this.selectedShowId && response.data.stream_key) {\n                    this.selectedShow.mist_stream_wildcard = response.data\n                    this.selectedShow.mist_stream_wildcard_id = response.data.stream_key\n                }\n                return response.data // Return the response data\n            } catch (error) {\n                // console.error('Error generating stream key:', error.response ? error.response.data : error)\n                throw error // Re-throw the error to be caught by the component\n            }\n        },\n\n        // Other actions...\n        updateAndGetStreamKey() {\n            const show = this.shows.find(show => show.id === this.selectedShowId) || null\n            const streamKey = show?.mist_stream_wildcard?.name || ' < RELOAD THIS PAGE TO GET YOUR STREAM KEY > '\n\n            // Perform the state update\n            this.streamKey = streamKey\n\n            // Return the stream key for immediate use\n            return streamKey\n        },\n\n\n        // async generateStreamKey() {\n        //     if (!this.selectedShowId) {\n        //         console.error(\"No show selected\");\n        //         throw new Error(\"No show selected\");\n        //     }\n        //\n        //     try {\n        //         const response = await axios.post(`/go-live/shows/${this.selectedShowId}/stream-key`);\n        //         console.log(\"Stream key generated:\", response.data);\n        //\n        //         // Find the index of the selected show in the shows array\n        //         const selectedIndex = this.shows.findIndex(show => show.id === this.selectedShowId);\n        //         if (selectedIndex !== -1) {\n        //             // Update the selected show with the new stream key information\n        //             this.shows[selectedIndex].mist_stream_wildcard = response.data;\n        //             this.shows[selectedIndex].mist_stream_wildcard_id = response.data.stream_key;\n        //         }\n        //         return response.data;\n        //     } catch (error) {\n        //         console.error(\"Error generating stream key:\", error.response ? error.response.data : error);\n        //         throw error;\n        //     }\n        // },\n\n\n        // setPreSelectedShowId(id) {\n        //     this.preSelectedShowId = id;\n        //     console.log('preSelectedShowId updated to:', this.preSelectedShowId);\n        // },\n        // Action to update selectedShowId and selectedShow based on selectedShowId\n        setSelectedShowId(showId) {\n            this.selectedShowId = showId\n            this.updateSelectedShow() // Call the method to update selectedShow based on new selectedShowId\n        },\n        // Method to find and update selectedShow based on selectedShowId\n        updateSelectedShow() {\n            this.selectedShow = this.shows.find(show => show.id === this.selectedShowId) || null\n        },\n        goLive() {\n            this.isLive = true\n        },\n        stopLive() {\n            this.isLive = false\n        },\n        async startRecording() {\n            // console.log('1 start recording in Go Live Store')\n            const notificationStore = useNotificationStore()\n            const showSlug = this.selectedShow.slug\n            // console.log(`Starting recording for show ${showSlug}`)\n            this.processingRecordingChange = true\n            try {\n                // console.log('2a post to /mist-stream/start-recording/')\n                const response = await axios.post('/mist-stream/start-recording/' + showSlug, {\n                    stream_name: this.streamKey,\n                })\n                // console.log('5 and we\\'re back in the GoLiveStore')\n                // console.log('Recording started successfully:', response.data)\n                // console.log('Stream Name:', this.streamKey)\n                const {message, status} = response.data\n                // Use the status from the response for the notification\n                notificationStore.setToastNotification(message, status)\n                // Update the recording status\n                this.isRecording = true\n            } catch (error) {\n                // console.error('Error starting push:', error)\n                notificationStore.setToastNotification('Failed to start recording.', 'error')\n                // Handle the error appropriately in your UI\n            } finally {\n                this.processingRecordingChange = false // Stop processing spinner regardless of outcome\n            }\n        },\n        async stopRecording() {\n            const notificationStore = useNotificationStore()\n            const showSlug = this.selectedShow.slug\n            // console.log(`Stopping recording for show ${showSlug}`)\n            this.processingRecordingChange = true\n            // console.log(`Stopping recording for show ${showSlug}`)\n            try {\n                const response = await axios.post('/mist-stream/stop-recording/' + showSlug, {\n                    stream_name: this.streamKey,\n                })\n                // console.log('Recording stopped successfully:', response.data)\n                const {message, status} = response.data\n                notificationStore.setToastNotification(message, status)\n                // Update the recording status\n                this.isRecording = false\n            } catch (error) {\n                // console.error('Error stopping recording:', error)\n                notificationStore.setToastNotification('Failed to stop push.', 'error')\n            } finally {\n                this.processingRecordingChange = false // Stop processing spinner regardless of outcome\n            }\n        },\n        // async fetchStreamInfo(streamName) {\n        //     try {\n        //         // const response = await fetch(`http://mist.nottv.io:8080/json_${encodedStreamName}.js`); // Replace with your URL\n        //         const response = await fetch(`/fetch-stream-info/${streamName}`) // Replace with your URL\n        //         if (!response.ok) throw new Error('Failed to fetch')\n        //         this.streamInfo = await response.json() // Store the data in serverInfo\n        //     } catch (error) {\n        //         console.error('Error fetching server info:', error)\n        //     }\n        // },\n        async fetchStreamInfo() {\n            const notificationStore = useNotificationStore()\n            // console.log('start fetch stream info...')\n            try {\n                if (!this.mistServerUri) {\n                    await this.fetchMistServerUri()\n                }\n                // Then, use the URI in your next request\n                const response = await axios.post('/fetch-stream-info', {\n                    streamName: this.streamKey,\n                    mistServerUri: this.mistServerUri, // Pass it as a string\n                })\n                // console.log('response returned...')\n                // console.log(response.data);\n                this.streamInfo = response.data.streamInfo || []\n                // Assuming a successful response might look like {\"message\": \"Stream is online\", \"status\": \"success\"}\n                let message, status\n\n                // Check if the response contains an error field\n                if (response.data.streamInfo.error) {\n                    message = response.data.streamInfo.error\n                    status = 'error' // Assuming 'error' as a fallback status\n                    // console.log('error returned...')\n                } else if (response.data.message && response.data.success) {\n                    // If it's a success message with a status\n                    message = response.data.message\n                    status = 'info'\n                    // console.log('success returned...')\n\n                } else {\n                    // Fallback for unexpected response structure\n                    message = 'Received unexpected response from server.'\n                    status = 'info' // Default to 'info' or another appropriate fallback status\n                    // console.log('unexpected response returned...')\n                }\n\n                // Use the status from the response for the notification\n                // notificationStore.setToastNotification(message, status)\n            } catch (error) {\n                // console.error(error);\n                notificationStore.setToastNotification('Failed to fetch stream info.', 'error')\n                // console.log('catch error...')\n            }\n        },\n        async fetchRtmpUri() {\n            try {\n                const response = await fetch(`/fetch-rtmp-uri`)\n                if (!response.ok) throw new Error('Failed to fetch')\n\n                // Parse the plain text body of the response\n                // Store the RTMP URI string in a Vue data property or similar\n                this.rtmpUri = await response.text()\n            } catch (error) {\n                // console.error('Error fetching RTMP URI:', error)\n            }\n        },\n        clearStreamInfo() {\n            this.streamInfo = null\n        },\n        toggleDisplayEpisodeGoLiveComponent(episode) {\n            // const videoPlayerAuxStore = useVideoAuxPlayerStore()\n            // videoPlayerAuxStore.reset()\n            this.displayEpisodeGoLiveComponent = !this.displayEpisodeGoLiveComponent\n            this.isEpisode = !!this.displayEpisodeGoLiveComponent\n            this.episode = episode\n            this.selectedShowId = this?.episode?.show_id\n\n        },\n        updateEpisode(episode) {\n            this.episode = episode\n        },\n        async fetchMistServerUri() {\n            const videoAuxPlayerStore = useVideoAuxPlayerStore()\n            let uriResponse = await axios.get('/mist-server/uri')\n            this.mistServerUri = uriResponse.data\n            videoAuxPlayerStore.setMistServerUri(this.mistServerUri)\n        },\n        async reloadPlayer() {\n            const videoAuxPlayerStore = useVideoAuxPlayerStore()\n            const notificationStore = useNotificationStore()\n            this.playerIsReloading = true // Start loading\n            try {\n                // First, fetch the URI\n\n                // let uriResponse = await axios.get('/mist-server/uri');\n                // this.mistServerUri = uriResponse.data; // Accessing the data prop// erty\n                // // Create an object and set the 'name' property\n                const mistStream = {\n                    name: this.streamKey,\n                }\n                // // Now, use this URI in your next request\n                // const response = await axios.post('/fetch-stream-info', {\n                //     streamName: this.streamKey,\n                //     mistServerUri: this.mistServerUri,\n                // });\n                // Now, you can pass the 'mistStream' object to the method\n                await videoAuxPlayerStore.loadMistStreamVideo(mistStream, true).then(\n                    // await this.fetchStreamInfo(),\n                )\n            } catch (error) {\n                // console.error(error);\n                // notificationStore.setGeneralServiceNotification('Failed to reload player', error)\n                notificationStore.setToastNotification('Failed to reload player.', 'error')\n            } finally {\n                this.playerIsReloading = false // Stop loading regardless of outcome\n            }\n\n        },\n        async fetchOtherShowDestinations() {\n            this.loadingOtherDestinations = true\n            try {\n                const response = await axios.get('/go-live/existing-destinations', {\n                    params: {\n                        showId: this.selectedShowId,\n                        episodeId: this.selectedEpisodeId,\n                    },\n                })\n                this.otherShowDestinations = response.data.destinations\n                this.loadingOtherDestinations = false\n            } catch (error) {\n                notificationStore.setToastNotification('Failed to fetch destinations.', 'error')\n                console.error('Error fetching other show destinations', error)\n                this.loadingOtherDestinations = false\n            }\n        },\n        async copyDestinations(destinationIds) {\n            this.loadingOtherDestinations = true;\n            try {\n                const payload = {\n                    destinationIds,\n                    showId: this.selectedShowId,\n                    episodeId: this.selectedEpisodeId,\n                    mistStreamWildcardId: this.wildcardId\n                };\n                console.log('Sending copy destinations request', payload);\n\n                const response = await axios.post('/go-live/copy-destinations', payload);\n                console.log('Received response', response.data);\n\n                this.destinations = response.data.destinations || [];\n                const notificationStore = useNotificationStore();\n                notificationStore.setToastNotification(response.data.message, response.data.status);\n                this.loadingOtherDestinations = false;\n                return true; // Indicate success\n            } catch (error) {\n                console.error('Error copying destinations', error);\n                const notificationStore = useNotificationStore();\n                notificationStore.setToastNotification('Failed to copy destinations.', 'error');\n                this.loadingOtherDestinations = false;\n                return false; // Indicate failure\n            }\n        },\n        async fetchPushDestinations() {\n            const notificationStore = useNotificationStore()\n            this.isLoadingDestinations = true // Start loading\n            try {\n                const response = await axios.post('/go-live/fetch-push-destinations', {\n                    showId: this.selectedShowId,\n                    streamName: this.streamKey,\n                    backgroundFetch: false,\n                })\n                // console.log(response.data);\n                this.destinations = response.data.destinations || []\n                this.isRecording = response.data.recording || false\n                console.log('response about recording: ' + response.data.recording)\n                // Extract message and status from the response\n                const {message, status} = response.data\n                // Use the status from the response fo\n                // r the notification\n                // notificationStore.setToastNotification(message, status)\n            } catch (error) {\n                // console.error(error);\n                // notificationStore.setGeneralServiceNotification('Failed to reload player', error)\n                notificationStore.setToastNotification('Failed to fetch push destinations.', 'error')\n            } finally {\n                this.isLoadingDestinations = false // Stop loading regardless of outcome\n            }\n        },\n        async backgroundFetchPushDestinations() {\n            // Background Fetch doesn't use Toast Notifications,\n            // Keep the fetch silent in the background.\n\n            this.isLoadingDestinations = true // Start loading\n            try {\n                const response = await axios.post('/go-live/fetch-push-destinations/', {\n                    showId: this.selectedShowId,\n                    streamName: this.streamKey,\n                    backgroundFetch: true,\n                })\n                this.destinations = response.data.destinations || []\n                this.isRecording = response.data.recording || false\n            } catch (error) {\n                // console.error(error);\n                // notificationStore.setGeneralServiceNotification('Error Fetching Push Destinations', error)\n                notificationStore.setToastNotification('Failed to fetch push destinations.', 'error')\n            } finally {\n                this.isLoadingDestinations = false // Stop loading regardless of outcome\n            }\n        },\n        async deleteDestination(destinationId) {\n            // Confirm deletion with the user before proceeding\n            if (confirm(`Are you sure you want to delete the destination with ID: ${destinationId}?`)) {\n                try {\n                    // Perform the delete operation\n                    await axios.delete('/mist-stream-push-destinations/' + destinationId)\n                    // Optionally, remove the item from your local state to update the UI\n                    this.destinations = this.destinations.filter(destination => destination.id !== destinationId)\n                } catch (error) {\n                    notificationStore.setGeneralServiceNotification('Error deleting destination', error)\n                    // console.error(`Error deleting destination with ID: ${destinationId}`, error)\n                }\n            }\n        },\n        async startPush(destinationId, fullPushUri) {\n            const notificationStore = useNotificationStore()\n            this.loadingDestinationId = destinationId\n            // console.log(`Starting push for destination ${destinationId}`)\n            try {\n                const response = await axios.post('/mist-stream/start-push', {\n                    destination_id: destinationId,\n                    full_push_uri: fullPushUri,\n                    stream_name: this.streamKey,\n                })\n                // console.log('Push started successfully:', response.data)\n                // console.log('Destination ID:', destinationId)\n                // console.log('Full Push URI:', fullPushUri)\n                // console.log('Stream Name:', this.streamKey)\n                const {message, status} = response.data\n                // Use the status from the response for the notification\n                notificationStore.setToastNotification(message, status)\n                // Update the component's state to reflect the change\n                const index = this.destinations.findIndex(destination => destination.id === destinationId)\n                if (index !== -1) {\n                    this.destinations[index].push_is_started = 1\n                }\n            } catch (error) {\n                // console.error('Error starting push:', error)\n                notificationStore.setToastNotification('Failed to start push.', 'error')\n                // Handle the error appropriately in your UI\n            } finally {\n                this.loadingDestinationId = null // Stop loading regardless of outcome\n            }\n        },\n        async stopPush(destinationId) {\n            const notificationStore = useNotificationStore()\n            this.loadingDestinationId = destinationId\n            // console.log(`Stopping push for destination ${destinationId}`)\n            try {\n                const response = await axios.post('/mist-stream/stop-push', {destination_id: destinationId})\n                // console.log('Push stopped successfully:', response.data)\n                const {message, status} = response.data\n                notificationStore.setToastNotification(message, status)\n                // Update the component's state to reflect the change\n            } catch (error) {\n                // console.error('Error stopping push:', error)\n                notificationStore.setToastNotification('Failed to stop push.', 'error')\n            } finally {\n                this.loadingDestinationId = null // Stop loading regardless of outcome\n                const index = this.destinations.findIndex(destination => destination.id === destinationId)\n                if (index !== -1) {\n                    this.destinations[index].push_is_started = 0\n                }\n            }\n        },\n        async enableAutoPush(destinationId) {\n            this.loadingDestinationId = destinationId\n            const notificationStore = useNotificationStore()\n            try {\n                const response = await axios.post('/mist-stream/push-auto-add/' + destinationId)\n                // console.log('Auto push enabled successfully:', response.data)\n                const {message, status} = response.data\n                notificationStore.setToastNotification(message, status)\n                const index = this.destinations.findIndex(destination => destination.id === destinationId)\n                if (index !== -1) {\n                    this.destinations[index].has_auto_push = 1\n                }\n            } catch (error) {\n                // console.error('Error enabling auto push:', error)\n                notificationStore.setToastNotification('Failed to enable auto push.', 'error')\n            } finally {\n                this.loadingDestinationId = null // Stop loading regardless of outcome\n            }\n        },\n        async disableAutoPush(destinationId) {\n            const notificationStore = useNotificationStore()\n            this.loadingDestinationId = destinationId\n            try {\n                const response = await axios.post('/mist-stream/push-auto-remove/' + destinationId)\n                // console.log('Auto push removed successfully:', response.data)\n                const {message, status} = response.data\n                notificationStore.setToastNotification(message, status)\n                const index = this.destinations.findIndex(destination => destination.id === destinationId)\n                if (index !== -1) {\n                    this.destinations[index].has_auto_push = 0\n                }\n            } catch (error) {\n                // console.error('Error disabling auto push:', error)\n                notificationStore.setToastNotification('Failed to disable auto push.', 'error')\n            } finally {\n                this.loadingDestinationId = null // Stop loading regardless of outcome\n            }\n        },\n        async disableAllAutoPushes() {\n            const notificationStore = useNotificationStore()\n            this.isProcessingDisableAllAutoPushes = true\n            try {\n                const response = await axios.post('/mist-stream/remove-all-auto-pushes-for-stream', {'streamName': this.streamKey})\n                // console.log('Auto push disabled successfully:', response.data)\n                const {message, status} = response.data\n                notificationStore.setToastNotification(message, status)\n                await this.fetchPushDestinations()\n            } catch (error) {\n                // console.error('Error disabling auto push:', error)\n                notificationStore.setToastNotification('Failed to disable auto push.', 'error')\n            } finally {\n                this.isProcessingDisableAllAutoPushes = false // Stop loading regardless of outcome\n                await this.fetchPushDestinations()\n            }\n        },\n    },\n    getters: {\n        selectedShow: (state) => {\n            const show = state.shows.find(show => show.id === state.selectedShowId) || null\n            state.streamKey = show?.mist_stream_wildcard?.name || 'Fallback value if undefined'\n            state.wildcardId = show?.mist_stream_wildcard?.id || 'Fallback value if undefined'\n            state.isRecording = show?.mist_stream_wildcard?.is_recording || false\n            return show\n        },\n        fullRtmpUri: (state) => {\n            return state.rtmpUri ? state.rtmpUri + 'live/' : ''\n        },\n        fullUrl: (state) => {\n            // Directly construct fullRtmpUri from state\n            const fullRtmpUri = state.rtmpUri ? state.rtmpUri + 'live/' : ''\n\n            // Directly find the show based on selectedShowId to avoid using getters\n            // const show = state.shows.find(show => show.id === state.selectedShowId) || null;\n            // const streamKey = show?.mist_stream_wildcard?.name || 'Fallback value if undefined';\n\n            // Return the concatenated URL\n            return `${fullRtmpUri}${state.streamKey}`\n        },\n        // Example getter that might filter destinations based on some criteria\n        activeDestinations: (state) => {\n            return state.destinations.filter(destination => destination.push_is_started)\n        },\n        sourceName: (state) => {\n            if (state.selectedShow?.mist_stream_wildcard?.name) {\n                return state.selectedShow.mist_stream_wildcard.name\n            } else if (state.episode?.mist_stream_wildcard?.name) {\n                return state.episode.mist_stream_wildcard.name\n            }\n            return null // No source available\n        },\n        streamOffline: (state) => {\n            // Check if the 'error' key exists and if its value is 'Stream is offline'\n            // If streamInfo is null or undefined, it defaults to an empty object {}\n            return (state.streamInfo?.error ?? '') === 'Stream is offline'\n        },\n    },\n\n\n})\n","import { defineStore } from \"pinia\";\nimport axios from \"axios\";\nimport dayjs from \"dayjs\";\nimport utc from 'dayjs/plugin/utc'\nimport timezone from 'dayjs/plugin/timezone'\nimport { useUserStore } from \"@/Stores/UserStore\";\nimport { useVideoPlayerStore } from '@/Stores/VideoPlayerStore';\nimport { useAppSettingStore } from '@/Stores/AppSettingStore';\nimport { useNowPlayingStore } from '@/Stores/NowPlayingStore';\nimport { useShowStore } from '@/Stores/ShowStore';\nimport { useNotificationStore } from '@/Stores/NotificationStore';\n\ndayjs.extend(utc)\ndayjs.extend(timezone)\n\nconst initialState = () => ({\n    recordings: [],\n    pagination: {\n        currentPage: 1,\n        lastPage: 1,\n        total: 0,\n    },\n    selectedRecording: null,\n    nowPlayingRecording: null,\n    nowPlayingRecordingId: null,\n    isLoading: false,\n    showCopyMessage: false,\n    copyMessage: '',\n});\n\nexport const useRecordingStore = defineStore('recordingStore', {\n    state: initialState,\n    actions: {\n        async fetchRecordings(page = 1) {\n            this.isLoading = true;\n            const showStore = useShowStore();\n            const showId = showStore.show?.id;\n\n            if (!showId) {\n                console.error(\"No show ID available\");\n                this.isLoading = false;\n                return;\n            }\n\n            try {\n                const response = await axios.get(`/api/recordings`, {\n                    params: {\n                        show_id: showId,\n                        page: page\n                    }\n                });\n                this.recordings = response.data.data;\n                this.pagination = {\n                    currentPage: response.data.current_page,\n                    lastPage: response.data.last_page,\n                    total: response.data.total,\n                };\n            } catch (error) {\n                console.error(\"Failed to fetch recordings:\", error);\n            } finally {\n                this.isLoading = false;\n            }\n        },\n        async updateRecording(meta) {\n            const showStore = useShowStore();\n            const notificationStore = useNotificationStore();\n            this.isLoading = true;\n\n            try {\n                console.log('Updating recording with meta:', meta);\n                const response = await axios.patch(`/api/recordings/${this.selectedRecording.id}`, {\n                    meta: meta,\n                    show_id: showStore.show.id\n                });\n                const updatedRecording = response.data.recording;\n                notificationStore.setToastNotification('Recording updated successfully.', 'success');\n\n                // Update the recordings state with the updated recording\n                const index = this.recordings.findIndex(recording => recording.id === updatedRecording.id);\n                if (index !== -1) {\n                    this.recordings[index] = updatedRecording;\n                }\n\n                // Update the selected recording if it matches the updated one\n                if (this.selectedRecording?.id === updatedRecording.id) {\n                    this.selectedRecording = updatedRecording;\n                }\n            } catch (error) {\n                console.error(\"Failed to update recording:\", error);\n                notificationStore.setToastNotification(error.message, 'error');\n            } finally {\n                this.isLoading = false;\n            }\n        },\n        reset() {\n            Object.assign(this, initialState());\n        },\n        formatDateInUserTimezone(date) {\n            const userStore = useUserStore();\n            return userStore.formatDateInUserTimezone(date);\n        },\n        formatTimeFromDateInUserTimezone(date) {\n            const userStore = useUserStore();\n            return userStore.formatTimeFromDateInUserTimezone(date);\n        },\n        formatDuration(totalMilliseconds) {\n            let seconds = Math.floor(totalMilliseconds / 1000);\n            let minutes = Math.floor(seconds / 60);\n            const hours = Math.floor(minutes / 60);\n            seconds = seconds % 60;\n            minutes = minutes % 60;\n            const paddedHours = hours.toString().padStart(2, '0');\n            const paddedMinutes = minutes.toString().padStart(2, '0');\n            const paddedSeconds = seconds.toString().padStart(2, '0');\n            return `${paddedHours}h ${paddedMinutes}m ${paddedSeconds}s`;\n        },\n        setSelectedRecording(recording) {\n            this.selectedRecording = recording;\n        },\n        clearSelectedRecording() {\n            this.selectedRecording = null;\n        },\n        async openVideo() {\n            // this.selectedRecording = recording;\n            const videoPlayerStore = useVideoPlayerStore();\n            const appSettingStore = useAppSettingStore();\n            const nowPlayingStore = useNowPlayingStore();\n            const showStore = useShowStore();\n            const show = showStore.show;\n\n            const source = {\n                mediaType: 'recording',\n                recording: {\n                    source: this.selectedRecording.playback_stream_name,\n                    sourceType: 'video/mp4',\n                },\n            };\n            try {\n                await videoPlayerStore.loadNewVideo(source);\n                this.nowPlayingRecordingId = this.selectedRecording.id;\n                appSettingStore.toggleOttInfo();\n                nowPlayingStore.setActiveMedia(source.mediaType, {\n                    primaryName: show.name,\n                    secondaryName: `${this.formatDateInUserTimezone(this.selectedRecording.start_time)} ${this.formatTimeFromDateInUserTimezone(this.selectedRecording.start_time)} Recording`,\n                    description: this.selectedRecording.comment || null,\n                    primaryUrl: `shows/${show.slug}`,\n                    image: show.image,\n                });\n            } catch (error) {\n                console.error('Error loading new video:', error);\n            }\n        },\n        downloadRecording() {\n            if (!this.selectedRecording) return;\n\n            const url = this.selectedRecording.download_url;\n            const downloadLink = document.createElement('a');\n            downloadLink.href = url;\n            document.body.appendChild(downloadLink);\n            downloadLink.click();\n            document.body.removeChild(downloadLink);\n        },\n    },\n    getters: {\n        formattedRecordings: (state) => {\n            const userStore = useUserStore();\n            return state.recordings.map(recording => ({\n                ...recording,\n                start_date_local: dayjs.utc(recording.start_dateTime).tz(userStore.timezone).format('ddd DD MMM'),\n                start_time_local: dayjs.utc(recording.start_dateTime).tz(userStore.timezone).format('h:mm a'),\n                end_time_local: dayjs.utc(recording.end_dateTime).tz(userStore.timezone).format('h:mm a'),\n            }));\n        },\n\n    },\n});\n","import { defineStore } from 'pinia'\nimport dayjs from 'dayjs'\nimport utc from 'dayjs-plugin-utc'\nimport timezone from 'dayjs/plugin/timezone'\nimport { useUserStore } from '@/Stores/UserStore'\nimport { useNotificationStore } from '@/Stores/NotificationStore'\n\ndayjs.extend(utc)\ndayjs.extend(timezone)\n\nconst initialState = () => ({\n    team: {},\n    shows: {},\n    contributors: {},\n    members: {},\n    managers: {},\n    teamOwner: [],\n    teamLeader: [],\n    can: {},\n    id: 0,\n    name: '',\n    description: '',\n    slug: '',\n    totalSpots: '',\n    memberSpots: '',\n    activeShow: [],\n    activeEpisode: [],\n    showModal: Boolean,\n    confirmDialog: false,\n    confirmManagerDialog: false,\n    selectedManagerName: '',\n    selectedManagerId: 0,\n    addManager: false,\n    removeManager: false,\n    deleteMemberName: '',\n    deleteMemberId: 0,\n    noteEdit: 0,\n    note: '',\n    noteKey: 0,\n    saveNoteProcessing: Boolean,\n    // on the show episode manage page\n    // turn on the go live div\n    goLiveDisplay: false,\n    openComponent: 'teamShows',\n    nextBroadcastLoaded: {\n        scheduleIndexId: null,\n        broadcastDate: null,\n        broadcastDetails: {},\n        type: '',\n        image: null,\n        category: null,\n        subCategory: null,\n        slug: null,\n        name: null,\n        description: null,\n    },\n    nextBroadcastZoomLink: '',\n})\n\nexport const useTeamStore = defineStore('teamStore', {\n    state: initialState,\n    actions: {\n        reset() {\n            // Reset the store to its original state (clear all data)\n            Object.assign(this, initialState())\n        },\n        // async fill() {\n        //     let r = await import('@/Json/team.json');\n        //     this.$state = r.default;\n        // },\n        initializeTeam(team) {\n            // console.log('incoming team: ', team)\n            const userStore = useUserStore()\n\n            // Ensure nextBroadcast is an array and has at least one element\n            if (Array.isArray(team.nextBroadcast) && team.nextBroadcast.length > 0) {\n                const firstBroadcast = team.nextBroadcast[0]\n\n                if (firstBroadcast.broadcastDetails) {\n                    this.nextBroadcastLoaded = firstBroadcast\n\n                    if (firstBroadcast.broadcastDetails.zoomLink) {\n                        this.nextBroadcastZoomLink = firstBroadcast.broadcastDetails.zoomLink\n                    }\n\n                    // Ensure broadcastDetails is an array and has the zoomLink object\n                    // this.nextBroadcastLoaded.broadcastDetails = []\n                    // if (!Array.isArray(this.nextBroadcastLoaded.broadcastDetails)) {\n                    //     this.nextBroadcastLoaded.broadcastDetails = []\n                    // }\n\n                    // let zoomLinkObj = this.nextBroadcastLoaded.broadcastDetails.find(detail => detail.zoomLink !== undefined)\n                    // if (!zoomLinkObj) {\n                    //     zoomLinkObj = {zoomLink: ''}\n                    //     this.nextBroadcastLoaded.broadcastDetails.push(zoomLinkObj)\n                    // }\n\n                    team.nextBroadcast = team.nextBroadcast.map(broadcast => ({\n                        ...broadcast,\n                        broadcastDate: userStore.convertUtcToUserTimezone(broadcast.broadcastDate),\n                    }))\n                }\n            } else {\n                // Handle the case where nextBroadcast is not an array or is empty\n                this.nextBroadcastLoaded = null\n                this.nextBroadcastZoomLink = null\n            }\n\n            this.team = team || {}\n        },\n        initializeShows(shows) {\n            this.shows = shows || {}\n        },\n        initializeContributors(contributors) {\n            this.contributors = contributors || {}\n        },\n        setCan(can) {\n            this.can = can || {}\n        },\n        setActiveTeam(team) {\n            this.team.id = team.id\n            this.team.name = team.name\n            this.team.description = team.description\n            this.team.slug = team.slug\n            this.team.members = team.members\n            this.team.managers = team.managers\n            this.team.totalSpots = team.totalSpots\n            this.memberSpots = team.memberSpots\n        },\n        setActiveShow(show) {\n            this.activeShow = show\n        },\n        setActiveEpisode(episode) {\n            this.activeShow = episode\n        },\n        addMember(member) {\n            this.team.members.push(member)\n        },\n        removeMember(memberId) {\n            this.team.members = this.team.members.filter(member => member.id !== memberId)\n        },\n        updateCreatorTeams(creatorId, teamId, remove = false) {\n            const creator = this.creators.find(c => c.id === creatorId)\n            if (creator) {\n                if (remove) {\n                    creator.teams = creator.teams.filter(team => team.id !== teamId)\n                } else {\n                    creator.teams.push({id: teamId, is_manager: false}) // Add the new team to the creator's teams\n                }\n            }\n        },\n        // getCreators() {\n        //     router.reload({ only: ['creators'] })\n        // },\n        deleteTeamMemberCancel() {\n            this.confirmDialog = false\n        },\n        confirmTeamManagerCancel() {\n            this.confirmManagerDialog = false\n        },\n        // loadTeamMembers(members){\n        //     this.members = members;\n        // }\n        // deleteTeamMember() {\n        //     router.visit(route('teams.removeTeamMember'), {\n        //         method: 'post',\n        //         data: {\n        //             user_id: this.deleteMemberId,\n        //             team_id: this.id,\n        //             team_slug: this.slug,\n        //         },\n        //     })\n        // },\n        async deleteTeamMember() {\n            const notificationStore = useNotificationStore()\n            const payload = {\n                user_id: this.deleteMemberId,\n                team_id: this.team.id,\n            }\n\n            try {\n                const response = await axios.post(route('teams.removeTeamMember'), payload)\n                if (response.status === 200) {\n                    this.removeMember(this.deleteMemberId)\n                    this.updateCreatorTeams(this.deleteMemberId, this.team.id, true) // Remove the team from the creator's teams\n                    this.confirmDialog = false\n                    notificationStore.setToastNotification(response.data.message, 'success')\n                } else {\n                    this.confirmDialog = false\n                    notificationStore.setToastNotification('Failed to remove member from the team.', 'warning')\n                }\n            } catch (error) {\n                console.error(error)\n                this.confirmDialog = false\n                notificationStore.setToastNotification('An error occurred while removing the member from the team.', 'error')\n            }\n        },\n        async addTeamManager() {\n            const notificationStore = useNotificationStore()\n            const payload = {\n                user_id: this.selectedManagerId,\n                team_id: this.team.id,\n                team_slug: this.team.slug,\n            }\n            try {\n                const response = await axios.post(route('teams.addTeamManager'), payload)\n                if (response.status === 200) {\n                    // Add any additional logic if needed, e.g., updating team data in the store\n                    this.team.managers.push(response.data.manager);\n                    this.confirmManagerDialog = false\n                    notificationStore.setToastNotification(response.data.message, 'success')\n                } else {\n                    this.confirmManagerDialog = false\n                    notificationStore.setToastNotification('Failed to add manager to the team.', 'warning')\n                }\n            } catch (error) {\n                console.error(error)\n                this.confirmManagerDialog = false\n                notificationStore.setToastNotification('An error occurred while adding the manager to the team.', 'error')\n            }\n        },\n        async removeTeamManager() {\n            const notificationStore = useNotificationStore()\n            const payload = {\n                user_id: this.selectedManagerId,\n                team_id: this.team.id,\n                team_slug: this.team.slug,\n            }\n\n            try {\n                const response = await axios.post(route('teams.removeTeamManager'), payload)\n                if (response.status === 200) {\n                    // Remove the manager from the team.managers array\n                    this.team.managers = this.team.managers.filter(manager => manager.id !== this.selectedManagerId)\n                    this.confirmManagerDialog = false\n                    notificationStore.setToastNotification(response.data.message, 'success')\n                } else {\n                    this.confirmManagerDialog = false\n                    notificationStore.setToastNotification('Failed to remove manager from the team.', 'warning')\n                }\n            } catch (error) {\n                console.error(error)\n                this.confirmManagerDialog = false\n                notificationStore.setToastNotification('An error occurred while removing the manager from the team.', 'error')\n            }\n        },\n        toggleGoLiveDisplay() {\n            this.goLiveDisplay = !this.goLiveDisplay\n        },\n        async fetchTeamMembers() {\n            await axios.get('/team/team-members').then().error()\n        },\n        setCreators(creators) {\n            this.creators = creators\n        },\n        updatePublicMessage(html) {\n            this.team.public_message = html\n        },\n    },\n\n    getters: {\n        spotsRemaining(state) {\n            if (!state.team.members) {\n                return state.team.totalSpots // Assume no members if state.members is not defined\n            } else if (state.team.members) {\n                this.totalSpots = state.team.totalSpots\n                return Math.max(state.team.totalSpots - state.team.members.length, 0)\n            }\n        },\n        membersCount(state) {\n            if (!state.team.members) {\n                return 0 // Assume no members if state.members is not defined\n            } else if (state.team.members) {\n                this.memberSpots = state.team.members.length\n                return state.team.members.length\n            }\n        },\n        membersCountDisplay(state) {\n            if (state.team.members) {\n                return state.team.members.length > 99 ? '99+' : state.team.members.length\n            }\n        },\n        nextBroadcast(state) {\n            const {team} = state\n            if (!team.nextBroadcast || team.nextBroadcast.length === 0) {\n                return null\n            }\n\n            const userStore = useUserStore()\n            const today = dayjs().tz(userStore.timezone)\n\n            return team.nextBroadcast.reduce((closest, broadcast) => {\n                const broadcastDate = dayjs(broadcast.broadcastDate).tz(userStore.timezone)\n                if (!closest || Math.abs(broadcastDate - today) < Math.abs(dayjs(closest.broadcastDate).tz(userStore.timezone) - today)) {\n                    return broadcast\n                }\n                return closest\n            }, null)\n        },\n        nextBroadcastIsOver: (state) => {\n            const userStore = useUserStore();\n            const nowInUserTimezone = dayjs().utc().tz(userStore.timezone);\n            const broadcastEndTime = dayjs(this.nextBroadcast.broadcastDate)\n                .add(this.nextBroadcast.broadcastDetails.duration_minutes, 'minute')\n                .utc()\n                .tz(userStore.timezone);\n\n            return nowInUserTimezone.isAfter(broadcastEndTime);\n        },\n        sortedBroadcasts(state) {\n            if (!state.team.nextBroadcast || state.team.nextBroadcast.length === 0) {\n                return []\n            }\n\n            const userStore = useUserStore()\n            const today = dayjs().tz(userStore.timezone)\n\n            return state.team.nextBroadcast\n                .filter(broadcast => dayjs(broadcast.broadcastDate).tz(userStore.timezone).isAfter(today))\n                .sort((a, b) => dayjs(a.broadcastDate).tz(userStore.timezone).diff(dayjs(b.broadcastDate).tz(userStore.timezone)))\n                .map(broadcast => ({\n                    ...broadcast,\n                    localDate: dayjs(broadcast.broadcastDate).tz(userStore.timezone).format(),\n                }))\n        },\n        futureBroadcasts(state) {\n            const nextBroadcast = this.nextBroadcast\n            if (!state.team.nextBroadcast || state.team.nextBroadcast.length === 0) {\n                return []\n            }\n\n            const userStore = useUserStore()\n            const today = dayjs().tz(userStore.timezone)\n\n            return state.team.nextBroadcast\n                .filter(broadcast =>\n                    dayjs(broadcast.broadcastDate).tz(userStore.timezone).isAfter(today) &&\n                    (!nextBroadcast || broadcast.broadcastDate !== nextBroadcast.broadcastDate),\n                )\n                .sort((a, b) => dayjs(a.broadcastDate).tz(userStore.timezone).diff(dayjs(b.broadcastDate).tz(userStore.timezone)))\n                .map(broadcast => ({\n                    ...broadcast,\n                    localDate: dayjs(broadcast.broadcastDate).tz(userStore.timezone).format(),\n                }))\n        },\n    },\n})\n\n\n// Another option for declaring specific data to return:\n// let data = r.default;\n//\n// import('@/Json/team.json').then(r => {\n// this.$patch({\n//     name: data.name,\n//     spots: data.spots,\n//     members: data.members\n// });\n// });\n","import { defineStore } from 'pinia'\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\nimport { useStreamStore } from '@/Stores/StreamStore'\nimport { useUserStore } from '@/Stores/UserStore'\nimport { useChannelStore } from '@/Stores/ChannelStore'\nimport { useShowStore } from '@/Stores/ShowStore'\nimport { useAudioStore } from '@/Stores/AudioStore'\nimport videojs from 'video.js'\nimport { usePage } from '@inertiajs/vue3'\nimport { nextTick } from 'vue'\nimport { useNotificationStore } from '@/Stores/NotificationStore'\n\nconst initialState = () => ({\n    mistServerUri: 'https://mist.nottv.io/', // tec21: 2024-02-09, if we don't start with the address here changing channels is really slow and buggy. Address for the MistServer listed in the Admin Settings saved in AppSetting\n    player: null, // Video.js player instance\n    eventListenersAttached: false, // Track if listeners are attached\n    videoPlayerLoaded: false,\n    class: '',\n    videoContainerClass: '',\n    // ottClass: 'OttClose',\n    videoSourceIdSrc1: '',\n    videoSourceIdSrc2: '',\n    videoSourceIdSrc3: '',\n    videoSourceTypeSrc1: '',\n    videoSourceTypeSrc2: '',\n    videoSourceTypeSrc3: '',\n    firstPlayVideoSourceType: '',\n    firstPlayVideoSource: '',\n    key: '',\n    videoName: '',\n    videoSource: '',\n    videoSourceType: '',\n    videoPoster: '',\n    nextSource: '',\n    previousSource: '',\n    currentView: '',\n    currentChannelId: 0,\n    currentChannelName: '',\n    currentShow: {},\n    currentShowEpisode: {},\n    currentVideo: {},\n    hasVideo: false,\n    controls: true,\n    muted: true,\n    paused: true,\n    // videoCurrentTime: '',\n    currentTime: 0, // Current playback time in seconds\n    duration: 0, // Total video duration in seconds\n    formattedTime: '00:00 / 00:00', // Formatted time string\n    blue: false, // DO NOT REMOVE\n    videoIsYoutube: false,\n    videoUploadComplete: false,\n})\n\nexport const useVideoAuxPlayerStore = defineStore('videoAuxPlayerStore', {\n    state: initialState,\n    actions: {\n        reset() {\n            // Reset the store to its original state (clear all data)\n            Object.assign(this, initialState())\n        },\n\n        async getMistServerUri() {\n            try {\n                let response = await axios.get('/mist-server/uri')\n                this.mistServerUri = response.data\n            } catch (error) {\n                console.error(error)\n            }\n        },\n\n        // Initialize or update the player instance\n        setPlayer(playerInstance) {\n            this.player = playerInstance\n            this.initializePlayer().then(() => {\n                this.attachEventListeners() // Attach event listeners after initialization\n            }).catch(error => {\n                console.error('Error during video player initialization:', error)\n            })\n        },\n\n        // Initialize the player with necessary settings and start playback\n        async initializePlayer() {\n            if (!this.player) {\n                console.error('Video.js player is not initialized.')\n                return\n            }\n\n            await nextTick() // Ensure Vue's DOM updates are processed\n\n            // Perform any necessary audio context and node setup\n            await useAudioStore().ensureAudioContextAndNodesReady(this.player)\n\n            // Apply initial player settings\n            this.player.controls(false)\n            this.player.muted(this.muted)\n\n            // Attempt to start playback\n            this.player.ready(() => {\n                this.player.play().then(() => {\n                    console.log('Playback started successfully')\n                }).catch(error => {\n                    console.error('Error trying to play the video:', error)\n                    // Handle the error (e.g., showing a user-friendly message)\n                })\n            })\n        },\n\n        // Attach event listeners to the player\n        attachEventListeners() {\n            if (!this.player || this.eventListenersAttached) {\n                console.log('Event listeners are already attached or video player is not initialized.')\n                return\n            }\n\n            this.player.on('timeupdate', this.handleTimeUpdate)\n            this.player.on('fullscreenchange', this.handleFullscreenChange)\n            this.player.on('play', this.handlePlay)\n            this.player.on('pause', this.handlePause)\n            this.player.on('error', this.handleError)\n\n            this.eventListenersAttached = true\n            console.log('Event listeners attached.')\n        },\n\n        // Detach event listeners from the player\n        detachEventListeners() {\n            if (!this.player || !this.eventListenersAttached) {\n                console.log('Event listeners are already detached or video player is not initialized.')\n                return\n            }\n\n            useAudioStore().stopAudioLevelMonitoring()\n            this.player.off('timeupdate', this.handleTimeUpdate)\n            this.player.off('fullscreenchange', this.handleFullscreenChange)\n            this.player.off('play', this.handlePlay)\n            this.player.off('pause', this.handlePause)\n            this.player.off('error', this.handleError)\n\n            this.eventListenersAttached = false\n            console.log('Event listeners detached.')\n        },\n\n        // Dispose of the player and perform cleanup\n        disposePlayer() {\n            if (!this.player) {\n                console.error('Video player is not initialized.')\n                return\n            }\n            this.detachEventListeners() // Detach event listeners if attached\n            this.player.dispose() // Dispose of the player instance\n            this.player = null // Reset the player state\n\n            // Optionally, stop audio level monitoring if linked to the player lifecycle\n            // const audioStore = useAudioStore();\n            // audioStore.stopAudioLevelMonitoring();\n\n            console.log('Video player disposed and cleaned up.')\n        },\n\n        // New method to prepare for a new video source\n        prepareForNewVideoSource(source) {\n            console.log('Preparing for new video source')\n\n            // Example: Clear any existing channel or video-specific state\n            // useChannelStore().clearChannel()\n\n            // Reset or cleanup any existing video playback, if necessary\n            // this.resetPlayback();\n\n            // Load and play the new video source\n            this.loadNewVideo(source)\n        },\n\n        resetPlayback() {\n            if (this.player) {\n                this.player.pause()\n                this.player.muted(true)\n                this.player.currentTime(0) // Optionally reset the time\n                // Further cleanup logic here, if necessary\n                this.detachEventListeners() // Detach event listeners if attached\n            }\n        },\n\n        // Event handlers\n        handleTimeUpdate() {\n            // console.log('Handling timeupdate...');\n            // Implement your logic\n            this.currentTime = this.player.currentTime()\n            this.duration = this.player.duration()\n            const progressPercentage = (this.currentTime / this.duration) * 100\n            this.formattedTime = `${this.formatDuration(this.currentTime)} / ${this.formatDuration(this.duration)}`\n\n            // Update UI elements or emit events as needed\n            // Note: Direct manipulation of the DOM or component refs from the store is not recommended\n\n        },\n        // for the handleTimeUpdate eventHandler\n        formatDuration(durationInSeconds) {\n            const hours = Math.floor(durationInSeconds / 3600)\n            const minutes = Math.floor((durationInSeconds % 3600) / 60)\n            const seconds = Math.floor(durationInSeconds % 60)\n\n            const parts = [hours, minutes, seconds].map(part => part.toString().padStart(2, '0'))\n            return parts.join(':')\n        },\n        handleFullscreenChange() {\n            console.log('Handling fullscreenchange...')\n            // Implement your logic\n            this.player?.on('fullscreenchange', () => {\n                if (this.player.isFullscreen()) {\n                    // Video is entering fullscreen mode\n                    // You can add custom behavior for entering fullscreen here if needed\n                } else {\n                    // Video is exiting fullscreen mode\n                    // Check if the video was playing before entering fullscreen\n                    if (this.player.paused() === false) {\n                        // Resume playback after exiting fullscreen\n                        this.player.play()\n                    }\n                }\n            })\n        },\n        handlePlay() {\n            console.log('Handling play...')\n            // Implement your logic\n            this.player?.on('play', () => {\n                this.paused = false\n            })\n        },\n        handlePause() {\n            console.log('Handling pause...')\n            // Implement your logic\n            this.player?.on('pause', () => {\n                this.paused = true\n            })\n        },\n        handleError() {\n            console.log('Handling error...')\n            // Implement your logic\n            this.player?.on('error', function () {\n                const error = this.player.error()\n                console.error('Video.js Error:', error.code, error.message)\n            })\n        },\n        makeBlue() {\n            // for testing. DO NOT REMOVE.\n            this.blue = true\n        },\n        // Apparently this loadFirstPlay isn't being used...\n        // loadFirstPlay() {\n        //     const {props} = usePage()\n        //     let videoJs = videojs('aux-player')\n        //     const type = props.firstPlayVideoSourceType\n        //     const src = props.firstPlayVideoSource\n        //     videoJs.ready(() => {\n        //         videoJs.src({src, type})\n        //         videoJs.play().then(() => {\n        //             console.log('Playback started successfully')\n        //         }).catch(error => {\n        //             console.error('Error trying to play the video:', error)\n        //             // Handle the error (e.g., showing a user-friendly message)\n        //         })\n        //     })\n        //     console.log(type)\n        //     console.log(src)\n        // },\n        // Toggle mute state\n        toggleMute() {\n            if (this.muted) {\n                this.unMute()\n            } else {\n                this.mute()\n            }\n        },\n        // Mute the video\n        mute() {\n            if (this.player) {\n                this.player.muted(true)\n                this.muted = true\n            }\n        },\n        // Unmute the video\n        unMute() {\n            // const audioStore = useAudioStore()\n\n            if (this.player) {\n                // Prepare audio setup for when it's unmuted\n                // audioStore.userInteractionForAudio()\n\n                // Optionally, if fadeInAudioFromMuted is a gradual process,\n                // ensure this.player.muted(false) is called within that function.\n                // audioStore.fadeInAudioFromMuted()\n\n                this.player.muted(false)\n                this.muted = false\n            }\n        },\n        togglePlay() {\n            let videoJs = videojs('aux-player')\n\n            if (this.paused) {\n                videoJs.play()\n            } else {\n                videoJs.pause()\n            }\n        },\n        load() {\n            let videoJs = videojs('aux-player')\n            videoJs.load()\n        },\n        loadNewLiveSource(source, sourceType) {\n            let videoJs = videojs('aux-player')\n            let fullSourceUrl = this.mistServerUri + '/hls/' + source + '/index.m3u8'\n            videoJs.src({'src': fullSourceUrl, 'type': sourceType});\n            videoJs.play()\n        },\n        pause() {\n            let videoJs = videojs('aux-player')\n            videoJs.controls(false)\n            videoJs.pause()\n            this.paused = true\n        },\n        play() {\n            let videoJs = videojs('aux-player')\n\n            videoJs.play()\n            videoJs.controls(false)\n            this.paused = false\n        },\n        // next not built yet\n        next() {\n            let videoJs = videojs('aux-player')\n            videoJs.controls(false)\n            videoJs.src(this.nextSource)\n        },\n        // back not built yet\n        back() {\n            let videoJs = videojs('aux-player')\n            videoJs.controls(false)\n            videoJs.src(this.previousSource)\n        },\n        fullscreen() {\n            let videoJs = videojs('aux-player')\n            videoJs.controls(false)\n            // videoJs.fullscreen(this.previousSource)\n            videoJs.requestFullscreen()\n        },\n        getVideoCurrentTime() {\n            let videoJs = videojs('aux-player')\n            videoJs.controls(false)\n            this.videoCurrentTime = videoJs.currentTime\n        },\n\n\n        // This playNewVideo was created to access the audioContext\n        // which our audio compressor uses. This is new as of 2/2/2024\n        // ~ tec21\n\n        // playNewVideo(source) {\n        //     useChannelStore().clearChannel() // Reset or clear channel store\n        //     const videoJs = videojs('aux-player')\n        //     let videoSrc, videoSourceType\n        //     // Determine the source type and construct the source URL if necessary\n        //     if (source.mediaType === 'externalVideo') {\n        //         videoSrc = source.video_url // Direct URL to the video\n        //         videoSourceType = source.type // MIME type, e.g., 'video/youtube', 'video/mp4'\n        //     } else {\n        //         // Construct file path for internal videos\n        //         videoSrc = `${source.cdn_endpoint}${source.cloud_folder}${source.folder}/${source.file_name}`\n        //         videoSourceType = source.type // MIME type, typically 'video/mp4' for file-based sources\n        //     }\n        //     this.resumeAudioContextIfNeeded()\n        //     videoJs.src({src: videoSrc, type: videoSourceType})\n        //     videoJs.muted(false)\n        // },\n\n        // getSourceDetails(source) {\n        //     let videoSrc = source.video_url; // Directly access the video URL\n        //\n        //     // Default to 'video/mp4' if type is falsy ('', null, undefined, etc.)\n        //     let videoSourceType = source.type || 'video/mp4'\n        //\n        //     // Determine the mediaType and construct the source URL if necessary\n        //     if (source.mediaType === 'externalVideo') {\n        //         videoSrc = source.video_url // Direct URL to the video\n        //     } else {\n        //         // Internal video: construct the path, ensuring the file name is encoded\n        //         let encodedFileName = encodeURIComponent(source.file_name);\n        //         console.log(encodedFileName)\n        //         videoSrc = `${source.cdn_endpoint}${source.cloud_folder}${source.folder}/${encodedFileName}`\n        //     }\n        //     // Logic to determine videoSrc and videoSourceType\n        //     console.log(`Video Source: ${videoSrc}, Type: ${videoSourceType}`);\n        //     return { videoSrc, videoSourceType } // Return as an object\n        // },\n\n\n        getSourceDetails(source) {\n            let videoSrc, videoSourceType\n\n            console.log('getSourceDetails called with source:', source);\n\n            // Default to 'video/mp4' if type is not specified or is empty\n            videoSourceType = source.type || 'video/mp4'\n            console.log(`Determined Video Source Type: ${videoSourceType}`);\n\n            if (source.mediaType === 'externalVideo') {\n                // For external videos, use the URL as provided without encoding\n                videoSrc = source.video_url\n                console.log('Using external video source:', videoSrc);\n            } else {\n                console.log('CDN Endpoint:', source.cdn_endpoint);\n                console.log('Cloud Folder:', source.cloud_folder);\n                console.log('Folder:', source.folder);\n                console.log('File Name:', source.file_name);\n                // For internal videos, construct the URL from its components\n                // Here, we assume the cdn_endpoint, cloud_folder, and folder are correctly formatted\n                // and do not require encoding. Only the file_name might need encoding.\n                const basePath = `${source.cdn_endpoint}${source.cloud_folder}${source.folder}/`\n                // const encodedFileName = encodeURIComponent(source.file_name);\n                const fileName = source.file_name\n                videoSrc = basePath + fileName\n                console.log('Constructed internal video source:', videoSrc);\n                // If your server or CDN is configured to handle spaces in URLs without %20 encoding\n                // or if the original working URLs did not use standard URL encoding,\n                // you might adjust the encoding strategy here.\n                // For example, to replace spaces with %20 but leave other characters as-is:\n                // const fileNameForUrl = source.file_name.replace(/ /g, '%20');\n                // videoSrc = basePath + fileNameForUrl;\n            }\n\n            console.log(`Final Constructed Video Source: ${videoSrc}, Type: ${videoSourceType}`);\n            return {videoSrc, videoSourceType}\n        },\n\n\n        loadNewVideo(source) {\n            try {\n                let videoJs = videojs('aux-player');\n                console.log('LOAD NEW VIDEO');\n                const audioStore = useAudioStore();\n                // Correctly destructure the returned object to get videoSrc and videoSourceType\n                const {videoSrc, videoSourceType} = this.getSourceDetails(source);\n\n                // Example: Stopping and cleaning up the current video and audio setup\n                if (videoJs) {\n                    videoJs.src({'src': videoSrc, 'type': videoSourceType});\n\n                    videoJs.ready(() => {\n                        // ensureAudioContextAndNodesReady does the following:\n                        // 1. Resumes AudioContext if suspended.\n                        // 2. (Re)connects MediaElementSource from the video element to AudioContext.\n                        audioStore.deferAudioSetup = false;\n                        audioStore.ensureAudioContextAndNodesReady(videoJs).then(() => {\n                            // Only attempt to play the video after ensuring the AudioContext is ready\n                            videoJs.play().catch(error => {\n                                useNotificationStore().setGeneralServiceNotification('Error', 'Playback initiation error: ' + error)\n                                console.error('Playback initiation error: ', error);\n                            });\n\n                            // Consider toggling mute based on the user's preference or previous state\n                            videoJs.muted(false);\n                            this.muted = false;\n                        });\n                    });\n                }\n            } catch (error) {\n                // Log the error or perform any other error handling\n                useNotificationStore().setGeneralServiceNotification('Error', 'Error loading new video: ' + error)\n                console.error('Error loading new video: ', error);\n            }\n        },\n\n        // loadNewVideo(source) {\n        //     console.log('LOAD NEW VIDEO TTTTTTTTTTTTTTTTTTTTTTTTTS');\n        //     console.log('LOAD NEW VIDEO initiated with source:', source);\n        //     const audioStore = useAudioStore();\n        //     this.unMute();\n        //     // Destructure the returned object to get videoSrc and videoSourceType\n        //     const { videoSrc, videoSourceType } = this.getSourceDetails(source);\n        //     console.log(`Video source details received: Src - ${videoSrc}, Type - ${videoSourceType}`);\n        //\n        //     // Ensure you're using the same player instance (`videoJs` in this context) for consistency\n        //     let videoJs = videojs('aux-player'); // Ensure this ID matches your video player element\n        //     console.log('Video.js player instance created or retrieved.');\n        //\n        //     // Stop and clean up the current video and audio setup if necessary\n        //     videoJs.ready(() => {\n        //         console.log('Video.js player is ready.');\n        //         videoJs.src({ 'src': videoSrc, 'type': videoSourceType });\n        //         console.log(`Video source set: ${videoSrc} of type ${videoSourceType}`);\n        //\n        //         // Ensure AudioContext and nodes are ready\n        //         audioStore.ensureAudioContextAndNodesReady(videoJs).then(() => {\n        //             console.log('Audio context and nodes are ready. Attempting to play video.');\n        //\n        //             videoJs.play().then(() => {\n        //                 console.log('Video playback started successfully.');\n        //             }).catch(error => {\n        //                 console.error('Playback initiation error:', error);\n        //             });\n        //             // Attempt to play the video after ensuring the AudioContext is ready\n        //             // videoJs.play().catch(error => {\n        //             //     console.error('Playback initiation error:', error);\n        //             // });\n        //\n        //             // Apply the unMute logic from loadMistStreamVideo to ensure audio is correctly configured\n        //             this.unMute();\n        //             console.log('Audio unmuted.');\n        //             this.paused = false;\n        //             console.log('Paused flag set to false.');\n        //         }).catch(error => {\n        //             console.error('Error ensuring audio context and nodes are ready:', error);\n        //         });\n        //     });\n        // },\n\n        playNewVideo() {\n            console.log('PLAY NEW VIDEO')\n            if (this.player) {\n                // Wait for the video to be ready before playing\n                this.player.ready(() => {\n                    this.player.play()\n                    // Assuming you want to unmute here; check if this aligns with user interaction policies\n                    this.player.muted(false)\n                    this.muted = false\n                })\n            }\n        },\n\n\n// load video from different types of sources:\n// Url\n// YouTube\n// EmbedCode\n// Mist\n// File\n        loadNewSourceFromYouTube(source) {\n            this.videoIsYoutube = true\n            useChannelStore().clearChannel()\n            let videoJs = videojs('aux-player')\n            this.videoSource = source\n            this.videoSourceType = 'video/youtube'\n            videoJs.src({'src': this.videoSource, 'type': this.videoSourceType})\n            videoJs.controls(false)\n            this.unMute()\n            this.paused = false\n        },\n        loadNewLiveSourceFromRumble(source) {\n            this.videoIsYoutube = true\n            useChannelStore().clearChannel()\n            let videoJs = videojs('aux-player')\n            this.videoSource = source\n            this.videoSourceType = 'application/x-mpegURL'\n            videoJs.src({'src': this.videoSource, 'type': this.videoSourceType})\n            videoJs.controls(false)\n            this.unMute()\n            this.paused = false\n        },\n        loadNewSourceFromUrl(source) {\n            try {\n                this.videoIsYoutube = false;\n                useChannelStore().clearChannel();\n                let videoJs = videojs('aux-player');\n\n                if (!source.video_url || !source.type) {\n                    useNotificationStore().setGeneralServiceNotification('Error', 'Invalid video source.')\n                    throw new Error(\"Invalid video source.\");\n                }\n\n                this.videoSource = source.video_url;\n                this.videoSourceType = source.type;\n                videoJs.src({'src': source.video_url, 'type': source.type});\n\n                this.unMute();\n                this.paused = false;\n            } catch (error) {\n                useNotificationStore().setGeneralServiceNotification('Error', 'Failed to load new source: ' + error)\n                console.error(\"Failed to load new source:\", error);\n                throw error; // Re-throw the error to be caught by the caller\n            }\n        },\n        loadNewSourceFromMist(source) {\n            this.videoIsYoutube = false\n            let videoJs = videojs('aux-player')\n            let filePath = 'https://mist.not.tv/hls/'\n            this.videoSource = filePath + source + '/index.m3u8'\n            this.videoSourceType = 'application/x-mpegURL'\n            videoJs.src({'src': this.videoSource, 'type': this.videoSourceType})\n            this.unMute()\n            this.paused = false\n        },\n        loadNewSourceFromFile(source) {\n            this.videoIsYoutube = false\n            useChannelStore().clearChannel()\n            let videoJs = videojs('aux-player')\n            let filePath = source.cdn_endpoint + source.cloud_folder + source.folder + '/'\n            this.videoSource = source.file_name\n            this.videoSourceType = source.type\n            videoJs.src({'src': filePath + this.videoSource, 'type': this.videoSourceType})\n            this.unMute()\n            this.paused = false\n        },\n\n        // The new load video functions (2024-02-09 tec21 and ChatGPT)\n        loadExternalSourceVideo() {\n\n        },\n        loadPlaylistVideos() {\n\n        },\n        async loadMistStreamVideo(mistStream, stayMuted) {\n            let shouldUnmute = true\n            if(stayMuted) {\n                shouldUnmute = false\n            };\n            // console.log('Loading Mist Stream Video for:', mistStream.name); // Log which Mist Stream is being loaded\n            // This mistServerUri comes from appSettings\n            if (!this.mistServerUri) {\n                console.log('Mist Server URI not set, fetching...') // Log fetching attempt\n                await this.getMistServerUri()\n            }\n            if (this.mistServerUri) {\n                // console.log('Mist Server URI:', this.mistServerUri); // Log the URI to confirm it's fetched\n                let basePath = this.mistServerUri\n                this.videoSource = basePath + 'hls/' + mistStream.name + '/index.m3u8'\n                // console.log('Video Source Set To:', this.videoSource); // Log the final video source\n\n                this.videoSourceType = 'application/vnd.apple.mpegURL'\n                // console.log('Setting player source to:', this.videoSource, 'of type:', this.videoSourceType); // Log the source setting\n                let videoJs = videojs('aux-player')\n                videoJs.src({'src': this.videoSource, 'type': this.videoSourceType})\n                if (shouldUnmute) {\n                    this.unMute()\n                }\n                this.paused = false\n            } else {\n                console.error('Mist Server URI is still not set after fetching.')\n            }\n            // let basePath = this.mistServerUri\n            // this.videoSource = basePath + 'hls/' + mistStream.name + '/index.m3u8'\n            // this.videoSourceType = \"application/vnd.apple.mpegURL\"\n            // this.player.src({'src': this.videoSource, 'type': this.videoSourceType})\n            // this.unMute()\n            // this.paused = false\n        },\n        async loadVideoFromFile(video) {\n            // console.log('Loading Mist Stream Video for:', mistStream.name); // Log which Mist Stream is being loaded\n            // This mistServerUri comes from appSettings\n            // if (!this.mistServerUri) {\n            //     console.log('Mist Server URI not set, fetching...') // Log fetching attempt\n            //     await this.getMistServerUri()\n            // }\n            // if (this.mistServerUri) {\n                // console.log('Mist Server URI:', this.mistServerUri); // Log the URI to confirm it's fetched\n                // let basePath = this.mistServerUri\n                // this.videoSource = basePath + 'hls/' + video.name + '/index.m3u8'\n                // console.log('Video Source Set To:', this.videoSource); // Log the final video source\n\n            // this.videoSourceType = 'video/mp4'\n            console.log('Video Source Type:', video.type);\n            console.log('Video URL:', video.video_url);\n            console.log('CDN Endpoint:', video.cdn_endpoint);\n            console.log('Cloud Folder:', video.cloud_folder);\n            console.log('Folder:', video.folder);\n            console.log('File Name:', video.file_name);\n\n            let videoSource = video.cdn_endpoint + video.cloud_folder + video.folder + '/' + video.file_name\n                // console.log('Setting player source to:', this.videoSource, 'of type:', this.videoSourceType); // Log the source setting\n                let videoJs = videojs('aux-player')\n                videoJs.src({'src': videoSource, 'type': video.type})\n                this.unMute()\n                this.paused = false\n            // } else {\n            //     console.error('Mist Server URI is still not set after fetching.')\n            // }\n            // let basePath = this.mistServerUri\n            // this.videoSource = basePath + 'hls/' + mistStream.name + '/index.m3u8'\n            // this.videoSourceType = \"application/vnd.apple.mpegURL\"\n            // this.player.src({'src': this.videoSource, 'type': this.videoSourceType})\n            // this.unMute()\n            // this.paused = false\n        },\n\n\n        setNowPlayingInfoVideoFile(source) {\n            this.nowPlayingType = 'Video File'\n            this.nowPlayingName = source.file_name\n            useStreamStore().currentChannel = 'On Demand'\n        },\n        setNowPlayingInfoShow(show, episode) {\n            this.clearNowPlayingInfo()\n            const showStore = useShowStore()\n\n            if (show.firstPlayVideo) {\n                showStore.setName(show.firstPlayVideo.name)\n                showStore.setEpisodeUrl(`/shows/${show.slug}/episode/${source.firstPlayVideo.slug}`)\n            } else if (episode) {\n                showStore.setName(show.name)\n                showStore.setUrl(`/shows/${show.slug}`)\n                showStore.setEpisodeName(episode.name)\n                showStore.setEpisodeUrl(`/shows/${show.slug}/episode/${episode.slug}`)\n            } else {\n                showStore.setName(show.name)\n                showStore.setUrl(`/shows/${show.slug}`)\n            }\n        },\n// change video size/position and page layout\n        makeVideoPiP() {\n            // const appSettingStore = useAppSettingStore();\n            // const userStore = useUserStore();\n            //\n            // if (userStore.isMobile) {\n            //     let videoJs = videojs('aux-player')\n            //     videoJs.controls(false)\n            //     if(this.fullPage) {\n            //         this.class = 'pipVideoClassFullPage'\n            //         this.videoContainerClass = 'pipVideoContainerFullPage'\n            //     } else {\n            //         this.class = 'pipVideoClassTopRight'\n            //         this.videoContainerClass = 'pipVideoContainerTopRight'\n            //     }\n            //     appSettingStore.togglePipChatMode()\n            // }\n        },\n        makeVideoFullPage() {\n            const appSettingStore = useAppSettingStore()\n            const userStore = useUserStore()\n\n            // this.fullPage = true; // to be deleted and replaced by appSettingStore.fullPage\n            appSettingStore.fullPage = true\n            // userStore.hidePage = true // to be deleted and replaced by appSettingStore.hidePage\n            appSettingStore.hidePage = true\n            appSettingStore.ott = 0\n\n            this.videoContainerClass = 'fullPageVideoContainer'\n            this.class = 'fullPageVideoClass'\n            this.controls = !userStore.isMobile\n        },\n        makeVideoTopRight() {\n            const appSettingStore = useAppSettingStore()\n\n            // this.fullPage = false // to be deleted and replaced by appSettingStore.fullPage\n            appSettingStore.fullPage = false\n            // userStore.hidePage = false // to be deleted and replaced by appSettingStore.hidePage\n            appSettingStore.hidePage = false\n            // this.currentPageIsStream = false // to be deleted and replaced by appSettingStore.currentPageIsStream\n            appSettingStore.currentPageIsStream = false\n\n            this.videoContainerClass = 'topRightVideoContainer'\n            this.class = 'topRightVideoClass'\n            this.controls = false\n        },\n        makeVideoWelcomePage() {\n            const appSettingStore = useAppSettingStore()\n            this.videoContainerClass = 'welcomeVideoContainer'\n            this.class = 'welcomeVideoClass'\n            appSettingStore.loggedIn = false\n            appSettingStore.fullPage = true\n            appSettingStore.hidePage = false\n        },\n        setMistServerUri(mistServerUri) {\n            this.mistServerUri = mistServerUri\n        }\n\n\n    },\n\n    getters: {},\n})\n","import { onBeforeMount, onMounted, watch } from 'vue'\nimport { useUserStore } from \"@/Stores/UserStore\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useVideoPlayerStore } from \"@/Stores/VideoPlayerStore\"\nimport { router } from '@inertiajs/vue3'\n\nexport function usePageSetup(pageName) {\n    const userStore = useUserStore()\n    const appSettingStore = useAppSettingStore()\n    const videoPlayerStore = useVideoPlayerStore()\n\n    appSettingStore.currentPage = pageName\n    appSettingStore.showFlashMessage = true\n    appSettingStore.pageIsHidden = false\n\n// PageSetup utility\n    if (userStore.isMobile || window.innerWidth < 1024) {\n        appSettingStore.ott = 0; // Close all panels on mobile devices\n    } else if (appSettingStore.fullPage) {\n        appSettingStore.ott = 0; // Default to closed in fullPage mode\n    } else {\n        if (appSettingStore.ott === 0) {\n            appSettingStore.ott = 4\n        }\n        // appSettingStore.ott = 4; // Open OttChat by default on larger screens\n        appSettingStore.showOttButtons = true;\n    }\n\n    videoPlayerStore.makeVideoTopRight()\n\n    if (appSettingStore.pageReload) {\n        appSettingStore.pageReload = false\n        appSettingStore.pageWasReloaded = true\n        window.location.reload();\n    }\n    // Check if the URL contains query strings\n\n\n    // Only scroll into view if there are no query strings\n\n        // const topDiv = document.getElementById(\"topDiv\")\n        // if (topDiv) {\n        //     topDiv.scrollIntoView()\n        // }\n        router.on('navigate', (event) => {\n            // Ensure OTT panels do not open automatically on mobile devices\n            if (userStore.isMobile || window.innerWidth < 1024 || appSettingStore.fullPage) {\n                appSettingStore.ott = 0; // Close all panels on mobile devices\n            } else {\n                if (appSettingStore.ott === 0) {\n                    appSettingStore.ott = 4\n                }\n                // appSettingStore.ott = 0; // Default to closed on larger screens\n            }\n            const hasQueryStrings = window.location.search !== '';\n            if (!hasQueryStrings || appSettingStore.shouldScrollToTop) {\n                requestAnimationFrame(() => {\n                    const topDiv = document.getElementById(\"topDiv\");\n                    if (topDiv) {\n                        topDiv.scrollIntoView({behavior: 'auto'});\n                    } else {\n                        window.scrollTo(0, 0);\n                    }\n                });\n            }\n            appSettingStore.shouldScrollToTop = false;\n        })\n    // Only update if we're not already on this page to avoid overwriting with the current URL\n    appSettingStore.setPrevUrl()\n    appSettingStore.showOttButtons = true\n    appSettingStore.noLayout = false\n\n    // router.reload()\n\n    watch(\n        () => appSettingStore.isSmallScreen,\n        (newValue) => {\n            if (newValue) {\n                appSettingStore.ott = 0;\n            } else {\n                appSettingStore.ott = 4;\n            }\n        },\n        { immediate: true } // This option ensures the watch executes immediately with the current value\n    );\n\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".copy-message{background-color:#000000bf;border-radius:10px;bottom:50%;color:#fff;font-size:1.5rem;left:50%;padding:20px;position:fixed;transform:translateX(-50%);z-index:100}.copy-message,.fade-enter-active,.fade-leave-active{transition:opacity .5s ease}.fade-enter-from,.fade-leave-to{opacity:0}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/Components/Pages/ShowRecordings/RecordingsListBody.vue\"],\"names\":[],\"mappings\":\"AAwGA,cAKE,0BAAqC,CAGrC,kBAAmB,CANnB,UAAW,CAIX,UAAY,CAGZ,gBAAiB,CANjB,QAAS,CAIT,YAAa,CANb,cAAe,CAGf,0BAA2B,CAM3B,WAEF,CAEA,oDAHE,2BAKF,CAEA,gCACE,SACF\",\"sourcesContent\":[\"<template>\\n  <tbody class=\\\"bg-white divide-y divide-gray-200\\\">\\n  <tr v-for=\\\"recording in recordings\\\" :key=\\\"recording.id\\\"\\n      @mouseover=\\\"state.hoveredRow = recording.id\\\"\\n      @mouseleave=\\\"state.hoveredRow = null\\\"\\n      @click=\\\"selectRecording(recording)\\\"\\n      :class=\\\"rowClass(recording.id)\\\">\\n    <td class=\\\"px-6 py-4 whitespace-nowrap\\\">\\n      <div>{{ recording?.meta?.title }}</div>\\n      <div>{{ recording.start_date_local }}</div>\\n      <div v-if=\\\"recording.comment\\\" class=\\\"text-xs uppercase text-orange-700 font-semibold break-words\\\">\\n        <span :class=\\\"{ 'text-indigo-600': recording.comment !== 'automated recording' }\\\">{{ recording.comment }}</span>\\n      </div>\\n    </td>\\n    <td class=\\\"px-6 py-4 whitespace-nowrap\\\">\\n      {{ recording.start_time_local }}\\n    </td>\\n    <td class=\\\"px-6 py-4 whitespace-nowrap\\\">\\n      {{ recording.end_time_local }}\\n    </td>\\n    <td class=\\\"px-6 py-4 whitespace-nowrap\\\">\\n      {{ formatDuration(recording.total_milliseconds_recorded) }}\\n    </td>\\n    <td class=\\\"px-6 py-4 whitespace-nowrap\\\">\\n      <span v-if=\\\"recording.meta?.good\\\" class=\\\"bg-green-500 text-white rounded-full p-1 text-xs\\\">✔️</span>\\n      <span v-if=\\\"recording.meta?.ng\\\" class=\\\"bg-orange-500 text-white rounded-full p-1 text-xs\\\">❌</span>\\n    </td>\\n    <td class=\\\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium space-x-1\\\">\\n      <button @click.stop=\\\"shareRecording(recording.share_url)\\\"\\n              class=\\\"btn btn-xs bg-orange-200 hover:bg-orange-300 text-black\\\">\\n        <font-awesome-icon icon=\\\"fa-share\\\" class=\\\"\\\"/> Share\\n      </button>\\n      <button @click.stop=\\\"confirmAddToEpisode\\\"\\n              class=\\\"btn btn-xs\\\">Add To Episode</button>\\n      <button @click.stop=\\\"confirmDownload(recording)\\\"\\n              class=\\\"btn btn-xs btn-info\\\">Download</button>\\n      <div @click.stop=\\\"confirmSaveToPremium\\\" class=\\\"btn btn-xs\\\">Save to Premium Storage</div>\\n      <transition name=\\\"fade\\\">\\n        <div v-if=\\\"state.showCopyMessage\\\" class=\\\"copy-message\\\">\\n          {{ state.copyMessage }}\\n        </div>\\n      </transition>\\n    </td>\\n  </tr>\\n  </tbody>\\n</template>\\n\\n<script setup>\\nimport { computed, reactive, ref } from 'vue'\\nimport { useRecordingStore } from '@/Stores/RecordingStore';\\n\\nconst recordingStore = useRecordingStore();\\nconst emit = defineEmits(['select-recording']);\\n\\nconst state = reactive({\\n  hoveredRow: null,\\n  showCopyMessage: false,\\n  copyMessage: '',\\n});\\n\\nconst recordings = computed(() => recordingStore.formattedRecordings);\\n\\nconst selectRecording = (recording) => {\\n  recordingStore.setSelectedRecording(recording);\\n  emit('select-recording');\\n};\\n\\nconst shareRecording = (shareUrl) => {\\n  navigator.clipboard.writeText(shareUrl).then(() => {\\n    state.copyMessage = 'Video share URL copied!';\\n    state.showCopyMessage = true;\\n    setTimeout(() => {\\n      state.showCopyMessage = false;\\n    }, 1000); // Hide after 1 second\\n  }).catch(err => {\\n    console.error('Failed to copy: ', err);\\n  });\\n};\\n\\nconst confirmAddToEpisode = () => {\\n  document.getElementById('confirmAddToEpisodeModal').showModal();\\n};\\n\\nconst confirmDownload = (recording) => {\\n  recordingStore.setSelectedRecording(recording);\\n  document.getElementById('confirmDownloadModal').showModal();\\n};\\n\\nconst confirmSaveToPremium = () => {\\n  document.getElementById('confirmSaveToPremiumModal').showModal();\\n};\\n\\nconst rowClass = computed(() => (recordingId) => ({\\n  'hover:bg-blue-100 cursor-pointer': state.hoveredRow === recordingId,\\n  'bg-gray-200': recordingStore.selectedRecording?.id === recordingId,\\n  'bg-green-100': recordingStore.nowPlayingRecordingId === recordingId,\\n}));\\n\\nconst formatDuration = (totalMilliseconds) => {\\n  return recordingStore.formatDuration(totalMilliseconds);\\n};\\n</script>\\n\\n<style>\\n.copy-message {\\n  position: fixed;\\n  bottom: 50%;\\n  left: 50%;\\n  transform: translateX(-50%);\\n  background-color: rgba(0, 0, 0, 0.75);\\n  color: white;\\n  padding: 20px;\\n  border-radius: 10px;\\n  font-size: 1.5rem;\\n  z-index: 100;\\n  transition: opacity 0.5s ease;\\n}\\n\\n.fade-enter-active, .fade-leave-active {\\n  transition: opacity 0.5s ease;\\n}\\n\\n.fade-enter-from, .fade-leave-to {\\n  opacity: 0;\\n}\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".join[data-v-7ac11629]{display:flex;gap:4px;justify-content:center}.btn[data-v-7ac11629]{transition:background-color .3s ease}.btn[data-v-7ac11629]:hover{background-color:tomato}.btn-active[data-v-7ac11629]{background-color:coral}@media (prefers-color-scheme:dark){.btn[data-v-7ac11629]{background-color:#333;color:#fff}.btn[data-v-7ac11629]:hover{background-color:#555}.btn-active[data-v-7ac11629]{background-color:coral}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/Components/Pages/ShowRecordings/RecordingsPaginator.vue\"],\"names\":[],\"mappings\":\"AAiCA,uBACE,YAAa,CAEb,OAAQ,CADR,sBAEF,CAEA,sBACE,oCACF,CAGA,4BACE,uBACF,CAEA,6BACE,sBACF,CAGA,mCACE,sBAEE,qBAAyB,CADzB,UAEF,CAEA,4BACE,qBACF,CAEA,6BACE,sBACF,CACF\",\"sourcesContent\":[\"<template>\\n  <div v-if=\\\"totalPages > 1\\\" class=\\\"join\\\">\\n    <button\\n        v-for=\\\"page in totalPages\\\"\\n        :key=\\\"page\\\"\\n        :class=\\\"['join-item', 'btn', { 'btn-active': currentPage === page }]\\\"\\n        @click=\\\"goToPage(page)\\\"\\n    >\\n      {{ page }}\\n    </button>\\n  </div>\\n</template>\\n\\n<script setup>\\nconst props = defineProps({\\n  totalPages: {\\n    type: Number,\\n    required: true,\\n  },\\n  currentPage: {\\n    type: Number,\\n    required: true,\\n  },\\n});\\n\\nconst emit = defineEmits(['update']);\\n\\nconst goToPage = (page) => {\\n  emit('update', page);\\n};\\n</script>\\n\\n<style scoped>\\n.join {\\n  display: flex;\\n  justify-content: center;\\n  gap: 4px;\\n}\\n\\n.btn {\\n  transition: background-color 0.3s ease;\\n}\\n\\n/* Default hover effect */\\n.btn:hover {\\n  background-color: #ff6347; /* Example hover color */\\n}\\n\\n.btn-active {\\n  background-color: #ff7f50; /* Active color in dark mode */\\n}\\n\\n/* Dark mode styles */\\n@media (prefers-color-scheme: dark) {\\n  .btn {\\n    color: #ffffff;\\n    background-color: #333333;\\n  }\\n\\n  .btn:hover {\\n    background-color: #555555; /* Example dark mode hover color */\\n  }\\n\\n  .btn-active {\\n    background-color: #ff7f50; /* Active color in dark mode */\\n  }\\n}\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".grid[data-v-20187ebd]{display:grid;grid-template-columns:1fr}@media (min-width:768px){.grid[data-v-20187ebd]{grid-template-columns:4rem 1fr 1fr 1fr 1fr}}.min-w-16[data-v-20187ebd]{min-width:4rem}.max-w-16[data-v-20187ebd]{max-width:4rem}.max-h-16[data-v-20187ebd]{max-height:4rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/Components/Pages/Shows/Elements/ManageShowEpisode.vue\"],\"names\":[],\"mappings\":\"AAqJA,uBACE,YAAa,CACb,yBACF,CAEA,yBACE,uBACE,0CACF,CACF,CAEA,2BACE,cACF,CAEA,2BACE,cACF,CAEA,2BACE,eACF\",\"sourcesContent\":[\"<template>\\n  <div v-if=\\\"showStore.episodeIsBeingDeleted !== episode.id\\\" class=\\\"bg-gray-50 grid grid-cols-1 md:grid-cols-5 gap-4 p-4 mb-4 rounded-lg shadow\\\">\\n    <div class=\\\"flex items-center text-sm w-16\\\">\\n      <div v-if=\\\"!episode.episodeNumber\\\">{{ episode.id }}</div>\\n      <div v-else>{{ episode.episodeNumber }}</div>\\n    </div>\\n    <div @click=\\\"router.visit(`/shows/${showSlug}/episode/${episode.slug}/manage`)\\\" class=\\\"hover:cursor-pointer flex items-center space-x-2\\\">\\n      <SingleImage :image=\\\"episode.image\\\" :alt=\\\"episode.name\\\" class=\\\"rounded-xl min-w-16 w-16 h-16 object-cover\\\" />\\n      <span class=\\\"hover:text-blue-600 font-semibold dark:text-blue-400 dark:hover:text-blue-200\\\">\\n        {{ episode.name }}\\n      </span>\\n    </div>\\n    <div class=\\\"light:text-gray-600 dark:text-gray-100 text-sm flex justify-center items-center\\\">\\n      <span v-if=\\\"!episode.notes\\\" v-show=\\\"showStore.noteEdit !== episode.id\\\" class=\\\"italic\\\" @click=\\\"editNote\\\">Click here to add/edit a note.</span>\\n      <span v-if=\\\"episode.notes\\\" v-show=\\\"showStore.noteEdit !== episode.id\\\" :key=\\\"componentKey\\\" @click=\\\"editNote\\\">{{ episode.notes }}</span>\\n      <div v-if=\\\"showStore.noteEdit === episode.id\\\">\\n        <EpisodeNoteEdit :episode=\\\"episode\\\" @saveNoteProcessing=\\\"reloadNote\\\" />\\n        <div v-if=\\\"showStore.saveNoteProcessing\\\">Saving...</div>\\n      </div>\\n    </div>\\n    <div class=\\\"text-right\\\">\\n      <div class=\\\"dropdown dropdown-left\\\">\\n        <ManageShowEpisodeStatuses\\n            :episodeStatus=\\\"episode.episodeStatus\\\"\\n            :episodeStatusId=\\\"episode.episodeStatusId\\\"\\n            :episodeStatuses=\\\"episodeStatuses\\\"\\n            :episodeId=\\\"episode.id\\\"\\n            :episodeUlid=\\\"episode.ulid\\\"\\n            :episodeName=\\\"episode.name\\\"\\n            :episodeSlug=\\\"episode.slug\\\"\\n            :showSlug=\\\"showSlug\\\"\\n            :showName=\\\"showName\\\"\\n            :scheduledDateTime=\\\"episode.scheduledReleaseDateTime\\\"\\n        />\\n      </div>\\n      <div v-if=\\\"episode.episodeStatusId === 6\\\">\\n        Scheduled for: <br />\\n        {{ scheduledReleaseDateTime }}\\n      </div>\\n      <div v-if=\\\"episode.episodeStatusId === 7\\\">\\n        Released on: <br/>\\n        {{ releaseDateTime }}\\n      </div>\\n    </div>\\n    <div class=\\\"flex flex-row justify-end items-center\\\">\\n      <button\\n          v-if=\\\"teamStore.can.editShow\\\"\\n          @click=\\\"appSettingStore.btnRedirect(`/shows/${showSlug}/episode/${episode.slug}/edit`)\\\"\\n          class=\\\"px-2 py-2 text-white font-semibold bg-blue-500 hover:bg-blue-600 rounded-lg mr-2 w-16 h-10\\\"\\n      >\\n        Edit\\n      </button>\\n      <button\\n          v-if=\\\"teamStore.can.manageShow && !episode.isPublished\\\"\\n          @click=\\\"deleteShowEpisode\\\"\\n          class=\\\"px-2 py-2 text-white font-semibold bg-red-500 hover:bg-red-600 rounded-lg w-10 h-10\\\"\\n      >\\n        <font-awesome-icon icon=\\\"fa-trash-can\\\" />\\n      </button>\\n    </div>\\n  </div>\\n  <div v-else class=\\\"w-full text-center p-4\\\">\\n    <span class=\\\"loading loading-infinity loading-lg\\\"></span>\\n    <span class=\\\"ml-3\\\">The episode is being deleted...</span>\\n  </div>\\n</template>\\n\\n<script setup>\\nimport { router } from '@inertiajs/vue3';\\nimport { useForm } from \\\"@inertiajs/vue3\\\";\\nimport { ref } from \\\"vue\\\";\\nimport { useAppSettingStore } from \\\"@/Stores/AppSettingStore\\\";\\nimport { useTeamStore } from \\\"@/Stores/TeamStore\\\";\\nimport { useShowStore } from \\\"@/Stores/ShowStore\\\";\\nimport { useUserStore } from \\\"@/Stores/UserStore\\\";\\nimport { FontAwesomeIcon } from \\\"@fortawesome/vue-fontawesome\\\";\\nimport ManageShowEpisodeStatuses from \\\"@/Components/Pages/Shows/Elements/ManageShowEpisodesStatuses\\\";\\nimport EpisodeNoteEdit from \\\"@/Components/Pages/Shows/Elements/ManageEpisodeEditNote\\\";\\nimport SingleImage from '@/Components/Global/Multimedia/SingleImage.vue';\\n\\nconst appSettingStore = useAppSettingStore();\\nconst teamStore = useTeamStore();\\nconst showStore = useShowStore();\\nconst userStore = useUserStore();\\n\\nconst props = defineProps({\\n  episode: Object,\\n  episodeStatuses: Object,\\n  showSlug: String,\\n  showName: String,\\n});\\n\\nconst showEpisodeStatuses = ref(false);\\nconst releaseDateTime = userStore.formatLongDateTimeFromUtcToUserTimezone(props.episode.releaseDateTime);\\nconst scheduledReleaseDateTime = userStore.formatDateInUserTimezone(props.episode.scheduledReleaseDateTime, 'ddd DD MMM YYYY, hh:mm A' + ' ' + userStore.timezoneAbbreviation);\\n\\nshowStore.noteEdit = 0;\\nconst componentKey = ref(0);\\n\\nfunction reloadNote() {\\n  props.episode.notes = showStore.notes;\\n  componentKey.value += 1;\\n}\\n\\nlet form = useForm({\\n  note: '',\\n});\\n\\nfunction editNote() {\\n  showStore.noteEdit = props.episode.id;\\n}\\n\\nfunction openEpisodeStatuses() {\\n  document.getElementById('episodeStatuses').showModal();\\n}\\n\\nconst deleteShowEpisode = async () => {\\n  const confirmation = confirm('Are you sure you want to delete this show episode?');\\n\\n  if (confirmation) {\\n    try {\\n      showStore.episodeIsBeingDeleted = props.episode.id;\\n      await axios.delete(`/shows/${props.showSlug}/episode/${props.episode.slug}`)\\n          .then((response) => {\\n            if (response.status === 200) {\\n              showStore.errorMessage = response.data.message;\\n              router.reload();\\n              showStore.episodeIsBeingDeleted = 0;\\n            } else {\\n              showStore.errorMessage = response.statusText;\\n              console.error('Delete request failed:', response.statusText);\\n              showStore.episodeIsBeingDeleted = 0;\\n              router.reload();\\n            }\\n          })\\n          .catch((error) => {\\n            console.error('Error deleting show episode:', error);\\n            showStore.errorMessage = error;\\n            showStore.episodeIsBeingDeleted = 0;\\n            router.reload();\\n          });\\n    } catch (error) {\\n      console.error('Error deleting show episode:', error);\\n    }\\n  }\\n};\\n</script>\\n\\n<style scoped>\\n.grid {\\n  display: grid;\\n  grid-template-columns: 1fr;\\n}\\n\\n@media (min-width: 768px) {\\n  .grid {\\n    grid-template-columns: 4rem 1fr 1fr 1fr 1fr;\\n  }\\n}\\n\\n.min-w-16 {\\n  min-width: 4rem;\\n}\\n\\n.max-w-16 {\\n  max-width: 4rem;\\n}\\n\\n.max-h-16 {\\n  max-height: 4rem;\\n}\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"@keyframes wave-bg-634399d8{0%,to{background-color:#dbeafe}50%{background-color:#bfdbfe}}.wave-background[data-v-634399d8]{animation:wave-bg-634399d8 5s ease-in-out infinite;background-color:#dbeafe}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/Pages/Shows/{$id}/Manage.vue\"],\"names\":[],\"mappings\":\"AAsSA,4BACE,MACE,wBACF,CACA,IACE,wBACF,CACF,CAEA,kCACE,kDAA0C,CAC1C,wBACF\",\"sourcesContent\":[\"<template>\\n\\n  <Head :title=\\\"`Manage Show: ${props.show.name}`\\\"/>\\n\\n  <div id=\\\"topDiv\\\" class=\\\"place-self-center flex flex-col\\\">\\n    <div class=\\\"min-h-screen bg-white text-black dark:bg-gray-900 dark:text-gray-50 rounded px-5\\\">\\n\\n      <Message v-if=\\\"appSettingStore.showFlashMessage\\\" :flash=\\\"$page.props.flash\\\"/>\\n      <div class=\\\"alert alert-error mt-4 mx-3\\\"\\n           v-if=\\\"showStore.errorMessage\\\">\\n        <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" class=\\\"stroke-current shrink-0 h-6 w-6\\\" fill=\\\"none\\\" viewBox=\\\"0 0 24 24\\\">\\n          <path stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" stroke-width=\\\"2\\\"\\n                d=\\\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\\\"/>\\n        </svg>\\n        <span>{{ showStore.errorMessage }}</span>\\n        <button class=\\\"text-xs ml-12\\\" @click=\\\"showStore.errorMessage = ''\\\"> Close</button>\\n      </div>\\n\\n      <header class=\\\"bg-gradient-to-r from-blue-100 via-white to-transparent p-4 text-black font-bold rounded-lg\\\">\\n        <!--            <header class=\\\"wave-background p-4 text-black font-bold rounded-lg\\\">-->\\n\\n        <div class=\\\"flex justify-between mb-3 pt-6\\\">\\n          <div class=\\\"font-bold mb-4 text-black align-bottom text-lg\\\">MANAGE SHOW</div>\\n\\n          <div class=\\\"flex flex-col\\\">\\n            <div class=\\\"flex flex-row w-full justify-end mb-2\\\">\\n              <button\\n                  @click=\\\"appSettingStore.btnRedirect(`/teams/${team.slug}/manage`)\\\"\\n                  class=\\\"px-4 py-2 mr-2 mb-2 h-fit text-white font-semibold bg-orange-500 hover:bg-orange-600 rounded-lg\\\"\\n              >\\n                <font-awesome-icon :icon=\\\"['fas', 'users-cog']\\\" class=\\\"hover:text-blue-800 mr-1\\\" /> Manage Team\\n              </button>\\n            </div>\\n            <div class=\\\"flex flex-wrap-reverse justify-end gap-2\\\">\\n              <button\\n                  v-if=\\\"can.goLive\\\"\\n                  @click=\\\"goLive\\\"\\n                  class=\\\"px-4 py-2 h-fit text-white font-semibold bg-red-500 hover:bg-red-600 rounded-lg\\\"\\n              >\\n                <font-awesome-icon :icon=\\\"['fas', 'broadcast-tower']\\\" class=\\\"hover:text-blue-800 mr-1\\\" /> Go Live\\n              </button>\\n              <button\\n                  @click=\\\"appSettingStore.btnRedirect(`/shows/${show.slug}`)\\\"\\n                  class=\\\"px-4 py-2 h-fit text-white font-semibold bg-blue-500 hover:bg-blue-600 rounded-lg\\\"\\n              >\\n                <font-awesome-icon :icon=\\\"['fas', 'eye']\\\" class=\\\"hover:text-blue-800 mr-1\\\" /> View Show\\n              </button>\\n              <button\\n                  v-if=\\\"teamStore.can.editShow\\\"\\n                  @click=\\\"appSettingStore.btnRedirect(`/shows/${show.slug}/edit`)\\\"\\n                  class=\\\"px-4 py-2 h-fit text-white font-semibold bg-blue-500 hover:bg-blue-600 rounded-lg\\\"\\n              >\\n                <font-awesome-icon :icon=\\\"['fas', 'pen']\\\" class=\\\"hover:text-blue-800 mr-1\\\" /> Edit Show\\n              </button>\\n\\n              <DashboardButton class=\\\"\\\"/>\\n\\n            </div>\\n          </div>\\n\\n        </div>\\n\\n        <ShowManageHeader\\n            :show=\\\"props.show\\\"\\n            :team=\\\"props.team\\\"\\n            :can=\\\"can\\\"\\n        />\\n\\n        <div class=\\\"flex justify-end mt-6\\\">\\n\\n\\n        </div>\\n      </header>\\n\\n      <div class=\\\"my-6 text-gray-100\\\">\\n        <span class=\\\"uppercase text-xs font-semibold text-black\\\">SHOW NOTES: </span>\\n        <span class=\\\"text-black light:text-black dark:text-white\\\">{{ props.show.notes }}</span>\\n      </div>\\n\\n\\n      <div class=\\\"flex flex-col\\\">\\n        <div class=\\\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\\\">\\n          <div class=\\\"py-2 align-middle inline-block w-full sm:px-6 lg:px-8 space-y-4\\\">\\n\\n            <div @click=\\\"toggleComponent('showEpisodes')\\\"\\n                 :class=\\\"{'rounded-t-lg': showStore.openComponent === 'showEpisodes', 'rounded-lg': showStore.openComponent !== 'showEpisodes'}\\\"\\n                 class=\\\"accordion-header p-2 font-bold transition duration-300 ease-in-out transform focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 overflow-hidden shadow-lg bg-blue-100 hover:bg-blue-300 dark:hover:bg-blue-900 text-black hover:text-blue-900 dark:text-blue-100 dark:hover:text-white\\\">\\n              <font-awesome-icon icon=\\\"fa-play-circle\\\" class=\\\"\\\"/>\\n              Episodes\\n            </div>\\n            <div v-if=\\\"showStore.openComponent === 'showEpisodes'\\\">\\n              <div class=\\\"mt-4 mb-12 pb-6 shadow overflow-auto border-b border-gray-200 sm:rounded-lg\\\">\\n                <ManageShowEpisodesList />\\n              </div>\\n            </div>\\n\\n            <div @click=\\\"toggleComponent('showCredits')\\\"\\n                 :class=\\\"{'rounded-t-lg': showStore.openComponent === 'showCredits', 'rounded-lg': showStore.openComponent !== 'showCredits'}\\\"\\n                 class=\\\"accordion-header p-2 font-bold transition duration-300 ease-in-out transform focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 overflow-auto shadow-lg bg-blue-100 hover:bg-blue-300 dark:hover:bg-blue-900 text-black hover:text-blue-900 dark:text-blue-100 dark:hover:text-white\\\">\\n              <font-awesome-icon icon=\\\"fa-clipboard-list\\\" class=\\\"\\\"/>\\n              Credits and Assignments\\n            </div>\\n            <div v-if=\\\"showStore.openComponent === 'showCredits'\\\">\\n              <div class=\\\"mt-4 mb-12 pb-6 shadow overflow-auto border-b border-gray-200 sm:rounded-lg\\\">\\n                <div class=\\\"border-1 border-t mb-3 bg-blue-100 py-1 px-2 text-xs font-semibold text-red-800\\\">\\n                  In development. Not currently working.\\n                </div>\\n                <Link\\n                    :href=\\\"`#`\\\"\\n                    v-if=\\\"teamStore.can.createAssignment\\\">\\n                  <button\\n                      class=\\\"bg-green-500 hover:bg-green-600 text-white ml-2 my-2 px-4 py-2 rounded disabled:bg-gray-400 h-max w-max\\\"\\n                      disabled\\n                  >Create Assignment\\n                  </button>\\n                </Link>\\n\\n                <ShowCreditsList/>\\n              </div>\\n            </div>\\n\\n            <div @click=\\\"toggleComponent('showRecordings')\\\"\\n                 :class=\\\"{'rounded-t-lg': showStore.openComponent === 'showRecordings', 'rounded-lg': showStore.openComponent !== 'showRecordings'}\\\"\\n                 class=\\\"accordion-header p-2 font-bold transition duration-300 ease-in-out transform focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 overflow-auto shadow-lg bg-blue-100 hover:bg-blue-300 dark:hover:bg-blue-900 text-black hover:text-blue-900 dark:text-blue-100 dark:hover:text-white\\\">\\n              <font-awesome-icon icon=\\\"fa-circle\\\" class=\\\"text-red-700\\\"/>\\n              Recordings\\n            </div>\\n            <div v-if=\\\"showStore.openComponent === 'showRecordings'\\\">\\n              <div class=\\\"mt-4 mb-12 pb-6 shadow overflow-auto border-b border-gray-200 sm:rounded-lg\\\">\\n                <ShowRecordingsList :showRecordings=\\\"show.recordings\\\" :showName=\\\"show.name\\\" :showSlug=\\\"show.slug\\\"\\n                                :showImage=\\\"show.image\\\"/>\\n\\n                <!--            </div>-->\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <ShowFooter :team=\\\"team\\\" :show=\\\"show\\\"/>\\n    </div>\\n  </div>\\n\\n</template>\\n\\n<script setup>\\nimport { onBeforeUnmount, onMounted, onUnmounted, ref } from 'vue'\\nimport { usePage } from '@inertiajs/vue3'\\nimport { usePageSetup } from '@/Utilities/PageSetup'\\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\\nimport { useShowStore } from '@/Stores/ShowStore'\\nimport { useTeamStore } from '@/Stores/TeamStore'\\nimport { useGoLiveStore } from '@/Stores/GoLiveStore'\\nimport ShowManageHeader from '@/Components/Pages/Shows/Layout/ShowManageHeader'\\nimport ShowFooter from '@/Components/Pages/Shows/Layout/ShowFooter'\\nimport ManageShowEpisodesList from '@/Components/Pages/Shows/Elements/ManageShowEpisodesList'\\nimport ShowCreditsList from '@/Components/Pages/Shows/Elements/ManageShowCreditsList'\\nimport Message from '@/Components/Global/Modals/Messages'\\nimport DashboardButton from '@/Components/Global/Buttons/DashboardButton.vue'\\nimport ShowRecordingsList from '@/Components/Pages/ShowRecordings/ShowRecordingsList.vue'\\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome'\\n\\nusePageSetup('shows/slug/manage')\\n\\nconst appSettingStore = useAppSettingStore()\\nconst showStore = useShowStore()\\nconst teamStore = useTeamStore()\\nconst goLiveStore = useGoLiveStore()\\n\\nconst toggleComponent = (componentName) => {\\n  showStore.openComponent = showStore.openComponent === componentName ? null : componentName\\n}\\n\\nconst page = usePage().props\\n\\nconst props = defineProps({\\n  show: Object,\\n  team: Object,\\n  episodes: Object,\\n  episodeStatuses: Object,\\n  // filters: Object,\\n  can: Object,\\n})\\n\\nteamStore.setActiveTeam(props.team)\\nteamStore.setActiveShow(props.show)\\nteamStore.can = props.can\\n\\nconst currentUsers = ref([]);\\n\\nconst goLive = () => {\\n  goLiveStore.reset()\\n  goLiveStore.preSelectedShowId = props.show.id\\n  appSettingStore.btnRedirect(`/golive`)\\n}\\n\\nonMounted(() => {\\n  showStore.initializeShow(props.show, props.episodes, props.episodeStatuses)\\n  console.log(`Subscribing to channel creator.show.${props.show.id}`)\\n\\n  Echo.join(`creator.show.${props.show.id}`)\\n      .here(async (users) => {\\n        console.log('Users currently in the channel:', users)\\n        currentUsers.value = users;\\n        // Elect the leader (first user in the list)\\n        if (users.length > 0) {\\n          const leader = users[0];\\n          showStore.setLeader(leader);\\n          console.log(`Leader elected: ${leader.name}`);\\n        }\\n\\n        console.log(showStore.isUpdatingSchedule, showStore.updatedBy)\\n        // Check if the user is the only one in the channel\\n        if (currentUsers.value.length === 1 && showStore.isUpdatingSchedule && showStore.updatedBy) {\\n          try {\\n            // Reset the isUpdatingSchedule and updatedBy fields\\n            await axios.put(`/api/shows/${props.show.slug}/meta`, {\\n              isUpdatingSchedule: false,\\n              updatedBy: showStore.updatedBy,\\n            });\\n            console.log('isUpdatingSchedule and updatedBy fields reset');\\n\\n          } catch (error) {\\n            console.error('Error updating meta:', error);\\n          }\\n        }\\n      })\\n      .joining((user) => {\\n        console.log('User joined the channel:', user)\\n        currentUsers.value.push(user);\\n      })\\n      .leaving((user) => {\\n        console.log('User left the channel:', user)\\n        currentUsers.value = currentUsers.value.filter(u => u.id !== user.id);\\n\\n        if (user.id === showStore.leader.id) {\\n          console.log('Leader left, electing new leader');\\n          // Elect a new leader if the current leader leaves\\n          if (currentUsers.value.length > 0) {\\n            const newLeader = currentUsers.value[0];\\n            showStore.setLeader(newLeader);\\n            console.log(`New leader elected: ${newLeader.name}`);\\n          }\\n        }\\n        // If current user is still the leader, run the command\\n        if (showStore.leader.id === page.user.id) {\\n          axios.post(`/api/${props.show.slug}/user-left-channel`, {\\n            user: user,\\n            channel: `creator.show.${props.show.id}`,\\n            showSlug: props.show.slug, // Pass the show slug\\n          }).then(response => {\\n            console.log('Successfully posted to user-left-channel:', response.data);\\n          }).catch(error => {\\n            console.error('Error posting to user-left-channel:', error);\\n          });\\n        }\\n      })\\n      .listen('.CreatorContentStatusUpdated', (event) => {\\n        console.log('CreatorContentStatusUpdated event received:', event)\\n        showStore.$patch({\\n          isSaving: event.meta.isSaving,\\n          isUpdatingSchedule: event.meta.isUpdatingSchedule,\\n          updatedBy: event.meta.updatedBy,\\n        })\\n      })\\n      .listen('.ShowScheduleDetailsUpdated', (event) => {\\n        console.log('ShowScheduleDetailsUpdated event received:', event);\\n        // Assuming `start_DateTime` needs to be transformed into `startTime`\\n        const formattedStartTime = event.scheduleDetails.start_DateTime\\n        showStore.scheduleDetails = {\\n          ...event.scheduleDetails,\\n          startTime: formattedStartTime\\n        };\\n        console.log('Updated scheduleDetails.startTime:', showStore.scheduleDetails.startTime);\\n      })\\n      .error((error) => {\\n        console.error('Error subscribing to channel:', error);\\n      });\\n\\n})\\n\\nonBeforeUnmount(() => {\\n  // Echo.leave(`creator.show.${props.show.id}`);\\n  Echo.leave(`creator.show.${props.show.id}`)\\n\\n  showStore.setUpdatingStatus(false, page.user.name, props.show.slug)\\n\\n  console.log(`Unsubscribed from channel creator.show.${props.show.id}`)\\n  showStore.reset()\\n})\\n\\n</script>\\n\\n\\n<style scoped>\\n@keyframes wave-bg {\\n  0%, 100% {\\n    background-color: #dbeafe; /* Original color */\\n  }\\n  50% {\\n    background-color: #bfdbfe; /* Slightly lighter color */\\n  }\\n}\\n\\n.wave-background {\\n  animation: wave-bg 5s infinite ease-in-out;\\n  background-color: #dbeafe; /* Starting color */\\n}\\n\\n\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import script from \"./DashboardButton.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./DashboardButton.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n    <button\n        @click=\"appSettingStore.btnRedirect('/dashboard')\"\n        class=\"bg-black hover:bg-gray-800 text-white font-semibold mt-2 px-4 py-2 rounded-lg disabled:bg-gray-400 h-max w-max\"\n    >\n      <font-awesome-icon :icon=\"['fas', 'tachometer-alt']\" class=\"hover:text-blue-800 mr-1\" /> Dashboard\n    </button>\n  </div>\n</template>\n\n<script setup>\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\n\nconst appSettingStore = useAppSettingStore()\n\n</script>\n","import script from \"./DateTimePicker.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./DateTimePicker.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n    <DatePicker v-model=\"selectedDate\"\n                mode=\"dateTime\"\n                :timezone=\"effectiveTimezone\"\n                :attributes='attrs'\n                :rules=\"rules\"\n    />\n\n  </div>\n</template>\n\n<script setup>\nimport { ref, defineProps, defineEmits, watch, onMounted } from 'vue'\nimport { DatePicker } from 'v-calendar'\nimport 'v-calendar/style.css'\nimport { useUserStore } from '@/Stores/UserStore'\nimport dayjs from 'dayjs'\nimport utc from 'dayjs/plugin/utc'\nimport timezone from 'dayjs/plugin/timezone'\n\nconst userStore = useUserStore()\n\ndayjs.extend(utc)\ndayjs.extend(timezone)\n\nconst props = defineProps({\n  date: null,\n  timezone: String,\n})\n\nconst emits = defineEmits(['date-time-selected'])\n\nconst effectiveTimezone = ref(props.timezone || userStore.timezone)\n\nconst initializeDate = () => {\n  const roundedNow = dayjs().minute(Math.floor(dayjs().minute() / 30) * 30).second(0).format();\n  return props.date\n      ? dayjs(props.date).tz(effectiveTimezone.value).startOf('minute').format('YYYY-MM-DDTHH:mm:ssZ')\n      : dayjs(roundedNow).tz(effectiveTimezone.value).format('YYYY-MM-DDTHH:mm:ssZ');\n};\n\nconst selectedDate = ref(initializeDate())\n\nconst attrs = ref([\n  {\n    key: 'today',\n    dot: true,\n    dates: dayjs().tz(effectiveTimezone.value).format(),\n  },\n])\n\nconst rules = ref({\n  minutes: {interval: 30},\n})\n\n// Watch for changes in selected dateTime and emit it\nwatch(selectedDate, (newDate) => {\n  // Set the timezone without changing the time\n  let convertedNewDate = dayjs(newDate).tz(effectiveTimezone.value, true).format()\n\n  console.log('DateTimePicker watch Selected date: ' + convertedNewDate)\n  emits('date-time-selected', { date: convertedNewDate })\n})\n\n// Watch for changes in the timezone prop and update the effective timezone\nwatch(\n    () => props.timezone,\n    (newTimezone) => {\n      console.log('Timezone prop changed:', newTimezone);\n      effectiveTimezone.value = newTimezone || userStore.timezone;\n      // Update selectedDate to reflect the new timezone\n      selectedDate.value = dayjs(selectedDate.value).tz(effectiveTimezone.value).startOf('minute').format('YYYY-MM-DDTHH:mm:ssZ');\n    }\n);\n\nonMounted(() => {\n  console.log('Effective Timezone on mount: ', effectiveTimezone.value);\n  console.log('onMounted Selected Date: ' + selectedDate.value)\n});\n</script>\n\n","import script from \"./DateTimePickerSelect.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./DateTimePickerSelect.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n    <DatePicker v-model=\"date\" mode=\"dateTime\" :attributes='attrs' :rules=\"rules\" hide-time-header>\n      <template #default=\"{ togglePopover }\">\n        <button\n            class=\"px-3 py-2 bg-blue-500 text-sm text-white font-semibold rounded-md\"\n            @click.prevent=\"togglePopover\"\n        >\n          <slot name=\"buttonName\">Select date</slot>\n        </button>\n      </template>\n      <template #footer>\n        <div class=\"w-full px-4 pb-3\">\n          <button\n              class=\"bg-indigo-600 hover:bg-indigo-700 text-white font-bold w-full px-3 py-1 rounded-md\"\n              @click.prevent=\"clearDate\"\n          >\n            Clear\n          </button>\n        </div>\n      </template>\n    </DatePicker>\n\n  </div>\n</template>\n\n<script setup>\nimport { ref, defineProps, defineEmits, watch } from 'vue'\n\n// import VCalendar from 'v-calendar'\nimport { DatePicker } from 'v-calendar'\nimport 'v-calendar/style.css'\n\nconst props = defineProps({\n  // initialDate: Date,\n  // initialTime: String,\n  inputValue: String,\n  date: String,\n})\n\nconst emits = defineEmits(['date-time-selected'])\n\n// let date = new Date();\n// let date = ref(new Date());\nlet date = ref(props.date)\n\nconst clearDate = () => {\n  attrs.value = null\n  emits('date-time-selected', {date: null})\n}\n\nconst calendar = ref(null)\nconst inputValue = ref(props.inputValue || null)\n\n// Define refs to store selected date and time\n// const selectedDate = ref(props.initialDate || null);\n// const selectedTime = ref(props.initialTime || null);\n\nconst attrs = ref([\n  {\n    key: 'today',\n    highlight: true,\n    dates: new Date(),\n  },\n])\n\nconst rules = ref({\n  minutes: {interval: 30},\n})\n\n// Watch for changes in selected dateTime emit it\nwatch([date], ([newDate]) => {\n  attrs.value = null\n  emits('date-time-selected', {date: newDate})\n})\n</script>\n","import script from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"mx-4 my-4\">\n    <div class=\"alert alert-info mt-4\"\n         v-if=\"props.flash.message\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" class=\"stroke-current shrink-0 w-6 h-6\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n      </svg>\n      <span>{{ props.flash.message }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-success mt-4 mx-3\"\n         v-if=\"props.flash.success\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.success }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-warning mt-4 mx-3\"\n         v-if=\"props.flash.warning\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"/>\n      </svg>\n      <span>{{ props.flash.warning }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-error mt-4 mx-3\"\n         v-if=\"props.flash.error\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.error }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n  </div>\n\n</template>\n\n<script setup>\nimport { router } from '@inertiajs/vue3'\nimport { computed } from \"vue\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\n\nconst appSettingStore = useAppSettingStore()\n\nappSettingStore.showFlashMessage = true\n\nlet props = defineProps({\n  flash: Object,\n\n})\n\nconst messageType = computed(() => ({\n  'text-green-700 bg-green-100 dark:bg-green-200 dark:text-green-800': props.flash.success,\n  'text-blue-700 bg-blue-100 dark:bg-blue-200 dark:text-blue-800': props.flash.message,\n  'text-orange-700 bg-orange-100 dark:bg-orange-200 dark:text-orange-800': props.flash.warning,\n  'text-red-700 bg-red-100 dark:bg-red-200 dark:text-red-800': props.flash.error,\n}))\n\nconst clearFlashMessage = async () => {\n  await router.post(route('flash.clear'));\n  router.reload();\n};\n</script>\n","import script from \"./Pagination.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Pagination.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div v-if=\"data.last_page > 1\" class=\"flex flex-wrap justify-center my-4 space-x-4 space-y-2\">\n    <div></div>\n    <Component v-if=\"data && data.links\"\n        :is=\"link.url ? 'Link' : 'span'\"\n        v-for=\"(link, key) in data.links\"\n        :key=\"key\"\n        :href=\"link.url\"\n        @click.prevent=\"saveScrollPosition\"\n        v-html=\"link.label\"\n        class=\"px-4 py-3 text-sm leading-4 h-fit\"\n        :class=\"{ 'text-white bg-orange-400 hover:bg-orange-400 dark:bg-orange-400 dark:hover:bg-orange-400': link.active,\n                      'rounded mt-2 mr-0.5 text-gray-300 dark:text-gray-700': ! link.url,\n                      'rounded bg-gray-200 hover:bg-gray-300 dark:bg-gray-800 dark:hover:bg-gray-600 text-gray-800 dark:text-gray-50 focus:text-indigo-500 hover:shadow': link.url }\"\n    />\n  </div>\n</template>\n\n\n<script setup>\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\n\nconst appSettingStore = useAppSettingStore()\n\ndefineProps({\n  data: Object,\n})\n\n\nappSettingStore.savedScrollPosition = 0\nconst saveScrollPosition = () => {\n  appSettingStore.savedScrollPosition = window.scrollY\n}\nwindow.scrollTo(0, appSettingStore.savedScrollPosition)\n\n</script>\n\n\n<!--class=\"px-1 text-gray-800 dark:text-gray-50 dark:hover:text-blue-400 hover:text-blue-400\"-->\n<!--:class=\"{ 'text-gray-300 dark:text-gray-700 dark:hover:text-gray-700 hover:text-gray-300': ! link.url, 'font-bold' : link.active }\"-->\n","import script from \"./StepSixCongratulations.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./StepSixCongratulations.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./TabbableTextarea.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TabbableTextarea.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n<!--    <textarea-->\n<!--        @keydown.tab.prevent=\"onTabPress\"-->\n<!--        @keyup=\"emit('update:modelValue', $event.target.value)\"-->\n<!--        v-text=\"modelValue\"-->\n<!--        :placeholder=\"placeholder\" />-->\n  <textarea\n      @keydown.tab.prevent=\"onTabPress\"\n      @input=\"onInput\"\n      :value=\"modelValue\"\n      :placeholder=\"placeholder\"\n      class=\"textarea textarea-bordered text-black bg-white dark:bg-gray-800 dark:text-white\"\n  />\n</template>\n\n<script setup>\ndefineProps({\n  modelValue: String,\n  placeholder: String\n});\n\nconst emit = defineEmits(['update:modelValue']);\n// let emit = defineEmits(['update:modelValue']);\n\nconst onInput = (event) => {\n  emit('update:modelValue', event.target.value);\n};\n\nfunction onTabPress(e) {\n  let textarea = e.target;\n\n  // get caret position/selection\n  let val = textarea.value,\n      start = textarea.selectionStart,\n      end = textarea.selectionEnd;\n\n  // set textarea value to: text before caret + tab + text after caret\n  textarea.value = val.substring(0, start) + \"\\t\" + val.substring(end);\n\n  // put caret at right position again\n  textarea.selectionStart = textarea.selectionEnd = start + 1;\n}\n\n</script>\n","import script from \"./ShowFooter.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ShowFooter.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n\n  <div class=\"flex flex-row flex-wrap-reverse justify-between mt-64 mb-4\">\n    <div>\n      <span class=\"text-xs uppercase font-semibold\">Show ID: </span>\n      <span class=\"text-xs\">{{ show.ulid }}</span>\n    </div>\n\n    <div class=\"flex flex-wrap justify-end text-right\">\n\n\n      <!-- Paginator -->\n      <!--                            <Pagination :links=\"`#`\" class=\"mt-6\"/>-->\n      <div class=\"text-gray-200 ml-2 uppercase\">\n        {{ show.name }}&nbsp;\n      </div>\n      <div>\n        ©\n        <!--                    If there is a copyright year display it... we need to remove the &copy; and replace it with whichever creative commons icon it needs -->\n        <span v-if=\"show.last_release_year > 0\">{{ show.first_release_year }}-{{ show.last_release_year }}</span>\n        <span v-if=\"!show.last_release_year && show.first_release_year\">{{ show.first_release_year }}</span>\n        <span class=\"text-xs font-semibold text-gray-500\"\n              v-if=\"!show.last_release_year && !show.first_release_year && show.copyrightYear\">{{\n            show.copyrightYear\n          }}</span>\n        <span class=\"text-xs font-semibold text-gray-500\"\n              v-if=\"show.creative_commons?.id === 7\">&nbsp;&copy;&nbsp;</span>\n        <!--                    If there is no copyright year then it's probably public domain... so we'll just display the creative commons name-->\n        <span v-if=\"show.creative_commons?.name\"\n              class=\"text-xs font-semibold text-gray-500\">&nbsp;&bull;&nbsp;{{ show.creative_commons?.name }}&nbsp;&bull;&nbsp;</span>\n\n\n      </div>\n    </div>\n\n  </div>\n\n</template>\n\n<script setup>\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\n\nconst appSettingStore = useAppSettingStore()\n\ndefineProps({\n  team: Object,\n  show: Object,\n})\n\nlet currentYear = new Date().getFullYear()\n\n</script>\n","import script from \"./ChangeShowSchedule.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChangeShowSchedule.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <dialog id=\"changeScheduleModal\" class=\"modal\">\n    <div class=\"modal-box w-11/12 max-w-5xl text-black bg-white dark:bg-gray-800 dark:text-white\">\n\n      <div class=\"flex flex-row justify-center text-center\">\n        <div>\n          <h2 class=\"font-bold text-xl\">\n            Change Show Schedule\n          </h2>\n          <div class=\"my-6 font-medium\">\n            We are developing this feature. Check back soon.\n            <!--            <slot name=\"form-description\">Default Form Description</slot>-->\n          </div>\n          <div class=\"mb-6\">\n            For now you can <button @click.prevent=\"removeFromSchedule\" class=\"text-blue-700 hover:text-blue-500\">remove the show</button> from the schedule and re-add it again.\n          </div>\n          <div class=\"mt-4 mb-2 text-left\"></div>\n          <StepSixCongratulations/>\n          <div v-if=\"errors\" class=\"mb-6 text-red-700\">\n            <div>{{ errors }}</div>\n            <div>Please let Travis know.</div>\n          </div>\n          <div class=\"flex flex-row justify-center\">\n            <button @click.prevent=\"closeModal\" class=\"btn\">Okay</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </dialog>\n</template>\n\n<script setup>\nimport { onMounted, ref } from 'vue'\nimport { usePage } from '@inertiajs/vue3'\nimport { useShowStore } from '@/Stores/ShowStore'\nimport StepSixCongratulations from '@/Components/Global/Schedule/StepSixCongratulations.vue'\n\nconst showStore = useShowStore()\n\nconst page = usePage().props\n\nlet props = defineProps({\n  show: Object\n})\n\nconst errors = ref()\n\nconst closeModal = () => {\n  document.getElementById('changeScheduleModal').close()\n}\n\nconst removeFromSchedule = async () => {\n  await showStore.removeFromSchedule('App\\\\Models\\\\Show', props.show.id)\n  closeModal()\n};\n\n\n</script>\n","import script from \"./ShowManageHeader.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ShowManageHeader.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n      <div class=\"flex flex-row items-start\">\n        <!--                <img :src=\"'/storage/images/' + show.poster\" alt=\"\" class=\"w-20 mr-2 justify-left\">-->\n        <Link :href=\"`/shows/${show.slug}`\" class=\"uppercase\">\n          <div class=\"h-80\">\n            <SingleImage :image=\"show.image\" alt=\"'show poster'\" class=\"w-60 object-contain mr-2 justify-left\"/>\n          </div>\n        </Link>\n        <div class=\"flex flex-col pl-4\">\n          <Link :href=\"`/shows/${show.slug}`\" class=\"uppercase\"><span class=\"hover:text-blue-600 mb-3 inline-flex items-center text-3xl font-semibold relative\">{{ show.name }}</span></Link>\n            <div><span class=\"text-xs  font-semibold uppercase\">Team: </span>\n              <Link :href=\"`/teams/${team.slug}/manage`\" class=\"text-blue-500 hover:text-blue-600 ml-2 uppercase font-bold\"> {{\n                  team.name\n                }}\n              </Link>\n            </div>\n            <div><span class=\"text-xs font-semibold mr-2 uppercase\">Show Runner: </span><span\n                class=\"font-medium font-bold\"> {{ show.showRunner.name }} </span></div>\n            <div class=\"pt-4\"><span class=\"text-xs font-semibold mr-2 uppercase\">Category: </span><span\n                class=\"font-medium text-orange-800\"> {{ show?.category?.name }} </span></div>\n            <div><span class=\"text-xs font-semibold mr-2 uppercase\">Sub-category: </span><span\n                class=\"font-medium text-orange-800\"> {{ show?.subCategory?.name }} </span></div>\n\n          <div class=\"mt-12 w-full h-full flex flex-col\">\n            <div class=\"flex-grow\"></div>\n            <div v-if=\"showStore.isScheduled && showStore.scheduleDetails\">\n              <div v-if=\"nextBroadcastDate\">\n                The next broadcast date is <strong>{{ userStore.formatDateTimeFromUtcToUserTimezone(nextBroadcastDate) }}&nbsp;{{ userStore.timezoneAbbreviation }}</strong>. <ConvertDateTimeToTimeAgo :dateTime=\"nextBroadcastDate\" :class=\"`text-yellow-500`\" />\n              </div>\n              <div v-else-if=\"isFutureBroadcast\">\n                The next broadcast date is <strong>{{ userStore.formatDateTimeFromUtcToUserTimezone(showStore.scheduleDetails.startTime) }}&nbsp;{{ userStore.timezoneAbbreviation }}</strong>. <ConvertDateTimeToTimeAgo :dateTime=\"showStore.scheduleDetails.startTime\" :class=\"`text-yellow-500`\" />\n              </div>\n              <div>\n                Your show is currently scheduled as <strong>{{ showStore.scheduleDetails.type }}</strong>.\n                <div v-if=\"showStore.scheduleDetails.type === 'one-time'\">\n                  It will start on <strong>{{ userStore.formatDateTimeFromUtcToUserTimezone(showStore.scheduleDetails.startTime) }}&nbsp;{{ userStore.timezoneAbbreviation }}</strong> and last for <strong>{{ showStore.scheduleDetails.durationMinutes }} minutes</strong>.\n                </div>\n                <div v-else>\n                  <template v-if=\"Array.isArray(showStore.scheduleDetails.daysOfWeek)\">\n                    It recurs on <strong>{{ showStore.scheduleDetails.daysOfWeek.join(', ') }}</strong>\n                  </template>\n                  <template v-else>\n                    It recurs on <strong>{{ showStore.scheduleDetails.daysOfWeek }}</strong>\n                  </template>\n                  starting at <strong>{{ userStore.formatTimeFromDateInUserTimezone(showStore.scheduleDetails.startTime) }}&nbsp;{{ userStore.timezoneAbbreviation }}</strong> with each occurrence lasting <strong>{{ showStore.scheduleDetails.durationMinutes }} minutes</strong>.\n                </div>\n              </div>\n            </div>\n\n            <div v-if=\"can.editShow\">\n            <button v-if=\"!showStore.isScheduled\" @click=\"openAddShowToScheduleModal\"\n                    :disabled=\"showStore.loadingUpdatingStatus || showStore.isUpdatingSchedule || showStore.isSaving\"\n                    class=\"btn btn-lg bg-green-500 hover:bg-green-700 border-green-500 text-white drop-shadow-lg py-2 flex flex-col disabled:text-white\">\n              <span v-if=\"showStore.loadingUpdatingStatus\" class=\"loading loading-dots text-white\"></span>\n              <span v-else-if=\"!showStore.isUpdatingSchedule && !showStore.isSaving\" class=\"\">\n                <font-awesome-icon :icon=\"['fas', 'calendar-plus']\" class=\"hover:text-blue-800 mr-1\" /> Add Show To Schedule\n              </span>\n              <span v-else>The schedule is being updated...</span>\n            </button>\n            <button v-if=\"showStore.isScheduled\" @click=\"openChangeScheduleModal\"\n                    :disabled=\"showStore.loadingUpdatingStatus || showStore.isUpdatingSchedule || showStore.isSaving\"\n                    class=\"btn btn-lg bg-indigo-500 hover:bg-indigo-700 border-indigo-500 text-white drop-shadow-lg py-2 flex flex-col\">\n              <span v-if=\"showStore.loadingUpdatingStatus\" class=\"loading loading-dots text-white\"></span>\n              <span v-else-if=\"!showStore.isUpdatingSchedule && !showStore.isSaving\">\n                <font-awesome-icon :icon=\"['fas', 'calendar-alt']\" class=\"hover:text-blue-800 mr-1\" /> Change Schedule\n              </span>\n              <span v-else>The schedule is being updated...</span>\n            </button>\n              <div v-if=\"showStore.isUpdatingSchedule\" class=\"mt-4 text-red-600\">\n                <span>{{ showStore.updatedBy }} is currently updating the schedule...</span>\n              </div>\n            </div>\n          </div>\n        </div>\n\n      </div>\n\n    <AddShowToSchedule :show=\"show\">\n      <template #form-title>\n        Add your show to the schedule\n      </template>\n      <template #form-description>\n        NOTE: You may want to schedule episodes individually.\n      </template>\n      <template #button-label>\n        Add\n      </template>\n    </AddShowToSchedule>\n\n    <ChangeSchedule :show=\"show\"/>\n\n  </div>\n</template>\n\n<script setup>\nimport { computed, defineAsyncComponent, onBeforeUnmount, onMounted, ref } from 'vue'\nimport { usePage } from '@inertiajs/vue3'\nimport { useShowStore } from \"@/Stores/ShowStore\"\nimport { useUserStore } from \"@/Stores/UserStore\"\nimport { useNotificationStore } from \"@/Stores/NotificationStore\"\nimport SingleImage from \"@/Components/Global/Multimedia/SingleImage\"\nimport Button from '@/Jetstream/Button.vue'\n// import AddShowToSchedule from '@/Components/Global/Schedule/AddShowToSchedule.vue'\nimport ChangeSchedule from '@/Components/Global/Schedule/ChangeShowSchedule.vue'\nimport dayjs from 'dayjs'\nimport utc from 'dayjs/plugin/utc';\nimport timezone from 'dayjs/plugin/timezone';\nimport ConvertDateTimeToTimeAgo from '@/Components/Global/DateTime/ConvertDateTimeToTimeAgo.vue'\n\n// Lazy load the AddShowToSchedule component\nconst AddShowToSchedule = defineAsyncComponent(() =>\n    import('@/Components/Global/Schedule/AddShowToSchedule.vue')\n);\n\ndayjs.extend(utc);\ndayjs.extend(timezone);\n\nconst showStore = useShowStore()\nconst userStore = useUserStore()\nconst notificationStore = useNotificationStore()\n\nconst page = usePage().props\n\nconst props = defineProps({\n  show: Object,\n  team: Object,\n  can: Object,\n})\n\nconst errors = ref();\n\nconst nextBroadcastDate = computed(() => {\n  // console.log('showStore.scheduleDetails:', showStore.scheduleDetails);\n\n  const now = dayjs();\n  if (showStore.scheduleDetails && showStore.scheduleDetails.broadcastDates) {\n    const broadcastDatesObj = JSON.parse(showStore.scheduleDetails.broadcastDates);\n    // console.log('Parsed broadcastDates:', broadcastDatesObj);\n\n    if (Array.isArray(broadcastDatesObj.broadcastDates)) {\n      const upcomingDates = broadcastDatesObj.broadcastDates\n          .map(dateStr => {\n            const date = dayjs.tz(dateStr, broadcastDatesObj.timezone);\n            // console.log('date:', date.toString());\n            return date;\n          })\n          .filter(date => date.isAfter(now))\n          .sort((a, b) => a - b);\n\n      // console.log('upcomingDates:', upcomingDates);\n      return upcomingDates.length > 0 ? upcomingDates[0].toISOString() : null;\n    }\n  }\n  return null;\n});\n\nconst isFutureBroadcast = computed(() => {\n  return dayjs(showStore.scheduleDetails.startTime).isAfter(dayjs());\n});\n\n// Function to set up MutationObserver for a modal\nconst watchModal = (modalId, onClose) => {\n  const modalElement = document.getElementById(modalId);\n  if (!modalElement) return;\n\n  const observer = new MutationObserver((mutationsList) => {\n    for (let mutation of mutationsList) {\n      if (mutation.type === 'attributes' && mutation.attributeName === 'open') {\n        if (!modalElement.hasAttribute('open')) {\n          onClose();\n        }\n      }\n    }\n  });\n\n  observer.observe(modalElement, { attributes: true });\n\n  return observer;\n};\n\nconst openAddShowToScheduleModal = async () => {\n  try {\n    await showStore.setUpdatingStatus(true, page.user.name, props.show.slug);\n    document.getElementById('addShowToScheduleModal').showModal();\n    notificationStore.setToastNotification('Show meta loaded.', 'info')\n  } catch (error) {\n    errors.value = 'Failed to set saving state. Please try again.';\n    notificationStore.setToastNotification(errors.value, 'error', 10000)\n  }\n};\n\nconst openChangeScheduleModal = async () => {\n  try {\n    await showStore.setUpdatingStatus(true, page.user.name, props.show.slug);\n    document.getElementById('changeScheduleModal').showModal();\n    notificationStore.setToastNotification('Show meta loaded.', 'info')\n  } catch (error) {\n    errors.value = 'Failed to set saving state. Please try again.';\n    notificationStore.setToastNotification(errors.value, 'error', 10000)\n  }\n};\n\n// Declare observers so they can be cleaned up on unmount\nlet addShowToScheduleObserver;\nlet changeScheduleObserver;\n\nonMounted(async () => {\n  addShowToScheduleObserver = watchModal('addShowToScheduleModal', async () => {\n    await showStore.setUpdatingStatus(false, page.user.name, props.show.slug);\n  });\n\n  changeScheduleObserver = watchModal('changeScheduleModal', async () => {\n    await showStore.setUpdatingStatus(false, page.user.name, props.show.slug);\n  });\n\n  // Check the flag in meta on page load\n  // console.log('show.meta:', props.show.meta);\n\n  const meta = props.show.meta\n  // console.log('isUpdatingSchedule:', meta.isUpdatingSchedule);\n  // console.log('updatedBy:', meta.updatedBy);\n  // console.log('current user:', page.user.name);\n\n  if (meta && meta.isUpdatingSchedule && meta.updatedBy === page.user.name) {\n    // console.log('Resetting isUpdatingSchedule and updatedBy');\n    await showStore.setUpdatingStatus(false, page.user.name, props.show.slug);\n  }\n});\n\n// Store observers to disconnect them later\nonBeforeUnmount(() => {\n  if (addShowToScheduleObserver) addShowToScheduleObserver.disconnect();\n  if (changeScheduleObserver) changeScheduleObserver.disconnect();\n});\n</script>\n","import script from \"./ManageShowEpisodesStatuses.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ManageShowEpisodesStatuses.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <div>\n        <div v-if=\"!userStore.isAdmin\">\n            <button v-if=\"teamStore.can.editShow && props.episodeStatusId !== 9 && props.episodeStatusId !== 10\" :class=\"episodeStatusClass\" @click=\"openEpisodeStatuses()\">{{ episodeStatus }}</button>\n            <div v-if=\"!teamStore.can.editShow || props.episodeStatusId === 9 || props.episodeStatusId === 10\" class=\"cursor-not-allowed\" :class=\"episodeStatusClass\">{{ episodeStatus }}</div>\n        </div>\n        <div v-else>\n            <button class=\"h-fit py-1\" :class=\"episodeStatusClass\" @click=\"openEpisodeStatuses()\">{{ episodeStatus }}</button>\n        </div>\n\n        <dialog :id=\"dialogId\" class=\"modal\">\n            <div class=\"modal-box h-fit bg-white text-black\">\n                <div v-if=\"props.episodeStatusId === 7\">\n                    <h3 class=\"text-center mb-2\">Episode is Published</h3>\n                    <p class=\"text-center mb-2\">\n                        Please contact the notTV Team if you need to change the episode status. This is because the episode is already promoted and distributed.\n                    </p>\n                    <p class=\"text-center\">\n                        Email <a class=\"text-blue-600 hover:text-blue-500\" :href=\"`mailto:hello@not.tv?subject=Need%20Help%20With%20Published%20Episode%20ID:%20${props.episodeUlid}&body=Episode%20ID:%20${props.episodeUlid}%0AEpisode%20Name:%20${props.episodeName}%0AShow%20Name:%20${props.showName}`\">hello@not.tv</a> for assistance\n                    </p>\n                    <p v-if=\"userStore.isAdmin\" class=\"text-center mt-2\">\n                        <button @click=\"openAdminChangeStatusModal()\" class=\"btn btn-wide my-2 text-white bg-orange-600 hover:bg-orange-500\">Change Status (admin only)</button>\n                    </p>\n                </div>\n                <div v-else>\n                    <div v-if=\"!setDateTime\">\n                        <h2 class=\"text-center mb-2\">Change the Episode Status:</h2>\n                        <div v-for=\"(status, key)  in episodeStatuses\" :key=\"key\" class=\"text-center\">\n                            <div class=\"btn btn-wide my-1\" @click=\"checkEpisodeStatus(episodeId, status.id)\">{{ status.name }}</div>\n                        </div>\n                    </div>\n                    <div v-if=\"setDateTime\">\n                        <h3 class=\"text-center mb-2\">Set the Scheduled Release Date and Time:</h3>\n                        <div class=\"text-center\">\n                            <DateTimePicker :date=\"convertedDate\" @date-time-selected=\"handleScheduledDateTime\" />\n                            <button class=\"btn my-2\" @click=\"changeEpisodeStatus(episodeId, 6)\">Schedule it!</button>\n                            <button class=\"btn ml-2 my-2\" @click=\"cancelScheduleEpisode\">Cancel</button>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n\n            <form method=\"dialog\" class=\"modal-backdrop\">\n                <button>close</button>\n            </form>\n        </dialog>\n\n        <dialog :id=\"`confirmPublishModal.${episodeId}`\" class=\"modal\">\n            <div class=\"modal-box\">\n                <h3 class=\"text-center font-bold text-lg\">Are you sure you want to publish?</h3>\n                <p class=\"text-center py-4\">This action cannot be undone. When you publish an episode it registers it on the blockchain and promotes it on the network.</p>\n                <div class=\"modal-action\">\n                    <form method=\"dialog\">\n                            <button @click=\"changeEpisodeStatus(episodeId, 7)\" class=\"btn text-white bg-green-600 hover:bg-green-500 mr-2\">Yes! Publish Now!</button>\n                            <button class=\"btn text-white bg-orange-600 hover:bg-orange-500\">No, cancel</button>\n                    </form>\n                </div>\n            </div>\n        </dialog>\n\n        <dialog :id=\"`adminChangeStatusModal.${episodeId}`\" class=\"modal\">\n            <div class=\"modal-box bg-gray-100 text-black\">\n                <h3 class=\"text-center font-bold text-lg\">Change Status (Admin Only)</h3>\n                <p class=\"text-center py-4\">This is the Admin Override to change the episode status. If the episode is already published and you un-publish it the episode will be reverted to \"Review\" and become inaccessible to the public.</p>\n                <div class=\"w-full flex justify-center mt-2 pb-4\">\n                    <form method=\"dialog\">\n                        <button @click=\"changeEpisodeStatus(episodeId, 5)\" class=\"btn text-white bg-blue-600 hover:bg-blue-500 mr-2\">Un-publish</button>\n                        <button @click=\"changeEpisodeStatus(episodeId, 9)\" class=\"btn text-white bg-orange-600 hover:bg-orange-500 mr-2\">Freeze</button>\n                        <button @click=\"changeEpisodeStatus(episodeId, 10)\" class=\"btn text-white bg-red-600 hover:bg-red-500\">Restrict</button>\n                    </form>\n                </div>\n                <p class=\"text-center py-4\"><span class=\"font-semibold\">Please Note:</span> Un-publishing will have an adverse affect on the promotional links already used.</p>\n                <p class=\"text-center py-4\"><span class=\"italic\">Press ESC to close or <button @click=\"closeModals\" class=\"text-blue-600 hover:text-blue-500\">click here</button> to close.</span></p>\n            </div>\n        </dialog>\n\n    </div>\n\n</template>\n\n<script setup>\nimport { router } from '@inertiajs/vue3'\nimport { computed, ref, watch, watchEffect } from 'vue'\nimport { format } from \"date-fns\"\nimport { useTeamStore } from \"@/Stores/TeamStore\"\nimport { useShowStore } from \"@/Stores/ShowStore\"\nimport { useUserStore } from \"@/Stores/UserStore\"\nimport { useNotificationStore } from \"@/Stores/NotificationStore\"\nimport DateTimePicker from \"@/Components/Global/Calendar/DateTimePicker\"\nimport DateTimePickerSelect from \"@/Components/Global/Calendar/DateTimePickerSelect\"\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport timezone from 'dayjs/plugin/timezone';\nimport utc from 'dayjs/plugin/utc'; // Required for timezone support\n\nconst teamStore = useTeamStore()\nconst showStore = useShowStore()\nconst userStore = useUserStore()\nconst notificationStore = useNotificationStore()\n\n// Extend Day.js with the plugins\ndayjs.extend(relativeTime);\ndayjs.extend(timezone);\ndayjs.extend(utc);\n\nlet props = defineProps({\n    episodeId: '',\n    episodeUlid: '',\n    episodeName: '',\n    episodeSlug: '',\n    episodeStatus: '',\n    episodeStatusId: '',\n    episodeStatuses: Object,\n    showName: '',\n    showSlug: '',\n    scheduledDateTime: String,\n})\n\n// Ref for reactive timezone\nconst userTimezone = ref(userStore.timezone);\n\nconst convertedDate = ref('');\nwatchEffect(() => {\n  if (userStore.timezone) {\n    convertedDate.value = dayjs.utc(props.scheduledDateTime).tz(userStore.timezone).format();\n  }\n})\n\nconst convertTimeToUserTimezone = (date, timezone) => {\n  // Convert the date to the provided timezone using Day.js\n  return dayjs.tz(date, timezone);\n};\n\nconst errorMessage = ref('');\nconst dialogId = props.episodeId+'episodeStatuses'\n\nlet scheduledDateTime = ref(null)\nlet setDateTime = ref(false)\n\nfunction openEpisodeStatuses() {\n    document.getElementById(dialogId).showModal()\n}\n\n// function checkEpisodeStatus(episodeId, newStatusId) {\n//     setDateTime = true;\n//     if (newStatusId === 6 && scheduledDateTime === null) {\n//         // open a model to set scheduled dateTime\n//\n//         router.reload()\n//     }\n// }\n\nconst checkEpisodeStatus = (episodeId, statusId) => {\n    if (statusId === 6) {\n        // update the modal to set scheduled dateTime\n        setDateTime.value = !setDateTime.value;\n    } else if (statusId === 7) {\n        // open modal to confirm they want to publish.\n        document.getElementById('confirmPublishModal.' + props.episodeId).showModal()\n    }\n    else if (statusId !== 6) {\n        changeEpisodeStatus(episodeId, statusId)\n    }\n};\n\nconst cancelScheduleEpisode = () => {\n    setDateTime.value = !setDateTime.value;\n};\n\nconst openAdminChangeStatusModal = () => {\n    document.getElementById('adminChangeStatusModal.'+props.episodeId).showModal()\n}\n\nconst handleScheduledDateTime = (newDate) => {\n    selectedScheduledDateTime.value = newDate;\n    scheduledDateTime = newDate.date;\n    // console.log(scheduledDateTime)\n    updateScheduledDateTime(scheduledDateTime)\n    // console.log(formattedScheduledDateTime)\n}\n\nconsole.log('we already have the user timezone: ' + userStore.timezone)\n\n// const getUserTimezone = () => {\n//     // Use the Intl object to get the user's timezone\n//     userTimezone.value = Intl.DateTimeFormat().resolvedOptions().timeZone;\n// };\n\nlet selectedScheduledDateTime = ref('');\nlet formattedScheduledDateTime = ref(''); // This will display the formatted date and time\n\nconst convertToTimeZone = (dateTime, userTimezone) => {\n    return format(dateTime, 'yyyy-MM-dd HH:mm:ssXXX', { userTimezone });\n};\n\nconst updateScheduledDateTime = (scheduledDateTime) => {\n    if (selectedScheduledDateTime.value) {\n        // Convert the selected date and time to the desired time zone\n        // const timeZone = 'UTC'; // Change this to your desired time zone\n        formattedScheduledDateTime.value = convertToTimeZone(\n            new dayjs(scheduledDateTime).tz(userStore.timezone).format()\n        );\n        // console.log('updated ScheduleDateTime to timezone: ' + formattedScheduledDateTime.value)\n    } else {\n        formattedScheduledDateTime.value = '';\n    }\n};\n\nasync function changeEpisodeStatus(episodeId, statusId) {\n    try {\n        const response = await axios.post('/shows/episode/changeEpisodeStatus', {\n            episode_id: episodeId,\n            new_status_id: statusId,\n            scheduled_release_dateTime: formattedScheduledDateTime.value\n        });\n        // Handle success response as needed\n        notificationStore.setToastNotification(response.data.message, 'success')\n        // Check if the response contains an \"alert\" message\n        if (response.data.alert) {\n            // Display the alert message\n            alert(response.data.alert);\n        } else\n        {\n          // Update the showStore.episodes with the new data\n          const updatedEpisode = response.data;\n          const episodeIndex = showStore.episodes.data.findIndex(ep => ep.id === updatedEpisode.episode_id);\n          if (episodeIndex !== -1) {\n            showStore.episodes.data[episodeIndex].episodeStatusId = updatedEpisode.episode_status_id;\n            showStore.episodes.data[episodeIndex].scheduledReleaseDateTime = updatedEpisode.scheduled_release_dateTime;\n            // Update episodeStatus using episodeStatuses array from the store\n            const status = showStore.episodeStatuses.find(status => status.id === updatedEpisode.episode_status_id);\n            if (status) {\n              showStore.episodes.data[episodeIndex].episodeStatus = status.name;\n            }\n          }\n        }\n    } catch (error) {\n        if (error.response) {\n          notificationStore.setToastNotification(error.response.data, 'error')\n          showStore.errorMessage = error.response.data.error\n        } else {\n            // console.error(error);\n        }\n    }\n    // return response\n    document.getElementById(dialogId).close()\n    router.reload()\n}\n\nconst closeModals = () => {\n    document.getElementById(dialogId).close()\n    document.getElementById('confirmPublishModal.'+props.episodeId).close()\n    document.getElementById('adminChangeStatusModal.'+props.episodeId).close()\n    router.reload()\n}\n\nconst episodeStatusClass = computed(() => ({\n    'btn m-1 w-fit font-semibold text-xl text-orange-400': props.episodeStatusId===1,\n    'btn m-1 w-fit text-xl text-green-400': props.episodeStatusId===2,\n    'btn m-1 w-fit font-semibold text-xl text-green-600': props.episodeStatusId===3,\n    'btn m-1 w-fit font-bold text-xl text-green-600': props.episodeStatusId===4,\n    'btn m-1 w-fit font-semibold text-xl text-purple-700': props.episodeStatusId===5,\n    'btn m-1 w-fit font-italic text-xl text-pink-500': props.episodeStatusId===6,\n    'btn m-1 w-fit font-bold text-xl light:text-black dark:text-white': props.episodeStatusId===7,\n    'btn m-1 w-fit font-medium text-xl text-gray-500': props.episodeStatusId===8,\n    'btn m-1 w-fit font-semibold font-italic text-xl text-red-700': props.episodeStatusId===9,\n    'btn m-1 w-fit font-bold text-xl text-red-800': props.episodeStatusId===10,\n}))\n\n</script>\n","import script from \"./ManageEpisodeEditNote.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ManageEpisodeEditNote.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n    <form @submit.prevent=\"\">\n      <input\n          class=\"bg-white text-black p-1 w-3/4\"\n          placeholder=\"Write a note...\"\n          type=\"text\"\n          ref=\"episodeNote\"\n          v-model=\"form.note\"\n          @keyup.enter=\"saveNote\"\n          @focusout=\"closeNote\">\n    </form>\n  </div>\n\n</template>\n\n<script setup>\nimport { onMounted, ref } from \"vue\"\nimport note from \"lodash/seq\"\nimport { useShowStore } from \"@/Stores/ShowStore\"\nimport { useForm } from \"@inertiajs/vue3\"\n\nconst showStore = useShowStore()\n\nshowStore.saveNoteProcessing = false\n\nlet props = defineProps({\n  episode: Object,\n});\n\nlet form = useForm({\n  note: '',\n});\nform.note = props.episode.notes;\nconst emit = defineEmits(['saveNoteProcessing'])\nconst episodeNote = ref(null);\n\n// Focus the input element when the component is mounted\nonMounted(() => {\n  episodeNote.value.focus();\n});\n\nfunction closeNote() {\n  if (form.note === props.episode.notes) {\n    showStore.noteEdit = 0;\n  }\n  saveNote()\n}\n\nfunction saveNote() {\n\n  // axios.post('/shows/notes', {\n  //     notes: form.note,\n  //     showId: props.show.id,\n  // })\n  //     teamStore.noteEdit = 0;\n  //     updateNote++;\n  //     props.show.note = 'update';\n\n// Why does this not work? We are not\n// getting a response.\n//\n  showStore.saveNoteProcessing = true;\n  showStore.notes = form.note;\n  emit('saveNoteProcessing');\n  axios.post('/shows/episode/notes', {\n    notes: form.note,\n    episodeId: props.episode.id,\n  }).then(response => {\n    showStore.noteEdit = 0;\n    console.log('note saved');\n    showStore.saveNoteProcessing = false;\n  })\n      .catch(error => {\n        console.log(error);\n      })\n}\n\n</script>\n","<template>\n  <div v-if=\"showStore.episodeIsBeingDeleted !== episode.id\" class=\"bg-gray-50 grid grid-cols-1 md:grid-cols-5 gap-4 p-4 mb-4 rounded-lg shadow\">\n    <div class=\"flex items-center text-sm w-16\">\n      <div v-if=\"!episode.episodeNumber\">{{ episode.id }}</div>\n      <div v-else>{{ episode.episodeNumber }}</div>\n    </div>\n    <div @click=\"router.visit(`/shows/${showSlug}/episode/${episode.slug}/manage`)\" class=\"hover:cursor-pointer flex items-center space-x-2\">\n      <SingleImage :image=\"episode.image\" :alt=\"episode.name\" class=\"rounded-xl min-w-16 w-16 h-16 object-cover\" />\n      <span class=\"hover:text-blue-600 font-semibold dark:text-blue-400 dark:hover:text-blue-200\">\n        {{ episode.name }}\n      </span>\n    </div>\n    <div class=\"light:text-gray-600 dark:text-gray-100 text-sm flex justify-center items-center\">\n      <span v-if=\"!episode.notes\" v-show=\"showStore.noteEdit !== episode.id\" class=\"italic\" @click=\"editNote\">Click here to add/edit a note.</span>\n      <span v-if=\"episode.notes\" v-show=\"showStore.noteEdit !== episode.id\" :key=\"componentKey\" @click=\"editNote\">{{ episode.notes }}</span>\n      <div v-if=\"showStore.noteEdit === episode.id\">\n        <EpisodeNoteEdit :episode=\"episode\" @saveNoteProcessing=\"reloadNote\" />\n        <div v-if=\"showStore.saveNoteProcessing\">Saving...</div>\n      </div>\n    </div>\n    <div class=\"text-right\">\n      <div class=\"dropdown dropdown-left\">\n        <ManageShowEpisodeStatuses\n            :episodeStatus=\"episode.episodeStatus\"\n            :episodeStatusId=\"episode.episodeStatusId\"\n            :episodeStatuses=\"episodeStatuses\"\n            :episodeId=\"episode.id\"\n            :episodeUlid=\"episode.ulid\"\n            :episodeName=\"episode.name\"\n            :episodeSlug=\"episode.slug\"\n            :showSlug=\"showSlug\"\n            :showName=\"showName\"\n            :scheduledDateTime=\"episode.scheduledReleaseDateTime\"\n        />\n      </div>\n      <div v-if=\"episode.episodeStatusId === 6\">\n        Scheduled for: <br />\n        {{ scheduledReleaseDateTime }}\n      </div>\n      <div v-if=\"episode.episodeStatusId === 7\">\n        Released on: <br/>\n        {{ releaseDateTime }}\n      </div>\n    </div>\n    <div class=\"flex flex-row justify-end items-center\">\n      <button\n          v-if=\"teamStore.can.editShow\"\n          @click=\"appSettingStore.btnRedirect(`/shows/${showSlug}/episode/${episode.slug}/edit`)\"\n          class=\"px-2 py-2 text-white font-semibold bg-blue-500 hover:bg-blue-600 rounded-lg mr-2 w-16 h-10\"\n      >\n        Edit\n      </button>\n      <button\n          v-if=\"teamStore.can.manageShow && !episode.isPublished\"\n          @click=\"deleteShowEpisode\"\n          class=\"px-2 py-2 text-white font-semibold bg-red-500 hover:bg-red-600 rounded-lg w-10 h-10\"\n      >\n        <font-awesome-icon icon=\"fa-trash-can\" />\n      </button>\n    </div>\n  </div>\n  <div v-else class=\"w-full text-center p-4\">\n    <span class=\"loading loading-infinity loading-lg\"></span>\n    <span class=\"ml-3\">The episode is being deleted...</span>\n  </div>\n</template>\n\n<script setup>\nimport { router } from '@inertiajs/vue3';\nimport { useForm } from \"@inertiajs/vue3\";\nimport { ref } from \"vue\";\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\";\nimport { useTeamStore } from \"@/Stores/TeamStore\";\nimport { useShowStore } from \"@/Stores/ShowStore\";\nimport { useUserStore } from \"@/Stores/UserStore\";\nimport { FontAwesomeIcon } from \"@fortawesome/vue-fontawesome\";\nimport ManageShowEpisodeStatuses from \"@/Components/Pages/Shows/Elements/ManageShowEpisodesStatuses\";\nimport EpisodeNoteEdit from \"@/Components/Pages/Shows/Elements/ManageEpisodeEditNote\";\nimport SingleImage from '@/Components/Global/Multimedia/SingleImage.vue';\n\nconst appSettingStore = useAppSettingStore();\nconst teamStore = useTeamStore();\nconst showStore = useShowStore();\nconst userStore = useUserStore();\n\nconst props = defineProps({\n  episode: Object,\n  episodeStatuses: Object,\n  showSlug: String,\n  showName: String,\n});\n\nconst showEpisodeStatuses = ref(false);\nconst releaseDateTime = userStore.formatLongDateTimeFromUtcToUserTimezone(props.episode.releaseDateTime);\nconst scheduledReleaseDateTime = userStore.formatDateInUserTimezone(props.episode.scheduledReleaseDateTime, 'ddd DD MMM YYYY, hh:mm A' + ' ' + userStore.timezoneAbbreviation);\n\nshowStore.noteEdit = 0;\nconst componentKey = ref(0);\n\nfunction reloadNote() {\n  props.episode.notes = showStore.notes;\n  componentKey.value += 1;\n}\n\nlet form = useForm({\n  note: '',\n});\n\nfunction editNote() {\n  showStore.noteEdit = props.episode.id;\n}\n\nfunction openEpisodeStatuses() {\n  document.getElementById('episodeStatuses').showModal();\n}\n\nconst deleteShowEpisode = async () => {\n  const confirmation = confirm('Are you sure you want to delete this show episode?');\n\n  if (confirmation) {\n    try {\n      showStore.episodeIsBeingDeleted = props.episode.id;\n      await axios.delete(`/shows/${props.showSlug}/episode/${props.episode.slug}`)\n          .then((response) => {\n            if (response.status === 200) {\n              showStore.errorMessage = response.data.message;\n              router.reload();\n              showStore.episodeIsBeingDeleted = 0;\n            } else {\n              showStore.errorMessage = response.statusText;\n              console.error('Delete request failed:', response.statusText);\n              showStore.episodeIsBeingDeleted = 0;\n              router.reload();\n            }\n          })\n          .catch((error) => {\n            console.error('Error deleting show episode:', error);\n            showStore.errorMessage = error;\n            showStore.episodeIsBeingDeleted = 0;\n            router.reload();\n          });\n    } catch (error) {\n      console.error('Error deleting show episode:', error);\n    }\n  }\n};\n</script>\n\n<style scoped>\n.grid {\n  display: grid;\n  grid-template-columns: 1fr;\n}\n\n@media (min-width: 768px) {\n  .grid {\n    grid-template-columns: 4rem 1fr 1fr 1fr 1fr;\n  }\n}\n\n.min-w-16 {\n  min-width: 4rem;\n}\n\n.max-w-16 {\n  max-width: 4rem;\n}\n\n.max-h-16 {\n  max-height: 4rem;\n}\n</style>\n","import api from \"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-10.use[1]!../../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-10.use[2]!../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./ManageShowEpisode.vue?vue&type=style&index=0&id=20187ebd&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./ManageShowEpisode.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ManageShowEpisode.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ManageShowEpisode.vue?vue&type=style&index=0&id=20187ebd&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-20187ebd\"]])\n\nexport default __exports__","import script from \"./ManageShowEpisodesList.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ManageShowEpisodesList.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n    <button\n        v-if=\"teamStore.can.createEpisode\"\n        @click=\"appSettingStore.btnRedirect(`/showEpisodes/${showStore.show.slug}/episode/create`)\"\n        class=\"ml-6 my-4 px-4 py-2 text-white font-semibold bg-green-500 hover:bg-green-600 rounded-lg disabled:bg-gray-400\"\n    >\n      Create Episode\n    </button>\n  </div>\n  <div class=\"overflow-x-auto\">\n    <div class=\"min-w-full divide-y divide-gray-200 grid grid-cols-1 md:grid-cols-5\">\n      <div class=\"font-medium p-4 text-left w-16\">Ep.#</div>\n      <div class=\"font-medium p-4 text-left\"></div>\n      <div class=\"font-medium p-4 text-center\"></div>\n      <div class=\"font-medium p-4 text-right\"></div>\n      <div class=\"font-medium p-4 text-right\"></div>\n    </div>\n    <div class=\"divide-y divide-gray-200\">\n      <ManageShowEpisode\n          v-for=\"episode in showStore.episodes.data\"\n          :key=\"episode.id\"\n          :episode=\"episode\"\n          :showSlug=\"showStore.show.slug\"\n          :showName=\"showStore.show.name\"\n          :episodeStatuses=\"showStore.episodeStatuses\"\n      />\n    </div>\n  </div>\n  <!-- Paginator -->\n  <Pagination :data=\"showStore.episodes\" />\n</template>\n\n<script setup>\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\";\nimport { useTeamStore } from \"@/Stores/TeamStore\";\nimport { useShowStore } from \"@/Stores/ShowStore\";\nimport ManageShowEpisode from \"@/Components/Pages/Shows/Elements/ManageShowEpisode\";\nimport Pagination from \"@/Components/Global/Paginators/Pagination\";\n\nconst appSettingStore = useAppSettingStore();\nconst teamStore = useTeamStore();\nconst showStore = useShowStore();\n</script>\n","<template>\n\n    <table class=\"min-w-full divide-y divide-gray-200\">\n        <thead class=\"divide-y divide-gray-200\">\n        <!--                                <tr v-for=\"episode in episodes.data\" :key=\"episode.id\">-->\n        <tr>\n            <td class=\"px-6 py-4 whitespace-nowrap\">\n                <div class=\"flex items-center\">\n                    <div>\n                        <div class=\"text-sm font-medium pl-14\">\n                            <!--                                                    <Link :href=\"`/admin/users/${episode.id}`\" class=\"text-indigo-600 hover:text-indigo-900\">{{ episode.name }}</Link>-->\n                            Name\n                        </div>\n                    </div>\n                </div>\n            </td>\n\n            <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n                Role\n            </td>\n\n            <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n                Completed Assignments\n            </td>\n\n            <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n                Total Credits\n            </td>\n\n            <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-right\">\n                Status\n            </td>\n        </tr>\n        </thead>\n        <tbody class=\"bg-white divide-y divide-gray-200\">\n        <!--  INSERT CREDITS HERE  -->\n        </tbody>\n\n    </table>\n\n</template>\n\n<script setup>\n\n\n</script>\n","import { render } from \"./ManageShowCreditsList.vue?vue&type=template&id=65646f00\"\nconst script = {}\n\nimport exportComponent from \"../../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <thead class=\"divide-y divide-gray-200\">\n  <!--                                <tr v-for=\"episode in episodes.data\" :key=\"episode.id\">-->\n  <tr>\n    <td class=\"px-6 py-4 whitespace-nowrap\">\n      <div class=\"flex items-center\">\n        <div>\n          <div class=\"text-sm font-semibold pl-14\">\n            <!--                                                    <Link :href=\"`/admin/users/${episode.id}`\" class=\"text-indigo-600 hover:text-indigo-900\">{{ episode.name }}</Link>-->\n            Date\n          </div>\n        </div>\n      </div>\n    </td>\n\n    <td class=\"px-6 py-4 whitespace-nowrap text-sm font-semibold\">\n      Start Time\n    </td>\n\n    <td class=\"px-6 py-4 whitespace-nowrap text-sm font-semibold\">\n      End Time\n    </td>\n\n    <td class=\"px-6 py-4 whitespace-nowrap text-sm font-semibold\">\n      Duration\n    </td>\n\n    <td class=\"px-6 py-4 whitespace-nowrap text-sm font-semibold text-right\">\n      Expires in\n    </td>\n\n    <td class=\"px-6 py-4 whitespace-nowrap text-sm font-semibold text-right\">\n\n    </td>\n  </tr>\n  </thead>\n</template>\n<script setup>\n</script>","import { render } from \"./RecordingsListHeader.vue?vue&type=template&id=33b556a6\"\nconst script = {}\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <tbody class=\"bg-white divide-y divide-gray-200\">\n  <tr v-for=\"recording in recordings\" :key=\"recording.id\"\n      @mouseover=\"state.hoveredRow = recording.id\"\n      @mouseleave=\"state.hoveredRow = null\"\n      @click=\"selectRecording(recording)\"\n      :class=\"rowClass(recording.id)\">\n    <td class=\"px-6 py-4 whitespace-nowrap\">\n      <div>{{ recording?.meta?.title }}</div>\n      <div>{{ recording.start_date_local }}</div>\n      <div v-if=\"recording.comment\" class=\"text-xs uppercase text-orange-700 font-semibold break-words\">\n        <span :class=\"{ 'text-indigo-600': recording.comment !== 'automated recording' }\">{{ recording.comment }}</span>\n      </div>\n    </td>\n    <td class=\"px-6 py-4 whitespace-nowrap\">\n      {{ recording.start_time_local }}\n    </td>\n    <td class=\"px-6 py-4 whitespace-nowrap\">\n      {{ recording.end_time_local }}\n    </td>\n    <td class=\"px-6 py-4 whitespace-nowrap\">\n      {{ formatDuration(recording.total_milliseconds_recorded) }}\n    </td>\n    <td class=\"px-6 py-4 whitespace-nowrap\">\n      <span v-if=\"recording.meta?.good\" class=\"bg-green-500 text-white rounded-full p-1 text-xs\">✔️</span>\n      <span v-if=\"recording.meta?.ng\" class=\"bg-orange-500 text-white rounded-full p-1 text-xs\">❌</span>\n    </td>\n    <td class=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium space-x-1\">\n      <button @click.stop=\"shareRecording(recording.share_url)\"\n              class=\"btn btn-xs bg-orange-200 hover:bg-orange-300 text-black\">\n        <font-awesome-icon icon=\"fa-share\" class=\"\"/> Share\n      </button>\n      <button @click.stop=\"confirmAddToEpisode\"\n              class=\"btn btn-xs\">Add To Episode</button>\n      <button @click.stop=\"confirmDownload(recording)\"\n              class=\"btn btn-xs btn-info\">Download</button>\n      <div @click.stop=\"confirmSaveToPremium\" class=\"btn btn-xs\">Save to Premium Storage</div>\n      <transition name=\"fade\">\n        <div v-if=\"state.showCopyMessage\" class=\"copy-message\">\n          {{ state.copyMessage }}\n        </div>\n      </transition>\n    </td>\n  </tr>\n  </tbody>\n</template>\n\n<script setup>\nimport { computed, reactive, ref } from 'vue'\nimport { useRecordingStore } from '@/Stores/RecordingStore';\n\nconst recordingStore = useRecordingStore();\nconst emit = defineEmits(['select-recording']);\n\nconst state = reactive({\n  hoveredRow: null,\n  showCopyMessage: false,\n  copyMessage: '',\n});\n\nconst recordings = computed(() => recordingStore.formattedRecordings);\n\nconst selectRecording = (recording) => {\n  recordingStore.setSelectedRecording(recording);\n  emit('select-recording');\n};\n\nconst shareRecording = (shareUrl) => {\n  navigator.clipboard.writeText(shareUrl).then(() => {\n    state.copyMessage = 'Video share URL copied!';\n    state.showCopyMessage = true;\n    setTimeout(() => {\n      state.showCopyMessage = false;\n    }, 1000); // Hide after 1 second\n  }).catch(err => {\n    console.error('Failed to copy: ', err);\n  });\n};\n\nconst confirmAddToEpisode = () => {\n  document.getElementById('confirmAddToEpisodeModal').showModal();\n};\n\nconst confirmDownload = (recording) => {\n  recordingStore.setSelectedRecording(recording);\n  document.getElementById('confirmDownloadModal').showModal();\n};\n\nconst confirmSaveToPremium = () => {\n  document.getElementById('confirmSaveToPremiumModal').showModal();\n};\n\nconst rowClass = computed(() => (recordingId) => ({\n  'hover:bg-blue-100 cursor-pointer': state.hoveredRow === recordingId,\n  'bg-gray-200': recordingStore.selectedRecording?.id === recordingId,\n  'bg-green-100': recordingStore.nowPlayingRecordingId === recordingId,\n}));\n\nconst formatDuration = (totalMilliseconds) => {\n  return recordingStore.formatDuration(totalMilliseconds);\n};\n</script>\n\n<style>\n.copy-message {\n  position: fixed;\n  bottom: 50%;\n  left: 50%;\n  transform: translateX(-50%);\n  background-color: rgba(0, 0, 0, 0.75);\n  color: white;\n  padding: 20px;\n  border-radius: 10px;\n  font-size: 1.5rem;\n  z-index: 100;\n  transition: opacity 0.5s ease;\n}\n\n.fade-enter-active, .fade-leave-active {\n  transition: opacity 0.5s ease;\n}\n\n.fade-enter-from, .fade-leave-to {\n  opacity: 0;\n}\n</style>\n","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-10.use[1]!../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-10.use[2]!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./RecordingsListBody.vue?vue&type=style&index=0&id=65299120&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./RecordingsListBody.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./RecordingsListBody.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./RecordingsListBody.vue?vue&type=style&index=0&id=65299120&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div v-if=\"totalPages > 1\" class=\"join\">\n    <button\n        v-for=\"page in totalPages\"\n        :key=\"page\"\n        :class=\"['join-item', 'btn', { 'btn-active': currentPage === page }]\"\n        @click=\"goToPage(page)\"\n    >\n      {{ page }}\n    </button>\n  </div>\n</template>\n\n<script setup>\nconst props = defineProps({\n  totalPages: {\n    type: Number,\n    required: true,\n  },\n  currentPage: {\n    type: Number,\n    required: true,\n  },\n});\n\nconst emit = defineEmits(['update']);\n\nconst goToPage = (page) => {\n  emit('update', page);\n};\n</script>\n\n<style scoped>\n.join {\n  display: flex;\n  justify-content: center;\n  gap: 4px;\n}\n\n.btn {\n  transition: background-color 0.3s ease;\n}\n\n/* Default hover effect */\n.btn:hover {\n  background-color: #ff6347; /* Example hover color */\n}\n\n.btn-active {\n  background-color: #ff7f50; /* Active color in dark mode */\n}\n\n/* Dark mode styles */\n@media (prefers-color-scheme: dark) {\n  .btn {\n    color: #ffffff;\n    background-color: #333333;\n  }\n\n  .btn:hover {\n    background-color: #555555; /* Example dark mode hover color */\n  }\n\n  .btn-active {\n    background-color: #ff7f50; /* Active color in dark mode */\n  }\n}\n</style>\n","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-10.use[1]!../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-10.use[2]!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./RecordingsPaginator.vue?vue&type=style&index=0&id=7ac11629&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./RecordingsPaginator.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./RecordingsPaginator.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./RecordingsPaginator.vue?vue&type=style&index=0&id=7ac11629&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-7ac11629\"]])\n\nexport default __exports__","import script from \"./ShowRecordingsModals.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ShowRecordingsModals.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n    <dialog id=\"confirmRecordingPlaybackModal\" class=\"modal\">\n      <div class=\"modal-box w-full items-center text-center text-black bg-white dark:bg-gray-800 dark:text-white\">\n        <form method=\"dialog\">\n          <button class=\"btn btn-sm btn-circle btn-ghost absolute right-2 top-2\">✕</button>\n        </form>\n        <h3 class=\"font-bold text-lg\"></h3>\n        <p class=\"py-4 text-xl mt-4\">Would you like to play the recording<br/> from\n          <span class=\"font-semibold\">{{ selectedRecording?.start_date_local }}</span>?</p>\n        <p class=\"my-2 text-left\" v-if=\"selectedRecording && selectedRecording.path\"><span\n            class=\"font-semibold\">Path: </span>{{ selectedRecording.path }}</p>\n        <p class=\"my-2 text-left\" v-if=\"selectedRecording && selectedRecording.comment\">\n          <span class=\"font-semibold\">Comment: </span>\n          <span>{{ selectedRecording.comment }}</span>\n        </p>\n        <button class=\"mt-4 btn\" @click=\"play\">Play</button>\n      </div>\n\n      <form method=\"dialog\" class=\"modal-backdrop\">\n        <button>close</button>\n      </form>\n    </dialog>\n\n    <dialog id=\"confirmAddToEpisodeModal\" class=\"modal\">\n      <div class=\"modal-box text-center text-black bg-white dark:bg-gray-800 dark:text-white\">\n        <form method=\"dialog\">\n          <button class=\"btn btn-sm btn-circle btn-ghost absolute right-2 top-2\">✕</button>\n        </form>\n        <h3 class=\"font-bold text-lg pt-8\">Add Recording To Episode</h3>\n        <p class=\"py-4\">We are working on this feature!</p>\n        <div class=\"modal-action\">\n          <form method=\"dialog\">\n            <button class=\"btn\">Okay</button>\n          </form>\n        </div>\n      </div>\n    </dialog>\n\n    <dialog id=\"confirmDownloadModal\" class=\"modal\">\n      <div class=\"modal-box text-center text-black bg-white dark:bg-gray-800 dark:text-white\">\n        <form method=\"dialog\">\n          <button class=\"btn btn-sm btn-circle btn-ghost absolute right-2 top-2\">✕</button>\n        </form>\n        <h3 class=\"font-bold text-lg pt-8\">Confirm Download</h3>\n        <p class=\"py-4\">Are you sure you want to download the recording?</p>\n        <div class=\"modal-action\">\n          <form method=\"dialog\" class=\"w-full flex justify-center\">\n            <button @click=\"beginDownload\" class=\"btn btn-info w-20\">Yes</button>\n          </form>\n        </div>\n      </div>\n    </dialog>\n\n    <dialog id=\"downloadStarted\" class=\"modal\">\n      <div class=\"modal-box text-center text-black bg-white dark:bg-gray-800 dark:text-white\">\n        <form method=\"dialog\">\n          <button class=\"btn btn-sm btn-circle btn-ghost absolute right-2 top-2\">✕</button>\n        </form>\n        <h3 class=\"font-bold text-lg pt-8\">Download Started</h3>\n        <p class=\"py-4\">Your recording is now downloading!</p>\n        <div class=\"modal-action\">\n          <form method=\"dialog\" class=\"w-full flex justify-center\">\n            <button class=\"btn\">Okay</button>\n          </form>\n        </div>\n      </div>\n    </dialog>\n\n    <dialog id=\"confirmSaveToPremiumModal\" class=\"modal\">\n      <div class=\"modal-box text-center text-black bg-white dark:bg-gray-800 dark:text-white\">\n        <form method=\"dialog\">\n          <button class=\"btn btn-sm btn-circle btn-ghost absolute right-2 top-2\">✕</button>\n        </form>\n        <h3 class=\"font-bold text-lg pt-8\">Save To Premium Storage</h3>\n        <p class=\"py-4\">We are working on this feature!</p>\n        <div class=\"modal-action\">\n          <form method=\"dialog\">\n            <button class=\"btn\">Okay</button>\n          </form>\n        </div>\n      </div>\n    </dialog>\n  </div>\n</template>\n\n<script setup>\nimport { computed } from 'vue';\nimport { useRecordingStore } from '@/Stores/RecordingStore';\n\nconst recordingStore = useRecordingStore();\n\nconst selectedRecording = computed(() => recordingStore.selectedRecording);\n\nconst beginDownload = () => {\n  recordingStore.downloadRecording();\n};\n\nconst play = () => {\n  recordingStore.openVideo();\n  document.getElementById('confirmRecordingPlaybackModal').close()\n};\n</script>\n","import script from \"./SelectedRecordingMeta.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./SelectedRecordingMeta.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n    <div v-if=\"recordingStore.isLoading\" class=\"flex w-fit mx-auto justify-center my-8\">\n      <span class=\"loading loading-spinner text-info text-lg\"></span>\n    </div>\n    <div v-else>\n      <div class=\"p-4 max-w-4xl mx-auto bg-white rounded-lg shadow-md\">\n        <div class=\"flex flex-col lg:flex-row lg:space-x-4 mt-2\">\n          <form @submit.prevent=\"updateRecording\" class=\"space-y-4 flex-1\">\n            <div>\n              <label for=\"title\" class=\"block text-sm font-medium text-gray-700\">Title</label>\n              <input id=\"title\" v-model=\"meta.title\" type=\"text\" class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring focus:ring-indigo-500 focus:ring-opacity-50\" />\n            </div>\n            <div>\n              <label for=\"notes\" class=\"block text-sm font-medium text-gray-700\">Notes</label>\n              <TabbableTextarea v-model=\"meta.notes\"\n                                class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring focus:ring-indigo-500 focus:ring-opacity-50\"\n                                name=\"notes\"\n                                id=\"notes\"\n                                rows=\"10\" cols=\"30\"\n              />\n            </div>\n            <div class=\"flex flex-col justify-start items-start\">\n              <div class=\"form-control\">\n                <label class=\"cursor-pointer label\">\n                  <input type=\"checkbox\" v-model=\"meta.good\" class=\"checkbox checkbox-info text-md\"/>\n                  <span class=\"label-text ml-2 block text-sm font-medium text-gray-700\">Good</span>\n                </label>\n              </div>\n              <div class=\"form-control\">\n                <label class=\"cursor-pointer label\">\n                  <input type=\"checkbox\" v-model=\"meta.ng\" class=\"checkbox checkbox-warning text-md\"/>\n                  <span class=\"label-text ml-2 block text-sm font-medium text-gray-700\">NG</span>\n                </label>\n              </div>\n            </div>\n            <div>\n              <label for=\"updated_by\" class=\"block text-sm font-medium text-gray-700\">Last Updated By</label>\n              <input id=\"updated_by\" v-model=\"meta.updated_by\" type=\"text\" class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring focus:ring-indigo-500 focus:ring-opacity-50\" readonly />\n            </div>\n            <div>\n              <label for=\"updated_at\" class=\"block text-sm font-medium text-gray-700\">Last Updated At</label>\n              <input id=\"updated_at\" v-model=\"meta.updated_at\" type=\"datetime-local\" class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring focus:ring-indigo-500 focus:ring-opacity-50\" readonly />\n            </div>\n            <button type=\"submit\" class=\"w-full py-2 px-4 bg-indigo-600 text-white font-semibold rounded-md shadow-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-opacity-50\">Save</button>\n          </form>\n          <div class=\"mt-4 lg:mt-0 lg:ml-4 max-w-lg bg-gray-50 p-4 rounded-lg shadow-sm flex-1\">\n            <div class=\"flex justify-between items-center mb-4\">\n              <h3 class=\"text-lg font-semibold\">Recording Details</h3>\n              <button @click.prevent=\"playRecording\" class=\"py-2 px-4 bg-green-600 text-white font-semibold rounded-md shadow-md hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-opacity-50\">Play</button>\n            </div>\n            <div v-if=\"selectedRecording\">\n              <p><strong>Comment:</strong> {{ selectedRecording.comment }}</p>\n              <p><strong>Stream Name:</strong> {{ selectedRecording.stream_name }}</p>\n              <p><strong>Path:</strong> {{ selectedRecording.path }}</p>\n              <p><strong>File Extension:</strong> {{ selectedRecording.file_extension }}</p>\n              <p><strong>Mime Type:</strong> {{ selectedRecording.mime_type }}</p>\n              <p><strong>Start DateTime:</strong> {{ formatDate(selectedRecording.start_dateTime) }}</p>\n              <p><strong>End DateTime:</strong> {{ formatDate(selectedRecording.end_dateTime) }}</p>\n              <p><strong>Bytes Recorded:</strong> {{ selectedRecording.bytes_recorded }} ({{ formatBytes(selectedRecording.bytes_recorded) }})</p>\n              <p><strong>Seconds Spent Recording:</strong> {{ selectedRecording.seconds_spent_recording }} ({{ formatSeconds(selectedRecording.seconds_spent_recording) }})</p>\n              <p><strong>Total Milliseconds Recorded:</strong> {{ selectedRecording.total_milliseconds_recorded }}</p>\n              <p><strong>Milliseconds First Packet:</strong> {{ selectedRecording.milliseconds_first_packet }}</p>\n              <p><strong>Milliseconds Last Packet:</strong> {{ selectedRecording.milliseconds_last_packet }}</p>\n              <p><strong>Reason for Exit:</strong> {{ selectedRecording.reason_for_exit }}</p>\n              <p><strong>Human Readable Reason for Exit:</strong> {{ selectedRecording.human_readable_reason_for_exit }}</p>\n              <p><strong>Mist Stream Wildcard ID:</strong> {{ selectedRecording.mist_stream_wildcard_id }}</p>\n              <p><strong>Model Type:</strong> {{ selectedRecording.model_type }}</p>\n              <p><strong>Model ID:</strong> {{ selectedRecording.model_id }}</p>\n              <p class=\"break-all\"><strong>Download URL:</strong> <a :href=\"selectedRecording.download_url\" target=\"_blank\">{{ selectedRecording.download_url }}</a></p>\n              <p class=\"break-all\"><strong>Share URL:</strong> <a :href=\"selectedRecording.share_url\" target=\"_blank\">{{ selectedRecording.share_url }}</a></p>\n              <p class=\"break-all\"><strong>Playback Stream Name:</strong> {{ selectedRecording.playback_stream_name }}</p>\n              <p><strong>Expires At:</strong> {{ selectedRecording.expires_at }}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, watch } from 'vue';\nimport { useRecordingStore } from '@/Stores/RecordingStore';\nimport { useUserStore } from '@/Stores/UserStore';\nimport TabbableTextarea from '@/Components/Global/TextEditor/TabbableTextarea.vue';\n\nconst recordingStore = useRecordingStore();\nconst userStore = useUserStore();\n\nconst selectedRecording = ref(null);\nconst meta = ref({\n  title: '',\n  notes: '',\n  updated_by: '',\n  updated_at: '',\n  good: false,\n  ng: false,\n});\n\nconst updateRecording = async () => {\n  await recordingStore.updateRecording(meta.value);\n};\n\nconst playRecording = () => {\n  document.getElementById('confirmRecordingPlaybackModal').showModal();\n};\n\n// Watch for changes in the selected recording\nwatch(() => recordingStore.selectedRecording, (newRecording) => {\n  if (newRecording) {\n    selectedRecording.value = newRecording;\n    meta.value = {...newRecording.meta};\n    if (meta.value.updated_at) {\n      // Format updated_at with user timezone and format string\n      meta.value.updated_at = userStore.formatDateInUserTimezone(meta.value.updated_at, \"YYYY-MM-DDTHH:mm\");\n    }\n  }\n}, { immediate: true });\n\n// Watch for changes in meta.good and meta.ng to ensure only one can be true\nwatch(() => meta.value.good, (newGood) => {\n  if (newGood) {\n    meta.value.ng = false;\n  }\n});\n\nwatch(() => meta.value.ng, (newNg) => {\n  if (newNg) {\n    meta.value.good = false;\n  }\n});\n// Format dates using userStore\nconst formatDate = (date) => {\n  return userStore.formatDateInUserTimezone(date, 'YYYY-MM-DD HH:mm:ss');\n};\n\n// Format seconds to HH:MM:SS\nconst formatSeconds = (seconds) => {\n  const hrs = Math.floor(seconds / 3600);\n  const mins = Math.floor((seconds % 3600) / 60);\n  const secs = seconds % 60;\n  return `${hrs.toString().padStart(2, '0')}:${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n};\n\n// Format bytes to human readable format\nconst formatBytes = (bytes, decimals = 2) => {\n  if (bytes === 0) return '0 Bytes';\n  const k = 1024;\n  const dm = decimals < 0 ? 0 : decimals;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n};\n</script>\n","import script from \"./ShowRecordingsList.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ShowRecordingsList.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n    <div class=\"w-full bg-yellow-200 px-2 py-1\">\n      <span class=\"font-semibold uppercase\">⚠️ NOTICE: </span> The first time you playback a recording it will take a\n      long time to load. This only happens the first time!\n    </div>\n    <table class=\"min-w-full divide-y divide-gray-200\">\n      <RecordingsListHeader/>\n      <RecordingsListBody @open-modal=\"openModal\" @select-recording=\"scrollToRecordingDetails\"/>\n    </table>\n    <div class=\"flex flex-row flex-wrap w-full justify-center mt-6\">\n      <RecordingsPaginator\n          :totalPages=\"pagination.lastPage\"\n          :currentPage=\"pagination.currentPage\"\n          @update=\"handlePageChange\"\n      />\n    </div>\n\n    <div class=\"flex flex-col w-full justify-center mt-2\" id=\"recordingDetailsContainer\">\n      <div v-if=\"selectedRecording\">\n        <SelectedRecordingMeta/>\n      </div>\n      <div v-else class=\"pl-6\">\n        <span>No recording selected.</span>\n      </div>\n    </div>\n    <ShowRecordingsModals\n        :selectedRecording=\"selectedRecording\"\n        :nowPlayingRecordingId=\"nowPlayingRecordingId\"\n        @beginDownload=\"beginDownload\"\n        @play=\"play\"\n    />\n  </div>\n</template>\n\n<script setup>\nimport { computed, nextTick, onMounted, ref } from 'vue'\nimport { useRecordingStore } from '@/Stores/RecordingStore'\nimport RecordingsListHeader from '@/Components/Pages/ShowRecordings/RecordingsListHeader.vue'\nimport RecordingsListBody from '@/Components/Pages/ShowRecordings/RecordingsListBody.vue'\nimport RecordingsPaginator from '@/Components/Pages/ShowRecordings/RecordingsPaginator.vue'\nimport ShowRecordingsModals from '@/Components/Pages/ShowRecordings/ShowRecordingsModals.vue'\nimport SelectedRecordingMeta from '@/Components/Pages/ShowRecordings/SelectedRecordingMeta.vue'\n\nconst recordingStore = useRecordingStore()\n\nconst handlePageChange = (page) => {\n  recordingStore.fetchRecordings(page);\n  recordingStore.clearSelectedRecording();\n}\n\nconst pagination = computed(() => recordingStore.pagination)\n\nconst selectedRecording = computed(() => recordingStore.selectedRecording)\nconst nowPlayingRecordingId = computed(() => recordingStore.nowPlayingRecordingId)\n\nconst openModal = (modalId) => {\n  document.getElementById(modalId).showModal()\n}\n\nconst beginDownload = () => {\n  recordingStore.downloadRecording()\n  document.getElementById('downloadStarted').showModal()\n}\n\nconst play = () => {\n  recordingStore.openVideo()\n}\n\nconst scrollToRecordingDetails = () => {\n  nextTick(() => {\n    requestAnimationFrame(() => {\n      const topDiv = document.getElementById('recordingDetailsContainer');\n      if (topDiv) {\n        topDiv.scrollIntoView({ behavior: 'smooth' });\n      } else {\n        window.scrollTo({ top: 0, behavior: 'smooth' });\n      }\n    });\n  });\n}\n\nonMounted(() => {\n  recordingStore.reset()\n  recordingStore.fetchRecordings()\n})\n</script>\n","<template>\n\n  <Head :title=\"`Manage Show: ${props.show.name}`\"/>\n\n  <div id=\"topDiv\" class=\"place-self-center flex flex-col\">\n    <div class=\"min-h-screen bg-white text-black dark:bg-gray-900 dark:text-gray-50 rounded px-5\">\n\n      <Message v-if=\"appSettingStore.showFlashMessage\" :flash=\"$page.props.flash\"/>\n      <div class=\"alert alert-error mt-4 mx-3\"\n           v-if=\"showStore.errorMessage\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n        </svg>\n        <span>{{ showStore.errorMessage }}</span>\n        <button class=\"text-xs ml-12\" @click=\"showStore.errorMessage = ''\"> Close</button>\n      </div>\n\n      <header class=\"bg-gradient-to-r from-blue-100 via-white to-transparent p-4 text-black font-bold rounded-lg\">\n        <!--            <header class=\"wave-background p-4 text-black font-bold rounded-lg\">-->\n\n        <div class=\"flex justify-between mb-3 pt-6\">\n          <div class=\"font-bold mb-4 text-black align-bottom text-lg\">MANAGE SHOW</div>\n\n          <div class=\"flex flex-col\">\n            <div class=\"flex flex-row w-full justify-end mb-2\">\n              <button\n                  @click=\"appSettingStore.btnRedirect(`/teams/${team.slug}/manage`)\"\n                  class=\"px-4 py-2 mr-2 mb-2 h-fit text-white font-semibold bg-orange-500 hover:bg-orange-600 rounded-lg\"\n              >\n                <font-awesome-icon :icon=\"['fas', 'users-cog']\" class=\"hover:text-blue-800 mr-1\" /> Manage Team\n              </button>\n            </div>\n            <div class=\"flex flex-wrap-reverse justify-end gap-2\">\n              <button\n                  v-if=\"can.goLive\"\n                  @click=\"goLive\"\n                  class=\"px-4 py-2 h-fit text-white font-semibold bg-red-500 hover:bg-red-600 rounded-lg\"\n              >\n                <font-awesome-icon :icon=\"['fas', 'broadcast-tower']\" class=\"hover:text-blue-800 mr-1\" /> Go Live\n              </button>\n              <button\n                  @click=\"appSettingStore.btnRedirect(`/shows/${show.slug}`)\"\n                  class=\"px-4 py-2 h-fit text-white font-semibold bg-blue-500 hover:bg-blue-600 rounded-lg\"\n              >\n                <font-awesome-icon :icon=\"['fas', 'eye']\" class=\"hover:text-blue-800 mr-1\" /> View Show\n              </button>\n              <button\n                  v-if=\"teamStore.can.editShow\"\n                  @click=\"appSettingStore.btnRedirect(`/shows/${show.slug}/edit`)\"\n                  class=\"px-4 py-2 h-fit text-white font-semibold bg-blue-500 hover:bg-blue-600 rounded-lg\"\n              >\n                <font-awesome-icon :icon=\"['fas', 'pen']\" class=\"hover:text-blue-800 mr-1\" /> Edit Show\n              </button>\n\n              <DashboardButton class=\"\"/>\n\n            </div>\n          </div>\n\n        </div>\n\n        <ShowManageHeader\n            :show=\"props.show\"\n            :team=\"props.team\"\n            :can=\"can\"\n        />\n\n        <div class=\"flex justify-end mt-6\">\n\n\n        </div>\n      </header>\n\n      <div class=\"my-6 text-gray-100\">\n        <span class=\"uppercase text-xs font-semibold text-black\">SHOW NOTES: </span>\n        <span class=\"text-black light:text-black dark:text-white\">{{ props.show.notes }}</span>\n      </div>\n\n\n      <div class=\"flex flex-col\">\n        <div class=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\n          <div class=\"py-2 align-middle inline-block w-full sm:px-6 lg:px-8 space-y-4\">\n\n            <div @click=\"toggleComponent('showEpisodes')\"\n                 :class=\"{'rounded-t-lg': showStore.openComponent === 'showEpisodes', 'rounded-lg': showStore.openComponent !== 'showEpisodes'}\"\n                 class=\"accordion-header p-2 font-bold transition duration-300 ease-in-out transform focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 overflow-hidden shadow-lg bg-blue-100 hover:bg-blue-300 dark:hover:bg-blue-900 text-black hover:text-blue-900 dark:text-blue-100 dark:hover:text-white\">\n              <font-awesome-icon icon=\"fa-play-circle\" class=\"\"/>\n              Episodes\n            </div>\n            <div v-if=\"showStore.openComponent === 'showEpisodes'\">\n              <div class=\"mt-4 mb-12 pb-6 shadow overflow-auto border-b border-gray-200 sm:rounded-lg\">\n                <ManageShowEpisodesList />\n              </div>\n            </div>\n\n            <div @click=\"toggleComponent('showCredits')\"\n                 :class=\"{'rounded-t-lg': showStore.openComponent === 'showCredits', 'rounded-lg': showStore.openComponent !== 'showCredits'}\"\n                 class=\"accordion-header p-2 font-bold transition duration-300 ease-in-out transform focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 overflow-auto shadow-lg bg-blue-100 hover:bg-blue-300 dark:hover:bg-blue-900 text-black hover:text-blue-900 dark:text-blue-100 dark:hover:text-white\">\n              <font-awesome-icon icon=\"fa-clipboard-list\" class=\"\"/>\n              Credits and Assignments\n            </div>\n            <div v-if=\"showStore.openComponent === 'showCredits'\">\n              <div class=\"mt-4 mb-12 pb-6 shadow overflow-auto border-b border-gray-200 sm:rounded-lg\">\n                <div class=\"border-1 border-t mb-3 bg-blue-100 py-1 px-2 text-xs font-semibold text-red-800\">\n                  In development. Not currently working.\n                </div>\n                <Link\n                    :href=\"`#`\"\n                    v-if=\"teamStore.can.createAssignment\">\n                  <button\n                      class=\"bg-green-500 hover:bg-green-600 text-white ml-2 my-2 px-4 py-2 rounded disabled:bg-gray-400 h-max w-max\"\n                      disabled\n                  >Create Assignment\n                  </button>\n                </Link>\n\n                <ShowCreditsList/>\n              </div>\n            </div>\n\n            <div @click=\"toggleComponent('showRecordings')\"\n                 :class=\"{'rounded-t-lg': showStore.openComponent === 'showRecordings', 'rounded-lg': showStore.openComponent !== 'showRecordings'}\"\n                 class=\"accordion-header p-2 font-bold transition duration-300 ease-in-out transform focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 overflow-auto shadow-lg bg-blue-100 hover:bg-blue-300 dark:hover:bg-blue-900 text-black hover:text-blue-900 dark:text-blue-100 dark:hover:text-white\">\n              <font-awesome-icon icon=\"fa-circle\" class=\"text-red-700\"/>\n              Recordings\n            </div>\n            <div v-if=\"showStore.openComponent === 'showRecordings'\">\n              <div class=\"mt-4 mb-12 pb-6 shadow overflow-auto border-b border-gray-200 sm:rounded-lg\">\n                <ShowRecordingsList :showRecordings=\"show.recordings\" :showName=\"show.name\" :showSlug=\"show.slug\"\n                                :showImage=\"show.image\"/>\n\n                <!--            </div>-->\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <ShowFooter :team=\"team\" :show=\"show\"/>\n    </div>\n  </div>\n\n</template>\n\n<script setup>\nimport { onBeforeUnmount, onMounted, onUnmounted, ref } from 'vue'\nimport { usePage } from '@inertiajs/vue3'\nimport { usePageSetup } from '@/Utilities/PageSetup'\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\nimport { useShowStore } from '@/Stores/ShowStore'\nimport { useTeamStore } from '@/Stores/TeamStore'\nimport { useGoLiveStore } from '@/Stores/GoLiveStore'\nimport ShowManageHeader from '@/Components/Pages/Shows/Layout/ShowManageHeader'\nimport ShowFooter from '@/Components/Pages/Shows/Layout/ShowFooter'\nimport ManageShowEpisodesList from '@/Components/Pages/Shows/Elements/ManageShowEpisodesList'\nimport ShowCreditsList from '@/Components/Pages/Shows/Elements/ManageShowCreditsList'\nimport Message from '@/Components/Global/Modals/Messages'\nimport DashboardButton from '@/Components/Global/Buttons/DashboardButton.vue'\nimport ShowRecordingsList from '@/Components/Pages/ShowRecordings/ShowRecordingsList.vue'\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome'\n\nusePageSetup('shows/slug/manage')\n\nconst appSettingStore = useAppSettingStore()\nconst showStore = useShowStore()\nconst teamStore = useTeamStore()\nconst goLiveStore = useGoLiveStore()\n\nconst toggleComponent = (componentName) => {\n  showStore.openComponent = showStore.openComponent === componentName ? null : componentName\n}\n\nconst page = usePage().props\n\nconst props = defineProps({\n  show: Object,\n  team: Object,\n  episodes: Object,\n  episodeStatuses: Object,\n  // filters: Object,\n  can: Object,\n})\n\nteamStore.setActiveTeam(props.team)\nteamStore.setActiveShow(props.show)\nteamStore.can = props.can\n\nconst currentUsers = ref([]);\n\nconst goLive = () => {\n  goLiveStore.reset()\n  goLiveStore.preSelectedShowId = props.show.id\n  appSettingStore.btnRedirect(`/golive`)\n}\n\nonMounted(() => {\n  showStore.initializeShow(props.show, props.episodes, props.episodeStatuses)\n  console.log(`Subscribing to channel creator.show.${props.show.id}`)\n\n  Echo.join(`creator.show.${props.show.id}`)\n      .here(async (users) => {\n        console.log('Users currently in the channel:', users)\n        currentUsers.value = users;\n        // Elect the leader (first user in the list)\n        if (users.length > 0) {\n          const leader = users[0];\n          showStore.setLeader(leader);\n          console.log(`Leader elected: ${leader.name}`);\n        }\n\n        console.log(showStore.isUpdatingSchedule, showStore.updatedBy)\n        // Check if the user is the only one in the channel\n        if (currentUsers.value.length === 1 && showStore.isUpdatingSchedule && showStore.updatedBy) {\n          try {\n            // Reset the isUpdatingSchedule and updatedBy fields\n            await axios.put(`/api/shows/${props.show.slug}/meta`, {\n              isUpdatingSchedule: false,\n              updatedBy: showStore.updatedBy,\n            });\n            console.log('isUpdatingSchedule and updatedBy fields reset');\n\n          } catch (error) {\n            console.error('Error updating meta:', error);\n          }\n        }\n      })\n      .joining((user) => {\n        console.log('User joined the channel:', user)\n        currentUsers.value.push(user);\n      })\n      .leaving((user) => {\n        console.log('User left the channel:', user)\n        currentUsers.value = currentUsers.value.filter(u => u.id !== user.id);\n\n        if (user.id === showStore.leader.id) {\n          console.log('Leader left, electing new leader');\n          // Elect a new leader if the current leader leaves\n          if (currentUsers.value.length > 0) {\n            const newLeader = currentUsers.value[0];\n            showStore.setLeader(newLeader);\n            console.log(`New leader elected: ${newLeader.name}`);\n          }\n        }\n        // If current user is still the leader, run the command\n        if (showStore.leader.id === page.user.id) {\n          axios.post(`/api/${props.show.slug}/user-left-channel`, {\n            user: user,\n            channel: `creator.show.${props.show.id}`,\n            showSlug: props.show.slug, // Pass the show slug\n          }).then(response => {\n            console.log('Successfully posted to user-left-channel:', response.data);\n          }).catch(error => {\n            console.error('Error posting to user-left-channel:', error);\n          });\n        }\n      })\n      .listen('.CreatorContentStatusUpdated', (event) => {\n        console.log('CreatorContentStatusUpdated event received:', event)\n        showStore.$patch({\n          isSaving: event.meta.isSaving,\n          isUpdatingSchedule: event.meta.isUpdatingSchedule,\n          updatedBy: event.meta.updatedBy,\n        })\n      })\n      .listen('.ShowScheduleDetailsUpdated', (event) => {\n        console.log('ShowScheduleDetailsUpdated event received:', event);\n        // Assuming `start_DateTime` needs to be transformed into `startTime`\n        const formattedStartTime = event.scheduleDetails.start_DateTime\n        showStore.scheduleDetails = {\n          ...event.scheduleDetails,\n          startTime: formattedStartTime\n        };\n        console.log('Updated scheduleDetails.startTime:', showStore.scheduleDetails.startTime);\n      })\n      .error((error) => {\n        console.error('Error subscribing to channel:', error);\n      });\n\n})\n\nonBeforeUnmount(() => {\n  // Echo.leave(`creator.show.${props.show.id}`);\n  Echo.leave(`creator.show.${props.show.id}`)\n\n  showStore.setUpdatingStatus(false, page.user.name, props.show.slug)\n\n  console.log(`Unsubscribed from channel creator.show.${props.show.id}`)\n  showStore.reset()\n})\n\n</script>\n\n\n<style scoped>\n@keyframes wave-bg {\n  0%, 100% {\n    background-color: #dbeafe; /* Original color */\n  }\n  50% {\n    background-color: #bfdbfe; /* Slightly lighter color */\n  }\n}\n\n.wave-background {\n  animation: wave-bg 5s infinite ease-in-out;\n  background-color: #dbeafe; /* Starting color */\n}\n\n\n</style>\n","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-10.use[1]!../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-10.use[2]!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./Manage.vue?vue&type=style&index=0&id=634399d8&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./Manage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Manage.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Manage.vue?vue&type=style&index=0&id=634399d8&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-634399d8\"]])\n\nexport default __exports__"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","initialState","displayEpisodeGoLiveComponent","isEpisode","episode","selectedEpisodeId","preSelectedShowId","selectedShowId","shows","streamKey","wildcardId","isLive","isRecording","streamInfo","rtmpUri","destinations","otherShowDestinations","loadingOtherDestinations","isLoadingDestinations","loadingDestinationId","processingRecordingChange","isProcessingDisableAllAutoPushes","playerIsReloading","pushDestinationFormSubmitProcessing","mistServerUri","previousStreamStatus","mistStreamPushDestinationFormModalMode","destinationDetails","useGoLiveStore","defineStore","state","actions","assign","this","fetchShows","_this","_callee","response","_context","axios","get","data","t0","generateStreamKey","_this2","_callee2","_context2","post","concat","stream_key","selectedShow","mist_stream_wildcard","mist_stream_wildcard_id","updateAndGetStreamKey","_show$mist_stream_wil","_this3","show","find","id","setSelectedShowId","showId","updateSelectedShow","_this4","goLive","stopLive","startRecording","_this5","_callee3","notificationStore","showSlug","_response$data","message","status","_context3","useNotificationStore","slug","stream_name","setToastNotification","stopRecording","_this6","_callee4","_response$data2","_context4","fetchStreamInfo","_this7","_callee5","_context5","fetchMistServerUri","streamName","error","success","fetchRtmpUri","_this8","_callee6","_context6","fetch","ok","text","clearStreamInfo","toggleDisplayEpisodeGoLiveComponent","_this$episode","show_id","updateEpisode","_this9","_callee7","videoAuxPlayerStore","uriResponse","_context7","useVideoAuxPlayerStore","setMistServerUri","reloadPlayer","_this10","_callee8","mistStream","_context8","loadMistStreamVideo","fetchOtherShowDestinations","_this11","_callee9","_context9","params","episodeId","console","copyDestinations","destinationIds","_this12","_callee10","payload","_context10","mistStreamWildcardId","log","fetchPushDestinations","_this13","_callee11","_response$data3","_context11","backgroundFetch","recording","backgroundFetchPushDestinations","_this14","_callee12","_context12","deleteDestination","destinationId","_this15","_callee13","_context13","confirm","filter","destination","setGeneralServiceNotification","startPush","fullPushUri","_this16","_callee14","_response$data4","index","_context14","destination_id","full_push_uri","findIndex","push_is_started","stopPush","_this17","_callee15","_response$data5","_context15","enableAutoPush","_this18","_callee16","_response$data6","_context16","has_auto_push","disableAutoPush","_this19","_callee17","_response$data7","_context17","disableAllAutoPushes","_this20","_callee18","_response$data8","_context18","getters","_show$mist_stream_wil2","_show$mist_stream_wil3","_show$mist_stream_wil4","is_recording","fullRtmpUri","fullUrl","activeDestinations","sourceName","_state$selectedShow","_state$episode","streamOffline","_state$streamInfo$err","_state$streamInfo","dayjs","utc","timezone","recordings","pagination","currentPage","lastPage","total","selectedRecording","nowPlayingRecording","nowPlayingRecordingId","isLoading","showCopyMessage","copyMessage","useRecordingStore","fetchRecordings","_arguments","_showStore$show","page","showStore","undefined","useShowStore","current_page","last_page","updateRecording","meta","_this2$selectedRecord","updatedRecording","patch","formatDateInUserTimezone","date","useUserStore","formatTimeFromDateInUserTimezone","formatDuration","totalMilliseconds","seconds","Math","floor","minutes","hours","paddedHours","toString","padStart","paddedMinutes","paddedSeconds","setSelectedRecording","clearSelectedRecording","openVideo","videoPlayerStore","appSettingStore","nowPlayingStore","source","useVideoPlayerStore","useAppSettingStore","useNowPlayingStore","mediaType","playback_stream_name","sourceType","loadNewVideo","toggleOttInfo","setActiveMedia","primaryName","secondaryName","start_time","description","comment","primaryUrl","image","downloadRecording","url","download_url","downloadLink","document","createElement","href","body","appendChild","click","removeChild","formattedRecordings","userStore","map","_objectSpread","start_date_local","start_dateTime","tz","format","start_time_local","end_time_local","end_dateTime","ownKeys","getOwnPropertySymbols","getOwnPropertyDescriptor","_defineProperty","getOwnPropertyDescriptors","defineProperties","toPrimitive","String","Number","_toPrimitive","_toPropertyKey","team","contributors","members","managers","teamOwner","teamLeader","can","totalSpots","memberSpots","activeShow","activeEpisode","showModal","Boolean","confirmDialog","confirmManagerDialog","selectedManagerName","selectedManagerId","addManager","removeManager","deleteMemberName","deleteMemberId","noteEdit","note","noteKey","saveNoteProcessing","goLiveDisplay","openComponent","nextBroadcastLoaded","scheduleIndexId","broadcastDate","broadcastDetails","category","subCategory","nextBroadcastZoomLink","useTeamStore","initializeTeam","Array","isArray","nextBroadcast","firstBroadcast","zoomLink","broadcast","convertUtcToUserTimezone","initializeShows","initializeContributors","setCan","setActiveTeam","setActiveShow","setActiveEpisode","addMember","member","removeMember","memberId","updateCreatorTeams","creatorId","teamId","remove","creator","creators","teams","is_manager","deleteTeamMemberCancel","confirmTeamManagerCancel","deleteTeamMember","user_id","team_id","route","addTeamManager","team_slug","manager","removeTeamManager","toggleGoLiveDisplay","fetchTeamMembers","setCreators","updatePublicMessage","html","public_message","spotsRemaining","max","membersCount","membersCountDisplay","today","reduce","closest","abs","nextBroadcastIsOver","nowInUserTimezone","broadcastEndTime","add","duration_minutes","isAfter","sortedBroadcasts","sort","b","diff","localDate","futureBroadcasts","player","eventListenersAttached","videoPlayerLoaded","class","videoContainerClass","videoSourceIdSrc1","videoSourceIdSrc2","videoSourceIdSrc3","videoSourceTypeSrc1","videoSourceTypeSrc2","videoSourceTypeSrc3","firstPlayVideoSourceType","firstPlayVideoSource","key","videoName","videoSource","videoSourceType","videoPoster","nextSource","previousSource","currentView","currentChannelId","currentChannelName","currentShow","currentShowEpisode","currentVideo","hasVideo","controls","muted","paused","currentTime","duration","formattedTime","blue","videoIsYoutube","videoUploadComplete","getMistServerUri","setPlayer","playerInstance","initializePlayer","attachEventListeners","nextTick","useAudioStore","ensureAudioContextAndNodesReady","ready","play","on","handleTimeUpdate","handleFullscreenChange","handlePlay","handlePause","handleError","detachEventListeners","stopAudioLevelMonitoring","off","disposePlayer","dispose","prepareForNewVideoSource","resetPlayback","pause","durationInSeconds","part","join","_this$player","isFullscreen","_this$player2","_this$player3","_this$player4","code","makeBlue","toggleMute","unMute","mute","togglePlay","videoJs","videojs","load","loadNewLiveSource","fullSourceUrl","src","back","fullscreen","requestFullscreen","getVideoCurrentTime","videoCurrentTime","getSourceDetails","videoSrc","video_url","cdn_endpoint","cloud_folder","folder","file_name","audioStore","_this$getSourceDetail","deferAudioSetup","playNewVideo","loadNewSourceFromYouTube","useChannelStore","clearChannel","loadNewLiveSourceFromRumble","loadNewSourceFromUrl","loadNewSourceFromMist","loadNewSourceFromFile","filePath","loadExternalSourceVideo","loadPlaylistVideos","stayMuted","shouldUnmute","basePath","loadVideoFromFile","video","setNowPlayingInfoVideoFile","nowPlayingType","nowPlayingName","useStreamStore","currentChannel","setNowPlayingInfoShow","clearNowPlayingInfo","firstPlayVideo","setName","setEpisodeUrl","setUrl","setEpisodeName","makeVideoPiP","makeVideoFullPage","fullPage","hidePage","ott","isMobile","makeVideoTopRight","currentPageIsStream","makeVideoWelcomePage","loggedIn","usePageSetup","pageName","showFlashMessage","pageIsHidden","window","innerWidth","showOttButtons","pageReload","pageWasReloaded","location","reload","router","event","search","shouldScrollToTop","requestAnimationFrame","topDiv","getElementById","scrollIntoView","behavior","scrollTo","setPrevUrl","noLayout","watch","isSmallScreen","newValue","immediate","___CSS_LOADER_EXPORT___","module","roundedNow","props","__props","emits","__emit","effectiveTimezone","ref","selectedDate","minute","second","startOf","attrs","dot","dates","rules","interval","newDate","convertedNewDate","newTimezone","onMounted","clearDate","inputValue","highlight","Date","_ref2","_slicedToArray","clearFlashMessage","computed","flash","warning","_ref","savedScrollPosition","saveScrollPosition","scrollY","emit","onInput","target","onTabPress","textarea","val","start","selectionStart","end","selectionEnd","substring","getFullYear","usePage","errors","closeModal","close","removeFromSchedule","AddShowToSchedule","defineAsyncComponent","addShowToScheduleObserver","changeScheduleObserver","nextBroadcastDate","now","scheduleDetails","broadcastDates","broadcastDatesObj","JSON","parse","upcomingDates","dateStr","toISOString","isFutureBroadcast","startTime","watchModal","modalId","onClose","modalElement","observer","MutationObserver","mutationsList","_step","_iterator","_createForOfIteratorHelper","mutation","attributeName","hasAttribute","err","observe","attributes","openAddShowToScheduleModal","setUpdatingStatus","user","openChangeScheduleModal","isUpdatingSchedule","updatedBy","onBeforeUnmount","disconnect","teamStore","relativeTime","convertedDate","watchEffect","scheduledDateTime","dialogId","setDateTime","openEpisodeStatuses","cancelScheduleEpisode","handleScheduledDateTime","selectedScheduledDateTime","updateScheduledDateTime","formattedScheduledDateTime","dateTime","userTimezone","convertToTimeZone","changeEpisodeStatus","_x","_x2","_changeEpisodeStatus","statusId","updatedEpisode","episodeIndex","episode_id","new_status_id","scheduled_release_dateTime","alert","episodes","ep","episodeStatusId","episode_status_id","scheduledReleaseDateTime","episodeStatuses","episodeStatus","errorMessage","closeModals","episodeStatusClass","form","useForm","notes","episodeNote","closeNote","saveNote","focus","releaseDateTime","formatLongDateTimeFromUtcToUserTimezone","timezoneAbbreviation","componentKey","reloadNote","editNote","deleteShowEpisode","episodeIsBeingDeleted","statusText","options","locals","_createElementVNode","script","_createElementBlock","_hoisted_1","_hoisted_4","_hoisted_3","recordingStore","reactive","hoveredRow","confirmAddToEpisode","confirmSaveToPremium","rowClass","recordingId","_recordingStore$selec","shareUrl","navigator","clipboard","writeText","setTimeout","beginDownload","title","updated_by","updated_at","good","ng","playRecording","newRecording","newGood","newNg","formatDate","formatBytes","bytes","decimals","dm","parseFloat","pow","toFixed","hrs","mins","secs","handlePageChange","openModal","scrollToRecordingDetails","top","goLiveStore","toggleComponent","componentName","currentUsers","btnRedirect","initializeShow","Echo","here","users","leader","setLeader","put","joining","leaving","newLeader","channel","listen","$patch","isSaving","formattedStartTime","start_DateTime","leave"],"sourceRoot":""}
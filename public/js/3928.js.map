{"version":3,"file":"js/3928.js","mappings":"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","sources":["webpack://nottvbeta/./resources/js/Stores/ChannelPlaylistStore.js","webpack://nottvbeta/./resources/js/Utilities/TimeUtils.js","webpack://nottvbeta/./resources/js/Stores/ScheduleStore.js","webpack://nottvbeta/./resources/js/Utilities/PageSetup.js","webpack://nottvbeta/./resources/js/Components/Global/Calendar/MonthView.vue?59eb","webpack://nottvbeta/./resources/js/Components/Global/Calendar/ThreeDayView.vue?efc6","webpack://nottvbeta/./resources/js/Components/Global/Calendar/TodayView.vue?9920","webpack://nottvbeta/./resources/js/Components/Global/Calendar/WeekView.vue?3b61","webpack://nottvbeta/./resources/js/Components/Pages/Admin/Channels/SourceSelector.vue?73a9","webpack://nottvbeta/./resources/js/Pages/Admin/Schedule/Index.vue?8147","webpack://nottvbeta/./resources/js/Components/Global/Calendar/TodayView.vue","webpack://nottvbeta/./resources/js/Components/Global/Calendar/TodayView.vue?9ee3","webpack://nottvbeta/./resources/js/Components/Global/Calendar/TodayView.vue?ee4f","webpack://nottvbeta/./resources/js/Components/Global/MistStreams/AddOrUpdateMistStreamModal.vue?ba39","webpack://nottvbeta/./resources/js/Components/Global/MistStreams/AddOrUpdateMistStreamModal.vue","webpack://nottvbeta/./resources/js/Components/Global/Modals/Messages.vue?dfe9","webpack://nottvbeta/./resources/js/Components/Global/Modals/Messages.vue","webpack://nottvbeta/./resources/js/Components/Global/Paginators/Pagination.vue?0305","webpack://nottvbeta/./resources/js/Components/Global/Paginators/Pagination.vue","webpack://nottvbeta/./resources/js/Components/Pages/Admin/AdminHeader.vue?239a","webpack://nottvbeta/./resources/js/Components/Pages/Admin/AdminHeader.vue","webpack://nottvbeta/./resources/js/Components/Pages/Admin/Channels/DynamicModal.vue?a432","webpack://nottvbeta/./resources/js/Components/Pages/Admin/Channels/DynamicModal.vue","webpack://nottvbeta/./resources/js/Components/Pages/Admin/Channels/SourceSelector.vue","webpack://nottvbeta/./resources/js/Components/Pages/Admin/Channels/SourceSelector.vue?2f00","webpack://nottvbeta/./resources/js/Components/Pages/Admin/Channels/SourceSelector.vue?98e8","webpack://nottvbeta/./resources/js/Jetstream/Label.vue","webpack://nottvbeta/./resources/js/Components/Global/Calendar/MonthView.vue","webpack://nottvbeta/./resources/js/Components/Global/Calendar/MonthView.vue?1158","webpack://nottvbeta/./resources/js/Components/Global/Calendar/MonthView.vue?bbfc","webpack://nottvbeta/./resources/js/Components/Global/Calendar/WeekView.vue?66b0","webpack://nottvbeta/./resources/js/Components/Global/Calendar/WeekView.vue","webpack://nottvbeta/./resources/js/Components/Global/Calendar/ThreeDayView.vue?cf08","webpack://nottvbeta/./resources/js/Components/Global/Calendar/ThreeDayView.vue","webpack://nottvbeta/./resources/js/Pages/Admin/Schedule/Index.vue","webpack://nottvbeta/./resources/js/Pages/Admin/Schedule/Index.vue?a466","webpack://nottvbeta/./resources/js/Pages/Admin/Schedule/Index.vue?a503"],"sourcesContent":["import { defineStore } from 'pinia'\nimport dayjs from 'dayjs'\nimport timezone from 'dayjs/plugin/timezone'\nimport utc from 'dayjs/plugin/utc'\nimport isSameOrBefore from 'dayjs/plugin/isSameOrBefore'\nimport isSameOrAfter from 'dayjs/plugin/isSameOrAfter'\nimport { useNotificationStore } from '@/Stores/NotificationStore'\nimport { useUserStore } from '@/Stores/UserStore'\nimport { useAdminStore } from '@/Stores/AdminStore'\nimport { router } from '@inertiajs/vue3'\n\ndayjs.extend(utc)\ndayjs.extend(timezone)\ndayjs.extend(isSameOrBefore)\ndayjs.extend(isSameOrAfter)\n\nconst initialState = () => ({\n    playlists: [],\n    selectedPlaylist: null,\n    scheduleItems: [],\n    gaps: [],\n    startTime: dayjs().format('YYYY-MM-DDTHH:mm'),\n    endTime: dayjs().add(24, 'hour').format('YYYY-MM-DDTHH:mm'),\n    contentItems: [],\n    contentFetched: false,\n    currentPage: 1,\n    totalPages: 1,\n    searchQuery: '',\n    showModal: false,\n    loading: false,\n    loadingSchedules: false,\n    processing: false,\n    error: null,\n    id: null,\n    name: '',\n    description: '',\n    url: '',\n    type: 'regular',\n    priority: 1,\n    repeat_mode: 'repeat_all',\n    next_playlist_id: null,\n})\n\nexport const useChannelPlaylistStore = defineStore('channelPlaylistStore', {\n    state: initialState,\n    actions: {\n        reset() {\n            // Reset the store to its original state (clear all data)\n            Object.assign(this, initialState())\n        },\n        openAddContentModal() {\n            this.showModal = true\n        },\n        closeAddContentModal() {\n            this.showModal = false\n        },\n        async fetchPlaylists() {\n            this.loading = true\n            try {\n                const response = await axios.get('/admin/channel-playlist/get-playlists')\n                this.playlists = response.data.playlists\n                const {message, status} = response.data\n                const notificationStore = useNotificationStore()\n                notificationStore.setToastNotification(message, status)\n            } catch (error) {\n                this.error = error.response ? error.response.data.message : error.message\n                const notificationStore = useNotificationStore()\n                notificationStore.setToastNotification(this.error, 'error')\n            } finally {\n                this.loading = false\n            }\n        },\n        async createPlaylist(playlist) {\n            if (!this.validateScheduleItems()) return false;\n\n            this.loading = true\n            try {\n                const response = await axios.post('/channelPlaylists', {\n                    ...playlist,\n                    scheduleItems: this.getValidScheduleItems(),\n                })\n                this.playlists.push(response.data.playlist)\n                this.showNotification(response.data)\n                this.reset()\n                return true\n            } catch (error) {\n                this.handleError(error)\n                return false\n            } finally {\n                this.loading = false\n            }\n        },\n        async updatePlaylist(playlist) {\n            const adminStore = useAdminStore();\n            playlist.scheduleItems = this.scheduleItems;\n\n            if (!this.validateScheduleItems(playlist.scheduleItems)) {\n                console.error('Invalid schedule items');\n                return false;\n            }\n\n            this.loading = true;\n            try {\n                const response = await axios.put(`/channelPlaylists/${playlist.id}`, playlist);\n                const index = this.playlists.findIndex(p => p.id === playlist.id);\n                if (index !== -1) {\n                    this.playlists[index] = response.data.playlist;\n                }\n\n                const adminIndex = adminStore.items.findIndex(item => item.id === playlist.id);\n                if (adminIndex !== -1) {\n                    adminStore.items[adminIndex] = {\n                        ...response.data.playlist,\n                        playlist_items: this.scheduleItems\n                    };\n                }\n                this.showNotification(response.data);\n                document.getElementById('updateChannelPlaylistModal').close();\n                this.clearError()\n                return true;\n            } catch (error) {\n                this.handleError(error);\n                return false;\n            } finally {\n                this.loading = false;\n            }\n        },\n\n        validateScheduleItems() {\n            const notificationStore = useNotificationStore()\n\n            // Check for conflicts\n            if (this.scheduleItems.some(item => item.conflict)) {\n                notificationStore.setGeneralServiceNotification('Conflict Detected', 'There are conflicts in the schedule items. Please resolve them before proceeding.')\n                return false\n            }\n\n            // Check for gaps\n            const items = this.scheduleItems.filter(item => !item.removed && item.type !== 'gap').sort((a, b) => dayjs(a.start_dateTime).isBefore(dayjs(b.start_dateTime)) ? -1 : 1)\n            for (let i = 0; i < items.length - 1; i++) {\n                if (dayjs(items[i].end_dateTime).isBefore(dayjs(items[i + 1].start_dateTime))) {\n                    notificationStore.setGeneralServiceNotification('Gap Detected', 'There are gaps in the schedule items. Please ensure there are no gaps before proceeding.')\n                    return false\n                }\n            }\n            return true\n        },\n\n        getValidScheduleItems() {\n            return this.scheduleItems.filter(item => !item.removed && item.type !== 'gap').sort((a, b) => dayjs(a.start_dateTime).isBefore(dayjs(b.start_dateTime)) ? -1 : 1)\n        },\n\n        showNotification(response) {\n            const { message, status } = response\n            const notificationStore = useNotificationStore()\n            notificationStore.setToastNotification(message, status)\n        },\n\n        handleError(error) {\n            const notificationStore = useNotificationStore();\n            const errorMessage = error.response ? error.response.data.message : error.message;\n            let errorDetails = error.response && error.response.data.details ? error.response.data.details : '';\n\n            // Check if errorDetails is a string and parse it to an object if necessary\n            if (typeof errorDetails === 'string') {\n                try {\n                    errorDetails = JSON.parse(errorDetails);\n                } catch (e) {\n                    // If parsing fails, wrap the errorDetails in an object\n                    errorDetails = { details: errorDetails };\n                }\n            }\n\n            // Aggregate validation error messages with HTML styling\n            let detailedErrorMessages = '<ul>';\n            for (const [field, messages] of Object.entries(errorDetails)) {\n                // Ensure messages is an array and join them into a string\n                const messageText = Array.isArray(messages) ? messages.join(', ') : messages;\n                detailedErrorMessages += `<li><strong>${field}:</strong> ${messageText}</li>`;\n            }\n            detailedErrorMessages += '</ul>';\n\n            // Display general error message with aggregated details\n            notificationStore.setGeneralServiceNotification('Validation Error', `${errorMessage}\\n${detailedErrorMessages}`);\n\n            this.error = errorMessage;\n        },\n\n        setPlaylistData(playlist) {\n            console.log('playlist:', playlist)\n            const userStore = useUserStore()\n\n            const startTime = dayjs.utc(playlist.start_dateTime).tz(userStore.timezone).format('YYYY-MM-DDTHH:mm')\n            const endTime = dayjs.utc(playlist.end_dateTime).tz(userStore.timezone).format('YYYY-MM-DDTHH:mm')\n\n            this.id = playlist.id\n            this.name = playlist.name\n            this.description = playlist.description\n            this.url = playlist.url\n            this.type = playlist.type\n            this.priority = playlist.priority\n            this.repeat_mode = playlist.repeat_mode\n            this.next_playlist_id = playlist.next_playlist_id\n            this.startTime = startTime\n            this.endTime = endTime\n\n            console.log('playlist.playlist_items:', playlist.playlist_items)\n\n            this.scheduleItems = playlist.playlist_items\n                .filter(item => {\n                    console.log('Filtering item:', item)\n                    return item !== null && item !== undefined\n                })\n                .map(item => {\n                    const mappedItem = {\n                        id: item.id,\n                        content_id: item.content_id,\n                        content_type: item.content_type,\n                        order: item.order,\n                        media_type: item.media_type,\n                        source_path: item.source_path,\n                        source_type: item.source_type,\n                        is_live: item.is_live,\n                        is_scheduled: item.is_scheduled,\n                        current_viewers_count: item.current_viewers_count,\n                        max_viewers_count: item.max_viewers_count,\n                        additional_sources: item.additional_sources,\n                        custom_playback_options: item.custom_playback_options,\n                        metadata: item.metadata,\n                        has_played: item.has_played,\n                        start_dateTime: item.start_dateTime,\n                        end_dateTime: item.end_dateTime,\n                        duration_minutes: item.duration_minutes,\n                        type: item.type,\n                        content: item.content,\n                    }\n                    console.log('Mapped item:', mappedItem)\n                    return mappedItem\n                })\n\n            console.log('this.scheduleItems:', this.scheduleItems)\n        },\n        async fetchSchedules() {\n            this.loadingSchedules = true\n            this.clearError()\n            const notificationStore = useNotificationStore()\n\n            if (!this.startTime || !this.endTime) {\n                notificationStore.setGeneralServiceNotification('Start and End Times Required', 'Please check the schedule start and end times.')\n                this.loadingSchedules = false\n                return\n            }\n\n            try {\n                const response = await axios.get(`/api/schedules`, {\n                    params: {\n                        startTime: this.startTimeUTC,\n                        endTime: this.endTimeUTC,\n                    },\n                })\n                // Push new items to the existing array with added attributes\n                this.scheduleItems.push(...response.data.items.map(item => ({\n                    ...item,\n                    removed: false,\n                    is_scheduled: true\n                })))\n                const {message, status} = response.data\n                notificationStore.setToastNotification(message, status)\n                this.updateConflicts()\n                this.loadingSchedules = false\n                return response.data // return the data to the caller\n            } catch (error) {\n                this.error = error.response ? error.response.data.message : error.message\n                notificationStore.setToastNotification(this.error, 'error')\n                this.loadingSchedules = false\n                throw error\n            }\n        },\n        removeItem(id) {\n            const item = this.scheduleItems.find(item => item.id === id)\n            if (item) {\n                item.removed = true\n                this.scheduleItems = [...this.scheduleItems]  // Trigger reactivity\n                this.updateConflicts()\n            }\n            this.clearError()\n        },\n        addItem(id) {\n            const item = this.scheduleItems.find(item => item.id === id)\n            if (item) {\n                item.removed = false\n                this.scheduleItems = [...this.scheduleItems]  // Trigger reactivity\n                this.updateConflicts()\n            }\n            this.clearError()\n        },\n        removeAllItems() {\n            this.scheduleItems = []\n            this.clearError()\n        },\n        clearRemovedItems() {\n            this.scheduleItems = this.scheduleItems.filter(item => !item.removed)\n            this.clearError()\n            this.recalculateIndexes()\n        },\n        recalculateIndexes() {\n            this.scheduleItems = this.scheduleItems.map((item, index) => ({...item, index}))\n        },\n        updateConflicts() {\n            const items = this.scheduleItems.filter(item => !item.removed)\n            items.sort((a, b) => dayjs(a.start_dateTime).isBefore(dayjs(b.start_dateTime)) ? -1 : 1)\n\n            for (let i = 0; i < items.length; i++) {\n                const currentItem = items[i]\n                currentItem.conflict = false\n            }\n\n            for (let i = 0; i < items.length; i++) {\n                const currentItem = items[i]\n                for (let j = i + 1; j < items.length; j++) {\n                    const nextItem = items[j]\n                    if (\n                        dayjs(currentItem.start_dateTime).isBefore(dayjs(nextItem.end_dateTime)) &&\n                        dayjs(currentItem.end_dateTime).isAfter(dayjs(nextItem.start_dateTime))\n                    ) {\n                        currentItem.conflict = true\n                        nextItem.conflict = true\n                    }\n                }\n            }\n        },\n        selectPlaylist(playlist) {\n            this.selectedPlaylist = playlist\n        },\n        removePlaylist(playlistId) {\n            router.delete(route('channelPlaylists.destroy', { channelPlaylist: playlistId }))\n        },\n        clearError() {\n            this.error = null\n        },\n        resolveConflicts() {\n            this.processing = true // Set processing flag\n            let conflictsResolved\n\n            do {\n                conflictsResolved = false\n\n                // Create a copy of the items array without removed items\n                let items = this.scheduleItems.filter(item => !item.removed)\n\n                for (let i = 1; i < items.length; i++) {\n                    const currentItem = items[i]\n\n                    if (!currentItem.conflict) continue\n\n                    for (let j = 0; j < i; j++) {\n                        const previousItem = items[j]\n\n                        if (previousItem.removed) continue\n\n                        // Check for conflict\n                        const currentStart = dayjs(currentItem.start_dateTime)\n                        const previousEnd = dayjs(previousItem.end_dateTime)\n                        const previousStart = dayjs(previousItem.start_dateTime)\n\n                        if (\n                            currentStart.isSame(previousStart) ||\n                            (currentStart.isBefore(previousEnd) && !currentStart.isSame(previousEnd))\n                        ) {\n                            // Resolve conflict based on priority and creation date\n                            if (currentItem.priority > previousItem.priority) {\n                                this.scheduleItems = this.scheduleItems.map(item =>\n                                    item.id === currentItem.id ? {...item, removed: true} : item,\n                                )\n                                conflictsResolved = true\n                                break\n                            } else if (currentItem.priority < previousItem.priority) {\n                                this.scheduleItems = this.scheduleItems.map(item =>\n                                    item.id === previousItem.id ? {...item, removed: true} : item,\n                                )\n                                conflictsResolved = true\n                                break\n                            } else {\n                                if (dayjs(currentItem.created_at).isAfter(dayjs(previousItem.created_at))) {\n                                    this.scheduleItems = this.scheduleItems.map(item =>\n                                        item.id === currentItem.id ? {...item, removed: true} : item,\n                                    )\n                                    conflictsResolved = true\n                                    break\n                                } else {\n                                    this.scheduleItems = this.scheduleItems.map(item =>\n                                        item.id === previousItem.id ? {...item, removed: true} : item,\n                                    )\n                                    conflictsResolved = true\n                                    break\n                                }\n                            }\n                        }\n                    }\n\n                    if (conflictsResolved) break\n                }\n\n            } while (conflictsResolved)\n\n            this.updateConflicts()\n            // console.log('Finished processing conflicts')\n            this.processing = false // Clear processing flag\n        },\n\n        insertGaps() {\n            this.clearError()\n            // console.log('Start Time UTC:', this.startTimeUTC);\n            // console.log('End Time UTC:', this.endTimeUTC);\n\n            // Map schedule items to include dayjs objects for start and end times\n            const items = this.scheduleItems\n                .filter(item => !item.removed)\n                .map(item => ({\n                    ...item,\n                    start: dayjs(item.start_dateTime),\n                    end: dayjs(item.end_dateTime),\n                }))\n\n            // console.log('Items:', items);\n\n            this.gaps = []\n\n            if (items.length === 0) {\n                // console.log('No scheduled items, creating a single gap for the entire period.');\n                this.gaps.push({\n                    type: 'gap',\n                    start_dateTime: dayjs.utc(this.startTimeUTC).toISOString(),\n                    end_dateTime: dayjs.utc(this.endTimeUTC).toISOString(),\n                    duration_minutes: dayjs(this.endTimeUTC).diff(dayjs(this.startTimeUTC), 'minute'),\n                    id: `gap-${dayjs.utc(this.startTimeUTC).toISOString()}-${dayjs.utc(this.endTimeUTC).toISOString()}`,\n                    start: dayjs.utc(this.startTimeUTC),\n                    end: dayjs.utc(this.endTimeUTC),\n                })\n            } else {\n                this.checkForGapBeforeFirstItem(items)\n                this.checkForGapsBetweenItems(items)\n                this.checkForGapAfterLastItem(items)\n            }\n\n            // console.log('Gaps:', this.gaps);\n\n            // Add gaps to the schedule items and sort the list by start dateTime\n            this.scheduleItems = [...items, ...this.gaps].sort((a, b) => a.start.isBefore(b.start) ? -1 : 1)\n\n            // console.log('Final Schedule Items:', this.scheduleItems);\n        },\n\n\n        checkForGapBeforeFirstItem(items) {\n            // console.log('Checking for gap before the first item...')\n            if (items.length > 0 && dayjs.utc(this.startTimeUTC).isBefore(items[0].start)) {\n                const gapStart = dayjs.utc(this.startTimeUTC)\n                const gapEnd = items[0].start\n                const gapDuration = gapEnd.diff(gapStart, 'minute')\n                // console.log(`Creating gap before the first item: ${gapStart.toISOString()} to ${gapEnd.toISOString()}, duration: ${gapDuration} minutes`)\n\n                this.gaps.push({\n                    type: 'gap',\n                    start_dateTime: gapStart.toISOString(), // ISO 8601 string in UTC\n                    end_dateTime: gapEnd.toISOString(), // ISO 8601 string in UTC\n                    duration_minutes: gapDuration,\n                    id: `gap-${gapStart.toISOString()}-${gapEnd.toISOString()}`,\n                    start: gapStart,\n                    end: gapEnd,\n                })\n            } else {\n                // console.log('No gap before the first item.')\n            }\n        },\n\n        checkForGapsBetweenItems(items) {\n            // console.log('Checking for gaps between items...')\n            for (let i = 0; i < items.length - 1; i++) {\n                const currentItem = items[i]\n                const nextItem = items[i + 1]\n\n                const gapStart = currentItem.end\n                const gapEnd = nextItem.start\n\n                // console.log(`Current Item: ${currentItem.id}, End: ${currentItem.end.toISOString()}`)\n                // console.log(`Next Item: ${nextItem.id}, Start: ${nextItem.start.toISOString()}`)\n                // console.log(`Gap start: ${gapStart.toISOString()}, Gap end: ${gapEnd.toISOString()}`)\n\n                if (gapStart.isBefore(gapEnd)) {\n                    const gapDuration = gapEnd.diff(gapStart, 'minute')\n                    // console.log(`Creating gap between items: ${gapStart.toISOString()} to ${gapEnd.toISOString()}, duration: ${gapDuration} minutes`)\n\n                    this.gaps.push({\n                        type: 'gap',\n                        start_dateTime: gapStart.toISOString(), // ISO 8601 string in UTC\n                        end_dateTime: gapEnd.toISOString(), // ISO 8601 string in UTC\n                        duration_minutes: gapDuration,\n                        id: `gap-${gapStart.toISOString()}-${gapEnd.toISOString()}`,\n                        start: gapStart,\n                        end: gapEnd,\n                    })\n                } else {\n                    // console.log('No gap between these items.')\n                }\n            }\n        },\n\n        checkForGapAfterLastItem(items) {\n            // console.log('Checking for gap after the last item...');\n            if (items.length > 0) {\n                const lastItemEnd = items[items.length - 1].end\n                const endTime = dayjs.utc(this.endTimeUTC) // Ensure endTimeUTC is treated as UTC\n                // console.log(`Last Item End: ${lastItemEnd.toISOString()}, End Time: ${endTime.toISOString()}`);\n\n                // Check that last item ends before endTimeUTC\n                if (lastItemEnd.isBefore(endTime)) {\n                    const gapStart = lastItemEnd\n                    const gapEnd = endTime\n                    const gapDuration = gapEnd.diff(gapStart, 'minute')\n                    // console.log(`Creating gap after the last item: ${gapStart.toISOString()} to ${gapEnd.toISOString()}, duration: ${gapDuration} minutes`);\n\n                    this.gaps.push({\n                        type: 'gap',\n                        start_dateTime: gapStart.toISOString(), // ISO 8601 string in UTC\n                        end_dateTime: gapEnd.toISOString(), // ISO 8601 string in UTC\n                        duration_minutes: gapDuration,\n                        id: `gap-${gapStart.toISOString()}-${gapEnd.toISOString()}`,\n                        start: gapStart,\n                        end: gapEnd,\n                    })\n                } else {\n                    // console.log('No gap after the last item.');\n                }\n            } else {\n                // console.log('No items to check for gaps after.');\n            }\n        },\n        async fetchContent(contentType, maxDurationMinutes, startDateTime, page = 1, search = '') {\n            this.loading = true\n            this.clearError()\n            const notificationStore = useNotificationStore()\n\n            // Convert startDateTime from user's timezone to UTC\n            const startDateTimeUTC = dayjs(startDateTime).tz(dayjs.tz.guess()).utc().format('YYYY-MM-DDTHH:mm:ss[Z]')\n\n            // Log the parameters before making the request\n            // console.log('Fetching content with parameters:');\n            // console.log('Content Type:', contentType);\n            // console.log('Max Duration Minutes:', maxDurationMinutes);\n            // console.log('Start DateTime (User Timezone):', startDateTime);\n            // console.log('Start DateTime (UTC):', startDateTimeUTC);\n            // console.log('Page:', page);\n            // console.log('Search Query:', search);\n\n            try {\n                const response = await axios.get('/admin/channel-playlist/get-content', {\n                    params: {\n                        type: contentType,\n                        maxDurationMinutes: maxDurationMinutes,\n                        start_dateTime: startDateTimeUTC,\n                        page: page,\n                        search: search,\n                    },\n                })\n                console.log('Response data:', response.data)  // Log the response data\n                this.contentItems = response.data.items\n                this.currentPage = response.data.current_page\n                this.totalPages = response.data.total_pages\n                this.contentFetched = true\n                const {message, status} = response.data\n                notificationStore.setToastNotification(message, status)\n            } catch (error) {\n                this.error = error.response ? error.response.data.message : error.message\n                console.error('Error fetching content:', this.error)\n                notificationStore.setToastNotification(this.error, 'error')\n            } finally {\n                this.loading = false\n            }\n        },\n        addContentToSchedule(content) {\n            this.clearError()\n            this.scheduleItems.push(content)\n            this.scheduleItems = [...this.scheduleItems] // Trigger reactivity\n            this.removeGap(content.start_dateTime) // Remove the gap after adding content\n            this.insertGaps() // Update gaps after removing and adding content\n        },\n        removeGap(startDateTime) {\n            // console.log('removing gap...')\n            // console.log('start dateTime: ' + startDateTime)\n            this.scheduleItems = this.scheduleItems.filter(item => !(item.type === 'gap' && item.start_dateTime === startDateTime))\n        },\n        resetContent() {\n            this.contentItems = []\n            this.contentFetched = false\n            this.error = null\n            this.currentPage = 1\n            this.totalPages = 1\n            this.searchQuery = ''\n        },\n        setSearchQuery(query) {\n            this.searchQuery = query\n        },\n        setPage(page) {\n            this.currentPage = page\n        },\n    },\n\n    getters: {\n        startTimeUTC: state => {\n            return dayjs(state.startTime).utc().format('YYYY-MM-DDTHH:mm:ss[Z]')\n        },\n        endTimeUTC: state => {\n            return dayjs(state.endTime).utc().format('YYYY-MM-DDTHH:mm:ss[Z]')\n        },\n        scheduleItemsWithUserTimezone(state) {\n            const userStore = useUserStore()\n            const items = state.scheduleItems.map(item => {\n                return {\n                    ...item,\n                    start_dateTime: dayjs(item.start_dateTime).tz(userStore.timezone).format('YYYY-MM-DDTHH:mm:ssZ'),\n                    end_dateTime: dayjs(item.end_dateTime).tz(userStore.timezone).format('YYYY-MM-DDTHH:mm:ssZ'),\n                }\n            })\n            items.sort((a, b) => dayjs(a.start_dateTime).isBefore(dayjs(b.start_dateTime)) ? -1 : 1)\n            return items\n        },\n        hasRemovedItems(state) {\n            return state.scheduleItems.some(item => item.removed)\n        },\n        conflictCount(state) {\n            return state.scheduleItems.filter(item => item.conflict && !item.removed).length\n        },\n        gapCount(state) {\n            const items = state.scheduleItems\n                .filter(item => !item.removed && item.type !== 'gap')\n                .map(item => ({\n                    start: dayjs(item.start_dateTime),\n                    end: dayjs(item.end_dateTime),\n                    conflict: item.conflict,\n                }))\n\n            let gaps = 0\n\n            // console.log('Calculating gaps...');\n            // console.log('Start Time UTC:', state.startTimeUTC);\n            // console.log('End Time UTC:', state.endTimeUTC);\n            // console.log('Items:', items);\n\n            // If there are no items, the entire period is a single gap\n            if (items.length === 0) {\n                // console.log('No scheduled items, entire period is a gap.');\n                return 1\n            }\n\n            // Check for gap before the first item\n            if (dayjs.utc(state.startTimeUTC).isBefore(items[0].start)) {\n                // console.log('Gap before the first item');\n                gaps++\n            } else {\n                // console.log('No gap before the first item');\n            }\n\n            // Check for gaps between adjacent items\n            for (let i = 0; i < items.length - 1; i++) {\n                const currentItem = items[i]\n                const nextItem = items[i + 1]\n\n                // console.log(`Current Item: ${currentItem.start.toISOString()}, End: ${currentItem.end.toISOString()}`);\n                // console.log(`Next Item: ${nextItem.start.toISOString()}, Start: ${nextItem.end.toISOString()}`);\n\n                // Only consider gaps if there are no conflicts\n                if (!currentItem.conflict && !nextItem.conflict && currentItem.end.isBefore(nextItem.start)) {\n                    // console.log('Gap between items');\n                    gaps++\n                } else {\n                    // console.log('No gap between these items');\n                }\n            }\n\n            // Check for gap after the last item\n            if (dayjs.utc(state.endTimeUTC).isAfter(items[items.length - 1].end)) {\n                // console.log('Gap after the last item');\n                gaps++\n            } else {\n                // console.log('No gap after the last item');\n            }\n\n            // console.log('Total gaps:', gaps);\n            return gaps\n        },\n\n\n    },\n})\n","// utilities/timeUtils.js\nimport dayjs from 'dayjs';\nimport utc from 'dayjs/plugin/utc';\nimport timezone from 'dayjs/plugin/timezone';\n\ndayjs.extend(utc);\ndayjs.extend(timezone);\n\n/**\n * Creates an array of Date objects representing time slots.\n *\n * This function generates a sequence of time slots starting from a specified\n * start time, continuing for a given number of hours, and spaced apart\n * by a specified interval in minutes.\n *\n * @param {Date} start - The start time from which to generate slots, as a Date object.\n * @param {number} [durationHours=4] - The total duration for which to generate slots, in hours.\n * @param {number} [intervalMinutes=30] - The interval between each slot, in minutes.\n * @param {string} timezone - The timezone in which the time slots will be calculated.\n * @returns {Date[]} An array of Date objects, each representing a time slot.\n *\n * Example:\n * If start is `new Date('2024-01-01T08:00:00Z')`, durationHours is 2, and intervalMinutes is 30,\n * the output will be an array of Date objects representing the times:\n * `08:00`, `08:30`, `09:00`, and `09:30`.\n */\nexport function createTimeSlots(start, durationHours = 4, intervalMinutes = 30, timezone) {\n    // console.log(`Creating time slots starting from ${start}, for ${durationHours} hours, every ${intervalMinutes} minutes in timezone ${timezone}.`);\n    let slots = [];\n    let startTime = dayjs(start).tz(timezone);  // Convert start time to the correct time zone\n    for (let i = 0; i < (durationHours * 60) / intervalMinutes; i++) {\n        let slotTime = startTime.add(i * intervalMinutes, 'minute').toDate();  // Generate slots in the correct time zone\n        slots.push(slotTime);  // Keep as Date object\n    }\n    return slots;\n}\n// export function createTimeSlots(start, durationHours = 4, intervalMinutes = 30) {\n//     let slots = [];\n//     let startTime = dayjs(start).tz(userStore.timezone);  // Convert start time to the correct time zone\n//     for (let i = 0; i < (durationHours * 60) / intervalMinutes; i++) {\n//         let slotTime = new Date(start.getTime() + i * intervalMinutes * 60000);\n//         slots.push(slotTime);  // Keep as Date object\n//     }\n//     return slots;\n// }\n\n","import { defineStore } from 'pinia'\nimport { useUserStore } from '@/Stores/UserStore'\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\nimport { useNotificationStore } from '@/Stores/NotificationStore'\nimport { createTimeSlots } from '@/Utilities/TimeUtils'\n// import {\n//     format,\n//     isToday,\n//     isTomorrow,\n//     isYesterday,\n//     startOfDay,\n// } from 'date-fns'\n\n// Import dayjs and its plugins\nimport dayjs from 'dayjs'\nimport isSameOrAfter from 'dayjs/plugin/isSameOrAfter'\nimport isSameOrBefore from 'dayjs/plugin/isSameOrBefore' // To check if the day is the same\nimport isToday from 'dayjs/plugin/isToday';\nimport isYesterday from 'dayjs/plugin/isYesterday';\nimport isTomorrow from 'dayjs/plugin/isTomorrow';\nimport timezone from 'dayjs/plugin/timezone'\nimport utc from 'dayjs/plugin/utc'\nimport weekOfYear from 'dayjs/plugin/weekOfYear' // For week start and end calculations\nimport advancedFormat from 'dayjs/plugin/advancedFormat'\nimport { router } from '@inertiajs/vue3' // For more complex formatting options\n\n// Extend dayjs with the plugins\ndayjs.extend(timezone)\ndayjs.extend(weekOfYear)\ndayjs.extend(isToday);\ndayjs.extend(isYesterday);\ndayjs.extend(isTomorrow);\ndayjs.extend(advancedFormat)\ndayjs.extend(utc)\ndayjs.extend(isSameOrAfter)\ndayjs.extend(isSameOrBefore)\n\nfunction convertScheduleToTimezone(scheduleData) {\n    const userStore = useUserStore() // Access the UserStore\n\n    return scheduleData.data.map(item => {\n        // Convert top-level start_time and end_time using UserStore methods\n        // console.log(`Original startTime for ${item.id}: ${item.startTime}`)\n        const startTimeInUserTz = item.start_dateTime ? userStore.formatDateTimeFromUtcToUserTimezone(item.start_dateTime, 'YYYY-MM-DD HH:mm:ss') : null\n        const endTimeInUserTz = item.end_dateTime ? userStore.formatDateTimeFromUtcToUserTimezone(item.end_dateTime, 'YYYY-MM-DD HH:mm:ss') : null\n        // Add debug logging to help trace conversion issues or confirm correct conversions\n        // console.log(`Converted startTime for ${item.id}: ${startTimeInUserTz}`)\n\n        return {\n            ...item,\n            start_dateTime: startTimeInUserTz,\n            end_dateTime: endTimeInUserTz,\n            timezone: userStore.timezone,\n        }\n    })\n}\n\n// Helper function to get dates within the next 6 hours from viewingWindowStart\nfunction getUpcomingContentDates(viewingWindowStart) {\n    let dates = []\n    let start = dayjs(viewingWindowStart) // Ensure viewingWindowStart is a Day.js object\n\n    for (let i = 0; i < 6; i++) {\n        // Add i hours to the start time, each time creating a new Day.js object\n        dates.push(start.add(i, 'hour').toDate()) // Convert to Date if necessary; otherwise keep as Day.js object\n    }\n    // console.log(1)\n    return dates\n\n}\n\nconst getTimeZone = () => {\n    const userStore = useUserStore()\n    // This function should return the timezone of the user.\n    // This could be dynamic based on the user's settings or browser settings.\n    // return Intl.DateTimeFormat().resolvedOptions().timeZone;\n    // console.log(2)\n    return userStore.timezone\n}\n\nconst initialState = () => ({\n    baseTime: dayjs().tz(getTimeZone()),\n    currentHalfHour: dayjs().tz(getTimeZone()).startOf('hour').add(dayjs().minute() >= 30 ? 30 : 0, 'minute'),\n    fourHoursLater: dayjs().tz(getTimeZone()).startOf('hour').add(dayjs().minute() >= 30 ? 30 : 0, 'minute').add(4, 'hour'),\n    viewingWindowStart: dayjs().tz(getTimeZone()).startOf('hour'),\n    currentMonth: dayjs().tz(getTimeZone()).startOf('month'),\n    selectedDay: dayjs().tz(getTimeZone()),\n    currentWeekStart: dayjs().tz(getTimeZone()).startOf('week'),\n    currentWeekEnd: dayjs().tz(getTimeZone()).endOf('week'),\n    nextFourHoursOfContent: [],\n    nextFourHoursOfContentWithPlaceholders: [],\n    // nextFourHoursWithHalfHourIntervals: [],\n    // viewingMode: 'automatic', // or 'userSelected'\n    fiveDaySixHourSchedule: [], // Holds the schedule shows 5 day / 6 hour structured data\n    schedules: [], // this is our new schedules array, storing fetched schedule data\n    isLoading: true, // This flag indicates if data is currently being fetched\n    nextPage: 1, // This keeps track of the next page to fetch for pagination\n    hasMore: true, // This flag indicates if there are more schedules to fetch\n    todaysContent: [],\n    weeklyContent: [],\n    dataFetchLog: [],\n    savingToSchedule: false,\n    slotIntervalMinutes: 30,\n    mediumScreenSlotHours: 4, // 4 hours = 8 slots\n    smallScreenSlotHours: 2, // 2 hours = 4 slots\n    verySmallScreenSlotHours: 1, // 1 hour = 2 slots\n    timeSlots: [],\n    timeBanners: [\n        {id: 1, name: 'Early Morning', startTime: '04:00', duration: 2},\n        {id: 2, name: 'Morning', startTime: '06:00', duration: 6},\n        {id: 3, name: 'Afternoon', startTime: '12:00', duration: 5},\n        {id: 4, name: 'Prime Time', startTime: '17:00', duration: 3},\n        {id: 5, name: 'Late Prime Time', startTime: '20:00', duration: 3},\n        {id: 6, name: 'Late Night', startTime: '23:00', duration: 2}, // Spans midnight to 01:00\n        {id: 7, name: 'Overnight', startTime: '01:00', duration: 3}, // Spans from 01:00 to 04:00\n    ],\n})\n\nexport const useScheduleStore = defineStore('scheduleStore', {\n    state: initialState,\n    actions: {\n        resetAll() {\n            // Reset the store to its original state (clear all data)\n            Object.assign(this, initialState())\n            // console.log(3)\n        },\n        reset() {\n            this.baseTime = dayjs().tz(getTimeZone())\n            this.viewingWindowStart = dayjs().tz(getTimeZone()).startOf('hour')\n            this.currentMonth = dayjs().tz(getTimeZone()).startOf('month')\n            this.selectedDay = dayjs().tz(getTimeZone())\n            // console.log(4)\n        },\n        async setSelectedDay(day) {\n            // Ensure that 'day' is a Day.js object, convert if coming as a native Date or string\n            const selectedDay = dayjs(day)\n\n            // Set the selected day\n            this.selectedDay = selectedDay.toDate() // Convert back to Date if necessary; otherwise keep as Day.js object\n\n            // Explicitly set the viewingWindowStart to 4 AM for the selected day\n            this.viewingWindowStart = selectedDay.startOf('day').add(4, 'hours').toDate()\n\n            // Set the start and end of the week based on the selected day\n            this.currentWeekStart = selectedDay.startOf('week').toDate() // Consider week starting on Sunday\n            this.currentWeekEnd = selectedDay.endOf('week').toDate() // Consider week ending on Saturday\n\n            // Use the updated fetch logic\n            await this.fetchWeekDataIfNeeded()\n            // console.log(5)\n        },\n        setSelectedDayToToday(day) {\n            const now = dayjs()  // Create a Day.js object for the current date and time\n\n            // Set selectedDay to the current date and time\n            this.selectedDay = now.toDate() // Convert back to Date if necessary; otherwise keep as Day.js object\n\n            // Set viewingWindowStart to the start of the current hour using Day.js\n            this.viewingWindowStart = now.startOf('hour').toDate()\n            // console.log(6)\n        },\n        async changeDay(days) {\n            const currentTimeZone = getTimeZone() // or however you obtain the timezone\n            // Extract the time component from the current viewing window start\n            const currentTime = dayjs(this.viewingWindowStart).hour() * 60 + dayjs(this.viewingWindowStart).minute()\n\n            // Create a new day and set it to the start of that day\n            let newDay = dayjs(this.viewingWindowStart).tz(currentTimeZone).add(days, 'day').startOf('day')\n\n            // Set the time back to the original time\n            newDay = newDay.add(currentTime, 'minute')\n\n            // Depending on your application's needs, you may or may not need to convert it back to a JavaScript Date object\n            // If you need a Date object:\n            this.viewingWindowStart = newDay.toDate()\n\n            // If you can use dayjs objects directly (preferred if possible):\n            this.viewingWindowStart = newDay\n\n            // // Check if the week of the new day is already loaded\n            // const weekStart = startOfWeek(newDay, {weekStartsOn: 0});\n            // const weekEnd = endOfWeek(newDay, {weekStartsOn: 0});\n\n            // Use the updated centralized fetch logic without redundant checks\n            await this.fetchWeekDataIfNeeded()\n\n            // // Check for the need to load data for the new week\n            // if (this.needsDataForWeek(weekStart, weekEnd)) {\n            //     await this.loadWeekFromDate(newDay).catch(error => {\n            //         console.error(\"Failed to load data for the new week:\", error);\n            //     });\n            // }\n\n            // // Check for the need to load data for the new week\n            // if (!this.needsDataForWeek()) {\n            //     // Data for the current week has already been loaded; skip fetching\n            //     console.log(\"Data for the current week has already been loaded; skipping redundant fetch.\");\n            //     return;\n            // }\n            //\n            // // Proceed with data fetching if needed\n            // await this.checkAndFetchForUpcomingContent();\n            // console.log(7)\n        },\n        async shiftHours(hours) {\n            // Shift the viewing window by the specified number of hours\n            this.viewingWindowStart = dayjs(this.viewingWindowStart).add(hours, 'hour').toDate()\n\n            // Set the current week start and end based on the new viewing window start\n            this.currentWeekStart = dayjs(this.viewingWindowStart).startOf('week').toDate()\n            this.currentWeekEnd = dayjs(this.viewingWindowStart).endOf('week').toDate()\n\n            // If the day has changed, update selectedDay and the week's range\n            if (!dayjs(this.viewingWindowStart).isSame(dayjs(this.selectedDay), 'day')) {\n                this.selectedDay = dayjs(this.viewingWindowStart).startOf('day').toDate()\n            }\n\n            // Use the updated fetch logic\n            await this.fetchWeekDataIfNeeded()\n            // console.log(8)\n        },\n        isElevenPM(date) {\n            // Convert the date to a Day.js object if it's not already one\n            const time = dayjs(date)\n            // Check if the hour is 23 (11 PM)\n            // console.log(9)\n            return time.hour() === 23\n\n        },\n        // Actions to change the month\n        async subtractMonth() {\n            // Convert currentMonth to a Day.js object if it's not already and subtract one month\n            this.currentMonth = dayjs(this.currentMonth).subtract(1, 'month').toDate()\n\n            try {\n                // Pass the new currentMonth to setSelectedDay\n                await this.setSelectedDay(this.currentMonth)\n                // console.log('Set selected day based on current month:', this.currentMonth)\n            } catch (error) {\n                console.error(`Failed to set selected day based on current month ${this.currentMonth}:`, error)\n            }\n            // console.log(10)\n        },\n        async addMonth() {\n            // Convert currentMonth to a Day.js object if it's not already and add one month\n            this.currentMonth = dayjs(this.currentMonth).add(1, 'month').toDate()\n\n            try {\n                // Pass the new currentMonth to setSelectedDay\n                await this.setSelectedDay(this.currentMonth)\n                // console.log('Set selected day based on current month:', this.currentMonth)\n            } catch (error) {\n                console.error(`Failed to set selected day based on current month ${this.currentMonth}:`, error)\n            }\n            // console.log(11)\n        },\n        async fetchFiveDaySixHourSchedule() {\n            console.error('fetchFiveDaySixHourSchedule')\n            try {\n                const userStore = useUserStore()\n                const response = await axios.get('/api/schedule')\n\n                // Fallback to response timezone if userStore.timezone is not set\n                const timezone = userStore.timezone || response.data.userTimezone || 'UTC' // Additional fallback to 'UTC'\n\n                // Convert the entire schedule, including nested recurrenceDetails, to the user's timezone\n                this.fiveDaySixHourSchedule = convertScheduleToTimezone(response.data, timezone)\n                // console.error('fetchFiveDaySixHourSchedule', response.data)\n            } catch (error) {\n                console.error('Failed to load schedule shows:', error)\n                // Handle the error state as needed, e.g., setting an error state property\n            }\n            // console.log(12)\n        },\n        async fetchTodaysContent() {\n            try {\n                const userStore = useUserStore()\n                const response = await axios.get('/api/schedule/today')\n\n                // Fallback to response timezone if userStore.timezone is not set\n                const timezone = userStore.timezone || response.data.userTimezone || 'UTC' // Additional fallback to 'UTC'\n\n                this.todaysContent = convertScheduleToTimezone(response.data, timezone)\n            } catch (error) {\n                console.error('Failed to fetch today\\'s content:', error)\n            }\n            // console.log(13)\n        },\n        async preloadWeeklyContent() {\n            console.log('preloading weekly content...')\n            // Use the current date to preload content for the current week\n            const currentDate = dayjs(this.baseTime) // Creates a Day.js object representing the current date and time\n\n            try {\n                // Call loadWeekFromDate with the current Day.js date object\n                await this.loadWeekFromDate(currentDate) // loadWeekFromDate uses dayjs\n            } catch (error) {\n                console.error('Failed to preload weekly content:', error)\n            }\n            // console.log(14)\n        },\n        // this is our new fetch schedules method.\n        async fetchSchedules(startDate, endDate) {\n            this.isLoading = true\n            // console.log(`Loading schedule between: ${dayjs(startDate).format()} and ${dayjs(endDate).format()}`) // Log the date being requested\n            try {\n                const userStore = useUserStore()\n                const dayStartDate = dayjs(startDate)\n                const dayEndDate = dayjs(endDate)\n                const fullISOStartDate = dayStartDate.toISOString()\n                const fullISOEndDate = dayEndDate.toISOString()\n\n                const response = await axios.get(`/api/schedules/range?start=${fullISOStartDate}&end=${fullISOEndDate}`)\n                // console.log('fullISOStartDate: ' + fullISOStartDate)\n                // console.log('fullISOEndDate: ' + fullISOEndDate)\n                // const formattedStartDate = dayStartDate.format('YYYY-MM-DD') // For potential error messages and logging\n                // const formattedEndDate = dayEndDate.format('YYYY-MM-DD') // For potential error messages and logging\n                // console.log(`Loading schedule between: ${formattedStartDate} and ${formattedEndDate}`) // Log the date being requested\n                // console.log('Received response:', response.data) // Log the raw response data\n\n                // Fallback to response timezone if userStore.timezone is not set\n                const timezone = userStore.timezone || response.data.userTimezone\n\n                const newData = convertScheduleToTimezone(response.data, timezone) // Ensure you are accessing the correct data property from the response\n\n                // Merge newData into schedules, avoiding duplicates\n                // this.schedules = [...this.schedules, ...newData].filter((value, index, self) =>\n                //         index === self.findIndex((t) => (\n                //             t.id === value.id && t.startTime === value.startTime\n                //         )),\n                // )\n                // Merge newData into schedules, avoiding duplicates\n                this.schedules = [...new Set([...this.schedules, ...newData].map(item => JSON.stringify(item)))].map(item => JSON.parse(item));\n                // console.log('Updated schedules:', this.schedules); // Log the updated schedules\n\n                // Optionally update fetch logs or perform additional state updates\n                // this.updateFetchLogs(startDate) // this was designed to just log a week fetching at a time.\n\n            } catch (error) {\n                console.error('Failed to fetch schedules:', error)\n                this.isLoading = false\n                // console.log('012')\n            } finally {\n                this.isLoading = false\n                // console.log('Schedule loaded!')\n            }\n        },\n\n        async fetchMoreSchedules() {\n\n            // Prevent fetching if already loading or if there are no more schedules to fetch\n            if (this.isLoading || !this.hasMore) return;\n\n            this.isLoading = true;\n\n            try {\n                const lastSchedule = this.schedules[this.schedules.length - 1];\n                const startDate = lastSchedule ? dayjs(lastSchedule.start_dateTime).format('YYYY-MM-DD') : dayjs().format('YYYY-MM-DD');\n                const endDate = dayjs(startDate).add(7, 'day').format('YYYY-MM-DD'); // Fetch the next 7 days\n\n                await this.fetchSchedules(startDate, endDate);\n\n                // Check if new schedules were added\n                const newSchedules = this.schedules.slice(this.schedules.length - 1);\n                // If no new schedules are fetched, set hasMore to false\n                if (newSchedules.length === 0) {\n                    this.hasMore = false;\n                } else {\n                    // Increment the next page number for future fetches\n                    this.nextPage += 1;\n                }\n            } catch (error) {\n                console.error('Failed to fetch more schedules:', error);\n            } finally {\n                this.isLoading = false;\n            }\n        },\n\n        async loadWeekFromDate(date) {\n            let formattedDate = null // Declare formattedDate outside of the try block\n            this.isLoading = true\n            console.log('Loading week from date...')\n            try {\n                const userStore = useUserStore()\n                // Ensure the date is in UTC format for the request\n                // console.log('Date before formatted: ' + date)\n                // Convert date to Day.js object and format it in ISO string with UTC\n                const dayDate = dayjs(date)\n                const fullISODate = dayDate.toISOString()\n                // console.log(`Loading week data for date in UTC: ${fullISODate}`)\n\n                // Fetch the week's schedule data\n                // Send the dateTime and timezone as a JSON object in a POST request\n                const response = await axios.post(`/api/schedule/week/${fullISODate}`)\n\n                // const formattedDate = date.toISOString().split('T')[0];\n                // Log and error handling\n                const formattedDate = dayDate.format('YYYY-MM-DD') // For potential error messages and logging\n                // console.log(`Loading week data for date: ${formattedDate}`) // Log the date being requested\n                //\n                // const response = await axios.get(`/api/schedule/week/${formattedDate}`);\n                // console.log('Received response:', response.data) // Log the raw response data\n\n                // Fallback to response timezone if userStore.timezone is not set\n                const timezone = userStore.timezone || response.data.userTimezone\n                // console.log(`Using timezone: ${timezone}`) // Log the timezone being used\n\n                const newData = convertScheduleToTimezone(response.data, timezone) // Ensure you are accessing the correct data property from the response\n\n                // Merge newData into weeklyContent, avoiding duplicates\n                this.weeklyContent = [...this.weeklyContent, ...newData].filter((value, index, self) =>\n                        index === self.findIndex((t) => (\n                            t.id === value.id && t.start_dateTime === value.start_dateTime\n                        )),\n                )\n\n                // console.log('Updated weeklyContent:', this.weeklyContent) // Log the updated weekly content\n\n                // Optionally update fetch logs or perform additional state updates\n                this.updateFetchLogs(date)\n\n                this.isLoading = false\n                // console.log('Week from date loaded!')\n            } catch (error) {\n                console.error(`Failed to load content for week starting ${formattedDate}:`, error)\n                this.isLoading = false\n                // console.log('002')\n            }\n            // console.log(15)\n            // console.log('End of loadWeekFromDate function')\n        },\n        updateFetchLogs(date) {\n            // Convert date to a Day.js object if it's not already one\n            const dayDate = dayjs(date)\n\n            // Use Day.js to calculate the start and end of the week\n            const weekStart = dayDate.startOf('week').toISOString() // Assumes the week starts on Sunday\n            const weekEnd = dayDate.endOf('week').toISOString() // Assumes the week ends on Saturday\n            const fetchTime = dayjs().toISOString() // Current time in ISO format\n\n            // Find existing log entry for the week\n            const existingLogIndex = this.dataFetchLog.findIndex(log =>\n                log.weekStart === weekStart && log.weekEnd === weekEnd)\n\n            if (existingLogIndex !== -1) {\n                // Update the last fetch time if the log already exists\n                this.dataFetchLog[existingLogIndex].lastFetch = fetchTime\n            } else {\n                // Add a new log entry if it does not exist\n                this.dataFetchLog.push({weekStart, weekEnd, lastFetch: fetchTime})\n            }\n            // console.log(16)\n        },\n        needsDataForWeek() {\n            // Helper function to format dates to 'YYYY-MM-DD' for easier comparison\n            const formatISODate = (date) => dayjs(date).format('YYYY-MM-DD')\n\n            // Current week range in 'YYYY-MM-DD' format\n            const weekStartStr = formatISODate(this.currentWeekStart)\n            const weekEndStr = formatISODate(this.currentWeekEnd)\n\n            // Enhanced logging for debugging\n            // console.log(`Current week range: ${weekStartStr} to ${weekEndStr}`)\n            // console.log('Existing data fetch log entries:', this.dataFetchLog)\n\n            // Iterate through the fetch log to check if the current week has been fetched\n            const weekHasBeenFetched = this.dataFetchLog.some(log => {\n                // Convert log dates to 'YYYY-MM-DD' format for comparison\n                const logWeekStartStr = formatISODate(log.weekStart)\n                const logWeekEndStr = formatISODate(log.weekEnd)\n\n                // Log each comparison for insight\n                // console.log(`Comparing to fetched range: ${logWeekStartStr} to ${logWeekEndStr}`)\n\n                return logWeekStartStr <= weekStartStr && logWeekEndStr >= weekEndStr\n            })\n\n            // Log the final determination\n            // console.log(`Week from ${weekStartStr} to ${weekEndStr} has ${weekHasBeenFetched ? '' : 'not '}been fetched.`)\n            // console.log(17)\n            return !weekHasBeenFetched\n        },\n        calculateExtendedEndForUpcomingContent() {\n            // Convert viewingWindowStart to a Day.js object if it's not already one\n            const baseStartTime = dayjs(this.viewingWindowStart)\n\n            // Extend by 6 hours to cover the upcoming content span\n            // Day.js handles date and time addition cleanly, returning a new Day.js object\n            const extendedEndTime = baseStartTime.add(6, 'hour')\n\n            // console.log(18)\n            // Return the extended end time as a Date object, if needed elsewhere as a Date\n            return extendedEndTime.toDate()\n        },\n        // Function to check for and fetch missing upcoming content\n        async checkAndFetchForUpcomingContent() {\n            const upcomingDates = getUpcomingContentDates(this.viewingWindowStart) // Assuming this returns Day.js objects\n            const now = dayjs()\n            const fifteenMinutesAgo = now.subtract(15, 'minutes')\n\n            for (const date of upcomingDates) {\n                const dayjsDate = dayjs(date); // Ensure date is a dayjs object\n                const dateString = dayjsDate.format('YYYY-MM-DD');  // Day.js format for 'YYYY-MM-DD'\n\n                const contentCoverageAndFreshness = this.weeklyContent.some(content => {\n                    const contentDate = dayjs(content.start_dateTime).format('YYYY-MM-DD')  // Convert and compare as 'YYYY-MM-DD'\n                    const lastFetchedTime = this.dataFetchLog[dateString]\n                    const isFresh = lastFetchedTime && dayjs(lastFetchedTime) > fifteenMinutesAgo\n                    return dateString === contentDate && isFresh\n                })\n\n                if (!contentCoverageAndFreshness) {\n                    // This date needs data fetching\n                    await this.fetchDataAndUpdateLog(dateString, date.toDate()) // Pass as Date if needed, or adjust downstream functions to accept Day.js objects\n                    break // Assuming you fetch data for the week, so no need to check further dates within the same week\n                }\n            }\n            // console.log(19)\n        },\n        async fetchDataAndUpdateLog(dateString, date) {\n            try {\n                // Assuming 'date' is already a Day.js object; if not, convert it\n                const dayDate = dayjs(date)\n\n                await this.loadWeekFromDate(dayDate.toDate())  // Pass as a Date if needed, or adjust 'loadWeekFromDate' to accept Day.js objects\n                // Successfully fetched, so update the log\n                this.dataFetchLog[dateString] = dayjs().toISOString()  // Use Day.js to get the current time in ISO format\n                // console.log('Data fetched successfully for date:', dateString)\n            } catch (error) {\n                console.error(`Failed to fetch data for date ${dateString}:`, error)\n            }\n            // console.log(20)\n        },\n\n        // Updated to use this.currentWeekStart and this.currentWeekEnd directly\n        async fetchWeekDataIfNeeded() {\n            // Assumes this.currentWeekStart and this.currentWeekEnd are already set\n            if (this.needsDataForWeek()) {\n                await this.checkAndFetchForUpcomingContent().catch(error => {\n                    console.error('Failed to load data for the week:', error)\n                    return false // Indicates failure to fetch when an error occurs\n                })\n            } else {\n                console.log('Week data already loaded; no need to fetch.')\n            }\n            // console.log(21)\n        },\n\n        // Function to simply update baseTime with the given time (expected to be a Day.js object or compatible input)\n        updateBaseTime(time) {\n            // Ensure the time is a Day.js object when setting baseTime\n            this.baseTime = dayjs(time).toDate()  // Convert to Date if necessary; consider keeping it as Day.js object if possible\n            // console.log(22)\n        },\n\n        // Function to set baseTime based on a new time input (expected to be a string, Date, etc.)\n        setBaseTime(newTime) {\n            // Convert newTime to a Day.js object and then to Date if necessary\n            this.baseTime = dayjs(newTime).toDate()  // This handles various input formats and ensures consistency\n            // console.log(23)\n        },\n\n\n        /**\n         * This method orchestrates the update of show scheduling data for the next four hours.\n         * It is designed to be triggered when there are changes to the base time or when a manual refresh is needed.\n         * The method handles loading and organizing the scheduling data to be ready for display in the grid.\n         */\n        async updateNextFourHours() {\n            // Set the loading state to true to indicate that data processing is underway.\n            // This can be used to display a loading spinner or disable user interaction temporarily.\n            this.isLoading = true\n\n            // Update the time range for the scheduling grid. This adjusts `currentHalfHour` and `fourHoursLater`\n            // based on the current `baseTime`. These values define the range of time for which shows will be displayed.\n            this.updateTimeRange()\n\n            // Update the time slots\n            this.setTimeSlots()\n\n            // Prepares the shows for the grid display by filtering, calculating grid slots,\n            // resolving conflicts, and optionally filling empty grid slots with placeholders.\n            // This step involves several functions that ensure shows are positioned correctly according to their\n            // start time, duration, and conflicts with other shows.\n            this.prepareShowsForGrid()\n\n            // Reset the loading state to false indicates that the data processing is complete.\n            // This allows the user interface to be interactive again and shows the updated data in the grid.\n            this.isLoading = false\n            // console.log(24)\n        },\n\n\n        updateTimeRange() {\n            // Ensure the baseTime is interpreted correctly in the current user's timezone\n            const baseDate = dayjs(this.baseTime).tz(getTimeZone())\n\n            // Calculate the rounded minutes to either 0 or 30 based on the current time\n            const roundedMinutes = baseDate.minute() < 30 ? 0 : 30\n\n            // Set the current half hour, rounding down to the nearest half-hour mark\n            let currentHalfHour = baseDate.minute(roundedMinutes).second(0).millisecond(0).startOf('minute')\n\n            // Adjust currentHalfHour to start 30 minutes earlier\n            currentHalfHour = currentHalfHour.subtract(30, 'minutes');\n\n            // Calculate four hours later from the current half-hour mark\n            const fourHoursLater = currentHalfHour.add(4, 'hours')\n\n            // Update the store's currentHalfHour and fourHoursLater ensuring they are Date objects if required\n            this.currentHalfHour = currentHalfHour.toDate()\n            this.fourHoursLater = fourHoursLater.toDate()\n            // console.log(25)\n\n            // console.log('Fetching shows between:', currentHalfHour.format('YYYY-MM-DD HH:mm:ss'), 'and', fourHoursLater.format('YYYY-MM-DD HH:mm:ss'))\n        },\n\n        initializeTimeSlots() {\n            this.timeSlots = createTimeSlots()\n        },\n\n        setTimeSlots() {\n            const appSettingStore = useAppSettingStore()\n            let slotHours\n\n            // Determine the number of slot hours based on screen size\n            if (appSettingStore.isVerySmallScreen) {\n                slotHours = this.verySmallScreenSlotHours\n            } else if (appSettingStore.isSmallScreen) {\n                slotHours = this.smallScreenSlotHours\n            } else {\n                slotHours = this.mediumScreenSlotHours\n            }\n\n            const intervalMinutes = this.slotIntervalMinutes\n            const slots = []\n            const totalSlots = (slotHours * 60) / intervalMinutes\n\n            // Ensure state.currentHalfHour is a Day.js object\n            const currentHalfHour = dayjs(this.currentHalfHour)\n\n            // Calculate the time for each slot using Day.js\n            for (let i = 0; i < totalSlots; i++) {\n                let slotTime = currentHalfHour.add(i * intervalMinutes, 'minute')\n                slots.push(slotTime.toDate())  // Convert back to JavaScript Date if necessary\n            }\n            this.timeSlots = slots\n            // console.log(26)\n            return slots.length\n        },\n\n        prepareShowsForGrid() {\n\n            if (!this.timeSlots || !Array.isArray(this.timeSlots) || this.timeSlots.length === 0) {\n                console.error('timeSlots is not properly initialized.')\n                // console.log(27)\n                // Handle this scenario, e.g., by initializing timeSlots, or skipping the update\n                return\n            }\n\n\n            // Step 1: Filter shows within the desired time range\n            const shows = this.filterShowsForTimeRange()\n\n            // Step 2: Calculate initial grid slots for these shows\n            const processedShows = this.calculateGridSlots(shows, this.timeSlots)\n\n            // Step 3: Process shows to set nowPlaying and comingUpNext flags\n            const showsWithStatusFlags = this.processShows(processedShows)\n\n            // Step 4: Update column occupancy and find the maximum row used\n            const {colOccupancy, maxRowUsed} = this.updateColumnOccupancy(showsWithStatusFlags, this.timeSlots.length)\n\n            // Step 5: Fill gaps in the grid with placeholders\n            const gridItems = this.fillGapsAndCreatePlaceholders(colOccupancy, maxRowUsed, this.timeSlots.length)\n\n            // Step 6: Combine processed shows with the placeholders\n            const combinedShows = [...showsWithStatusFlags, ...gridItems]\n\n            // Step 7: Sort and group shows by rows\n            this.nextFourHoursOfContent = this.sortShowsByPosition(combinedShows)\n            // console.log(28)\n        },\n\n        filterShowsForTimeRange() {\n            return this.schedules.filter(show => {\n                // Validate show data integrity\n                if (typeof show.start_dateTime !== 'string' || typeof show.duration_minutes !== 'number') {\n                    console.warn('Invalid show data:', show.start_dateTime, show.duration_minutes)\n                    // console.log(29)\n                    return false // Skip this show if it doesn't meet data expectations\n                }\n\n                const showStart = dayjs(show.start_dateTime)\n                const showEnd = dayjs(show.end_dateTime)\n                const isInTimeRange = showStart.isBefore(this.fourHoursLater) && showEnd.isAfter(this.currentHalfHour)\n\n                // Detailed logging for debugging\n                if (isInTimeRange) {\n                    const hasStarted = showStart.isBefore(this.currentHalfHour) ? 'already started' : 'starts within range'\n                    // console.log(`Show: ${show.content.name}, ${hasStarted}, Start: ${showStart.format('HH:mm:ss')}, End: ${showEnd.format('HH:mm:ss')}, Duration: ${show.duration_minutes}`)\n                }\n                // console.log(30)\n                return isInTimeRange\n            })\n        },\n\n        calculateGridSlots(shows, timeSlots) {\n            // Validate the timeSlots array to prevent errors\n            if (!Array.isArray(timeSlots) || timeSlots.length === 0) {\n                console.error('Invalid or empty timeSlots array')\n                // console.log(31)\n                return [] // Exit if no valid time slots to work with\n            }\n\n            // Determine the range of timeSlots\n            const firstTimeSlot = dayjs(timeSlots[0])\n            const lastTimeSlot = dayjs(timeSlots[timeSlots.length - 1]).add(30, 'minutes')\n\n\n            return shows.filter(show => {\n                const showStart = dayjs(show.start_dateTime)\n                const showEnd = dayjs(show.end_dateTime)\n                return showStart.isBefore(lastTimeSlot) && showEnd.isAfter(firstTimeSlot)\n            }).map(show => {\n                const showStart = dayjs(show.start_dateTime)\n                const showEnd = dayjs(show.end_dateTime)\n                // console.log('************************************')\n                // console.log(`Processing show: ${show.content.name}, Start: ${show.startTime}, End: ${show.endTime}`)\n\n                // Find the index of the slot where the show should start\n                let slotIndex = timeSlots.findIndex(slot => showStart.isSameOrBefore(dayjs(slot)))\n\n                // Adjust if the show starts exactly at a slot time or just after the last checked slot time\n                if (slotIndex === -1 || showStart.isAfter(dayjs(timeSlots[slotIndex]))) {\n                    slotIndex = Math.max(0, slotIndex)\n                }\n\n                // console.log(`Comparing show start ${showStart.format()} to timeSlot index ${slotIndex} at ${dayjs(timeSlots[slotIndex]).format()}`)\n\n                // Calculate the end slot index\n                let endSlotIndex = timeSlots.findIndex(slot => showEnd.isSameOrBefore(dayjs(slot).add(30, 'minutes')))\n\n                // If the end slot index points to a slot that starts after the show ends, subtract one\n                if (endSlotIndex !== -1 && showEnd.isBefore(dayjs(timeSlots[endSlotIndex]))) {\n                    endSlotIndex--\n                }\n\n                // Handle cases where the show ends after the last slot\n                if (endSlotIndex === -1 || showEnd.isSame(dayjs(timeSlots[timeSlots.length - 1]).add(30, 'minutes'))) {\n                    endSlotIndex = timeSlots.length - 1\n                }\n\n                // console.log(`Comparing show end ${showEnd.format()} to timeSlot index ${endSlotIndex} at ${endSlotIndex !== -1 ? dayjs(timeSlots[endSlotIndex]).format() : 'out of range'}`)\n\n\n                // Calculate the number of slots the show should span\n                let span = endSlotIndex - slotIndex + 1\n\n                // console.log(`Calculated gridStart: ${slotIndex + 1}, gridSpan: ${span}`)\n                // console.log(32)\n                return {\n                    ...show,\n                    gridStart: slotIndex + 1, // Convert to 1-based index for grid positioning\n                    gridSpan: span,\n                }\n            })\n        },\n\n        processShows(shows) {\n            let comingUpNextSet = false\n\n            shows.forEach(show => {\n                const start = dayjs(show.start_dateTime)\n                const end = start.add(show.duration_minutes, 'minutes')\n                const now = dayjs(this.baseTime)\n\n                // Determine if the show is now playing\n                show.nowPlaying = !show.placeholder && now.isAfter(start) && now.isBefore(end) && show.gridRow === 1\n\n                // Find the first show that starts in gridRow 1 and does not start in the first grid column\n                if (!comingUpNextSet && !show.placeholder && show.gridRow === 1 && now.isBefore(start)) {\n                    show.comingUpNext = true\n                    comingUpNextSet = true  // Ensure only one show gets this flag\n                } else {\n                    show.comingUpNext = false\n                }\n            })\n\n            return shows\n        },\n\n        updateColumnOccupancy(processedShows, cols) {\n            let colOccupancy = new Array(cols).fill(null).map(() => new Set())\n            let maxRowUsed = 0\n            processedShows.forEach(show => {\n                for (let i = show.gridStart - 1; i < show.gridStart - 1 + show.gridSpan; i++) {\n                    if (i >= 0 && i < cols) {\n                        colOccupancy[i].add(show.gridRow)\n                        maxRowUsed = Math.max(maxRowUsed, show.gridRow)\n                    }\n                }\n            })\n            // console.log(34)\n            return {colOccupancy, maxRowUsed}\n        },\n\n        fillGapsAndCreatePlaceholders(colOccupancy, maxRowUsed, cols) {\n            let gridItems = []\n            // Ensure at least one row is processed even if no shows are present\n            maxRowUsed = Math.max(maxRowUsed, 1)\n            for (let row = 1; row <= maxRowUsed; row++) {\n                gridItems.push(...this.findAndFillGapsForSingleRow(colOccupancy, row, cols))\n            }\n            // console.log(35)\n            return gridItems\n        },\n\n        findAndFillGapsForSingleRow(colOccupancy, row, cols) {\n            let gridItems = []\n\n            // Skip processing for even-numbered rows\n            // if (row % 2 === 0) {\n            //     return gridItems;\n            // }\n\n            let gapStart = -1\n            for (let i = 0; i < cols; i++) {\n                if (!colOccupancy[i].has(row)) {\n                    gapStart = gapStart === -1 ? i : gapStart\n                } else if (gapStart !== -1) {\n                    // Use different placeholders based on the row number\n                    if (row === 1) {\n                        gridItems.push(this.createPlaceholder(gapStart + 1, i - gapStart, row))\n                    } else {\n                        gridItems.push(this.createBlankSpotPlaceholder(gapStart + 1, i - gapStart, row))\n                    }\n                    gapStart = -1\n                }\n            }\n            if (gapStart !== -1) {\n                // Again, differentiate between the first row and other rows\n                if (row === 1) {\n                    gridItems.push(this.createPlaceholder(gapStart + 1, cols - gapStart, row))\n                } else {\n                    gridItems.push(this.createBlankSpotPlaceholder(gapStart + 1, cols - gapStart, row))\n                }\n            }\n            // console.log(36)\n            return gridItems\n        },\n\n        sortShowsByPosition(combinedShows) {\n            if (!Array.isArray(combinedShows)) {\n                console.error('Expected an array of shows, received:', combinedShows)\n                return [] // Return an empty array if not an array to prevent errors\n            }\n\n            // console.log(37)\n            // Sort shows directly by row and then by start position within each row\n            return combinedShows.sort((a, b) => a.gridRow - b.gridRow || a.gridStart - b.gridStart)\n        },\n\n        createPlaceholder(start, span, row) {\n            // console.log(38)\n            return {\n                placeholder: true,\n                startTime: 'placeholder',\n                priority: 0,\n                gridStart: start,\n                gridSpan: span,\n                gridRow: row,\n                content: {name: 'Nothing scheduled.'},\n            }\n        },\n\n        createBlankSpotPlaceholder(start, span, row) {\n            // console.log(39)\n            return {\n                placeholder: true,\n                startTime: 'placeholder',\n                priority: 0,\n                gridStart: start,\n                gridSpan: span,\n                gridRow: row,\n                content: {name: 'Blank Spot'}, // Ensure it is differentiated from normal placeholders\n            }\n        },\n        async purgeAllCaches() {\n            const notificationStore = useNotificationStore()\n            const scheduleStore = useScheduleStore()\n            scheduleStore.resetAll()\n            try {\n                const response = await axios.post('/admin/schedule/admin-reset-cache')\n                notificationStore.setToastNotification(response.data.message, response.data.type)\n            } catch (error) {\n                notificationStore.setToastNotification('Error purging caches.', 'error')\n            }\n            router.reload()\n        },\n        async updateSchedule() {\n            const notificationStore = useNotificationStore()\n            const scheduleStore = useScheduleStore()\n            scheduleStore.resetAll()\n            try {\n                const response = await axios.post('/admin/schedule/admin-update-schedule')\n                notificationStore.setToastNotification(response.data.message, response.data.type)\n            } catch (error) {\n                notificationStore.setToastNotification('Error updating schedule.', 'error')\n            }\n            router.reload()\n        }\n    },\n\n    getters: {\n        currentTime: (state) => {\n            // console.log('getter', 40)\n            return dayjs(state.baseTime).format('h:mm A')\n        },\n        currentDate: (state) => {\n            // console.log('getter', 40)\n            return dayjs(state.baseTime).format('MMMM DD, YYYY')\n        },\n        // Prepare banners with grid positions based on current time slots\n        preparedTimeBanners: (state) => {\n            // console.log('getter', 41)\n            const timeZone = getTimeZone() // Ensure this is defined\n            let now = dayjs().tz(timeZone)\n            let todayStart = now.startOf('day')\n            let tomorrowStart = todayStart.add(1, 'day')\n            let yesterdayStart = todayStart.subtract(1, 'day');\n\n            // console.log('Current Time Slots:', state.timeSlots.map(slot => dayjs(slot).format('HH:mm')))\n\n            return state.timeBanners.flatMap(banner => {\n                // console.log('getter', 42)\n                // Create banner times for today and tomorrow to handle overnight spans\n                let bannerTodayStart = todayStart.hour(parseInt(banner.startTime.split(':')[0])).minute(parseInt(banner.startTime.split(':')[1]))\n                let bannerTodayEnd = bannerTodayStart.clone().add(banner.duration, 'hours')\n                let bannerTomorrowStart = tomorrowStart.hour(parseInt(banner.startTime.split(':')[0])).minute(parseInt(banner.startTime.split(':')[1]))\n                let bannerTomorrowEnd = bannerTomorrowStart.clone().add(banner.duration, 'hours')\n                let bannerYesterdayStart = yesterdayStart.hour(parseInt(banner.startTime.split(':')[0])).minute(parseInt(banner.startTime.split(':')[1]));\n                let bannerYesterdayEnd = bannerYesterdayStart.clone().add(banner.duration, 'hours');\n\n                // Create an array of potential banners for today and tomorrow\n                let potentialBanners = [\n                    {...banner, start: bannerYesterdayStart, end: bannerYesterdayEnd},\n                    {...banner, start: bannerTodayStart, end: bannerTodayEnd},\n                    {...banner, start: bannerTomorrowStart, end: bannerTomorrowEnd},\n                ]\n\n                return potentialBanners.map(banner => {\n                    // console.log('getter', 43)\n                    const startSlotIndex = state.timeSlots.findIndex(slot => banner.start.isSameOrBefore(dayjs(slot)) && banner.end.isAfter(dayjs(slot)))\n                    let endSlotIndex = state.timeSlots.findIndex(slot => banner.end.isSameOrBefore(dayjs(slot)))\n\n                    // Adjust the end index to be inclusive of the end time\n                    if (endSlotIndex === -1 || banner.end.isAfter(dayjs(state.timeSlots[state.timeSlots.length - 1]))) {\n                        endSlotIndex = state.timeSlots.length - 1\n                    } else {\n                        endSlotIndex -= 1\n                    }\n\n                    const gridStart = startSlotIndex + 1\n                    const gridSpan = endSlotIndex - startSlotIndex + 1\n\n                    // console.log(`Processing Banner: ${banner.name}`)\n                    // console.log(`StartTime: ${banner.start.format('HH:mm')}, EndTime: ${banner.end.format('HH:mm')}`)\n                    // console.log(`StartSlotIndex: ${startSlotIndex}, EndSlotIndex: ${endSlotIndex}`)\n                    // console.log(`Calculated gridStart: ${gridStart}, gridSpan: ${gridSpan}`)\n\n                    // Ensure the banner should be displayed within the current time slots\n                    if (gridStart && gridSpan > 0) {\n                        // console.log('getter', 44)\n                        return {...banner, gridStart, gridSpan}\n                    }\n                    // console.log('getter', 45)\n                    return null\n                })\n            }).filter(banner => banner != null) // Filter out banners that don't fit within the current time slots\n                .sort((a, b) => a.gridStart - b.gridStart) // Sort by gridStart, with the lowest number first\n        },\n\n\n        // setTimeSlots: (state) => {\n        //     const appSettingStore = useAppSettingStore()\n        //     let slotHours\n        //\n        //     // Determine the number of slot hours based on screen size\n        //     if (appSettingStore.isVerySmallScreen) {\n        //         slotHours = state.verySmallScreenSlotHours\n        //     } else if (appSettingStore.isSmallScreen) {\n        //         slotHours = state.smallScreenSlotHours\n        //     } else {\n        //         slotHours = state.mediumScreenSlotHours\n        //     }\n        //\n        //     const intervalMinutes = state.slotIntervalMinutes\n        //     const slots = []\n        //     const totalSlots = (slotHours * 60) / intervalMinutes\n        //\n        //     // Ensure state.currentHalfHour is a Day.js object\n        //     const currentHalfHour = dayjs(state.currentHalfHour)\n        //\n        //     // Calculate the time for each slot using Day.js\n        //     for (let i = 0; i < totalSlots; i++) {\n        //         let slotTime = currentHalfHour.add(i * intervalMinutes, 'minute')\n        //         slots.push(slotTime.toDate())  // Convert back to JavaScript Date if necessary\n        //     }\n        //     state.timeSlots = slots\n        //     return slots.length\n        // },\n\n        nextFourHoursWithHalfHourIntervals: (state) => {\n            // Check if timeSlots is not null, undefined, or empty before accessing length\n            if (!state.timeSlots || state.timeSlots.length === 0) {\n                console.log('timeSlots is null or has no elements')\n                // console.log('getter', 46)\n                // Handle this scenario appropriately, such as returning an empty array or a default value\n                return []\n            }\n\n            const userStore = useUserStore() // Access the user store\n            const appSettingStore = useAppSettingStore() // Access the settings store\n            const userTimezone = userStore.timezone // Get the user's timezone\n            const cols = state.timeSlots.length\n\n            const intervals = []\n            const now = dayjs(state.baseTime).tz(userTimezone) // Get the current time in the user's timezone\n\n            // Determine if the current minute is less than 30 to start at the top of the hour or at the half-hour\n            let current = now.minute() < 30 ? now.startOf('hour') : now.startOf('hour').add(30, 'minutes')\n\n            // Adjust current to start 30 minutes before the calculated time\n            current = current.subtract(30, 'minutes');\n\n            // Generate intervals for the next 4 hours, each 30 minutes apart\n            // Adjust the loop count based on the number of columns/ intervals needed\n            for (let i = 0; i < cols; i++) { // Adjust the number of intervals based on the screen size\n                intervals.push({\n                    formatted: current.format('hh:mm A'), // Formatted time for display\n                    dateTimeString: current.format('YYYY-MM-DD HH:mm:ss'), // Y-m-d H:m:s format for comparisons\n                })\n                current = current.add(30, 'minute') // Move to the next 30-minute interval\n            }\n            // console.log('getter', 47)\n            return intervals\n        },\n\n        upcomingContent: (state) => {\n            // Since viewingWindowStart is now a Day.js object, use Day.js methods directly\n            const start = dayjs(state.viewingWindowStart).subtract(1, 'hour') // 1 hour earlier\n            const end = start.add(7, 'hours') // 6 hours later from the start\n\n            // Group shows by start time using Day.js\n            const showsGroupedByStartTime = state.weeklyContent.reduce((acc, item) => {\n                const itemStart = dayjs(item.start_dateTime).valueOf() // Use .valueOf() to get the timestamp\n                if (!acc[itemStart]) {\n                    acc[itemStart] = []\n                }\n                acc[itemStart].push(item)\n                return acc\n            }, {})\n\n            // Select the show with the lowest priority for each start time\n            const selectedShows = Object.values(showsGroupedByStartTime).map(group => {\n                return group.reduce((selected, item) => {\n                    return !selected || item.priority < selected.priority ? item : selected\n                }, null)\n            })\n            // console.log('getter', 48)\n            // Filter shows that fall within the next 6-hour window and sort them\n            return selectedShows\n                .filter(item => {\n                    const itemStart = dayjs(item.start_dateTime)\n                    return itemStart.isSameOrAfter(start) && itemStart.isBefore(end)\n                })\n                .sort((a, b) => dayjs(a.start_dateTime).unix() - dayjs(b.start_dateTime).unix()) // Sorting by Unix timestamp\n        },\n\n\n        nextSixHours: (state) => {\n            // Assuming state.viewingWindowStart is already a Day.js object.\n            // If it's still a native Date, convert it first:\n            let adjustedStart = dayjs(state.viewingWindowStart)\n\n            // Add 6 hours to the adjusted start time\n            const end = adjustedStart.add(6, 'hours')\n\n            // Generate each hour of the interval between adjustedStart and end\n            const hours = []\n            let hour = adjustedStart\n\n            while (hour.isBefore(end)) {\n                hours.push(hour.toDate()) // Convert back to Date if necessary; otherwise, just use `hour` if you can use Day.js objects directly\n                hour = hour.add(1, 'hour')\n            }\n            // console.log('getter', 49)\n            return hours\n        },\n\n        dateMessage: (state) => {\n            const startDay = dayjs(state.viewingWindowStart).startOf('day');\n\n            // Check if startDay is a valid date\n            if (!startDay.isValid()) {\n                return 'Invalid date';\n            }\n\n            const formattedDate = startDay.format('dddd MMMM DD, YYYY');\n\n            if (startDay.isToday()) {\n                return `Today - ${formattedDate}`;\n            } else if (startDay.isYesterday()) {\n                return `Yesterday - ${formattedDate}`;\n            } else if (startDay.isTomorrow()) {\n                return `Tomorrow - ${formattedDate}`;\n            } else {\n                return formattedDate;\n            }\n        },\n\n        currentMonthIndex: (state) => {\n            // Ensure state.currentMonth is converted to a Day.js object\n            const month = dayjs(state.currentMonth)\n            // console.log('getter', 51)\n            // Day.js months are 0-indexed just like JavaScript Date, returns the month (0-11)\n            return month.month()\n        },\n\n        currentMonthName: (state) => {\n            // Ensure state.currentMonth is converted to a Day.js object\n            const month = dayjs(state.currentMonth)\n            // console.log('getter', 52)\n            // Returns the full name of the month, e.g., 'January', 'February', etc.\n            return month.format('MMMM')\n        },\n\n        currentYear: (state) => {\n            // Ensure state.currentMonth is converted to a Day.js object\n            const month = dayjs(state.currentMonth)\n            // console.log('getter', 53)\n            // Returns the year\n            return month.year()\n        },\n        isToday: (state) => {\n            const today = dayjs()  // Gets today's date as a Day.js object\n            const viewingStart = dayjs(state.viewingWindowStart)  // Convert to Day.js object if not already\n            // console.log('getter', 54)\n            // Compare if both dates are the same calendar day\n            return today.isSame(viewingStart, 'day')\n        },\n\n        daysInMonth: (state) => {\n            // Assuming state.currentMonth is a Day.js object; if it's a Date, convert it:\n            const currentMonth = dayjs(state.currentMonth)\n\n            const startOfCurrentMonth = currentMonth.startOf('month')\n            const endOfCurrentMonth = currentMonth.endOf('month')\n\n            // Adjust these to ensure the grid starts on Sunday and ends on Saturday\n            const startOfGrid = startOfCurrentMonth.startOf('week')  // Assumes the week starts on Sunday by default\n            const endOfGrid = endOfCurrentMonth.endOf('week')        // Assumes the week ends on Saturday by default\n\n            // Generate the days for the calendar grid\n            const days = []\n            let day = startOfGrid\n\n            while (day.isBefore(endOfGrid) || day.isSame(endOfGrid, 'day')) {\n                days.push(day.toDate()) // Collect days as Date objects; remove toDate() if you can use Day.js objects directly\n                day = day.add(1, 'day')\n            }\n            // console.log('getter', 55)\n            return days\n        },\n\n    },\n})\n","import { onBeforeMount, onMounted, watch } from 'vue'\nimport { useUserStore } from \"@/Stores/UserStore\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useVideoPlayerStore } from \"@/Stores/VideoPlayerStore\"\nimport { router } from '@inertiajs/vue3'\n\nexport function usePageSetup(pageName) {\n    const userStore = useUserStore()\n    const appSettingStore = useAppSettingStore()\n    const videoPlayerStore = useVideoPlayerStore()\n\n    appSettingStore.currentPage = pageName\n    appSettingStore.showFlashMessage = true\n    appSettingStore.pageIsHidden = false\n\n// PageSetup utility\n    if (userStore.isMobile || window.innerWidth < 1024) {\n        appSettingStore.ott = 0; // Close all panels on mobile devices\n    } else if (appSettingStore.fullPage) {\n        appSettingStore.ott = 0; // Default to closed in fullPage mode\n    } else {\n        if (appSettingStore.ott === 0) {\n            appSettingStore.ott = 4\n        }\n        // appSettingStore.ott = 4; // Open OttChat by default on larger screens\n        appSettingStore.showOttButtons = true;\n    }\n\n    videoPlayerStore.makeVideoTopRight()\n\n    if (appSettingStore.pageReload) {\n        appSettingStore.pageReload = false\n        appSettingStore.pageWasReloaded = true\n        window.location.reload();\n    }\n    // Check if the URL contains query strings\n\n\n    // Only scroll into view if there are no query strings\n\n        // const topDiv = document.getElementById(\"topDiv\")\n        // if (topDiv) {\n        //     topDiv.scrollIntoView()\n        // }\n        router.on('navigate', (event) => {\n            // Ensure OTT panels do not open automatically on mobile devices\n            if (userStore.isMobile || window.innerWidth < 1024 || appSettingStore.fullPage) {\n                appSettingStore.ott = 0; // Close all panels on mobile devices\n            } else {\n                if (appSettingStore.ott === 0) {\n                    appSettingStore.ott = 4\n                }\n                // appSettingStore.ott = 0; // Default to closed on larger screens\n            }\n            const hasQueryStrings = window.location.search !== '';\n            if (!hasQueryStrings || appSettingStore.shouldScrollToTop) {\n                requestAnimationFrame(() => {\n                    const topDiv = document.getElementById(\"topDiv\");\n                    if (topDiv) {\n                        topDiv.scrollIntoView({behavior: 'auto'});\n                    } else {\n                        window.scrollTo(0, 0);\n                    }\n                });\n            }\n            appSettingStore.shouldScrollToTop = false;\n        })\n    // Only update if we're not already on this page to avoid overwriting with the current URL\n    appSettingStore.setPrevUrl()\n    appSettingStore.showOttButtons = true\n    appSettingStore.noLayout = false\n\n    // router.reload()\n\n    watch(\n        () => appSettingStore.isSmallScreen,\n        (newValue) => {\n            if (newValue) {\n                appSettingStore.ott = 0;\n            } else {\n                appSettingStore.ott = 4;\n            }\n        },\n        { immediate: true } // This option ensures the watch executes immediately with the current value\n    );\n\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".is-priority[data-v-1f848704]{color:#000;font-weight:300}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/Components/Pages/Admin/Channels/SourceSelector.vue\"],\"names\":[],\"mappings\":\"AA0FA,8BAEE,UAAY,CACZ,eACF\",\"sourcesContent\":[\"<template>\\n  <!--  <div class=\\\"source-selector\\\" :class=\\\"{'is-priority': source?.isPriority, 'is-playing': source?.isPlaying, 'is-fallback': source?.isFallback, 'has-error': source?.hasError}\\\">-->\\n  <div\\n      :class=\\\"['source-selector', {'is-priority': source?.playback_priority_type, 'is-playing': source?.isPlaying, 'is-fallback': source?.isFallback, 'has-error': source?.hasError}]\\\">\\n    <div>\\n      <!-- Display the source status here (playing, fallback, error) -->\\n      <div v-if=\\\"source?.playback_priority_type === sourceType\\\" class=\\\"btn btn-xs mt-1 text-white bg-green-500 hover:bg-green-500 border-none\\\">Priority</div>\\n      <span>\\n\\n      </span>\\n      <!-- Icon or button to set this source as priority -->\\n      <!--      <button class=\\\"btn btn-xs\\\" v-if=\\\"!source?.playback_priority_type\\\" @click=\\\"setPriority\\\">Set as Priority</button>-->\\n    </div>\\n  </div>\\n\\n  <!--  <div v-if=\\\"source?.playback_priority_type === 'mistStream'\\\">-->\\n  <!--    <button class=\\\"btn btn-xs hover:bg-green-500 bg-green-500\\\">Priority</button>-->\\n  <!--  </div>-->\\n\\n  <button v-if=\\\"source?.playback_priority_type !== sourceType\\\" class=\\\"btn btn-xs mt-1 bg-gray-100 text-gray-800 hover:bg-gray-200 border-none\\\"\\n          @click=\\\"setPriority\\\">Set as Priority\\n  </button>\\n\\n\\n  <dialog :id=\\\"`confirmPriorityChangeModal`\\\" class=\\\"modal\\\">\\n    <div class=\\\"modal-box bg-white text-black\\\">\\n      <h3 class=\\\"font-bold text-lg\\\">Confirm Selection for {{ adminStore.sourceSelector?.source?.name }}</h3>\\n      <p class=\\\"py-4\\\">\\n        Are you sure you want to change priority to <span class=\\\"font-bold\\\">{{ adminStore.sourceSelector?.sourceType }}</span>?\\n      </p>\\n      <div class=\\\"modal-action\\\">\\n        <button class=\\\"btn\\\" @click.prevent=\\\"confirmPriorityChange\\\">Confirm</button>\\n        <button class=\\\"btn\\\" @click.prevent=\\\"closeModal\\\">Cancel</button>\\n      </div>\\n    </div>\\n  </dialog>\\n\\n\\n</template>\\n\\n<script setup>\\nimport { useAdminStore } from '@/Stores/AdminStore'\\nimport { ref } from 'vue'\\n\\nconst adminStore = useAdminStore()\\n\\nlet props = defineProps([\\n  'source',\\n  'sourceType',\\n])\\n\\n// const setPriority = (sourceType) => {\\n//   emit('change', { sourceType, priority: true });\\n//   // Implement function to make API call to update the backend\\n// };\\n\\n\\nconst setPriority = () => {\\nadminStore.sourceSelector.source = props.source\\nadminStore.sourceSelector.sourceType = props.sourceType\\n  document.getElementById('confirmPriorityChangeModal').showModal() // Open the modal for confirmation\\n}\\n\\nconst confirmPriorityChange = async () => {\\n  await adminStore.setPlaybackPriorityType(adminStore.sourceSelector.source, adminStore.sourceSelector.sourceType)\\n  document.getElementById('confirmPriorityChangeModal').close() // Close the modal\\n}\\n\\nconst closeModal = () => {\\n  document.getElementById('confirmPriorityChangeModal').close()\\n}\\n\\n// const setPriority = async () => {\\n//   // Directly call the store action to update the priority.\\n//   await adminStore.setPlaybackPriorityType(props.source, props.sourceType);\\n//   // No need to emit an event to the parent component.\\n// };\\n\\n</script>\\n\\n<style scoped>\\n.source-selector {\\n  /* Base styles */\\n  /*margin-top: 0.5rem;*/\\n}\\n\\n.is-playing {\\n  /* Styles for playing status */\\n}\\n\\n.is-priority {\\n  /* Styles for isPriority status */\\n  color: black;\\n  font-weight: 300;\\n}\\n\\n.is-fallback {\\n  /* Styles for fallback status */\\n}\\n\\n.has-error {\\n  /* Styles for error status */\\n}\\n\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"#tooltip[data-v-0d2b00ca]{background:#333;border-radius:4px;color:#fff;font-size:13px;font-weight:700;padding:4px 8px}[data-v-0d2b00ca] .popper{background:#333;border-radius:20px;color:#fff;font-weight:700;padding:2px;text-transform:uppercase}[data-v-0d2b00ca] .popper #arrow:before{background:#333}[data-v-0d2b00ca] .popper:hover,[data-v-0d2b00ca] .popper:hover>#arrow:before{background:#333}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/Pages/Admin/Schedule/Index.vue\"],\"names\":[],\"mappings\":\"AAuLA,0BACE,eAAgB,CAKhB,iBAAkB,CAJlB,UAAY,CAGZ,cAAe,CAFf,eAAiB,CACjB,eAGF,CAEA,0BACE,eAAmB,CAEnB,kBAAmB,CACnB,UAAW,CACX,eAAiB,CAHjB,WAAY,CAIZ,wBACF,CAEA,wCACE,eACF,CAEA,8EAEE,eACF\",\"sourcesContent\":[\"<template>\\n  <Head title=\\\"Admin/Schedule\\\"/>\\n\\n  <div class=\\\"place-self-center flex flex-col\\\">\\n    <div id=\\\"topDiv\\\" class=\\\"bg-white text-black dark:bg-gray-800 dark:text-gray-50 p-5 mb-10\\\">\\n\\n      <Message v-if=\\\"appSettingStore.showFlashMessage\\\" :flash=\\\"$page.props.flash\\\"/>\\n\\n      <AdminHeader>Schedule</AdminHeader>\\n\\n      <div class=\\\"flex flex-row justify-between gap-x-4 mb-3\\\">\\n        <div>\\n          <Link :href=\\\"`#`\\\">\\n            <button\\n                class=\\\"btn btn-sm bg-green-500 hover:bg-green-600 text-white px-4 py-2 mr-2 rounded disabled:bg-gray-400\\\"\\n                disabled\\n            >Blank\\n            </button>\\n          </Link>\\n          <Link :href=\\\"`#`\\\">\\n            <button\\n                class=\\\"btn btn-sm bg-green-500 hover:bg-green-600 text-white px-4 py-2 mr-2 rounded disabled:bg-gray-400\\\"\\n                disabled\\n            >Blank\\n            </button>\\n          </Link>\\n          <Link :href=\\\"`#`\\\">\\n            <button\\n                class=\\\"btn btn-sm bg-green-500 hover:bg-green-600 text-white px-4 py-2 mr-2 rounded disabled:bg-gray-400\\\"\\n                disabled\\n            >Blank\\n            </button>\\n          </Link>\\n          <button\\n              @click.prevent=\\\"purgeAllCaches\\\"\\n              class=\\\"btn btn-sm bg-green-500 hover:bg-green-600 text-white px-4 py-2 mr-2 rounded-lg disabled:bg-gray-400\\\"\\n          >\\n            Purge All Caches\\n          </button>\\n          <button\\n              @click.prevent=\\\"updateSchedule\\\"\\n              class=\\\"btn btn-sm bg-green-500 hover:bg-green-600 text-white px-4 py-2 mr-2 rounded-lg disabled:bg-gray-400\\\"\\n          >\\n            Update Schedule\\n          </button>\\n\\n\\n        </div>\\n        <input v-model=\\\"adminStore.searchTerm\\\" type=\\\"search\\\" placeholder=\\\"Search...\\\" class=\\\"border px-2 rounded-lg\\\"/>\\n      </div>\\n\\n      <div class=\\\"flex flex-col\\\">\\n        <div class=\\\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\\\">\\n          <div class=\\\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\\\">\\n            <div class=\\\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\\\">\\n\\n              <div class=\\\"relative overflow-x-auto shadow-md sm:rounded-lg\\\">\\n                <div\\n                    class=\\\"table w-full text-sm text-left text-gray-500 dark:text-gray-400\\\"\\n                >\\n                  <div\\n                      class=\\\"table-header-group text-xs text-gray-700 bg-gray-50 dark:bg-gray-700 dark:text-gray-400\\\"\\n                  >\\n                    <div class=\\\"table-row\\\">\\n                      <div scope=\\\"col\\\" class=\\\"table-cell px-6 py-3 uppercase\\\">\\n                        <font-awesome-icon icon=\\\"fa-repeat\\\" class=\\\"mr-2 cursor-pointer hover:text-blue-500\\\"\\n                                           @click.prevent=\\\"resetCalendar\\\"/>\\n                        <span class=\\\"uppercase\\\">Calendar </span>\\n                      </div>\\n\\n\\n                    </div>\\n                  </div>\\n                  <div class=\\\"table-row-group\\\">\\n\\n                    <div class=\\\"calendar\\\">\\n\\n                      <!-- Calendar View -->\\n                      <div class=\\\"calendar-view\\\">\\n                        <MonthView />\\n\\n                        <!-- View Selector -->\\n                        <div class=\\\"view-selector px-6 space-x-2 border-t-2 border-gray-50 pt-6\\\">\\n                          <span class=\\\"text-xm uppercase font-semibold tracking-wider\\\">View: </span>\\n                          <button @click=\\\"setView('week')\\\" class=\\\"py-1 px-2 text-black rounded-lg\\\" :class=\\\"[currentView === 'week' ? 'bg-blue-200' : 'bg-gray-100 hover:bg-gray-200']\\\">Week</button>\\n                          <button @click=\\\"setView('threeDay')\\\" class=\\\"py-1 px-2 text-black rounded-lg\\\" :class=\\\"[currentView === 'threeDay' ? 'bg-blue-200' : 'bg-gray-100 hover:bg-gray-200']\\\">3-Day</button>\\n                          <button @click=\\\"setView('oneDay')\\\" class=\\\"py-1 px-2 text-black rounded-lg\\\" :class=\\\"[currentView === 'oneDay' ? 'bg-blue-200' : 'bg-gray-100 hover:bg-gray-200']\\\">1-Day</button>\\n                          <button  @click=\\\"setToToday\\\" class=\\\"py-1 px-2 text-black rounded-lg\\\" :class=\\\"{'bg-blue-200': scheduleStore.isToday, 'bg-gray-100 hover:bg-gray-200': !scheduleStore.isToday}\\\">Today</button>\\n                        </div>\\n                        <WeekView v-if=\\\"currentView === 'week'\\\"/>\\n                        <ThreeDayView v-if=\\\"currentView === 'threeDay'\\\"/>\\n                        <TodayView v-if=\\\"currentView === 'oneDay'\\\"/>\\n                      </div>\\n                    </div>\\n\\n\\n\\n\\n\\n                  </div>\\n                </div>\\n\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n\\n\\n\\n\\n\\n      </div>\\n    </div>\\n  </div>\\n\\n</template>\\n\\n\\n<script setup>\\nimport { router } from '@inertiajs/vue3'\\nimport { onBeforeUnmount, onMounted, onUnmounted, ref, watch } from 'vue'\\nimport throttle from 'lodash/throttle'\\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome'\\nimport { usePageSetup } from '@/Utilities/PageSetup'\\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\\nimport { useScheduleStore } from '@/Stores/ScheduleStore'\\nimport { useAdminStore } from '@/Stores/AdminStore'\\nimport AdminHeader from '@/Components/Pages/Admin/AdminHeader'\\nimport Message from '@/Components/Global/Modals/Messages'\\nimport Pagination from '@/Components/Global/Paginators/Pagination'\\nimport SourceSelector from '@/Components/Pages/Admin/Channels/SourceSelector'\\nimport DynamicModal from '@/Components/Pages/Admin/Channels/DynamicModal'\\nimport AddOrUpdateMistStreamModal from '@/Components/Global/MistStreams/AddOrUpdateMistStreamModal'\\nimport MonthView from '@/Components/Global/Calendar/MonthView'\\nimport WeekView from '@/Components/Global/Calendar/WeekView'\\nimport ThreeDayView from '@/Components/Global/Calendar/ThreeDayView'\\nimport TodayView from '@/Components/Global/Calendar/TodayView'\\n\\nusePageSetup('admin.schedule')\\n\\nconst appSettingStore = useAppSettingStore()\\nconst scheduleStore = useScheduleStore()\\nconst adminStore = useAdminStore()\\n\\nlet props = defineProps({})\\n\\nconst reloadSchedule = () => {\\n  //\\n}\\n\\nconst setToToday = () => {\\n  // Use the existing action to set the selected day to today\\n  scheduleStore.setSelectedDayToToday(new Date());\\n  currentView.value = 'oneDay'\\n};\\n\\nconst currentView = ref('oneDay')\\n\\nconst setView = (view) => {\\n  currentView.value = view\\n}\\n\\nconst purgeAllCaches = () => {\\nscheduleStore.purgeAllCaches()\\n}\\n\\nconst updateSchedule = () => {\\n  scheduleStore.updateSchedule()\\n}\\n\\nconst resetCalendar = () => {\\n  scheduleStore.reset()\\n  scheduleStore.checkAndFetchForUpcomingContent()\\n}\\n\\nonBeforeUnmount(() => {\\n  scheduleStore.reset()\\n})\\n\\n</script>\\n\\n<style scoped>\\n\\n#tooltip {\\n  background: #333;\\n  color: white;\\n  font-weight: bold;\\n  padding: 4px 8px;\\n  font-size: 13px;\\n  border-radius: 4px;\\n}\\n\\n:deep(.popper) {\\n  background: #333333;\\n  padding: 2px;\\n  border-radius: 20px;\\n  color: #fff;\\n  font-weight: bold;\\n  text-transform: uppercase;\\n}\\n\\n:deep(.popper #arrow::before) {\\n  background: #333333;\\n}\\n\\n:deep(.popper:hover),\\n:deep(.popper:hover > #arrow::before) {\\n  background: #333333;\\n}\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","<template>\n  <!-- Today view layout -->\n  <div class=\" hidden today-view container mx-auto px-4 py-8 flex flex-col\">\n    <div id=\"topDivForTodayView\"></div>\n    <button  v-if=\"!scheduleStore.isToday\"\n             @click=\"scheduleStore.setSelectedDayToToday(new Date());\"\n             class=\"py-1 px-2 text-white rounded-lg w-fit\"\n             :class=\"{'bg-blue-300': scheduleStore.isToday, 'bg-green-600 hover:bg-green-700': !scheduleStore.isToday}\">\n      Go To Now</button>\n    <div class=\"flex justify-center text-center mb-4\">\n      <h2 class=\"text-3xl font-bold mb-2\">{{ dateMessage }}</h2>\n    </div>\n    <div class=\"flex justify-between items-center mb-4\">\n      <button\n          @click=\"scheduleStore.changeDay(-1)\"\n          class=\"bg-gray-100 hover:bg-gray-200 text-black p-2 rounded shadow\"\n      >\n        &lt; Previous Day\n      </button>\n      <div class=\"flex flex-col text-center\">\n\n        <h3>{{ userStore.canadianTimezoneDescription }} Time</h3>\n      </div>\n      <button\n          @click=\"scheduleStore.changeDay(1)\"\n          class=\"bg-gray-100 hover:bg-gray-200 text-black p-2 rounded shadow\"\n      >\n        Next Day &gt;\n      </button>\n    </div>\n    <button\n        @click=\"scheduleStore.shiftHours(-6)\"\n        class=\"mb-4 bg-gray-100 hover:bg-gray-200 text-black py-2 rounded shadow\"\n    >\n      &#8593; Back 6 Hours\n    </button>\n\n    <div class=\"flex flex-col flex-grow\">\n      <div v-for=\"(hour, index) in scheduleStore.nextSixHours\" :key=\"hour.toString()\">\n\n        <!-- Time Segment Label -->\n        <div\n            v-if=\"index === 0 || getTimeSegment(hour).segment !== getTimeSegment(scheduleStore.nextSixHours[index - 1]).segment\"\n            :class=\"getTimeSegment(hour).color\"\n            class=\"mb-4 p-2 text-black text-center font-bold text-2xl rounded shadow\">\n          {{ getTimeSegment(hour).segment }}\n        </div>\n\n        <!-- Content for the current hour -->\n        <template v-for=\"item in upcomingContent\">\n          <div v-if=\"isWithinCurrentHour(item, hour)\" :key=\"item.id\"\n               class=\"hover:bg-blue-400 hover:cursor-pointer\"\n               @click.prevent=\"goToContentPage(item)\"\n               :class=\"['p-4 rounded-lg shadow', getTimeSegment(new Date(item.start_time)).color, 'mb-4']\">\n            <div class=\"flex flex-row flex-wrap gap-x-4 gap-y-2\">\n              <div class=\"flex flex-col w-28 max-w-28 text-gray-500\">\n                <div class=\"font-bold text-black break-words\">{{\n                    formatHour(new Date(item.start_time))\n                  }}&nbsp;{{ userStore.timezoneAbbreviation }}\n                </div>\n                <div class=\"break-words\">{{ formatDuration(item.durationMinutes) }}</div>\n              </div>\n              <div class=\"flex flex-col\">\n                <button @click.prevent=\"goToContentPage(item)\">\n                  <SingleImage v-if=\"item.type === 'show'\" :image=\"item?.content?.show?.image\"\n                               :alt=\"item?.content?.show?.name\" class=\"w-20 h-20\"/>\n                  <SingleImage v-else :image=\"item?.content?.image\" :alt=\"item?.content?.name\" class=\"w-20 h-20\"/>\n                </button>\n              </div>\n              <div class=\"flex flex-col items-start h-full\">\n                <div class=\"text-gray-800 text-2xl tracking-wider\">\n                  <button @click.prevent=\"goToContentPage(item)\" class=\"text-left\">\n                    <span v-if=\"item.type === 'show'\">{{ item?.content?.show?.name }}</span>\n                    <span v-if=\"item.type === 'movie'\">{{ item?.content?.name }}</span>\n                  </button>\n                </div>\n                <div class=\"mt-2 text-gray-700 flex flex-wrap gap-1\">\n                    <div class=\"w-fit text-xs font-semibold uppercase tracking-wide bg-gray-900 px-2 py-1 rounded\">\n                      <span v-if=\"item.type === 'show'\" class=\"text-green-500\">show</span>\n                      <span v-if=\"item.type === 'movie'\"\n                            class=\"text-pink-500 bg-gray-900 px-2 py-1\">movie</span>\n                    </div>\n                    <div v-if=\"item?.content?.show?.category?.name || item?.content?.category?.name\"\n                         class=\"w-fit text-xs font-semibold uppercase tracking-wider text-yellow-600 bg-gray-900 px-2 py-1 rounded\">\n                    <span v-if=\"item.type === 'show' && item?.content?.show?.category?.name\"\n                          class=\"\">{{ item?.content?.show?.category?.name }}</span>\n                      <span v-if=\"item.type === 'movie' && item?.content?.subCategory?.name\"\n                            class=\"\">{{ item?.content?.category?.name }}</span>\n                    </div>\n                    <div v-if=\"item?.content?.show?.subCategory?.name || item?.content?.subCategory?.name\"\n                         class=\"w-fit text-xs font-semibold tracking-wide text-yellow-500 bg-gray-900 px-2 py-1 rounded\">\n                      <span v-if=\"item.type === 'show'\" class=\"\">{{ item?.content?.show?.subCategory?.name }}</span>\n                      <span v-if=\"item.type === 'movie'\" class=\"\">{{ item?.content?.subCategory?.name }}</span>\n                    </div>\n                  </div>\n              </div>\n            </div>\n          </div>\n        </template>\n\n\n        <!-- Fallback if no content is found for the current hour -->\n        <div v-if=\"!isContentAvailableForHour(hour)\" :class=\"getTimeSegment(hour).color\"\n             class=\"mb-4 p-4 rounded-lg shadow text-gray-500\">\n          <div class=\"font-semibold\">{{ formatHour(hour) }}&nbsp;{{ userStore.timezoneAbbreviation }}</div>\n          <div>Nothing scheduled.</div>\n        </div>\n\n        <!-- Dynamically insert the dateMessage for the next day if the hour is 11 PM -->\n        <div v-if=\"scheduleStore.isElevenPM(hour) && scheduleStore.nextSixHours[index + 1]\"\n             class=\"my-4 p-2 bg-blue-800 text-white rounded shadow\">\n          {{ generateDateMessage(addHours(hour, 1)) }}\n        </div>\n      </div>\n    </div>\n\n    <button\n        @click=\"shiftHours(6)\"\n        class=\"bg-gray-100 hover:bg-gray-200 text-black py-2 rounded shadow\"\n    >\n      &#8595; Forward 6 Hours\n    </button>\n  </div>\n</template>\n\n<script setup>\n// Today view logic\n// import { ref, computed } from 'vue'\nimport { useScheduleStore } from '@/Stores/ScheduleStore'\nimport { useUserStore } from '@/Stores/UserStore'\nimport {\n  format,\n  startOfHour,\n  addHours,\n  isToday,\n  isYesterday,\n  isTomorrow,\n  startOfDay,\n  isWithinInterval,\n  isSameDay,\n} from 'date-fns'\nimport { storeToRefs } from 'pinia'\nimport { computed, onMounted, ref, watch, watchEffect } from 'vue'\nimport SingleImage from '@/Components/Global/Multimedia/SingleImage.vue'\nimport { router } from '@inertiajs/vue3'\n\nconst scheduleStore = useScheduleStore()\nconst userStore = useUserStore()\nconst {upcomingContent, dateMessage} = storeToRefs(scheduleStore)\n\nconst selectedDay = ref(scheduleStore.selectedDay)\nconst weeklyContent = computed(() => scheduleStore.weeklyContent)\n\nconst shiftHours = async(hours) => {\n  const topDiv = document.getElementById(\"topDivForTodayView\");\n  topDiv.scrollIntoView({behavior: 'smooth'});\n  await scheduleStore.shiftHours(hours)\n}\n\nwatch(selectedDay, (newValue) => {\n  scheduleStore.setSelectedDay(newValue)\n  // If necessary, trigger other actions when selectedDay changes\n})\n\nfunction isWithinCurrentHour(item, hour) {\n  const startOfCurrentHour = startOfHour(hour)\n  const endOfCurrentHour = addHours(startOfCurrentHour, 1)\n  const contentStartTime = new Date(item.start_time)\n  return contentStartTime >= startOfCurrentHour && contentStartTime < endOfCurrentHour\n}\n\n// Assuming `upcomingContent` is a computed property that already filters\n// content within a 6-hour window from `scheduleStore.viewingWindowStart`\nfunction isContentAvailableForHour(hour) {\n  // Convert the given hour to the start and end of that hour block\n  const startOfCurrentHour = startOfHour(hour)\n  const endOfCurrentHour = addHours(startOfCurrentHour, 1)\n\n  // Check if any item in `upcomingContent` starts within this hour block\n  return upcomingContent.value.some(item => {\n    const contentStartTime = new Date(item.start_time)\n    return contentStartTime >= startOfCurrentHour && contentStartTime < endOfCurrentHour\n  })\n}\n\nfunction formatHour(date) {\n  return format(date, 'h:mm aaaa')\n}\n\nfunction getTimeSegment(hour) {\n  const hourOfDay = hour.getHours()\n  if (hourOfDay >= 4 && hourOfDay < 6) return {segment: 'Early Morning', color: 'bg-gray-200'}\n  if (hourOfDay >= 6 && hourOfDay < 12) return {segment: 'Morning', color: 'bg-yellow-200'}\n  if (hourOfDay >= 12 && hourOfDay < 17) return {segment: 'Afternoon', color: 'bg-green-200'}\n  if (hourOfDay >= 17 && hourOfDay < 20) return {segment: 'Prime Time', color: 'bg-red-200'}\n  if (hourOfDay >= 20 && hourOfDay < 23) return {segment: 'Late Prime Time', color: 'bg-purple-200'}\n  if (hourOfDay >= 23 || hourOfDay < 1) return {segment: 'Late Night', color: 'bg-blue-200'}\n  if (hourOfDay >= 1 && hourOfDay < 4) return {segment: 'Overnight', color: 'bg-indigo-200'}\n  return {segment: '', color: ''} // Default case\n}\n\n// A computed property to determine the starting segment for the displayed hours\nconst startingSegment = computed(() => scheduleStore.nextSixHours.value.length > 0 ? getTimeSegment(scheduleStore.nextSixHours.value[0]) : null)\n\nfunction generateDateMessage(date) {\n  // This method mirrors the logic in the store's getter but accepts any date.\n  const startDay = startOfDay(date)\n  const formattedDate = format(startDay, 'EEEE, MMMM do')\n  if (isToday(startDay)) {\n    return `Today - ${formattedDate}`\n  } else if (isYesterday(startDay)) {\n    return `Yesterday - ${formattedDate}`\n  } else if (isTomorrow(startDay)) {\n    return `Tomorrow - ${formattedDate}`\n  } else {\n    return formattedDate\n  }\n}\n\nconst goToContentPage = (item) => {\n  if (item.type === 'show') {\n    router.visit(`/shows/${item.content.show.slug}`)\n  } else if (item.type === 'movie') {\n    router.visit(`/movie/${item.content.slug}`)\n  }\n}\n\nconst formatDuration = (minutes) => {\n  if (minutes < 60) {\n    return `${minutes} minutes`\n  } else if (minutes === 60) {\n    return `1 hour`\n  } else {\n    const hours = Math.floor(minutes / 60)\n    const remainingMinutes = minutes % 60\n    if (remainingMinutes === 0) {\n      return `${hours} hours`\n    } else {\n      return `${hours} hour${hours > 1 ? 's' : ''} and ${remainingMinutes} minutes`\n    }\n  }\n}\n\n\n// Define a reactive watcher on the timezone\n// This watcher will call preloadWeeklyContent whenever the timezone changes and is not null\nwatch(\n    () => userStore.timezone,\n    async (newTimezone, oldTimezone) => {\n      // Ensure the timezone is set before calling preloadWeeklyContent\n      if (newTimezone) {\n        await scheduleStore.preloadWeeklyContent()\n        console.log('preloaded weekly content from todayView ...')\n      }\n    },\n    {immediate: true}, // This option ensures the watcher is triggered immediately on mount\n)\n\n// Optionally, keep the onMounted if there are other initialization tasks\n// onMounted(async () => {\n//   // Check if timezone is already available on mount and preload content if it hasn't been done by the watcher\n//   if (userStore.timezone) {\n//     await scheduleStore.preloadWeeklyContent()\n//   }\n// })\n</script>\n\n<style scoped>\n/* Styles specific to today view */\n</style>\n","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-10.use[1]!../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-10.use[2]!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./TodayView.vue?vue&type=style&index=0&id=7522e1de&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./TodayView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TodayView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./TodayView.vue?vue&type=style&index=0&id=7522e1de&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-7522e1de\"]])\n\nexport default __exports__","import script from \"./AddOrUpdateMistStreamModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AddOrUpdateMistStreamModal.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n\n  <dialog :id=\"id\" class=\"modal\">\n    <div class=\"modal-box w-11/12 max-w-5xl bg-white text-black\">\n      <h3 class=\"font-bold text-lg\">\n        <slot name=\"form-title\">Default Form Title</slot>\n      </h3>\n\n\n      <div>\n        <slot name=\"form-description\">Default Form Description</slot>\n      </div>\n      <div>\n        <div class=\"flex flex-col space-y-2 px-12 mt-6\">\n          <form @submit.prevent=\"submit\">\n\n            <label class=\"block mb-2 uppercase font-bold text-xs dark:text-gray-200\"\n                   for=\"name\">Stream Name</label>\n            <input v-model=\"form.name\"\n                   class=\"bg-gray-50 border border-gray-400 text-gray-900 text-sm p-2 w-full rounded-lg focus:ring-blue-500 focus:border-blue-500 block\"\n                   type=\"text\"\n                   name=\"name\"\n                   id=\"name\" placeholder=\"Stream Name...\">\n            <div v-if=\"form.errors.name\" v-text=\"form.errors.name\" class=\"text-xs text-red-600 mt-1\"></div>\n\n            <label class=\"block mt-4 mb-2 uppercase font-bold text-xs dark:text-gray-200\"\n                   for=\"name\">Source</label>\n            <input v-model=\"form.source\"\n                   class=\"bg-gray-50 border border-gray-400 text-gray-900 text-sm p-2 w-full rounded-lg focus:ring-blue-500 focus:border-blue-500 block\"\n                   type=\"text\"\n                   name=\"source\"\n                   id=\"source\" placeholder=\"Source...\">\n            <div v-if=\"form.errors.source\" v-text=\"form.errors.source\" class=\"text-xs text-red-600 mt-1\"></div>\n\n            <label class=\"block mt-4 mb-2 uppercase font-bold text-xs dark:text-gray-200\"\n                   for=\"name\">MIME Type</label>\n            <input v-model=\"form.mime_type\"\n                   class=\"bg-gray-50 border border-gray-400 text-gray-900 text-sm p-2 w-full rounded-lg focus:ring-blue-500 focus:border-blue-500 block\"\n                   type=\"text\"\n                   name=\"mime_type\"\n                   id=\"mime_type\" placeholder=\"MIME Type...\">\n            <div v-if=\"form.errors.mime_type\" v-text=\"form.errors.mime_type\" class=\"text-xs text-red-600 mt-1\"></div>\n\n            <label class=\"block mt-4 mb-2 uppercase font-bold text-xs dark:text-gray-200\"\n                   for=\"comment\">Comment</label>\n            <input v-model=\"form.comment\"\n                   class=\"bg-gray-50 border border-gray-400 text-gray-900 text-sm p-2 w-full rounded-lg focus:ring-blue-500 focus:border-blue-500 block\"\n                   type=\"text\"\n                   name=\"comment\"\n                   id=\"comment\" placeholder=\"Comment...\"></input>\n            <div v-if=\"form.errors.comment\" v-text=\"form.errors.comment\" class=\"text-xs text-red-600 mt-1\"></div>\n\n            <label class=\"block mt-4 mb-2 uppercase font-bold text-xs dark:text-gray-200\"\n                   for=\"metadata\">Optional Parameters</label>\n            <div v-for=\"(item, index) in form.metadata\" :key=\"index\" class=\"flex items-center\">\n              <input v-model=\"item.key\"\n                     class=\"bg-gray-50 border border-gray-400 text-gray-900 text-sm p-2 mt-2 rounded-lg focus:ring-blue-500 focus:border-blue-500\"\n                     placeholder=\"Key\">\n\n              <input v-model=\"item.value\"\n                     class=\"bg-gray-50 border border-gray-400 text-gray-900 text-sm p-2 ml-2 mt-2 rounded-lg focus:ring-blue-500 focus:border-blue-500\"\n                     placeholder=\"Value\">\n\n              <button @click.prevent=\"removeMetadataField(index)\" class=\"btn btn-sm ml-2 mt-2\">Remove</button>\n            </div>\n            <button @click.prevent=\"addMetadataField\" class=\"btn btn-sm mt-2\">Add Metadata</button>\n\n\n            <div class=\"flex flex-row justify-center pt-6\">\n              <button type=\"submit\" class=\"btn btn-wide bg-green-500 hover:bg-green-400 text-white\"\n                      :disabled=\"form.processing\">\n                <slot name=\"button-label\">Default Form Title</slot>\n              </button>\n\n            </div>\n          </form>\n        </div>\n\n      </div>\n\n\n      <div class=\"modal-action\">\n        <button class=\"btn\" @click.prevent=\"closeModal\">Cancel</button>\n        <form method=\"dialog\">\n          <!-- if there is a button, it will close the modal -->\n\n        </form>\n      </div>\n    </div>\n  </dialog>\n\n</template>\n<script setup>\nimport { onMounted, reactive, ref, watch } from 'vue'\nimport { useForm } from '@inertiajs/vue3'\nimport { useChannelStore } from '@/Stores/ChannelStore'\nimport { useAdminStore } from '@/Stores/AdminStore'\nimport { useNotificationStore } from '@/Stores/NotificationStore'\n\nconst channelStore = useChannelStore()\nconst adminStore = useAdminStore()\nconst notificationStore = useNotificationStore()\n\nimport Label from '@/Jetstream/Label.vue'\nimport Button from '@/Jetstream/Button.vue'\n\nlet props = defineProps({\n  mistStream: Object,\n  id: String,\n  // errors: Object,\n})\n\n// const errors = ref(props.errors);\nconst modalVisible = ref(false)\n\nconst metadata = ref([{key: '', value: ''}])\nlet originalName = ref('') // used for stream name changes\n\nconst addMetadataField = () => {\n  form.metadata.push({key: '', value: ''})\n}\n\nconst removeMetadataField = (index) => {\n  form.metadata.splice(index, 1)\n}\n\nlet form = reactive(useForm({\n  id: '',\n  name: '',\n  source: 'push://',\n  mime_type: 'application/vnd.apple.mpegurl',\n  comment: '',\n  metadata: [], // Initialize with one empty metadata entry\n}))\n\n// Watch for changes in the mistStream object in your Pinia store\n// This only applies if updating the mistStream\nwatch(() => channelStore.mistStream, (newVal) => {\n  if (newVal) {\n    // Populate the form with mistStream data\n    form.id = newVal.id || ''\n    form.name = newVal.name || ''\n    originalName.value = newVal.name || '' // Capture the original name\n    form.source = newVal.source || 'push://'\n    form.mime_type = newVal.mime_type || 'application/vnd.apple.mpegurl'\n    form.comment = newVal.comment || ''\n\n    // Convert metadata object to array format\n    if (newVal.metadata && typeof newVal.metadata === 'object') {\n      form.metadata = Object.entries(newVal.metadata).map(([key, value]) => ({\n        key, value,\n      }))\n    } else {\n      form.metadata = [{key: '', value: ''}] // Reset to initial state if no metadata\n    }\n  } else {\n    // Reset the form to initial state if there's no mistStream selected (e.g., for adding a new stream)\n    form.reset()\n  }\n}, {deep: true, immediate: true})\n//\n// let submit = () => {\n//   form.post(route('mistStream.add'))\n//   form.name = ''\n//   form.comment = ''\n//   if (!form.errors) {\n//     document.getElementById('adminAddMistStreamModal').close()\n//   }\n// }\n\nconst validateStreamName = (name) => {\n\n  // Check if the name is empty\n  if (!name.trim()) {\n    console.warn('Validation Failed: Stream name is empty.');\n    notificationStore.setGeneralServiceNotification('Invalid Stream Name', 'The stream name cannot be empty.');\n    return { valid: false, reformattedName: null };\n  }\n\n  // Check if the original name exceeds 100 characters\n  if (name.length > 100) {\n    console.warn('Validation Failed: Original stream name exceeds 100 characters.');\n    notificationStore.setGeneralServiceNotification('Invalid Stream Name', 'The stream name cannot exceed 100 characters.');\n    return { valid: false, reformattedName: null };\n  }\n\n  let reformattedName = name.toLowerCase().replace(/[^a-z0-9._-]/g, '');\n  console.log('Reformatted Stream Name:', reformattedName);\n\n  // Check if the name starts with a number\n  if (/^\\d/.test(reformattedName)) {\n    console.warn('Validation Failed: Stream name starts with a number.');\n    notificationStore.setGeneralServiceNotification('Invalid Stream Name', 'The stream name cannot start with a number.');\n    return { valid: false, reformattedName: null };\n  }\n\n  // Check if the reformatted name exceeds 100 characters\n  if (reformattedName.length > 100) {\n    console.warn('Validation Failed: Reformatted stream name exceeds 100 characters.');\n    notificationStore.setGeneralServiceNotification('Invalid Stream Name', 'The stream name cannot exceed 100 characters.');\n    return { valid: false, reformattedName: null };\n  }\n\n\n  // Check if the name was reformatted\n  if (reformattedName !== name) {\n    console.warn('Validation Warning: Stream name was reformatted.');\n    form.name = reformattedName\n    return { valid: false, reformattedName };\n  }\n\n  console.log('Validation Passed: Stream name is valid.');\n  return { valid: true, reformattedName };\n};\n\n\nlet submit = () => {\n  console.log('Starting Stream Name Validation...');\n  const { valid, reformattedName } = validateStreamName(form.name);\n\n  if (!valid) {\n    console.log('Stream Name Validation Failed.');\n    if (reformattedName) {\n      console.log('Showing notification for reformatted stream name.');\n      notificationStore.setGeneralServiceNotification(\n          'Stream Name Reformatted',\n          `The stream name has been reformatted to \"${reformattedName}\". Please confirm before proceeding.`\n      );\n      // Optionally set the originalName to the reformatted one, but do not submit yet\n      // originalName.value = reformattedName;\n    }\n    // Do not close the modal or submit\n    console.log('Form submission aborted due to validation failure.');\n    return;\n  }\n\n  console.log('Stream Name Validation Passed. Proceeding with submission.');\n\n  if (originalName.value === '') {\n    originalName.value = form.name\n  }\n\n  form.post(route('mistStream.addOrUpdate', { originalName: originalName.value }), {\n    onSuccess: () => {\n      console.log('Form submission successful.');\n      postSubmissionActions(); // Call the async function\n      closeModal(); // Close the modal only if the submission is successful\n    },\n    onError: (error) => {\n      console.error('Error during submission:', error);\n\n      // Display the error notification\n      notificationStore.setToastNotification('An error occurred during submission. Please try again.', 'error');\n      // Do not close the modal on error\n      console.log('Form submission failed. Modal remains open.');\n    },\n  });\n};\n\nconst postSubmissionActions = async () => {\n  await adminStore.fetchItems('mistStream') // Await the fetching of items\n  channelStore.clearMistStream() // Clear selected mistStream\n  form.reset() // Reset form fields\n  originalName.value = ''\n  closeModal() // Close modal\n}\n\nfunction closeModal() {\n  channelStore.clearMistStream()\n  // Reset the form fields to their initial values\n  form.reset()\n  // Clear all validation errors\n  form.clearErrors()\n  document.getElementById(props.id).close()\n}\n\n// function toggleModal() {\n//   console.log('Toggling modal:', !modalVisible.value)\n//   modalVisible.value = !modalVisible.value\n//   form.name = ''\n//   form.comment = ''\n// }\n</script>\n","import script from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"mx-4 my-4\">\n    <div class=\"alert alert-info mt-4\"\n         v-if=\"props.flash.message\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" class=\"stroke-current shrink-0 w-6 h-6\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n      </svg>\n      <span>{{ props.flash.message }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-success mt-4 mx-3\"\n         v-if=\"props.flash.success\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.success }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-warning mt-4 mx-3\"\n         v-if=\"props.flash.warning\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"/>\n      </svg>\n      <span>{{ props.flash.warning }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-error mt-4 mx-3\"\n         v-if=\"props.flash.error\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.error }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n  </div>\n\n</template>\n\n<script setup>\nimport { router } from '@inertiajs/vue3'\nimport { computed } from \"vue\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\n\nconst appSettingStore = useAppSettingStore()\n\nappSettingStore.showFlashMessage = true\n\nlet props = defineProps({\n  flash: Object,\n\n})\n\nconst messageType = computed(() => ({\n  'text-green-700 bg-green-100 dark:bg-green-200 dark:text-green-800': props.flash.success,\n  'text-blue-700 bg-blue-100 dark:bg-blue-200 dark:text-blue-800': props.flash.message,\n  'text-orange-700 bg-orange-100 dark:bg-orange-200 dark:text-orange-800': props.flash.warning,\n  'text-red-700 bg-red-100 dark:bg-red-200 dark:text-red-800': props.flash.error,\n}))\n\nconst clearFlashMessage = async () => {\n  await router.post(route('flash.clear'));\n  router.reload();\n};\n</script>\n","import script from \"./Pagination.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Pagination.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div v-if=\"data?.last_page > 1\" class=\"flex flex-wrap justify-center my-4 space-x-4 space-y-2\">\n    <div></div>\n    <Component v-if=\"data && data?.links\"\n               :is=\"link?.url ? 'Link' : 'span'\"\n               v-for=\"(link, index) in data.links\"\n               :key=\"`${link?.url}-${index}`\"\n               :href=\"link?.url\"\n               @click.prevent=\"changePage(link)\"\n               v-html=\"link?.label\"\n               class=\"px-4 py-3 text-sm leading-4 h-fit\"\n               :class=\"{ 'text-white bg-orange-400 hover:bg-orange-400 dark:bg-orange-400 dark:hover:bg-orange-400': link?.active,\n                      'rounded mt-2 mr-0.5 text-gray-300 dark:text-gray-700': !link?.url,\n                      'rounded bg-gray-200 hover:bg-gray-300 dark:bg-gray-800 dark:hover:bg-gray-600 text-gray-800 dark:text-gray-50 focus:text-indigo-500 hover:shadow': link?.url }\"\n    />\n  </div>\n</template>\n\n\n<script setup>\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\n\nconst appSettingStore = useAppSettingStore()\n\nconst emit = defineEmits(['page-change'])\n\ndefineProps({\n  data: Object,\n})\n\nappSettingStore.savedScrollPosition = 0\n\nconst saveScrollPosition = () => {\n  appSettingStore.savedScrollPosition = window.scrollY\n}\n\n// This function emits the page-change event when a link is clicked\nconst changePage = (link) => {\n  if (link.url) {\n    let page = new URL(link.url).searchParams.get('page')\n    page = parseInt(page, 10) // Convert the page number to an integer\n    console.log('Page to load:', page)\n    emit('page-change', page)\n  }\n  saveScrollPosition()\n}\n\nwindow.scrollTo(0, appSettingStore.savedScrollPosition)\n\n</script>\n\n\n<!--class=\"px-1 text-gray-800 dark:text-gray-50 dark:hover:text-blue-400 hover:text-blue-400\"-->\n<!--:class=\"{ 'text-gray-300 dark:text-gray-700 dark:hover:text-gray-700 hover:text-gray-300': ! link.url, 'font-bold' : link.active }\"-->\n","import script from \"./AdminHeader.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AdminHeader.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <header>\n    <div class=\"flex justify-between my-3\">\n      <div class=\"mb-4 relative\">\n        <h1 class=\"text-3xl font-semibold inline-block\">\n          <slot/>\n        </h1>\n        <span v-if=\"displayBadges\" class=\"text-white font-semibold badge badge-success absolute -top-2 -right-10 flex items-center justify-center min-w-[2rem] h-[2rem] rounded-full\">{{ (badgePrimaryNumber ?? 0) > 99 ? '99+' : (badgePrimaryNumber ?? 0) }}</span>\n        <span v-if=\"displayBadges\" class=\"font-semibold badge badge-warning absolute -top-2 -right-20 flex items-center justify-center min-w-[2rem] h-[2rem] rounded-full\">{{ (badgeSecondaryNumber ?? 0) > 99 ? '99+' : (badgeSecondaryNumber ?? 0) }}</span>\n\n      </div>\n      <div>\n        <div class=\"flex flex-wrap-reverse justify-end gap-2\">\n          <Link :href=\"`/admin/settings`\">\n            <button\n                class=\"px-4 py-2 text-white bg-blue-600 hover:bg-blue-500 rounded-lg\"\n            >Admin Settings\n            </button>\n          </Link>\n        </div>\n      </div>\n    </div>\n  </header>\n\n</template>\n\n<script setup>\nimport { reactive } from 'vue'\n\nconst props = defineProps({\n  displayBadges: Boolean,\n  badgePrimaryNumber: Number,\n  badgeSecondaryNumber: Number,\n});\n\nconst defaultProps = {\n  displayBadges: false,\n};\n\nconst finalProps = reactive({ ...defaultProps, ...props });\n\n</script>\n","import script from \"./DynamicModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./DynamicModal.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <dialog id=\"dynamicModal\" class=\"modal\">\n    <div class=\"modal-box w-11/12 max-w-5xl bg-white text-black\">\n\n      <div class=\"flex flex-row justify-between align-bottom\">\n        <div class=\"flex gap-2\">\n          <h3 class=\"font-bold text-lg\">{{ adminStore.modalHeader }}</h3>\n          <span v-if=\"adminStore.loading\" class=\"loading loading-spinner\" />\n        </div>\n        <div>\n          <h3>{{ adminStore?.selectedChannel?.name }}</h3>\n        </div>\n      </div>\n      <div class=\"flex justify-center mb-6\">\n        <div class=\"flex items-center mt-6 xl:mt-0\">\n          <div class=\"relative\">\n            <input v-model=\"adminStore.searchTerm\" @input=\"debouncedFetchItems\" type=\"search\" class=\"bg-gray-50 text-black text-sm rounded-full\n                        focus:outline-none focus:shadow w-64 pl-8 px-3 py-1\" placeholder=\"Search...\">\n            <div class=\"absolute top-0 flex items-center h-full ml-2\">\n              <svg class=\"fill-current text-gray-400 w-4\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n                <path\n                    d=\"M456.69 421.39 362.6 327.3a173.81 173.81 0 0 0 34.84-104.58C397.44 126.38 319.06 48 222.72 48S48 126.38 48 222.72s78.38 174.72 174.72 174.72A173.81 173.81 0 0 0 327.3 362.6l94.09 94.09a25 25 0 0 0 35.3-35.3ZM97.92 222.72a124.8 124.8 0 1 1 124.8 124.8 124.95 124.95 0 0 1-124.8-124.8Z\"/>\n              </svg>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div>\n        <div class=\"overflow-x-auto\">\n            <table class=\"table table-xs\">\n            <thead>\n            <tr>\n              <th>\n                <span v-if=\"adminStore.currentType === 'channelPlaylist'\">Active</span>\n                <span v-if=\"adminStore.currentType === 'mistStream'\">Active</span>\n              </th>\n              <th v-if=\"adminStore.currentType === 'channelPlaylist'\">\n                <span>ID</span>\n              </th>\n              <th>\n                <span v-if=\"adminStore.currentType === 'channelPlaylist'\">Name</span>\n                <span v-if=\"adminStore.currentType === 'mistStream'\">Name</span>\n              </th>\n              <th>\n                <span v-if=\"adminStore.currentType === 'channelPlaylist'\">Type</span>\n                <span v-if=\"adminStore.currentType === 'mistStream'\">Source</span>\n              </th>\n              <th>\n                <span v-if=\"adminStore.currentType === 'channelPlaylist'\">Priority</span>\n                <span v-if=\"adminStore.currentType === 'mistStream'\">MIME Type</span>\n              </th>\n              <th>\n                <span v-if=\"adminStore.currentType === 'channelPlaylist'\">Repeat Mode</span>\n                <span v-if=\"adminStore.currentType === 'mistStream'\">Comment</span>\n              </th>\n              <th>\n                <span v-if=\"adminStore.currentType === 'channelPlaylist'\">Start Time</span>\n                <span v-if=\"adminStore.currentType === 'mistStream'\">Created On</span>\n              </th>\n              <th>\n                <span v-if=\"adminStore.currentType === 'channelPlaylist'\">End Time</span>\n                <span v-if=\"adminStore.currentType === 'mistStream'\"></span>\n              </th>\n              <th>\n                <!-- For delete -->\n              </th>\n            </tr>\n            </thead>\n\n            <tbody>\n            <tr v-for=\"item in adminStore.paginatedItems\" :key=\"item.id\" class=\"hover:bg-blue-300 hover:cursor-pointer\"\n                :class=\"{'bg-yellow-500': item.id === adminStore.activeItemId}\">\n              <td @click=\"selectItem(item)\">\n                <div v-if=\"adminStore.currentType === 'channelPlaylist'\">\n                  <span :class=\"getStatusClass(item.status)\">\n                    {{ item.status }}\n                  </span>\n                </div>\n                <span v-if=\"adminStore.currentType === 'mistStream'\"><span v-if=\"item.active\" class=\"text-green-500\">Active</span><span\n                    v-else class=\"text-red-700\">Inactive</span></span>\n              </td>\n              <td v-if=\"adminStore.currentType === 'channelPlaylist'\">\n                <span>{{ item.id }}</span>\n              </td>\n              <td @click=\"selectItem(item)\">\n                <span v-if=\"adminStore.currentType === 'channelPlaylist'\">{{ item.name }}</span>\n                <span v-if=\"adminStore.currentType === 'mistStream'\">{{ item.name }}</span>\n              </td>\n              <td @click=\"selectItem(item)\">\n                <span v-if=\"adminStore.currentType === 'channelPlaylist'\">{{ item.type }}</span>\n                <span v-if=\"adminStore.currentType === 'mistStream'\">{{ item.source }}</span>\n              </td>\n              <td @click=\"selectItem(item)\">\n                <span v-if=\"adminStore.currentType === 'channelPlaylist'\">{{ item.priority }}</span>\n                <span v-if=\"adminStore.currentType === 'mistStream'\">{{ item.mime_type }}</span>\n              </td>\n              <td @click=\"selectItem(item)\">\n                <span v-if=\"adminStore.currentType === 'channelPlaylist'\">{{ item.repeat_mode }}</span>\n                <span v-if=\"adminStore.currentType === 'channelPlaylist' && item.repeat_mode === 'next_playlist'\"><br/>{{\n                    item?.next_playlist_name\n                  }}</span>\n                <span v-if=\"adminStore.currentType === 'mistStream'\">{{ item.comment }}</span>\n              </td>\n              <td @click=\"selectItem(item)\">\n                <span v-if=\"adminStore.currentType === 'channelPlaylist'\">{{\n                    dayjs.utc(item.start_dateTime).tz(userStore.timezone).format('MMM D, YYYY, hh:mm A')\n                  }}</span>\n                <span v-if=\"adminStore.currentType === 'mistStream'\">{{ dayjs.utc(item.created_at).tz(userStore.timezone).format('MMM D, YYYY, hh:mm A') }}</span>\n\n              </td>\n              <td @click=\"selectItem(item)\">\n                <span v-if=\"adminStore.currentType === 'channelPlaylist'\">{{ dayjs.utc(item.end_dateTime).tz(userStore.timezone).format('MMM D, YYYY, hh:mm A') }}</span>\n                <span v-if=\"adminStore.currentType === 'mistStream'\"></span>\n              </td>\n              <td class=\"w-fit whitespace-nowrap overflow-hidden\">\n                <button\n                    v-if=\"adminStore.currentType === 'mistStream'\"\n                    @click.prevent=\"openEditModal(item)\"\n                    class=\"ml-2 px-2 py-1 text-white font-semibold bg-blue-500 hover:bg-blue-600 rounded-lg\"\n                >\n                  <font-awesome-icon icon=\"fa-pencil\" class=\"text-xs\"/>\n                </button>\n                <button\n                    v-if=\"adminStore.currentType === 'mistStream'\"\n                    @click=\"removeItem(item)\"\n                    class=\"ml-1 px-2 py-1 text-white font-semibold bg-red-500 hover:bg-red-600 rounded-lg\"\n                >\n                  <font-awesome-icon icon=\"fa-trash-can\" class=\"text-xs\"/>\n                </button>\n                <button\n                    v-if=\"adminStore.currentType === 'channelPlaylist'\"\n                    @click.prevent=\"openEditPlaylistModal(item)\"\n                    class=\"ml-2 px-2 py-1 text-white font-semibold bg-blue-500 hover:bg-blue-600 rounded-lg\"\n                >\n                  <font-awesome-icon icon=\"fa-pencil\" class=\"text-xs\"/>\n                </button>\n                <button\n                    v-if=\"adminStore.currentType === 'channelPlaylist' && item.status === 'Inactive'\"\n                    @click=\"openConfirmRemoveChannelPlaylistModal(item)\"\n                    class=\"ml-1 px-2 py-1 text-white font-semibold bg-red-500 hover:bg-red-600 rounded-lg\"\n                >\n                  <font-awesome-icon icon=\"fa-trash-can\" class=\"text-xs\"/>\n                </button>\n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </div>\n        <div v-if=\"adminStore.totalModalPages > 1\" class=\"flex flex-row justify-center mt-6 w-full\">\n          <div class=\"join grid grid-cols-2\">\n            <button\n                class=\"join-item btn btn-sm btn-outline\"\n                @click=\"adminStore.prevPage\"\n                :disabled=\"adminStore.currentPage === 1\"\n            >\n              Previous page\n            </button>\n            <button\n                class=\"join-item btn btn-sm btn-outline\"\n                @click=\"adminStore.nextPage\"\n                :disabled=\"adminStore.currentPage === adminStore.totalModalPages\"\n            >\n              Next\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <AddOrUpdateMistStreamModal :id=\"`updateMistStreamModal`\" :form-errors=\"$page.props.errors\"\n                                  @update-list=\"refreshList\">\n        <template #form-title>\n          Update Mist Stream\n        </template>\n        <template #form-description>\n          Note: You cannot edit the stream name (right now), it will only create a new stream. This is a bug that needs\n          to be fixed in the AddOrUpdateMistStreamJob. To fix this we need to get the list of streams... look for this particular stream and then prepare the streamDetails with the optional parameters that are shown in the stream call. I think that's why it's not updating... because the update may not have all the parameters.\n        </template>\n        <template #button-label>\n          Update\n        </template>\n      </AddOrUpdateMistStreamModal>\n\n      <dialog id=\"confirmSelectionModal\" class=\"modal\">\n        <div class=\"modal-box bg-white text-black\">\n          <h3 class=\"font-bold text-lg\">Confirm Selection</h3>\n          <p class=\"py-4\">\n            Are you sure you want to select <span id=\"selectedItemName\"></span>?\n          </p>\n          <div class=\"modal-action\">\n            <button class=\"btn\" @click=\"confirmSelection\" :disabled=\"adminStore.loading\">Confirm</button>\n            <button class=\"btn\" @click=\"closeConfirmSelectionModal\" :disabled=\"adminStore.loading\">Cancel</button>\n          </div>\n        </div>\n      </dialog>\n\n      <dialog id=\"confirmRemoveModal\" class=\"modal\">\n        <div class=\"modal-box bg-white text-black\">\n          <h3 class=\"font-bold text-lg\">Confirm Remove</h3>\n          <p class=\"py-4\">\n            Are you sure you want to remove <span id=\"selectedForRemovalItemName\"></span>?\n          </p>\n          <div class=\"modal-action\">\n            <button class=\"btn\" @click=\"confirmRemove\" :disabled=\"adminStore.loading\">Confirm</button>\n            <button class=\"btn\" @click=\"closeConfirmRemoveModal\" :disabled=\"adminStore.loading\">Cancel</button>\n          </div>\n        </div>\n      </dialog>\n\n      <dialog id=\"confirmRemoveChannelPlaylistModal\" class=\"modal\">\n        <div class=\"modal-box bg-white text-black\">\n          <h3 class=\"font-bold text-lg\">Confirm Remove</h3>\n          <p class=\"py-4\">\n            Are you sure you want to remove <span id=\"selectedForRemovalItemName\"></span>?\n          </p>\n          <div class=\"modal-action\">\n            <button class=\"btn\" @click=\"removeChannelPlaylist\" :disabled=\"adminStore.loading\">Confirm</button>\n            <button class=\"btn\" @click=\"closeConfirmChannelPlaylistRemoveModal\" :disabled=\"adminStore.loading\">Cancel</button>\n          </div>\n        </div>\n      </dialog>\n\n      <!-- Edit Playlist Modal -->\n      <dialog id=\"updateChannelPlaylistModal\" class=\"modal\">\n        <div class=\"modal-box p-0 flex flex-col h-full\">\n\n          <!-- Sticky header -->\n          <div class=\"modal-header sticky top-0 left-0 right-0 bg-white p-4 z-40 border-b border-gray-200\">\n            <!-- Close button at the top right corner -->\n            <form method=\"dialog\" class=\"absolute right-2 top-2 z-50\">\n              <button class=\"btn btn-sm btn-circle btn-ghost\">✕</button>\n            </form>\n            <h2 class=\"text-2xl font-bold\">Edit Playlist</h2>\n          </div>\n\n          <!-- Modal content with padding to account for the sticky header and footer -->\n          <div class=\"modal-body flex-1 overflow-y-auto\">\n            <EditPlaylist v-if=\"selectedPlaylist\" :playlist=\"selectedPlaylist\" @update-list=\"refreshList\" />\n          </div>\n\n          <!-- Sticky footer -->\n          <div class=\"modal-action sticky bottom-0 left-0 right-0 bg-white p-4 z-40 border-t border-gray-200\">\n            <button class=\"btn\" @click=\"closeEditPlaylistModal\">Close</button>\n          </div>\n        </div>\n      </dialog>\n\n\n      <div class=\"modal-action\">\n        <form method=\"dialog\">\n          <!-- if there is a button, it will close the modal -->\n          <button class=\"btn\" @click=\"adminStore.clearSelectedChannelAndItems\">Close</button>\n        </form>\n      </div>\n    </div>\n  </dialog>\n</template>\n\n<script setup>\nimport { ref, watch, computed, onMounted, defineAsyncComponent } from 'vue'\nimport { useAdminStore } from '@/Stores/AdminStore'\nimport { useChannelStore } from '@/Stores/ChannelStore'\nimport { useUserStore } from '@/Stores/UserStore'\nimport { useChannelPlaylistStore } from '@/Stores/ChannelPlaylistStore'\nimport debounce from 'lodash/debounce'\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome'\nimport { router } from '@inertiajs/vue3'\n// Lazy load the components\nconst AddOrUpdateMistStreamModal = defineAsyncComponent(() => import('@/Components/Global/MistStreams/AddOrUpdateMistStreamModal.vue'))\nconst EditPlaylist = defineAsyncComponent(() => import('@/Components/Pages/Admin/ChannelPlaylists/EditPlaylist.vue'))\n\nimport dayjs from 'dayjs'\n\nconst adminStore = useAdminStore()\nconst channelStore = useChannelStore()\nconst userStore = useUserStore()\nconst channelPlaylistStore = useChannelPlaylistStore()\n// const searchTerm = ref('');\n\nlet props = defineProps({\n  type: String,\n})\n\nconst items = computed(() => adminStore.filteredItems)\nconst currentItemId = computed(() => adminStore.activeItem)\nconst selectedPlaylist = ref(null) // Reactive property for the selected playlist\n\n// Create a reactive reference to force updates\nconst forceUpdate = ref(0);\n\n// const searchItems = () => {\n//   adminStore.searchItems(adminStore.type, searchTerm.value);\n// };\n//\n// const debouncedFetchItems = debounce(adminStore.searchItems, 300);\n\n// watch(searchTerm, debouncedFetchItems);\n\n\nconst selectedItem = ref(null) // A reactive property to hold the currently selected item\n\nconst selectItem = (item) => {\n  selectedItem.value = item // Store the item temporarily\n  document.getElementById('selectedItemName').textContent = item.name // Display the name in the modal\n  document.getElementById('confirmSelectionModal').showModal() // Open the modal for confirmation\n}\n\nconst removeItem = (item) => {\n  selectedItem.value = item // Store the item temporarily\n  document.getElementById('selectedForRemovalItemName').textContent = item.name // Display the name in the modal\n  document.getElementById('confirmRemoveModal').showModal() // Open the modal for confirmation\n}\n\nconst editItem = (item) => {\n  selectedItem.value = item // Store the item temporarily\n  // Create Modal for editing\n  // document.getElementById('selectedForRemovalItemName').textContent = item.name; // Display the name in the modal\n  // document.getElementById('confirmRemoveModal').showModal(); // Open the modal for confirmation\n}\n\nconst confirmSelection = async () => {\n  if (selectedItem.value) {\n    await adminStore.updateActiveItemId(selectedItem.value.id)\n    document.getElementById('confirmSelectionModal').close() // Close the modal\n    // Handle additional logic for item selection if necessary\n  }\n}\n\nconst confirmRemove = async () => {\n  if (selectedItem.value) {\n    removeMistStream(selectedItem.value.name)\n    adminStore.removeItem(selectedItem.value)\n    document.getElementById('confirmRemoveModal').close() // Close the modal\n    // Handle additional logic for item selection if necessary\n  }\n}\n// const selectItem = async (item) => {\n//   await adminStore.updateActiveItemId(item.id);\n//   // Handle additional logic for item selection if necessary\n// };\n\nconst openEditModal = (item) => {\n  document.getElementById('updateMistStreamModal').showModal()\n  channelStore.mistStream = item\n}\n\nconst removeMistStream = (name) => {\n  router.post(route('mistStream.remove'), {'name': name})\n  // document.getElementById('dynamicModal').close()\n}\n\nconst openEditPlaylistModal = (item) => {\n  console.log('Edit item opening: ', item)\n  selectedPlaylist.value = item\n  channelPlaylistStore.setPlaylistData(item)\n  document.getElementById('updateChannelPlaylistModal').showModal()\n}\n\nconst closeEditPlaylistModal = () => {\n  channelPlaylistStore.reset()\n  document.getElementById('updateChannelPlaylistModal').close()\n}\n\nconst channelPlaylistRemoveItemHolder = ref()\n\nconst openConfirmRemoveChannelPlaylistModal = (item) => {\n  channelPlaylistRemoveItemHolder.value = item\n  document.getElementById('confirmRemoveChannelPlaylistModal').showModal()\n}\n\nconst removeChannelPlaylist = () => {\n  channelPlaylistStore.removePlaylist(channelPlaylistRemoveItemHolder.value.id)\n  adminStore.removeItem(channelPlaylistRemoveItemHolder)\n  document.getElementById('confirmRemoveChannelPlaylistModal').close()\n}\n\nconst closeConfirmChannelPlaylistRemoveModal = () => {\n  document.getElementById('confirmRemoveChannelPlaylistModal').close()\n}\n\nconst refreshList = () => {\n  adminStore.fetchItems(props.type)\n}\n\nconst closeConfirmRemoveModal = () => {\n  document.getElementById('confirmRemoveModal').close()\n}\n\nconst closeConfirmSelectionModal = () => {\n  document.getElementById('confirmSelectionModal').close()\n}\n\n// onMounted(() => {\n//   adminStore.fetchItems(props.type).then(() => {\n//     adminStore.setActiveItem(props.type);\n//   }).catch(error => {\n//     console.error('Error fetching items:', error);\n//   });\n// });\n\n// Watch the items array in the store\nwatch(() => adminStore.items, () => {\n  forceUpdate.value++; // Increment to force a re-render\n});\n\nconst getStatusClass = (status) => {\n  switch (status) {\n    case 'Active':\n      return 'text-green-500'\n    case 'Inactive':\n      return 'text-gray-700'\n    case 'Scheduled':\n      return 'text-purple-700'\n    case 'Standby':\n      return 'text-orange-700'\n    default:\n      return ''\n  }\n}\n// adminStore.fetchItems(props.type)\n\n// onMounted(adminStore.fetchItems(adminStore.type)); // Optionally fetch items when the modal mounts\n\n// const fetchItems = () => {\n//   router.get(`/admin/channels/search/${props.type}`, { search: searchTerm.value }, {\n//     preserveState: false,\n//     onSuccess: (page) => {\n//       items.value = page.props.items; // Assume your backend sends back 'items'\n//     }\n//   });\n// };\n\n// watch(searchTerm, fetchItems);\n\n// onMounted(fetchItems); // Optionally fetch items when the modal mounts\n</script>\n\n\n<!--<script setup>-->\n<!--import { ref, defineProps, defineEmits } from 'vue';-->\n\n<!--const props = defineProps({-->\n<!--  showModal: Boolean,-->\n<!--  currentItem: Object,-->\n<!--  itemsType: String-->\n<!--});-->\n\n<!--const emits = defineEmits(['update:item', 'close']);-->\n\n<!--const searchTerm = ref('');-->\n<!--const items = ref([]);-->\n\n<!--const fetchItems = async () => {-->\n<!--  // Fetch items based on `itemsType` and `searchTerm`-->\n<!--  // Update `items` with the fetched data-->\n<!--};-->\n\n<!--const selectItem = (item) => {-->\n<!--  emits('update:item', { type: props.itemsType, item });-->\n<!--};-->\n\n<!--const closeModal = () => {-->\n<!--  emits('close');-->\n<!--};-->\n<!--</script>-->\n","<template>\n  <!--  <div class=\"source-selector\" :class=\"{'is-priority': source?.isPriority, 'is-playing': source?.isPlaying, 'is-fallback': source?.isFallback, 'has-error': source?.hasError}\">-->\n  <div\n      :class=\"['source-selector', {'is-priority': source?.playback_priority_type, 'is-playing': source?.isPlaying, 'is-fallback': source?.isFallback, 'has-error': source?.hasError}]\">\n    <div>\n      <!-- Display the source status here (playing, fallback, error) -->\n      <div v-if=\"source?.playback_priority_type === sourceType\" class=\"btn btn-xs mt-1 text-white bg-green-500 hover:bg-green-500 border-none\">Priority</div>\n      <span>\n\n      </span>\n      <!-- Icon or button to set this source as priority -->\n      <!--      <button class=\"btn btn-xs\" v-if=\"!source?.playback_priority_type\" @click=\"setPriority\">Set as Priority</button>-->\n    </div>\n  </div>\n\n  <!--  <div v-if=\"source?.playback_priority_type === 'mistStream'\">-->\n  <!--    <button class=\"btn btn-xs hover:bg-green-500 bg-green-500\">Priority</button>-->\n  <!--  </div>-->\n\n  <button v-if=\"source?.playback_priority_type !== sourceType\" class=\"btn btn-xs mt-1 bg-gray-100 text-gray-800 hover:bg-gray-200 border-none\"\n          @click=\"setPriority\">Set as Priority\n  </button>\n\n\n  <dialog :id=\"`confirmPriorityChangeModal`\" class=\"modal\">\n    <div class=\"modal-box bg-white text-black\">\n      <h3 class=\"font-bold text-lg\">Confirm Selection for {{ adminStore.sourceSelector?.source?.name }}</h3>\n      <p class=\"py-4\">\n        Are you sure you want to change priority to <span class=\"font-bold\">{{ adminStore.sourceSelector?.sourceType }}</span>?\n      </p>\n      <div class=\"modal-action\">\n        <button class=\"btn\" @click.prevent=\"confirmPriorityChange\">Confirm</button>\n        <button class=\"btn\" @click.prevent=\"closeModal\">Cancel</button>\n      </div>\n    </div>\n  </dialog>\n\n\n</template>\n\n<script setup>\nimport { useAdminStore } from '@/Stores/AdminStore'\nimport { ref } from 'vue'\n\nconst adminStore = useAdminStore()\n\nlet props = defineProps([\n  'source',\n  'sourceType',\n])\n\n// const setPriority = (sourceType) => {\n//   emit('change', { sourceType, priority: true });\n//   // Implement function to make API call to update the backend\n// };\n\n\nconst setPriority = () => {\nadminStore.sourceSelector.source = props.source\nadminStore.sourceSelector.sourceType = props.sourceType\n  document.getElementById('confirmPriorityChangeModal').showModal() // Open the modal for confirmation\n}\n\nconst confirmPriorityChange = async () => {\n  await adminStore.setPlaybackPriorityType(adminStore.sourceSelector.source, adminStore.sourceSelector.sourceType)\n  document.getElementById('confirmPriorityChangeModal').close() // Close the modal\n}\n\nconst closeModal = () => {\n  document.getElementById('confirmPriorityChangeModal').close()\n}\n\n// const setPriority = async () => {\n//   // Directly call the store action to update the priority.\n//   await adminStore.setPlaybackPriorityType(props.source, props.sourceType);\n//   // No need to emit an event to the parent component.\n// };\n\n</script>\n\n<style scoped>\n.source-selector {\n  /* Base styles */\n  /*margin-top: 0.5rem;*/\n}\n\n.is-playing {\n  /* Styles for playing status */\n}\n\n.is-priority {\n  /* Styles for isPriority status */\n  color: black;\n  font-weight: 300;\n}\n\n.is-fallback {\n  /* Styles for fallback status */\n}\n\n.has-error {\n  /* Styles for error status */\n}\n\n</style>\n","import api from \"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-10.use[1]!../../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-10.use[2]!../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./SourceSelector.vue?vue&type=style&index=0&id=1f848704&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./SourceSelector.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./SourceSelector.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./SourceSelector.vue?vue&type=style&index=0&id=1f848704&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-1f848704\"]])\n\nexport default __exports__","import script from \"./Label.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Label.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"month-view\">\n    <!-- Month view layout -->\n    <div class=\"container mx-auto px-4 py-8\">\n      <div class=\"flex justify-between items-center mb-4\">\n        <button @click=\"scheduleStore.subtractMonth\" class=\"p-2 bg-gray-200 rounded-full hover:bg-gray-300\">\n          <!-- Previous Month -->\n          <span>&lt;</span>\n        </button>\n        <span>{{ currentMonthName }} {{ currentYear }}</span>\n        <button @click=\"scheduleStore.addMonth\" class=\"p-2 bg-gray-200 rounded-full hover:bg-gray-300\">\n          <!-- Next Month -->\n          <span>&gt;</span>\n        </button>\n      </div>\n      <div class=\"grid grid-cols-7 gap-4 text-center\">\n        <!-- Day of the week headings -->\n        <div class=\"font-bold\" v-for=\"day in daysOfWeek\" :key=\"day\">{{ day }}</div>\n        <!-- Days -->\n        <div\n            class=\"py-2 rounded-full hover:bg-blue-100 cursor-pointer\"\n            v-for=\"(day, index) in daysInMonth\"\n            :key=\"index\"\n            :class=\"{'bg-blue-200 text-gray-800': isSelectedDay(day), 'text-gray-300': !isCurrentMonth(day), 'text-gray-800': isCurrentMonth(day)}\"\n            @click=\"selectDay(day)\"\n        >\n          {{ day.getDate() }}\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\n// Month view logic\nimport { useScheduleStore } from '@/Stores/ScheduleStore';\nimport { getMonth, isSameDay, isToday as isTodayDate, startOfMonth, endOfMonth, startOfWeek, endOfWeek, eachDayOfInterval, addDays } from 'date-fns';\nimport { storeToRefs } from 'pinia'\nimport { computed, watch } from 'vue'\n\nconst scheduleStore = useScheduleStore();\n// const { currentMonthName, currentYear, daysInMonth, subtractMonth, addMonth, currentMonthIndex } = storeToRefs(scheduleStore);\nconst { viewingWindowStart, currentMonth, currentMonthName, currentYear, daysInMonth } = storeToRefs(scheduleStore);\n\n// const now = new Date();\n// const currentMonth = ref(now);\n\nwatch(viewingWindowStart, (newValue, oldValue) => {\n  // When viewingWindowStart changes, update currentMonth to the new month of viewingWindowStart\n  scheduleStore.currentMonth = new Date(viewingWindowStart.value.getFullYear(), viewingWindowStart.value.getMonth(), 1);\n  }, { deep: true });\n\nconst daysOfWeek = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\n// Computes the days to be displayed in the month, including days from the previous and next months to fill the weeks\n// const daysInMonth = computed(() => {\n//   const currentMonth = scheduleStore.currentMonth; // Assuming currentMonth is a reactive date object for the current month\n//   const startOfCurrentMonth = startOfMonth(currentMonth);\n//   const endOfCurrentMonth = endOfMonth(currentMonth);\n//\n//   // Start at the beginning of the week where the first day of the month is\n//   const startOfGrid = startOfWeek(startOfCurrentMonth, { weekStartsOn: 0 });\n//   // End at the end of the week where the last day of the month is\n//   const endOfGrid = endOfWeek(endOfCurrentMonth, { weekStartsOn: 0 });\n//\n//   // Generate the days for the calendar grid\n//   return eachDayOfInterval({ start: startOfGrid, end: endOfGrid });\n// });\n\n// Method to handle day selection\nfunction selectDay(day) {\n  scheduleStore.setSelectedDay(day); // Assuming you've added setSelectedDay action to your store\n}\n\nfunction isToday(day) {\n  return isTodayDate(day);\n}\n\nfunction isSelectedDay(day) {\n  return isSameDay(day, scheduleStore.selectedDay); // Use isSameDay for comparison\n}\n\nfunction isCurrentMonth(day) {\n  // Since you're already tracking currentMonth in the store, ensure this function uses it directly\n  return getMonth(day) === getMonth(scheduleStore.currentMonth); // Directly compare to the store's currentMonth\n}\n\n// const startDayOfMonth = computed(() => startOfMonth(currentMonth.value));\n// const endDayOfMonth = computed(() => endOfMonth(currentMonth.value));\n\n// const daysInMonth = computed(() =>\n//     eachDayOfInterval({\n//       start: startDayOfMonth.value,\n//       end: endDayOfMonth.value,\n//     })\n// );\n\n// const currentMonthName = computed(() => format(currentMonth.value, 'MMMM'));\n// const currentYear = computed(() => getYear(currentMonth.value));\n\n// function subtractMonth() {\n//   currentMonth.value = subMonths(currentMonth.value, 1);\n// }\n//\n// function addMonth() {\n//   currentMonth.value = addMonths(currentMonth.value, 1);\n// }\n\n// function isToday(day) {\n//   return isTodayDate(day);\n// }\n//\n// function isCurrentMonth(day) {\n//   return getMonth(day) === currentMonthIndex.value; // Use `.value` because `storeToRefs` makes it a ref\n// }\n</script>\n\n<style scoped>\n/* Styles specific to month view */\n</style>","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-10.use[1]!../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-10.use[2]!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./MonthView.vue?vue&type=style&index=0&id=6ea1523e&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./MonthView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./MonthView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./MonthView.vue?vue&type=style&index=0&id=6ea1523e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-6ea1523e\"]])\n\nexport default __exports__","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-10.use[1]!../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-10.use[2]!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./WeekView.vue?vue&type=style&index=0&id=91256a50&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./WeekView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./WeekView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./WeekView.vue?vue&type=style&index=0&id=91256a50&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-91256a50\"]])\n\nexport default __exports__","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-10.use[1]!../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-10.use[2]!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./ThreeDayView.vue?vue&type=style&index=0&id=51271fd0&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./ThreeDayView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ThreeDayView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ThreeDayView.vue?vue&type=style&index=0&id=51271fd0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-51271fd0\"]])\n\nexport default __exports__","<template>\n  <Head title=\"Admin/Schedule\"/>\n\n  <div class=\"place-self-center flex flex-col\">\n    <div id=\"topDiv\" class=\"bg-white text-black dark:bg-gray-800 dark:text-gray-50 p-5 mb-10\">\n\n      <Message v-if=\"appSettingStore.showFlashMessage\" :flash=\"$page.props.flash\"/>\n\n      <AdminHeader>Schedule</AdminHeader>\n\n      <div class=\"flex flex-row justify-between gap-x-4 mb-3\">\n        <div>\n          <Link :href=\"`#`\">\n            <button\n                class=\"btn btn-sm bg-green-500 hover:bg-green-600 text-white px-4 py-2 mr-2 rounded disabled:bg-gray-400\"\n                disabled\n            >Blank\n            </button>\n          </Link>\n          <Link :href=\"`#`\">\n            <button\n                class=\"btn btn-sm bg-green-500 hover:bg-green-600 text-white px-4 py-2 mr-2 rounded disabled:bg-gray-400\"\n                disabled\n            >Blank\n            </button>\n          </Link>\n          <Link :href=\"`#`\">\n            <button\n                class=\"btn btn-sm bg-green-500 hover:bg-green-600 text-white px-4 py-2 mr-2 rounded disabled:bg-gray-400\"\n                disabled\n            >Blank\n            </button>\n          </Link>\n          <button\n              @click.prevent=\"purgeAllCaches\"\n              class=\"btn btn-sm bg-green-500 hover:bg-green-600 text-white px-4 py-2 mr-2 rounded-lg disabled:bg-gray-400\"\n          >\n            Purge All Caches\n          </button>\n          <button\n              @click.prevent=\"updateSchedule\"\n              class=\"btn btn-sm bg-green-500 hover:bg-green-600 text-white px-4 py-2 mr-2 rounded-lg disabled:bg-gray-400\"\n          >\n            Update Schedule\n          </button>\n\n\n        </div>\n        <input v-model=\"adminStore.searchTerm\" type=\"search\" placeholder=\"Search...\" class=\"border px-2 rounded-lg\"/>\n      </div>\n\n      <div class=\"flex flex-col\">\n        <div class=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\n          <div class=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\n            <div class=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\n\n              <div class=\"relative overflow-x-auto shadow-md sm:rounded-lg\">\n                <div\n                    class=\"table w-full text-sm text-left text-gray-500 dark:text-gray-400\"\n                >\n                  <div\n                      class=\"table-header-group text-xs text-gray-700 bg-gray-50 dark:bg-gray-700 dark:text-gray-400\"\n                  >\n                    <div class=\"table-row\">\n                      <div scope=\"col\" class=\"table-cell px-6 py-3 uppercase\">\n                        <font-awesome-icon icon=\"fa-repeat\" class=\"mr-2 cursor-pointer hover:text-blue-500\"\n                                           @click.prevent=\"resetCalendar\"/>\n                        <span class=\"uppercase\">Calendar </span>\n                      </div>\n\n\n                    </div>\n                  </div>\n                  <div class=\"table-row-group\">\n\n                    <div class=\"calendar\">\n\n                      <!-- Calendar View -->\n                      <div class=\"calendar-view\">\n                        <MonthView />\n\n                        <!-- View Selector -->\n                        <div class=\"view-selector px-6 space-x-2 border-t-2 border-gray-50 pt-6\">\n                          <span class=\"text-xm uppercase font-semibold tracking-wider\">View: </span>\n                          <button @click=\"setView('week')\" class=\"py-1 px-2 text-black rounded-lg\" :class=\"[currentView === 'week' ? 'bg-blue-200' : 'bg-gray-100 hover:bg-gray-200']\">Week</button>\n                          <button @click=\"setView('threeDay')\" class=\"py-1 px-2 text-black rounded-lg\" :class=\"[currentView === 'threeDay' ? 'bg-blue-200' : 'bg-gray-100 hover:bg-gray-200']\">3-Day</button>\n                          <button @click=\"setView('oneDay')\" class=\"py-1 px-2 text-black rounded-lg\" :class=\"[currentView === 'oneDay' ? 'bg-blue-200' : 'bg-gray-100 hover:bg-gray-200']\">1-Day</button>\n                          <button  @click=\"setToToday\" class=\"py-1 px-2 text-black rounded-lg\" :class=\"{'bg-blue-200': scheduleStore.isToday, 'bg-gray-100 hover:bg-gray-200': !scheduleStore.isToday}\">Today</button>\n                        </div>\n                        <WeekView v-if=\"currentView === 'week'\"/>\n                        <ThreeDayView v-if=\"currentView === 'threeDay'\"/>\n                        <TodayView v-if=\"currentView === 'oneDay'\"/>\n                      </div>\n                    </div>\n\n\n\n\n\n                  </div>\n                </div>\n\n              </div>\n            </div>\n          </div>\n        </div>\n\n\n\n\n\n      </div>\n    </div>\n  </div>\n\n</template>\n\n\n<script setup>\nimport { router } from '@inertiajs/vue3'\nimport { onBeforeUnmount, onMounted, onUnmounted, ref, watch } from 'vue'\nimport throttle from 'lodash/throttle'\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome'\nimport { usePageSetup } from '@/Utilities/PageSetup'\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\nimport { useScheduleStore } from '@/Stores/ScheduleStore'\nimport { useAdminStore } from '@/Stores/AdminStore'\nimport AdminHeader from '@/Components/Pages/Admin/AdminHeader'\nimport Message from '@/Components/Global/Modals/Messages'\nimport Pagination from '@/Components/Global/Paginators/Pagination'\nimport SourceSelector from '@/Components/Pages/Admin/Channels/SourceSelector'\nimport DynamicModal from '@/Components/Pages/Admin/Channels/DynamicModal'\nimport AddOrUpdateMistStreamModal from '@/Components/Global/MistStreams/AddOrUpdateMistStreamModal'\nimport MonthView from '@/Components/Global/Calendar/MonthView'\nimport WeekView from '@/Components/Global/Calendar/WeekView'\nimport ThreeDayView from '@/Components/Global/Calendar/ThreeDayView'\nimport TodayView from '@/Components/Global/Calendar/TodayView'\n\nusePageSetup('admin.schedule')\n\nconst appSettingStore = useAppSettingStore()\nconst scheduleStore = useScheduleStore()\nconst adminStore = useAdminStore()\n\nlet props = defineProps({})\n\nconst reloadSchedule = () => {\n  //\n}\n\nconst setToToday = () => {\n  // Use the existing action to set the selected day to today\n  scheduleStore.setSelectedDayToToday(new Date());\n  currentView.value = 'oneDay'\n};\n\nconst currentView = ref('oneDay')\n\nconst setView = (view) => {\n  currentView.value = view\n}\n\nconst purgeAllCaches = () => {\nscheduleStore.purgeAllCaches()\n}\n\nconst updateSchedule = () => {\n  scheduleStore.updateSchedule()\n}\n\nconst resetCalendar = () => {\n  scheduleStore.reset()\n  scheduleStore.checkAndFetchForUpcomingContent()\n}\n\nonBeforeUnmount(() => {\n  scheduleStore.reset()\n})\n\n</script>\n\n<style scoped>\n\n#tooltip {\n  background: #333;\n  color: white;\n  font-weight: bold;\n  padding: 4px 8px;\n  font-size: 13px;\n  border-radius: 4px;\n}\n\n:deep(.popper) {\n  background: #333333;\n  padding: 2px;\n  border-radius: 20px;\n  color: #fff;\n  font-weight: bold;\n  text-transform: uppercase;\n}\n\n:deep(.popper #arrow::before) {\n  background: #333333;\n}\n\n:deep(.popper:hover),\n:deep(.popper:hover > #arrow::before) {\n  background: #333333;\n}\n</style>\n","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-10.use[1]!../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-10.use[2]!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./Index.vue?vue&type=style&index=0&id=0d2b00ca&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./Index.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Index.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Index.vue?vue&type=style&index=0&id=0d2b00ca&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-0d2b00ca\"]])\n\nexport default __exports__"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","dayjs","utc","timezone","isSameOrBefore","isSameOrAfter","initialState","playlists","selectedPlaylist","scheduleItems","gaps","startTime","format","endTime","add","contentItems","contentFetched","currentPage","totalPages","searchQuery","showModal","loading","loadingSchedules","processing","error","id","description","url","priority","repeat_mode","next_playlist_id","useChannelPlaylistStore","defineStore","state","actions","assign","this","openAddContentModal","closeAddContentModal","fetchPlaylists","_this","_callee","response","_response$data","message","status","_context","axios","get","data","useNotificationStore","setToastNotification","t0","createPlaylist","playlist","_this2","_callee2","_context2","validateScheduleItems","post","_objectSpread","getValidScheduleItems","showNotification","handleError","updatePlaylist","_this3","_callee3","adminStore","index","adminIndex","_context3","useAdminStore","console","put","concat","findIndex","items","item","playlist_items","document","getElementById","close","clearError","notificationStore","some","conflict","setGeneralServiceNotification","filter","removed","sort","b","start_dateTime","isBefore","end_dateTime","errorMessage","errorDetails","details","JSON","parse","detailedErrorMessages","_i","_Object$entries","entries","_Object$entries$_i","_slicedToArray","field","messages","messageText","Array","isArray","join","setPlaylistData","log","userStore","useUserStore","tz","map","mappedItem","content_id","content_type","order","media_type","source_path","source_type","is_live","is_scheduled","current_viewers_count","max_viewers_count","additional_sources","custom_playback_options","metadata","has_played","duration_minutes","content","fetchSchedules","_this4","_callee4","_this4$scheduleItems","_response$data2","_context4","params","startTimeUTC","endTimeUTC","_toConsumableArray","updateConflicts","removeItem","find","addItem","removeAllItems","clearRemovedItems","recalculateIndexes","currentItem","j","nextItem","isAfter","selectPlaylist","removePlaylist","playlistId","router","route","channelPlaylist","resolveConflicts","conflictsResolved","_this5","_ret","_loop","_ret2","_loop2","previousItem","currentStart","previousEnd","previousStart","isSame","created_at","insertGaps","start","end","toISOString","diff","checkForGapBeforeFirstItem","checkForGapsBetweenItems","checkForGapAfterLastItem","gapStart","gapEnd","gapDuration","lastItemEnd","fetchContent","contentType","maxDurationMinutes","startDateTime","_arguments","_this6","_callee5","page","search","startDateTimeUTC","_response$data3","_context5","undefined","guess","current_page","total_pages","addContentToSchedule","removeGap","resetContent","setSearchQuery","query","setPage","getters","scheduleItemsWithUserTimezone","hasRemovedItems","conflictCount","gapCount","ownKeys","getOwnPropertySymbols","getOwnPropertyDescriptor","_defineProperty","getOwnPropertyDescriptors","defineProperties","toPrimitive","String","Number","_toPrimitive","_toPropertyKey","convertScheduleToTimezone","scheduleData","startTimeInUserTz","formatDateTimeFromUtcToUserTimezone","endTimeInUserTz","getUpcomingContentDates","viewingWindowStart","dates","toDate","weekOfYear","isToday","isYesterday","isTomorrow","advancedFormat","getTimeZone","baseTime","currentHalfHour","startOf","minute","fourHoursLater","currentMonth","selectedDay","currentWeekStart","currentWeekEnd","endOf","nextFourHoursOfContent","nextFourHoursOfContentWithPlaceholders","fiveDaySixHourSchedule","schedules","isLoading","nextPage","hasMore","todaysContent","weeklyContent","dataFetchLog","savingToSchedule","slotIntervalMinutes","mediumScreenSlotHours","smallScreenSlotHours","verySmallScreenSlotHours","timeSlots","timeBanners","duration","useScheduleStore","resetAll","setSelectedDay","day","fetchWeekDataIfNeeded","setSelectedDayToToday","now","changeDay","days","currentTimeZone","currentTime","newDay","hour","shiftHours","hours","isElevenPM","date","subtractMonth","subtract","addMonth","fetchFiveDaySixHourSchedule","_callee6","_context6","userTimezone","fetchTodaysContent","_this7","_callee7","_context7","preloadWeeklyContent","_this8","_callee8","currentDate","_context8","loadWeekFromDate","startDate","endDate","_this9","_callee9","dayStartDate","dayEndDate","fullISOStartDate","fullISOEndDate","newData","_context9","Set","stringify","fetchMoreSchedules","_this10","_callee10","lastSchedule","_context10","_this11","_callee11","formattedDate","dayDate","fullISODate","_context11","self","updateFetchLogs","weekStart","weekEnd","fetchTime","existingLogIndex","lastFetch","needsDataForWeek","formatISODate","weekStartStr","weekEndStr","logWeekStartStr","logWeekEndStr","calculateExtendedEndForUpcomingContent","checkAndFetchForUpcomingContent","_this12","_callee12","upcomingDates","fifteenMinutesAgo","_iterator","_step","_context13","_createForOfIteratorHelper","dayjsDate","dateString","_context12","contentDate","lastFetchedTime","isFresh","fetchDataAndUpdateLog","t1","_this13","_callee13","_context14","_this14","_callee14","_context15","updateBaseTime","time","setBaseTime","newTime","updateNextFourHours","_this15","_callee15","_context16","updateTimeRange","setTimeSlots","prepareShowsForGrid","baseDate","roundedMinutes","second","millisecond","initializeTimeSlots","durationHours","intervalMinutes","slots","slotTime","createTimeSlots","slotHours","appSettingStore","useAppSettingStore","isVerySmallScreen","isSmallScreen","totalSlots","shows","filterShowsForTimeRange","processedShows","calculateGridSlots","showsWithStatusFlags","processShows","_this$updateColumnOcc","updateColumnOccupancy","colOccupancy","maxRowUsed","gridItems","fillGapsAndCreatePlaceholders","combinedShows","sortShowsByPosition","_this16","show","warn","showStart","showEnd","isInTimeRange","firstTimeSlot","lastTimeSlot","slotIndex","slot","Math","max","endSlotIndex","span","gridStart","gridSpan","_this17","comingUpNextSet","nowPlaying","placeholder","gridRow","comingUpNext","cols","fill","row","findAndFillGapsForSingleRow","has","createPlaceholder","createBlankSpotPlaceholder","purgeAllCaches","_callee16","_context17","reload","updateSchedule","_callee17","_context18","preparedTimeBanners","timeZone","todayStart","tomorrowStart","yesterdayStart","flatMap","banner","bannerTodayStart","parseInt","split","bannerTodayEnd","clone","bannerTomorrowStart","bannerTomorrowEnd","bannerYesterdayStart","bannerYesterdayEnd","startSlotIndex","nextFourHoursWithHalfHourIntervals","intervals","current","formatted","dateTimeString","upcomingContent","showsGroupedByStartTime","reduce","acc","itemStart","valueOf","group","selected","unix","nextSixHours","adjustedStart","dateMessage","startDay","isValid","currentMonthIndex","month","currentMonthName","currentYear","year","today","viewingStart","daysInMonth","startOfCurrentMonth","endOfCurrentMonth","startOfGrid","endOfGrid","usePageSetup","pageName","videoPlayerStore","useVideoPlayerStore","showFlashMessage","pageIsHidden","isMobile","window","innerWidth","fullPage","ott","showOttButtons","makeVideoTopRight","pageReload","pageWasReloaded","location","on","event","shouldScrollToTop","requestAnimationFrame","topDiv","scrollIntoView","behavior","scrollTo","setPrevUrl","noLayout","watch","newValue","immediate","___CSS_LOADER_EXPORT___","module","scheduleStore","_storeToRefs","storeToRefs","ref","computed","_ref","_x","isWithinCurrentHour","startOfCurrentHour","startOfHour","endOfCurrentHour","addHours","contentStartTime","Date","start_time","isContentAvailableForHour","formatHour","getTimeSegment","hourOfDay","getHours","segment","color","goToContentPage","visit","slug","formatDuration","minutes","floor","remainingMinutes","_ref2","newTimezone","oldTimezone","_x2","_x3","startOfDay","options","locals","channelStore","useChannelStore","props","__props","originalName","key","addMetadataField","form","reactive","useForm","source","mime_type","comment","mistStream","newVal","deep","submit","_validateStreamName","trim","valid","reformattedName","toLowerCase","replace","test","validateStreamName","onSuccess","postSubmissionActions","closeModal","onError","_ref3","fetchItems","clearMistStream","clearErrors","splice","clearFlashMessage","flash","success","warning","emit","__emit","savedScrollPosition","changePage","link","URL","searchParams","scrollY","displayBadges","AddOrUpdateMistStreamModal","defineAsyncComponent","EditPlaylist","channelPlaylistStore","filteredItems","activeItem","forceUpdate","selectedItem","selectItem","textContent","confirmSelection","updateActiveItemId","confirmRemove","removeMistStream","closeEditPlaylistModal","channelPlaylistRemoveItemHolder","removeChannelPlaylist","closeConfirmChannelPlaylistRemoveModal","refreshList","closeConfirmRemoveModal","closeConfirmSelectionModal","getStatusClass","setPriority","sourceSelector","sourceType","confirmPriorityChange","setPlaybackPriorityType","oldValue","getFullYear","getMonth","daysOfWeek","isSelectedDay","isSameDay","isCurrentMonth","setToToday","currentView","setView","view","resetCalendar","onBeforeUnmount"],"sourceRoot":""}
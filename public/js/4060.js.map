{"version":3,"file":"js/4060.js","mappings":"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","sources":["webpack:///./resources/js/Utilities/PageSetup.js","webpack:///./resources/js/Components/Pages/Admin/Channels/AdminChannelPopperContent.vue?bd0a","webpack:///./resources/js/Components/Pages/Admin/Channels/SourceSelector.vue?beba","webpack:///./resources/js/Components/Global/MistStreams/AddOrUpdateMistStreamModal.vue?ba39","webpack:///./resources/js/Components/Global/MistStreams/AddOrUpdateMistStreamModal.vue","webpack:///./resources/js/Components/Global/Modals/Messages.vue?dfe9","webpack:///./resources/js/Components/Global/Modals/Messages.vue","webpack:///./resources/js/Components/Pages/Admin/AdminHeader.vue?239a","webpack:///./resources/js/Components/Pages/Admin/AdminHeader.vue","webpack:///./resources/js/Components/Pages/Admin/Channels/DynamicModal.vue?a432","webpack:///./resources/js/Components/Pages/Admin/Channels/DynamicModal.vue","webpack:///./resources/js/Components/Pages/Admin/Channels/SourceSelector.vue","webpack:///./resources/js/Components/Pages/Admin/Channels/SourceSelector.vue?93c4","webpack:///./resources/js/Components/Pages/Admin/Channels/SourceSelector.vue?98e8","webpack:///./resources/js/Jetstream/Label.vue","webpack:///./resources/js/Components/Pages/Admin/Channels/AdminChannelHeaderButtons.vue?1076","webpack:///./resources/js/Components/Pages/Admin/Channels/AdminChannelHeaderButtons.vue","webpack:///./resources/js/Components/Pages/Admin/Channels/AdminChannelPopperContent.vue?0ba0","webpack:///./resources/js/Components/Pages/Admin/Channels/AdminChannelPopperContent.vue?d933","webpack:///./resources/js/Components/Pages/Admin/Channels/AdminChannelPopperContent.vue","webpack:///./resources/js/Components/Pages/Admin/Channels/AdminChannelDataPopper.vue?e562","webpack:///./resources/js/Components/Pages/Admin/Channels/AdminChannelDataPopper.vue","webpack:///./resources/js/Components/Pages/Admin/Channels/AdminChannelDataItem.vue?dcc8","webpack:///./resources/js/Components/Pages/Admin/Channels/AdminChannelDataItem.vue","webpack:///./resources/js/Components/Pages/Admin/Channels/AdminChannelCurrentVideo.vue","webpack:///./resources/js/Components/Pages/Admin/Channels/AdminChannelRow.vue?e445","webpack:///./resources/js/Components/Pages/Admin/Channels/AdminChannelRow.vue","webpack:///./resources/js/Components/Pages/Admin/Channels/AdminChannelPaginator.vue?3259","webpack:///./resources/js/Components/Pages/Admin/Channels/AdminChannelPaginator.vue","webpack:///./resources/js/Components/Pages/Admin/Channels/AdminChannelRowHeader.vue?73cb","webpack:///./resources/js/Components/Pages/Admin/Channels/AdminChannelRowHeader.vue","webpack:///./resources/js/Pages/Admin/Channels/Index.vue?b9eb","webpack:///./resources/js/Pages/Admin/Channels/Index.vue"],"sourcesContent":["import { onBeforeMount, onMounted, watch } from 'vue'\nimport { useUserStore } from \"@/Stores/UserStore\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useVideoPlayerStore } from \"@/Stores/VideoPlayerStore\"\nimport { router } from '@inertiajs/vue3'\n\nexport function usePageSetup(pageName) {\n    const userStore = useUserStore()\n    const appSettingStore = useAppSettingStore()\n    const videoPlayerStore = useVideoPlayerStore()\n\n    appSettingStore.currentPage = pageName\n    appSettingStore.showFlashMessage = true\n    appSettingStore.pageIsHidden = false\n\n// PageSetup utility\n    if (userStore.isMobile || window.innerWidth < 1024) {\n        appSettingStore.ott = 0; // Close all panels on mobile devices\n    } else if (appSettingStore.fullPage) {\n        appSettingStore.ott = 0; // Default to closed in fullPage mode\n    } else {\n        if (appSettingStore.ott === 0) {\n            appSettingStore.ott = 4\n        }\n        // appSettingStore.ott = 4; // Open OttChat by default on larger screens\n        appSettingStore.showOttButtons = true;\n    }\n\n    videoPlayerStore.makeVideoTopRight()\n\n    if (appSettingStore.pageReload) {\n        appSettingStore.pageReload = false\n        appSettingStore.pageWasReloaded = true\n        window.location.reload();\n    }\n    // Check if the URL contains query strings\n\n\n    // Only scroll into view if there are no query strings\n\n        // const topDiv = document.getElementById(\"topDiv\")\n        // if (topDiv) {\n        //     topDiv.scrollIntoView()\n        // }\n        router.on('navigate', (event) => {\n            // Ensure OTT panels do not open automatically on mobile devices\n            if (userStore.isMobile || window.innerWidth < 1024 || appSettingStore.fullPage) {\n                appSettingStore.ott = 0; // Close all panels on mobile devices\n            } else {\n                if (appSettingStore.ott === 0) {\n                    appSettingStore.ott = 4\n                }\n                // appSettingStore.ott = 0; // Default to closed on larger screens\n            }\n            const hasQueryStrings = window.location.search !== '';\n            if (!hasQueryStrings || appSettingStore.shouldScrollToTop) {\n                requestAnimationFrame(() => {\n                    const topDiv = document.getElementById(\"topDiv\");\n                    if (topDiv) {\n                        topDiv.scrollIntoView({behavior: 'auto'});\n                    } else {\n                        window.scrollTo(0, 0);\n                    }\n                });\n            }\n            appSettingStore.shouldScrollToTop = false;\n        })\n    // Only update if we're not already on this page to avoid overwriting with the current URL\n    appSettingStore.setPrevUrl()\n    appSettingStore.showOttButtons = true\n    appSettingStore.noLayout = false\n\n    // router.reload()\n\n    watch(\n        () => appSettingStore.isSmallScreen,\n        (newValue) => {\n            if (newValue) {\n                appSettingStore.ott = 0;\n            } else {\n                appSettingStore.ott = 4;\n            }\n        },\n        { immediate: true } // This option ensures the watch executes immediately with the current value\n    );\n\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"#tooltip[data-v-d34cc41c]{background:#333;border-radius:4px;color:#fff;font-size:13px;font-weight:700;padding:4px 8px}[data-v-d34cc41c] .popper{background:#333;border-radius:20px;color:#fff;font-weight:700;padding:2px;text-transform:uppercase}[data-v-d34cc41c] .popper #arrow:before{background:#333}[data-v-d34cc41c] .popper:hover,[data-v-d34cc41c] .popper:hover>#arrow:before{background:#333}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/Components/Pages/Admin/Channels/AdminChannelPopperContent.vue\"],\"names\":[],\"mappings\":\"AASA,0BACE,eAAgB,CAKhB,iBAAkB,CAJlB,UAAY,CAGZ,cAAe,CAFf,eAAiB,CACjB,eAGF,CAEA,0BACE,eAAmB,CAEnB,kBAAmB,CACnB,UAAW,CACX,eAAiB,CAHjB,WAAY,CAIZ,wBACF,CAEA,wCACE,eACF,CAEA,8EAEE,eACF\",\"sourcesContent\":[\"<template>\\n  <Popper hover openDelay=\\\"50\\\" closeDelay=\\\"50\\\" offset-skid=\\\"0\\\" offset-distance=\\\"0\\\" placement=\\\"bottom\\\">\\n    <template #content>\\n      <slot name=\\\"content\\\"></slot> <!-- Dynamic content -->\\n    </template>\\n    <slot name=\\\"activator\\\"></slot>\\n  </Popper>\\n</template>\\n<style scoped>\\n#tooltip {\\n  background: #333;\\n  color: white;\\n  font-weight: bold;\\n  padding: 4px 8px;\\n  font-size: 13px;\\n  border-radius: 4px;\\n}\\n\\n:deep(.popper) {\\n  background: #333333;\\n  padding: 2px;\\n  border-radius: 20px;\\n  color: #fff;\\n  font-weight: bold;\\n  text-transform: uppercase;\\n}\\n\\n:deep(.popper #arrow::before) {\\n  background: #333333;\\n}\\n\\n:deep(.popper:hover),\\n:deep(.popper:hover > #arrow::before) {\\n  background: #333333;\\n}\\n</style>\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".source-selector[data-v-c559967c]{//margin-top:.5rem}.is-priority[data-v-c559967c]{color:#000;font-weight:300}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/Components/Pages/Admin/Channels/SourceSelector.vue\"],\"names\":[],\"mappings\":\"AA8EA,kCAEE,kBACF,CAMA,8BAEE,UAAY,CACZ,eACF\",\"sourcesContent\":[\"<template>\\n  <!--  <div class=\\\"source-selector\\\" :class=\\\"{'is-priority': source?.isPriority, 'is-playing': source?.isPlaying, 'is-fallback': source?.isFallback, 'has-error': source?.hasError}\\\">-->\\n  <div\\n      :class=\\\"['source-selector', {'is-priority': source?.playback_priority_type, 'is-playing': source?.isPlaying, 'is-fallback': source?.isFallback, 'has-error': source?.hasError}]\\\">\\n    <div>\\n      <!-- Display the source status here (playing, fallback, error) -->\\n      <div v-if=\\\"source?.playback_priority_type === sourceType\\\" class=\\\"btn btn-xs mt-1 text-white bg-green-500 hover:bg-green-500\\\">Priority</div>\\n      <span>\\n\\n      </span>\\n      <!-- Icon or button to set this source as priority -->\\n      <!--      <button class=\\\"btn btn-xs\\\" v-if=\\\"!source?.playback_priority_type\\\" @click=\\\"setPriority\\\">Set as Priority</button>-->\\n    </div>\\n  </div>\\n\\n  <!--  <div v-if=\\\"source?.playback_priority_type === 'mistStream'\\\">-->\\n  <!--    <button class=\\\"btn btn-xs hover:bg-green-500 bg-green-500\\\">Priority</button>-->\\n  <!--  </div>-->\\n\\n  <button v-if=\\\"source?.playback_priority_type !== sourceType\\\" class=\\\"btn btn-xs mt-1\\\"\\n          @click=\\\"setPriority\\\">Set as Priority\\n  </button>\\n\\n\\n  <dialog :id=\\\"`confirmPriorityChangeModal`\\\" class=\\\"modal\\\">\\n    <div class=\\\"modal-box\\\">\\n      <h3 class=\\\"font-bold text-lg\\\">Confirm Selection for {{ adminStore.sourceSelector?.source?.name }}</h3>\\n      <p class=\\\"py-4\\\">\\n        Are you sure you want to change priority to <span class=\\\"font-bold\\\">{{ adminStore.sourceSelector?.sourceType }}</span>?\\n      </p>\\n      <div class=\\\"modal-action\\\">\\n        <button class=\\\"btn\\\" @click=\\\"confirmPriorityChange\\\">Confirm</button>\\n        <button class=\\\"btn\\\" onclick=\\\"document.getElementById('confirmPriorityChangeModal').close()\\\">Cancel</button>\\n      </div>\\n    </div>\\n  </dialog>\\n\\n\\n</template>\\n\\n<script setup>\\nimport { useAdminStore } from '@/Stores/AdminStore'\\nimport { ref } from 'vue'\\n\\nconst adminStore = useAdminStore()\\n\\nlet props = defineProps([\\n  'source',\\n  'sourceType',\\n])\\n\\n// const setPriority = (sourceType) => {\\n//   emit('change', { sourceType, priority: true });\\n//   // Implement function to make API call to update the backend\\n// };\\n\\n\\nconst setPriority = () => {\\nadminStore.sourceSelector.source = props.source\\nadminStore.sourceSelector.sourceType = props.sourceType\\n  document.getElementById('confirmPriorityChangeModal').showModal() // Open the modal for confirmation\\n}\\n\\nconst confirmPriorityChange = async () => {\\n  await adminStore.setPlaybackPriorityType(adminStore.sourceSelector.source, adminStore.sourceSelector.sourceType)\\n  document.getElementById('confirmPriorityChangeModal').close() // Close the modal\\n\\n}\\n\\n// const setPriority = async () => {\\n//   // Directly call the store action to update the priority.\\n//   await adminStore.setPlaybackPriorityType(props.source, props.sourceType);\\n//   // No need to emit an event to the parent component.\\n// };\\n\\n</script>\\n\\n<style scoped>\\n.source-selector {\\n  /* Base styles */\\n  //margin-top: 0.5rem;\\n}\\n\\n.is-playing {\\n  /* Styles for playing status */\\n}\\n\\n.is-priority {\\n  /* Styles for isPriority status */\\n  color: black;\\n  font-weight: 300;\\n}\\n\\n.is-fallback {\\n  /* Styles for fallback status */\\n}\\n\\n.has-error {\\n  /* Styles for error status */\\n}\\n\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import script from \"./AddOrUpdateMistStreamModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AddOrUpdateMistStreamModal.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n\n  <dialog :id=\"id\" class=\"modal\">\n    <div class=\"modal-box w-11/12 max-w-5xl\">\n      <h3 class=\"font-bold text-lg\">\n        <slot name=\"form-title\">Default Form Title</slot>\n      </h3>\n\n\n      <div>\n        <slot name=\"form-description\">Default Form Description</slot>\n      </div>\n      <div>\n        <div class=\"flex flex-col space-y-2 px-12 mt-6\">\n          <form @submit.prevent=\"submit\">\n\n            <label class=\"block mb-2 uppercase font-bold text-xs dark:text-gray-200\"\n                   for=\"name\">Stream Name</label>\n            <input v-model=\"form.name\"\n                   class=\"bg-gray-50 border border-gray-400 text-gray-900 text-sm p-2 w-full rounded-lg focus:ring-blue-500 focus:border-blue-500 block\"\n                   type=\"text\"\n                   name=\"name\"\n                   id=\"name\" placeholder=\"Stream Name...\">\n            <div v-if=\"form.errors.name\" v-text=\"form.errors.name\" class=\"text-xs text-red-600 mt-1\"></div>\n\n            <label class=\"block mt-4 mb-2 uppercase font-bold text-xs dark:text-gray-200\"\n                   for=\"name\">Source</label>\n            <input v-model=\"form.source\"\n                   class=\"bg-gray-50 border border-gray-400 text-gray-900 text-sm p-2 w-full rounded-lg focus:ring-blue-500 focus:border-blue-500 block\"\n                   type=\"text\"\n                   name=\"source\"\n                   id=\"source\" placeholder=\"Source...\">\n            <div v-if=\"form.errors.source\" v-text=\"form.errors.source\" class=\"text-xs text-red-600 mt-1\"></div>\n\n            <label class=\"block mt-4 mb-2 uppercase font-bold text-xs dark:text-gray-200\"\n                   for=\"name\">MIME Type</label>\n            <input v-model=\"form.mime_type\"\n                   class=\"bg-gray-50 border border-gray-400 text-gray-900 text-sm p-2 w-full rounded-lg focus:ring-blue-500 focus:border-blue-500 block\"\n                   type=\"text\"\n                   name=\"mime_type\"\n                   id=\"mime_type\" placeholder=\"MIME Type...\">\n            <div v-if=\"form.errors.mime_type\" v-text=\"form.errors.mime_type\" class=\"text-xs text-red-600 mt-1\"></div>\n\n            <label class=\"block mt-4 mb-2 uppercase font-bold text-xs dark:text-gray-200\"\n                   for=\"comment\">Comment</label>\n            <input v-model=\"form.comment\"\n                      class=\"bg-gray-50 border border-gray-400 text-gray-900 text-sm p-2 w-full rounded-lg focus:ring-blue-500 focus:border-blue-500 block\"\n                      type=\"text\"\n                      name=\"comment\"\n                      id=\"comment\" placeholder=\"Comment...\"></input>\n            <div v-if=\"form.errors.comment\" v-text=\"form.errors.comment\" class=\"text-xs text-red-600 mt-1\"></div>\n\n            <label class=\"block mt-4 mb-2 uppercase font-bold text-xs dark:text-gray-200\"\n                   for=\"metadata\">Optional Parameters</label>\n            <div v-for=\"(item, index) in form.metadata\" :key=\"index\" class=\"flex items-center\">\n              <input v-model=\"item.key\"\n                     class=\"bg-gray-50 border border-gray-400 text-gray-900 text-sm p-2 mt-2 rounded-lg focus:ring-blue-500 focus:border-blue-500\"\n                     placeholder=\"Key\">\n\n              <input v-model=\"item.value\"\n                     class=\"bg-gray-50 border border-gray-400 text-gray-900 text-sm p-2 ml-2 mt-2 rounded-lg focus:ring-blue-500 focus:border-blue-500\"\n                     placeholder=\"Value\">\n\n              <button @click.prevent=\"removeMetadataField(index)\" class=\"btn btn-sm ml-2 mt-2\">Remove</button>\n            </div>\n            <button @click.prevent=\"addMetadataField\" class=\"btn btn-sm mt-2\">Add Metadata</button>\n\n\n            <div class=\"flex flex-row justify-center pt-6\">\n              <button type=\"submit\" class=\"btn btn-wide bg-green-500 hover:bg-green-400 text-white\"\n                      :disabled=\"form.processing\">\n                <slot name=\"button-label\">Default Form Title</slot>\n              </button>\n\n            </div>\n          </form>\n        </div>\n\n      </div>\n\n\n      <div class=\"modal-action\">\n        <button class=\"btn\" @click.prevent=\"closeModal\">Cancel</button>\n        <form method=\"dialog\">\n          <!-- if there is a button, it will close the modal -->\n\n        </form>\n      </div>\n    </div>\n  </dialog>\n\n</template>\n<script setup>\nimport { reactive, ref, watch } from 'vue'\nimport { useForm } from '@inertiajs/vue3'\nimport { useChannelStore } from '@/Stores/ChannelStore'\nimport { useAdminStore } from '@/Stores/AdminStore'\n\nconst channelStore = useChannelStore()\nconst adminStore = useAdminStore()\n\nimport Label from '@/Jetstream/Label.vue'\nimport Button from '@/Jetstream/Button.vue'\n\nlet props = defineProps({\n  mistStream: Object,\n  id: String,\n  // errors: Object,\n})\n\n// const errors = ref(props.errors);\nconst modalVisible = ref(false)\n\nconst metadata = ref([{key: '', value: ''}])\nlet originalName = ref(''); // used for stream name changes\n\nconst addMetadataField = () => {\n  form.metadata.push({key: '', value: ''})\n}\n\nconst removeMetadataField = (index) => {\n  form.metadata.splice(index, 1)\n}\n\nlet form = reactive(useForm({\n  id: '',\n  name: '',\n  source: 'push://',\n  mime_type: 'application/vnd.apple.mpegurl',\n  comment: '',\n  metadata: [], // Initialize with one empty metadata entry\n}))\n\nform.reset() // on modal load, reset form.\n\n// Watch for changes in the mistStream object in your Pinia store\nwatch(() => channelStore.mistStream, (newVal) => {\n  if (newVal) {\n    // Populate the form with mistStream data\n    form.id = newVal.id || ''\n    form.name = newVal.name || ''\n    originalName.value = newVal.name || ''; // Capture the original name\n    form.source = newVal.source || 'push://'\n    form.mime_type = newVal.mime_type || 'application/vnd.apple.mpegurl'\n    form.comment = newVal.comment || ''\n\n    // Convert metadata object to array format\n    if (newVal.metadata && typeof newVal.metadata === 'object') {\n      form.metadata = Object.entries(newVal.metadata).map(([key, value]) => ({\n        key, value,\n      }))\n    } else {\n      form.metadata = [{key: '', value: ''}] // Reset to initial state if no metadata\n    }\n  } else {\n    // Reset the form to initial state if there's no mistStream selected (e.g., for adding a new stream)\n    form.reset()\n  }\n}, {deep: true, immediate: true})\n//\n// let submit = () => {\n//   form.post(route('mistStream.add'))\n//   form.name = ''\n//   form.comment = ''\n//   if (!form.errors) {\n//     document.getElementById('adminAddMistStreamModal').close()\n//   }\n// }\n\nlet submit = async () => {\n  await form.post(route('mistStream.addOrUpdate', { originalName: originalName.value })), {\n    onSuccess: () => {\n      postSubmissionActions(); // Call the async function\n    },\n    onError: () => {\n      // Handle errors if needed, e.g., log to console or show a message\n      // Errors are automatically attached to the form object\n    },\n\n  }\n  closeModal()\n}\n\nconst postSubmissionActions = async () => {\n  await adminStore.fetchItems('mistStream'); // Await the fetching of items\n  channelStore.clearMistStream(); // Clear selected mistStream\n  form.reset(); // Reset form fields\n  closeModal(); // Close modal\n};\n\nfunction closeModal() {\n  document.getElementById(props.id).close()\n  channelStore.clearMistStream()\n  // Reset the form fields to their initial values\n  form.reset()\n  // Clear all validation errors\n  form.clearErrors()\n}\n\n// function toggleModal() {\n//   console.log('Toggling modal:', !modalVisible.value)\n//   modalVisible.value = !modalVisible.value\n//   form.name = ''\n//   form.comment = ''\n// }\n</script>\n","import script from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"mx-4 my-4\">\n    <div class=\"alert alert-info mt-4\"\n         v-if=\"props.flash.message\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" class=\"stroke-current shrink-0 w-6 h-6\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n      </svg>\n      <span>{{ props.flash.message }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-success mt-4 mx-3\"\n         v-if=\"props.flash.success\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.success }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-warning mt-4 mx-3\"\n         v-if=\"props.flash.warning\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"/>\n      </svg>\n      <span>{{ props.flash.warning }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-error mt-4 mx-3\"\n         v-if=\"props.flash.error\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.error }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n  </div>\n\n</template>\n\n<script setup>\nimport { router } from '@inertiajs/vue3'\nimport { computed } from \"vue\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\n\nconst appSettingStore = useAppSettingStore()\n\nappSettingStore.showFlashMessage = true\n\nlet props = defineProps({\n  flash: Object,\n\n})\n\nconst messageType = computed(() => ({\n  'text-green-700 bg-green-100 dark:bg-green-200 dark:text-green-800': props.flash.success,\n  'text-blue-700 bg-blue-100 dark:bg-blue-200 dark:text-blue-800': props.flash.message,\n  'text-orange-700 bg-orange-100 dark:bg-orange-200 dark:text-orange-800': props.flash.warning,\n  'text-red-700 bg-red-100 dark:bg-red-200 dark:text-red-800': props.flash.error,\n}))\n\nconst clearFlashMessage = async () => {\n  await router.post(route('flash.clear'));\n  router.reload();\n};\n</script>\n","import script from \"./AdminHeader.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AdminHeader.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <header>\n    <div class=\"flex justify-between my-3\">\n      <div class=\"mb-4 relative\">\n        <h1 class=\"text-3xl font-semibold inline-block\">\n          <slot/>\n        </h1>\n        <span v-if=\"displayBadges\" class=\"text-white font-semibold badge badge-success absolute -top-2 -right-10 flex items-center justify-center min-w-[2rem] h-[2rem] rounded-full\">{{ (badgePrimaryNumber ?? 0) > 99 ? '99+' : (badgePrimaryNumber ?? 0) }}</span>\n        <span v-if=\"displayBadges\" class=\"font-semibold badge badge-warning absolute -top-2 -right-20 flex items-center justify-center min-w-[2rem] h-[2rem] rounded-full\">{{ (badgeSecondaryNumber ?? 0) > 99 ? '99+' : (badgeSecondaryNumber ?? 0) }}</span>\n\n      </div>\n      <div>\n        <div class=\"flex flex-wrap-reverse justify-end gap-2\">\n          <Link :href=\"`/admin/settings`\">\n            <button\n                class=\"px-4 py-2 text-white bg-blue-600 hover:bg-blue-500 rounded-lg\"\n            >Admin Settings\n            </button>\n          </Link>\n        </div>\n      </div>\n    </div>\n  </header>\n\n</template>\n\n<script setup>\nimport { reactive } from 'vue'\n\nconst props = defineProps({\n  displayBadges: Boolean,\n  badgePrimaryNumber: Number,\n  badgeSecondaryNumber: Number,\n});\n\nconst defaultProps = {\n  displayBadges: false,\n};\n\nconst finalProps = reactive({ ...defaultProps, ...props });\n\n</script>\n","import script from \"./DynamicModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./DynamicModal.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <dialog id=\"dynamicModal\" class=\"modal\">\n    <div class=\"modal-box w-11/12 max-w-5xl\">\n\n      <div class=\"flex flex-row justify-between align-bottom\">\n        <div >\n         <h3 class=\"font-bold text-lg\">{{ adminStore.modalHeader }}</h3>\n        </div>\n        <div>\n          <h3>{{ adminStore?.selectedChannel?.name }}</h3>\n        </div>\n      </div>\n      <div class=\"flex justify-center mb-6\">\n        <div class=\"flex items-center mt-6 xl:mt-0\">\n          <div class=\"relative\">\n            <input v-model=\"adminStore.searchTerm\" @input=\"debouncedFetchItems\" type=\"search\" class=\"bg-gray-50 text-black text-sm rounded-full\n                        focus:outline-none focus:shadow w-64 pl-8 px-3 py-1\" placeholder=\"Search...\">\n            <div class=\"absolute top-0 flex items-center h-full ml-2\">\n              <svg class=\"fill-current text-gray-400 w-4\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n                <path\n                    d=\"M456.69 421.39 362.6 327.3a173.81 173.81 0 0 0 34.84-104.58C397.44 126.38 319.06 48 222.72 48S48 126.38 48 222.72s78.38 174.72 174.72 174.72A173.81 173.81 0 0 0 327.3 362.6l94.09 94.09a25 25 0 0 0 35.3-35.3ZM97.92 222.72a124.8 124.8 0 1 1 124.8 124.8 124.95 124.95 0 0 1-124.8-124.8Z\"/>\n              </svg>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div>\n        <div class=\"overflow-x-auto\">\n          <table class=\"table table-xs\">\n            <thead>\n            <tr>\n              <th>\n                <span v-if=\"adminStore.currentType === 'channelPlaylist'\">Active</span>\n                <span v-if=\"adminStore.currentType === 'mistStream'\">Active</span>\n              </th>\n              <th>\n                <span v-if=\"adminStore.currentType === 'channelPlaylist'\">Name</span>\n                <span v-if=\"adminStore.currentType === 'mistStream'\">Name</span>\n              </th>\n              <th>\n                <span v-if=\"adminStore.currentType === 'channelPlaylist'\">Type</span>\n                <span v-if=\"adminStore.currentType === 'mistStream'\">Source</span>\n              </th>\n              <th>\n                <span v-if=\"adminStore.currentType === 'channelPlaylist'\">Priority</span>\n                <span v-if=\"adminStore.currentType === 'mistStream'\">MIME Type</span>\n              </th>\n              <th>\n                <span v-if=\"adminStore.currentType === 'channelPlaylist'\">Repeat Mode</span>\n                <span v-if=\"adminStore.currentType === 'mistStream'\">Comment</span>\n              </th>\n              <th>\n                <span v-if=\"adminStore.currentType === 'channelPlaylist'\">Start Time</span>\n                <span v-if=\"adminStore.currentType === 'mistStream'\">Created On</span>\n              </th>\n              <th>\n                <span v-if=\"adminStore.currentType === 'channelPlaylist'\">End Time</span>\n                <span v-if=\"adminStore.currentType === 'mistStream'\"></span>\n              </th>\n              <th>\n                  <!-- For delete -->\n              </th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr v-for=\"item in adminStore.paginatedItems\" :key=\"item.id\" class=\"hover:bg-blue-300 hover:cursor-pointer\" :class=\"{'bg-yellow-500': item.id === adminStore.activeItemId}\">\n              <td @click=\"selectItem(item)\" >\n                <div v-if=\"adminStore.currentType === 'channelPlaylist'\"><span v-if=\"item.active\" class=\"text-green-500\">Active</span><span v-else class=\"text-red-700\">Inactive</span></div>\n                <span v-if=\"adminStore.currentType === 'mistStream'\"><span v-if=\"item.active\" class=\"text-green-500\">Active</span><span v-else class=\"text-red-700\">Inactive</span></span>\n              </td>\n              <td @click=\"selectItem(item)\" >\n                <span v-if=\"adminStore.currentType === 'channelPlaylist'\">{{ item.name }}</span>\n                <span v-if=\"adminStore.currentType === 'mistStream'\">{{ item.name }}</span>\n              </td>\n              <td @click=\"selectItem(item)\" >\n                <span v-if=\"adminStore.currentType === 'channelPlaylist'\">{{ item.type }}</span>\n                <span v-if=\"adminStore.currentType === 'mistStream'\">{{ item.source }}</span>\n              </td>\n              <td @click=\"selectItem(item)\" >\n                <span v-if=\"adminStore.currentType === 'channelPlaylist'\">{{ item.priority }}</span>\n                <span v-if=\"adminStore.currentType === 'mistStream'\">{{ item.mime_type }}</span>\n              </td>\n              <td @click=\"selectItem(item)\" >\n                <span v-if=\"adminStore.currentType === 'channelPlaylist'\">{{ item.repeat_mode }}</span>\n                <span v-if=\"adminStore.currentType === 'mistStream'\">{{ item.comment }}</span>\n              </td>\n              <td @click=\"selectItem(item)\" >\n                <span v-if=\"adminStore.currentType === 'channelPlaylist'\">{{ formatDateTime(item.start_time) }}</span>\n                <span v-if=\"adminStore.currentType === 'mistStream'\">{{ formatDateTime(item.created_at) }}</span>\n\n              </td>\n              <td @click=\"selectItem(item)\" >\n                <span v-if=\"adminStore.currentType === 'channelPlaylist'\">{{ formatDateTime(item.end_time) }}</span>\n                <span v-if=\"adminStore.currentType === 'mistStream'\"></span>\n              </td>\n              <td class=\"w-fit whitespace-nowrap overflow-hidden\">\n                <button\n                    v-if=\"adminStore.currentType === 'mistStream'\"\n                    @click.prevent=\"openEditModal(item)\"\n                    class=\"ml-2 px-2 py-1 text-white font-semibold bg-blue-500 hover:bg-blue-600 rounded-lg\"\n                >\n                  <font-awesome-icon icon=\"fa-pencil\" class=\"text-xs\"/>\n                </button>\n                <button\n                    v-if=\"adminStore.currentType === 'mistStream'\"\n                    @click=\"removeItem(item)\"\n                    class=\"ml-1 px-2 py-1 text-white font-semibold bg-red-500 hover:bg-red-600 rounded-lg\"\n                >\n                  <font-awesome-icon icon=\"fa-trash-can\" class=\"text-xs\"/>\n                </button>\n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </div>\n        <div v-if=\"adminStore.totalModalPages > 1\" class=\"flex flex-row justify-center mt-6 w-full\">\n          <div class=\"join grid grid-cols-2\">\n            <button class=\"join-item btn btn-sm btn-outline\" @click=\"adminStore.prevPage\">Previous page</button>\n            <button class=\"join-item btn btn-sm btn-outline\" @click=\"adminStore.nextPage\">Next</button>\n          </div>\n        </div>\n      </div>\n\n      <AddOrUpdateMistStreamModal :id=\"`updateMistStreamModal`\" :form-errors=\"$page.props.errors\" @update-list=\"refreshList\">\n        <template #form-title>\n          Update Mist Stream\n        </template>\n        <template #form-description>\n          Note: You cannot edit the stream name (right now), it will only create a new stream. This is a bug that needs to be fixed in the AddOrUpdateMistStreamJob\n        </template>\n        <template #button-label>\n          Update\n        </template>\n      </AddOrUpdateMistStreamModal>\n\n\n      <dialog id=\"confirmSelectionModal\" class=\"modal\">\n        <div class=\"modal-box\">\n          <h3 class=\"font-bold text-lg\">Confirm Selection</h3>\n          <p class=\"py-4\">\n            Are you sure you want to select <span id=\"selectedItemName\"></span>?\n          </p>\n          <div class=\"modal-action\">\n            <button class=\"btn\" @click=\"confirmSelection\">Confirm</button>\n            <button class=\"btn\" onclick=\"document.getElementById('confirmSelectionModal').close()\">Cancel</button>\n          </div>\n        </div>\n      </dialog>\n\n      <dialog id=\"confirmRemoveModal\" class=\"modal\">\n        <div class=\"modal-box\">\n          <h3 class=\"font-bold text-lg\">Confirm Remove</h3>\n          <p class=\"py-4\">\n            Are you sure you want to remove <span id=\"selectedForRemovalItemName\"></span>?\n          </p>\n          <div class=\"modal-action\">\n            <button class=\"btn\" @click=\"confirmRemove\">Confirm</button>\n            <button class=\"btn\" onclick=\"document.getElementById('confirmRemoveModal').close()\">Cancel</button>\n          </div>\n        </div>\n      </dialog>\n\n\n      <div class=\"modal-action\">\n        <form method=\"dialog\">\n          <!-- if there is a button, it will close the modal -->\n          <button class=\"btn\" @click=\"adminStore.clearSelectedChannelAndItems\">Close</button>\n        </form>\n      </div>\n    </div>\n  </dialog>\n</template>\n\n<script setup>\nimport { ref, watch, computed, onMounted, nextTick } from 'vue'\nimport { useAdminStore } from '@/Stores/AdminStore'\nimport { useChannelStore } from '@/Stores/ChannelStore'\nimport debounce from \"lodash/debounce\"\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome'\nimport { router } from '@inertiajs/vue3'\nimport AddOrUpdateMistStreamModal from '@/Components/Global/MistStreams/AddOrUpdateMistStreamModal.vue'\n\nconst adminStore = useAdminStore();\nconst channelStore = useChannelStore();\n// const searchTerm = ref('');\n\nlet props = defineProps({\n  type: String\n})\n\nconst items = computed(() => adminStore.filteredItems);\nconst currentItemId = computed(() => adminStore.activeItem);\n\n// const searchItems = () => {\n//   adminStore.searchItems(adminStore.type, searchTerm.value);\n// };\n//\n// const debouncedFetchItems = debounce(adminStore.searchItems, 300);\n\n// watch(searchTerm, debouncedFetchItems);\n\n\nconst selectedItem = ref(null); // A reactive property to hold the currently selected item\n\nconst selectItem = (item) => {\n  selectedItem.value = item; // Store the item temporarily\n  document.getElementById('selectedItemName').textContent = item.name; // Display the name in the modal\n  document.getElementById('confirmSelectionModal').showModal(); // Open the modal for confirmation\n};\n\nconst removeItem = (item) => {\n  selectedItem.value = item; // Store the item temporarily\n  document.getElementById('selectedForRemovalItemName').textContent = item.name; // Display the name in the modal\n  document.getElementById('confirmRemoveModal').showModal(); // Open the modal for confirmation\n};\n\nconst editItem = (item) => {\n  selectedItem.value = item; // Store the item temporarily\n  // Create Modal for editing\n  // document.getElementById('selectedForRemovalItemName').textContent = item.name; // Display the name in the modal\n  // document.getElementById('confirmRemoveModal').showModal(); // Open the modal for confirmation\n};\n\nconst confirmSelection = async () => {\n  if (selectedItem.value) {\n    await adminStore.updateActiveItemId(selectedItem.value.id);\n    document.getElementById('confirmSelectionModal').close(); // Close the modal\n    // Handle additional logic for item selection if necessary\n  }\n};\n\nconst confirmRemove = async () => {\n  if (selectedItem.value) {\n    await removeMistStream(selectedItem.value.name);\n    document.getElementById('confirmRemoveModal').close(); // Close the modal\n    // Handle additional logic for item selection if necessary\n  }\n};\n// const selectItem = async (item) => {\n//   await adminStore.updateActiveItemId(item.id);\n//   // Handle additional logic for item selection if necessary\n// };\n\nconst openEditModal = (item) => {\n  updateMistStreamModal.showModal()\n  channelStore.mistStream = item\n}\n\nonMounted(async () => {\n  await adminStore.fetchItems(props.type)\n})\n\n\nconst removeMistStream = (name) => {\n  router.post(route('mistStream.remove'), { 'name': name } )\n  document.getElementById('dynamicModal').close();\n}\n\nconst refreshList = () => {\n  adminStore.fetchItems(props.type);\n}\n// adminStore.fetchItems(props.type)\n\n// onMounted(adminStore.fetchItems(adminStore.type)); // Optionally fetch items when the modal mounts\n\n// const fetchItems = () => {\n//   router.get(`/admin/channels/search/${props.type}`, { search: searchTerm.value }, {\n//     preserveState: false,\n//     onSuccess: (page) => {\n//       items.value = page.props.items; // Assume your backend sends back 'items'\n//     }\n//   });\n// };\n\n// watch(searchTerm, fetchItems);\n\n// onMounted(fetchItems); // Optionally fetch items when the modal mounts\n</script>\n\n\n<!--<script setup>-->\n<!--import { ref, defineProps, defineEmits } from 'vue';-->\n\n<!--const props = defineProps({-->\n<!--  showModal: Boolean,-->\n<!--  currentItem: Object,-->\n<!--  itemsType: String-->\n<!--});-->\n\n<!--const emits = defineEmits(['update:item', 'close']);-->\n\n<!--const searchTerm = ref('');-->\n<!--const items = ref([]);-->\n\n<!--const fetchItems = async () => {-->\n<!--  // Fetch items based on `itemsType` and `searchTerm`-->\n<!--  // Update `items` with the fetched data-->\n<!--};-->\n\n<!--const selectItem = (item) => {-->\n<!--  emits('update:item', { type: props.itemsType, item });-->\n<!--};-->\n\n<!--const closeModal = () => {-->\n<!--  emits('close');-->\n<!--};-->\n<!--</script>-->\n","<template>\n  <!--  <div class=\"source-selector\" :class=\"{'is-priority': source?.isPriority, 'is-playing': source?.isPlaying, 'is-fallback': source?.isFallback, 'has-error': source?.hasError}\">-->\n  <div\n      :class=\"['source-selector', {'is-priority': source?.playback_priority_type, 'is-playing': source?.isPlaying, 'is-fallback': source?.isFallback, 'has-error': source?.hasError}]\">\n    <div>\n      <!-- Display the source status here (playing, fallback, error) -->\n      <div v-if=\"source?.playback_priority_type === sourceType\" class=\"btn btn-xs mt-1 text-white bg-green-500 hover:bg-green-500\">Priority</div>\n      <span>\n\n      </span>\n      <!-- Icon or button to set this source as priority -->\n      <!--      <button class=\"btn btn-xs\" v-if=\"!source?.playback_priority_type\" @click=\"setPriority\">Set as Priority</button>-->\n    </div>\n  </div>\n\n  <!--  <div v-if=\"source?.playback_priority_type === 'mistStream'\">-->\n  <!--    <button class=\"btn btn-xs hover:bg-green-500 bg-green-500\">Priority</button>-->\n  <!--  </div>-->\n\n  <button v-if=\"source?.playback_priority_type !== sourceType\" class=\"btn btn-xs mt-1\"\n          @click=\"setPriority\">Set as Priority\n  </button>\n\n\n  <dialog :id=\"`confirmPriorityChangeModal`\" class=\"modal\">\n    <div class=\"modal-box\">\n      <h3 class=\"font-bold text-lg\">Confirm Selection for {{ adminStore.sourceSelector?.source?.name }}</h3>\n      <p class=\"py-4\">\n        Are you sure you want to change priority to <span class=\"font-bold\">{{ adminStore.sourceSelector?.sourceType }}</span>?\n      </p>\n      <div class=\"modal-action\">\n        <button class=\"btn\" @click=\"confirmPriorityChange\">Confirm</button>\n        <button class=\"btn\" onclick=\"document.getElementById('confirmPriorityChangeModal').close()\">Cancel</button>\n      </div>\n    </div>\n  </dialog>\n\n\n</template>\n\n<script setup>\nimport { useAdminStore } from '@/Stores/AdminStore'\nimport { ref } from 'vue'\n\nconst adminStore = useAdminStore()\n\nlet props = defineProps([\n  'source',\n  'sourceType',\n])\n\n// const setPriority = (sourceType) => {\n//   emit('change', { sourceType, priority: true });\n//   // Implement function to make API call to update the backend\n// };\n\n\nconst setPriority = () => {\nadminStore.sourceSelector.source = props.source\nadminStore.sourceSelector.sourceType = props.sourceType\n  document.getElementById('confirmPriorityChangeModal').showModal() // Open the modal for confirmation\n}\n\nconst confirmPriorityChange = async () => {\n  await adminStore.setPlaybackPriorityType(adminStore.sourceSelector.source, adminStore.sourceSelector.sourceType)\n  document.getElementById('confirmPriorityChangeModal').close() // Close the modal\n\n}\n\n// const setPriority = async () => {\n//   // Directly call the store action to update the priority.\n//   await adminStore.setPlaybackPriorityType(props.source, props.sourceType);\n//   // No need to emit an event to the parent component.\n// };\n\n</script>\n\n<style scoped>\n.source-selector {\n  /* Base styles */\n  //margin-top: 0.5rem;\n}\n\n.is-playing {\n  /* Styles for playing status */\n}\n\n.is-priority {\n  /* Styles for isPriority status */\n  color: black;\n  font-weight: 300;\n}\n\n.is-fallback {\n  /* Styles for fallback status */\n}\n\n.has-error {\n  /* Styles for error status */\n}\n\n</style>\n","import api from \"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-10.use[1]!../../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-10.use[2]!../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./SourceSelector.vue?vue&type=style&index=0&id=c559967c&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./SourceSelector.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./SourceSelector.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./SourceSelector.vue?vue&type=style&index=0&id=c559967c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-c559967c\"]])\n\nexport default __exports__","import script from \"./Label.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Label.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./AdminChannelHeaderButtons.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AdminChannelHeaderButtons.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n    <div class=\"flex flex-row justify-between gap-x-4 mb-3\">\n      <div>\n        <Link :href=\"`#`\">\n          <button\n              @click.prevent=\"openAddChannelModal\"\n              class=\"btn btn-sm bg-green-500 hover:bg-green-600 text-white px-4 py-2 mr-2 rounded disabled:bg-gray-400\"\n          >Add Channel\n          </button>\n        </Link>\n        <Link :href=\"`#`\">\n          <button\n              class=\"btn btn-sm bg-green-500 hover:bg-green-600 text-white px-4 py-2 mr-2 rounded disabled:bg-gray-400\"\n              disabled\n          >Add External Source\n          </button>\n        </Link>\n        <Link :href=\"`#`\">\n          <button\n              class=\"btn btn-sm bg-green-500 hover:bg-green-600 text-white px-4 py-2 mr-2 rounded disabled:bg-gray-400\"\n              disabled\n          >Add Channel Playlist\n          </button>\n        </Link>\n        <button\n            class=\"btn btn-sm bg-green-500 hover:bg-green-600 text-white px-4 py-2 mr-2 rounded disabled:bg-gray-400\"\n            onclick=\"addMistStreamModal.showModal()\">\n          Add Mist Stream\n        </button>\n        <AddOrUpdateMistStreamModal :id=\"`addMistStreamModal`\" :form-errors=\"$page.props.errors\">\n          <template #form-title>\n            Add Mist Stream\n          </template>\n          <template #form-description>\n            Add a new stream to the Mist Server\n          </template>\n          <template #button-label>\n            Add\n          </template>\n        </AddOrUpdateMistStreamModal>\n\n      </div>\n      <input v-model=\"adminStore.searchTerm\" type=\"search\" placeholder=\"Search...\" class=\"border px-2 rounded-lg\"/>\n    </div>\n\n    <dialog id=\"adminAddChannel\" class=\"modal\">\n      <div class=\"modal-box\">\n        <form method=\"dialog\">\n          <button class=\"btn btn-sm btn-circle btn-ghost absolute right-2 top-2\">✕</button>\n        </form>\n        <h3 class=\"font-bold text-lg mb-2\">Add Channel</h3>\n        <input v-model=\"newChannelName\" type=\"text\" placeholder=\"Channel Name\" class=\"input input-bordered w-full max-w-xs\" />\n        <button @click.prevent=\"submit\" class=\"btn btn-primary ml-2\">Add</button>\n      </div>\n    </dialog>\n  </div>\n</template>\n<script setup>\nimport { useAdminStore } from '@/Stores/AdminStore'\nimport AddOrUpdateMistStreamModal from '@/Components/Global/MistStreams/AddOrUpdateMistStreamModal'\nimport { ref } from 'vue'\n\nconst adminStore = useAdminStore()\n\nconst newChannelName = ref('')\n\nconst openAddChannelModal = () => {\n  document.getElementById('adminAddChannel').showModal()\n}\n\nconst submit = async () => {\n  await adminStore.addChannel(newChannelName.value)\n  document.getElementById('adminAddChannel').close()\n  newChannelName.value = ''\n}\n</script>","import api from \"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-10.use[1]!../../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-10.use[2]!../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./AdminChannelPopperContent.vue?vue&type=style&index=0&id=d34cc41c&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import { render } from \"./AdminChannelPopperContent.vue?vue&type=template&id=d34cc41c&scoped=true\"\nconst script = {}\n\nimport \"./AdminChannelPopperContent.vue?vue&type=style&index=0&id=d34cc41c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-d34cc41c\"]])\n\nexport default __exports__","<template>\n  <Popper hover openDelay=\"50\" closeDelay=\"50\" offset-skid=\"0\" offset-distance=\"0\" placement=\"bottom\">\n    <template #content>\n      <slot name=\"content\"></slot> <!-- Dynamic content -->\n    </template>\n    <slot name=\"activator\"></slot>\n  </Popper>\n</template>\n<style scoped>\n#tooltip {\n  background: #333;\n  color: white;\n  font-weight: bold;\n  padding: 4px 8px;\n  font-size: 13px;\n  border-radius: 4px;\n}\n\n:deep(.popper) {\n  background: #333333;\n  padding: 2px;\n  border-radius: 20px;\n  color: #fff;\n  font-weight: bold;\n  text-transform: uppercase;\n}\n\n:deep(.popper #arrow::before) {\n  background: #333333;\n}\n\n:deep(.popper:hover),\n:deep(.popper:hover > #arrow::before) {\n  background: #333333;\n}\n</style>","import script from \"./AdminChannelDataPopper.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AdminChannelDataPopper.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <AdminChannelPopperContent>\n    <template #activator>\n      <button @click=\"emit('open-modal')\" :class=\"buttonClass\">\n        {{ buttonText }}\n      </button>\n    </template>\n    <template #content>\n      <div class=\"text-xs p-2\" id=\"tooltip\">\n        <div>ID: {{ dataPart.id }}</div>\n        <div>Name: {{ dataPart.name }}</div>\n        <div>Path: {{ dataPart.path }}</div>\n        <div>Type: {{ dataPart.type }}</div>\n        <div>Provider: {{ dataPart.provider }}</div>\n      </div>\n    </template>\n  </AdminChannelPopperContent>\n</template>\n<script setup>\nimport AdminChannelPopperContent from '@/Components/Pages/Admin/Channels/AdminChannelPopperContent'\nimport { computed } from 'vue'\n\nconst props = defineProps({\n  data: Object,\n  dataType: String,\n  dataTypeDb: String,\n})\n\nconst emit = defineEmits(['open-modal'])\n\n// Computed property to dynamically generate the button text\nconst buttonText = computed(() => {\n  return props.data[props.dataTypeDb]?.name || `No ${props.dataType} Name`\n})\n\n// Computed property for accessing the relevant data part\nconst dataPart = computed(() => {\n  return props.data[props.dataTypeDb] || {};\n})\n\nconst buttonClass = computed(() => {\n  return {\n    'cursor-pointer': true,\n    'text-black': true,\n    // Add 'font-semibold' only if data.playback_priority_type equals dataType\n    'font-semibold': props.data.playback_priority_type === props.dataType\n  }\n})\n</script>","import script from \"./AdminChannelDataItem.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AdminChannelDataItem.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n    <div v-if=\"data[dataTypeDb]\">\n      <AdminChannelDataPopper\n          :data=\"data\"\n          :dataType=\"dataType\"\n          :dataTypeDb=\"dataTypeDb\"\n          @open-modal=\"emit('open-modal')\"/>\n    </div>\n    <div v-else>\n      <button @click=\"emit('open-modal')\">\n    <span v-if=\"data[dataTypeDb]?.name\" class=\"text-gray-700 tracking-wide\">\n                              <span v-if=\"data.playback_priority_type === dataType\"\n                                    :class=\"{'text-black font-bold': data.playback_priority_type === dataType}\">{{\n                                  data?.dataTypeDb.name\n                                }}</span>\n      <span v-else>{{ data?.dataTypeDb.name }}</span>\n    </span>\n        <span v-else class=\"italic text-gray-300 text-sm\">no {{ dataType }}</span>\n      </button>\n    </div>\n    <!-- Status indicator + action to change source -->\n    <source-selector :source=\"data\"\n                     :source-type=\"dataType\"/>\n  </div>\n</template>\n<script setup>\nimport SourceSelector from '@/Components/Pages/Admin/Channels/SourceSelector'\nimport AdminChannelDataPopper from '@/Components/Pages/Admin/Channels/AdminChannelDataPopper.vue'\n\ndefineProps({\n  data: Object,\n  dataType: String,\n  dataTypeDb: String,\n})\n\nconst emit = defineEmits(['open-modal'])\n</script>","import script from \"./AdminChannelCurrentVideo.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AdminChannelCurrentVideo.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./AdminChannelRow.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AdminChannelRow.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"table-row bg-white border-b dark:bg-gray-800 dark:border-gray-700\">\n    <div class=\"table-cell min-w-[8rem] px-6 py-4 font-medium text-gray-900 dark:text-white whitespace-nowrap\">\n      <button @click.prevent=\"openEditChannelModal\" class=\"text-xl\">{{ channel.name }}</button>\n      <div v-if=\"channel?.isLive\" class=\"ml-2 text-xs badge badge-secondary badge-outline\">live</div>\n    </div>\n\n    <!-- Current Video -->\n    <div class=\"md:table-cell px-6 py-4 font-medium text-gray-900 dark:text-white whitespace-nowrap text-center\">\n      <AdminChannelCurrentVideo :data=\"channel\"/>\n    </div>\n\n    <!-- ExternalSource -->\n    <div class=\"table-cell px-6 py-4 align-middle text-center\">\n      <AdminChannelDataItem\n          :data=\"channel\"\n          :dataType=\"`externalSource`\"\n          :dataTypeDb=\"`external_source`\"\n          @open-modal=\"handleOpenModal('externalSource')\"/>\n    </div>\n\n    <!-- ChannelPlaylist -->\n    <div class=\"table-cell px-6 py-4 align-middle text-center\">\n      <AdminChannelDataItem\n          :data=\"channel\"\n          :dataType=\"`channelPlaylist`\"\n          :dataTypeDb=\"`channel_playlist`\"\n          @open-modal=\"handleOpenModal('channelPlaylist')\"/>\n    </div>\n\n    <!-- MistStream -->\n    <div class=\"table-cell px-6 py-4 align-middle text-center\">\n      <AdminChannelDataItem\n          :data=\"channel\"\n          :dataType=\"`mistStream`\"\n          :dataTypeDb=\"`mist_stream`\"\n          @open-modal=\"handleOpenModal('mistStream')\"/>\n    </div>\n\n    <!-- Active Toggle -->\n    <div class=\"table-cell px-6 py-4 align-middle\">\n      <div class=\"flex justify-center items-center w-full\">\n        <label class=\"cursor-pointer label\">\n          <input v-model=\"channel.active\"\n                 type=\"checkbox\"\n                 @click.prevent=\"toggleChannelActiveStatus\"\n                 class=\"toggle toggle-success\"/>\n        </label>\n      </div>\n    </div>\n\n    <dialog :id=\"'adminEditChannel_'+channel.id\" class=\"modal\">\n      <div class=\"modal-box\">\n        <form method=\"dialog\">\n          <button class=\"btn btn-sm btn-circle btn-ghost absolute right-2 top-2\">✕</button>\n        </form>\n        <h3 class=\"font-bold text-lg mb-2\">Edit Channel Name</h3>\n        <input v-model=\"channelName\" type=\"text\" class=\"input input-bordered w-full max-w-xs\" />\n        <button @click.prevent=\"submit\" class=\"btn btn-primary ml-2\">Submit</button>\n      </div>\n    </dialog>\n\n  </div>\n</template>\n\n<script setup>\nimport { useAdminStore } from '@/Stores/AdminStore'\nimport { useNotificationStore } from '@/Stores/NotificationStore'\nimport AdminChannelDataItem from '@/Components/Pages/Admin/Channels/AdminChannelDataItem'\nimport AdminChannelCurrentVideo from '@/Components/Pages/Admin/Channels/AdminChannelCurrentVideo.vue'\nimport { computed, ref } from 'vue'\n\nconst adminStore = useAdminStore()\nconst notificationStore = useNotificationStore()\n\nconst props = defineProps({\n  channel: Object,\n})\n\nconst emit = defineEmits(['open-modal'])\n\nconst channelName = ref(props.channel.name)\n\nconst openEditChannelModal = () => {\n  document.getElementById('adminEditChannel_'+props.channel.id).showModal()\n}\n\n\nconst submit = async () => {\n  await adminStore.updateChannel(props.channel.id, channelName.value)\n  document.getElementById('adminEditChannel_'+props.channel.id).close()\n}\n\n// Handle the open-modal event from grandchildren and re-emit to parent\nconst handleOpenModal = (type) => {\n  // You can add more logic here if needed before emitting\n  emit('open-modal', {channel: props.channel, type})\n}\n\nconst toggleChannelActiveStatus = async (event) => {\n  try {\n    await adminStore.toggleChannelActiveStatus(props.channel.id);\n    await adminStore.fetchChannels();\n  } catch (error) {\n    console.error('Error toggling channel active status:', error);\n    // Assuming notificationStore is properly imported and instantiated\n    notificationStore.setToastNotification('Error toggling channel active status: ' + error, 'error');\n  } finally {\n    // Blurring the target element directly\n    if (event && event.target) {\n      event.target.blur();\n    }\n  }\n}\n\n</script>\n","import script from \"./AdminChannelPaginator.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AdminChannelPaginator.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"flex flex-row justify-center my-6 w-full\">\n    <!--                  <div class=\"join grid grid-cols-2\">-->\n    <!--                    <button class=\"join-item btn btn-sm btn-outline\" @click=\"adminStore.prevChannelsPage\">Previous page</button>-->\n    <!--                    <button class=\"join-item btn btn-sm btn-outline\" @click=\"adminStore.nextChannelsPage\">Next</button>-->\n    <!--                  </div>-->\n    <div class=\"join\">\n      <input\n          v-for=\"page in adminStore.totalChannelsPages\"\n          :key=\"page\"\n          type=\"radio\"\n          name=\"options\"\n          :value=\"page\"\n          v-model=\"adminStore.currentChannelsPage\"\n          @change=\"() => adminStore.setChannelsPage(page)\"\n          class=\"join-item btn btn-square !bg-none\"\n          :aria-label=\"`${page}`\"\n      />\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { useAdminStore } from '@/Stores/AdminStore'\nconst adminStore = useAdminStore()\n</script>\n","import script from \"./AdminChannelRowHeader.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AdminChannelRowHeader.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n\n    <div class=\"table-row\">\n      <div scope=\"col\" class=\"table-cell px-6 py-3 uppercase\">\n        <font-awesome-icon icon=\"fa-repeat\" class=\"mr-2 cursor-pointer hover:text-blue-500\"\n                           @click.prevent=\"emit('reloadChannelsList')\"/>\n        <span class=\"uppercase\">Channel </span>\n      </div>\n      <div scope=\"col\" class=\"hidden md:table-cell px-6 py-3 uppercase text-center\">\n        <span class=\"uppercase\">Current Video</span>\n      </div>\n      <div scope=\"col\" class=\"table-cell px-6 py-3 uppercase text-center\">\n        <span class=\"uppercase\">External Source</span>\n      </div>\n      <div scope=\"col\" class=\"px-6 py-3 max-w-64 text-center\">\n        <span class=\"uppercase\">Channel Playlist</span>\n      </div>\n      <div scope=\"col\" class=\"table-cell px-6 py-3 text-center\">\n        <span class=\"uppercase\">Mist Stream</span>\n      </div>\n      <div scope=\"col\" class=\"table-cell px-6 py-3 w-52 text-center\">\n        <span class=\"uppercase\">Active</span>\n      </div>\n\n    </div>\n\n</template>\n<script setup>\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome'\nconst emit = defineEmits(['reloadChannelsList'])\n</script>","import script from \"./Index.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Index.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <Head title=\"Admin/Channels\"/>\n\n  <div class=\"place-self-center flex flex-col\">\n    <div id=\"topDiv\" class=\"bg-white text-black dark:bg-gray-800 dark:text-gray-50 p-5 mb-10\">\n\n      <Message v-if=\"appSettingStore.showFlashMessage\" :flash=\"$page.props.flash\"/>\n\n      <AdminHeader\n          :displayBadges=\"true\"\n          :badgePrimaryNumber=\"adminStore.activeChannelsCount\"\n          :badgeSecondaryNumber=\"adminStore.channels.length\">Channels\n      </AdminHeader>\n      <AdminChannelHeaderButtons/>\n\n      <div class=\"bg-orange-300 px-2 text-black mb-3\">\n        <p>Add a channel: create playlist and add shows.</p>\n        <p><span class=\"font-semibold\">TRAVIS NOTE: </span>Use FFMPEG to push an .mp4 to a mist stream. This will allow\n          us to schedule video objects from anywhere\n          into our channels, and we can have a channel that loads the current video at the right time spot in the video\n          based on our schedule saved in the database.</p>\n      </div>\n\n      <div class=\"flex flex-col\">\n        <div class=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\n          <div class=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\n            <div class=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\n\n              <div class=\"relative overflow-x-auto shadow-md sm:rounded-lg\">\n                <div class=\"table w-full text-sm text-left text-gray-500 dark:text-gray-400\">\n                  <div class=\"table-header-group text-xs text-gray-700 bg-gray-50 dark:bg-gray-700 dark:text-gray-400\">\n                    <AdminChannelRowHeader @reloadChannelsList=\"reloadChannelsList\"/>\n                  </div>\n                  <div class=\"table-row-group\">\n                    <AdminChannelRow\n                        v-for=\"channel in adminStore.paginatedChannels\"\n                        :key=\"channel.id\"\n                        :channel=\"channel\"\n                        @open-modal=\"openModal\"/>\n                  </div>\n                </div>\n\n                <!-- Paginator -->\n                <AdminChannelPaginator/>\n\n              </div>\n              <DynamicModal/>\n\n\n            </div>\n          </div>\n        </div>\n      </div>\n\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { usePageSetup } from '@/Utilities/PageSetup'\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\nimport { useNotificationStore } from '@/Stores/NotificationStore'\nimport { useAdminStore } from '@/Stores/AdminStore'\nimport AdminHeader from '@/Components/Pages/Admin/AdminHeader'\nimport Message from '@/Components/Global/Modals/Messages'\nimport DynamicModal from '@/Components/Pages/Admin/Channels/DynamicModal'\nimport AdminChannelHeaderButtons from '@/Components/Pages/Admin/Channels/AdminChannelHeaderButtons'\nimport AdminChannelRow from '@/Components/Pages/Admin/Channels/AdminChannelRow.vue'\nimport AdminChannelPaginator from '@/Components/Pages/Admin/Channels/AdminChannelPaginator.vue'\nimport AdminChannelRowHeader from '@/Components/Pages/Admin/Channels/AdminChannelRowHeader.vue'\n\nusePageSetup('admin.channels')\n\nconst appSettingStore = useAppSettingStore()\nconst notificationStore = useNotificationStore()\nconst adminStore = useAdminStore()\n\nadminStore.fetchChannels()\n\nfunction hasChannelSource(channel) {\n  if (channel && channel.source && channel.source.name) {\n    return channel.source.name\n  }\n  return null // Or return any other default value if needed\n}\n\n// let search = ref(props.filters.search);\n\n// watch(search, throttle(function (value) {\n//   router.get('/admin/channels', {search: value}, {\n//     preserveState: true,\n//     replace: true\n//   });\n// }, 300));\n\nconst hasPriority = (playbackPriorityType) => {\n  if (playbackPriorityType) {\n    return true\n  }\n}\n\nconst openModal = ({channel, type}) => {\n  // adminStore.reset()\n  // adminStore.fetchChannels()\n  adminStore.setSelectedChannel(channel)\n  adminStore.setCurrentType(type)\n  adminStore.fetchItems(type) // Optionally prefetch items if the modal needs it\n  document.getElementById('dynamicModal').showModal() // Assuming the modal has an ID of 'dynamicModal'\n}\n\nconst setPlaybackPriorityType = async (channel, priorityType) => {\n  const dataToSend = {setPriorityType: priorityType}\n  try {\n    const response = await axios.post(`/admin/channels/${channel.id}/setPlaybackPriorityType`, dataToSend)\n    // do something here\n  } catch (error) {\n    console.log(error)\n  }\n}\n\nconst reloadChannelsList = async () => {\n  try {\n    await adminStore.fetchChannels()\n    // On success, show a success toast\n    notificationStore.setToastNotification('Channels reloaded successfully!', 'success', 3000)\n  } catch (error) {\n    // On failure, show an error toast\n    console.error(error)\n    notificationStore.setToastNotification('Failed to reload channels.', 'error', 3000)\n\n  }\n}\n</script>\n"],"names":["usePageSetup","pageName","userStore","useUserStore","appSettingStore","useAppSettingStore","videoPlayerStore","useVideoPlayerStore","currentPage","showFlashMessage","pageIsHidden","isMobile","window","innerWidth","fullPage","ott","showOttButtons","makeVideoTopRight","pageReload","pageWasReloaded","location","reload","router","on","event","search","shouldScrollToTop","requestAnimationFrame","topDiv","document","getElementById","scrollIntoView","behavior","scrollTo","setPrevUrl","noLayout","watch","isSmallScreen","newValue","immediate","___CSS_LOADER_EXPORT___","push","module","id","channelStore","useChannelStore","props","useAdminStore","__props","originalName","ref","key","value","addMetadataField","form","metadata","reactive","useForm","name","source","mime_type","comment","reset","mistStream","newVal","_typeof","Object","entries","map","_ref","_ref2","_slicedToArray","deep","submit","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","post","route","closeModal","stop","apply","arguments","close","clearMistStream","clearErrors","index","splice","clearFlashMessage","computed","flash","success","message","warning","error","_objectSpread","displayBadges","adminStore","selectedItem","filteredItems","activeItem","selectItem","item","textContent","showModal","confirmSelection","updateActiveItemId","confirmRemove","_callee2","_context2","removeMistStream","onMounted","_callee3","_context3","fetchItems","type","refreshList","updateMistStreamModal","setPriority","sourceSelector","sourceType","confirmPriorityChange","setPlaybackPriorityType","options","locals","newChannelName","openAddChannelModal","addChannel","script","_createBlock","_component_Popper","hover","openDelay","closeDelay","placement","content","_withCtx","_renderSlot","_ctx","$slots","undefined","_","emit","__emit","buttonText","_props$data$props$dat","data","dataTypeDb","concat","dataType","dataPart","buttonClass","playback_priority_type","notificationStore","useNotificationStore","channelName","channel","openEditChannelModal","updateChannel","handleOpenModal","toggleChannelActiveStatus","fetchChannels","t0","console","setToastNotification","target","blur","finish","_x","openModal","setSelectedChannel","setCurrentType","reloadChannelsList"],"sourceRoot":""}
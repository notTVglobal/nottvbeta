{"version":3,"file":"js/8717.js","mappings":"iKAMO,SAASA,EAAaC,GACzB,IAAMC,GAAYC,EAAAA,EAAAA,gBACZC,GAAkBC,EAAAA,EAAAA,sBAClBC,GAAmBC,EAAAA,EAAAA,uBAEzBH,EAAgBI,YAAcP,EAC9BG,EAAgBK,kBAAmB,EACnCL,EAAgBM,cAAe,EAG3BR,EAAUS,UAAYC,OAAOC,WAAa,MAEnCT,EAAgBU,SADvBV,EAAgBW,IAAM,GAIM,IAAxBX,EAAgBW,MAChBX,EAAgBW,IAAM,GAG1BX,EAAgBY,gBAAiB,GAGrCV,EAAiBW,oBAEbb,EAAgBc,aAChBd,EAAgBc,YAAa,EAC7Bd,EAAgBe,iBAAkB,EAClCP,OAAOQ,SAASC,UAWhBC,EAAAA,GAAOC,GAAG,YAAY,SAACC,GAEftB,EAAUS,UAAYC,OAAOC,WAAa,MAAQT,EAAgBU,SAClEV,EAAgBW,IAAM,EAEM,IAAxBX,EAAgBW,MAChBX,EAAgBW,IAAM,GAIqB,KAA3BH,OAAOQ,SAASK,SAChBrB,EAAgBsB,mBACpCC,uBAAsB,WAClB,IAAMC,EAASC,SAASC,eAAe,UACnCF,EACAA,EAAOG,eAAe,CAACC,SAAU,SAEjCpB,OAAOqB,SAAS,EAAG,EAE3B,IAEJ7B,EAAgBsB,mBAAoB,CACxC,IAEJtB,EAAgB8B,aAChB9B,EAAgBY,gBAAiB,EACjCZ,EAAgB+B,UAAW,GAI3BC,EAAAA,EAAAA,QACI,kBAAMhC,EAAgBiC,aAAa,IACnC,SAACC,GAEOlC,EAAgBW,IADhBuB,EACsB,EAEA,CAE9B,GACA,CAAEC,WAAW,GAGrB,C,kICjFA,E,qDCWA,IAAMC,GAAyBC,EAAAA,EAAAA,8BACLC,EAAAA,EAAAA,yBAEbC,EAAAA,EAAAA,OAEbC,EAAAA,EAAAA,YAAU,WACRJ,EAAuBK,mBACzB,KAEqBC,EAAAA,EAAAA,WAAS,kBAAMN,EAAuBO,oBAAoB,IAA/E,IACMC,GAAkBF,EAAAA,EAAAA,WAAS,kBAAMN,EAAuBQ,eAAe,IAEvEC,GAAcH,EAAAA,EAAAA,WAAS,WAC3B,OAAOE,EAAgBE,MAAQ,EACzB,qFACA,iFACR,IAEA,SAASC,IACP7B,EAAAA,GAAO8B,IAAI,wBACb,C,y1BC/BA,E,6DC0CA,IAAMhD,GAAkBC,EAAAA,EAAAA,sBAsBxB,IAAMgD,GAAUC,EAAAA,EAAAA,UAAS,CACvB,CAACC,KAAM,eAAgBC,KAAM,YAAaC,SAAS,GACnD,CAACF,KAAM,iBAAkBC,KAAM,wBAAyBC,SAAS,GACjE,CAACF,KAAM,mBAAoBC,KAAM,kBAAmBC,SAAS,GAC7D,CAACF,KAAM,aAAcC,KAAM,cAAeC,SAAS,GACnD,CAACF,KAAM,SAAUC,KAAM,UAAWC,SAAS,GAC3C,CAACF,KAAM,YAAaC,KAAM,kBAAmBC,SAAS,GACtD,CAACF,KAAM,iBAAkBC,KAAM,iBAAkBC,SAAS,GAC1D,CAACF,KAAM,WAAYC,KAAM,YAAaC,SAAS,K,09BAdzBA,E,UACfA,EACD,sMACA,2F,2DAHR,IAAwBA,C,4tCC1DxB,E,mECsDA,IAAMjB,GAAyBC,EAAAA,EAAAA,6BACzBrC,GAAkBC,EAAAA,EAAAA,sBAGlBqD,IAFYvD,EAAAA,EAAAA,gBAEJwD,G,OAId3D,EAAAA,EAAAA,GAAa,sBAAwB0D,EAAME,kBAAkBC,KAM7DjB,EAAAA,EAAAA,YAAU,WACRJ,EAAuBsB,cAAcJ,EAAME,kBAC7C,I,6yEANuBG,E,4BACrBvB,EAAuBwB,cAAcD,GADvC,IAAuBA,C","sources":["webpack:///./resources/js/Utilities/PageSetup.js","webpack:///./resources/js/Components/Pages/NewsPersonMessages/OpenInboxButtonWithCount.vue?5332","webpack:///./resources/js/Components/Pages/NewsPersonMessages/OpenInboxButtonWithCount.vue","webpack:///./resources/js/Components/Pages/News/NewsHeader.vue?7802","webpack:///./resources/js/Components/Pages/News/NewsHeader.vue","webpack:///./resources/js/Pages/NewsPersonMessages/{$id}.vue?c354","webpack:///./resources/js/Pages/NewsPersonMessages/{$id}.vue"],"sourcesContent":["import { onBeforeMount, onMounted, watch } from 'vue'\nimport { useUserStore } from \"@/Stores/UserStore\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useVideoPlayerStore } from \"@/Stores/VideoPlayerStore\"\nimport { router } from '@inertiajs/vue3'\n\nexport function usePageSetup(pageName) {\n    const userStore = useUserStore()\n    const appSettingStore = useAppSettingStore()\n    const videoPlayerStore = useVideoPlayerStore()\n\n    appSettingStore.currentPage = pageName\n    appSettingStore.showFlashMessage = true\n    appSettingStore.pageIsHidden = false\n\n// PageSetup utility\n    if (userStore.isMobile || window.innerWidth < 1024) {\n        appSettingStore.ott = 0; // Close all panels on mobile devices\n    } else if (appSettingStore.fullPage) {\n        appSettingStore.ott = 0; // Default to closed in fullPage mode\n    } else {\n        if (appSettingStore.ott === 0) {\n            appSettingStore.ott = 4\n        }\n        // appSettingStore.ott = 4; // Open OttChat by default on larger screens\n        appSettingStore.showOttButtons = true;\n    }\n\n    videoPlayerStore.makeVideoTopRight()\n\n    if (appSettingStore.pageReload) {\n        appSettingStore.pageReload = false\n        appSettingStore.pageWasReloaded = true\n        window.location.reload();\n    }\n    // Check if the URL contains query strings\n\n\n    // Only scroll into view if there are no query strings\n\n        // const topDiv = document.getElementById(\"topDiv\")\n        // if (topDiv) {\n        //     topDiv.scrollIntoView()\n        // }\n        router.on('navigate', (event) => {\n            // Ensure OTT panels do not open automatically on mobile devices\n            if (userStore.isMobile || window.innerWidth < 1024 || appSettingStore.fullPage) {\n                appSettingStore.ott = 0; // Close all panels on mobile devices\n            } else {\n                if (appSettingStore.ott === 0) {\n                    appSettingStore.ott = 4\n                }\n                // appSettingStore.ott = 0; // Default to closed on larger screens\n            }\n            const hasQueryStrings = window.location.search !== '';\n            if (!hasQueryStrings || appSettingStore.shouldScrollToTop) {\n                requestAnimationFrame(() => {\n                    const topDiv = document.getElementById(\"topDiv\");\n                    if (topDiv) {\n                        topDiv.scrollIntoView({behavior: 'auto'});\n                    } else {\n                        window.scrollTo(0, 0);\n                    }\n                });\n            }\n            appSettingStore.shouldScrollToTop = false;\n        })\n    // Only update if we're not already on this page to avoid overwriting with the current URL\n    appSettingStore.setPrevUrl()\n    appSettingStore.showOttButtons = true\n    appSettingStore.noLayout = false\n\n    // router.reload()\n\n    watch(\n        () => appSettingStore.isSmallScreen,\n        (newValue) => {\n            if (newValue) {\n                appSettingStore.ott = 0;\n            } else {\n                appSettingStore.ott = 4;\n            }\n        },\n        { immediate: true } // This option ensures the watch executes immediately with the current value\n    );\n\n}\n","import script from \"./OpenInboxButtonWithCount.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./OpenInboxButtonWithCount.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"flex items-center\">\n    <button\n        @click=\"goToInbox\"\n        :class=\"buttonClass\"\n    >\n      Inbox ({{ newMessageCount }})\n    </button>\n  </div>\n</template>\n<script setup>\nimport { router, usePage } from '@inertiajs/vue3'\nimport { onMounted, computed } from 'vue';\nimport { useNewsPersonMessageStore } from '@/Stores/NewsPersonMessageStore';\nimport { useNotificationStore } from '@/Stores/NotificationStore';\n\nconst newsPersonMessageStore = useNewsPersonMessageStore();\nconst notificationStore = useNotificationStore();\n\nconst page = usePage()\n\nonMounted(() => {\n  newsPersonMessageStore.fetchMessageCount();\n});\n\nconst messageCount = computed(() => newsPersonMessageStore.computedMessageCount);\nconst newMessageCount = computed(() => newsPersonMessageStore.newMessageCount);\n\nconst buttonClass = computed(() => {\n  return newMessageCount.value > 0\n      ? 'bg-pink-600 hover:bg-pink-700 text-white font-semibold ml-2 mt-2 px-4 py-2 rounded'\n      : 'bg-black hover:bg-gray-800 text-white font-semibold ml-2 mt-2 px-4 py-2 rounded';\n});\n\nfunction goToInbox() {\n  router.get('/news-person-messages');\n}\n</script>","import script from \"./NewsHeader.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./NewsHeader.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n\n  <div class=\"w-full mx-auto -mt-6 b-3 pb-3 border-b border-gray-500 pt-12 px-12 bg-yellow-950 text-white\">\n\n    <div class=\"w-full mx-auto flex flex-wrap justify-between mb-3 pb-3 gap-x-2 gap-y-2\">\n      <div class=\"text-4xl font-semibold text-center lg:text-left\">\n        <slot/>\n      </div>\n\n      <OpenInboxButtonWithCount />\n\n      <button\n          @click=\"appSettingStore.btnRedirect('/dashboard')\"\n          class=\"bg-black hover:bg-gray-800 text-white font-semibold ml-2 mt-2 px-4 py-2 rounded disabled:bg-gray-400 h-max w-max\"\n      >Dashboard\n      </button>\n    </div>\n\n  </div>\n\n  <div class=\"flex align-items-end mt-4 gap-2\">\n    <div class=\"w-full overflow-hidden shadow-sm sm:rounded-lg\">\n      <div class=\"w-full p-6 dark:bg-gray-900 border-b border-gray-200\">\n        <div class=\"w-full relative bg-gray-200 overflow-x-auto shadow-md sm:rounded-lg py-6 px-6\">\n          <ul class=\"flex flex-wrap justify-start ml-0 lg:ml-16 mt-6 mr-6 lg:mt-0 gap-x-2 gap-y-3 md:gap-x-8\">\n            <li v-for=\"button in buttons\" :key=\"button.name\" class=\"\">\n              <button\n                  @click=\"button.enabled ? appSettingStore.btnRedirect(button.path) : null\"\n                  :class=\"getButtonClass(button.enabled)\"\n                  :disabled=\"!button.enabled\">\n                {{ button.name }}\n              </button>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n\n  </div>\n\n</template>\n\n<script setup>\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\nimport { reactive } from 'vue'\nimport OpenInboxButtonWithCount from '@/Components/Pages/NewsPersonMessages/OpenInboxButtonWithCount.vue'\n\nconst appSettingStore = useAppSettingStore()\n\ndefineProps({\n  search: String,\n})\n\n// const getButtonClass = (pageIdentifier) => {\n//   const baseClass = 'inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium leading-5 transition';\n//   const activeClass = 'border-indigo-400 text-gray-800 focus:outline-none focus:border-indigo-700';\n//   const inactiveClass = 'border-transparent text-black hover:text-blue-500 hover:border-indigo-400 focus:outline-none focus:text-gray-700 focus:border-gray-300 disabled:text-gray-300 disabled:cursor-not-allowed disabled:border-none';\n//\n//   return appSettingStore.currentPage === pageIdentifier\n//       ? `${baseClass} ${activeClass}`\n//       : `${baseClass} ${inactiveClass}`;\n// };\n\nfunction getButtonClass(enabled) {\n  return enabled\n      ? 'py-2 px-4 bg-blue-500 text-white font-semibold rounded-lg shadow-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-400 focus:ring-opacity-75 transition ease-in-out duration-150'\n      : 'py-2 px-4 bg-gray-400 text-white font-semibold rounded-lg shadow-md cursor-not-allowed'\n}\n\nconst buttons = reactive([\n  {name: 'News Stories', path: '/newsroom', enabled: true},\n  {name: 'News RSS Feeds', path: '/newsRssFeedItemsTemp', enabled: true},\n  {name: 'News RSS Archive', path: '/newsRssArchive', enabled: true},\n  {name: 'Categories', path: '/categories', enabled: false},\n  {name: 'Cities', path: '/cities', enabled: false},\n  {name: 'Districts', path: '/news-districts', enabled: true},\n  {name: 'Press Releases', path: '/pressReleases', enabled: false},\n  {name: 'Calendar', path: '/calendar', enabled: false},\n])\n</script>\n","import script from \"./{$id}.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./{$id}.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n    <Head title=\"News Message Inbox\"/>\n\n    <div class=\"place-self-center flex flex-col\">\n      <div id=\"topDiv\" class=\"bg-white h-screen text-black dark:bg-gray-900 dark:text-gray-50\">\n        <NewsHeader>Newsroom</NewsHeader>\n        <div class=\"w-full max-w-7xl px-8 bg-gray-50 text-black dark:bg-gray-800 dark:text-gray-50\">\n          <div class=\"py-8 px-4 lg:px-16\">\n            <h1 class=\"text-3xl font-bold mb-6\">Message Details</h1>\n            <div class=\"mb-6\">\n              <h2 class=\"text-2xl font-semibold mb-4\">{{ newsPersonMessage.subject || 'No Subject' }}</h2>\n              <div v-if=\"newsPersonMessage.sender\" class=\"text-lg mb-2\">\n                <div class=\"flex items-center\">\n                  <img :src=\"newsPersonMessage.sender.profile_photo_url\" alt=\"Profile Photo\" class=\"w-12 h-12 rounded-full mr-4\">\n                  <div>\n                    <p><span class=\"font-semibold\">Sender:</span> {{ newsPersonMessage.sender.name }}</p>\n                    <p v-if=\"newsPersonMessage.sender.roles.length\"><span class=\"font-semibold\">Roles:</span> {{ newsPersonMessage.sender.roles.join(', ') }}</p>\n                    <p v-if=\"newsPersonMessage.sender.creator_slug\"><span class=\"font-semibold\">Creator Slug:</span> {{ newsPersonMessage.sender.creator_slug }}</p>\n                    <p v-if=\"newsPersonMessage.sender.email\"><span class=\"font-semibold\">Email:</span> {{ newsPersonMessage.sender.email }}</p>\n                    <p v-if=\"newsPersonMessage.sender.phone\"><span class=\"font-semibold\">Phone:</span> {{ newsPersonMessage.sender.phone }}</p>\n                  </div>\n                </div>\n              </div>\n              <p class=\"text-lg mt-4\">\n                <span class=\"font-semibold\">Message:</span>\n              </p>\n              <p class=\"bg-white dark:bg-gray-700 p-4 rounded-lg shadow mt-2\">{{ newsPersonMessage.message }}</p>\n            </div>\n            <div class=\"flex space-x-4\">\n              <button\n                  @click=\"appSettingStore.btnRedirect('/news-person-messages')\"\n                  class=\"bg-blue-600 hover:bg-blue-700 text-white font-semibold py-2 px-4 rounded-lg transition\"\n              >\n                Back to Inbox\n              </button>\n              <button\n                  @click=\"deleteMessage(newsPersonMessage.id)\"\n                  class=\"bg-red-600 hover:bg-red-700 text-white font-semibold py-2 px-4 rounded-lg transition flex items-center\"\n              >\n                <font-awesome-icon icon=\"fa-trash-can\" class=\"mr-2\" />\n                Delete\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { usePageSetup } from '@/Utilities/PageSetup'\nimport { defineProps, onMounted } from 'vue'\nimport { useNewsPersonMessageStore } from '@/Stores/NewsPersonMessageStore'\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\nimport { useUserStore } from '@/Stores/UserStore'\nimport NewsHeader from '@/Components/Pages/News/NewsHeader.vue'\n\nconst newsPersonMessageStore = useNewsPersonMessageStore()\nconst appSettingStore = useAppSettingStore()\nconst userStore = useUserStore()\n\nconst props = defineProps({\n  newsPersonMessage: Object,\n})\n\nusePageSetup('newsPersonMessages.' + props.newsPersonMessage.id)\n\nfunction deleteMessage(messageId) {\n  newsPersonMessageStore.deleteMessage(messageId)\n}\n\nonMounted(() => {\n  newsPersonMessageStore.updateMessage(props.newsPersonMessage)\n})\n</script>\n"],"names":["usePageSetup","pageName","userStore","useUserStore","appSettingStore","useAppSettingStore","videoPlayerStore","useVideoPlayerStore","currentPage","showFlashMessage","pageIsHidden","isMobile","window","innerWidth","fullPage","ott","showOttButtons","makeVideoTopRight","pageReload","pageWasReloaded","location","reload","router","on","event","search","shouldScrollToTop","requestAnimationFrame","topDiv","document","getElementById","scrollIntoView","behavior","scrollTo","setPrevUrl","noLayout","watch","isSmallScreen","newValue","immediate","newsPersonMessageStore","useNewsPersonMessageStore","useNotificationStore","usePage","onMounted","fetchMessageCount","computed","computedMessageCount","newMessageCount","buttonClass","value","goToInbox","get","buttons","reactive","name","path","enabled","props","__props","newsPersonMessage","id","updateMessage","messageId","deleteMessage"],"sourceRoot":""}
{"version":3,"file":"js/3567.js","mappings":"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","sources":["webpack:///./resources/js/Stores/TeamStore.js","webpack:///./resources/js/Utilities/PageSetup.js","webpack:///./resources/js/Components/Global/TextEditor/TipTapDescriptionEditor.vue?0df4","webpack:///./resources/js/Pages/Shows/Create.vue?7c66","webpack:///./resources/js/Components/Global/Buttons/CancelButton.vue?b7c6","webpack:///./resources/js/Components/Global/Buttons/CancelButton.vue","webpack:///./resources/js/Components/Global/Modals/Messages.vue?dfe9","webpack:///./resources/js/Components/Global/Modals/Messages.vue","webpack:///./resources/js/Components/Global/SocialMedia/SocialMediaLinksStoreUpdateForForm.vue","webpack:///./resources/js/Components/Global/TextEditor/TipTapDescriptionEditor.vue","webpack:///./resources/js/Components/Global/TextEditor/TipTapDescriptionEditor.vue?bc96","webpack:///./resources/js/Components/Global/TextEditor/TipTapDescriptionEditor.vue?852c","webpack:///./resources/js/Jetstream/ValidationErrors.vue?5fdc","webpack:///./resources/js/Jetstream/ValidationErrors.vue","webpack:///./resources/js/Components/Global/Modals/CheckboxNotification.vue?6fd1","webpack:///./resources/js/Components/Global/Modals/CheckboxNotification.vue","webpack:///./resources/js/Pages/Shows/Create.vue","webpack:///./resources/js/Pages/Shows/Create.vue?3280","webpack:///./resources/js/Pages/Shows/Create.vue?091d"],"sourcesContent":["import { defineStore } from 'pinia'\nimport { router } from '@inertiajs/vue3'\nimport { useNotificationStore } from '@/Stores/NotificationStore'\n\nconst initialState = () => ({\n    id: 0,\n    name: '',\n    description: '',\n    slug: '',\n    totalSpots: '',\n    memberSpots: '',\n    teamCreator: [],\n    teamLeader: [],\n    members: [],\n    managers: [],\n    activeShow: [],\n    activeEpisode: [],\n    creators: [],\n    showModal: Boolean,\n    confirmDialog: false,\n    confirmManagerDialog: false,\n    selectedManagerName: '',\n    selectedManagerId: 0,\n    addManager: false,\n    removeManager: false,\n    deleteMemberName: '',\n    deleteMemberId: 0,\n    noteEdit: 0,\n    note: '',\n    saveNoteProcessing: Boolean,\n    // on the show episode manage page\n    // turn on the go live div\n    goLiveDisplay: false,\n    can: [],\n    openComponent: 'teamShows',\n})\n\nexport const useTeamStore = defineStore('teamStore', {\n    state: initialState,\n    actions: {\n        reset() {\n            // Reset the store to its original state (clear all data)\n            Object.assign(this, initialState())\n        },\n        // async fill() {\n        //     let r = await import('@/Json/team.json');\n        //     this.$state = r.default;\n        // },\n        setActiveTeam(team) {\n            this.id = team.id\n            this.name = team.name\n            this.description = team.description\n            this.slug = team.slug\n            this.members = team.members\n            this.managers = team.managers\n            this.totalSpots = team.totalSpots\n            this.memberSpots = team.memberSpots\n        },\n        setActiveShow(show) {\n            this.activeShow = show\n        },\n        setActiveEpisode(episode) {\n            this.activeShow = episode\n        },\n        addMember(member) {\n            this.members.push(member)\n        },\n        removeMember(memberId) {\n            this.members = this.members.filter(member => member.id !== memberId);\n        },\n        updateCreatorTeams(creatorId, teamId, remove = false) {\n            const creator = this.creators.find(c => c.id === creatorId);\n            if (creator) {\n                if (remove) {\n                    creator.teams = creator.teams.filter(team => team.id !== teamId);\n                } else {\n                    creator.teams.push({ id: teamId, is_manager: false }); // Add the new team to the creator's teams\n                }\n            }\n        },\n        // getCreators() {\n        //     router.reload({ only: ['creators'] })\n        // },\n        deleteTeamMemberCancel() {\n            this.confirmDialog = false\n        },\n        confirmTeamManagerCancel() {\n            this.confirmManagerDialog = false\n        },\n        // loadTeamMembers(members){\n        //     this.members = members;\n        // }\n        // deleteTeamMember() {\n        //     router.visit(route('teams.removeTeamMember'), {\n        //         method: 'post',\n        //         data: {\n        //             user_id: this.deleteMemberId,\n        //             team_id: this.id,\n        //             team_slug: this.slug,\n        //         },\n        //     })\n        // },\n        async deleteTeamMember() {\n            const notificationStore = useNotificationStore()\n            const payload = {\n                user_id: this.deleteMemberId,\n                team_id: this.id,\n            };\n\n            try {\n                const response = await axios.post(route('teams.removeTeamMember'), payload);\n                if (response.status === 200) {\n                    this.removeMember(this.deleteMemberId);\n                    this.updateCreatorTeams(this.deleteMemberId, this.id, true); // Remove the team from the creator's teams\n                    this.confirmDialog = false;\n                    notificationStore.setToastNotification(response.data.message, 'success')\n                } else {\n                    this.confirmDialog = false;\n                    notificationStore.setToastNotification('Failed to remove member from the team.', 'warning')\n                }\n            } catch (error) {\n                console.error(error);\n                this.confirmDialog = false;\n                notificationStore.setToastNotification('An error occurred while removing the member from the team.', 'error')\n            }\n        },\n\n        addTeamManager() {\n            router.visit(route('teams.addTeamManager'), {\n                method: 'post',\n                data: {\n                    user_id: this.selectedManagerId,\n                    team_id: this.id,\n                    team_slug: this.slug,\n                },\n            })\n            this.confirmManagerDialog = false\n        },\n        removeTeamManager() {\n            router.visit(route('teams.removeTeamManager'), {\n                method: 'post',\n                data: {\n                    user_id: this.selectedManagerId,\n                    team_id: this.id,\n                    team_slug: this.slug,\n                },\n            })\n            this.confirmManagerDialog = false\n        },\n        toggleGoLiveDisplay() {\n            this.goLiveDisplay = !this.goLiveDisplay\n        },\n        async fetchTeamMembers() {\n            await axios.get('/team/team-members').then().error()\n        },\n        setCreators(creators) {\n            this.creators = creators\n        },\n    },\n\n    getters: {\n        spotsRemaining(state) {\n            if (!state.members) {\n                return state.totalSpots; // Assume no members if state.members is not defined\n            }\n            return Math.max(state.totalSpots - state.members.length, 0);\n        },\n        membersCount(state) {\n            if (!state.members) {\n                return 0; // Assume no members if state.members is not defined\n            }\n            return state.members.length;\n        },\n    },\n})\n\n\n// Another option for declaring specific data to return:\n// let data = r.default;\n//\n// import('@/Json/team.json').then(r => {\n// this.$patch({\n//     name: data.name,\n//     spots: data.spots,\n//     members: data.members\n// });\n// });\n","import { onBeforeMount, onMounted } from 'vue'\nimport { useUserStore } from \"@/Stores/UserStore\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useVideoPlayerStore } from \"@/Stores/VideoPlayerStore\"\nimport { router } from '@inertiajs/vue3'\n\nexport function usePageSetup(pageName) {\n    const userStore = useUserStore()\n    const appSettingStore = useAppSettingStore()\n    const videoPlayerStore = useVideoPlayerStore()\n\n    appSettingStore.currentPage = pageName\n    appSettingStore.showFlashMessage = true\n    appSettingStore.pageIsHidden = false\n\n    if (userStore.isMobile || window.innerWidth < 1024 || appSettingStore.fullPage) {\n        appSettingStore.ott = 0;\n    } else {\n        appSettingStore.ott = 1;\n        appSettingStore.showOttButtons = true;\n    }\n\n    videoPlayerStore.makeVideoTopRight()\n\n    if (appSettingStore.pageReload) {\n        appSettingStore.pageReload = false\n        appSettingStore.pageWasReloaded = true\n        window.location.reload();\n    }\n    // Check if the URL contains query strings\n\n\n    // Only scroll into view if there are no query strings\n\n        // const topDiv = document.getElementById(\"topDiv\")\n        // if (topDiv) {\n        //     topDiv.scrollIntoView()\n        // }\n        router.on('navigate', (event) => {\n            if (userStore.isMobile || window.innerWidth < 1024 || appSettingStore.fullPage) {\n                appSettingStore.ott = 0;\n            } else {\n                appSettingStore.ott = 1;\n            }\n            const hasQueryStrings = window.location.search !== '';\n            if (!hasQueryStrings || appSettingStore.shouldScrollToTop) {\n                requestAnimationFrame(() => {\n                    const topDiv = document.getElementById(\"topDiv\");\n                    if (topDiv) {\n                        topDiv.scrollIntoView({behavior: 'auto'});\n                    } else {\n                        window.scrollTo(0, 0);\n                    }\n                });\n            }\n            appSettingStore.shouldScrollToTop = false;\n        })\n    // Only update if we're not already on this page to avoid overwriting with the current URL\n    appSettingStore.setPrevUrl()\n    appSettingStore.showOttButtons = true\n    appSettingStore.noLayout = false\n\n    // router.reload()\n\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".toolbar[data-v-2044c2a2]{display:flex;gap:8px}.btn[data-v-2044c2a2]{background-color:#4a5568;border:none;border-radius:4px;color:#fff;cursor:pointer;padding:8px 12px}.btn[data-v-2044c2a2]:hover{background-color:#2d3748}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/Components/Global/TextEditor/TipTapDescriptionEditor.vue\"],\"names\":[],\"mappings\":\"AA0IA,0BACE,YAAa,CACb,OACF,CAEA,sBACE,wBAAyB,CAGzB,WAAY,CACZ,iBAAkB,CAHlB,UAAY,CAIZ,cAAe,CAHf,gBAIF,CAEA,4BACE,wBACF\",\"sourcesContent\":[\"<template>\\n  <div>\\n    <div class=\\\"toolbar mb-2\\\">\\n      <button @click.prevent=\\\"toggleBold\\\" class=\\\"btn\\\">Bold</button>\\n      <button @click.prevent=\\\"toggleItalic\\\" class=\\\"btn\\\">Italic</button>\\n      <button @click.prevent=\\\"toggleUnderline\\\" class=\\\"btn\\\">Underline</button>\\n      <button @click.prevent=\\\"toggleSuperscript\\\" class=\\\"btn\\\">Superscript</button>\\n      <button @click.prevent=\\\"toggleSubscript\\\" class=\\\"btn\\\">Subscript</button>\\n    </div>\\n    <div\\n        class=\\\"editor-textarea editor-container bg-gray-50 border border-gray-400 text-gray-900 text-sm w-full rounded-lg focus-within:ring-blue-500 focus-within:border-blue-500\\\"\\n        @click=\\\"focusEditor\\\">\\n      <EditorContent :editor=\\\"editor\\\"/>\\n    </div>\\n  </div>\\n</template>\\n\\n<script setup>\\nimport { useEditor, EditorContent } from '@tiptap/vue-3'\\nimport StarterKit from '@tiptap/starter-kit'\\nimport Document from '@tiptap/extension-document'\\nimport Text from '@tiptap/extension-text'\\nimport TextStyle from '@tiptap/extension-text-style'\\nimport FontFamily from '@tiptap/extension-font-family'\\nimport Color from '@tiptap/extension-color'\\nimport Typography from '@tiptap/extension-typography'\\nimport Underline from '@tiptap/extension-underline'\\nimport Subscript from '@tiptap/extension-subscript'\\nimport Superscript from '@tiptap/extension-superscript'\\nimport Link from '@tiptap/extension-link'\\nimport { onBeforeUnmount, onMounted, onUnmounted, ref } from 'vue'\\n\\nconst emits = defineEmits(['updateContent'])\\n\\nconst props = defineProps({\\n  description: String,\\n  placeholder: String,\\n})\\n\\nconst initialContent = props.description\\n    ? props.description\\n    : (props.placeholder ? props.placeholder : '<p>Start typing the description...</p>')\\n\\nconst editor = useEditor({\\n  autofocus: true, // Setting autofocus to true\\n  extensions: [\\n    StarterKit,\\n    Document,\\n    Text,\\n    TextStyle,\\n    FontFamily,\\n    Color,\\n    Typography,\\n    Underline,\\n    Subscript,\\n    Superscript,\\n    Link.configure({openOnClick: false}),\\n\\n  ],\\n  content: initialContent,\\n  onUpdate: ({editor}) => {\\n    const htmlOutput = editor.getHTML()\\n    emits('updateContent', htmlOutput)\\n  },\\n})\\n\\n\\nconst hasFocused = ref(false) // State to track if the editor has been focused\\n\\nconst focusEditor = (event) => {\\n  if (!hasFocused.value) {\\n    if (!props.description) {\\n      // Clear the editor the first time it's focused\\n      editor.value.commands.clearContent()\\n    }\\n    hasFocused.value = true\\n  }\\n  editor.value.commands.focus()\\n}\\nconst toggleBold = () => {\\n  editor.value.chain().focus().toggleBold().run()\\n}\\n\\nconst toggleItalic = () => {\\n  editor.value.chain().focus().toggleItalic().run()\\n}\\n\\nconst toggleUnderline = () => {\\n  editor.value.chain().focus().toggleUnderline().run()\\n}\\n\\nconst toggleSuperscript = () => {\\n  editor.value.chain().focus().toggleSuperscript().run()\\n}\\n\\nconst toggleSubscript = () => {\\n  editor.value.chain().focus().toggleSubscript().run()\\n}\\n\\n\\n// const submitDescription = () => {\\n//   if (editor) {\\n//     const htmlOutput = editor.getHTML();\\n//     // Emit or use an API call to send `htmlOutput` to your backend\\n//     console.log(htmlOutput);\\n//     // Example: emit to parent component or handle form submission\\n//     emit('update:description', htmlOutput);\\n//   }\\n// }\\n\\nonMounted(() => {\\n  // Ensure the editor is focused when needed and adjusts height accordingly\\n  editor.value?.commands.focus()\\n  adjustHeight()\\n  const editorElement = document.querySelector('.ProseMirror')  // Adjust the selector as needed\\n\\n})\\n\\nconst adjustHeight = () => {\\n  const content = editor.value.view.dom // Access the editor's content DOM node\\n  if (content) {\\n    content.style.minHeight = 'auto' // Reset minHeight to calculate potentially smaller size\\n    content.style.minHeight = `${Math.max(content.scrollHeight, 150)}px` // Set minHeight based on content or minimum\\n  }\\n}\\n\\n// Add this as a handler for content updates\\neditor.value?.on('update', adjustHeight)\\n\\n// Ensure editor is destroyed properly on component unmount\\nonBeforeUnmount(() => {\\n  if (editor.value) {\\n    editor.value.destroy()\\n  }\\n})\\n\\n</script>\\n<style scoped>\\n.toolbar {\\n  display: flex;\\n  gap: 8px;\\n}\\n\\n.btn {\\n  background-color: #4a5568;\\n  color: white;\\n  padding: 8px 12px;\\n  border: none;\\n  border-radius: 4px;\\n  cursor: pointer;\\n}\\n\\n.btn:hover {\\n  background-color: #2d3748;\\n}\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".status-1[data-v-412b2ae9]{color:green}.status-2[data-v-412b2ae9]{color:blue}.status-3[data-v-412b2ae9]{color:purple}.status-4[data-v-412b2ae9]{color:orange}.status-5[data-v-412b2ae9]{color:red}.status-6[data-v-412b2ae9]{color:#a9a9a9;font-style:italic}.status-7[data-v-412b2ae9],.status-8[data-v-412b2ae9]{color:#000;font-style:italic}.status-10[data-v-412b2ae9],.status-9[data-v-412b2ae9]{color:red;font-style:italic}.status-11[data-v-412b2ae9]{color:#a9a9a9}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/Pages/Shows/Create.vue\"],\"names\":[],\"mappings\":\"AA8YA,2BACE,WACF,CAEA,2BACE,UACF,CAEA,2BACE,YACF,CAEA,2BACE,YACF,CAEA,2BACE,SACF,CAEA,2BACE,aAAe,CACf,iBACF,CAOA,sDAJE,UAAY,CACZ,iBAMF,CAOA,uDAJE,SAAU,CACV,iBAMF,CAEA,4BACE,aACF\",\"sourcesContent\":[\"<template>\\n  <Head title=\\\"Create Show\\\"/>\\n\\n  <div class=\\\"place-self-center flex flex-col gap-y-3\\\">\\n    <div id=\\\"topDiv\\\" class=\\\"bg-white text-black dark:bg-gray-800 dark:text-gray-50 p-5 mb-10\\\">\\n\\n      <Message v-if=\\\"appSettingStore.showFlashMessage\\\" :flash=\\\"$page.props.flash\\\"/>\\n\\n      <div class=\\\"flex justify-between mt-3 mb-6\\\">\\n        <div class=\\\"text-3xl\\\">Create Show</div>\\n        <div>\\n          <CancelButton/>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"bg-orange-700 text-white w-full p-6\\\"><span class=\\\"font-bold\\\">NOTE: </span>\\n        We are working on an episode poster and video uploader for this page. For the time being, please\\n        go to the show <span class=\\\"font-bold\\\">EDIT</span> page after you create the show to add a video and a poster.\\n      </div>\\n\\n      <form @submit.prevent=\\\"submit\\\" class=\\\"max-w-md mx-auto mt-8\\\">\\n        <div class=\\\"mb-6\\\">\\n          <label class=\\\"block mb-2 uppercase font-bold text-xs dark:text-gray-200\\\"\\n                 for=\\\"team\\\"\\n          >\\n            Team\\n          </label>\\n          <select\\n              class=\\\"border border-gray-400 p-2 w-full rounded-lg block mb-2 uppercase font-bold text-xs text-gray-800\\\"\\n              v-model=\\\"selectedTeamId\\\"\\n              required\\n          >\\n            <option disabled value=\\\"\\\">Select Team</option>\\n            <option\\n                v-for=\\\"team in props.teams\\\"\\n                :key=\\\"team.id\\\"\\n                :value=\\\"team.id\\\"\\n                class=\\\"bg-white text-black border-b dark:text-gray-50 dark:bg-gray-800 dark:border-gray-600\\\"\\n                :class=\\\"'status-' + team.status.id\\\"\\n            >\\n              {{ team.name }} ({{ team.status.status }})\\n            </option>\\n\\n          </select>\\n\\n\\n          <div v-if=\\\"form.errors.team_id\\\" v-text=\\\"form.errors.team_id\\\" class=\\\"text-xs text-red-600 mt-1\\\"></div>\\n        </div>\\n\\n        <div class=\\\"mb-6 border-2 p-3\\\">\\n          <label class=\\\"block mb-2 uppercase font-bold dark:text-gray-200\\\"\\n                 for=\\\"show_runner_creator_id\\\"\\n          >\\n            Show Runner <span class=\\\"text-red-500\\\">* REQUIRED</span>\\n          </label>\\n          <select\\n              class=\\\"border border-gray-400 p-2 w-full rounded-lg block mb-2 uppercase font-bold text-xs text-gray-800\\\"\\n              v-model=\\\"selectedShowRunnerCreatorId\\\"\\n              required\\n          >\\n            <option disabled value=\\\"\\\">Select Show Runner</option>\\n            <option\\n                v-for=\\\"member in teamMembers\\\"\\n                :key=\\\"member.creator_id\\\"\\n                :value=\\\"member.creator_id\\\"\\n                class=\\\"bg-white text-black border-b dark:text-gray-50 dark:bg-gray-800 dark:border-gray-600\\\"\\n            >\\n              {{ member.name }}\\n            </option>\\n          </select>\\n\\n          <!-- Button to toggle the explanation -->\\n          <button @click.prevent=\\\"toggleShowRunnerInfo\\\"\\n                  class=\\\"btn mt-2 bg-blue-500 hover:bg-blue-700 text-white font-bold uppercase text-xs\\\">\\n            👉 Who is a Show Runner?\\n          </button>\\n\\n          <!-- Conditional rendering of the show runner explanation -->\\n          <div v-if=\\\"showRunnerInfoVisible\\\" class=\\\"mt-2 text-gray-800 dark:text-gray-200\\\">\\n            <div class=\\\"mb-2\\\">\\n              <strong>Show Runner:</strong> The chief architect behind a show, responsible for overseeing every element\\n              of production. Comparable to an event planner, but for new media production, the show runner handles the\\n              creative vision and daily operations, ensuring the show’s vision is realized through managing everything\\n              from scriptwriting to final edits. They lead the production team, make critical decisions on content and\\n              direction, and maintain the show's consistency and quality across episodes.\\n            </div>\\n            <div>\\n              <div class=\\\"mt-2 text-gray-800 dark:text-gray-200\\\">\\n                <h3 class=\\\"font-bold\\\">Show Runner for Informal and Community-Driven Productions:</h3>\\n                <p class=\\\"mt-1\\\">\\n                  A show runner in informal settings acts much like an event coordinator, emphasizing flexibility and\\n                  audience engagement. They adapt quickly to live interactions and maintain the creative vision,\\n                  ensuring the production is engaging and cohesive. Key responsibilities include:\\n                </p>\\n                <ul class=\\\"list-disc pl-5 mt-1\\\">\\n                  <li>Adjusting plans on-the-fly in response to audience dynamics and unscripted moments.</li>\\n                  <li>Integrating audience feedback in real-time to guide the show’s direction.</li>\\n                  <li>Managing schedules and coordinating with participants, akin to event planning.</li>\\n                  <li>Maintaining the show's tone and style to align with overarching goals.</li>\\n                  <li>Leading the production team effectively in dynamic, less controlled environments.</li>\\n                </ul>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div v-if=\\\"form.errors.show_runner_creator_id\\\" v-text=\\\"form.errors.show_runner_creator_id\\\"\\n               class=\\\"text-xs text-red-600 mt-1\\\"></div>\\n        </div>\\n\\n        <div class=\\\"mb-6\\\">\\n          <label class=\\\"block mb-2 uppercase font-bold dark:text-gray-200\\\"\\n                 for=\\\"name\\\"\\n          >\\n            Show Name <span class=\\\"text-red-500\\\">* REQUIRED</span>\\n          </label>\\n\\n          <input v-model=\\\"form.name\\\"\\n                 class=\\\"bg-gray-50 border border-gray-400 text-gray-900 text-sm p-2 w-full rounded-lg focus:ring-blue-500 focus:border-blue-500\\\"\\n                 type=\\\"text\\\"\\n                 name=\\\"name\\\"\\n                 id=\\\"name\\\"\\n                 required\\n                 placeholder=\\\"Show Name\\\"\\n          >\\n          <div v-if=\\\"form.errors.name\\\" v-text=\\\"form.errors.name\\\" class=\\\"text-xs text-red-600 mt-1\\\"></div>\\n        </div>\\n\\n        <div class=\\\"mb-6\\\">\\n          <label class=\\\"block mb-2 uppercase font-bold dark:text-gray-200\\\"\\n                 for=\\\"category\\\"\\n          >\\n            Category <span class=\\\"text-red-500\\\">* REQUIRED</span>\\n          </label>\\n\\n\\n          <select\\n              class=\\\"border border-gray-400 text-gray-800 p-2 w-full rounded-lg block mb-2 uppercase font-bold text-xs \\\"\\n              v-model=\\\"selectedCategoryId\\\" @change=\\\"chooseCategory\\\"\\n          >\\n            <option disabled :value=\\\"null\\\">Choose a category...</option>\\n            <option v-for=\\\"category in categories\\\"\\n                    :key=\\\"category.id\\\" :value=\\\"category.id\\\">{{ category.name }}\\n            </option>\\n\\n          </select>\\n          <div v-if=\\\"form.errors.category\\\" v-text=\\\"form.errors.category\\\"\\n               class=\\\"text-xs text-red-600 mt-1\\\"></div>\\n\\n          <span class=\\\"\\\">{{ showStore.category_description }}</span>\\n        </div>\\n\\n        <div class=\\\"mb-6\\\">\\n          <label class=\\\"block mb-1 uppercase font-bold dark:text-gray-200\\\"\\n                 for=\\\"sub_category\\\"\\n          >\\n            Sub-category\\n          </label>\\n\\n          <select\\n              class=\\\"border border-gray-400 text-gray-800 disabled:bg-gray-300 dark:disabled:bg-gray-600 disabled:cursor-not-allowed p-2 w-full rounded-lg block mb-2 uppercase font-bold text-xs\\\"\\n              v-model=\\\"selectedSubCategoryId\\\" @change=\\\"chooseSubCategory\\\"\\n          >\\n            <option v-if=\\\"!selectedCategoryId\\\" disabled :value=\\\"null\\\">Choose a category first</option>\\n            <option v-else disabled :value=\\\"null\\\">Choose a subcategory...</option>\\n            <option v-for=\\\"subCategory in subCategories\\\" :key=\\\"subCategory.id\\\" :value=\\\"subCategory.id\\\">\\n              {{ subCategory?.name }}\\n            </option>\\n          </select>\\n          <span class=\\\"\\\">{{ showStore.sub_category_description }}</span>\\n          <div v-if=\\\"form.errors.sub_category\\\" v-text=\\\"form.errors.sub_category\\\"\\n               class=\\\"text-xs text-red-600 mt-1\\\"></div>\\n        </div>\\n\\n        <div class=\\\"mb-6\\\">\\n          <label class=\\\"block mb-2 uppercase font-bold dark:text-gray-200\\\"\\n                 for=\\\"description\\\"\\n          >\\n            Description <span class=\\\"text-red-500\\\">* REQUIRED</span>\\n          </label>\\n          <tip-tap-description-editor @updateContent=\\\"handleContentUpdate\\\" />\\n\\n          <div v-if=\\\"form.errors.description\\\" v-text=\\\"form.errors.description\\\" class=\\\"text-xs text-red-600 mt-1\\\"></div>\\n        </div>\\n\\n        <SocialMediaLinksStoreUpdateForForm v-model:form=\\\"form\\\"/>\\n\\n        <div class=\\\"mb-6\\\">\\n          <label class=\\\"block mb-2 uppercase font-bold text-xs dark:text-gray-200\\\"\\n                 for=\\\"notes\\\"\\n          >\\n            Notes (Only your team members see these notes, they are not public)\\n          </label>\\n          <textarea v-model=\\\"form.notes\\\"\\n                    class=\\\"bg-gray-50 border border-gray-400 text-gray-900 text-sm p-2 w-full rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\\\"\\n                    type=\\\"text\\\"\\n                    name=\\\"notes\\\"\\n                    id=\\\"notes\\\"\\n          ></textarea>\\n          <div v-if=\\\"form.errors.notes\\\" v-text=\\\"form.errors.notes\\\" class=\\\"text-xs text-red-600 mt-1\\\"></div>\\n        </div>\\n\\n        <input v-model=\\\"form.user_id\\\" hidden>\\n        <div class=\\\"flex justify-between mb-6\\\">\\n          <JetValidationErrors class=\\\"mr-4\\\"/>\\n          <button\\n              type=\\\"submit\\\"\\n              class=\\\"h-fit bg-blue-600 hover:bg-blue-500 text-white rounded py-2 px-4\\\"\\n              :disabled=\\\"form.processing\\\"\\n          >\\n            Submit\\n          </button>\\n        </div>\\n\\n      </form>\\n\\n      <CheckboxNotification/>\\n\\n    </div>\\n  </div>\\n</template>\\n\\n<script setup>\\nimport { computed, onMounted, ref, watch } from 'vue'\\nimport { useForm } from '@inertiajs/vue3'\\nimport { usePageSetup } from '@/Utilities/PageSetup'\\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\\nimport { useNotificationStore } from '@/Stores/NotificationStore'\\nimport { useTeamStore } from '@/Stores/TeamStore'\\nimport { useShowStore } from '@/Stores/ShowStore'\\nimport JetValidationErrors from '@/Jetstream/ValidationErrors'\\nimport CheckboxNotification from '@/Components/Global/Modals/CheckboxNotification'\\nimport CancelButton from '@/Components/Global/Buttons/CancelButton'\\nimport Message from '@/Components/Global/Modals/Messages'\\nimport SocialMediaLinksStoreUpdateForForm from '@/Components/Global/SocialMedia/SocialMediaLinksStoreUpdateForForm.vue'\\nimport TipTapDescriptionEditor from '@/Components/Global/TextEditor/TipTapDescriptionEditor.vue'\\n\\nusePageSetup('showsCreate')\\n\\nconst appSettingStore = useAppSettingStore()\\nconst notificationStore = useNotificationStore()\\nconst teamStore = useTeamStore()\\nconst showStore = useShowStore()\\n\\nlet props = defineProps({\\n  teams: Object,\\n  userId: Number,\\n  creatorId: Number,\\n  categories: Object,\\n})\\n\\nlet selectedCategoryId = ref(null)\\nlet selectedSubCategoryId = ref(null)\\n\\nconst subCategories = computed(() => {\\n  const category = props.categories.find(cat => cat.id === selectedCategoryId.value)\\n  return category ? category.sub_categories : []\\n})\\n\\n// Watchers to update the store based on category and subcategory selections\\nwatch(selectedCategoryId, () => {\\n  showStore.initializeDescriptions(selectedCategoryId.value, selectedSubCategoryId.value)\\n}, {immediate: true})\\n\\nwatch(selectedSubCategoryId, () => {\\n  showStore.updateSubCategoryDescription(selectedSubCategoryId.value)\\n})\\n\\nonMounted(() => {\\n  selectedShowRunnerCreatorId.value = defaultShowRunnerId.value\\n  showStore.categories = props.categories\\n  showStore.initializeDescriptions(selectedCategoryId.value, selectedSubCategoryId.value)\\n  selectedTeamId.value = defaultTeamId.value\\n})\\n\\nconst defaultTeamId = computed(() => {\\n  return teamStore.id || (props.teams.length > 0 ? props.teams[0].id : null)\\n})\\n\\nconst defaultShowRunnerId = computed(() => {\\n  return props.creatorId\\n})\\n\\n// Reactive property for the selected team ID\\nconst selectedTeamId = ref(null)\\n\\n// Reactive property for the selected show_runner ID\\nconst selectedShowRunnerCreatorId = ref(null)\\n\\n// Watcher to update the teamStore.id when selectedTeamId changes\\nwatch(selectedTeamId, (newId) => {\\n  teamStore.id = newId\\n})\\n\\nconst chooseCategory = () => {\\n  // Update the selected category ID based on the new selection\\n  // Vue automatically updates selectedCategoryId due to v-model binding\\n  // So, there is no need to manually set it here\\n\\n  // Call the store method to update descriptions and subcategories\\n  showStore.initializeDescriptions(selectedCategoryId.value, selectedSubCategoryId.value)\\n}\\n\\nconst chooseSubCategory = () => {\\n  // Update the store state based on the new subcategory selection\\n  showStore.updateSubCategoryDescription(selectedSubCategoryId.value)\\n}\\n\\n// fetch Team Members\\nconst teamMembers = ref([]) // Store team members locally in the component\\n\\n// Fetch team members when the selected team changes\\nconst fetchTeamMembers = async () => {\\n  if (defaultTeamId.value) {\\n    try {\\n      const response = await axios.post(`/api/fetch-team-members`, {teamId: defaultTeamId.value})\\n      teamMembers.value = response.data\\n    } catch (error) {\\n      console.error('Error fetching team members:', error)\\n    }\\n  }\\n}\\n\\nconst showRunnerInfoVisible = ref(false)\\n\\nconst toggleShowRunnerInfo = () => {\\n  showRunnerInfoVisible.value = !showRunnerInfoVisible.value\\n}\\n\\n// Use watch to react to changes in defaultTeamId computed property\\nwatch(defaultTeamId, fetchTeamMembers, {immediate: true}) // immediate: true to run on mount\\n\\nconst description = ref('')\\n\\nconst handleContentUpdate = (html) => {\\n  description.value = html\\n}\\n\\n\\n\\nlet form = useForm({\\n  name: '',\\n  description: '',\\n  user_id: props.userId,\\n  team_id: defaultTeamId.value,\\n  category: '',\\n  sub_category: '',\\n  www_url: '',\\n  instagram_name: '',\\n  telegram_url: '',\\n  twitter_handle: '',\\n  notes: '',\\n  show_runner_creator_id: '',\\n})\\n\\nlet showCategoryDescription = ref(null)\\n\\nconst checkForTeams = () => {\\n  if (props.teams.length === 0) {\\n    // Perform some actions if data array is empty\\n    console.log('No teams available.')\\n    notificationStore.active = true\\n    notificationStore.title = 'No teams available.'\\n    notificationStore.body = 'Please create a team before you create a show.'\\n    notificationStore.buttonLabel = 'OKAY'\\n    notificationStore.onClickAction = 'redirect'\\n    notificationStore.uri = '/shows/create'\\n    notificationStore.redirectPageUri = '/teams/create'\\n    // Additional logic for empty array\\n  } else {\\n    // Do nothing if data array is not empty\\n    console.log('Teams are available.')\\n  }\\n}\\n\\nonMounted(() => {\\n  checkForTeams()\\n})\\n\\nlet submit = () => {\\n  form.description = description.value\\n  form.category = showStore.category_id\\n  form.sub_category = showStore.sub_category_id\\n  form.team_id = selectedTeamId\\n  form.show_runner_creator_id = selectedShowRunnerCreatorId\\n  form.post('/shows')\\n}\\n\\n// function chooseCategory(event) {\\n//   showCategoryDescription = props.categories[event.target.selectedIndex].description\\n// }\\n\\nfunction reset() {\\n  form.reset()\\n}\\n\\n</script>\\n\\n<style scoped>\\n.status-1 {\\n  color: green; /* Example color for status ID 1 */\\n}\\n\\n.status-2 {\\n  color: blue; /* Example color for status ID 2 */\\n}\\n\\n.status-3 {\\n  color: purple; /* Example color for status ID 3 */\\n}\\n\\n.status-4 {\\n  color: orange; /* Example color for status ID 4 */\\n}\\n\\n.status-5 {\\n  color: red; /* Example color for status ID 4 */\\n}\\n\\n.status-6 {\\n  color: darkgray; /* Example color for status ID 4 */\\n  font-style: italic;\\n}\\n\\n.status-7 {\\n  color: black; /* Example color for status ID 4 */\\n  font-style: italic;\\n}\\n\\n.status-8 {\\n  color: black; /* Example color for status ID 4 */\\n  font-style: italic;\\n}\\n\\n.status-9 {\\n  color: red; /* Example color for status ID 4 */\\n  font-style: italic;\\n}\\n\\n.status-10 {\\n  color: red; /* Example color for status ID 4 */\\n  font-style: italic;\\n}\\n\\n.status-11 {\\n  color: darkgray; /* Example color for status ID 4 */\\n}\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import script from \"./CancelButton.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CancelButton.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n    <button\n        @click.prevent=\"cancel\"\n        class=\"ml-2 px-4 py-2 text-white bg-orange-600 hover:bg-orange-500 rounded-lg\"\n    >Cancel\n    </button>\n  </div>\n</template>\n\n<script setup>\nimport { router } from '@inertiajs/vue3'\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useUserStore } from '@/Stores/UserStore'\n\nconst appSettingStore = useAppSettingStore()\nconst userStore = useUserStore()\n\nlet props = defineProps({\n  url: String\n})\n\nfunction cancel() {\n  if (appSettingStore.prevUrl) {\n    if (props.url) {\n      router.visit(props.url)\n    } else {\n      router.visit(appSettingStore.prevUrl)\n    }\n  } else {\n    if (props.url) {\n      router.visit(props.url)\n    } else {\n      // Fallback if prevUrl is not available\n      let prevUrl = userStore.isCreator ? '/dashboard' : '/';\n      router.visit(prevUrl);\n    }\n  }\n}\n</script>\n","import script from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"mx-4 my-4\">\n    <div class=\"alert alert-info mt-4\"\n         v-if=\"props.flash.message\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" class=\"stroke-current shrink-0 w-6 h-6\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n      </svg>\n      <span>{{ props.flash.message }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-success mt-4 mx-3\"\n         v-if=\"props.flash.success\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.success }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-warning mt-4 mx-3\"\n         v-if=\"props.flash.warning\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"/>\n      </svg>\n      <span>{{ props.flash.warning }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-error mt-4 mx-3\"\n         v-if=\"props.flash.error\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.error }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n  </div>\n\n</template>\n\n<script setup>\nimport { router } from '@inertiajs/vue3'\nimport { computed } from \"vue\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\n\nconst appSettingStore = useAppSettingStore()\n\nappSettingStore.showFlashMessage = true\n\nlet props = defineProps({\n  flash: Object,\n\n})\n\nconst messageType = computed(() => ({\n  'text-green-700 bg-green-100 dark:bg-green-200 dark:text-green-800': props.flash.success,\n  'text-blue-700 bg-blue-100 dark:bg-blue-200 dark:text-blue-800': props.flash.message,\n  'text-orange-700 bg-orange-100 dark:bg-orange-200 dark:text-orange-800': props.flash.warning,\n  'text-red-700 bg-red-100 dark:bg-red-200 dark:text-red-800': props.flash.error,\n}))\n\nconst clearFlashMessage = async () => {\n  await router.post(route('flash.clear'));\n  router.reload();\n};\n</script>\n","import script from \"./SocialMediaLinksStoreUpdateForForm.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./SocialMediaLinksStoreUpdateForForm.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n    <div class=\"toolbar mb-2\">\n      <button @click.prevent=\"toggleBold\" class=\"btn\">Bold</button>\n      <button @click.prevent=\"toggleItalic\" class=\"btn\">Italic</button>\n      <button @click.prevent=\"toggleUnderline\" class=\"btn\">Underline</button>\n      <button @click.prevent=\"toggleSuperscript\" class=\"btn\">Superscript</button>\n      <button @click.prevent=\"toggleSubscript\" class=\"btn\">Subscript</button>\n    </div>\n    <div\n        class=\"editor-textarea editor-container bg-gray-50 border border-gray-400 text-gray-900 text-sm w-full rounded-lg focus-within:ring-blue-500 focus-within:border-blue-500\"\n        @click=\"focusEditor\">\n      <EditorContent :editor=\"editor\"/>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { useEditor, EditorContent } from '@tiptap/vue-3'\nimport StarterKit from '@tiptap/starter-kit'\nimport Document from '@tiptap/extension-document'\nimport Text from '@tiptap/extension-text'\nimport TextStyle from '@tiptap/extension-text-style'\nimport FontFamily from '@tiptap/extension-font-family'\nimport Color from '@tiptap/extension-color'\nimport Typography from '@tiptap/extension-typography'\nimport Underline from '@tiptap/extension-underline'\nimport Subscript from '@tiptap/extension-subscript'\nimport Superscript from '@tiptap/extension-superscript'\nimport Link from '@tiptap/extension-link'\nimport { onBeforeUnmount, onMounted, onUnmounted, ref } from 'vue'\n\nconst emits = defineEmits(['updateContent'])\n\nconst props = defineProps({\n  description: String,\n  placeholder: String,\n})\n\nconst initialContent = props.description\n    ? props.description\n    : (props.placeholder ? props.placeholder : '<p>Start typing the description...</p>')\n\nconst editor = useEditor({\n  autofocus: true, // Setting autofocus to true\n  extensions: [\n    StarterKit,\n    Document,\n    Text,\n    TextStyle,\n    FontFamily,\n    Color,\n    Typography,\n    Underline,\n    Subscript,\n    Superscript,\n    Link.configure({openOnClick: false}),\n\n  ],\n  content: initialContent,\n  onUpdate: ({editor}) => {\n    const htmlOutput = editor.getHTML()\n    emits('updateContent', htmlOutput)\n  },\n})\n\n\nconst hasFocused = ref(false) // State to track if the editor has been focused\n\nconst focusEditor = (event) => {\n  if (!hasFocused.value) {\n    if (!props.description) {\n      // Clear the editor the first time it's focused\n      editor.value.commands.clearContent()\n    }\n    hasFocused.value = true\n  }\n  editor.value.commands.focus()\n}\nconst toggleBold = () => {\n  editor.value.chain().focus().toggleBold().run()\n}\n\nconst toggleItalic = () => {\n  editor.value.chain().focus().toggleItalic().run()\n}\n\nconst toggleUnderline = () => {\n  editor.value.chain().focus().toggleUnderline().run()\n}\n\nconst toggleSuperscript = () => {\n  editor.value.chain().focus().toggleSuperscript().run()\n}\n\nconst toggleSubscript = () => {\n  editor.value.chain().focus().toggleSubscript().run()\n}\n\n\n// const submitDescription = () => {\n//   if (editor) {\n//     const htmlOutput = editor.getHTML();\n//     // Emit or use an API call to send `htmlOutput` to your backend\n//     console.log(htmlOutput);\n//     // Example: emit to parent component or handle form submission\n//     emit('update:description', htmlOutput);\n//   }\n// }\n\nonMounted(() => {\n  // Ensure the editor is focused when needed and adjusts height accordingly\n  editor.value?.commands.focus()\n  adjustHeight()\n  const editorElement = document.querySelector('.ProseMirror')  // Adjust the selector as needed\n\n})\n\nconst adjustHeight = () => {\n  const content = editor.value.view.dom // Access the editor's content DOM node\n  if (content) {\n    content.style.minHeight = 'auto' // Reset minHeight to calculate potentially smaller size\n    content.style.minHeight = `${Math.max(content.scrollHeight, 150)}px` // Set minHeight based on content or minimum\n  }\n}\n\n// Add this as a handler for content updates\neditor.value?.on('update', adjustHeight)\n\n// Ensure editor is destroyed properly on component unmount\nonBeforeUnmount(() => {\n  if (editor.value) {\n    editor.value.destroy()\n  }\n})\n\n</script>\n<style scoped>\n.toolbar {\n  display: flex;\n  gap: 8px;\n}\n\n.btn {\n  background-color: #4a5568;\n  color: white;\n  padding: 8px 12px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.btn:hover {\n  background-color: #2d3748;\n}\n</style>\n","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-10.use[1]!../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-10.use[2]!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./TipTapDescriptionEditor.vue?vue&type=style&index=0&id=2044c2a2&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./TipTapDescriptionEditor.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TipTapDescriptionEditor.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./TipTapDescriptionEditor.vue?vue&type=style&index=0&id=2044c2a2&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-2044c2a2\"]])\n\nexport default __exports__","import script from \"./ValidationErrors.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ValidationErrors.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { computed } from 'vue';\nimport { usePage } from '@inertiajs/vue3';\n\nconst errors = computed(() => usePage().props.errors);\nconst hasErrors = computed(() => Object.keys(errors.value).length > 0);\n</script>\n\n<template>\n    <div v-if=\"hasErrors\">\n        <div class=\"font-medium text-red-600\">\n            Whoops! Something went wrong.\n        </div>\n\n        <ul class=\"mt-3 list-disc list-inside text-sm text-red-600\">\n            <li v-for=\"(error, key) in errors\" :key=\"key\">\n                {{ error }}\n            </li>\n        </ul>\n    </div>\n</template>\n","import script from \"./CheckboxNotification.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CheckboxNotification.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <input type=\"checkbox\" id=\"my_modal_6\" class=\"modal-toggle\" v-model=\"notificationStore.active\"/>\n  <div class=\"modal\" role=\"dialog\" v-if=\"notificationStore.active\">\n    <div class=\"modal-box\">\n      <h3 class=\"font-bold text-lg\">{{ notificationStore.title }}</h3>\n      <p class=\"py-4\">{{ notificationStore.body }}</p>\n      <div class=\"modal-action\">\n        <label for=\"my_modal_6\" class=\"btn\" @click=\"modalButtonAction\">{{ notificationStore.buttonLabel }}</label>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue'\nimport { useNotificationStore } from \"@/Stores/NotificationStore\"\n\nconst notificationStore = useNotificationStore()\n\nfunction modalButtonAction() {\n  if (notificationStore.onClickAction === 'redirect') {\n    notificationStore.redirectAndClear()\n  } else if (notificationStore.onClickAction === 'close') {\n    notificationStore.closeAndClear()\n  }\n}\n\n</script>\n","<template>\n  <Head title=\"Create Show\"/>\n\n  <div class=\"place-self-center flex flex-col gap-y-3\">\n    <div id=\"topDiv\" class=\"bg-white text-black dark:bg-gray-800 dark:text-gray-50 p-5 mb-10\">\n\n      <Message v-if=\"appSettingStore.showFlashMessage\" :flash=\"$page.props.flash\"/>\n\n      <div class=\"flex justify-between mt-3 mb-6\">\n        <div class=\"text-3xl\">Create Show</div>\n        <div>\n          <CancelButton/>\n        </div>\n      </div>\n\n      <div class=\"bg-orange-700 text-white w-full p-6\"><span class=\"font-bold\">NOTE: </span>\n        We are working on an episode poster and video uploader for this page. For the time being, please\n        go to the show <span class=\"font-bold\">EDIT</span> page after you create the show to add a video and a poster.\n      </div>\n\n      <form @submit.prevent=\"submit\" class=\"max-w-md mx-auto mt-8\">\n        <div class=\"mb-6\">\n          <label class=\"block mb-2 uppercase font-bold text-xs dark:text-gray-200\"\n                 for=\"team\"\n          >\n            Team\n          </label>\n          <select\n              class=\"border border-gray-400 p-2 w-full rounded-lg block mb-2 uppercase font-bold text-xs text-gray-800\"\n              v-model=\"selectedTeamId\"\n              required\n          >\n            <option disabled value=\"\">Select Team</option>\n            <option\n                v-for=\"team in props.teams\"\n                :key=\"team.id\"\n                :value=\"team.id\"\n                class=\"bg-white text-black border-b dark:text-gray-50 dark:bg-gray-800 dark:border-gray-600\"\n                :class=\"'status-' + team.status.id\"\n            >\n              {{ team.name }} ({{ team.status.status }})\n            </option>\n\n          </select>\n\n\n          <div v-if=\"form.errors.team_id\" v-text=\"form.errors.team_id\" class=\"text-xs text-red-600 mt-1\"></div>\n        </div>\n\n        <div class=\"mb-6 border-2 p-3\">\n          <label class=\"block mb-2 uppercase font-bold dark:text-gray-200\"\n                 for=\"show_runner_creator_id\"\n          >\n            Show Runner <span class=\"text-red-500\">* REQUIRED</span>\n          </label>\n          <select\n              class=\"border border-gray-400 p-2 w-full rounded-lg block mb-2 uppercase font-bold text-xs text-gray-800\"\n              v-model=\"selectedShowRunnerCreatorId\"\n              required\n          >\n            <option disabled value=\"\">Select Show Runner</option>\n            <option\n                v-for=\"member in teamMembers\"\n                :key=\"member.creator_id\"\n                :value=\"member.creator_id\"\n                class=\"bg-white text-black border-b dark:text-gray-50 dark:bg-gray-800 dark:border-gray-600\"\n            >\n              {{ member.name }}\n            </option>\n          </select>\n\n          <!-- Button to toggle the explanation -->\n          <button @click.prevent=\"toggleShowRunnerInfo\"\n                  class=\"btn mt-2 bg-blue-500 hover:bg-blue-700 text-white font-bold uppercase text-xs\">\n            👉 Who is a Show Runner?\n          </button>\n\n          <!-- Conditional rendering of the show runner explanation -->\n          <div v-if=\"showRunnerInfoVisible\" class=\"mt-2 text-gray-800 dark:text-gray-200\">\n            <div class=\"mb-2\">\n              <strong>Show Runner:</strong> The chief architect behind a show, responsible for overseeing every element\n              of production. Comparable to an event planner, but for new media production, the show runner handles the\n              creative vision and daily operations, ensuring the show’s vision is realized through managing everything\n              from scriptwriting to final edits. They lead the production team, make critical decisions on content and\n              direction, and maintain the show's consistency and quality across episodes.\n            </div>\n            <div>\n              <div class=\"mt-2 text-gray-800 dark:text-gray-200\">\n                <h3 class=\"font-bold\">Show Runner for Informal and Community-Driven Productions:</h3>\n                <p class=\"mt-1\">\n                  A show runner in informal settings acts much like an event coordinator, emphasizing flexibility and\n                  audience engagement. They adapt quickly to live interactions and maintain the creative vision,\n                  ensuring the production is engaging and cohesive. Key responsibilities include:\n                </p>\n                <ul class=\"list-disc pl-5 mt-1\">\n                  <li>Adjusting plans on-the-fly in response to audience dynamics and unscripted moments.</li>\n                  <li>Integrating audience feedback in real-time to guide the show’s direction.</li>\n                  <li>Managing schedules and coordinating with participants, akin to event planning.</li>\n                  <li>Maintaining the show's tone and style to align with overarching goals.</li>\n                  <li>Leading the production team effectively in dynamic, less controlled environments.</li>\n                </ul>\n              </div>\n            </div>\n          </div>\n\n          <div v-if=\"form.errors.show_runner_creator_id\" v-text=\"form.errors.show_runner_creator_id\"\n               class=\"text-xs text-red-600 mt-1\"></div>\n        </div>\n\n        <div class=\"mb-6\">\n          <label class=\"block mb-2 uppercase font-bold dark:text-gray-200\"\n                 for=\"name\"\n          >\n            Show Name <span class=\"text-red-500\">* REQUIRED</span>\n          </label>\n\n          <input v-model=\"form.name\"\n                 class=\"bg-gray-50 border border-gray-400 text-gray-900 text-sm p-2 w-full rounded-lg focus:ring-blue-500 focus:border-blue-500\"\n                 type=\"text\"\n                 name=\"name\"\n                 id=\"name\"\n                 required\n                 placeholder=\"Show Name\"\n          >\n          <div v-if=\"form.errors.name\" v-text=\"form.errors.name\" class=\"text-xs text-red-600 mt-1\"></div>\n        </div>\n\n        <div class=\"mb-6\">\n          <label class=\"block mb-2 uppercase font-bold dark:text-gray-200\"\n                 for=\"category\"\n          >\n            Category <span class=\"text-red-500\">* REQUIRED</span>\n          </label>\n\n\n          <select\n              class=\"border border-gray-400 text-gray-800 p-2 w-full rounded-lg block mb-2 uppercase font-bold text-xs \"\n              v-model=\"selectedCategoryId\" @change=\"chooseCategory\"\n          >\n            <option disabled :value=\"null\">Choose a category...</option>\n            <option v-for=\"category in categories\"\n                    :key=\"category.id\" :value=\"category.id\">{{ category.name }}\n            </option>\n\n          </select>\n          <div v-if=\"form.errors.category\" v-text=\"form.errors.category\"\n               class=\"text-xs text-red-600 mt-1\"></div>\n\n          <span class=\"\">{{ showStore.category_description }}</span>\n        </div>\n\n        <div class=\"mb-6\">\n          <label class=\"block mb-1 uppercase font-bold dark:text-gray-200\"\n                 for=\"sub_category\"\n          >\n            Sub-category\n          </label>\n\n          <select\n              class=\"border border-gray-400 text-gray-800 disabled:bg-gray-300 dark:disabled:bg-gray-600 disabled:cursor-not-allowed p-2 w-full rounded-lg block mb-2 uppercase font-bold text-xs\"\n              v-model=\"selectedSubCategoryId\" @change=\"chooseSubCategory\"\n          >\n            <option v-if=\"!selectedCategoryId\" disabled :value=\"null\">Choose a category first</option>\n            <option v-else disabled :value=\"null\">Choose a subcategory...</option>\n            <option v-for=\"subCategory in subCategories\" :key=\"subCategory.id\" :value=\"subCategory.id\">\n              {{ subCategory?.name }}\n            </option>\n          </select>\n          <span class=\"\">{{ showStore.sub_category_description }}</span>\n          <div v-if=\"form.errors.sub_category\" v-text=\"form.errors.sub_category\"\n               class=\"text-xs text-red-600 mt-1\"></div>\n        </div>\n\n        <div class=\"mb-6\">\n          <label class=\"block mb-2 uppercase font-bold dark:text-gray-200\"\n                 for=\"description\"\n          >\n            Description <span class=\"text-red-500\">* REQUIRED</span>\n          </label>\n          <tip-tap-description-editor @updateContent=\"handleContentUpdate\" />\n\n          <div v-if=\"form.errors.description\" v-text=\"form.errors.description\" class=\"text-xs text-red-600 mt-1\"></div>\n        </div>\n\n        <SocialMediaLinksStoreUpdateForForm v-model:form=\"form\"/>\n\n        <div class=\"mb-6\">\n          <label class=\"block mb-2 uppercase font-bold text-xs dark:text-gray-200\"\n                 for=\"notes\"\n          >\n            Notes (Only your team members see these notes, they are not public)\n          </label>\n          <textarea v-model=\"form.notes\"\n                    class=\"bg-gray-50 border border-gray-400 text-gray-900 text-sm p-2 w-full rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\"\n                    type=\"text\"\n                    name=\"notes\"\n                    id=\"notes\"\n          ></textarea>\n          <div v-if=\"form.errors.notes\" v-text=\"form.errors.notes\" class=\"text-xs text-red-600 mt-1\"></div>\n        </div>\n\n        <input v-model=\"form.user_id\" hidden>\n        <div class=\"flex justify-between mb-6\">\n          <JetValidationErrors class=\"mr-4\"/>\n          <button\n              type=\"submit\"\n              class=\"h-fit bg-blue-600 hover:bg-blue-500 text-white rounded py-2 px-4\"\n              :disabled=\"form.processing\"\n          >\n            Submit\n          </button>\n        </div>\n\n      </form>\n\n      <CheckboxNotification/>\n\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { computed, onMounted, ref, watch } from 'vue'\nimport { useForm } from '@inertiajs/vue3'\nimport { usePageSetup } from '@/Utilities/PageSetup'\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\nimport { useNotificationStore } from '@/Stores/NotificationStore'\nimport { useTeamStore } from '@/Stores/TeamStore'\nimport { useShowStore } from '@/Stores/ShowStore'\nimport JetValidationErrors from '@/Jetstream/ValidationErrors'\nimport CheckboxNotification from '@/Components/Global/Modals/CheckboxNotification'\nimport CancelButton from '@/Components/Global/Buttons/CancelButton'\nimport Message from '@/Components/Global/Modals/Messages'\nimport SocialMediaLinksStoreUpdateForForm from '@/Components/Global/SocialMedia/SocialMediaLinksStoreUpdateForForm.vue'\nimport TipTapDescriptionEditor from '@/Components/Global/TextEditor/TipTapDescriptionEditor.vue'\n\nusePageSetup('showsCreate')\n\nconst appSettingStore = useAppSettingStore()\nconst notificationStore = useNotificationStore()\nconst teamStore = useTeamStore()\nconst showStore = useShowStore()\n\nlet props = defineProps({\n  teams: Object,\n  userId: Number,\n  creatorId: Number,\n  categories: Object,\n})\n\nlet selectedCategoryId = ref(null)\nlet selectedSubCategoryId = ref(null)\n\nconst subCategories = computed(() => {\n  const category = props.categories.find(cat => cat.id === selectedCategoryId.value)\n  return category ? category.sub_categories : []\n})\n\n// Watchers to update the store based on category and subcategory selections\nwatch(selectedCategoryId, () => {\n  showStore.initializeDescriptions(selectedCategoryId.value, selectedSubCategoryId.value)\n}, {immediate: true})\n\nwatch(selectedSubCategoryId, () => {\n  showStore.updateSubCategoryDescription(selectedSubCategoryId.value)\n})\n\nonMounted(() => {\n  selectedShowRunnerCreatorId.value = defaultShowRunnerId.value\n  showStore.categories = props.categories\n  showStore.initializeDescriptions(selectedCategoryId.value, selectedSubCategoryId.value)\n  selectedTeamId.value = defaultTeamId.value\n})\n\nconst defaultTeamId = computed(() => {\n  return teamStore.id || (props.teams.length > 0 ? props.teams[0].id : null)\n})\n\nconst defaultShowRunnerId = computed(() => {\n  return props.creatorId\n})\n\n// Reactive property for the selected team ID\nconst selectedTeamId = ref(null)\n\n// Reactive property for the selected show_runner ID\nconst selectedShowRunnerCreatorId = ref(null)\n\n// Watcher to update the teamStore.id when selectedTeamId changes\nwatch(selectedTeamId, (newId) => {\n  teamStore.id = newId\n})\n\nconst chooseCategory = () => {\n  // Update the selected category ID based on the new selection\n  // Vue automatically updates selectedCategoryId due to v-model binding\n  // So, there is no need to manually set it here\n\n  // Call the store method to update descriptions and subcategories\n  showStore.initializeDescriptions(selectedCategoryId.value, selectedSubCategoryId.value)\n}\n\nconst chooseSubCategory = () => {\n  // Update the store state based on the new subcategory selection\n  showStore.updateSubCategoryDescription(selectedSubCategoryId.value)\n}\n\n// fetch Team Members\nconst teamMembers = ref([]) // Store team members locally in the component\n\n// Fetch team members when the selected team changes\nconst fetchTeamMembers = async () => {\n  if (defaultTeamId.value) {\n    try {\n      const response = await axios.post(`/api/fetch-team-members`, {teamId: defaultTeamId.value})\n      teamMembers.value = response.data\n    } catch (error) {\n      console.error('Error fetching team members:', error)\n    }\n  }\n}\n\nconst showRunnerInfoVisible = ref(false)\n\nconst toggleShowRunnerInfo = () => {\n  showRunnerInfoVisible.value = !showRunnerInfoVisible.value\n}\n\n// Use watch to react to changes in defaultTeamId computed property\nwatch(defaultTeamId, fetchTeamMembers, {immediate: true}) // immediate: true to run on mount\n\nconst description = ref('')\n\nconst handleContentUpdate = (html) => {\n  description.value = html\n}\n\n\n\nlet form = useForm({\n  name: '',\n  description: '',\n  user_id: props.userId,\n  team_id: defaultTeamId.value,\n  category: '',\n  sub_category: '',\n  www_url: '',\n  instagram_name: '',\n  telegram_url: '',\n  twitter_handle: '',\n  notes: '',\n  show_runner_creator_id: '',\n})\n\nlet showCategoryDescription = ref(null)\n\nconst checkForTeams = () => {\n  if (props.teams.length === 0) {\n    // Perform some actions if data array is empty\n    console.log('No teams available.')\n    notificationStore.active = true\n    notificationStore.title = 'No teams available.'\n    notificationStore.body = 'Please create a team before you create a show.'\n    notificationStore.buttonLabel = 'OKAY'\n    notificationStore.onClickAction = 'redirect'\n    notificationStore.uri = '/shows/create'\n    notificationStore.redirectPageUri = '/teams/create'\n    // Additional logic for empty array\n  } else {\n    // Do nothing if data array is not empty\n    console.log('Teams are available.')\n  }\n}\n\nonMounted(() => {\n  checkForTeams()\n})\n\nlet submit = () => {\n  form.description = description.value\n  form.category = showStore.category_id\n  form.sub_category = showStore.sub_category_id\n  form.team_id = selectedTeamId\n  form.show_runner_creator_id = selectedShowRunnerCreatorId\n  form.post('/shows')\n}\n\n// function chooseCategory(event) {\n//   showCategoryDescription = props.categories[event.target.selectedIndex].description\n// }\n\nfunction reset() {\n  form.reset()\n}\n\n</script>\n\n<style scoped>\n.status-1 {\n  color: green; /* Example color for status ID 1 */\n}\n\n.status-2 {\n  color: blue; /* Example color for status ID 2 */\n}\n\n.status-3 {\n  color: purple; /* Example color for status ID 3 */\n}\n\n.status-4 {\n  color: orange; /* Example color for status ID 4 */\n}\n\n.status-5 {\n  color: red; /* Example color for status ID 4 */\n}\n\n.status-6 {\n  color: darkgray; /* Example color for status ID 4 */\n  font-style: italic;\n}\n\n.status-7 {\n  color: black; /* Example color for status ID 4 */\n  font-style: italic;\n}\n\n.status-8 {\n  color: black; /* Example color for status ID 4 */\n  font-style: italic;\n}\n\n.status-9 {\n  color: red; /* Example color for status ID 4 */\n  font-style: italic;\n}\n\n.status-10 {\n  color: red; /* Example color for status ID 4 */\n  font-style: italic;\n}\n\n.status-11 {\n  color: darkgray; /* Example color for status ID 4 */\n}\n</style>\n","import api from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-10.use[1]!../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-10.use[2]!../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./Create.vue?vue&type=style&index=0&id=412b2ae9&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./Create.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Create.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Create.vue?vue&type=style&index=0&id=412b2ae9&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-412b2ae9\"]])\n\nexport default __exports__"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","initialState","id","description","slug","totalSpots","memberSpots","teamCreator","teamLeader","members","managers","activeShow","activeEpisode","creators","showModal","Boolean","confirmDialog","confirmManagerDialog","selectedManagerName","selectedManagerId","addManager","removeManager","deleteMemberName","deleteMemberId","noteEdit","note","saveNoteProcessing","goLiveDisplay","can","openComponent","useTeamStore","defineStore","state","actions","assign","this","setActiveTeam","team","setActiveShow","show","setActiveEpisode","episode","addMember","member","removeMember","memberId","filter","updateCreatorTeams","creatorId","teamId","remove","creator","find","teams","is_manager","deleteTeamMemberCancel","confirmTeamManagerCancel","deleteTeamMember","_this","_callee","notificationStore","payload","response","_context","useNotificationStore","user_id","team_id","axios","post","route","status","setToastNotification","data","message","t0","console","addTeamManager","router","visit","team_slug","removeTeamManager","toggleGoLiveDisplay","fetchTeamMembers","_callee2","_context2","get","setCreators","getters","spotsRemaining","Math","max","membersCount","usePageSetup","pageName","userStore","useUserStore","appSettingStore","useAppSettingStore","videoPlayerStore","useVideoPlayerStore","currentPage","showFlashMessage","pageIsHidden","isMobile","window","innerWidth","fullPage","ott","showOttButtons","makeVideoTopRight","pageReload","pageWasReloaded","location","reload","on","event","search","shouldScrollToTop","requestAnimationFrame","topDiv","document","getElementById","scrollIntoView","behavior","scrollTo","setPrevUrl","noLayout","___CSS_LOADER_EXPORT___","module","props","__props","cancel","prevUrl","url","isCreator","clearFlashMessage","computed","flash","success","warning","_ref","emits","initialContent","placeholder","editor","useEditor","autofocus","extensions","StarterKit","Document","Text","TextStyle","FontFamily","Color","Typography","Underline","Subscript","Superscript","Link","configure","openOnClick","content","onUpdate","_ref2","htmlOutput","getHTML","hasFocused","ref","focusEditor","commands","clearContent","focus","toggleBold","chain","run","toggleItalic","toggleUnderline","toggleSuperscript","toggleSubscript","onMounted","_editor$value","adjustHeight","querySelector","view","dom","style","minHeight","concat","scrollHeight","_editor$value2","onBeforeUnmount","destroy","options","locals","errors","usePage","hasErrors","modalButtonAction","onClickAction","redirectAndClear","closeAndClear","teamStore","showStore","useShowStore","selectedCategoryId","selectedSubCategoryId","subCategories","category","categories","cat","sub_categories","watch","initializeDescriptions","immediate","updateSubCategoryDescription","selectedShowRunnerCreatorId","defaultShowRunnerId","selectedTeamId","defaultTeamId","newId","chooseCategory","chooseSubCategory","teamMembers","showRunnerInfoVisible","toggleShowRunnerInfo","handleContentUpdate","html","form","useForm","userId","sub_category","www_url","instagram_name","telegram_url","twitter_handle","notes","show_runner_creator_id","log","active","title","body","buttonLabel","uri","redirectPageUri","submit","category_id","sub_category_id"],"sourceRoot":""}
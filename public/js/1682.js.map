{"version":3,"file":"js/1682.js","mappings":";uUACA,gjNACO,IAAIA,GAAeC,UAAAA,IAAY,YAAa,CAC/CC,MAAO,iBAAO,CACVC,GAAI,EACJC,KAAM,GACNC,YAAa,EACbC,gBAAiB,EACjBC,qBAAsB,GACtBC,eAAgB,GAChBC,YAAa,GACbC,WAAY,GACZC,SAAU,CAAC,GACXC,SAAU,GACVC,QAAS,UACTC,cAAe,GACfC,SAAU,EACVC,KAAM,GACNC,mBAAoBC,QAEvB,EAEDC,QAAS,CACCC,KAAI,WAAG,IAtBrB,EAsBqB,cAtBrB,EAsBqB,8GACK,oCAA0B,OAApCC,EAAI,EAAH,KACL,EAAKC,OAASD,EAAC,QAAS,0CAxBpC,gLAyBQ,GAGJE,QAAS,CACL,sFCzBR,oHCSA,SAASC,EAAWC,GAChB,IAAIC,EAAWD,EAAEE,OAGbC,EAAMF,EAASG,MACfC,EAAQJ,EAASK,eACjBC,EAAMN,EAASO,aAGnBP,EAASG,MAAQD,EAAIM,UAAU,EAAGJ,GAAS,KAAOF,EAAIM,UAAUF,GAGhEN,EAASK,eAAiBL,EAASO,aAAeH,EAAQ,CAC9D,s2BCtBA,6ECiCA,SAASK,IACLC,OAAOC,QAAQF,MACnB,0gICnCA,0NC4SIG,GAAmBC,EAAAA,EAAAA,KACnBC,GAAYC,EAAAA,EAAAA,KACZC,GAAY1C,EAAAA,EAAAA,KACZ2C,GAAYC,EAAAA,EAAAA,KAEhBN,EAAiBO,YAAc,SAE/BC,EAAAA,EAAAA,gBAAc,WACVH,EAAUI,mBAAqB,CACnC,KAEAC,EAAAA,EAAAA,YAAU,WACNV,EAAiBW,oBACoB,IAAjCN,EAAUI,qBACVG,SAASC,eAAe,UAAUC,iBAClCT,EAAUI,qBAGlB,IAcA,IAAIM,EAA0BC,EAAMD,wBAMpC,IAAME,EAAWC,IACbC,IACAC,IACAC,IACAC,KASJ,SAASC,IACLC,QAAQC,IAAI,sBACZD,QAAQC,IAAI,mBAAoBR,EACpC,CAEA,SAASS,EAAoBC,EAAOC,GAChC,GAAID,EAIA,OAHAH,QAAQC,IAAI,2BACZD,QAAQC,IAAIE,QACZH,QAAQC,IAAIG,GAIhBC,EAAAA,QAAAA,OAAe,CACXC,KAAM,CAAC,WAGf,CAEA5B,EAAU6B,cAAcf,EAAMgB,MAC9B9B,EAAU+B,cAAcjB,EAAMkB,MAC9B9B,EAAUhC,WAAa4C,EAAMmB,OAAO,GAAGrE,KAEvC,IAAIsE,GAAOC,EAAAA,EAAAA,IAAQ,CACfvE,KAAMkD,EAAMkB,KAAKpE,KACjBK,YAAa6C,EAAMkB,KAAK/D,YACxBmE,SAAUtB,EAAMuB,eAChBC,aAAcxB,EAAMkB,KAAKM,aACzBC,QAASzB,EAAMkB,KAAKO,QACpBC,eAAgB1B,EAAMkB,KAAKQ,eAC3BC,aAAc3B,EAAMkB,KAAKS,aACzBC,eAAgB5B,EAAMkB,KAAKU,eAC3BC,MAAO7B,EAAMkB,KAAKW,QASlBC,EAAS,WACTV,EAAKW,IAAIC,MAAM,eAAgBhC,EAAMkB,KAAKe,MAC9C,stGA5DwBC,SACpBnC,EAA0BC,EAAMmC,WAAWD,EAAM7D,OAAO+D,eAAejF,aAD3E,IAAwB+E","sources":["webpack:///./resources/js/Stores/ShowStore.js","webpack:///./resources/js/Components/TabbableTextarea.vue?5ddb","webpack:///./resources/js/Components/TabbableTextarea.vue","webpack:///./resources/js/Components/Shows/Edit/ShowEditHeader.vue?3401","webpack:///./resources/js/Components/Shows/Edit/ShowEditHeader.vue","webpack:///./resources/js/Pages/Shows/{$id}/Edit.vue?14a6","webpack:///./resources/js/Pages/Shows/{$id}/Edit.vue"],"sourcesContent":["import { defineStore } from \"pinia\";\n\nexport let useShowStore = defineStore('showStore', {\n    state: () => ({\n        id: 0,\n        name: '',\n        category_id: 0,\n        category_sub_id: 0,\n        category_description: '',\n        sub_categories: [],\n        description: '',\n        posterName: [],\n        posterId: [0],\n        episodes: [],\n        team_id: 'team id',\n        episodePoster: '',\n        noteEdit: 0,\n        note: '',\n        saveNoteProcessing: Boolean,\n\n    }),\n\n    actions: {\n        async fill() {\n            let r = await import('@/Json/show.json');\n            this.$state = r.default;\n        }\n    },\n\n    getters: {\n        //\n    }\n});\n","import script from \"./TabbableTextarea.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TabbableTextarea.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <textarea\n        @keydown.tab.prevent=\"onTabPress\"\n        @keyup=\"emit('update:modelValue', $event.target.value)\"\n        v-text=\"modelValue\" />\n</template>\n\n<script setup>\ndefineProps ({\n    modelValue: String\n});\n\nlet emit = defineEmits(['update:modelValue']);\n\nfunction onTabPress(e) {\n    let textarea = e.target;\n\n    // get caret position/selection\n    let val = textarea.value,\n        start = textarea.selectionStart,\n        end = textarea.selectionEnd;\n\n    // set textarea value to: text before caret + tab + text after caret\n    textarea.value = val.substring(0, start) + \"\\t\" + val.substring(end);\n\n    // put caret at right position again\n    textarea.selectionStart = textarea.selectionEnd = start + 1;\n}\n\n</script>\n","import script from \"./ShowEditHeader.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ShowEditHeader.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <header>\n    <div class=\"flex justify-between mb-6\">\n\n            <div>\n                <div class=\"font-bold mb-4 text-red-700\">EDIT SHOW</div>\n                <h1 class=\"text-3xl\">\n                    <Link :href=\"`/shows/${show.slug}`\" class=\"text-red-700 font-bold uppercase\">{{ show.name }}</Link>\n                </h1>\n            </div>\n            <div>\n                <button\n                    @click=\"back\"\n                    class=\"px-4 py-2 text-white bg-orange-600 hover:bg-orange-500 rounded-lg\"\n                >Cancel\n                </button>\n            </div>\n\n    </div>\n    </header>\n\n    <div>\n        <div class=\"mb-6\"><span class=\"text-xs uppercase font-semibold\">Team: </span>\n            <Link :href=\"`/teams/${team.slug}`\">\n            <span class=\"font-bold uppercase text-blue-300 hover:text-blue-500\">{{ team.name }}</span>\n            </Link>\n        </div>\n    </div>\n\n\n</template>\n\n<script setup>\ndefineProps({\n    show: Object,\n    team: Object,\n})\n\nfunction back() {\n    window.history.back()\n}\n\n</script>\n","import script from \"./Edit.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Edit.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n\n    <Head :title=\"`Edit Show: ${props.show.name}`\"/>\n\n    <div id=\"topDiv\"></div>\n    <div class=\"place-self-center flex flex-col gap-y-3\">\n        <div class=\"light:bg-white light:text-black dark:bg-gray-800 p-5 mb-10\">\n\n            <ShowEditHeader :show=\"props.show\" :team=\"props.team\"/>\n\n            <div class=\"flex flex-col\">\n                <div class=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\n                    <div class=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\n                        <div class=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\n\n\n                            <!--            <div class=\"max-w-lg mx-auto mt-8\">-->\n\n<!--                            <ShowEditBody-->\n<!--                                :show=\"props.show\"-->\n<!--                                :poster=\"props.poster\"-->\n<!--                            />-->\n\n\n                            <div v-if=\"form.errors.name\" v-text=\"form.errors.name\"\n                                 class=\"bg-red-600 p-2 w-full text-white font-semibold mt-1\"></div>\n                            <div v-if=\"form.errors.description\" v-text=\"form.errors.description\"\n                                 class=\"bg-red-600 p-2 w-full text-white font-semibold mt-1\"></div>\n\n                            <!-- Begin grid 2-col -->\n                            <div class=\"grid grid-cols-1 sm:grid-cols-2 space-x-6 p-6\">\n\n                                <!--Left Column-->\n                                <div>\n                                    <div class=\"flex space-y-3\">\n                                        <div class=\"mb-6\">\n                                            <img :src=\"'/storage/images/' + props.poster\"\n                                                 :key=\"poster\" />\n                                        </div>\n                                    </div>\n\n                                    <div>\n\n                                        <label class=\"block mb-2 uppercase font-bold text-xs text-light text-red-700\"\n                                               for=\"name\"\n                                        >\n                                            Change Show Poster\n                                        </label>\n                                        <div class=\"max-full mx-auto mt-2 mb-6 bg-gray-200 p-6 text-black\">\n                                            <h2 class=\"text-xl font-semibold\">Upload Show Poster</h2>\n\n                                            <ul class=\"pb-4\">\n                                                <li>Max File Size: <span class=\"text-orange-400\">10MB</span></li>\n                                                <li>File Types accepted: <span class=\"text-orange-400\">jpg, jpeg, png</span></li>\n                                            </ul>\n                                            <file-pond\n                                                name=\"poster\"\n                                                ref=\"pond\"\n                                                label-idle=\"Click to choose image, or drag here...\"\n                                                @init=\"filepondInitialized\"\n                                                server=\"/showsUploadPoster\"\n                                                accepted-file-types=\"image/jpg, image/jpeg, image/png\"\n                                                @processfile=\"handleProcessedFile\"\n                                                max-file-size=\"10MB\"\n                                            />\n                                        </div>\n\n                                    </div>\n\n\n\n\n                                </div>\n\n\n\n                                <!--Right Column-->\n                                <div>\n<!--                                    <ShowPosterUpload-->\n<!--                                        :team=\"props.show\"-->\n<!--                                        :images=\"props.images\"-->\n<!--                                    />-->\n\n                                    <div class=\"mb-6\">\n                                        <label class=\"block mb-2 uppercase font-bold text-xs text-light text-red-700\"\n                                               for=\"name\"\n                                        >\n                                            Show Notes (only visible to team members)\n                                        </label>\n\n                                        <input v-model=\"form.notes\"\n                                               class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                                               type=\"text\"\n                                               name=\"notes\"\n                                               id=\"notes\"\n                                               required\n                                        >\n                                        <div v-if=\"form.errors.notes\" v-text=\"form.errors.notes\"\n                                             class=\"text-xs text-red-600 mt-1\"></div>\n                                    </div>\n\n                                    <form @submit.prevent=\"submit\">\n                                        <div class=\"mb-6\">\n                                        </div>\n\n                                        <div class=\"mb-6\">\n                                            <label class=\"block mb-2 uppercase font-bold text-xs text-light text-red-700\"\n                                                   for=\"name\"\n                                            >\n                                                Show Name\n                                            </label>\n\n                                            <input v-model=\"form.name\"\n                                                   class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                                                   type=\"text\"\n                                                   name=\"name\"\n                                                   id=\"name\"\n                                                   required\n                                            >\n                                            <div v-if=\"form.errors.name\" v-text=\"form.errors.name\"\n                                                 class=\"text-xs text-red-600 mt-1\"></div>\n                                        </div>\n\n                                        <div class=\"mb-6\">\n                                            <label class=\"block mb-2 uppercase font-bold text-xs text-light text-red-700\"\n                                                   for=\"category\"\n                                            >\n                                                Category\n                                            </label>\n\n\n                                            <select class=\"border border-gray-400 text-gray-800 p-2 w-full rounded-lg block mb-2 uppercase font-bold text-xs \"\n                                                    v-model=\"form.category\" @change=\"chooseCategory($event)\"\n                                            >\n                                                <option v-for=\"category in props.categories\"\n                                                        :key=\"category.id\" :value=\"category.id\">{{category.name}}</option>\n\n\n                                            </select>\n                                            <!--    This was for practice... the next step is to loop over the sub-categories that belongTo the category selected. -->\n                                            <!--                                    <select>-->\n                                            <!--                                        <option v-for=\"option in options\" :value=\"option.value\">{{option.text}}</option>-->\n                                            <!--                                    </select>-->\n                                            <div v-if=\"form.errors.category\" v-text=\"form.errors.category\"\n                                                 class=\"text-xs text-red-600 mt-1\"></div>\n\n                                            {{showCategoryDescription}}\n                                        </div>\n\n\n\n                                        <div class=\"mb-6\">\n                                            <div class=\"text-sm text-orange-600\">Sub-categories are coming soon!</div>\n                                            <label class=\"block mb-2 text-gray-600 uppercase font-bold text-xs text-light text-gray-600\"\n                                                   for=\"sub_category\"\n                                            >\n                                                Sub-category\n                                            </label>\n\n\n                                            <select disabled class=\"border border-gray-400 text-gray-800 disabled:bg-gray-600 disabled:cursor-not-allowed p-2 w-full rounded-lg block mb-2 uppercase font-bold text-xs\"\n                                                    v-model=\"form.sub_category\"\n                                            >\n                                                <option value=\"1\">Option</option>\n                                            </select>\n                                            <div v-if=\"form.errors.sub_category\" v-text=\"form.errors.sub_category\"\n                                                 class=\"text-xs text-red-600 mt-1\"></div>\n                                        </div>\n\n                                        <div class=\"mb-6\">\n                                            <label class=\"block mb-2 uppercase font-bold text-xs text-light text-red-700\"\n                                                   for=\"description\"\n                                            >\n                                                Description\n                                            </label>\n                                            <TabbableTextarea v-model=\"form.description\"\n                                                              class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                                                              name=\"description\"\n                                                              id=\"description\"\n                                                              rows=\"10\" cols=\"30\"\n                                                              required\n                                            />\n                                            <div v-if=\"form.errors.description\" v-text=\"form.errors.description\"\n                                                 class=\"text-xs text-red-600 mt-1\"></div>\n                                        </div>\n\n                                        <div class=\"mb-6\">\n                                            <label class=\"block mb-2 uppercase font-bold text-xs text-light text-red-700\"\n                                                   for=\"name\"\n                                            >\n                                                Website URL\n                                            </label>\n\n                                            <input v-model=\"form.www_url\"\n                                                   class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                                                   type=\"text\"\n                                                   name=\"www_url\"\n                                                   id=\"www_url\"\n                                            >\n                                            <div v-if=\"form.errors.www_url\" v-text=\"form.errors.www_url\"\n                                                 class=\"text-xs text-red-600 mt-1\"></div>\n                                        </div>\n\n                                        <div class=\"mb-6\">\n                                            <label class=\"block mb-2 uppercase font-bold text-xs text-light text-red-700\"\n                                                   for=\"name\"\n                                            >\n                                                Instagram Handle\n                                            </label>\n\n                                            <input v-model=\"form.instagram_name\"\n                                                   class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                                                   type=\"text\"\n                                                   name=\"instagram_name handle\"\n                                                   id=\"instagram_name\"\n                                            >\n                                            <div v-if=\"form.errors.instagram_name\" v-text=\"form.errors.instagram_name\"\n                                                 class=\"text-xs text-red-600 mt-1\"></div>\n                                        </div>\n\n                                        <div class=\"mb-6\">\n                                            <label class=\"block mb-2 uppercase font-bold text-xs text-light text-red-700\"\n                                                   for=\"name\"\n                                            >\n                                                Telegram URL\n                                            </label>\n\n                                            <input v-model=\"form.telegram_url\"\n                                                   class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                                                   type=\"text\"\n                                                   name=\"telegram_url\"\n                                                   id=\"telegram_url\"\n                                            >\n                                            <div v-if=\"form.errors.telegram_url\" v-text=\"form.errors.telegram_url\"\n                                                 class=\"text-xs text-red-600 mt-1\"></div>\n                                        </div>\n\n                                        <div class=\"mb-6\">\n                                            <label class=\"block mb-2 uppercase font-bold text-xs text-light text-red-700\"\n                                                   for=\"name\"\n                                            >\n                                                Twitter @\n                                            </label>\n\n                                            <input v-model=\"form.twitter_handle\"\n                                                   class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                                                   type=\"text\"\n                                                   name=\"twitter_handle\"\n                                                   id=\"twitter_handle\"\n                                            >\n                                            <div v-if=\"form.errors.twitter_handle\" v-text=\"form.errors.twitter_handle\"\n                                                 class=\"text-xs text-red-600 mt-1\"></div>\n                                        </div>\n\n                                        <div class=\"flex justify-end mb-6\">\n                                             <button\n                                                type=\"submit\"\n                                                class=\"bg-blue-600 hover:bg-blue-500 text-white rounded py-2 px-4\"\n                                                :disabled=\"form.processing\"\n                                            >\n                                                Save\n                                            </button>\n                                        </div>\n                                    </form>\n\n                                </div>\n                                <!-- End Right Column -->\n                            </div>\n                            <!-- End grid 2-col -->\n\n\n                        </div>\n                        </div>\n                    </div>\n                </div>\n\n\n\n            </div>\n        </div>\n\n</template>\n\n<script setup>\nimport {ref, onBeforeMount, onMounted} from \"vue\"\nimport {useForm} from \"@inertiajs/inertia-vue3\"\nimport TabbableTextarea from \"@/Components/TabbableTextarea\"\n\nimport { Inertia } from \"@inertiajs/inertia\"\nimport { useVideoPlayerStore } from \"@/Stores/VideoPlayerStore.js\"\nimport { useTeamStore } from \"@/Stores/TeamStore.js\"\nimport { useShowStore } from \"@/Stores/ShowStore.js\"\nimport {useUserStore} from \"@/Stores/UserStore\";\n\nimport vueFilePond, { setOptions } from 'vue-filepond'\nimport FilePondPluginFileValidateType from \"filepond-plugin-file-validate-type\"\nimport FilePondPluginFileValidateSize from \"filepond-plugin-file-validate-size\"\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\"\nimport FilePondPluginFileMetadata from \"filepond-plugin-file-metadata\"\nimport 'filepond/dist/filepond.min.css'\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.min.css'\n\nimport ShowEditHeader from \"@/Components/Shows/Edit/ShowEditHeader\"\n\n\nlet videoPlayerStore = useVideoPlayerStore()\nlet teamStore = useTeamStore()\nlet showStore = useShowStore()\nlet userStore = useUserStore()\n\nvideoPlayerStore.currentPage = 'shows'\n\nonBeforeMount(() => {\n    userStore.scrollToTopCounter = 0;\n})\n\nonMounted(() => {\n    videoPlayerStore.makeVideoTopRight();\n    if (userStore.scrollToTopCounter === 0 ) {\n        document.getElementById(\"topDiv\").scrollIntoView()\n        userStore.scrollToTopCounter ++;\n    }\n\n});\n\nlet props = defineProps({\n    user: Object,\n    show: Object,\n    team: Object,\n    poster: String,\n    categories: Object,\n    subCategories: Object,\n    showCategoryId: Object,\n    showCategoryName: Object,\n    showCategoryDescription: Object,\n});\n\nlet showCategoryDescription = props.showCategoryDescription;\n\nfunction chooseCategory(event) {\n    showCategoryDescription = props.categories[event.target.selectedIndex].description;\n}\n\nconst FilePond = vueFilePond(\n    FilePondPluginFileValidateType,\n    FilePondPluginFileValidateSize,\n    FilePondPluginImagePreview,\n    FilePondPluginFileMetadata\n);\n\n// FilePond.setOptions = ({\n//     fileMetadataObject: {\n//         show_id: '1',\n//     },\n// });\n\nfunction filepondInitialized() {\n    console.log(\"Filepond is ready!\");\n    console.log('Filepond object:', FilePond);\n}\n\nfunction handleProcessedFile(error, file) {\n    if (error) {\n        console.log(\"Filepond processed file\");\n        console.log(error);\n        console.log(file);\n        return;\n    }\n\n    Inertia.reload({\n        only: ['poster'],\n    });\n\n}\n\nteamStore.setActiveTeam(props.team);\nteamStore.setActiveShow(props.show);\nshowStore.posterName = props.poster[0].name;\n\nlet form = useForm({\n    name: props.show.name,\n    description: props.show.description,\n    category: props.showCategoryId,\n    sub_category: props.show.sub_category,\n    www_url: props.show.www_url,\n    instagram_name: props.show.instagram_name,\n    telegram_url: props.show.telegram_url,\n    twitter_handle: props.show.twitter_handle,\n    notes: props.show.notes,\n});\n\n// let getCategory = ref(null);\n// onBeforeMount(async () => {\n//     getCategory.value = await props.show.category;\n// })\n\n\nlet submit = () => {\n    form.put(route('shows.update', props.show.slug));\n};\n\n</script>\n"],"names":["useShowStore","defineStore","state","id","name","category_id","category_sub_id","category_description","sub_categories","description","posterName","posterId","episodes","team_id","episodePoster","noteEdit","note","saveNoteProcessing","Boolean","actions","fill","r","$state","getters","onTabPress","e","textarea","target","val","value","start","selectionStart","end","selectionEnd","substring","back","window","history","videoPlayerStore","useVideoPlayerStore","teamStore","useTeamStore","showStore","userStore","useUserStore","currentPage","onBeforeMount","scrollToTopCounter","onMounted","makeVideoTopRight","document","getElementById","scrollIntoView","showCategoryDescription","props","FilePond","vueFilePond","FilePondPluginFileValidateType","FilePondPluginFileValidateSize","FilePondPluginImagePreview","FilePondPluginFileMetadata","filepondInitialized","console","log","handleProcessedFile","error","file","Inertia","only","setActiveTeam","team","setActiveShow","show","poster","form","useForm","category","showCategoryId","sub_category","www_url","instagram_name","telegram_url","twitter_handle","notes","submit","put","route","slug","event","categories","selectedIndex"],"sourceRoot":""}
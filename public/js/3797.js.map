{"version":3,"file":"js/3797.js","mappings":"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","sources":["webpack:///./resources/js/Stores/AdminStore.js","webpack:///./resources/js/Utilities/PageSetup.js","webpack:///./resources/js/Components/Pages/Admin/Channels/SourceSelector.vue?fb50","webpack:///./resources/js/Pages/Admin/Channels/Index.vue?cacf","webpack:///./resources/js/Components/Global/Modals/Messages.vue?dfe9","webpack:///./resources/js/Components/Global/Modals/Messages.vue","webpack:///./resources/js/Components/Global/Paginators/Pagination.vue?0305","webpack:///./resources/js/Components/Global/Paginators/Pagination.vue","webpack:///./resources/js/Components/Pages/Admin/AdminHeader.vue","webpack:///./resources/js/Components/Pages/Admin/AdminHeader.vue?239a","webpack:///./resources/js/Components/Pages/Admin/Channels/SourceSelector.vue","webpack:///./resources/js/Components/Pages/Admin/Channels/SourceSelector.vue?6a9d","webpack:///./resources/js/Components/Pages/Admin/Channels/SourceSelector.vue?98e8","webpack:///./resources/js/Components/Pages/Admin/Channels/DynamicModal.vue?a432","webpack:///./resources/js/Components/Pages/Admin/Channels/DynamicModal.vue","webpack:///./resources/js/Components/Pages/Admin/Channels/AdminAddMistStreamModal.vue?9ed4","webpack:///./resources/js/Components/Pages/Admin/Channels/AdminAddMistStreamModal.vue","webpack:///./resources/js/Pages/Admin/Channels/Index.vue","webpack:///./resources/js/Pages/Admin/Channels/Index.vue?08e3","webpack:///./resources/js/Pages/Admin/Channels/Index.vue?b9eb"],"sourcesContent":["import { defineStore } from 'pinia'\n\nconst initialState = () => ({\n    channels: [], // For Admin Channels page\n    items: [], // for Admin Channels DynamicModal... ExternalSource, ChannelPlaylist, MistStream\n    activeItemId: null,\n    selectedChannel: null, // The currently active item\n    currentType: '', // 'externalSource', 'channelPlaylist', 'mistStream'\n    searchTerm: '',\n    type: '',\n    modalHeader: '',\n    currentPage: 1,\n    itemsPerPage: 10,\n    currentChannelsPage: 1,\n    itemsPerChannelsPage: 7,\n    sourceSelector: {\n        source: null,\n        sourceType: null\n    }\n})\n\nexport const useAdminStore = defineStore('adminStore', {\n    state: initialState,\n    actions: {\n        reset() {\n            // Reset the store to its original state (clear all data)\n            Object.assign(this, initialState())\n        },\n\n        loadChannels(channels) {\n            this.channels = channels\n        },\n        fetchChannels() {\n            const response = axios.get('/api/channels_list')\n                .then(response => {\n                    this.channels = response.data\n                })\n                .catch(error => {\n                    console.log(error)\n                })\n        },\n        setSelectedChannel(item) {\n            this.selectedChannel = item\n        },\n        setCurrentType(type) {\n            this.currentType = type\n            this.modalHeader = type + ' list'\n        },\n        clearSelectedChannelAndItems() {\n            this.selectedChannel = null\n            this.items = []\n            this.activeItemId = null\n            this.currentType = ''\n            this.modalHeader = ''\n            this.currentPage = 1\n            this.itemsPerPage = 10\n            this.searchTerm = ''\n        },\n        // async searchItems(type, searchTerm = '') {\n        //     this.currentType = type;\n        //     this.searchTerm = searchTerm;\n        //     // Assuming you have a function to perform the fetch; adjust accordingly\n        //     const response = await fetch(`/admin/channels/search/${type}?search=${searchTerm}`);\n        //     const data = await response.json();\n        //     this.items = data.items;\n        // },\n        async fetchItems(type) {\n            this.currentType = type\n            if (this.currentType === 'mistStream') {\n                // retrieve all mistStreams paginated.\n                // Can Vue search through the items?\n                const response = await fetch(`/mistStreams`)\n                this.items = await response.json()\n                if (this.selectedChannel.mist_stream_id) {\n                    this.activeItemId = this.selectedChannel.mist_stream_id\n                }\n            } else if (this.currentType === 'externalSource') {\n                // retrieve all externalSources\n                const response = await fetch(`/externalSources`)\n                this.items = await response.json()\n                if (this.selectedChannel.channel_external_source_id) {\n                    this.activeItemId = this.selectedChannel.channel_external_source_id\n                }\n            } else if (this.currentType === 'channelPlaylist') {\n                // retrieve all channelPlaylists\n                const response = await fetch(`/channelPlaylists`)\n                this.items = await response.json()\n                if (this.selectedChannel.channel_playlist_id) {\n                    this.activeItemId = this.selectedChannel.channel_playlist_id\n                }\n            }\n            // Assuming you have a function to perform the fetch; adjust accordingly\n            // const response = await fetch(`/admin/channels/search/${type}?search=${searchTerm}`);\n            // const data = await response.json();\n            // this.items = data.items;\n        },\n        async updateActiveItemId(id) {\n            this.activeItemId = id\n            if (this.currentType === 'mistStream') {\n                await this.setMistStream(this.selectedChannel, id)\n            } else if (this.currentType === 'channelPlaylist') {\n                await this.setChannelPlaylist(this.selectedChannel, id)\n            } else if (this.currentType === 'externalSource') {\n                await this.setExternalSource(this.selectedChannel, id)\n            }\n        },\n        // Add more actions as needed\n        // this next one should probably go in AdminChannelStore\n        async setPlaybackPriorityType(channel, priorityType) {\n            const dataToSend = {setPriorityType: priorityType}\n            try {\n                const response = await axios.post(`/admin/channels/${channel.id}/setPlaybackPriorityType`, dataToSend)\n                if (response.data.success) {\n                    this.fetchChannels()\n                    // Find the index of the updated channel in the channels array\n                    const index = this.channels.findIndex(c => c.id === channel.id)\n                    if (index !== -1) {\n                        // Update the channel in the channels array with the updated data\n                        this.channels[index] = response.data.channel\n                    }\n                }\n            } catch (error) {\n                console.error(error)\n            }\n        },\n        async setMistStream(channel, mistStreamId) {\n            const dataToSend = {mistStreamId: mistStreamId}\n            try {\n                const response = await axios.post(`/admin/channels/${channel.id}/setMistStream`, dataToSend)\n                if (response.data.success) {\n                    this.fetchChannels()\n                    // Find the index of the updated channel in the channels array\n                    const index = this.channels.findIndex(c => c.id === channel.id)\n                    if (index !== -1) {\n                        // Update the channel in the channels array with the updated data\n                        this.channels[index] = response.data.channel\n                    }\n                }\n            } catch (error) {\n                console.error(error)\n            }\n        },\n        async setChannelPlaylist(channel, channelPlaylistId) {\n            const dataToSend = {channelPlaylistId: channelPlaylistId}\n            try {\n                const response = await axios.post(`/admin/channels/${channel.id}/setChannelPlaylist`, dataToSend)\n                if (response.data.success) {\n                    this.fetchChannels()\n                    // Find the index of the updated channel in the channels array\n                    const index = this.channels.findIndex(c => c.id === channel.id)\n                    if (index !== -1) {\n                        // Update the channel in the channels array with the updated data\n                        this.channels[index] = response.data.channel\n                    }\n                }\n            } catch (error) {\n                console.error(error)\n            }\n        },\n        async setExternalSource(channel, externalSourceId) {\n            const dataToSend = {mistStreamId: externalSourceId}\n            try {\n                const response = await axios.post(`/admin/channels/${channel.id}/setExternalSource`, dataToSend)\n                if (response.data.success) {\n                    this.fetchChannels()\n                    // Find the index of the updated channel in the channels array\n                    const index = this.channels.findIndex(c => c.id === channel.id)\n                    if (index !== -1) {\n                        // Update the channel in the channels array with the updated data\n                        this.channels[index] = response.data.channel\n                    }\n                }\n            } catch (error) {\n                console.error(error)\n            }\n        },\n        nextPage() {\n            const totalPages = Math.ceil(this.items.length / this.itemsPerPage)\n            if (this.currentPage < totalPages) this.currentPage++\n        },\n        prevPage() {\n            if (this.currentPage > 1) this.currentPage--\n        },\n        setPage(page) {\n            this.currentPage = page\n        },\n        nextChannelsPage() {\n            const totalPages = Math.ceil(this.channels.length / this.itemsPerChannelsPage)\n            if (this.currentChannelsPage < totalPages) this.currentChannelsPage++\n        },\n        prevChannelsPage() {\n            if (this.currentChannelsPage > 1) this.currentChannelsPage--\n        },\n        setChannelsPage(page) {\n            this.currentChannelsPage = page\n        },\n    },\n\n    // Getters (if needed)\n    getters: {\n        filteredItems: (state) => state.items, // Placeholder, adjust if you need actual filtering\n        currentItem: (state) => state.items.find((item) => item.id === state.activeItem),\n        // setHeader: (state) => state.modalHeader = state.currentType + ' list',\n        paginatedItems: (state) => {\n            const start = (state.currentPage - 1) * state.itemsPerPage\n            const end = start + state.itemsPerPage\n            return state.items.slice(start, end)\n        },\n        paginatedChannels: (state) => {\n            const start = (state.currentChannelsPage - 1) * state.itemsPerChannelsPage\n            const end = start + state.itemsPerChannelsPage\n            return state.channels.slice(start, end)\n        },\n        totalPages(state) {\n            return Math.ceil(state.items.length / state.itemsPerPage)\n        },\n        totalChannelsPages(state) {\n            return Math.ceil(state.channels.length / state.itemsPerChannelsPage)\n        },\n    },\n})\n","import { onBeforeMount, onMounted } from 'vue'\nimport { useUserStore } from \"@/Stores/UserStore\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useVideoPlayerStore } from \"@/Stores/VideoPlayerStore\"\nimport { Inertia } from \"@inertiajs/inertia\"\n\nexport function usePageSetup(pageName) {\n    const userStore = useUserStore()\n    const appSettingStore = useAppSettingStore()\n    const videoPlayerStore = useVideoPlayerStore()\n\n    appSettingStore.currentPage = pageName\n    appSettingStore.showFlashMessage = true\n    appSettingStore.pageIsHidden = false\n\n    if (userStore.isMobile) {\n        appSettingStore.ott = 0\n    }\n\n    videoPlayerStore.makeVideoTopRight()\n\n    onBeforeMount(() => {\n        // reload page\n        if (appSettingStore.pageReload) {\n            appSettingStore.pageReload = false\n            window.location.reload(true);\n        }\n    });\n\n    onMounted(() => {\n        // Check if the URL contains query strings\n        const hasQueryStrings = window.location.search !== '';\n\n        // Only scroll into view if there are no query strings\n        if (!hasQueryStrings) {\n            const topDiv = document.getElementById(\"topDiv\")\n            if (topDiv) {\n                topDiv.scrollIntoView()\n            }\n        }\n        // Only update if we're not already on this page to avoid overwriting with the current URL\n        appSettingStore.setPrevUrl()\n        appSettingStore.noLayout = false\n        appSettingStore.showOttButtons = true\n        // Inertia.reload()\n\n    });\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".source-selector[data-v-c559967c]{//margin-top:.5rem}.is-priority[data-v-c559967c]{color:#000;font-weight:300}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/Components/Pages/Admin/Channels/SourceSelector.vue\"],\"names\":[],\"mappings\":\"AA8EA,kCAEE,kBACF,CAMA,8BAEE,UAAY,CACZ,eACF\",\"sourcesContent\":[\"<template>\\n  <!--  <div class=\\\"source-selector\\\" :class=\\\"{'is-priority': source?.isPriority, 'is-playing': source?.isPlaying, 'is-fallback': source?.isFallback, 'has-error': source?.hasError}\\\">-->\\n  <div\\n      :class=\\\"['source-selector', {'is-priority': source?.playback_priority_type, 'is-playing': source?.isPlaying, 'is-fallback': source?.isFallback, 'has-error': source?.hasError}]\\\">\\n    <div>\\n      <!-- Display the source status here (playing, fallback, error) -->\\n      <div v-if=\\\"source?.playback_priority_type === sourceType\\\" class=\\\"btn btn-xs mt-1 text-white bg-green-500 hover:bg-green-500\\\">Priority</div>\\n      <span>\\n\\n      </span>\\n      <!-- Icon or button to set this source as priority -->\\n      <!--      <button class=\\\"btn btn-xs\\\" v-if=\\\"!source?.playback_priority_type\\\" @click=\\\"setPriority\\\">Set as Priority</button>-->\\n    </div>\\n  </div>\\n\\n  <!--  <div v-if=\\\"source?.playback_priority_type === 'mistStream'\\\">-->\\n  <!--    <button class=\\\"btn btn-xs hover:bg-green-500 bg-green-500\\\">Priority</button>-->\\n  <!--  </div>-->\\n\\n  <button v-if=\\\"source?.playback_priority_type !== sourceType\\\" class=\\\"btn btn-xs mt-1\\\"\\n          @click=\\\"setPriority\\\">Set as Priority\\n  </button>\\n\\n\\n  <dialog :id=\\\"`confirmPriorityChangeModal`\\\" class=\\\"modal\\\">\\n    <div class=\\\"modal-box\\\">\\n      <h3 class=\\\"font-bold text-lg\\\">Confirm Selection for {{ adminStore.sourceSelector?.source?.name }}</h3>\\n      <p class=\\\"py-4\\\">\\n        Are you sure you want to change priority to <span class=\\\"font-bold\\\">{{ adminStore.sourceSelector?.sourceType }}</span>?\\n      </p>\\n      <div class=\\\"modal-action\\\">\\n        <button class=\\\"btn\\\" @click=\\\"confirmPriorityChange\\\">Confirm</button>\\n        <button class=\\\"btn\\\" onclick=\\\"document.getElementById('confirmPriorityChangeModal').close()\\\">Cancel</button>\\n      </div>\\n    </div>\\n  </dialog>\\n\\n\\n</template>\\n\\n<script setup>\\nimport { useAdminStore } from '@/Stores/AdminStore'\\nimport { ref } from 'vue'\\n\\nconst adminStore = useAdminStore()\\n\\nlet props = defineProps([\\n  'source',\\n  'sourceType',\\n])\\n\\n// const setPriority = (sourceType) => {\\n//   emit('change', { sourceType, priority: true });\\n//   // Implement function to make API call to update the backend\\n// };\\n\\n\\nconst setPriority = () => {\\nadminStore.sourceSelector.source = props.source\\nadminStore.sourceSelector.sourceType = props.sourceType\\n  document.getElementById('confirmPriorityChangeModal').showModal() // Open the modal for confirmation\\n}\\n\\nconst confirmPriorityChange = async () => {\\n  await adminStore.setPlaybackPriorityType(adminStore.sourceSelector.source, adminStore.sourceSelector.sourceType)\\n  document.getElementById('confirmPriorityChangeModal').close() // Close the modal\\n\\n}\\n\\n// const setPriority = async () => {\\n//   // Directly call the store action to update the priority.\\n//   await adminStore.setPlaybackPriorityType(props.source, props.sourceType);\\n//   // No need to emit an event to the parent component.\\n// };\\n\\n</script>\\n\\n<style scoped>\\n.source-selector {\\n  /* Base styles */\\n  //margin-top: 0.5rem;\\n}\\n\\n.is-playing {\\n  /* Styles for playing status */\\n}\\n\\n.is-priority {\\n  /* Styles for isPriority status */\\n  color: black;\\n  font-weight: 300;\\n}\\n\\n.is-fallback {\\n  /* Styles for fallback status */\\n}\\n\\n.has-error {\\n  /* Styles for error status */\\n}\\n\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"#tooltip[data-v-11c14e80]{background:#333;border-radius:4px;color:#fff;font-size:13px;font-weight:700;padding:4px 8px}[data-v-11c14e80] .popper{background:#333;border-radius:20px;color:#fff;font-weight:700;padding:2px;text-transform:uppercase}[data-v-11c14e80] .popper #arrow:before{background:#333}[data-v-11c14e80] .popper:hover,[data-v-11c14e80] .popper:hover>#arrow:before{background:#333}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/Pages/Admin/Channels/Index.vue\"],\"names\":[],\"mappings\":\"AA6WA,0BACE,eAAgB,CAKhB,iBAAkB,CAJlB,UAAY,CAGZ,cAAe,CAFf,eAAiB,CACjB,eAGF,CAEA,0BACE,eAAmB,CAEnB,kBAAmB,CACnB,UAAW,CACX,eAAiB,CAHjB,WAAY,CAIZ,wBACF,CAEA,wCACE,eACF,CAEA,8EAEE,eACF\",\"sourcesContent\":[\"<template>\\n  <Head title=\\\"Admin/Channels\\\"/>\\n\\n  <div class=\\\"place-self-center flex flex-col\\\">\\n    <div id=\\\"topDiv\\\" class=\\\"bg-white text-black dark:bg-gray-800 dark:text-gray-50 p-5 mb-10\\\">\\n\\n      <Message v-if=\\\"appSettingStore.showFlashMessage\\\" :flash=\\\"$page.props.flash\\\"/>\\n\\n      <AdminHeader>Channels</AdminHeader>\\n\\n      <div class=\\\"flex flex-row justify-between gap-x-4 mb-3\\\">\\n        <div>\\n          <Link :href=\\\"`#`\\\">\\n            <button\\n                class=\\\"btn btn-sm bg-green-500 hover:bg-green-600 text-white px-4 py-2 mr-2 rounded disabled:bg-gray-400\\\"\\n                disabled\\n            >Add Channel\\n            </button>\\n          </Link>\\n          <Link :href=\\\"`#`\\\">\\n            <button\\n                class=\\\"btn btn-sm bg-green-500 hover:bg-green-600 text-white px-4 py-2 mr-2 rounded disabled:bg-gray-400\\\"\\n                disabled\\n            >Add External Source\\n            </button>\\n          </Link>\\n          <Link :href=\\\"`#`\\\">\\n            <button\\n                class=\\\"btn btn-sm bg-green-500 hover:bg-green-600 text-white px-4 py-2 mr-2 rounded disabled:bg-gray-400\\\"\\n                disabled\\n            >Add Channel Playlist\\n            </button>\\n          </Link>\\n          <AdminAddMistStreamModal />\\n\\n        </div>\\n        <input v-model=\\\"adminStore.searchTerm\\\" type=\\\"search\\\" placeholder=\\\"Search...\\\" class=\\\"border px-2 rounded-lg\\\"/>\\n      </div>\\n\\n      <div class=\\\"bg-orange-300 px-2 text-black mb-3\\\">\\n        <p>Add a channel: create playlist and add shows.</p>\\n        <p><span class=\\\"font-semibold\\\">TRAVIS NOTE: </span>Use FFMPEG to push an .mp4 to a mist stream. This will allow\\n          us to schedule video objects from anywhere\\n          into our channels, and we can have a channel that loads the current video at the right time spot in the video\\n          based on our schedule saved in the database.</p>\\n      </div>\\n\\n      <div class=\\\"flex flex-col\\\">\\n        <div class=\\\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\\\">\\n          <div class=\\\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\\\">\\n            <div class=\\\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\\\">\\n\\n              <div class=\\\"relative overflow-x-auto shadow-md sm:rounded-lg\\\">\\n                <div\\n                    class=\\\"table w-full text-sm text-left text-gray-500 dark:text-gray-400\\\"\\n                >\\n                  <div\\n                      class=\\\"table-header-group text-xs text-gray-700 bg-gray-50 dark:bg-gray-700 dark:text-gray-400\\\"\\n                  >\\n                    <div class=\\\"table-row\\\">\\n                      <div scope=\\\"col\\\" class=\\\"table-cell px-6 py-3 uppercase\\\">\\n                        <font-awesome-icon icon=\\\"fa-repeat\\\" class=\\\"mr-2 cursor-pointer hover:text-blue-500\\\"\\n                                           @click.prevent=\\\"reloadChannelsList()\\\"/>\\n                        <span class=\\\"uppercase\\\">Channel </span>\\n                      </div>\\n                      <div scope=\\\"col\\\" class=\\\"hidden md:table-cell px-6 py-3 uppercase\\\">\\n                        <span class=\\\"uppercase\\\">Current Video</span>\\n                      </div>\\n                      <div scope=\\\"col\\\" class=\\\"table-cell px-6 py-3 uppercase\\\">\\n                        <span class=\\\"uppercase\\\">External Source</span> <br/>\\n                        <span class=\\\"italic text-xs text-gray-400\\\"></span>\\n                      </div>\\n                      <div scope=\\\"col\\\" class=\\\"px-6 py-3 max-w-64\\\">\\n                        <span class=\\\"uppercase\\\">Channel Playlist</span>\\n                      </div>\\n                      <div scope=\\\"col\\\" class=\\\"table-cell px-6 py-3\\\">\\n                        <span class=\\\"uppercase\\\">Mist Stream</span> <br/>\\n                        <span class=\\\"italic text-xs text-gray-400\\\"></span>\\n                      </div>\\n\\n                    </div>\\n                  </div>\\n                  <div class=\\\"table-row-group\\\">\\n                    <div\\n                        v-for=\\\"channel in adminStore.paginatedChannels\\\"\\n                        :key=\\\"channel.id\\\"\\n                        class=\\\"table-row bg-white border-b dark:bg-gray-800 dark:border-gray-700\\\"\\n                    >\\n                      <div\\n                          scope=\\\"row\\\"\\n                          class=\\\"table-cell min-w-[8rem] px-6 py-4 font-medium text-gray-900 dark:text-white whitespace-nowrap\\\"\\n                      >\\n                        <span>{{ channel.name }}</span>\\n                        <div v-if=\\\"channel?.isLive\\\" class=\\\"ml-2 text-xs badge badge-secondary badge-outline\\\">live</div>\\n\\n                      </div>\\n                      <div\\n                          scope=\\\"row\\\"\\n                          class=\\\"md:table-cell px-6 py-4 font-medium text-gray-900 dark:text-white whitespace-nowrap\\\"\\n                      >\\n                        <div v-if=\\\"channel?.currentVideo\\\">\\n                          <Popper\\n                              hover openDelay=\\\"50\\\" closeDelay=\\\"50\\\" offset-skid=\\\"0\\\" offset-distance=\\\"0\\\"\\n                              placement=\\\"bottom\\\"\\n\\n                          >\\n                            <template #content>\\n                              <div class=\\\"text-xs\\\" id=\\\"tooltip\\\">\\n                                <div>ID: {{ channel?.currentVideo.id }}</div>\\n                                <div>File Name: {{ channel?.currentVideo.file_name }}</div>\\n                                <div>Type: {{ channel?.currentVideo.type }}</div>\\n                                <div>Folder: {{ channel?.currentVideo.folder }}</div>\\n                                <div>Storage Location: {{ channel?.currentVideo.storage_location }}</div>\\n                                <div>Processing: <span v-if=\\\"channel?.currentVideo.is_processing\\\">true</span><span\\n                                    v-else>false</span></div>\\n                                <div>Length: {{ channel?.currentVideo.length }}</div>\\n                              </div>\\n                            </template>\\n\\n                            <span v-if=\\\"channel?.currentVideo.name\\\" class=\\\"cursor-help text-green-500 font-semibold\\\">{{\\n                                channel?.currentVideo.name\\n                              }}</span>\\n                            <span v-else class=\\\"cursor-help text-blue-500 font-semibold\\\">Video has no name</span>\\n\\n                          </Popper>\\n\\n                        </div>\\n                        <div v-else class=\\\"italic text-gray-300 text-xs\\\">No video object playing</div>\\n                      </div>\\n                      <div class=\\\"table-cell px-6 py-4\\\">\\n                        <div v-if=\\\"channel?.externalSource\\\">\\n                          <Popper\\n                              hover openDelay=\\\"50\\\" closeDelay=\\\"50\\\" offset-skid=\\\"0\\\" offset-distance=\\\"0\\\"\\n                              placement=\\\"bottom\\\"\\n\\n                          >\\n                            <template #content>\\n                              <div class=\\\"text-xs\\\" id=\\\"tooltip\\\">\\n                                <div>ID: {{ channel?.externalSource.id }}</div>\\n                                <div>Name: {{ channel?.externalSource.name }}</div>\\n                                <div>Path: {{ channel?.externalSource.path }}</div>\\n                                <div>Type: {{ channel?.externalSource.type }}</div>\\n                                <div>Provider: {{ channel?.externalSource.provider }}</div>\\n                              </div>\\n                            </template>\\n\\n                            <span class=\\\"cursor-help text-orange-500 font-semibold\\\">{{\\n                                hasChannelSource(channel)\\n                              }}</span>\\n\\n                          </Popper>\\n\\n\\n                        </div>\\n                        <div v-else>\\n                          <button @click=\\\"openModal(channel, 'externalSource')\\\">\\n                            <div v-if=\\\"channel?.channel_external_source\\\" class=\\\"text-gray-700 tracking-wide\\\">\\n                              <span v-if=\\\"channel.playback_priority_type === 'externalSource'\\\" :class=\\\"{'text-black font-bold': channel.playback_priority_type === 'externalSource'}\\\">{{ channel?.channel_external_source.name }}</span>\\n                              <span v-else>{{ channel?.channel_external_source.name }}</span>\\n                            </div>\\n                            <span v-else class=\\\"italic text-gray-300 text-sm\\\">no source</span>\\n                          </button>\\n                          <!-- Status indicator + action to change source -->\\n                          <source-selector :source=\\\"channel\\\"\\n                                           :source-type=\\\"'externalSource'\\\" />\\n<!--                          -->\\n<!--                          <div v-if=\\\"channel.playback_priority_type === 'externalSource'\\\">-->\\n<!--                            <button class=\\\"btn btn-xs hover:bg-green-500 bg-green-500\\\">Priority</button>-->\\n<!--                          </div>-->\\n<!--                          <div v-else>-->\\n<!--                            <button class=\\\"btn btn-xs\\\"-->\\n<!--                                    :class=\\\"{'bg-green-500':channel.playback_priority_type === 'externalSource'}\\\"-->\\n<!--                                    @click=\\\"adminStore.setPlaybackPriorityType(channel,'externalSource')\\\">Set as Priority</button>-->\\n<!--                          </div>-->\\n                        </div>\\n\\n                      </div>\\n                      <div class=\\\"table-cell px-6 py-4\\\">\\n                        <div v-if=\\\"channel?.channelPlaylist\\\">\\n                          <Popper\\n                              hover openDelay=\\\"50\\\" closeDelay=\\\"50\\\" offset-skid=\\\"0\\\" offset-distance=\\\"0\\\"\\n                              placement=\\\"bottom\\\"\\n\\n                          >\\n                            <template #content>\\n                              <div class=\\\"text-xs\\\" id=\\\"tooltip\\\">\\n                                <div>ID: {{ channel?.channelPlaylist.id }}</div>\\n                                <div>Name: {{ channel?.channelPlaylist.name }}</div>\\n                                <div>Path: {{ channel?.channelPlaylist.path }}</div>\\n                                <div>Type: {{ channel?.channelPlaylist.type }}</div>\\n                                <div>Provider: {{ channel?.channelPlaylist.provider }}</div>\\n                              </div>\\n                            </template>\\n\\n                            <span class=\\\"cursor-help text-orange-500 font-semibold\\\"></span>\\n\\n                          </Popper>\\n\\n                        </div>\\n                        <div v-else>\\n                          <button @click=\\\"openModal(channel, 'channelPlaylist')\\\">\\n                            <div v-if=\\\"channel?.channel_playlist\\\" class=\\\"text-gray-700 tracking-wide\\\">\\n                              <span v-if=\\\"channel.playback_priority_type === 'channelPlaylist'\\\" :class=\\\"{'text-black font-bold': channel.playback_priority_type === 'channelPlaylist'}\\\">{{ channel?.channel_playlist.name }}</span>\\n                              <span v-else>{{ channel?.channel_playlist.name }}</span>\\n                            </div>\\n                            <span v-else class=\\\"italic text-gray-300 text-sm\\\">no playlist</span>\\n                          </button>\\n                          <source-selector :source=\\\"channel\\\"\\n                                           :source-type=\\\"'channelPlaylist'\\\" />\\n\\n<!--                          <div v-if=\\\"channel.playback_priority_type === 'channelPlaylist'\\\">-->\\n<!--                            <button class=\\\"btn btn-xs hover:bg-green-500 bg-green-500\\\">Priority</button>-->\\n<!--                          </div>-->\\n<!--                          <div v-else>-->\\n<!--                            <button class=\\\"btn btn-xs\\\"-->\\n<!--                                    :class=\\\"{'bg-green-500':channel.playback_priority_type === 'channelPlaylist'}\\\"-->\\n<!--                                    @click=\\\"adminStore.setPlaybackPriorityType(channel,'channelPlaylist')\\\">Set as Priority</button>-->\\n<!--                          </div>-->\\n                        </div>\\n\\n                      </div>\\n                      <div class=\\\"table-cell px-6 py-4\\\">\\n                        <button @click=\\\"openModal(channel, 'mistStream')\\\">\\n                          <div v-if=\\\"channel?.mist_stream\\\" class=\\\"text-gray-700 tracking-wide\\\">\\n                            <span v-if=\\\"channel.playback_priority_type === 'mistStream'\\\" :class=\\\"{'text-black font-bold': channel.playback_priority_type === 'mistStream'}\\\">{{ channel?.mist_stream.name }}</span>\\n                            <span v-else>{{ channel?.mist_stream.name }}</span>\\n                          </div>\\n                          <span v-else class=\\\"italic text-gray-300 text-sm\\\">no mist stream</span>\\n                        </button>\\n                        <!-- Status indicator + action to change source -->\\n                        <source-selector :source=\\\"channel\\\"\\n                                         :source-type=\\\"'mistStream'\\\" />\\n<!--                        <div v-if=\\\"channel.playback_priority_type === 'mistStream'\\\">-->\\n<!--                          <button class=\\\"btn btn-xs hover:bg-green-500 bg-green-500\\\">Priority</button>-->\\n<!--                        </div>-->\\n<!--                        <div v-else>-->\\n<!--                          <button class=\\\"btn btn-xs\\\"-->\\n<!--                                  :class=\\\"{'bg-green-500':channel.playback_priority_type === 'mistStream'}\\\"-->\\n<!--                                  @click=\\\"adminStore.setPlaybackPriorityType(channel,'mistStream')\\\">Set as Priority</button>-->\\n<!--                        </div>-->\\n                      </div>\\n\\n                    </div>\\n                  </div>\\n                </div>\\n                <!-- Paginator -->\\n                <div class=\\\"flex flex-row justify-center my-6 w-full\\\">\\n<!--                  <div class=\\\"join grid grid-cols-2\\\">-->\\n<!--                    <button class=\\\"join-item btn btn-sm btn-outline\\\" @click=\\\"adminStore.prevChannelsPage\\\">Previous page</button>-->\\n<!--                    <button class=\\\"join-item btn btn-sm btn-outline\\\" @click=\\\"adminStore.nextChannelsPage\\\">Next</button>-->\\n<!--                  </div>-->\\n                  <div class=\\\"join\\\">\\n                    <input\\n                        v-for=\\\"page in adminStore.totalChannelsPages\\\"\\n                        :key=\\\"page\\\"\\n                        type=\\\"radio\\\"\\n                        name=\\\"options\\\"\\n                        :value=\\\"page\\\"\\n                        v-model=\\\"adminStore.currentChannelsPage\\\"\\n                        @change=\\\"() => adminStore.setChannelsPage(page)\\\"\\n                        class=\\\"join-item btn btn-square !bg-none\\\"\\n                        :aria-label=\\\"`${page}`\\\"\\n                    />\\n                  </div>\\n\\n                </div>\\n\\n\\n\\n              </div>\\n              <DynamicModal />\\n\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n</template>\\n\\n\\n<script setup>\\nimport { Inertia } from \\\"@inertiajs/inertia\\\";\\nimport { onMounted, ref, watch } from 'vue'\\nimport throttle from \\\"lodash/throttle\\\"\\nimport { FontAwesomeIcon } from \\\"@fortawesome/vue-fontawesome\\\"\\nimport { usePageSetup } from '@/Utilities/PageSetup'\\nimport { useAppSettingStore } from \\\"@/Stores/AppSettingStore\\\"\\nimport { useAdminStore } from '@/Stores/AdminStore'\\nimport AdminHeader from \\\"@/Components/Pages/Admin/AdminHeader\\\"\\nimport Message from \\\"@/Components/Global/Modals/Messages\\\"\\nimport Pagination from \\\"@/Components/Global/Paginators/Pagination\\\"\\nimport SourceSelector from '@/Components/Pages/Admin/Channels/SourceSelector'\\nimport DynamicModal from '@/Components/Pages/Admin/Channels/DynamicModal'\\nimport AdminAddMistStreamModal from '@/Components/Pages/Admin/Channels/AdminAddMistStreamModal'\\n\\nusePageSetup('admin.channels')\\n\\nconst appSettingStore = useAppSettingStore()\\nconst adminStore = useAdminStore()\\n\\nlet props = defineProps({\\n  // channels: Object,\\n  // mistStreams: Object,\\n  // filters: Object,\\n})\\n\\n// function hasChannelSource (channel) {\\n//     if (channel.source !== null) {\\n//         return channel.source.name\\n//     }\\n// }\\n\\n\\nadminStore.fetchChannels()\\n\\nfunction hasChannelSource(channel) {\\n  if (channel && channel.source && channel.source.name) {\\n    return channel.source.name;\\n  }\\n  return null; // Or return any other default value if needed\\n}\\n\\n// let search = ref(props.filters.search);\\n\\n// watch(search, throttle(function (value) {\\n//   Inertia.get('/admin/channels', {search: value}, {\\n//     preserveState: true,\\n//     replace: true\\n//   });\\n// }, 300));\\n\\nconst hasPriority = (playbackPriorityType) => {\\n  if (playbackPriorityType) {\\n    return true\\n  }\\n}\\n\\nconst openModal = (channel, type) => {\\n  // adminStore.reset()\\n  // adminStore.fetchChannels()\\n  adminStore.setSelectedChannel(channel)\\n  adminStore.setCurrentType(type)\\n  adminStore.fetchItems(type) // Optionally prefetch items if the modal needs it\\n  document.getElementById('dynamicModal').showModal() // Assuming the modal has an ID of 'dynamicModal'\\n};\\n\\nconst setPlaybackPriorityType = async (channel, priorityType) => {\\n  const dataToSend = { setPriorityType: priorityType }\\n  try {\\n    const response = await axios.post(`/admin/channels/${channel.id}/setPlaybackPriorityType`, dataToSend)\\n    // do something here\\n  } catch(error) {\\n        console.log(error)\\n      }\\n}\\nconst reloadChannelsList = () => {\\n  adminStore.fetchChannels()\\n}\\n\\n</script>\\n\\n<style scoped>\\n\\n#tooltip {\\n  background: #333;\\n  color: white;\\n  font-weight: bold;\\n  padding: 4px 8px;\\n  font-size: 13px;\\n  border-radius: 4px;\\n}\\n\\n:deep(.popper) {\\n  background: #333333;\\n  padding: 2px;\\n  border-radius: 20px;\\n  color: #fff;\\n  font-weight: bold;\\n  text-transform: uppercase;\\n}\\n\\n:deep(.popper #arrow::before) {\\n  background: #333333;\\n}\\n\\n:deep(.popper:hover),\\n:deep(.popper:hover > #arrow::before) {\\n  background: #333333;\\n}\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import script from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"mx-4 my-4\">\n    <div class=\"alert alert-info mt-4\"\n         v-if=\"props.flash.message\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" class=\"stroke-current shrink-0 w-6 h-6\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n      </svg>\n      <span>{{ props.flash.message }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-success mt-4 mx-3\"\n         v-if=\"props.flash.success\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.success }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-warning mt-4 mx-3\"\n         v-if=\"props.flash.warning\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"/>\n      </svg>\n      <span>{{ props.flash.warning }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-error mt-4 mx-3\"\n         v-if=\"props.flash.error\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.error }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n  </div>\n\n</template>\n\n<script setup>\nimport { Inertia } from \"@inertiajs/inertia\"\nimport { computed } from \"vue\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\n\nconst appSettingStore = useAppSettingStore()\n\nappSettingStore.showFlashMessage = true\n\nlet props = defineProps({\n  flash: Object,\n\n})\n\nconst messageType = computed(() => ({\n  'text-green-700 bg-green-100 dark:bg-green-200 dark:text-green-800': props.flash.success,\n  'text-blue-700 bg-blue-100 dark:bg-blue-200 dark:text-blue-800': props.flash.message,\n  'text-orange-700 bg-orange-100 dark:bg-orange-200 dark:text-orange-800': props.flash.warning,\n  'text-red-700 bg-red-100 dark:bg-red-200 dark:text-red-800': props.flash.error,\n}))\n\nconst clearFlashMessage = async () => {\n  await Inertia.post(route('flash.clear'));\n  Inertia.reload();\n};\n</script>\n","import script from \"./Pagination.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Pagination.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div v-if=\"data.last_page > 1\" class=\"flex flex-wrap justify-center my-4 space-x-4 space-y-2\">\n    <div></div>\n    <Component\n        :is=\"link.url ? 'Link' : 'span'\"\n        v-for=\"(link, key) in data.links\"\n        :key=\"key\"\n        :href=\"link.url\"\n        @click.prevent=\"saveScrollPosition\"\n        v-html=\"link.label\"\n        class=\"px-4 py-3 text-sm leading-4 h-fit\"\n        :class=\"{ 'text-white bg-orange-400 hover:bg-orange-400 dark:bg-orange-400 dark:hover:bg-orange-400': link.active,\n                      'rounded mt-2 mr-0.5 text-gray-300 dark:text-gray-700': ! link.url,\n                      'rounded bg-gray-200 hover:bg-gray-300 dark:bg-gray-800 dark:hover:bg-gray-600 text-gray-800 dark:text-gray-50 focus:text-indigo-500 hover:shadow': link.url }\"\n    />\n  </div>\n</template>\n\n\n<script setup>\nimport { onMounted, onUpdated } from 'vue'\n\ndefineProps({\n  data: Object,\n})\nlet savedScrollPosition = 0\nconst saveScrollPosition = () => {\n  savedScrollPosition = window.scrollY\n}\nonMounted(() => {\n  window.scrollTo(0, savedScrollPosition)\n})\n</script>\n\n\n<!--class=\"px-1 text-gray-800 dark:text-gray-50 dark:hover:text-blue-400 hover:text-blue-400\"-->\n<!--:class=\"{ 'text-gray-300 dark:text-gray-700 dark:hover:text-gray-700 hover:text-gray-300': ! link.url, 'font-bold' : link.active }\"-->\n","<template>\n  <header>\n    <div class=\"flex justify-between my-3\">\n      <div class=\"mb-4\">\n        <h1 class=\"text-3xl font-semibold\">\n          <slot/>\n        </h1>\n      </div>\n      <div>\n        <div class=\"flex flex-wrap-reverse justify-end gap-2\">\n          <Link :href=\"`/admin/settings`\">\n            <button\n                class=\"px-4 py-2 text-white bg-blue-600 hover:bg-blue-500 rounded-lg\"\n            >Admin Settings\n            </button>\n          </Link>\n        </div>\n      </div>\n    </div>\n  </header>\n\n</template>\n\n<script setup>\n\n</script>\n","import { render } from \"./AdminHeader.vue?vue&type=template&id=02887064\"\nconst script = {}\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <!--  <div class=\"source-selector\" :class=\"{'is-priority': source?.isPriority, 'is-playing': source?.isPlaying, 'is-fallback': source?.isFallback, 'has-error': source?.hasError}\">-->\n  <div\n      :class=\"['source-selector', {'is-priority': source?.playback_priority_type, 'is-playing': source?.isPlaying, 'is-fallback': source?.isFallback, 'has-error': source?.hasError}]\">\n    <div>\n      <!-- Display the source status here (playing, fallback, error) -->\n      <div v-if=\"source?.playback_priority_type === sourceType\" class=\"btn btn-xs mt-1 text-white bg-green-500 hover:bg-green-500\">Priority</div>\n      <span>\n\n      </span>\n      <!-- Icon or button to set this source as priority -->\n      <!--      <button class=\"btn btn-xs\" v-if=\"!source?.playback_priority_type\" @click=\"setPriority\">Set as Priority</button>-->\n    </div>\n  </div>\n\n  <!--  <div v-if=\"source?.playback_priority_type === 'mistStream'\">-->\n  <!--    <button class=\"btn btn-xs hover:bg-green-500 bg-green-500\">Priority</button>-->\n  <!--  </div>-->\n\n  <button v-if=\"source?.playback_priority_type !== sourceType\" class=\"btn btn-xs mt-1\"\n          @click=\"setPriority\">Set as Priority\n  </button>\n\n\n  <dialog :id=\"`confirmPriorityChangeModal`\" class=\"modal\">\n    <div class=\"modal-box\">\n      <h3 class=\"font-bold text-lg\">Confirm Selection for {{ adminStore.sourceSelector?.source?.name }}</h3>\n      <p class=\"py-4\">\n        Are you sure you want to change priority to <span class=\"font-bold\">{{ adminStore.sourceSelector?.sourceType }}</span>?\n      </p>\n      <div class=\"modal-action\">\n        <button class=\"btn\" @click=\"confirmPriorityChange\">Confirm</button>\n        <button class=\"btn\" onclick=\"document.getElementById('confirmPriorityChangeModal').close()\">Cancel</button>\n      </div>\n    </div>\n  </dialog>\n\n\n</template>\n\n<script setup>\nimport { useAdminStore } from '@/Stores/AdminStore'\nimport { ref } from 'vue'\n\nconst adminStore = useAdminStore()\n\nlet props = defineProps([\n  'source',\n  'sourceType',\n])\n\n// const setPriority = (sourceType) => {\n//   emit('change', { sourceType, priority: true });\n//   // Implement function to make API call to update the backend\n// };\n\n\nconst setPriority = () => {\nadminStore.sourceSelector.source = props.source\nadminStore.sourceSelector.sourceType = props.sourceType\n  document.getElementById('confirmPriorityChangeModal').showModal() // Open the modal for confirmation\n}\n\nconst confirmPriorityChange = async () => {\n  await adminStore.setPlaybackPriorityType(adminStore.sourceSelector.source, adminStore.sourceSelector.sourceType)\n  document.getElementById('confirmPriorityChangeModal').close() // Close the modal\n\n}\n\n// const setPriority = async () => {\n//   // Directly call the store action to update the priority.\n//   await adminStore.setPlaybackPriorityType(props.source, props.sourceType);\n//   // No need to emit an event to the parent component.\n// };\n\n</script>\n\n<style scoped>\n.source-selector {\n  /* Base styles */\n  //margin-top: 0.5rem;\n}\n\n.is-playing {\n  /* Styles for playing status */\n}\n\n.is-priority {\n  /* Styles for isPriority status */\n  color: black;\n  font-weight: 300;\n}\n\n.is-fallback {\n  /* Styles for fallback status */\n}\n\n.has-error {\n  /* Styles for error status */\n}\n\n</style>\n","import api from \"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-9.use[1]!../../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-9.use[2]!../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./SourceSelector.vue?vue&type=style&index=0&id=c559967c&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./SourceSelector.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./SourceSelector.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./SourceSelector.vue?vue&type=style&index=0&id=c559967c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-c559967c\"]])\n\nexport default __exports__","import script from \"./DynamicModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./DynamicModal.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <dialog id=\"dynamicModal\" class=\"modal\">\n    <div class=\"modal-box w-11/12 max-w-5xl\">\n\n      <div class=\"flex flex-row justify-between align-bottom\">\n        <div >\n         <h3 class=\"font-bold text-lg\">{{ adminStore.modalHeader }}</h3>\n        </div>\n        <div>\n          <h3>{{ adminStore?.selectedChannel?.name }}</h3>\n        </div>\n      </div>\n      <div class=\"flex justify-center mb-6\">\n        <div class=\"flex items-center mt-6 xl:mt-0\">\n          <div class=\"relative\">\n            <input v-model=\"adminStore.searchTerm\" @input=\"debouncedFetchItems\" type=\"search\" class=\"bg-gray-50 text-black text-sm rounded-full\n                        focus:outline-none focus:shadow w-64 pl-8 px-3 py-1\" placeholder=\"Search...\">\n            <div class=\"absolute top-0 flex items-center h-full ml-2\">\n              <svg class=\"fill-current text-gray-400 w-4\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n                <path\n                    d=\"M456.69 421.39 362.6 327.3a173.81 173.81 0 0 0 34.84-104.58C397.44 126.38 319.06 48 222.72 48S48 126.38 48 222.72s78.38 174.72 174.72 174.72A173.81 173.81 0 0 0 327.3 362.6l94.09 94.09a25 25 0 0 0 35.3-35.3ZM97.92 222.72a124.8 124.8 0 1 1 124.8 124.8 124.95 124.95 0 0 1-124.8-124.8Z\"/>\n              </svg>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div>\n        <div class=\"overflow-x-auto\">\n          <table class=\"table table-xs\">\n            <thead>\n            <tr>\n              <th>\n                <span v-if=\"adminStore.currentType === 'channelPlaylist'\">Active</span>\n                <span v-if=\"adminStore.currentType === 'mistStream'\">Active</span>\n              </th>\n              <th>\n                <span v-if=\"adminStore.currentType === 'channelPlaylist'\">Name</span>\n                <span v-if=\"adminStore.currentType === 'mistStream'\">Source</span>\n              </th>\n              <th>\n                <span v-if=\"adminStore.currentType === 'channelPlaylist'\">Type</span>\n                <span v-if=\"adminStore.currentType === 'mistStream'\">Name</span>\n              </th>\n              <th>\n                <span v-if=\"adminStore.currentType === 'channelPlaylist'\">Priority</span>\n                <span v-if=\"adminStore.currentType === 'mistStream'\">MIME Type</span>\n              </th>\n              <th>\n                <span v-if=\"adminStore.currentType === 'channelPlaylist'\">Repeat Mode</span>\n                <span v-if=\"adminStore.currentType === 'mistStream'\">Comment</span>\n              </th>\n              <th>\n                <span v-if=\"adminStore.currentType === 'channelPlaylist'\">Start Time</span>\n                <span v-if=\"adminStore.currentType === 'mistStream'\">Created On</span>\n              </th>\n              <th>\n                <span v-if=\"adminStore.currentType === 'channelPlaylist'\">End Time</span>\n                <span v-if=\"adminStore.currentType === 'mistStream'\">Updated At</span>\n              </th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr v-for=\"item in adminStore.paginatedItems\" :key=\"item.id\" @click=\"selectItem(item)\" class=\"hover:bg-blue-300 hover:cursor-pointer\" :class=\"{'bg-yellow-500': item.id === adminStore.activeItemId}\">\n              <td>\n                <div v-if=\"adminStore.currentType === 'channelPlaylist'\"><span v-if=\"item.active\" class=\"text-green-500\">Active</span><span v-else class=\"text-red-700\">Inactive</span></div>\n                <div v-if=\"adminStore.currentType === 'mistStream'\"><span v-if=\"item.active\" class=\"text-green-500\">Active</span><span v-else class=\"text-red-700\">Inactive</span></div>\n              </td>\n              <td>\n                <span v-if=\"adminStore.currentType === 'channelPlaylist'\">{{ item.name }}</span>\n                <span v-if=\"adminStore.currentType === 'mistStream'\">{{ item.source }}</span>\n              </td>\n              <td>\n                <span v-if=\"adminStore.currentType === 'channelPlaylist'\">{{ item.type }}</span>\n                <span v-if=\"adminStore.currentType === 'mistStream'\">{{ item.name }}</span>\n              </td>\n              <td>\n                <span v-if=\"adminStore.currentType === 'channelPlaylist'\">{{ item.priority }}</span>\n                <span v-if=\"adminStore.currentType === 'mistStream'\">{{ item.mime_type }}</span>\n              </td>\n              <td>\n                <span v-if=\"adminStore.currentType === 'channelPlaylist'\">{{ item.repeat_mode }}</span>\n                <span v-if=\"adminStore.currentType === 'mistStream'\">{{ item.comment }}</span>\n              </td>\n              <td>\n                <span v-if=\"adminStore.currentType === 'channelPlaylist'\">{{ formatDateTime(item.start_time) }}</span>\n                <span v-if=\"adminStore.currentType === 'mistStream'\">{{ formatDateTime(item.created_at) }}</span>\n              </td>\n              <td>\n                <span v-if=\"adminStore.currentType === 'channelPlaylist'\">{{ formatDateTime(item.end_time) }}</span>\n                <span v-if=\"adminStore.currentType === 'mistStream'\">{{ formatDateTime(item.updated_at) }}</span>\n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </div>\n        <div class=\"flex flex-row justify-center mt-6 w-full\">\n          <div class=\"join grid grid-cols-2\">\n            <button class=\"join-item btn btn-sm btn-outline\" @click=\"adminStore.prevPage\">Previous page</button>\n            <button class=\"join-item btn btn-sm btn-outline\" @click=\"adminStore.nextPage\">Next</button>\n          </div>\n        </div>\n      </div>\n\n\n\n\n      <dialog id=\"confirmSelectionModal\" class=\"modal\">\n        <div class=\"modal-box\">\n          <h3 class=\"font-bold text-lg\">Confirm Selection</h3>\n          <p class=\"py-4\">\n            Are you sure you want to select <span id=\"selectedItemName\"></span>?\n          </p>\n          <div class=\"modal-action\">\n            <button class=\"btn\" @click=\"confirmSelection\">Confirm</button>\n            <button class=\"btn\" onclick=\"document.getElementById('confirmSelectionModal').close()\">Cancel</button>\n          </div>\n        </div>\n      </dialog>\n\n\n\n\n      <div class=\"modal-action\">\n        <form method=\"dialog\">\n          <!-- if there is a button, it will close the modal -->\n          <button class=\"btn\" @click=\"adminStore.clearSelectedChannelAndItems\">Close</button>\n        </form>\n      </div>\n    </div>\n  </dialog>\n</template>\n\n<script setup>\nimport { ref, watch, computed, onMounted } from 'vue'\nimport { useAdminStore } from '@/Stores/AdminStore'\nimport debounce from \"lodash/debounce\"\n\nconst adminStore = useAdminStore();\n// const searchTerm = ref('');\n\nlet props = defineProps({\n  type: String\n})\n\nconst items = computed(() => adminStore.filteredItems);\nconst currentItemId = computed(() => adminStore.activeItem);\n\n// const searchItems = () => {\n//   adminStore.searchItems(adminStore.type, searchTerm.value);\n// };\n//\n// const debouncedFetchItems = debounce(adminStore.searchItems, 300);\n\n// watch(searchTerm, debouncedFetchItems);\n\n\nconst selectedItem = ref(null); // A reactive property to hold the currently selected item\n\nconst selectItem = (item) => {\n  selectedItem.value = item; // Store the item temporarily\n  document.getElementById('selectedItemName').textContent = item.name; // Display the name in the modal\n  document.getElementById('confirmSelectionModal').showModal(); // Open the modal for confirmation\n};\n\nconst confirmSelection = async () => {\n  if (selectedItem.value) {\n    await adminStore.updateActiveItemId(selectedItem.value.id);\n    document.getElementById('confirmSelectionModal').close(); // Close the modal\n    // Handle additional logic for item selection if necessary\n  }\n};\n// const selectItem = async (item) => {\n//   await adminStore.updateActiveItemId(item.id);\n//   // Handle additional logic for item selection if necessary\n// };\n\nonMounted(async () => {\n  await adminStore.fetchItems(props.type)\n})\n// adminStore.fetchItems(props.type)\n\n// onMounted(adminStore.fetchItems(adminStore.type)); // Optionally fetch items when the modal mounts\n\n// const fetchItems = () => {\n//   Inertia.get(`/admin/channels/search/${props.type}`, { search: searchTerm.value }, {\n//     preserveState: false,\n//     onSuccess: (page) => {\n//       items.value = page.props.items; // Assume your backend sends back 'items'\n//     }\n//   });\n// };\n\n// watch(searchTerm, fetchItems);\n\n// onMounted(fetchItems); // Optionally fetch items when the modal mounts\n</script>\n\n\n<!--<script setup>-->\n<!--import { ref, defineProps, defineEmits } from 'vue';-->\n\n<!--const props = defineProps({-->\n<!--  showModal: Boolean,-->\n<!--  currentItem: Object,-->\n<!--  itemsType: String-->\n<!--});-->\n\n<!--const emits = defineEmits(['update:item', 'close']);-->\n\n<!--const searchTerm = ref('');-->\n<!--const items = ref([]);-->\n\n<!--const fetchItems = async () => {-->\n<!--  // Fetch items based on `itemsType` and `searchTerm`-->\n<!--  // Update `items` with the fetched data-->\n<!--};-->\n\n<!--const selectItem = (item) => {-->\n<!--  emits('update:item', { type: props.itemsType, item });-->\n<!--};-->\n\n<!--const closeModal = () => {-->\n<!--  emits('close');-->\n<!--};-->\n<!--</script>-->\n","import script from \"./AdminAddMistStreamModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AdminAddMistStreamModal.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <button class=\"btn btn-sm bg-green-500 hover:bg-green-600 text-white px-4 py-2 mr-2 rounded-lg disabled:bg-gray-400\"\n          onclick=\"adminAddMistStreamModal.showModal()\">\n    Add Mist Stream\n  </button>\n  <dialog id=\"adminAddMistStreamModal\" class=\"modal\">\n    <div class=\"modal-box w-11/12 max-w-5xl\">\n      <h3 class=\"font-bold text-lg\">Add Mist Stream</h3>\n\n      <div>\n\n\n      </div>\n\n\n\n\n\n\n\n\n      <div class=\"modal-action\">\n        <form method=\"dialog\">\n          <!-- if there is a button, it will close the modal -->\n          <button class=\"btn\">Close</button>\n        </form>\n      </div>\n    </div>\n  </dialog>\n\n</template>\n<script setup>\nimport { ref } from 'vue'\ndefineProps({\n  mistStream: Object,\n})\nconst modalVisible = ref(false);\n\nfunction toggleModal() {\n  console.log('Toggling modal:', !modalVisible.value);\n  modalVisible.value = !modalVisible.value;\n}\n</script>","<template>\n  <Head title=\"Admin/Channels\"/>\n\n  <div class=\"place-self-center flex flex-col\">\n    <div id=\"topDiv\" class=\"bg-white text-black dark:bg-gray-800 dark:text-gray-50 p-5 mb-10\">\n\n      <Message v-if=\"appSettingStore.showFlashMessage\" :flash=\"$page.props.flash\"/>\n\n      <AdminHeader>Channels</AdminHeader>\n\n      <div class=\"flex flex-row justify-between gap-x-4 mb-3\">\n        <div>\n          <Link :href=\"`#`\">\n            <button\n                class=\"btn btn-sm bg-green-500 hover:bg-green-600 text-white px-4 py-2 mr-2 rounded disabled:bg-gray-400\"\n                disabled\n            >Add Channel\n            </button>\n          </Link>\n          <Link :href=\"`#`\">\n            <button\n                class=\"btn btn-sm bg-green-500 hover:bg-green-600 text-white px-4 py-2 mr-2 rounded disabled:bg-gray-400\"\n                disabled\n            >Add External Source\n            </button>\n          </Link>\n          <Link :href=\"`#`\">\n            <button\n                class=\"btn btn-sm bg-green-500 hover:bg-green-600 text-white px-4 py-2 mr-2 rounded disabled:bg-gray-400\"\n                disabled\n            >Add Channel Playlist\n            </button>\n          </Link>\n          <AdminAddMistStreamModal />\n\n        </div>\n        <input v-model=\"adminStore.searchTerm\" type=\"search\" placeholder=\"Search...\" class=\"border px-2 rounded-lg\"/>\n      </div>\n\n      <div class=\"bg-orange-300 px-2 text-black mb-3\">\n        <p>Add a channel: create playlist and add shows.</p>\n        <p><span class=\"font-semibold\">TRAVIS NOTE: </span>Use FFMPEG to push an .mp4 to a mist stream. This will allow\n          us to schedule video objects from anywhere\n          into our channels, and we can have a channel that loads the current video at the right time spot in the video\n          based on our schedule saved in the database.</p>\n      </div>\n\n      <div class=\"flex flex-col\">\n        <div class=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\n          <div class=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\n            <div class=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\n\n              <div class=\"relative overflow-x-auto shadow-md sm:rounded-lg\">\n                <div\n                    class=\"table w-full text-sm text-left text-gray-500 dark:text-gray-400\"\n                >\n                  <div\n                      class=\"table-header-group text-xs text-gray-700 bg-gray-50 dark:bg-gray-700 dark:text-gray-400\"\n                  >\n                    <div class=\"table-row\">\n                      <div scope=\"col\" class=\"table-cell px-6 py-3 uppercase\">\n                        <font-awesome-icon icon=\"fa-repeat\" class=\"mr-2 cursor-pointer hover:text-blue-500\"\n                                           @click.prevent=\"reloadChannelsList()\"/>\n                        <span class=\"uppercase\">Channel </span>\n                      </div>\n                      <div scope=\"col\" class=\"hidden md:table-cell px-6 py-3 uppercase\">\n                        <span class=\"uppercase\">Current Video</span>\n                      </div>\n                      <div scope=\"col\" class=\"table-cell px-6 py-3 uppercase\">\n                        <span class=\"uppercase\">External Source</span> <br/>\n                        <span class=\"italic text-xs text-gray-400\"></span>\n                      </div>\n                      <div scope=\"col\" class=\"px-6 py-3 max-w-64\">\n                        <span class=\"uppercase\">Channel Playlist</span>\n                      </div>\n                      <div scope=\"col\" class=\"table-cell px-6 py-3\">\n                        <span class=\"uppercase\">Mist Stream</span> <br/>\n                        <span class=\"italic text-xs text-gray-400\"></span>\n                      </div>\n\n                    </div>\n                  </div>\n                  <div class=\"table-row-group\">\n                    <div\n                        v-for=\"channel in adminStore.paginatedChannels\"\n                        :key=\"channel.id\"\n                        class=\"table-row bg-white border-b dark:bg-gray-800 dark:border-gray-700\"\n                    >\n                      <div\n                          scope=\"row\"\n                          class=\"table-cell min-w-[8rem] px-6 py-4 font-medium text-gray-900 dark:text-white whitespace-nowrap\"\n                      >\n                        <span>{{ channel.name }}</span>\n                        <div v-if=\"channel?.isLive\" class=\"ml-2 text-xs badge badge-secondary badge-outline\">live</div>\n\n                      </div>\n                      <div\n                          scope=\"row\"\n                          class=\"md:table-cell px-6 py-4 font-medium text-gray-900 dark:text-white whitespace-nowrap\"\n                      >\n                        <div v-if=\"channel?.currentVideo\">\n                          <Popper\n                              hover openDelay=\"50\" closeDelay=\"50\" offset-skid=\"0\" offset-distance=\"0\"\n                              placement=\"bottom\"\n\n                          >\n                            <template #content>\n                              <div class=\"text-xs\" id=\"tooltip\">\n                                <div>ID: {{ channel?.currentVideo.id }}</div>\n                                <div>File Name: {{ channel?.currentVideo.file_name }}</div>\n                                <div>Type: {{ channel?.currentVideo.type }}</div>\n                                <div>Folder: {{ channel?.currentVideo.folder }}</div>\n                                <div>Storage Location: {{ channel?.currentVideo.storage_location }}</div>\n                                <div>Processing: <span v-if=\"channel?.currentVideo.is_processing\">true</span><span\n                                    v-else>false</span></div>\n                                <div>Length: {{ channel?.currentVideo.length }}</div>\n                              </div>\n                            </template>\n\n                            <span v-if=\"channel?.currentVideo.name\" class=\"cursor-help text-green-500 font-semibold\">{{\n                                channel?.currentVideo.name\n                              }}</span>\n                            <span v-else class=\"cursor-help text-blue-500 font-semibold\">Video has no name</span>\n\n                          </Popper>\n\n                        </div>\n                        <div v-else class=\"italic text-gray-300 text-xs\">No video object playing</div>\n                      </div>\n                      <div class=\"table-cell px-6 py-4\">\n                        <div v-if=\"channel?.externalSource\">\n                          <Popper\n                              hover openDelay=\"50\" closeDelay=\"50\" offset-skid=\"0\" offset-distance=\"0\"\n                              placement=\"bottom\"\n\n                          >\n                            <template #content>\n                              <div class=\"text-xs\" id=\"tooltip\">\n                                <div>ID: {{ channel?.externalSource.id }}</div>\n                                <div>Name: {{ channel?.externalSource.name }}</div>\n                                <div>Path: {{ channel?.externalSource.path }}</div>\n                                <div>Type: {{ channel?.externalSource.type }}</div>\n                                <div>Provider: {{ channel?.externalSource.provider }}</div>\n                              </div>\n                            </template>\n\n                            <span class=\"cursor-help text-orange-500 font-semibold\">{{\n                                hasChannelSource(channel)\n                              }}</span>\n\n                          </Popper>\n\n\n                        </div>\n                        <div v-else>\n                          <button @click=\"openModal(channel, 'externalSource')\">\n                            <div v-if=\"channel?.channel_external_source\" class=\"text-gray-700 tracking-wide\">\n                              <span v-if=\"channel.playback_priority_type === 'externalSource'\" :class=\"{'text-black font-bold': channel.playback_priority_type === 'externalSource'}\">{{ channel?.channel_external_source.name }}</span>\n                              <span v-else>{{ channel?.channel_external_source.name }}</span>\n                            </div>\n                            <span v-else class=\"italic text-gray-300 text-sm\">no source</span>\n                          </button>\n                          <!-- Status indicator + action to change source -->\n                          <source-selector :source=\"channel\"\n                                           :source-type=\"'externalSource'\" />\n<!--                          -->\n<!--                          <div v-if=\"channel.playback_priority_type === 'externalSource'\">-->\n<!--                            <button class=\"btn btn-xs hover:bg-green-500 bg-green-500\">Priority</button>-->\n<!--                          </div>-->\n<!--                          <div v-else>-->\n<!--                            <button class=\"btn btn-xs\"-->\n<!--                                    :class=\"{'bg-green-500':channel.playback_priority_type === 'externalSource'}\"-->\n<!--                                    @click=\"adminStore.setPlaybackPriorityType(channel,'externalSource')\">Set as Priority</button>-->\n<!--                          </div>-->\n                        </div>\n\n                      </div>\n                      <div class=\"table-cell px-6 py-4\">\n                        <div v-if=\"channel?.channelPlaylist\">\n                          <Popper\n                              hover openDelay=\"50\" closeDelay=\"50\" offset-skid=\"0\" offset-distance=\"0\"\n                              placement=\"bottom\"\n\n                          >\n                            <template #content>\n                              <div class=\"text-xs\" id=\"tooltip\">\n                                <div>ID: {{ channel?.channelPlaylist.id }}</div>\n                                <div>Name: {{ channel?.channelPlaylist.name }}</div>\n                                <div>Path: {{ channel?.channelPlaylist.path }}</div>\n                                <div>Type: {{ channel?.channelPlaylist.type }}</div>\n                                <div>Provider: {{ channel?.channelPlaylist.provider }}</div>\n                              </div>\n                            </template>\n\n                            <span class=\"cursor-help text-orange-500 font-semibold\"></span>\n\n                          </Popper>\n\n                        </div>\n                        <div v-else>\n                          <button @click=\"openModal(channel, 'channelPlaylist')\">\n                            <div v-if=\"channel?.channel_playlist\" class=\"text-gray-700 tracking-wide\">\n                              <span v-if=\"channel.playback_priority_type === 'channelPlaylist'\" :class=\"{'text-black font-bold': channel.playback_priority_type === 'channelPlaylist'}\">{{ channel?.channel_playlist.name }}</span>\n                              <span v-else>{{ channel?.channel_playlist.name }}</span>\n                            </div>\n                            <span v-else class=\"italic text-gray-300 text-sm\">no playlist</span>\n                          </button>\n                          <source-selector :source=\"channel\"\n                                           :source-type=\"'channelPlaylist'\" />\n\n<!--                          <div v-if=\"channel.playback_priority_type === 'channelPlaylist'\">-->\n<!--                            <button class=\"btn btn-xs hover:bg-green-500 bg-green-500\">Priority</button>-->\n<!--                          </div>-->\n<!--                          <div v-else>-->\n<!--                            <button class=\"btn btn-xs\"-->\n<!--                                    :class=\"{'bg-green-500':channel.playback_priority_type === 'channelPlaylist'}\"-->\n<!--                                    @click=\"adminStore.setPlaybackPriorityType(channel,'channelPlaylist')\">Set as Priority</button>-->\n<!--                          </div>-->\n                        </div>\n\n                      </div>\n                      <div class=\"table-cell px-6 py-4\">\n                        <button @click=\"openModal(channel, 'mistStream')\">\n                          <div v-if=\"channel?.mist_stream\" class=\"text-gray-700 tracking-wide\">\n                            <span v-if=\"channel.playback_priority_type === 'mistStream'\" :class=\"{'text-black font-bold': channel.playback_priority_type === 'mistStream'}\">{{ channel?.mist_stream.name }}</span>\n                            <span v-else>{{ channel?.mist_stream.name }}</span>\n                          </div>\n                          <span v-else class=\"italic text-gray-300 text-sm\">no mist stream</span>\n                        </button>\n                        <!-- Status indicator + action to change source -->\n                        <source-selector :source=\"channel\"\n                                         :source-type=\"'mistStream'\" />\n<!--                        <div v-if=\"channel.playback_priority_type === 'mistStream'\">-->\n<!--                          <button class=\"btn btn-xs hover:bg-green-500 bg-green-500\">Priority</button>-->\n<!--                        </div>-->\n<!--                        <div v-else>-->\n<!--                          <button class=\"btn btn-xs\"-->\n<!--                                  :class=\"{'bg-green-500':channel.playback_priority_type === 'mistStream'}\"-->\n<!--                                  @click=\"adminStore.setPlaybackPriorityType(channel,'mistStream')\">Set as Priority</button>-->\n<!--                        </div>-->\n                      </div>\n\n                    </div>\n                  </div>\n                </div>\n                <!-- Paginator -->\n                <div class=\"flex flex-row justify-center my-6 w-full\">\n<!--                  <div class=\"join grid grid-cols-2\">-->\n<!--                    <button class=\"join-item btn btn-sm btn-outline\" @click=\"adminStore.prevChannelsPage\">Previous page</button>-->\n<!--                    <button class=\"join-item btn btn-sm btn-outline\" @click=\"adminStore.nextChannelsPage\">Next</button>-->\n<!--                  </div>-->\n                  <div class=\"join\">\n                    <input\n                        v-for=\"page in adminStore.totalChannelsPages\"\n                        :key=\"page\"\n                        type=\"radio\"\n                        name=\"options\"\n                        :value=\"page\"\n                        v-model=\"adminStore.currentChannelsPage\"\n                        @change=\"() => adminStore.setChannelsPage(page)\"\n                        class=\"join-item btn btn-square !bg-none\"\n                        :aria-label=\"`${page}`\"\n                    />\n                  </div>\n\n                </div>\n\n\n\n              </div>\n              <DynamicModal />\n\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n</template>\n\n\n<script setup>\nimport { Inertia } from \"@inertiajs/inertia\";\nimport { onMounted, ref, watch } from 'vue'\nimport throttle from \"lodash/throttle\"\nimport { FontAwesomeIcon } from \"@fortawesome/vue-fontawesome\"\nimport { usePageSetup } from '@/Utilities/PageSetup'\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useAdminStore } from '@/Stores/AdminStore'\nimport AdminHeader from \"@/Components/Pages/Admin/AdminHeader\"\nimport Message from \"@/Components/Global/Modals/Messages\"\nimport Pagination from \"@/Components/Global/Paginators/Pagination\"\nimport SourceSelector from '@/Components/Pages/Admin/Channels/SourceSelector'\nimport DynamicModal from '@/Components/Pages/Admin/Channels/DynamicModal'\nimport AdminAddMistStreamModal from '@/Components/Pages/Admin/Channels/AdminAddMistStreamModal'\n\nusePageSetup('admin.channels')\n\nconst appSettingStore = useAppSettingStore()\nconst adminStore = useAdminStore()\n\nlet props = defineProps({\n  // channels: Object,\n  // mistStreams: Object,\n  // filters: Object,\n})\n\n// function hasChannelSource (channel) {\n//     if (channel.source !== null) {\n//         return channel.source.name\n//     }\n// }\n\n\nadminStore.fetchChannels()\n\nfunction hasChannelSource(channel) {\n  if (channel && channel.source && channel.source.name) {\n    return channel.source.name;\n  }\n  return null; // Or return any other default value if needed\n}\n\n// let search = ref(props.filters.search);\n\n// watch(search, throttle(function (value) {\n//   Inertia.get('/admin/channels', {search: value}, {\n//     preserveState: true,\n//     replace: true\n//   });\n// }, 300));\n\nconst hasPriority = (playbackPriorityType) => {\n  if (playbackPriorityType) {\n    return true\n  }\n}\n\nconst openModal = (channel, type) => {\n  // adminStore.reset()\n  // adminStore.fetchChannels()\n  adminStore.setSelectedChannel(channel)\n  adminStore.setCurrentType(type)\n  adminStore.fetchItems(type) // Optionally prefetch items if the modal needs it\n  document.getElementById('dynamicModal').showModal() // Assuming the modal has an ID of 'dynamicModal'\n};\n\nconst setPlaybackPriorityType = async (channel, priorityType) => {\n  const dataToSend = { setPriorityType: priorityType }\n  try {\n    const response = await axios.post(`/admin/channels/${channel.id}/setPlaybackPriorityType`, dataToSend)\n    // do something here\n  } catch(error) {\n        console.log(error)\n      }\n}\nconst reloadChannelsList = () => {\n  adminStore.fetchChannels()\n}\n\n</script>\n\n<style scoped>\n\n#tooltip {\n  background: #333;\n  color: white;\n  font-weight: bold;\n  padding: 4px 8px;\n  font-size: 13px;\n  border-radius: 4px;\n}\n\n:deep(.popper) {\n  background: #333333;\n  padding: 2px;\n  border-radius: 20px;\n  color: #fff;\n  font-weight: bold;\n  text-transform: uppercase;\n}\n\n:deep(.popper #arrow::before) {\n  background: #333333;\n}\n\n:deep(.popper:hover),\n:deep(.popper:hover > #arrow::before) {\n  background: #333333;\n}\n</style>\n","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-9.use[1]!../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-9.use[2]!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./Index.vue?vue&type=style&index=0&id=11c14e80&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./Index.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Index.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Index.vue?vue&type=style&index=0&id=11c14e80&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-11c14e80\"]])\n\nexport default __exports__"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","initialState","channels","items","activeItemId","selectedChannel","currentType","searchTerm","modalHeader","currentPage","itemsPerPage","currentChannelsPage","itemsPerChannelsPage","sourceSelector","source","sourceType","useAdminStore","defineStore","state","actions","assign","this","loadChannels","fetchChannels","_this","axios","get","response","data","console","log","setSelectedChannel","item","setCurrentType","clearSelectedChannelAndItems","fetchItems","_this2","_callee","_response","_response2","_context","fetch","json","mist_stream_id","channel_external_source_id","channel_playlist_id","updateActiveItemId","id","_this3","_callee2","_context2","setMistStream","setChannelPlaylist","setExternalSource","setPlaybackPriorityType","channel","priorityType","_this4","_callee3","dataToSend","index","_context3","setPriorityType","post","concat","success","findIndex","t0","mistStreamId","_this5","_callee4","_context4","channelPlaylistId","_this6","_callee5","_context5","externalSourceId","_this7","_callee6","_context6","nextPage","totalPages","Math","ceil","prevPage","setPage","page","nextChannelsPage","prevChannelsPage","setChannelsPage","getters","filteredItems","currentItem","find","activeItem","paginatedItems","start","end","paginatedChannels","totalChannelsPages","usePageSetup","pageName","userStore","useUserStore","appSettingStore","useAppSettingStore","videoPlayerStore","useVideoPlayerStore","showFlashMessage","pageIsHidden","isMobile","ott","makeVideoTopRight","onBeforeMount","pageReload","window","location","reload","onMounted","search","topDiv","document","getElementById","scrollIntoView","setPrevUrl","noLayout","showOttButtons","___CSS_LOADER_EXPORT___","module","props","__props","clearFlashMessage","computed","flash","message","warning","_ref","Inertia","route","savedScrollPosition","saveScrollPosition","scrollY","scrollTo","class","_createElementVNode","script","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_renderSlot","_ctx","$slots","_hoisted_4","_createVNode","_component_Link","href","_withCtx","_hoisted_5","_","adminStore","setPriority","showModal","confirmPriorityChange","close","options","locals","selectedItem","ref","confirmSelection","textContent","hasChannelSource","openModal"],"sourceRoot":""}
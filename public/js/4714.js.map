{"version":3,"file":"js/4714.js","mappings":";kbACAA,EAAA,kBAAAC,CAAA,MAAAC,EAAAD,EAAA,GAAAE,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAK,gBAAA,SAAAP,EAAAD,EAAAE,GAAAD,EAAAD,GAAAE,EAAAO,KAAA,EAAAC,EAAA,mBAAAC,OAAAA,OAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAjB,EAAAD,EAAAE,GAAA,OAAAC,OAAAK,eAAAP,EAAAD,EAAA,CAAAS,MAAAP,EAAAiB,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAApB,EAAAD,EAAA,KAAAkB,EAAA,aAAAjB,GAAAiB,EAAA,SAAAjB,EAAAD,EAAAE,GAAA,OAAAD,EAAAD,GAAAE,CAAA,WAAAoB,EAAArB,EAAAD,EAAAE,EAAAG,GAAA,IAAAK,EAAAV,GAAAA,EAAAI,qBAAAmB,EAAAvB,EAAAuB,EAAAX,EAAAT,OAAAqB,OAAAd,EAAAN,WAAAU,EAAA,IAAAW,EAAApB,GAAA,WAAAE,EAAAK,EAAA,WAAAH,MAAAiB,EAAAzB,EAAAC,EAAAY,KAAAF,CAAA,UAAAe,EAAA1B,EAAAD,EAAAE,GAAA,WAAA0B,KAAA,SAAAC,IAAA5B,EAAA6B,KAAA9B,EAAAE,GAAA,OAAAD,GAAA,OAAA2B,KAAA,QAAAC,IAAA5B,EAAA,EAAAD,EAAAsB,KAAAA,EAAA,IAAAS,EAAA,iBAAAC,EAAA,iBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,YAAAZ,IAAA,UAAAa,IAAA,UAAAC,IAAA,KAAAC,EAAA,GAAApB,EAAAoB,EAAA1B,GAAA,8BAAA2B,EAAApC,OAAAqC,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAA,MAAAD,GAAAA,IAAAvC,GAAAG,EAAAyB,KAAAW,EAAA7B,KAAA0B,EAAAG,GAAA,IAAAE,EAAAN,EAAAjC,UAAAmB,EAAAnB,UAAAD,OAAAqB,OAAAc,GAAA,SAAAM,EAAA3C,GAAA,0BAAA4C,SAAA,SAAA7C,GAAAkB,EAAAjB,EAAAD,GAAA,SAAAC,GAAA,YAAA6C,QAAA9C,EAAAC,EAAA,gBAAA8C,EAAA9C,EAAAD,GAAA,SAAAgD,EAAA9C,EAAAK,EAAAG,EAAAE,GAAA,IAAAE,EAAAa,EAAA1B,EAAAC,GAAAD,EAAAM,GAAA,aAAAO,EAAAc,KAAA,KAAAZ,EAAAF,EAAAe,IAAAE,EAAAf,EAAAP,MAAA,OAAAsB,GAAA,UAAAkB,EAAAlB,IAAA1B,EAAAyB,KAAAC,EAAA,WAAA/B,EAAAkD,QAAAnB,EAAAoB,SAAAC,MAAA,SAAAnD,GAAA+C,EAAA,OAAA/C,EAAAS,EAAAE,EAAA,aAAAX,GAAA+C,EAAA,QAAA/C,EAAAS,EAAAE,EAAA,IAAAZ,EAAAkD,QAAAnB,GAAAqB,MAAA,SAAAnD,GAAAe,EAAAP,MAAAR,EAAAS,EAAAM,EAAA,aAAAf,GAAA,OAAA+C,EAAA,QAAA/C,EAAAS,EAAAE,EAAA,IAAAA,EAAAE,EAAAe,IAAA,KAAA3B,EAAAK,EAAA,gBAAAE,MAAA,SAAAR,EAAAI,GAAA,SAAAgD,IAAA,WAAArD,GAAA,SAAAA,EAAAE,GAAA8C,EAAA/C,EAAAI,EAAAL,EAAAE,EAAA,WAAAA,EAAAA,EAAAA,EAAAkD,KAAAC,EAAAA,GAAAA,GAAA,aAAA3B,EAAA1B,EAAAE,EAAAG,GAAA,IAAAE,EAAAwB,EAAA,gBAAArB,EAAAE,GAAA,GAAAL,IAAA0B,EAAA,MAAAqB,MAAA,mCAAA/C,IAAA2B,EAAA,cAAAxB,EAAA,MAAAE,EAAA,OAAAH,MAAAR,EAAAsD,MAAA,OAAAlD,EAAAmD,OAAA9C,EAAAL,EAAAwB,IAAAjB,IAAA,KAAAE,EAAAT,EAAAoD,SAAA,GAAA3C,EAAA,KAAAE,EAAA0C,EAAA5C,EAAAT,GAAA,GAAAW,EAAA,IAAAA,IAAAmB,EAAA,gBAAAnB,CAAA,cAAAX,EAAAmD,OAAAnD,EAAAsD,KAAAtD,EAAAuD,MAAAvD,EAAAwB,SAAA,aAAAxB,EAAAmD,OAAA,IAAAjD,IAAAwB,EAAA,MAAAxB,EAAA2B,EAAA7B,EAAAwB,IAAAxB,EAAAwD,kBAAAxD,EAAAwB,IAAA,gBAAAxB,EAAAmD,QAAAnD,EAAAyD,OAAA,SAAAzD,EAAAwB,KAAAtB,EAAA0B,EAAA,IAAAK,EAAAX,EAAA3B,EAAAE,EAAAG,GAAA,cAAAiC,EAAAV,KAAA,IAAArB,EAAAF,EAAAkD,KAAArB,EAAAF,EAAAM,EAAAT,MAAAM,EAAA,gBAAA1B,MAAA6B,EAAAT,IAAA0B,KAAAlD,EAAAkD,KAAA,WAAAjB,EAAAV,OAAArB,EAAA2B,EAAA7B,EAAAmD,OAAA,QAAAnD,EAAAwB,IAAAS,EAAAT,IAAA,YAAA6B,EAAA1D,EAAAE,GAAA,IAAAG,EAAAH,EAAAsD,OAAAjD,EAAAP,EAAAa,SAAAR,GAAA,GAAAE,IAAAN,EAAA,OAAAC,EAAAuD,SAAA,eAAApD,GAAAL,EAAAa,SAAA,SAAAX,EAAAsD,OAAA,SAAAtD,EAAA2B,IAAA5B,EAAAyD,EAAA1D,EAAAE,GAAA,UAAAA,EAAAsD,SAAA,WAAAnD,IAAAH,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAA,IAAAkC,UAAA,oCAAA1D,EAAA,aAAA8B,EAAA,IAAAzB,EAAAiB,EAAApB,EAAAP,EAAAa,SAAAX,EAAA2B,KAAA,aAAAnB,EAAAkB,KAAA,OAAA1B,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAAnB,EAAAmB,IAAA3B,EAAAuD,SAAA,KAAAtB,EAAA,IAAAvB,EAAAF,EAAAmB,IAAA,OAAAjB,EAAAA,EAAA2C,MAAArD,EAAAF,EAAAgE,YAAApD,EAAAH,MAAAP,EAAA+D,KAAAjE,EAAAkE,QAAA,WAAAhE,EAAAsD,SAAAtD,EAAAsD,OAAA,OAAAtD,EAAA2B,IAAA5B,GAAAC,EAAAuD,SAAA,KAAAtB,GAAAvB,GAAAV,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAA,IAAAkC,UAAA,oCAAA7D,EAAAuD,SAAA,KAAAtB,EAAA,UAAAgC,EAAAlE,GAAA,IAAAD,EAAA,CAAAoE,OAAAnE,EAAA,SAAAA,IAAAD,EAAAqE,SAAApE,EAAA,SAAAA,IAAAD,EAAAsE,WAAArE,EAAA,GAAAD,EAAAuE,SAAAtE,EAAA,SAAAuE,WAAAC,KAAAzE,EAAA,UAAA0E,EAAAzE,GAAA,IAAAD,EAAAC,EAAA0E,YAAA,GAAA3E,EAAA4B,KAAA,gBAAA5B,EAAA6B,IAAA5B,EAAA0E,WAAA3E,CAAA,UAAAyB,EAAAxB,GAAA,KAAAuE,WAAA,EAAAJ,OAAA,SAAAnE,EAAA4C,QAAAsB,EAAA,WAAAS,OAAA,YAAAlC,EAAA1C,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAAE,EAAAF,EAAAY,GAAA,GAAAV,EAAA,OAAAA,EAAA4B,KAAA9B,GAAA,sBAAAA,EAAAiE,KAAA,OAAAjE,EAAA,IAAA6E,MAAA7E,EAAA8E,QAAA,KAAAvE,GAAA,EAAAG,EAAA,SAAAuD,IAAA,OAAA1D,EAAAP,EAAA8E,QAAA,GAAAzE,EAAAyB,KAAA9B,EAAAO,GAAA,OAAA0D,EAAAxD,MAAAT,EAAAO,GAAA0D,EAAAV,MAAA,EAAAU,EAAA,OAAAA,EAAAxD,MAAAR,EAAAgE,EAAAV,MAAA,EAAAU,CAAA,SAAAvD,EAAAuD,KAAAvD,CAAA,YAAAqD,UAAAd,EAAAjD,GAAA,2BAAAoC,EAAAhC,UAAAiC,EAAA9B,EAAAoC,EAAA,eAAAlC,MAAA4B,EAAAjB,cAAA,IAAAb,EAAA8B,EAAA,eAAA5B,MAAA2B,EAAAhB,cAAA,IAAAgB,EAAA2C,YAAA7D,EAAAmB,EAAArB,EAAA,qBAAAhB,EAAAgF,oBAAA,SAAA/E,GAAA,IAAAD,EAAA,mBAAAC,GAAAA,EAAAgF,YAAA,QAAAjF,IAAAA,IAAAoC,GAAA,uBAAApC,EAAA+E,aAAA/E,EAAAkF,MAAA,EAAAlF,EAAAmF,KAAA,SAAAlF,GAAA,OAAAE,OAAAiF,eAAAjF,OAAAiF,eAAAnF,EAAAoC,IAAApC,EAAAoF,UAAAhD,EAAAnB,EAAAjB,EAAAe,EAAA,sBAAAf,EAAAG,UAAAD,OAAAqB,OAAAmB,GAAA1C,CAAA,EAAAD,EAAAsF,MAAA,SAAArF,GAAA,OAAAkD,QAAAlD,EAAA,EAAA2C,EAAAG,EAAA3C,WAAAc,EAAA6B,EAAA3C,UAAAU,GAAA,0BAAAd,EAAA+C,cAAAA,EAAA/C,EAAAuF,MAAA,SAAAtF,EAAAC,EAAAG,EAAAE,EAAAG,QAAA,IAAAA,IAAAA,EAAA8E,SAAA,IAAA5E,EAAA,IAAAmC,EAAAzB,EAAArB,EAAAC,EAAAG,EAAAE,GAAAG,GAAA,OAAAV,EAAAgF,oBAAA9E,GAAAU,EAAAA,EAAAqD,OAAAb,MAAA,SAAAnD,GAAA,OAAAA,EAAAsD,KAAAtD,EAAAQ,MAAAG,EAAAqD,MAAA,KAAArB,EAAAD,GAAAzB,EAAAyB,EAAA3B,EAAA,aAAAE,EAAAyB,EAAA/B,GAAA,0BAAAM,EAAAyB,EAAA,qDAAA3C,EAAAyF,KAAA,SAAAxF,GAAA,IAAAD,EAAAG,OAAAF,GAAAC,EAAA,WAAAG,KAAAL,EAAAE,EAAAuE,KAAApE,GAAA,OAAAH,EAAAwF,UAAA,SAAAzB,IAAA,KAAA/D,EAAA4E,QAAA,KAAA7E,EAAAC,EAAAyF,MAAA,GAAA1F,KAAAD,EAAA,OAAAiE,EAAAxD,MAAAR,EAAAgE,EAAAV,MAAA,EAAAU,CAAA,QAAAA,EAAAV,MAAA,EAAAU,CAAA,GAAAjE,EAAA0C,OAAAA,EAAAjB,EAAArB,UAAA,CAAA6E,YAAAxD,EAAAmD,MAAA,SAAA5E,GAAA,QAAA4F,KAAA,OAAA3B,KAAA,OAAAN,KAAA,KAAAC,MAAA3D,EAAA,KAAAsD,MAAA,OAAAE,SAAA,UAAAD,OAAA,YAAA3B,IAAA5B,EAAA,KAAAuE,WAAA3B,QAAA6B,IAAA1E,EAAA,QAAAE,KAAA,WAAAA,EAAA2F,OAAA,IAAAxF,EAAAyB,KAAA,KAAA5B,KAAA2E,OAAA3E,EAAA4F,MAAA,WAAA5F,GAAAD,EAAA,EAAA8F,KAAA,gBAAAxC,MAAA,MAAAtD,EAAA,KAAAuE,WAAA,GAAAG,WAAA,aAAA1E,EAAA2B,KAAA,MAAA3B,EAAA4B,IAAA,YAAAmE,IAAA,EAAAnC,kBAAA,SAAA7D,GAAA,QAAAuD,KAAA,MAAAvD,EAAA,IAAAE,EAAA,cAAA+F,EAAA5F,EAAAE,GAAA,OAAAK,EAAAgB,KAAA,QAAAhB,EAAAiB,IAAA7B,EAAAE,EAAA+D,KAAA5D,EAAAE,IAAAL,EAAAsD,OAAA,OAAAtD,EAAA2B,IAAA5B,KAAAM,CAAA,SAAAA,EAAA,KAAAiE,WAAAM,OAAA,EAAAvE,GAAA,IAAAA,EAAA,KAAAG,EAAA,KAAA8D,WAAAjE,GAAAK,EAAAF,EAAAiE,WAAA,YAAAjE,EAAA0D,OAAA,OAAA6B,EAAA,UAAAvF,EAAA0D,QAAA,KAAAwB,KAAA,KAAA9E,EAAAT,EAAAyB,KAAApB,EAAA,YAAAM,EAAAX,EAAAyB,KAAApB,EAAA,iBAAAI,GAAAE,EAAA,SAAA4E,KAAAlF,EAAA2D,SAAA,OAAA4B,EAAAvF,EAAA2D,UAAA,WAAAuB,KAAAlF,EAAA4D,WAAA,OAAA2B,EAAAvF,EAAA4D,WAAA,SAAAxD,GAAA,QAAA8E,KAAAlF,EAAA2D,SAAA,OAAA4B,EAAAvF,EAAA2D,UAAA,YAAArD,EAAA,MAAAsC,MAAA,kDAAAsC,KAAAlF,EAAA4D,WAAA,OAAA2B,EAAAvF,EAAA4D,WAAA,KAAAR,OAAA,SAAA7D,EAAAD,GAAA,QAAAE,EAAA,KAAAsE,WAAAM,OAAA,EAAA5E,GAAA,IAAAA,EAAA,KAAAK,EAAA,KAAAiE,WAAAtE,GAAA,GAAAK,EAAA6D,QAAA,KAAAwB,MAAAvF,EAAAyB,KAAAvB,EAAA,oBAAAqF,KAAArF,EAAA+D,WAAA,KAAA5D,EAAAH,EAAA,OAAAG,IAAA,UAAAT,GAAA,aAAAA,IAAAS,EAAA0D,QAAApE,GAAAA,GAAAU,EAAA4D,aAAA5D,EAAA,UAAAE,EAAAF,EAAAA,EAAAiE,WAAA,UAAA/D,EAAAgB,KAAA3B,EAAAW,EAAAiB,IAAA7B,EAAAU,GAAA,KAAA8C,OAAA,YAAAS,KAAAvD,EAAA4D,WAAAnC,GAAA,KAAA+D,SAAAtF,EAAA,EAAAsF,SAAA,SAAAjG,EAAAD,GAAA,aAAAC,EAAA2B,KAAA,MAAA3B,EAAA4B,IAAA,gBAAA5B,EAAA2B,MAAA,aAAA3B,EAAA2B,KAAA,KAAAqC,KAAAhE,EAAA4B,IAAA,WAAA5B,EAAA2B,MAAA,KAAAoE,KAAA,KAAAnE,IAAA5B,EAAA4B,IAAA,KAAA2B,OAAA,cAAAS,KAAA,kBAAAhE,EAAA2B,MAAA5B,IAAA,KAAAiE,KAAAjE,GAAAmC,CAAA,EAAAgE,OAAA,SAAAlG,GAAA,QAAAD,EAAA,KAAAwE,WAAAM,OAAA,EAAA9E,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAsE,WAAAxE,GAAA,GAAAE,EAAAoE,aAAArE,EAAA,YAAAiG,SAAAhG,EAAAyE,WAAAzE,EAAAqE,UAAAG,EAAAxE,GAAAiC,CAAA,kBAAAlC,GAAA,QAAAD,EAAA,KAAAwE,WAAAM,OAAA,EAAA9E,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAsE,WAAAxE,GAAA,GAAAE,EAAAkE,SAAAnE,EAAA,KAAAI,EAAAH,EAAAyE,WAAA,aAAAtE,EAAAuB,KAAA,KAAArB,EAAAF,EAAAwB,IAAA6C,EAAAxE,EAAA,QAAAK,CAAA,QAAA+C,MAAA,0BAAA8C,cAAA,SAAApG,EAAAE,EAAAG,GAAA,YAAAoD,SAAA,CAAA5C,SAAA6B,EAAA1C,GAAAgE,WAAA9D,EAAAgE,QAAA7D,GAAA,cAAAmD,SAAA,KAAA3B,IAAA5B,GAAAkC,CAAA,GAAAnC,CAAA,UAAAqG,EAAAhG,EAAAJ,EAAAD,EAAAE,EAAAK,EAAAK,EAAAE,GAAA,QAAAJ,EAAAL,EAAAO,GAAAE,GAAAE,EAAAN,EAAAD,KAAA,OAAAJ,GAAA,YAAAL,EAAAK,EAAA,CAAAK,EAAA6C,KAAAtD,EAAAe,GAAAwE,QAAAtC,QAAAlC,GAAAoC,KAAAlD,EAAAK,EAAA,CAKO,SAAS+F,IAAkC,IACxCC,GAAQC,EAAAA,EAAAA,2BACRC,GAAoBC,EAAAA,EAAAA,wBACpBC,GAAYC,EAAAA,EAAAA,gBAEZC,GAAgBC,EAAAA,EAAAA,KAAIH,EAAUE,eAC9BE,GAAsBD,EAAAA,EAAAA,KAAI,GAC1BE,GAAgBF,EAAAA,EAAAA,KAAI,IA4DpBG,EAAsB,eAxEhC5G,EAwEgC6G,GAxEhC7G,EAwEgCN,IAAAoF,MAAG,SAAAgC,IAAA,OAAApH,IAAAuB,MAAA,SAAA8F,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAnD,MAAA,UACD,kBAAtBsC,EAAMc,aAA8D,IAA3Bd,EAAMe,UAAUxC,OAAY,CAAAsC,EAAAnD,KAAA,eAAAmD,EAAAnD,KAAA,EAC/DsC,EAAMgB,iBAAgB,wBAAAH,EAAArB,OAAA,GAAAoB,EAAA,IA1ExC,eAAAlH,EAAA,KAAAD,EAAAwH,UAAA,WAAAhC,SAAA,SAAAtF,EAAAK,GAAA,IAAAK,EAAAP,EAAAoH,MAAAxH,EAAAD,GAAA,SAAA0H,EAAArH,GAAAgG,EAAAzF,EAAAV,EAAAK,EAAAmH,EAAAC,EAAA,OAAAtH,EAAA,UAAAsH,EAAAtH,GAAAgG,EAAAzF,EAAAV,EAAAK,EAAAmH,EAAAC,EAAA,QAAAtH,EAAA,CAAAqH,OAAA,QA4EK,kBAJ2B,OAAAR,EAAAO,MAAA,KAAAD,UAAA,KA0B5B,MAAO,CACHjB,MAAAA,EACAE,kBAAAA,EACAE,UAAAA,EACAE,cAAAA,EACAE,oBAAAA,EACAC,cAAAA,EACAY,eA/CmB,WACnBrB,EAAMqB,gBACV,EA8CIC,iBA5FqB,SAACC,EAAUC,GAChC,OAAIA,EACOlB,EAAcpG,MACf,mEACA,4BAGHoG,EAAcpG,MACf,uDAAsD,iBAAAuH,OACrCF,EAAW,aAAe,GACrD,EAmFIG,mBAjFuB,WACvB1B,EAAM2B,UAAY,EACtB,EAgFIC,oBA9EwB,WACxB5B,EAAM2B,UAAYE,MAAQC,OAAO,mBACrC,EA6EIC,iBA3EqB,WACrB/B,EAAMgC,QAAU,EACpB,EA0EIC,kBAxEsB,WACtBjC,EAAMgC,QAAUH,MAAQC,OAAO,mBACnC,EAuEII,WArEe,SAACC,GAChBnC,EAAMkC,WAAWC,EACrB,EAoEIC,QAlEY,SAACD,GACbnC,EAAMoC,QAAQD,EAClB,EAiEIE,kBA/DsB,WACtBrC,EAAMqC,mBACV,EA8DIC,iBA5DqB,WACrBtC,EAAMsC,kBACV,EA2DIC,oBArDwB,SAACC,GACzBhC,EAAoBtG,MAAQsI,EAAQC,iBACpCzC,EAAM0C,WAAY,EAClBjC,EAAcvG,MAAQsI,EAAQG,eAC9BC,QAAQC,IAAI,oCAAqCpC,EAAcvG,MACnE,EAiDI4I,WAhDe,WACf9C,EAAM0C,WAAY,CACtB,EA+CIhC,uBAAAA,EACAqC,cAxCkB,WAClB,OAAIlB,IAAM7B,EAAM2B,WAAWqB,cAAcnB,IAAM7B,EAAMgC,WACjD9B,EAAkB+C,8BAA8B,oBAAqB,uCAC9D,GAEPjD,EAAMkD,cAAgB,GACtBhD,EAAkB+C,8BAA8B,oBAAqB,gDAC9D,GAEPjD,EAAMmD,SAAW,GACjBjD,EAAkB+C,8BAA8B,eAAgB,wCACzD,GAEwB,IAA/BjD,EAAMoD,cAAc7E,SACpB2B,EAAkB+C,8BAA8B,oBAAqB,iDAC9D,EAGf,EAwBJ,8yFCxHAzJ,EAAA,kBAAAC,CAAA,MAAAC,EAAAD,EAAA,GAAAE,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAK,gBAAA,SAAAP,EAAAD,EAAAE,GAAAD,EAAAD,GAAAE,EAAAO,KAAA,EAAAC,EAAA,mBAAAC,OAAAA,OAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAjB,EAAAD,EAAAE,GAAA,OAAAC,OAAAK,eAAAP,EAAAD,EAAA,CAAAS,MAAAP,EAAAiB,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAApB,EAAAD,EAAA,KAAAkB,EAAA,aAAAjB,GAAAiB,EAAA,SAAAjB,EAAAD,EAAAE,GAAA,OAAAD,EAAAD,GAAAE,CAAA,WAAAoB,EAAArB,EAAAD,EAAAE,EAAAG,GAAA,IAAAK,EAAAV,GAAAA,EAAAI,qBAAAmB,EAAAvB,EAAAuB,EAAAX,EAAAT,OAAAqB,OAAAd,EAAAN,WAAAU,EAAA,IAAAW,EAAApB,GAAA,WAAAE,EAAAK,EAAA,WAAAH,MAAAiB,EAAAzB,EAAAC,EAAAY,KAAAF,CAAA,UAAAe,EAAA1B,EAAAD,EAAAE,GAAA,WAAA0B,KAAA,SAAAC,IAAA5B,EAAA6B,KAAA9B,EAAAE,GAAA,OAAAD,GAAA,OAAA2B,KAAA,QAAAC,IAAA5B,EAAA,EAAAD,EAAAsB,KAAAA,EAAA,IAAAS,EAAA,iBAAAC,EAAA,iBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,YAAAZ,IAAA,UAAAa,IAAA,UAAAC,IAAA,KAAAC,EAAA,GAAApB,EAAAoB,EAAA1B,GAAA,8BAAA2B,EAAApC,OAAAqC,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAA,MAAAD,GAAAA,IAAAvC,GAAAG,EAAAyB,KAAAW,EAAA7B,KAAA0B,EAAAG,GAAA,IAAAE,EAAAN,EAAAjC,UAAAmB,EAAAnB,UAAAD,OAAAqB,OAAAc,GAAA,SAAAM,EAAA3C,GAAA,0BAAA4C,SAAA,SAAA7C,GAAAkB,EAAAjB,EAAAD,GAAA,SAAAC,GAAA,YAAA6C,QAAA9C,EAAAC,EAAA,gBAAA8C,EAAA9C,EAAAD,GAAA,SAAAgD,EAAA9C,EAAAK,EAAAG,EAAAE,GAAA,IAAAE,EAAAa,EAAA1B,EAAAC,GAAAD,EAAAM,GAAA,aAAAO,EAAAc,KAAA,KAAAZ,EAAAF,EAAAe,IAAAE,EAAAf,EAAAP,MAAA,OAAAsB,GAAA,UAAAkB,EAAAlB,IAAA1B,EAAAyB,KAAAC,EAAA,WAAA/B,EAAAkD,QAAAnB,EAAAoB,SAAAC,MAAA,SAAAnD,GAAA+C,EAAA,OAAA/C,EAAAS,EAAAE,EAAA,aAAAX,GAAA+C,EAAA,QAAA/C,EAAAS,EAAAE,EAAA,IAAAZ,EAAAkD,QAAAnB,GAAAqB,MAAA,SAAAnD,GAAAe,EAAAP,MAAAR,EAAAS,EAAAM,EAAA,aAAAf,GAAA,OAAA+C,EAAA,QAAA/C,EAAAS,EAAAE,EAAA,IAAAA,EAAAE,EAAAe,IAAA,KAAA3B,EAAAK,EAAA,gBAAAE,MAAA,SAAAR,EAAAI,GAAA,SAAAgD,IAAA,WAAArD,GAAA,SAAAA,EAAAE,GAAA8C,EAAA/C,EAAAI,EAAAL,EAAAE,EAAA,WAAAA,EAAAA,EAAAA,EAAAkD,KAAAC,EAAAA,GAAAA,GAAA,aAAA3B,EAAA1B,EAAAE,EAAAG,GAAA,IAAAE,EAAAwB,EAAA,gBAAArB,EAAAE,GAAA,GAAAL,IAAA0B,EAAA,MAAAqB,MAAA,mCAAA/C,IAAA2B,EAAA,cAAAxB,EAAA,MAAAE,EAAA,OAAAH,MAAAR,EAAAsD,MAAA,OAAAlD,EAAAmD,OAAA9C,EAAAL,EAAAwB,IAAAjB,IAAA,KAAAE,EAAAT,EAAAoD,SAAA,GAAA3C,EAAA,KAAAE,EAAA0C,EAAA5C,EAAAT,GAAA,GAAAW,EAAA,IAAAA,IAAAmB,EAAA,gBAAAnB,CAAA,cAAAX,EAAAmD,OAAAnD,EAAAsD,KAAAtD,EAAAuD,MAAAvD,EAAAwB,SAAA,aAAAxB,EAAAmD,OAAA,IAAAjD,IAAAwB,EAAA,MAAAxB,EAAA2B,EAAA7B,EAAAwB,IAAAxB,EAAAwD,kBAAAxD,EAAAwB,IAAA,gBAAAxB,EAAAmD,QAAAnD,EAAAyD,OAAA,SAAAzD,EAAAwB,KAAAtB,EAAA0B,EAAA,IAAAK,EAAAX,EAAA3B,EAAAE,EAAAG,GAAA,cAAAiC,EAAAV,KAAA,IAAArB,EAAAF,EAAAkD,KAAArB,EAAAF,EAAAM,EAAAT,MAAAM,EAAA,gBAAA1B,MAAA6B,EAAAT,IAAA0B,KAAAlD,EAAAkD,KAAA,WAAAjB,EAAAV,OAAArB,EAAA2B,EAAA7B,EAAAmD,OAAA,QAAAnD,EAAAwB,IAAAS,EAAAT,IAAA,YAAA6B,EAAA1D,EAAAE,GAAA,IAAAG,EAAAH,EAAAsD,OAAAjD,EAAAP,EAAAa,SAAAR,GAAA,GAAAE,IAAAN,EAAA,OAAAC,EAAAuD,SAAA,eAAApD,GAAAL,EAAAa,SAAA,SAAAX,EAAAsD,OAAA,SAAAtD,EAAA2B,IAAA5B,EAAAyD,EAAA1D,EAAAE,GAAA,UAAAA,EAAAsD,SAAA,WAAAnD,IAAAH,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAA,IAAAkC,UAAA,oCAAA1D,EAAA,aAAA8B,EAAA,IAAAzB,EAAAiB,EAAApB,EAAAP,EAAAa,SAAAX,EAAA2B,KAAA,aAAAnB,EAAAkB,KAAA,OAAA1B,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAAnB,EAAAmB,IAAA3B,EAAAuD,SAAA,KAAAtB,EAAA,IAAAvB,EAAAF,EAAAmB,IAAA,OAAAjB,EAAAA,EAAA2C,MAAArD,EAAAF,EAAAgE,YAAApD,EAAAH,MAAAP,EAAA+D,KAAAjE,EAAAkE,QAAA,WAAAhE,EAAAsD,SAAAtD,EAAAsD,OAAA,OAAAtD,EAAA2B,IAAA5B,GAAAC,EAAAuD,SAAA,KAAAtB,GAAAvB,GAAAV,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAA,IAAAkC,UAAA,oCAAA7D,EAAAuD,SAAA,KAAAtB,EAAA,UAAAgC,EAAAlE,GAAA,IAAAD,EAAA,CAAAoE,OAAAnE,EAAA,SAAAA,IAAAD,EAAAqE,SAAApE,EAAA,SAAAA,IAAAD,EAAAsE,WAAArE,EAAA,GAAAD,EAAAuE,SAAAtE,EAAA,SAAAuE,WAAAC,KAAAzE,EAAA,UAAA0E,EAAAzE,GAAA,IAAAD,EAAAC,EAAA0E,YAAA,GAAA3E,EAAA4B,KAAA,gBAAA5B,EAAA6B,IAAA5B,EAAA0E,WAAA3E,CAAA,UAAAyB,EAAAxB,GAAA,KAAAuE,WAAA,EAAAJ,OAAA,SAAAnE,EAAA4C,QAAAsB,EAAA,WAAAS,OAAA,YAAAlC,EAAA1C,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAAE,EAAAF,EAAAY,GAAA,GAAAV,EAAA,OAAAA,EAAA4B,KAAA9B,GAAA,sBAAAA,EAAAiE,KAAA,OAAAjE,EAAA,IAAA6E,MAAA7E,EAAA8E,QAAA,KAAAvE,GAAA,EAAAG,EAAA,SAAAuD,IAAA,OAAA1D,EAAAP,EAAA8E,QAAA,GAAAzE,EAAAyB,KAAA9B,EAAAO,GAAA,OAAA0D,EAAAxD,MAAAT,EAAAO,GAAA0D,EAAAV,MAAA,EAAAU,EAAA,OAAAA,EAAAxD,MAAAR,EAAAgE,EAAAV,MAAA,EAAAU,CAAA,SAAAvD,EAAAuD,KAAAvD,CAAA,YAAAqD,UAAAd,EAAAjD,GAAA,2BAAAoC,EAAAhC,UAAAiC,EAAA9B,EAAAoC,EAAA,eAAAlC,MAAA4B,EAAAjB,cAAA,IAAAb,EAAA8B,EAAA,eAAA5B,MAAA2B,EAAAhB,cAAA,IAAAgB,EAAA2C,YAAA7D,EAAAmB,EAAArB,EAAA,qBAAAhB,EAAAgF,oBAAA,SAAA/E,GAAA,IAAAD,EAAA,mBAAAC,GAAAA,EAAAgF,YAAA,QAAAjF,IAAAA,IAAAoC,GAAA,uBAAApC,EAAA+E,aAAA/E,EAAAkF,MAAA,EAAAlF,EAAAmF,KAAA,SAAAlF,GAAA,OAAAE,OAAAiF,eAAAjF,OAAAiF,eAAAnF,EAAAoC,IAAApC,EAAAoF,UAAAhD,EAAAnB,EAAAjB,EAAAe,EAAA,sBAAAf,EAAAG,UAAAD,OAAAqB,OAAAmB,GAAA1C,CAAA,EAAAD,EAAAsF,MAAA,SAAArF,GAAA,OAAAkD,QAAAlD,EAAA,EAAA2C,EAAAG,EAAA3C,WAAAc,EAAA6B,EAAA3C,UAAAU,GAAA,0BAAAd,EAAA+C,cAAAA,EAAA/C,EAAAuF,MAAA,SAAAtF,EAAAC,EAAAG,EAAAE,EAAAG,QAAA,IAAAA,IAAAA,EAAA8E,SAAA,IAAA5E,EAAA,IAAAmC,EAAAzB,EAAArB,EAAAC,EAAAG,EAAAE,GAAAG,GAAA,OAAAV,EAAAgF,oBAAA9E,GAAAU,EAAAA,EAAAqD,OAAAb,MAAA,SAAAnD,GAAA,OAAAA,EAAAsD,KAAAtD,EAAAQ,MAAAG,EAAAqD,MAAA,KAAArB,EAAAD,GAAAzB,EAAAyB,EAAA3B,EAAA,aAAAE,EAAAyB,EAAA/B,GAAA,0BAAAM,EAAAyB,EAAA,qDAAA3C,EAAAyF,KAAA,SAAAxF,GAAA,IAAAD,EAAAG,OAAAF,GAAAC,EAAA,WAAAG,KAAAL,EAAAE,EAAAuE,KAAApE,GAAA,OAAAH,EAAAwF,UAAA,SAAAzB,IAAA,KAAA/D,EAAA4E,QAAA,KAAA7E,EAAAC,EAAAyF,MAAA,GAAA1F,KAAAD,EAAA,OAAAiE,EAAAxD,MAAAR,EAAAgE,EAAAV,MAAA,EAAAU,CAAA,QAAAA,EAAAV,MAAA,EAAAU,CAAA,GAAAjE,EAAA0C,OAAAA,EAAAjB,EAAArB,UAAA,CAAA6E,YAAAxD,EAAAmD,MAAA,SAAA5E,GAAA,QAAA4F,KAAA,OAAA3B,KAAA,OAAAN,KAAA,KAAAC,MAAA3D,EAAA,KAAAsD,MAAA,OAAAE,SAAA,UAAAD,OAAA,YAAA3B,IAAA5B,EAAA,KAAAuE,WAAA3B,QAAA6B,IAAA1E,EAAA,QAAAE,KAAA,WAAAA,EAAA2F,OAAA,IAAAxF,EAAAyB,KAAA,KAAA5B,KAAA2E,OAAA3E,EAAA4F,MAAA,WAAA5F,GAAAD,EAAA,EAAA8F,KAAA,gBAAAxC,MAAA,MAAAtD,EAAA,KAAAuE,WAAA,GAAAG,WAAA,aAAA1E,EAAA2B,KAAA,MAAA3B,EAAA4B,IAAA,YAAAmE,IAAA,EAAAnC,kBAAA,SAAA7D,GAAA,QAAAuD,KAAA,MAAAvD,EAAA,IAAAE,EAAA,cAAA+F,EAAA5F,EAAAE,GAAA,OAAAK,EAAAgB,KAAA,QAAAhB,EAAAiB,IAAA7B,EAAAE,EAAA+D,KAAA5D,EAAAE,IAAAL,EAAAsD,OAAA,OAAAtD,EAAA2B,IAAA5B,KAAAM,CAAA,SAAAA,EAAA,KAAAiE,WAAAM,OAAA,EAAAvE,GAAA,IAAAA,EAAA,KAAAG,EAAA,KAAA8D,WAAAjE,GAAAK,EAAAF,EAAAiE,WAAA,YAAAjE,EAAA0D,OAAA,OAAA6B,EAAA,UAAAvF,EAAA0D,QAAA,KAAAwB,KAAA,KAAA9E,EAAAT,EAAAyB,KAAApB,EAAA,YAAAM,EAAAX,EAAAyB,KAAApB,EAAA,iBAAAI,GAAAE,EAAA,SAAA4E,KAAAlF,EAAA2D,SAAA,OAAA4B,EAAAvF,EAAA2D,UAAA,WAAAuB,KAAAlF,EAAA4D,WAAA,OAAA2B,EAAAvF,EAAA4D,WAAA,SAAAxD,GAAA,QAAA8E,KAAAlF,EAAA2D,SAAA,OAAA4B,EAAAvF,EAAA2D,UAAA,YAAArD,EAAA,MAAAsC,MAAA,kDAAAsC,KAAAlF,EAAA4D,WAAA,OAAA2B,EAAAvF,EAAA4D,WAAA,KAAAR,OAAA,SAAA7D,EAAAD,GAAA,QAAAE,EAAA,KAAAsE,WAAAM,OAAA,EAAA5E,GAAA,IAAAA,EAAA,KAAAK,EAAA,KAAAiE,WAAAtE,GAAA,GAAAK,EAAA6D,QAAA,KAAAwB,MAAAvF,EAAAyB,KAAAvB,EAAA,oBAAAqF,KAAArF,EAAA+D,WAAA,KAAA5D,EAAAH,EAAA,OAAAG,IAAA,UAAAT,GAAA,aAAAA,IAAAS,EAAA0D,QAAApE,GAAAA,GAAAU,EAAA4D,aAAA5D,EAAA,UAAAE,EAAAF,EAAAA,EAAAiE,WAAA,UAAA/D,EAAAgB,KAAA3B,EAAAW,EAAAiB,IAAA7B,EAAAU,GAAA,KAAA8C,OAAA,YAAAS,KAAAvD,EAAA4D,WAAAnC,GAAA,KAAA+D,SAAAtF,EAAA,EAAAsF,SAAA,SAAAjG,EAAAD,GAAA,aAAAC,EAAA2B,KAAA,MAAA3B,EAAA4B,IAAA,gBAAA5B,EAAA2B,MAAA,aAAA3B,EAAA2B,KAAA,KAAAqC,KAAAhE,EAAA4B,IAAA,WAAA5B,EAAA2B,MAAA,KAAAoE,KAAA,KAAAnE,IAAA5B,EAAA4B,IAAA,KAAA2B,OAAA,cAAAS,KAAA,kBAAAhE,EAAA2B,MAAA5B,IAAA,KAAAiE,KAAAjE,GAAAmC,CAAA,EAAAgE,OAAA,SAAAlG,GAAA,QAAAD,EAAA,KAAAwE,WAAAM,OAAA,EAAA9E,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAsE,WAAAxE,GAAA,GAAAE,EAAAoE,aAAArE,EAAA,YAAAiG,SAAAhG,EAAAyE,WAAAzE,EAAAqE,UAAAG,EAAAxE,GAAAiC,CAAA,kBAAAlC,GAAA,QAAAD,EAAA,KAAAwE,WAAAM,OAAA,EAAA9E,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAsE,WAAAxE,GAAA,GAAAE,EAAAkE,SAAAnE,EAAA,KAAAI,EAAAH,EAAAyE,WAAA,aAAAtE,EAAAuB,KAAA,KAAArB,EAAAF,EAAAwB,IAAA6C,EAAAxE,EAAA,QAAAK,CAAA,QAAA+C,MAAA,0BAAA8C,cAAA,SAAApG,EAAAE,EAAAG,GAAA,YAAAoD,SAAA,CAAA5C,SAAA6B,EAAA1C,GAAAgE,WAAA9D,EAAAgE,QAAA7D,GAAA,cAAAmD,SAAA,KAAA3B,IAAA5B,GAAAkC,CAAA,GAAAnC,CAAA,UAAAqG,EAAAhG,EAAAJ,EAAAD,EAAAE,EAAAK,EAAAK,EAAAE,GAAA,QAAAJ,EAAAL,EAAAO,GAAAE,GAAAE,EAAAN,EAAAD,KAAA,OAAAJ,GAAA,YAAAL,EAAAK,EAAA,CAAAK,EAAA6C,KAAAtD,EAAAe,GAAAwE,QAAAtC,QAAAlC,GAAAoC,KAAAlD,EAAAK,EAAA,UAAAqJ,EAAAvJ,GAAA,sBAAAJ,EAAA,KAAAD,EAAAwH,UAAA,WAAAhC,SAAA,SAAAtF,EAAAK,GAAA,IAAAK,EAAAP,EAAAoH,MAAAxH,EAAAD,GAAA,SAAA0H,EAAArH,GAAAgG,EAAAzF,EAAAV,EAAAK,EAAAmH,EAAAC,EAAA,OAAAtH,EAAA,UAAAsH,EAAAtH,GAAAgG,EAAAzF,EAAAV,EAAAK,EAAAmH,EAAAC,EAAA,QAAAtH,EAAA,CAAAqH,OAAA,OAUAU,IAAAA,OAAayB,KACbzB,IAAAA,OAAa0B,KACb1B,IAAAA,OAAa2B,KACb3B,IAAAA,OAAamB,KAEb,IAAMS,EAAe,WAAH,MAAU,CACxB1C,UAAW,GACX2C,iBAAkB,KAClBN,cAAe,GACfO,KAAM,GACNhC,UAAWE,MAAQC,OAAO,oBAC1BE,QAASH,MAAQ+B,IAAI,GAAI,QAAQ9B,OAAO,oBACxC+B,aAAc,GACdC,gBAAgB,EAChBC,YAAa,EACbC,WAAY,EACZC,YAAa,GACbvB,WAAW,EACXwB,SAAS,EACTC,kBAAkB,EAClBC,YAAY,EACZC,MAAO,KACPlC,GAAI,KACJxD,KAAM,GACN2F,YAAa,GACbC,IAAK,GACLlJ,KAAM,UACNmJ,SAAU,EACV1D,YAAa,aACb2D,iBAAkB,KACrB,EAEYxE,GAA0ByE,EAAAA,EAAAA,IAAY,uBAAwB,CACvEC,MAAOlB,EACPmB,QAAS,CACLvG,MAAK,WAEDzE,OAAOiL,OAAOC,KAAMrB,IACxB,EACAlB,oBAAmB,WACfuC,KAAKpC,WAAY,CACrB,EACAqC,qBAAoB,WAChBD,KAAKpC,WAAY,CACrB,EACM1B,eAAc,WAAG,IAAAgE,EAAA,YAAA3B,EAAA7J,IAAAoF,MAAA,SAAAgC,IAAA,IAAAqE,EAAAC,EAAAC,EAAAC,EAAA,OAAA5L,IAAAuB,MAAA,SAAA8F,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAnD,MAAA,OACA,OAAnBsH,EAAKd,SAAU,EAAIrD,EAAAxB,KAAA,EAAAwB,EAAAnD,KAAA,EAEQ2H,MAAMC,IAAI,yCAAwC,OAAnEL,EAAQpE,EAAAzD,KACd4H,EAAKjE,UAAYkE,EAASM,KAAKxE,UAASmE,EACdD,EAASM,KAA5BJ,EAAOD,EAAPC,QAASC,EAAMF,EAANE,QACUjF,EAAAA,EAAAA,wBACRqF,qBAAqBL,EAASC,GAAOvE,EAAAnD,KAAA,iBAAAmD,EAAAxB,KAAA,GAAAwB,EAAA4E,GAAA5E,EAAA,SAEvDmE,EAAKX,MAAQxD,EAAA4E,GAAMR,SAAWpE,EAAA4E,GAAMR,SAASM,KAAKJ,QAAUtE,EAAA4E,GAAMN,SACxChF,EAAAA,EAAAA,wBACRqF,qBAAqBR,EAAKX,MAAO,SAAQ,QAEvC,OAFuCxD,EAAAxB,KAAA,GAE3D2F,EAAKd,SAAU,EAAKrD,EAAAjB,OAAA,6BAAAiB,EAAArB,OAAA,GAAAoB,EAAA,wBAbLyC,EAevB,EACMqC,eAAc,SAACC,GAAU,IAAAC,EAAA,YAAAvC,EAAA7J,IAAAoF,MAAA,SAAAiH,IAAA,IAAAZ,EAAA,OAAAzL,IAAAuB,MAAA,SAAA+K,GAAA,cAAAA,EAAAzG,KAAAyG,EAAApI,MAAA,UACtBkI,EAAKG,wBAAyB,CAAFD,EAAApI,KAAA,eAAAoI,EAAAvI,OAAA,UAAS,GAAK,OAE5B,OAAnBqI,EAAK1B,SAAU,EAAI4B,EAAAzG,KAAA,EAAAyG,EAAApI,KAAA,EAEQ2H,MAAMW,KAAK,oBAAmBC,EAAAA,EAAA,GAC9CN,GAAQ,IACXvC,cAAewC,EAAKM,2BACtB,OAGU,OANNjB,EAAQa,EAAA1I,KAIdwI,EAAK7E,UAAU7C,KAAK+G,EAASM,KAAKI,UAClCC,EAAKO,iBAAiBlB,EAASM,MAC/BK,EAAKvH,QAAOyH,EAAAvI,OAAA,UACL,GAAI,QAEY,OAFZuI,EAAAzG,KAAA,GAAAyG,EAAAL,GAAAK,EAAA,SAEXF,EAAKQ,YAAWN,EAAAL,IAAOK,EAAAvI,OAAA,UAChB,GAAK,QAEQ,OAFRuI,EAAAzG,KAAA,GAEZuG,EAAK1B,SAAU,EAAK4B,EAAAlG,OAAA,6BAAAkG,EAAAtG,OAAA,GAAAqG,EAAA,wBAjBGxC,EAmB/B,EACMgD,eAAc,SAACV,GAAU,IAAAW,EAAA,YAAAjD,EAAA7J,IAAAoF,MAAA,SAAA2H,IAAA,IAAAC,EAAAvB,EAAAwB,EAAAC,EAAA,OAAAlN,IAAAuB,MAAA,SAAA4L,GAAA,cAAAA,EAAAtH,KAAAsH,EAAAjJ,MAAA,OAEiB,GADtC8I,GAAaI,EAAAA,EAAAA,iBACnBjB,EAASvC,cAAgBkD,EAAKlD,cAEzBkD,EAAKP,sBAAsBJ,EAASvC,eAAgB,CAAFuD,EAAAjJ,KAAA,QACX,OAAxCkF,QAAQyB,MAAM,0BAA0BsC,EAAApJ,OAAA,UACjC,GAAK,OAGI,OAApB+I,EAAKpC,SAAU,EAAKyC,EAAAtH,KAAA,EAAAsH,EAAAjJ,KAAA,EAEO2H,MAAMwB,IAAI,qBAADpF,OAAsBkE,EAASxD,IAAMwD,GAAS,OAe7D,OAfXV,EAAQ0B,EAAAvJ,MAEC,KADTqJ,EAAQH,EAAKvF,UAAU+F,WAAU,SAAA/K,GAAC,OAAIA,EAAEoG,KAAOwD,EAASxD,EAAE,OAE5DmE,EAAKvF,UAAU0F,GAASxB,EAASM,KAAKI,WAItB,KADde,EAAaF,EAAWO,MAAMD,WAAU,SAAAE,GAAI,OAAIA,EAAK7E,KAAOwD,EAASxD,EAAE,OAEzEqE,EAAWO,MAAML,GAAWT,EAAAA,EAAA,GACrBhB,EAASM,KAAKI,UAAQ,IACzBsB,eAAgBX,EAAKlD,iBAG7BkD,EAAKH,iBAAiBlB,EAASM,MAC/B2B,SAASC,eAAe,8BAA8BC,QACtDd,EAAKe,aAAYV,EAAApJ,OAAA,UACV,GAAI,QAEa,OAFboJ,EAAAtH,KAAA,GAAAsH,EAAAlB,GAAAkB,EAAA,SAEXL,EAAKF,YAAWO,EAAAlB,IAAQkB,EAAApJ,OAAA,UACjB,GAAK,QAES,OAFToJ,EAAAtH,KAAA,GAEZiH,EAAKpC,SAAU,EAAMyC,EAAA/G,OAAA,6BAAA+G,EAAAnH,OAAA,GAAA+G,EAAA,wBAhCElD,EAkC/B,EAEA0C,sBAAqB,WACjB,IAAM7F,GAAoBC,EAAAA,EAAAA,wBAG1B,GAAI2E,KAAK1B,cAAckE,MAAK,SAAAN,GAAI,OAAIA,EAAKzF,QAAQ,IAE7C,OADArB,EAAkB+C,8BAA8B,oBAAqB,sFAC9D,EAKX,IADA,IAAM8D,EAAQjC,KAAK1B,cAAcmE,QAAO,SAAAP,GAAI,OAAKA,EAAKxF,SAAyB,QAAdwF,EAAK3L,IAAc,IAAEmM,MAAK,SAACnN,EAAGoN,GAAC,OAAK5F,IAAMxH,EAAEsI,gBAAgB+E,SAAS7F,IAAM4F,EAAE9E,kBAAoB,EAAI,CAAC,IAC9JxI,EAAI,EAAGA,EAAI4M,EAAMxI,OAAS,EAAGpE,IAClC,GAAI0H,IAAMkF,EAAM5M,GAAGwN,cAAcD,SAAS7F,IAAMkF,EAAM5M,EAAI,GAAGwI,iBAEzD,OADAzC,EAAkB+C,8BAA8B,eAAgB,6FACzD,EAGf,OAAO,CACX,EAEAiD,sBAAqB,WACjB,OAAOpB,KAAK1B,cAAcmE,QAAO,SAAAP,GAAI,OAAKA,EAAKxF,SAAyB,QAAdwF,EAAK3L,IAAc,IAAEmM,MAAK,SAACnN,EAAGoN,GAAC,OAAK5F,IAAMxH,EAAEsI,gBAAgB+E,SAAS7F,IAAM4F,EAAE9E,kBAAoB,EAAI,CAAC,GACpK,EAEAwD,iBAAgB,SAAClB,GACb,IAAQE,EAAoBF,EAApBE,QAASC,EAAWH,EAAXG,QACSjF,EAAAA,EAAAA,wBACRqF,qBAAqBL,EAASC,EACpD,EAEAgB,YAAW,SAAC/B,GACR,IAAMnE,GAAoBC,EAAAA,EAAAA,wBACpByH,EAAevD,EAAMY,SAAWZ,EAAMY,SAASM,KAAKJ,QAAUd,EAAMc,QACtE0C,EAAexD,EAAMY,UAAYZ,EAAMY,SAASM,KAAKuC,QAAUzD,EAAMY,SAASM,KAAKuC,QAAU,GAGjG,GAA4B,iBAAjBD,EACP,IACIA,EAAeE,KAAKC,MAAMH,EAC9B,CAAE,MAAOpO,GAELoO,EAAe,CAAEC,QAASD,EAC9B,CAKJ,IADA,IAAII,EAAwB,OAC5BC,EAAA,EAAAC,EAAgCvO,OAAOwO,QAAQP,GAAaK,EAAAC,EAAA5J,OAAA2J,IAAE,CAAzD,IAAAG,EAAAC,EAAAH,EAAAD,GAAA,GAAOK,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GAEjBI,EAAcC,MAAMC,QAAQH,GAAYA,EAASI,KAAK,MAAQJ,EACpEP,GAAyB,eAAJxG,OAAmB8G,EAAK,eAAA9G,OAAcgH,EAAW,QAC1E,CACAR,GAAyB,QAGzB/H,EAAkB+C,8BAA8B,mBAAoB,GAAFxB,OAAKmG,EAAY,MAAAnG,OAAKwG,IAExFnD,KAAKT,MAAQuD,CACjB,EAEAiB,gBAAe,SAAClD,GACZ/C,QAAQC,IAAI,YAAa8C,GACzB,IAAMvF,GAAYC,EAAAA,EAAAA,gBAEZsB,EAAYE,IAAAA,IAAU8D,EAAShD,gBAAgBmG,GAAG1I,EAAUmD,UAAUzB,OAAO,oBAC7EE,EAAUH,IAAAA,IAAU8D,EAASgC,cAAcmB,GAAG1I,EAAUmD,UAAUzB,OAAO,oBAE/EgD,KAAK3C,GAAKwD,EAASxD,GACnB2C,KAAKnG,KAAOgH,EAAShH,KACrBmG,KAAKR,YAAcqB,EAASrB,YAC5BQ,KAAKP,IAAMoB,EAASpB,IACpBO,KAAKzJ,KAAOsK,EAAStK,KACrByJ,KAAKN,SAAWmB,EAASnB,SACzBM,KAAKhE,YAAc6E,EAAS7E,YAC5BgE,KAAKL,iBAAmBkB,EAASlB,iBACjCK,KAAKnD,UAAYA,EACjBmD,KAAK9C,QAAUA,EAEfY,QAAQC,IAAI,2BAA4B8C,EAASsB,gBAEjDnC,KAAK1B,cAAgBuC,EAASsB,eACzBM,QAAO,SAAAP,GAEJ,OADApE,QAAQC,IAAI,kBAAmBmE,GACxBA,OACX,IACC+B,KAAI,SAAA/B,GACD,IAAMgC,EAAa,CACf7G,GAAI6E,EAAK7E,GACT8G,WAAYjC,EAAKiC,WACjBC,aAAclC,EAAKkC,aACnBC,MAAOnC,EAAKmC,MACZC,WAAYpC,EAAKoC,WACjBC,YAAarC,EAAKqC,YAClBC,YAAatC,EAAKsC,YAClBC,QAASvC,EAAKuC,QACdC,aAAcxC,EAAKwC,aACnBC,sBAAuBzC,EAAKyC,sBAC5BC,kBAAmB1C,EAAK0C,kBACxBC,mBAAoB3C,EAAK2C,mBACzBC,wBAAyB5C,EAAK4C,wBAC9BC,SAAU7C,EAAK6C,SACfC,WAAY9C,EAAK8C,WACjBnH,eAAgBqE,EAAKrE,eACrBgF,aAAcX,EAAKW,aACnBlF,iBAAkBuE,EAAKvE,iBACvBpH,KAAM2L,EAAK3L,KACX0O,QAAS/C,EAAK+C,SAGlB,OADAnH,QAAQC,IAAI,eAAgBmG,GACrBA,CACX,IAEJpG,QAAQC,IAAI,sBAAuBiC,KAAK1B,cAC5C,EACM/B,eAAc,WAAG,IAAA2I,EAAA,YAAA3G,EAAA7J,IAAAoF,MAAA,SAAAqL,IAAA,IAAA/J,EAAAgK,EAAAjF,EAAAkF,EAAAhF,EAAAC,EAAA,OAAA5L,IAAAuB,MAAA,SAAAqP,GAAA,cAAAA,EAAA/K,KAAA+K,EAAA1M,MAAA,OAG6B,GAFhDsM,EAAK7F,kBAAmB,EACxB6F,EAAK3C,aACCnH,GAAoBC,EAAAA,EAAAA,wBAErB6J,EAAKrI,WAAcqI,EAAKhI,QAAO,CAAAoI,EAAA1M,KAAA,QAEH,OAD7BwC,EAAkB+C,8BAA8B,+BAAgC,kDAChF+G,EAAK7F,kBAAmB,EAAKiG,EAAA7M,OAAA,wBAAA6M,EAAA/K,KAAA,EAAA+K,EAAA1M,KAAA,GAKN2H,MAAMC,IAAI,iBAAkB,CAC/C+E,OAAQ,CACJ1I,UAAWqI,EAAKM,aAChBtI,QAASgI,EAAKO,cAEpB,QAU2B,OAfvBtF,EAAQmF,EAAAhN,MAOd8M,EAAAF,EAAK5G,eAAclF,KAAIgD,MAAAgJ,EAAAM,EAAIvF,EAASM,KAAKwB,MAAMgC,KAAI,SAAA/B,GAAI,OAAAf,EAAAA,EAAA,GAChDe,GAAI,IACPxF,SAAS,EACTgI,cAAc,GAAI,MAClBW,EACsBlF,EAASM,KAA5BJ,EAAOgF,EAAPhF,QAASC,EAAM+E,EAAN/E,OAChBlF,EAAkBsF,qBAAqBL,EAASC,GAChD4E,EAAKS,kBACLT,EAAK7F,kBAAmB,EAAKiG,EAAA7M,OAAA,SACtB0H,EAASM,MAAI,QAIS,MAJT6E,EAAA/K,KAAA,GAAA+K,EAAA3E,GAAA2E,EAAA,SAEpBJ,EAAK3F,MAAQ+F,EAAA3E,GAAMR,SAAWmF,EAAA3E,GAAMR,SAASM,KAAKJ,QAAUiF,EAAA3E,GAAMN,QAClEjF,EAAkBsF,qBAAqBwE,EAAK3F,MAAO,SACnD2F,EAAK7F,kBAAmB,EAAKiG,EAAA3E,GAAA,yBAAA2E,EAAA5K,OAAA,GAAAyK,EAAA,kBAhCd5G,EAmCvB,EACAnB,WAAU,SAACC,GACP,IAAM6E,EAAOlC,KAAK1B,cAAcsH,MAAK,SAAA1D,GAAI,OAAIA,EAAK7E,KAAOA,CAAE,IACvD6E,IACAA,EAAKxF,SAAU,EACfsD,KAAK1B,cAAaoH,EAAO1F,KAAK1B,eAC9B0B,KAAK2F,mBAET3F,KAAKuC,YACT,EACAjF,QAAO,SAACD,GACJ,IAAM6E,EAAOlC,KAAK1B,cAAcsH,MAAK,SAAA1D,GAAI,OAAIA,EAAK7E,KAAOA,CAAE,IACvD6E,IACAA,EAAKxF,SAAU,EACfsD,KAAK1B,cAAaoH,EAAO1F,KAAK1B,eAC9B0B,KAAK2F,mBAET3F,KAAKuC,YACT,EACAsD,eAAc,WACV7F,KAAK1B,cAAgB,GACrB0B,KAAKuC,YACT,EACAhF,kBAAiB,WACbyC,KAAK1B,cAAgB0B,KAAK1B,cAAcmE,QAAO,SAAAP,GAAI,OAAKA,EAAKxF,OAAO,IACpEsD,KAAKuC,aACLvC,KAAK8F,oBACT,EACAA,mBAAkB,WACd9F,KAAK1B,cAAgB0B,KAAK1B,cAAc2F,KAAI,SAAC/B,EAAMP,GAAK,OAAAR,EAAAA,EAAA,GAAUe,GAAI,IAAEP,MAAAA,GAAK,GACjF,EACAgE,gBAAe,WACX,IAAM1D,EAAQjC,KAAK1B,cAAcmE,QAAO,SAAAP,GAAI,OAAKA,EAAKxF,OAAO,IAC7DuF,EAAMS,MAAK,SAACnN,EAAGoN,GAAC,OAAK5F,IAAMxH,EAAEsI,gBAAgB+E,SAAS7F,IAAM4F,EAAE9E,kBAAoB,EAAI,CAAC,IAEvF,IAAK,IAAIxI,EAAI,EAAGA,EAAI4M,EAAMxI,OAAQpE,IAAK,CACf4M,EAAM5M,GACdoH,UAAW,CAC3B,CAEA,IAAK,IAAIpH,EAAI,EAAGA,EAAI4M,EAAMxI,OAAQpE,IAE9B,IADA,IAAM0Q,EAAc9D,EAAM5M,GACjB2Q,EAAI3Q,EAAI,EAAG2Q,EAAI/D,EAAMxI,OAAQuM,IAAK,CACvC,IAAMC,EAAWhE,EAAM+D,GAEnBjJ,IAAMgJ,EAAYlI,gBAAgB+E,SAAS7F,IAAMkJ,EAASpD,gBAC1D9F,IAAMgJ,EAAYlD,cAAcqD,QAAQnJ,IAAMkJ,EAASpI,mBAEvDkI,EAAYtJ,UAAW,EACvBwJ,EAASxJ,UAAW,EAE5B,CAER,EACA0J,eAAc,SAACtF,GACXb,KAAKpB,iBAAmBiC,CAC5B,EACAuF,eAAc,SAACC,GACXC,EAAAA,GAAM,OAAQC,MAAM,2BAA4B,CAAEC,gBAAiBH,IACvE,EACA9D,WAAU,WACNvC,KAAKT,MAAQ,IACjB,EACA/B,iBAAgB,WAAG,IAEXiJ,EAFWC,EAAA,KACf1G,KAAKV,YAAa,EAGlB,EAAG,CACCmH,GAAoB,EAKpB,IAFA,IAqDCE,EArDG1E,EAAQjC,KAAK1B,cAAcmE,QAAO,SAAAP,GAAI,OAAKA,EAAKxF,OAAO,IAACkK,EAAA,WAGxD,IAAMb,EAAc9D,EAAM5M,GAE1B,IAAK0Q,EAAYtJ,SAAU,OAAF,EAEzB,IAFmC,IA6ClCoK,EA7CkCC,EAAA,WAG/B,IAAMC,EAAe9E,EAAM+D,GAE3B,GAAIe,EAAarK,QAAS,OAAF,EAGxB,IAAMsK,EAAejK,IAAMgJ,EAAYlI,gBACjCoJ,EAAclK,IAAMgK,EAAalE,cACjCqE,EAAgBnK,IAAMgK,EAAalJ,gBAEzC,OACImJ,EAAaG,OAAOD,IACnBF,EAAapE,SAASqE,KAAiBD,EAAaG,OAAOF,GAGxDlB,EAAYrG,SAAWqH,EAAarH,UACpCgH,EAAKpI,cAAgBoI,EAAKpI,cAAc2F,KAAI,SAAA/B,GAAI,OAC5CA,EAAK7E,KAAO0I,EAAY1I,GAAE8D,EAAAA,EAAA,GAAOe,GAAI,IAAExF,SAAS,IAAQwF,CAAI,IAEhEuE,GAAoB,EAAI,GAEjBV,EAAYrG,SAAWqH,EAAarH,UAC3CgH,EAAKpI,cAAgBoI,EAAKpI,cAAc2F,KAAI,SAAA/B,GAAI,OAC5CA,EAAK7E,KAAO0J,EAAa1J,GAAE8D,EAAAA,EAAA,GAAOe,GAAI,IAAExF,SAAS,IAAQwF,CAAI,IAEjEuE,GAAoB,EAAI,GAGpB1J,IAAMgJ,EAAYqB,YAAYlB,QAAQnJ,IAAMgK,EAAaK,cACzDV,EAAKpI,cAAgBoI,EAAKpI,cAAc2F,KAAI,SAAA/B,GAAI,OAC5CA,EAAK7E,KAAO0I,EAAY1I,GAAE8D,EAAAA,EAAA,GAAOe,GAAI,IAAExF,SAAS,IAAQwF,CAAI,IAEhEuE,GAAoB,EAAI,IAGxBC,EAAKpI,cAAgBoI,EAAKpI,cAAc2F,KAAI,SAAA/B,GAAI,OAC5CA,EAAK7E,KAAO0J,EAAa1J,GAAE8D,EAAAA,EAAA,GAAOe,GAAI,IAAExF,SAAS,IAAQwF,CAAI,IAEjEuE,GAAoB,EAAI,QA5BpC,CAiCJ,EA3CST,EAAI,EAAGA,EAAI3Q,IAAM,KAAAwR,EAAAC,MAGY,IAAAD,GAHfb,KA6CvB,OAAIS,EAAiB,OAArB,CACJ,EAnDSpR,EAAI,EAAGA,EAAI4M,EAAMxI,SAAW,KAAAkN,EAAAC,MAGE,IAAAD,GAHLtR,KAqDtC,OAASoR,GAETzG,KAAK2F,kBAEL3F,KAAKV,YAAa,CACtB,EAEA+H,WAAU,WACNrH,KAAKuC,aAKL,IAAMN,EAAQjC,KAAK1B,cACdmE,QAAO,SAAAP,GAAI,OAAKA,EAAKxF,OAAO,IAC5BuH,KAAI,SAAA/B,GAAI,OAAAf,EAAAA,EAAA,GACFe,GAAI,IACPoF,MAAOvK,IAAMmF,EAAKrE,gBAClB0J,IAAKxK,IAAMmF,EAAKW,eAAa,IAKrC7C,KAAKnB,KAAO,GAES,IAAjBoD,EAAMxI,OAENuG,KAAKnB,KAAKzF,KAAK,CACX7C,KAAM,MACNsH,eAAgBd,IAAAA,IAAUiD,KAAKwF,cAAcgC,cAC7C3E,aAAc9F,IAAAA,IAAUiD,KAAKyF,YAAY+B,cACzC7J,iBAAkBZ,IAAMiD,KAAKyF,YAAYgC,KAAK1K,IAAMiD,KAAKwF,cAAe,UACxEnI,GAAI,OAAFV,OAASI,IAAAA,IAAUiD,KAAKwF,cAAcgC,cAAa,KAAA7K,OAAII,IAAAA,IAAUiD,KAAKyF,YAAY+B,eACpFF,MAAOvK,IAAAA,IAAUiD,KAAKwF,cACtB+B,IAAKxK,IAAAA,IAAUiD,KAAKyF,eAGxBzF,KAAK0H,2BAA2BzF,GAChCjC,KAAK2H,yBAAyB1F,GAC9BjC,KAAK4H,yBAAyB3F,IAMlCjC,KAAK1B,cAAgB,GAAA3B,OAAA+I,EAAIzD,GAAKyD,EAAK1F,KAAKnB,OAAM6D,MAAK,SAACnN,EAAGoN,GAAC,OAAKpN,EAAE+R,MAAM1E,SAASD,EAAE2E,QAAU,EAAI,CAAC,GAGnG,EAGAI,2BAA0B,SAACzF,GAEvB,GAAIA,EAAMxI,OAAS,GAAKsD,IAAAA,IAAUiD,KAAKwF,cAAc5C,SAASX,EAAM,GAAGqF,OAAQ,CAC3E,IAAMO,EAAW9K,IAAAA,IAAUiD,KAAKwF,cAC1BsC,EAAS7F,EAAM,GAAGqF,MAClBS,EAAcD,EAAOL,KAAKI,EAAU,UAG1C7H,KAAKnB,KAAKzF,KAAK,CACX7C,KAAM,MACNsH,eAAgBgK,EAASL,cACzB3E,aAAciF,EAAON,cACrB7J,iBAAkBoK,EAClB1K,GAAI,OAAFV,OAASkL,EAASL,cAAa,KAAA7K,OAAImL,EAAON,eAC5CF,MAAOO,EACPN,IAAKO,GAEb,CAGJ,EAEAH,yBAAwB,SAAC1F,GAErB,IAAK,IAAI5M,EAAI,EAAGA,EAAI4M,EAAMxI,OAAS,EAAGpE,IAAK,CACvC,IAAM0Q,EAAc9D,EAAM5M,GACpB4Q,EAAWhE,EAAM5M,EAAI,GAErBwS,EAAW9B,EAAYwB,IACvBO,EAAS7B,EAASqB,MAMxB,GAAIO,EAASjF,SAASkF,GAAS,CAC3B,IAAMC,EAAcD,EAAOL,KAAKI,EAAU,UAG1C7H,KAAKnB,KAAKzF,KAAK,CACX7C,KAAM,MACNsH,eAAgBgK,EAASL,cACzB3E,aAAciF,EAAON,cACrB7J,iBAAkBoK,EAClB1K,GAAI,OAAFV,OAASkL,EAASL,cAAa,KAAA7K,OAAImL,EAAON,eAC5CF,MAAOO,EACPN,IAAKO,GAEb,CAGJ,CACJ,EAEAF,yBAAwB,SAAC3F,GAErB,GAAIA,EAAMxI,OAAS,EAAG,CAClB,IAAMuO,EAAc/F,EAAMA,EAAMxI,OAAS,GAAG8N,IACtCrK,EAAUH,IAAAA,IAAUiD,KAAKyF,YAI/B,GAAIuC,EAAYpF,SAAS1F,GAAU,CAC/B,IAAM2K,EAAWG,EACXF,EAAS5K,EACT6K,EAAcD,EAAOL,KAAKI,EAAU,UAG1C7H,KAAKnB,KAAKzF,KAAK,CACX7C,KAAM,MACNsH,eAAgBgK,EAASL,cACzB3E,aAAciF,EAAON,cACrB7J,iBAAkBoK,EAClB1K,GAAI,OAAFV,OAASkL,EAASL,cAAa,KAAA7K,OAAImL,EAAON,eAC5CF,MAAOO,EACPN,IAAKO,GAEb,CAGJ,CAGJ,EACMG,aAAY,SAACC,EAAaC,EAAoBxM,GAAsC,IAAAyM,EAAAjM,UAAAkM,EAAA,YAAA9J,EAAA7J,IAAAoF,MAAA,SAAAwO,IAAA,IAAAC,EAAAC,EAAApN,EAAAqN,EAAAtI,EAAAuI,EAAArI,EAAAC,EAAA,OAAA5L,IAAAuB,MAAA,SAAA0S,GAAA,cAAAA,EAAApO,KAAAoO,EAAA/P,MAAA,OAetF,OAf+D2P,EAAIH,EAAA3O,OAAA,QAAAmP,IAAAR,EAAA,GAAAA,EAAA,GAAG,EAAGI,EAAMJ,EAAA3O,OAAA,QAAAmP,IAAAR,EAAA,GAAAA,EAAA,GAAG,GAClFC,EAAKjJ,SAAU,EACfiJ,EAAK9F,aACCnH,GAAoBC,EAAAA,EAAAA,wBAGpBoN,EAAmB1L,IAAMpB,GAAeqI,GAAGjH,IAAAA,GAAS8L,SAASrK,MAAMxB,OAAO,0BAShF2L,EAAApO,KAAA,EAAAoO,EAAA/P,KAAA,EAG2B2H,MAAMC,IAAI,sCAAuC,CACpE+E,OAAQ,CACJhP,KAAM2R,EACNC,mBAAoBA,EACpBtK,eAAgB4K,EAChBF,KAAMA,EACNC,OAAQA,KAEd,OARIrI,EAAQwI,EAAArQ,KASdwF,QAAQC,IAAI,iBAAkBoC,EAASM,MACvC4H,EAAKtJ,aAAeoB,EAASM,KAAKwB,MAClCoG,EAAKpJ,YAAckB,EAASM,KAAKqI,aACjCT,EAAKnJ,WAAaiB,EAASM,KAAKsI,YAChCV,EAAKrJ,gBAAiB,EAAI0J,EACAvI,EAASM,KAA5BJ,EAAOqI,EAAPrI,QAASC,EAAMoI,EAANpI,OAChBlF,EAAkBsF,qBAAqBL,EAASC,GAAOqI,EAAA/P,KAAA,iBAAA+P,EAAApO,KAAA,GAAAoO,EAAAhI,GAAAgI,EAAA,SAEvDN,EAAK9I,MAAQoJ,EAAAhI,GAAMR,SAAWwI,EAAAhI,GAAMR,SAASM,KAAKJ,QAAUsI,EAAAhI,GAAMN,QAClEvC,QAAQyB,MAAM,0BAA2B8I,EAAK9I,OAC9CnE,EAAkBsF,qBAAqB2H,EAAK9I,MAAO,SAAQ,QAEvC,OAFuCoJ,EAAApO,KAAA,GAE3D8N,EAAKjJ,SAAU,EAAKuJ,EAAA7N,OAAA,6BAAA6N,EAAAjO,OAAA,GAAA4N,EAAA,wBAvC8D/J,EAyC1F,EACAyK,qBAAoB,SAAC/D,GACjBjF,KAAKuC,aACLvC,KAAK1B,cAAclF,KAAK6L,GACxBjF,KAAK1B,cAAaoH,EAAO1F,KAAK1B,eAC9B0B,KAAKiJ,UAAUhE,EAAQpH,gBACvBmC,KAAKqH,YACT,EACA4B,UAAS,SAACtN,GAGNqE,KAAK1B,cAAgB0B,KAAK1B,cAAcmE,QAAO,SAAAP,GAAI,QAAoB,QAAdA,EAAK3L,MAAkB2L,EAAKrE,iBAAmBlC,EAAc,GAC1H,EACAuN,aAAY,WACRlJ,KAAKjB,aAAe,GACpBiB,KAAKhB,gBAAiB,EACtBgB,KAAKT,MAAQ,KACbS,KAAKf,YAAc,EACnBe,KAAKd,WAAa,EAClBc,KAAKb,YAAc,EACvB,EACAgK,eAAc,SAACC,GACXpJ,KAAKb,YAAciK,CACvB,EACAC,QAAO,SAACd,GACJvI,KAAKf,YAAcsJ,CACvB,GAGJe,QAAS,CACL9D,aAAc,SAAA3F,GACV,OAAO9C,IAAM8C,EAAMhD,WAAW2B,MAAMxB,OAAO,yBAC/C,EACAyI,WAAY,SAAA5F,GACR,OAAO9C,IAAM8C,EAAM3C,SAASsB,MAAMxB,OAAO,yBAC7C,EACAuM,8BAA6B,SAAC1J,GAC1B,IAAMvE,GAAYC,EAAAA,EAAAA,gBACZ0G,EAAQpC,EAAMvB,cAAc2F,KAAI,SAAA/B,GAClC,OAAAf,EAAAA,EAAA,GACOe,GAAI,IACPrE,eAAgBd,IAAMmF,EAAKrE,gBAAgBmG,GAAG1I,EAAUmD,UAAUzB,OAAO,wBACzE6F,aAAc9F,IAAMmF,EAAKW,cAAcmB,GAAG1I,EAAUmD,UAAUzB,OAAO,yBAE7E,IAEA,OADAiF,EAAMS,MAAK,SAACnN,EAAGoN,GAAC,OAAK5F,IAAMxH,EAAEsI,gBAAgB+E,SAAS7F,IAAM4F,EAAE9E,kBAAoB,EAAI,CAAC,IAChFoE,CACX,EACAuH,gBAAe,SAAC3J,GACZ,OAAOA,EAAMvB,cAAckE,MAAK,SAAAN,GAAI,OAAIA,EAAKxF,OAAO,GACxD,EACA0B,cAAa,SAACyB,GACV,OAAOA,EAAMvB,cAAcmE,QAAO,SAAAP,GAAI,OAAIA,EAAKzF,WAAayF,EAAKxF,OAAO,IAAEjD,MAC9E,EACA4E,SAAQ,SAACwB,GACL,IAAMoC,EAAQpC,EAAMvB,cACfmE,QAAO,SAAAP,GAAI,OAAKA,EAAKxF,SAAyB,QAAdwF,EAAK3L,IAAc,IACnD0N,KAAI,SAAA/B,GAAI,MAAK,CACVoF,MAAOvK,IAAMmF,EAAKrE,gBAClB0J,IAAKxK,IAAMmF,EAAKW,cAChBpG,SAAUyF,EAAKzF,SAClB,IAEDoC,EAAO,EAQX,GAAqB,IAAjBoD,EAAMxI,OAEN,OAAO,EAIPsD,IAAAA,IAAU8C,EAAM2F,cAAc5C,SAASX,EAAM,GAAGqF,QAEhDzI,IAMJ,IAAK,IAAIxJ,EAAI,EAAGA,EAAI4M,EAAMxI,OAAS,EAAGpE,IAAK,CACvC,IAAM0Q,EAAc9D,EAAM5M,GACpB4Q,EAAWhE,EAAM5M,EAAI,GAMtB0Q,EAAYtJ,UAAawJ,EAASxJ,WAAYsJ,EAAYwB,IAAI3E,SAASqD,EAASqB,QAEjFzI,GAIR,CAWA,OARI9B,IAAAA,IAAU8C,EAAM4F,YAAYS,QAAQjE,EAAMA,EAAMxI,OAAS,GAAG8N,MAE5D1I,IAMGA,CACX,iGC5qBD,SAAS4K,EAAaC,GACzB,IAAMpO,GAAYC,EAAAA,EAAAA,gBACZoO,GAAkBC,EAAAA,EAAAA,sBAClBC,GAAmBC,EAAAA,EAAAA,uBAEzBH,EAAgB1K,YAAcyK,EAC9BC,EAAgBI,kBAAmB,EACnCJ,EAAgBK,cAAe,EAG3B1O,EAAU2O,UAAYC,OAAOC,WAAa,MAEnCR,EAAgBS,SADvBT,EAAgBU,IAAM,GAIM,IAAxBV,EAAgBU,MAChBV,EAAgBU,IAAM,GAG1BV,EAAgBW,gBAAiB,GAGrCT,EAAiBU,oBAEbZ,EAAgBa,aAChBb,EAAgBa,YAAa,EAC7Bb,EAAgBc,iBAAkB,EAClCP,OAAOQ,SAASC,UAWhBrE,EAAAA,GAAOsE,GAAG,YAAY,SAACC,GAEfvP,EAAU2O,UAAYC,OAAOC,WAAa,MAAQR,EAAgBS,SAClET,EAAgBU,IAAM,EAEM,IAAxBV,EAAgBU,MAChBV,EAAgBU,IAAM,GAIqB,KAA3BH,OAAOQ,SAASlC,SAChBmB,EAAgBmB,mBACpCC,uBAAsB,WAClB,IAAMC,EAAS5I,SAASC,eAAe,UACnC2I,EACAA,EAAOC,eAAe,CAACC,SAAU,SAEjChB,OAAOiB,SAAS,EAAG,EAE3B,IAEJxB,EAAgBmB,mBAAoB,CACxC,IAEJnB,EAAgByB,aAChBzB,EAAgBW,gBAAiB,EACjCX,EAAgB0B,UAAW,GAI3BC,EAAAA,EAAAA,QACI,kBAAM3B,EAAgBnO,aAAa,IACnC,SAAC+P,GAEO5B,EAAgBU,IADhBkB,EACsB,EAEA,CAE9B,GACA,CAAEC,WAAW,GAGrB,uECnFIC,QAA0B,GAA4B,KAE1DA,EAAwBrS,KAAK,CAACsS,EAAOrO,GAAI,4YAA6Y,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,0FAA0F,MAAQ,GAAG,SAAW,qLAAqL,eAAiB,CAAC,6vBAAqwB,WAAa,MAE1hD,+ECJIoO,QAA0B,GAA4B,KAE1DA,EAAwBrS,KAAK,CAACsS,EAAOrO,GAAI,iHAAkH,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,+EAA+E,MAAQ,GAAG,SAAW,8CAA8C,eAAiB,CAAC,02GAA20G,WAAa,MAEnrH,2kSCFA,6FC6FA,IAAMsO,GAAeC,EAAAA,EAAAA,mBAMjBC,IALe/J,EAAAA,EAAAA,iBAKPgK,GAURC,IAHiBtQ,EAAAA,EAAAA,MAAI,IAERA,EAAAA,EAAAA,KAAI,CAAC,CAACuQ,IAAK,GAAI5W,MAAO,OACpBqG,EAAAA,EAAAA,KAAI,KAEjBwQ,EAAmB,WACvBC,EAAKnH,SAAS3L,KAAK,CAAC4S,IAAK,GAAI5W,MAAO,IACtC,EAMI8W,GAAOC,EAAAA,EAAAA,WAASC,EAAAA,EAAAA,IAAQ,CAC1B/O,GAAI,GACJxD,KAAM,GACNwS,OAAQ,UACRC,UAAW,gCACXC,QAAS,GACTxH,SAAU,MAGZmH,EAAK3S,SAGL+R,EAAAA,EAAAA,QAAM,kBAAMK,EAAaa,UAAU,IAAE,SAACC,GAChCA,GAEFP,EAAK7O,GAAKoP,EAAOpP,IAAM,GACvB6O,EAAKrS,KAAO4S,EAAO5S,MAAQ,GAC3BkS,EAAa3W,MAAQqX,EAAO5S,MAAQ,GACpCqS,EAAKG,OAASI,EAAOJ,QAAU,UAC/BH,EAAKI,UAAYG,EAAOH,WAAa,gCACrCJ,EAAKK,QAAUE,EAAOF,SAAW,GAG7BE,EAAO1H,UAAuC,WAA3BnN,EAAO6U,EAAO1H,UACnCmH,EAAKnH,SAAWjQ,OAAOwO,QAAQmJ,EAAO1H,UAAUd,KAAI,SAAApI,GAAA,IAAA6Q,EAAAlJ,EAAA3H,EAAA,GAAY,MAAO,CACrEmQ,IADuDU,EAAA,GAClDtX,MADyDsX,EAAA,GAE/D,IAEDR,EAAKnH,SAAW,CAAC,CAACiH,IAAK,GAAI5W,MAAO,MAIpC8W,EAAK3S,OAET,GAAG,CAACoT,MAAM,EAAMnB,WAAW,IAW3B,IAAIoB,EAAM,eAAAC,EAAAtO,EAAA7J,IAAAoF,MAAG,SAAAgC,IAAA,OAAApH,IAAAuB,MAAA,SAAA8F,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAnD,MAAA,cAAAmD,EAAAnD,KAAA,EACLsT,EAAKhL,KAAKqF,MAAM,yBAA0B,CAAEwF,aAAcA,EAAa3W,SAAS,OAUtF4I,IAAY,wBAAAjC,EAAArB,OAAA,GAAAoB,EAAA,KACb,kBAZS,OAAA+Q,EAAAzQ,MAAA,KAAAD,UAAA,KAqBV,SAAS6B,IACPoE,SAASC,eAAewJ,EAAMxO,IAAIiF,QAClCqJ,EAAamB,kBAEbZ,EAAK3S,QAEL2S,EAAKa,aACP,46HA7E4B,SAACpL,GAC3BuK,EAAKnH,SAASiI,OAAOrL,EAAO,EAC9B,g6RCrHA,6DC0CwBiI,EAAAA,EAAAA,sBAERG,kBAAmB,EAEnC,IAAI8B,EAAQC,EAYNmB,IAPcC,EAAAA,EAAAA,WAAS,iBAAO,CAClC,oEAAqErB,EAAMsB,MAAMC,QACjF,gEAAiEvB,EAAMsB,MAAM9M,QAC7E,wEAAyEwL,EAAMsB,MAAME,QACrF,4DAA6DxB,EAAMsB,MAAM5N,MAC1E,IAEsB,iBAAA1D,KAAAnH,IAAAoF,MAAG,SAAAgC,IAAA,OAAApH,IAAAuB,MAAA,SAAA8F,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAnD,MAAA,cAAAmD,EAAAnD,KAAA,EAClB0N,EAAAA,GAAOpF,KAAKqF,MAAM,gBAAe,OACvCD,EAAAA,GAAOqE,SAAS,wBAAA5O,EAAArB,OAAA,GAAAoB,EAAA,mLACjB,kBAHsB,OAAAD,EAAAO,MAAA,KAAAD,UAAA,ikGC1DvB,8HCwBA,IAAM0P,EAAQC,GAUKK,EAAAA,EAAAA,UAAQhL,EAAAA,EAAC,CAAC,EAJR,CACnBmM,eAAe,IAGiCzB,knEClClD,uJC4DMA,EAAQC,EAQR5D,GAAczM,EAAAA,EAAAA,KAAI,eAClB8R,GAAgBpS,EAAAA,EAAAA,2BAEhB4D,GAAemO,EAAAA,EAAAA,WAAS,kBAAMK,EAAcxO,YAAY,IACxDC,GAAiBkO,EAAAA,EAAAA,WAAS,kBAAMK,EAAcvO,cAAc,IAC5DO,GAAQ2N,EAAAA,EAAAA,WAAS,kBAAMK,EAAchO,KAAK,IAC1CH,GAAU8N,EAAAA,EAAAA,WAAS,kBAAMK,EAAcnO,OAAO,IAC9CH,GAAciO,EAAAA,EAAAA,WAAS,kBAAMK,EAActO,WAAW,IACtDC,GAAagO,EAAAA,EAAAA,WAAS,kBAAMK,EAAcrO,UAAU,IACpDC,GAAc+N,EAAAA,EAAAA,WAAS,kBAAMK,EAAcpO,WAAW,IAEtDqO,GAAuBN,EAAAA,EAAAA,WAAS,WACpC,OAAQhF,EAAY9S,OAClB,IAAK,cACH,MAAO,gBACT,IAAK,QACH,MAAO,SACT,IAAK,YACH,MAAO,eACT,IAAK,eACH,MAAO,gBACT,IAAK,aACH,MAAO,UACT,QACE,MAAO,UAEb,IAEMqY,EAAqB,WACzBF,EAActF,aAAaC,EAAY9S,MAAOyW,EAAM9D,YAAa8D,EAAMlQ,cAAesD,EAAY7J,MAAO+J,EAAY/J,MACvH,EAEMsY,EAAe,SAAC7C,GACpB0C,EAAcpE,eAAe0B,EAAM8C,OAAOvY,OAC1CqY,GACF,EAOMzP,EAAa,WACjBuP,EAActN,uBACdiJ,GACF,EAEMA,EAAe,WACnBqE,EAAcrE,cAChB,EAEM0E,EAAW,WACX3O,EAAY7J,MAAQ,IACtBmY,EAAclE,QAAQpK,EAAY7J,MAAQ,GAC1CqY,IAEJ,EAEMI,EAAW,WACX5O,EAAY7J,MAAQ8J,EAAW9J,QACjCmY,EAAclE,QAAQpK,EAAY7J,MAAQ,GAC1CqY,IAEJ,+hDA1BoBxI,IAClBsI,EAAcvE,qBAAqB/D,QACnCjH,IAFiB,IAACiH,21GCzGpB,2CC8EA,IAAA6I,GAOI7S,EAAAA,EAAAA,KANFC,EAAK4S,EAAL5S,MACA0B,EAAkBkR,EAAlBlR,mBACAE,EAAmBgR,EAAnBhR,oBACAG,EAAgB6Q,EAAhB7Q,iBACAE,EAAiB2Q,EAAjB3Q,kBACAvB,EAAsBkS,EAAtBlS,8BAIF0P,EAAAA,EAAAA,QAAM,kBAAMpQ,EAAMc,WAAW,IAAE,SAACuP,GAC9BzN,QAAQC,IAAI,0BACK,kBAAbwN,GACF3P,GAEJ,GAAG,CAAC4P,WAAW,srJC7Ff,wHCgCMlQ,GAAYC,EAAAA,EAAAA,gBAUZwS,EAAa,SAACC,GAClB,OAAOjR,IAAMiR,GAAMhR,OAAO,uBAC5B,EAeMiR,EAAgB,SAAC1X,GAIrB,OAFuBA,EAAK2X,cAAcC,MAAM,MAAM7T,OAGpD,IAAK,QACH,MAAO,eACT,IAAK,OACH,MAAO,gBACT,IAAK,cACH,MAAO,iBACT,IAAK,eACH,MAAO,kBACT,IAAK,eACH,MAAO,kBACT,IAAK,YACH,MAAO,kBACT,QACE,MAAO,gBAEb,mCAhCuB/D,EAKf6X,ylDALe7X,cAKf6X,EAHY7X,EAAK8X,QAAQ,iBAAkB,IAGpBA,QAAQ,kBAAmB,SAGjDD,EAAW5T,OAAO,GAAG8T,cAAgBF,EAAW3T,MAAM,svBCvD/D,qHCWMoR,EAAQC,EAIRyC,EAAOC,EAEPC,EAA0B,WAC9BF,EAAK,sBAAuB1C,EAAM3J,KACpC,mhCCnBA,i+DCAA,6ICyEMqM,EAAOC,EAEbV,GAUI7S,EAAAA,EAAAA,KATFC,EAAK4S,EAAL5S,MACAM,EAAasS,EAAbtS,cACAgB,EAAgBsR,EAAhBtR,iBACAe,EAAiBuQ,EAAjBvQ,kBACAC,EAAgBsQ,EAAhBtQ,iBACAJ,EAAU0Q,EAAV1Q,WACAE,EAAOwQ,EAAPxQ,QAEAf,GADmBuR,EAAnBrQ,oBACcqQ,EAAdvR,gBAGIkS,EAA0B,SAACvM,GAC/BqM,EAAK,sBAAuBrM,EAC9B,mvbCzFA,gEC0PA,IAAMwM,GAA6BC,EAAAA,EAAAA,uBAAqB,kBAAM,uCAAwE,IAChIC,GAAeD,EAAAA,EAAAA,uBAAqB,kBAAM,+BAAoE,IAI9GjN,GAAaI,EAAAA,EAAAA,iBACb6J,GAAeC,EAAAA,EAAAA,mBACftQ,IAAYC,EAAAA,EAAAA,gBACZsT,IAAuB1T,EAAAA,EAAAA,2BAGzB0Q,GAAQC,EAMNlN,KAFQsO,EAAAA,EAAAA,WAAS,kBAAMxL,EAAWoN,aAAa,KAC/B5B,EAAAA,EAAAA,WAAS,kBAAMxL,EAAWqN,UAAU,KACjCtT,EAAAA,EAAAA,KAAI,OAWvBuT,IAAevT,EAAAA,EAAAA,KAAI,MAEnBwT,GAAa,SAAC/M,GAClB8M,GAAa5Z,MAAQ8M,EACrBE,SAASC,eAAe,oBAAoB6M,YAAchN,EAAKrI,KAC/DuI,SAASC,eAAe,yBAAyBzE,WACnD,EAeMuR,GAAgB,eAAAtT,EAAA0C,EAAA7J,IAAAoF,MAAG,SAAAgC,IAAA,OAAApH,IAAAuB,MAAA,SAAA8F,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAnD,MAAA,WACnBoW,GAAa5Z,MAAO,CAAF2G,EAAAnD,KAAA,eAAAmD,EAAAnD,KAAA,EACd8I,EAAW0N,mBAAmBJ,GAAa5Z,MAAMiI,IAAG,OAC1D+E,SAASC,eAAe,yBAAyBC,QACjD,wBAAAvG,EAAArB,OAAA,GAAAoB,EAAA,KAEH,kBANqB,OAAAD,EAAAO,MAAA,KAAAD,UAAA,KAQhBkT,GAAa,eAAA3C,EAAAnO,EAAA7J,IAAAoF,MAAG,SAAAiH,IAAA,OAAArM,IAAAuB,MAAA,SAAA+K,GAAA,cAAAA,EAAAzG,KAAAyG,EAAApI,MAAA,OAChBoW,GAAa5Z,QACfka,GAAiBN,GAAa5Z,MAAMyE,MACpCuI,SAASC,eAAe,sBAAsBC,SAE/C,wBAAAtB,EAAAtG,OAAA,GAAAqG,EAAA,KACF,kBANkB,OAAA2L,EAAAtQ,MAAA,KAAAD,UAAA,KAiBbmT,GAAmB,SAACzV,GACxByM,EAAAA,GAAOpF,KAAKqF,MAAM,qBAAsB,CAAC,KAAQ1M,IACjDuI,SAASC,eAAe,gBAAgBC,OAC1C,EASMiN,GAAyB,WAC7BV,GAAqBtV,QACrB6I,SAASC,eAAe,8BAA8BC,OACxD,EAOMkN,GAAc,WAClB9N,EAAW+N,WAAW5D,GAAMtV,KAC9B,EAUMmZ,GAAiB,SAACpP,GACtB,OAAQA,GACN,IAAK,SACH,MAAO,iBACT,IAAK,WACH,MAAO,gBACT,IAAK,YACH,MAAO,kBACT,IAAK,UACH,MAAO,kBACT,QACE,MAAO,GAEb,6wPApDsB,SAAC4B,GACrBE,SAASC,eAAe,yBAAyBzE,YACjD+N,EAAaa,WAAatK,CAC5B,gWApCmB,SAACA,GAClB8M,GAAa5Z,MAAQ8M,EACrBE,SAASC,eAAe,8BAA8B6M,YAAchN,EAAKrI,KACzEuI,SAASC,eAAe,sBAAsBzE,WAChD,6WAuC8B,SAACsE,GAC7BpE,QAAQC,IAAI,sBAAuBmE,GACnCtD,GAAiBxJ,MAAQ8M,EACzB2M,GAAqB9K,gBAAgB7B,GACrCE,SAASC,eAAe,8BAA8BzE,WACxD,4XAO8B,SAACsE,GAC7B2M,GAAqBzI,eAAelE,EAAK7E,IACzCqE,EAAWtE,WAAW8E,EACxB,y5UCjTA,IAAMR,GAAaI,EAAAA,EAAAA,iBAEf+J,EAAQC,EAWN6D,EAAc,WACpBjO,EAAWkO,eAAevD,OAASR,EAAMQ,OACzC3K,EAAWkO,eAAeC,WAAahE,EAAMgE,WAC3CzN,SAASC,eAAe,8BAA8BzE,WACxD,EAEMkS,EAAqB,iBAAAjU,KAAAnH,IAAAoF,MAAG,SAAAgC,IAAA,OAAApH,IAAAuB,MAAA,SAAA8F,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAnD,MAAA,cAAAmD,EAAAnD,KAAA,EACtB8I,EAAWqO,wBAAwBrO,EAAWkO,eAAevD,OAAQ3K,EAAWkO,eAAeC,YAAW,OAChHzN,SAASC,eAAe,8BAA8BC,QAAQ,wBAAAvG,EAAArB,OAAA,GAAAoB,EAAA,mLAE/D,kBAJ0B,OAAAD,EAAAO,MAAA,KAAAD,UAAA,6kDC5DvB6T,EAAU,CAEdA,OAAiB,OACjBA,WAAoB,GAEP,IAAI,IAASA,GAIX,IAAQC,OCNvB,MAEA,GAFiC,cAAgB,EAAQ,CAAC,CAAC,YAAY,oJCDvE,08OCAA,6CCsBA,IAAAnC,GAWI7S,EAAAA,EAAAA,KAVFC,EAAK4S,EAAL5S,MAEAqE,GADiBuO,EAAjB1S,kBACK0S,EAALvO,OACA7D,EAAmBoS,EAAnBpS,oBAEAC,GADSmS,EAATlQ,UACakQ,EAAbnS,eAEAsC,GADsB6P,EAAtBlS,uBACakS,EAAb7P,eACAR,EAAmBqQ,EAAnBrQ,oBAIImD,GAHMkN,EAAV9P,WAGkB,iBAAAnC,KAAAnH,IAAAoF,MAAG,SAAAgC,IAAA,OAAApH,IAAAuB,MAAA,SAAA8F,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAnD,MAAA,UAEhBqF,IAAiB,CAAFlC,EAAAnD,KAAA,eAAAmD,EAAAtD,OAAA,wBAAAsD,EAAAnD,KAAA,EAIdsC,EAAM0F,eAAe,CACzB/G,KAAMqB,EAAMrB,KACZ2F,YAAatE,EAAMsE,YACnBC,IAAKvE,EAAMuE,IACXlJ,KAAM2E,EAAM3E,KACZsH,eAAgB3C,EAAMsK,aACtB3C,aAAc3H,EAAMuK,WACpB/F,SAAUxE,EAAMwE,SAChB1D,YAAad,EAAMc,YACnB2D,iBAAwC,kBAAtBzE,EAAMc,YAAkCd,EAAMyE,iBAAmB,OACnF,OAEGzE,EAAMqE,MAgBTA,EAAMnK,MAAQ8F,EAAMqE,OAdpBrE,EAAMrB,KAAO,GACbqB,EAAMsE,YAAc,GACpBtE,EAAMuE,IAAM,GACZvE,EAAM3E,KAAO,UACb2E,EAAM2B,UAAYE,MAAQC,OAAO,oBACjC9B,EAAMgC,QAAUH,MAAQ+B,IAAI,GAAI,QAAQ9B,OAAO,oBAC/C9B,EAAMwE,SAAW,EACjBxE,EAAMc,YAAc,aACpBd,EAAMyE,iBAAmB,KAGzByC,SAASC,eAAe,2BAA2BC,QACnDpH,EAAM3B,SAGP,wBAAAwC,EAAArB,OAAA,GAAAoB,EAAA,mLACF,kBApCmB,OAAAD,EAAAO,MAAA,KAAAD,UAAA,MAsCd+T,EAA4B,SAACxS,GACjCD,EAAoBC,GACpBI,QAAQC,IAAI,sBAAuBL,EACrC,wnQC5EA,wDCuEA,IAAMgE,GAAaI,EAAAA,EAAAA,iBACb+M,GAAuB1T,EAAAA,EAAAA,2BAEvBgV,GAAiB1U,EAAAA,EAAAA,KAAI,IAErB2U,EAAsB,WAC1BhO,SAASC,eAAe,mBAAmBzE,WAC7C,EAEMyS,EAA8B,WAClCxB,EAAqBtV,QACrB6I,SAASC,eAAe,2BAA2BzE,WACrD,EAEM0S,EAA4B,WAChCzB,EAAqBtV,OACvB,EAEMqT,EAAM,iBAAA/Q,KAAAnH,IAAAoF,MAAG,SAAAgC,IAAA,OAAApH,IAAAuB,MAAA,SAAA8F,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAnD,MAAA,cAAAmD,EAAAnD,KAAA,EACP8I,EAAW6O,WAAWJ,EAAe/a,OAAM,OACjDgN,SAASC,eAAe,mBAAmBC,QAC3C6N,EAAe/a,MAAQ,GAAE,wBAAA2G,EAAArB,OAAA,GAAAoB,EAAA,mLAC1B,kBAJW,OAAAD,EAAAO,MAAA,KAAAD,UAAA,4yEC3FR6T,EAAU,CAEdA,OAAiB,OACjBA,WAAoB,GAEP,IAAI,IAASA,GAIX,IAAQC,OCXvB,MAAMO,EAAS,CAAC,EAOhB,GAFiC,cAAgBA,EAAQ,CAAC,CAAC,uFCLzDC,EAAAA,EAAAA,aAKSC,EAAA,CALDC,MAAA,GAAMC,UAAU,KAAKC,WAAW,KAAK,cAAY,IAAI,kBAAgB,IAAIC,UAAU,WAC9E7L,SAAO8L,EAAAA,EAAAA,UAChB,iBAA4B,EAA5BC,EAAAA,EAAAA,YAA4BC,EAAAC,OAAA,kBAAAtI,GAAA,OAHlC,SAAAmI,EAAAA,EAAAA,UAKI,iBAA8B,EAA9BC,EAAAA,EAAAA,YAA8BC,EAAAC,OAAA,oBAAAtI,GAAA,OALlCuI,EAAA,MDM4E,CAAC,YAAY,oEEDzF,+ICiBMtF,EAAQC,EAMRyC,EAAOC,EAGP4C,GAAalE,EAAAA,EAAAA,WAAS,WAAM,IAAAmE,EAChC,OAAmC,QAA5BA,EAAAxF,EAAMpL,KAAKoL,EAAMyF,mBAAW,IAAAD,OAAA,EAA5BA,EAA8BxX,OAAI,MAAA8C,OAAUkP,EAAM0F,SAAQ,QACnE,IAGMC,GAAWtE,EAAAA,EAAAA,WAAS,WACxB,OAAOrB,EAAMpL,KAAKoL,EAAMyF,aAAe,CAAC,CAC1C,IAEMG,GAAcvE,EAAAA,EAAAA,WAAS,WAC3B,MAAO,CACL,kBAAkB,EAClB,cAAc,EAEd,gBAAiBrB,EAAMpL,KAAKiR,yBAA2B7F,EAAM0F,SAEjE,i7BC1CA,qIC+BMhD,i9CC/BN,ivTCAA,0GCmEM7M,GAAaI,EAAAA,EAAAA,iBACb1G,GAAoBC,EAAAA,EAAAA,wBAEpBwQ,EAAQC,EAIRyC,EAAOC,EAEPmD,GAAclW,EAAAA,EAAAA,KAAIoQ,EAAM+F,QAAQ/X,MAEhCgY,EAAuB,WAC3BzP,SAASC,eAAe,oBAAoBwJ,EAAM+F,QAAQvU,IAAIO,WAChE,EAGMgP,EAAM,eAAAF,EAAAnO,GAAA7J,KAAAoF,MAAG,SAAAgC,IAAA,OAAApH,KAAAuB,MAAA,SAAA8F,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAnD,MAAA,cAAAmD,EAAAnD,KAAA,EACP8I,EAAWoQ,cAAcjG,EAAM+F,QAAQvU,GAAIsU,EAAYvc,OAAM,OACnEgN,SAASC,eAAe,oBAAoBwJ,EAAM+F,QAAQvU,IAAIiF,QAAO,wBAAAvG,EAAArB,OAAA,GAAAoB,EAAA,KACtE,kBAHW,OAAA4Q,EAAAtQ,MAAA,KAAAD,UAAA,KAMN4V,EAAkB,SAACxb,GAEvBgY,EAAK,aAAc,CAACqD,QAAS/F,EAAM+F,QAASrb,KAAAA,IAC1CmL,EAAWsQ,cAAczb,EAC7B,EAEM0b,EAAyB,eAAApF,EAAAtO,GAAA7J,KAAAoF,MAAG,SAAAiH,EAAO8J,GAAK,OAAAnW,KAAAuB,MAAA,SAAA+K,GAAA,cAAAA,EAAAzG,KAAAyG,EAAApI,MAAA,cAAAoI,EAAAzG,KAAA,EAAAyG,EAAApI,KAAA,EAEpC8I,EAAWuQ,0BAA0BpG,EAAM+F,QAAQvU,IAAG,cAAA2D,EAAApI,KAAA,EACtD8I,EAAWwQ,gBAAe,OAAAlR,EAAApI,KAAA,gBAAAoI,EAAAzG,KAAA,EAAAyG,EAAAL,GAAAK,EAAA,SAEhClD,QAAQyB,MAAM,wCAAuCyB,EAAAL,IAErDvF,EAAkBsF,qBAAqB,yCAAwCM,EAAAL,GAAU,SAAS,QAKjG,OALiGK,EAAAzG,KAAA,GAG9FsQ,GAASA,EAAM8C,QACjB9C,EAAM8C,OAAOwE,OACdnR,EAAAlG,OAAA,6BAAAkG,EAAAtG,OAAA,GAAAqG,EAAA,wBAEJ,gBAd8BqR,GAAA,OAAAvF,EAAAzQ,MAAA,KAAAD,UAAA,qlEC/F/B,qDCmBA,IAAMuF,GAAaI,EAAAA,EAAAA,i7CCnBnB,wFCwBMyM,g0QCxBN,sCCiEA9E,EAAAA,EAAAA,GAAa,kBAEb,IAAME,GAAkBC,EAAAA,EAAAA,sBAClBxO,GAAoBC,EAAAA,EAAAA,wBACpBqG,GAAaI,EAAAA,EAAAA,iBAEnBJ,EAAWwQ,gBAkBX,IAMMG,EAAY,SAAHxW,GAAwB,IAAnB+V,EAAO/V,EAAP+V,QAASrb,EAAIsF,EAAJtF,KAG3BmL,EAAW4Q,mBAAmBV,GAC9BlQ,EAAW6Q,eAAehc,GAC1BmL,EAAW+N,WAAWlZ,GACtB6L,SAASC,eAAe,gBAAgBzE,WAC1C,EAYM4U,EAAkB,eAAA3F,EAAAtO,GAAA7J,KAAAoF,MAAG,SAAAiH,IAAA,OAAArM,KAAAuB,MAAA,SAAA+K,GAAA,cAAAA,EAAAzG,KAAAyG,EAAApI,MAAA,cAAAoI,EAAAzG,KAAA,EAAAyG,EAAApI,KAAA,EAEjB8I,EAAWwQ,gBAAe,OAEhC9W,EAAkBsF,qBAAqB,kCAAmC,UAAW,KAAKM,EAAApI,KAAA,gBAAAoI,EAAAzG,KAAA,EAAAyG,EAAAL,GAAAK,EAAA,SAG1FlD,QAAQyB,MAAKyB,EAAAL,IACbvF,EAAkBsF,qBAAqB,6BAA8B,QAAS,KAAK,yBAAAM,EAAAtG,OAAA,GAAAqG,EAAA,kBAGtF,kBAXuB,OAAA8L,EAAAzQ,MAAA,KAAAD,UAAA","sources":["webpack://nottvbeta/./resources/js/Mixins/usePlaylistForm.js","webpack://nottvbeta/./resources/js/Stores/ChannelPlaylistStore.js","webpack://nottvbeta/./resources/js/Utilities/PageSetup.js","webpack://nottvbeta/./resources/js/Components/Pages/Admin/Channels/AdminChannelPopperContent.vue?bd0a","webpack://nottvbeta/./resources/js/Components/Pages/Admin/Channels/SourceSelector.vue?beba","webpack://nottvbeta/./resources/js/Components/Global/MistStreams/AddOrUpdateMistStreamModal.vue?ba39","webpack://nottvbeta/./resources/js/Components/Global/MistStreams/AddOrUpdateMistStreamModal.vue","webpack://nottvbeta/./resources/js/Components/Global/Modals/Messages.vue?dfe9","webpack://nottvbeta/./resources/js/Components/Global/Modals/Messages.vue","webpack://nottvbeta/./resources/js/Components/Pages/Admin/AdminHeader.vue?239a","webpack://nottvbeta/./resources/js/Components/Pages/Admin/AdminHeader.vue","webpack://nottvbeta/./resources/js/Components/Pages/Admin/ChannelPlaylists/AddContentModal.vue?e4c1","webpack://nottvbeta/./resources/js/Components/Pages/Admin/ChannelPlaylists/AddContentModal.vue","webpack://nottvbeta/./resources/js/Components/Pages/Admin/ChannelPlaylists/PlaylistForm.vue?73ca","webpack://nottvbeta/./resources/js/Components/Pages/Admin/ChannelPlaylists/PlaylistForm.vue","webpack://nottvbeta/./resources/js/Components/Pages/Admin/ChannelPlaylists/CreatePlaylistItemCard.vue?badc","webpack://nottvbeta/./resources/js/Components/Pages/Admin/ChannelPlaylists/CreatePlaylistItemCard.vue","webpack://nottvbeta/./resources/js/Components/Pages/Admin/ChannelPlaylists/CreatePlaylistGapCard.vue?50a6","webpack://nottvbeta/./resources/js/Components/Pages/Admin/ChannelPlaylists/CreatePlaylistGapCard.vue","webpack://nottvbeta/./resources/js/Components/Pages/Admin/ChannelPlaylists/CreatePlaylistRemovedCard.vue","webpack://nottvbeta/./resources/js/Components/Pages/Admin/ChannelPlaylists/ScheduleItems.vue?93b9","webpack://nottvbeta/./resources/js/Components/Pages/Admin/ChannelPlaylists/ScheduleItems.vue","webpack://nottvbeta/./resources/js/Components/Pages/Admin/Channels/DynamicModal.vue?a432","webpack://nottvbeta/./resources/js/Components/Pages/Admin/Channels/DynamicModal.vue","webpack://nottvbeta/./resources/js/Components/Pages/Admin/Channels/SourceSelector.vue","webpack://nottvbeta/./resources/js/Components/Pages/Admin/Channels/SourceSelector.vue?93c4","webpack://nottvbeta/./resources/js/Components/Pages/Admin/Channels/SourceSelector.vue?98e8","webpack://nottvbeta/./resources/js/Jetstream/Label.vue","webpack://nottvbeta/./resources/js/Components/Pages/Admin/ChannelPlaylists/CreatePlaylist.vue?805c","webpack://nottvbeta/./resources/js/Components/Pages/Admin/ChannelPlaylists/CreatePlaylist.vue","webpack://nottvbeta/./resources/js/Components/Pages/Admin/Channels/AdminChannelHeaderButtons.vue?1076","webpack://nottvbeta/./resources/js/Components/Pages/Admin/Channels/AdminChannelHeaderButtons.vue","webpack://nottvbeta/./resources/js/Components/Pages/Admin/Channels/AdminChannelPopperContent.vue?0ba0","webpack://nottvbeta/./resources/js/Components/Pages/Admin/Channels/AdminChannelPopperContent.vue?d933","webpack://nottvbeta/./resources/js/Components/Pages/Admin/Channels/AdminChannelPopperContent.vue","webpack://nottvbeta/./resources/js/Components/Pages/Admin/Channels/AdminChannelDataPopper.vue?e562","webpack://nottvbeta/./resources/js/Components/Pages/Admin/Channels/AdminChannelDataPopper.vue","webpack://nottvbeta/./resources/js/Components/Pages/Admin/Channels/AdminChannelDataItem.vue?dcc8","webpack://nottvbeta/./resources/js/Components/Pages/Admin/Channels/AdminChannelDataItem.vue","webpack://nottvbeta/./resources/js/Components/Pages/Admin/Channels/AdminChannelCurrentVideo.vue","webpack://nottvbeta/./resources/js/Components/Pages/Admin/Channels/AdminChannelRow.vue?e445","webpack://nottvbeta/./resources/js/Components/Pages/Admin/Channels/AdminChannelRow.vue","webpack://nottvbeta/./resources/js/Components/Pages/Admin/Channels/AdminChannelPaginator.vue?3259","webpack://nottvbeta/./resources/js/Components/Pages/Admin/Channels/AdminChannelPaginator.vue","webpack://nottvbeta/./resources/js/Components/Pages/Admin/Channels/AdminChannelRowHeader.vue?73cb","webpack://nottvbeta/./resources/js/Components/Pages/Admin/Channels/AdminChannelRowHeader.vue","webpack://nottvbeta/./resources/js/Pages/Admin/Channels/Index.vue?b9eb","webpack://nottvbeta/./resources/js/Pages/Admin/Channels/Index.vue"],"sourcesContent":["import { ref } from 'vue'\nimport dayjs from 'dayjs'\nimport { useChannelPlaylistStore } from '@/Stores/ChannelPlaylistStore'\nimport { useNotificationStore } from '@/Stores/NotificationStore'\nimport { useUserStore } from '@/Stores/UserStore'\n\nexport function usePlaylistForm(initialData = {}) {\n    const store = useChannelPlaylistStore()\n    const notificationStore = useNotificationStore()\n    const userStore = useUserStore()\n\n    const isSmallScreen = ref(userStore.isSmallScreen)\n    const selectedGapDuration = ref(0)\n    const startDateTime = ref('')\n\n    const getListItemClass = (conflict, removed) => {\n        if (removed) {\n            return isSmallScreen.value\n                ? 'flex flex-col p-2 border-b border-gray-200 space-y-2 bg-gray-100'\n                : 'p-4 space-y-2 bg-gray-100'\n        }\n\n        return isSmallScreen.value\n            ? 'flex flex-col p-2 border-b border-gray-200 space-y-2'\n            : `p-4 space-y-2 ${conflict ? 'bg-red-100' : ''}`\n    }\n\n    const clearStartDateTime = () => {\n        store.startTime = ''\n    }\n\n    const setStartDateTimeNow = () => {\n        store.startTime = dayjs().format('YYYY-MM-DDTHH:mm')\n    }\n\n    const clearEndDateTime = () => {\n        store.endTime = ''\n    }\n\n    const setEndDateTimeNow = () => {\n        store.endTime = dayjs().format('YYYY-MM-DDTHH:mm')\n    }\n\n    const removeItem = (id) => {\n        store.removeItem(id)\n    }\n\n    const addItem = (id) => {\n        store.addItem(id)\n    }\n\n    const clearRemovedItems = () => {\n        store.clearRemovedItems()\n    }\n\n    const resolveConflicts = () => {\n        store.resolveConflicts()\n    }\n\n    const fetchSchedules = () => {\n        store.fetchSchedules()\n    }\n\n    const openAddContentModal = (gapItem) => {\n        selectedGapDuration.value = gapItem.duration_minutes\n        store.showModal = true\n        startDateTime.value = gapItem.start_dateTime\n        console.log('Opening modal with startDateTime:', startDateTime.value) // Add log to verify startDateTime\n    }\n    const closeModal = () => {\n        store.showModal = false // Use the store's reactive property\n    }\n\n    const fetchPlaylistsIfNeeded = async () => {\n        if (store.repeat_mode === 'next_playlist' && store.playlists.length === 0) {\n            await store.fetchPlaylists()\n        }\n    }\n\n    const validateTimes = () => {\n        if (dayjs(store.startTime).isSameOrAfter(dayjs(store.endTime))) {\n            notificationStore.setGeneralServiceNotification('Invalid Date Time', 'End time must be after start time.')\n            return false\n        }\n        if (store.conflictCount > 0) {\n            notificationStore.setGeneralServiceNotification('Conflicts Present', 'Please resolve conflicts before proceeding.')\n            return false\n        }\n        if (store.gapCount > 0) {\n            notificationStore.setGeneralServiceNotification('Gaps Present', 'Please fill gaps before proceeding.')\n            return false\n        }\n        if (store.scheduleItems.length === 0) {\n            notificationStore.setGeneralServiceNotification('No Schedule Items', 'Please add schedule items before proceeding.')\n            return false\n        }\n        return true\n    }\n\n    return {\n        store,\n        notificationStore,\n        userStore,\n        isSmallScreen,\n        selectedGapDuration,\n        startDateTime,\n        fetchSchedules,\n        getListItemClass,\n        clearStartDateTime,\n        setStartDateTimeNow,\n        clearEndDateTime,\n        setEndDateTimeNow,\n        removeItem,\n        addItem,\n        clearRemovedItems,\n        resolveConflicts,\n        openAddContentModal,\n        closeModal,\n        fetchPlaylistsIfNeeded,\n        validateTimes,\n    }\n}\n","import { defineStore } from 'pinia'\nimport dayjs from 'dayjs'\nimport timezone from 'dayjs/plugin/timezone'\nimport utc from 'dayjs/plugin/utc'\nimport isSameOrBefore from 'dayjs/plugin/isSameOrBefore'\nimport isSameOrAfter from 'dayjs/plugin/isSameOrAfter'\nimport { useNotificationStore } from '@/Stores/NotificationStore'\nimport { useUserStore } from '@/Stores/UserStore'\nimport { useAdminStore } from '@/Stores/AdminStore'\nimport { router } from '@inertiajs/vue3'\n\ndayjs.extend(utc)\ndayjs.extend(timezone)\ndayjs.extend(isSameOrBefore)\ndayjs.extend(isSameOrAfter)\n\nconst initialState = () => ({\n    playlists: [],\n    selectedPlaylist: null,\n    scheduleItems: [],\n    gaps: [],\n    startTime: dayjs().format('YYYY-MM-DDTHH:mm'),\n    endTime: dayjs().add(24, 'hour').format('YYYY-MM-DDTHH:mm'),\n    contentItems: [],\n    contentFetched: false,\n    currentPage: 1,\n    totalPages: 1,\n    searchQuery: '',\n    showModal: false,\n    loading: false,\n    loadingSchedules: false,\n    processing: false,\n    error: null,\n    id: null,\n    name: '',\n    description: '',\n    url: '',\n    type: 'regular',\n    priority: 1,\n    repeat_mode: 'repeat_all',\n    next_playlist_id: null,\n})\n\nexport const useChannelPlaylistStore = defineStore('channelPlaylistStore', {\n    state: initialState,\n    actions: {\n        reset() {\n            // Reset the store to its original state (clear all data)\n            Object.assign(this, initialState())\n        },\n        openAddContentModal() {\n            this.showModal = true\n        },\n        closeAddContentModal() {\n            this.showModal = false\n        },\n        async fetchPlaylists() {\n            this.loading = true\n            try {\n                const response = await axios.get('/admin/channel-playlist/get-playlists')\n                this.playlists = response.data.playlists\n                const {message, status} = response.data\n                const notificationStore = useNotificationStore()\n                notificationStore.setToastNotification(message, status)\n            } catch (error) {\n                this.error = error.response ? error.response.data.message : error.message\n                const notificationStore = useNotificationStore()\n                notificationStore.setToastNotification(this.error, 'error')\n            } finally {\n                this.loading = false\n            }\n        },\n        async createPlaylist(playlist) {\n            if (!this.validateScheduleItems()) return false;\n\n            this.loading = true\n            try {\n                const response = await axios.post('/channelPlaylists', {\n                    ...playlist,\n                    scheduleItems: this.getValidScheduleItems(),\n                })\n                this.playlists.push(response.data.playlist)\n                this.showNotification(response.data)\n                this.reset()\n                return true\n            } catch (error) {\n                this.handleError(error)\n                return false\n            } finally {\n                this.loading = false\n            }\n        },\n        async updatePlaylist(playlist) {\n            const adminStore = useAdminStore();\n            playlist.scheduleItems = this.scheduleItems;\n\n            if (!this.validateScheduleItems(playlist.scheduleItems)) {\n                console.error('Invalid schedule items');\n                return false;\n            }\n\n            this.loading = true;\n            try {\n                const response = await axios.put(`/channelPlaylists/${playlist.id}`, playlist);\n                const index = this.playlists.findIndex(p => p.id === playlist.id);\n                if (index !== -1) {\n                    this.playlists[index] = response.data.playlist;\n                }\n\n                const adminIndex = adminStore.items.findIndex(item => item.id === playlist.id);\n                if (adminIndex !== -1) {\n                    adminStore.items[adminIndex] = {\n                        ...response.data.playlist,\n                        playlist_items: this.scheduleItems\n                    };\n                }\n                this.showNotification(response.data);\n                document.getElementById('updateChannelPlaylistModal').close();\n                this.clearError()\n                return true;\n            } catch (error) {\n                this.handleError(error);\n                return false;\n            } finally {\n                this.loading = false;\n            }\n        },\n\n        validateScheduleItems() {\n            const notificationStore = useNotificationStore()\n\n            // Check for conflicts\n            if (this.scheduleItems.some(item => item.conflict)) {\n                notificationStore.setGeneralServiceNotification('Conflict Detected', 'There are conflicts in the schedule items. Please resolve them before proceeding.')\n                return false\n            }\n\n            // Check for gaps\n            const items = this.scheduleItems.filter(item => !item.removed && item.type !== 'gap').sort((a, b) => dayjs(a.start_dateTime).isBefore(dayjs(b.start_dateTime)) ? -1 : 1)\n            for (let i = 0; i < items.length - 1; i++) {\n                if (dayjs(items[i].end_dateTime).isBefore(dayjs(items[i + 1].start_dateTime))) {\n                    notificationStore.setGeneralServiceNotification('Gap Detected', 'There are gaps in the schedule items. Please ensure there are no gaps before proceeding.')\n                    return false\n                }\n            }\n            return true\n        },\n\n        getValidScheduleItems() {\n            return this.scheduleItems.filter(item => !item.removed && item.type !== 'gap').sort((a, b) => dayjs(a.start_dateTime).isBefore(dayjs(b.start_dateTime)) ? -1 : 1)\n        },\n\n        showNotification(response) {\n            const { message, status } = response\n            const notificationStore = useNotificationStore()\n            notificationStore.setToastNotification(message, status)\n        },\n\n        handleError(error) {\n            const notificationStore = useNotificationStore();\n            const errorMessage = error.response ? error.response.data.message : error.message;\n            let errorDetails = error.response && error.response.data.details ? error.response.data.details : '';\n\n            // Check if errorDetails is a string and parse it to an object if necessary\n            if (typeof errorDetails === 'string') {\n                try {\n                    errorDetails = JSON.parse(errorDetails);\n                } catch (e) {\n                    // If parsing fails, wrap the errorDetails in an object\n                    errorDetails = { details: errorDetails };\n                }\n            }\n\n            // Aggregate validation error messages with HTML styling\n            let detailedErrorMessages = '<ul>';\n            for (const [field, messages] of Object.entries(errorDetails)) {\n                // Ensure messages is an array and join them into a string\n                const messageText = Array.isArray(messages) ? messages.join(', ') : messages;\n                detailedErrorMessages += `<li><strong>${field}:</strong> ${messageText}</li>`;\n            }\n            detailedErrorMessages += '</ul>';\n\n            // Display general error message with aggregated details\n            notificationStore.setGeneralServiceNotification('Validation Error', `${errorMessage}\\n${detailedErrorMessages}`);\n\n            this.error = errorMessage;\n        },\n\n        setPlaylistData(playlist) {\n            console.log('playlist:', playlist)\n            const userStore = useUserStore()\n\n            const startTime = dayjs.utc(playlist.start_dateTime).tz(userStore.timezone).format('YYYY-MM-DDTHH:mm')\n            const endTime = dayjs.utc(playlist.end_dateTime).tz(userStore.timezone).format('YYYY-MM-DDTHH:mm')\n\n            this.id = playlist.id\n            this.name = playlist.name\n            this.description = playlist.description\n            this.url = playlist.url\n            this.type = playlist.type\n            this.priority = playlist.priority\n            this.repeat_mode = playlist.repeat_mode\n            this.next_playlist_id = playlist.next_playlist_id\n            this.startTime = startTime\n            this.endTime = endTime\n\n            console.log('playlist.playlist_items:', playlist.playlist_items)\n\n            this.scheduleItems = playlist.playlist_items\n                .filter(item => {\n                    console.log('Filtering item:', item)\n                    return item !== null && item !== undefined\n                })\n                .map(item => {\n                    const mappedItem = {\n                        id: item.id,\n                        content_id: item.content_id,\n                        content_type: item.content_type,\n                        order: item.order,\n                        media_type: item.media_type,\n                        source_path: item.source_path,\n                        source_type: item.source_type,\n                        is_live: item.is_live,\n                        is_scheduled: item.is_scheduled,\n                        current_viewers_count: item.current_viewers_count,\n                        max_viewers_count: item.max_viewers_count,\n                        additional_sources: item.additional_sources,\n                        custom_playback_options: item.custom_playback_options,\n                        metadata: item.metadata,\n                        has_played: item.has_played,\n                        start_dateTime: item.start_dateTime,\n                        end_dateTime: item.end_dateTime,\n                        duration_minutes: item.duration_minutes,\n                        type: item.type,\n                        content: item.content,\n                    }\n                    console.log('Mapped item:', mappedItem)\n                    return mappedItem\n                })\n\n            console.log('this.scheduleItems:', this.scheduleItems)\n        },\n        async fetchSchedules() {\n            this.loadingSchedules = true\n            this.clearError()\n            const notificationStore = useNotificationStore()\n\n            if (!this.startTime || !this.endTime) {\n                notificationStore.setGeneralServiceNotification('Start and End Times Required', 'Please check the schedule start and end times.')\n                this.loadingSchedules = false\n                return\n            }\n\n            try {\n                const response = await axios.get(`/api/schedules`, {\n                    params: {\n                        startTime: this.startTimeUTC,\n                        endTime: this.endTimeUTC,\n                    },\n                })\n                // Push new items to the existing array with added attributes\n                this.scheduleItems.push(...response.data.items.map(item => ({\n                    ...item,\n                    removed: false,\n                    is_scheduled: true\n                })))\n                const {message, status} = response.data\n                notificationStore.setToastNotification(message, status)\n                this.updateConflicts()\n                this.loadingSchedules = false\n                return response.data // return the data to the caller\n            } catch (error) {\n                this.error = error.response ? error.response.data.message : error.message\n                notificationStore.setToastNotification(this.error, 'error')\n                this.loadingSchedules = false\n                throw error\n            }\n        },\n        removeItem(id) {\n            const item = this.scheduleItems.find(item => item.id === id)\n            if (item) {\n                item.removed = true\n                this.scheduleItems = [...this.scheduleItems]  // Trigger reactivity\n                this.updateConflicts()\n            }\n            this.clearError()\n        },\n        addItem(id) {\n            const item = this.scheduleItems.find(item => item.id === id)\n            if (item) {\n                item.removed = false\n                this.scheduleItems = [...this.scheduleItems]  // Trigger reactivity\n                this.updateConflicts()\n            }\n            this.clearError()\n        },\n        removeAllItems() {\n            this.scheduleItems = []\n            this.clearError()\n        },\n        clearRemovedItems() {\n            this.scheduleItems = this.scheduleItems.filter(item => !item.removed)\n            this.clearError()\n            this.recalculateIndexes()\n        },\n        recalculateIndexes() {\n            this.scheduleItems = this.scheduleItems.map((item, index) => ({...item, index}))\n        },\n        updateConflicts() {\n            const items = this.scheduleItems.filter(item => !item.removed)\n            items.sort((a, b) => dayjs(a.start_dateTime).isBefore(dayjs(b.start_dateTime)) ? -1 : 1)\n\n            for (let i = 0; i < items.length; i++) {\n                const currentItem = items[i]\n                currentItem.conflict = false\n            }\n\n            for (let i = 0; i < items.length; i++) {\n                const currentItem = items[i]\n                for (let j = i + 1; j < items.length; j++) {\n                    const nextItem = items[j]\n                    if (\n                        dayjs(currentItem.start_dateTime).isBefore(dayjs(nextItem.end_dateTime)) &&\n                        dayjs(currentItem.end_dateTime).isAfter(dayjs(nextItem.start_dateTime))\n                    ) {\n                        currentItem.conflict = true\n                        nextItem.conflict = true\n                    }\n                }\n            }\n        },\n        selectPlaylist(playlist) {\n            this.selectedPlaylist = playlist\n        },\n        removePlaylist(playlistId) {\n            router.delete(route('channelPlaylists.destroy', { channelPlaylist: playlistId }))\n        },\n        clearError() {\n            this.error = null\n        },\n        resolveConflicts() {\n            this.processing = true // Set processing flag\n            let conflictsResolved\n\n            do {\n                conflictsResolved = false\n\n                // Create a copy of the items array without removed items\n                let items = this.scheduleItems.filter(item => !item.removed)\n\n                for (let i = 1; i < items.length; i++) {\n                    const currentItem = items[i]\n\n                    if (!currentItem.conflict) continue\n\n                    for (let j = 0; j < i; j++) {\n                        const previousItem = items[j]\n\n                        if (previousItem.removed) continue\n\n                        // Check for conflict\n                        const currentStart = dayjs(currentItem.start_dateTime)\n                        const previousEnd = dayjs(previousItem.end_dateTime)\n                        const previousStart = dayjs(previousItem.start_dateTime)\n\n                        if (\n                            currentStart.isSame(previousStart) ||\n                            (currentStart.isBefore(previousEnd) && !currentStart.isSame(previousEnd))\n                        ) {\n                            // Resolve conflict based on priority and creation date\n                            if (currentItem.priority > previousItem.priority) {\n                                this.scheduleItems = this.scheduleItems.map(item =>\n                                    item.id === currentItem.id ? {...item, removed: true} : item,\n                                )\n                                conflictsResolved = true\n                                break\n                            } else if (currentItem.priority < previousItem.priority) {\n                                this.scheduleItems = this.scheduleItems.map(item =>\n                                    item.id === previousItem.id ? {...item, removed: true} : item,\n                                )\n                                conflictsResolved = true\n                                break\n                            } else {\n                                if (dayjs(currentItem.created_at).isAfter(dayjs(previousItem.created_at))) {\n                                    this.scheduleItems = this.scheduleItems.map(item =>\n                                        item.id === currentItem.id ? {...item, removed: true} : item,\n                                    )\n                                    conflictsResolved = true\n                                    break\n                                } else {\n                                    this.scheduleItems = this.scheduleItems.map(item =>\n                                        item.id === previousItem.id ? {...item, removed: true} : item,\n                                    )\n                                    conflictsResolved = true\n                                    break\n                                }\n                            }\n                        }\n                    }\n\n                    if (conflictsResolved) break\n                }\n\n            } while (conflictsResolved)\n\n            this.updateConflicts()\n            // console.log('Finished processing conflicts')\n            this.processing = false // Clear processing flag\n        },\n\n        insertGaps() {\n            this.clearError()\n            // console.log('Start Time UTC:', this.startTimeUTC);\n            // console.log('End Time UTC:', this.endTimeUTC);\n\n            // Map schedule items to include dayjs objects for start and end times\n            const items = this.scheduleItems\n                .filter(item => !item.removed)\n                .map(item => ({\n                    ...item,\n                    start: dayjs(item.start_dateTime),\n                    end: dayjs(item.end_dateTime),\n                }))\n\n            // console.log('Items:', items);\n\n            this.gaps = []\n\n            if (items.length === 0) {\n                // console.log('No scheduled items, creating a single gap for the entire period.');\n                this.gaps.push({\n                    type: 'gap',\n                    start_dateTime: dayjs.utc(this.startTimeUTC).toISOString(),\n                    end_dateTime: dayjs.utc(this.endTimeUTC).toISOString(),\n                    duration_minutes: dayjs(this.endTimeUTC).diff(dayjs(this.startTimeUTC), 'minute'),\n                    id: `gap-${dayjs.utc(this.startTimeUTC).toISOString()}-${dayjs.utc(this.endTimeUTC).toISOString()}`,\n                    start: dayjs.utc(this.startTimeUTC),\n                    end: dayjs.utc(this.endTimeUTC),\n                })\n            } else {\n                this.checkForGapBeforeFirstItem(items)\n                this.checkForGapsBetweenItems(items)\n                this.checkForGapAfterLastItem(items)\n            }\n\n            // console.log('Gaps:', this.gaps);\n\n            // Add gaps to the schedule items and sort the list by start dateTime\n            this.scheduleItems = [...items, ...this.gaps].sort((a, b) => a.start.isBefore(b.start) ? -1 : 1)\n\n            // console.log('Final Schedule Items:', this.scheduleItems);\n        },\n\n\n        checkForGapBeforeFirstItem(items) {\n            // console.log('Checking for gap before the first item...')\n            if (items.length > 0 && dayjs.utc(this.startTimeUTC).isBefore(items[0].start)) {\n                const gapStart = dayjs.utc(this.startTimeUTC)\n                const gapEnd = items[0].start\n                const gapDuration = gapEnd.diff(gapStart, 'minute')\n                // console.log(`Creating gap before the first item: ${gapStart.toISOString()} to ${gapEnd.toISOString()}, duration: ${gapDuration} minutes`)\n\n                this.gaps.push({\n                    type: 'gap',\n                    start_dateTime: gapStart.toISOString(), // ISO 8601 string in UTC\n                    end_dateTime: gapEnd.toISOString(), // ISO 8601 string in UTC\n                    duration_minutes: gapDuration,\n                    id: `gap-${gapStart.toISOString()}-${gapEnd.toISOString()}`,\n                    start: gapStart,\n                    end: gapEnd,\n                })\n            } else {\n                // console.log('No gap before the first item.')\n            }\n        },\n\n        checkForGapsBetweenItems(items) {\n            // console.log('Checking for gaps between items...')\n            for (let i = 0; i < items.length - 1; i++) {\n                const currentItem = items[i]\n                const nextItem = items[i + 1]\n\n                const gapStart = currentItem.end\n                const gapEnd = nextItem.start\n\n                // console.log(`Current Item: ${currentItem.id}, End: ${currentItem.end.toISOString()}`)\n                // console.log(`Next Item: ${nextItem.id}, Start: ${nextItem.start.toISOString()}`)\n                // console.log(`Gap start: ${gapStart.toISOString()}, Gap end: ${gapEnd.toISOString()}`)\n\n                if (gapStart.isBefore(gapEnd)) {\n                    const gapDuration = gapEnd.diff(gapStart, 'minute')\n                    // console.log(`Creating gap between items: ${gapStart.toISOString()} to ${gapEnd.toISOString()}, duration: ${gapDuration} minutes`)\n\n                    this.gaps.push({\n                        type: 'gap',\n                        start_dateTime: gapStart.toISOString(), // ISO 8601 string in UTC\n                        end_dateTime: gapEnd.toISOString(), // ISO 8601 string in UTC\n                        duration_minutes: gapDuration,\n                        id: `gap-${gapStart.toISOString()}-${gapEnd.toISOString()}`,\n                        start: gapStart,\n                        end: gapEnd,\n                    })\n                } else {\n                    // console.log('No gap between these items.')\n                }\n            }\n        },\n\n        checkForGapAfterLastItem(items) {\n            // console.log('Checking for gap after the last item...');\n            if (items.length > 0) {\n                const lastItemEnd = items[items.length - 1].end\n                const endTime = dayjs.utc(this.endTimeUTC) // Ensure endTimeUTC is treated as UTC\n                // console.log(`Last Item End: ${lastItemEnd.toISOString()}, End Time: ${endTime.toISOString()}`);\n\n                // Check that last item ends before endTimeUTC\n                if (lastItemEnd.isBefore(endTime)) {\n                    const gapStart = lastItemEnd\n                    const gapEnd = endTime\n                    const gapDuration = gapEnd.diff(gapStart, 'minute')\n                    // console.log(`Creating gap after the last item: ${gapStart.toISOString()} to ${gapEnd.toISOString()}, duration: ${gapDuration} minutes`);\n\n                    this.gaps.push({\n                        type: 'gap',\n                        start_dateTime: gapStart.toISOString(), // ISO 8601 string in UTC\n                        end_dateTime: gapEnd.toISOString(), // ISO 8601 string in UTC\n                        duration_minutes: gapDuration,\n                        id: `gap-${gapStart.toISOString()}-${gapEnd.toISOString()}`,\n                        start: gapStart,\n                        end: gapEnd,\n                    })\n                } else {\n                    // console.log('No gap after the last item.');\n                }\n            } else {\n                // console.log('No items to check for gaps after.');\n            }\n        },\n        async fetchContent(contentType, maxDurationMinutes, startDateTime, page = 1, search = '') {\n            this.loading = true\n            this.clearError()\n            const notificationStore = useNotificationStore()\n\n            // Convert startDateTime from user's timezone to UTC\n            const startDateTimeUTC = dayjs(startDateTime).tz(dayjs.tz.guess()).utc().format('YYYY-MM-DDTHH:mm:ss[Z]')\n\n            // Log the parameters before making the request\n            // console.log('Fetching content with parameters:');\n            // console.log('Content Type:', contentType);\n            // console.log('Max Duration Minutes:', maxDurationMinutes);\n            // console.log('Start DateTime (User Timezone):', startDateTime);\n            // console.log('Start DateTime (UTC):', startDateTimeUTC);\n            // console.log('Page:', page);\n            // console.log('Search Query:', search);\n\n            try {\n                const response = await axios.get('/admin/channel-playlist/get-content', {\n                    params: {\n                        type: contentType,\n                        maxDurationMinutes: maxDurationMinutes,\n                        start_dateTime: startDateTimeUTC,\n                        page: page,\n                        search: search,\n                    },\n                })\n                console.log('Response data:', response.data)  // Log the response data\n                this.contentItems = response.data.items\n                this.currentPage = response.data.current_page\n                this.totalPages = response.data.total_pages\n                this.contentFetched = true\n                const {message, status} = response.data\n                notificationStore.setToastNotification(message, status)\n            } catch (error) {\n                this.error = error.response ? error.response.data.message : error.message\n                console.error('Error fetching content:', this.error)\n                notificationStore.setToastNotification(this.error, 'error')\n            } finally {\n                this.loading = false\n            }\n        },\n        addContentToSchedule(content) {\n            this.clearError()\n            this.scheduleItems.push(content)\n            this.scheduleItems = [...this.scheduleItems] // Trigger reactivity\n            this.removeGap(content.start_dateTime) // Remove the gap after adding content\n            this.insertGaps() // Update gaps after removing and adding content\n        },\n        removeGap(startDateTime) {\n            // console.log('removing gap...')\n            // console.log('start dateTime: ' + startDateTime)\n            this.scheduleItems = this.scheduleItems.filter(item => !(item.type === 'gap' && item.start_dateTime === startDateTime))\n        },\n        resetContent() {\n            this.contentItems = []\n            this.contentFetched = false\n            this.error = null\n            this.currentPage = 1\n            this.totalPages = 1\n            this.searchQuery = ''\n        },\n        setSearchQuery(query) {\n            this.searchQuery = query\n        },\n        setPage(page) {\n            this.currentPage = page\n        },\n    },\n\n    getters: {\n        startTimeUTC: state => {\n            return dayjs(state.startTime).utc().format('YYYY-MM-DDTHH:mm:ss[Z]')\n        },\n        endTimeUTC: state => {\n            return dayjs(state.endTime).utc().format('YYYY-MM-DDTHH:mm:ss[Z]')\n        },\n        scheduleItemsWithUserTimezone(state) {\n            const userStore = useUserStore()\n            const items = state.scheduleItems.map(item => {\n                return {\n                    ...item,\n                    start_dateTime: dayjs(item.start_dateTime).tz(userStore.timezone).format('YYYY-MM-DDTHH:mm:ssZ'),\n                    end_dateTime: dayjs(item.end_dateTime).tz(userStore.timezone).format('YYYY-MM-DDTHH:mm:ssZ'),\n                }\n            })\n            items.sort((a, b) => dayjs(a.start_dateTime).isBefore(dayjs(b.start_dateTime)) ? -1 : 1)\n            return items\n        },\n        hasRemovedItems(state) {\n            return state.scheduleItems.some(item => item.removed)\n        },\n        conflictCount(state) {\n            return state.scheduleItems.filter(item => item.conflict && !item.removed).length\n        },\n        gapCount(state) {\n            const items = state.scheduleItems\n                .filter(item => !item.removed && item.type !== 'gap')\n                .map(item => ({\n                    start: dayjs(item.start_dateTime),\n                    end: dayjs(item.end_dateTime),\n                    conflict: item.conflict,\n                }))\n\n            let gaps = 0\n\n            // console.log('Calculating gaps...');\n            // console.log('Start Time UTC:', state.startTimeUTC);\n            // console.log('End Time UTC:', state.endTimeUTC);\n            // console.log('Items:', items);\n\n            // If there are no items, the entire period is a single gap\n            if (items.length === 0) {\n                // console.log('No scheduled items, entire period is a gap.');\n                return 1\n            }\n\n            // Check for gap before the first item\n            if (dayjs.utc(state.startTimeUTC).isBefore(items[0].start)) {\n                // console.log('Gap before the first item');\n                gaps++\n            } else {\n                // console.log('No gap before the first item');\n            }\n\n            // Check for gaps between adjacent items\n            for (let i = 0; i < items.length - 1; i++) {\n                const currentItem = items[i]\n                const nextItem = items[i + 1]\n\n                // console.log(`Current Item: ${currentItem.start.toISOString()}, End: ${currentItem.end.toISOString()}`);\n                // console.log(`Next Item: ${nextItem.start.toISOString()}, Start: ${nextItem.end.toISOString()}`);\n\n                // Only consider gaps if there are no conflicts\n                if (!currentItem.conflict && !nextItem.conflict && currentItem.end.isBefore(nextItem.start)) {\n                    // console.log('Gap between items');\n                    gaps++\n                } else {\n                    // console.log('No gap between these items');\n                }\n            }\n\n            // Check for gap after the last item\n            if (dayjs.utc(state.endTimeUTC).isAfter(items[items.length - 1].end)) {\n                // console.log('Gap after the last item');\n                gaps++\n            } else {\n                // console.log('No gap after the last item');\n            }\n\n            // console.log('Total gaps:', gaps);\n            return gaps\n        },\n\n\n    },\n})\n","import { onBeforeMount, onMounted, watch } from 'vue'\nimport { useUserStore } from \"@/Stores/UserStore\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useVideoPlayerStore } from \"@/Stores/VideoPlayerStore\"\nimport { router } from '@inertiajs/vue3'\n\nexport function usePageSetup(pageName) {\n    const userStore = useUserStore()\n    const appSettingStore = useAppSettingStore()\n    const videoPlayerStore = useVideoPlayerStore()\n\n    appSettingStore.currentPage = pageName\n    appSettingStore.showFlashMessage = true\n    appSettingStore.pageIsHidden = false\n\n// PageSetup utility\n    if (userStore.isMobile || window.innerWidth < 1024) {\n        appSettingStore.ott = 0; // Close all panels on mobile devices\n    } else if (appSettingStore.fullPage) {\n        appSettingStore.ott = 0; // Default to closed in fullPage mode\n    } else {\n        if (appSettingStore.ott === 0) {\n            appSettingStore.ott = 4\n        }\n        // appSettingStore.ott = 4; // Open OttChat by default on larger screens\n        appSettingStore.showOttButtons = true;\n    }\n\n    videoPlayerStore.makeVideoTopRight()\n\n    if (appSettingStore.pageReload) {\n        appSettingStore.pageReload = false\n        appSettingStore.pageWasReloaded = true\n        window.location.reload();\n    }\n    // Check if the URL contains query strings\n\n\n    // Only scroll into view if there are no query strings\n\n        // const topDiv = document.getElementById(\"topDiv\")\n        // if (topDiv) {\n        //     topDiv.scrollIntoView()\n        // }\n        router.on('navigate', (event) => {\n            // Ensure OTT panels do not open automatically on mobile devices\n            if (userStore.isMobile || window.innerWidth < 1024 || appSettingStore.fullPage) {\n                appSettingStore.ott = 0; // Close all panels on mobile devices\n            } else {\n                if (appSettingStore.ott === 0) {\n                    appSettingStore.ott = 4\n                }\n                // appSettingStore.ott = 0; // Default to closed on larger screens\n            }\n            const hasQueryStrings = window.location.search !== '';\n            if (!hasQueryStrings || appSettingStore.shouldScrollToTop) {\n                requestAnimationFrame(() => {\n                    const topDiv = document.getElementById(\"topDiv\");\n                    if (topDiv) {\n                        topDiv.scrollIntoView({behavior: 'auto'});\n                    } else {\n                        window.scrollTo(0, 0);\n                    }\n                });\n            }\n            appSettingStore.shouldScrollToTop = false;\n        })\n    // Only update if we're not already on this page to avoid overwriting with the current URL\n    appSettingStore.setPrevUrl()\n    appSettingStore.showOttButtons = true\n    appSettingStore.noLayout = false\n\n    // router.reload()\n\n    watch(\n        () => appSettingStore.isSmallScreen,\n        (newValue) => {\n            if (newValue) {\n                appSettingStore.ott = 0;\n            } else {\n                appSettingStore.ott = 4;\n            }\n        },\n        { immediate: true } // This option ensures the watch executes immediately with the current value\n    );\n\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"#tooltip[data-v-d34cc41c]{background:#333;border-radius:4px;color:#fff;font-size:13px;font-weight:700;padding:4px 8px}[data-v-d34cc41c] .popper{background:#333;border-radius:20px;color:#fff;font-weight:700;padding:2px;text-transform:uppercase}[data-v-d34cc41c] .popper #arrow:before{background:#333}[data-v-d34cc41c] .popper:hover,[data-v-d34cc41c] .popper:hover>#arrow:before{background:#333}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/Components/Pages/Admin/Channels/AdminChannelPopperContent.vue\"],\"names\":[],\"mappings\":\"AASA,0BACE,eAAgB,CAKhB,iBAAkB,CAJlB,UAAY,CAGZ,cAAe,CAFf,eAAiB,CACjB,eAGF,CAEA,0BACE,eAAmB,CAEnB,kBAAmB,CACnB,UAAW,CACX,eAAiB,CAHjB,WAAY,CAIZ,wBACF,CAEA,wCACE,eACF,CAEA,8EAEE,eACF\",\"sourcesContent\":[\"<template>\\n  <Popper hover openDelay=\\\"50\\\" closeDelay=\\\"50\\\" offset-skid=\\\"0\\\" offset-distance=\\\"0\\\" placement=\\\"bottom\\\">\\n    <template #content>\\n      <slot name=\\\"content\\\"></slot> <!-- Dynamic content -->\\n    </template>\\n    <slot name=\\\"activator\\\"></slot>\\n  </Popper>\\n</template>\\n<style scoped>\\n#tooltip {\\n  background: #333;\\n  color: white;\\n  font-weight: bold;\\n  padding: 4px 8px;\\n  font-size: 13px;\\n  border-radius: 4px;\\n}\\n\\n:deep(.popper) {\\n  background: #333333;\\n  padding: 2px;\\n  border-radius: 20px;\\n  color: #fff;\\n  font-weight: bold;\\n  text-transform: uppercase;\\n}\\n\\n:deep(.popper #arrow::before) {\\n  background: #333333;\\n}\\n\\n:deep(.popper:hover),\\n:deep(.popper:hover > #arrow::before) {\\n  background: #333333;\\n}\\n</style>\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".source-selector[data-v-c559967c]{//margin-top:.5rem}.is-priority[data-v-c559967c]{color:#000;font-weight:300}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/Components/Pages/Admin/Channels/SourceSelector.vue\"],\"names\":[],\"mappings\":\"AA8EA,kCAEE,kBACF,CAMA,8BAEE,UAAY,CACZ,eACF\",\"sourcesContent\":[\"<template>\\n  <!--  <div class=\\\"source-selector\\\" :class=\\\"{'is-priority': source?.isPriority, 'is-playing': source?.isPlaying, 'is-fallback': source?.isFallback, 'has-error': source?.hasError}\\\">-->\\n  <div\\n      :class=\\\"['source-selector', {'is-priority': source?.playback_priority_type, 'is-playing': source?.isPlaying, 'is-fallback': source?.isFallback, 'has-error': source?.hasError}]\\\">\\n    <div>\\n      <!-- Display the source status here (playing, fallback, error) -->\\n      <div v-if=\\\"source?.playback_priority_type === sourceType\\\" class=\\\"btn btn-xs mt-1 text-white bg-green-500 hover:bg-green-500\\\">Priority</div>\\n      <span>\\n\\n      </span>\\n      <!-- Icon or button to set this source as priority -->\\n      <!--      <button class=\\\"btn btn-xs\\\" v-if=\\\"!source?.playback_priority_type\\\" @click=\\\"setPriority\\\">Set as Priority</button>-->\\n    </div>\\n  </div>\\n\\n  <!--  <div v-if=\\\"source?.playback_priority_type === 'mistStream'\\\">-->\\n  <!--    <button class=\\\"btn btn-xs hover:bg-green-500 bg-green-500\\\">Priority</button>-->\\n  <!--  </div>-->\\n\\n  <button v-if=\\\"source?.playback_priority_type !== sourceType\\\" class=\\\"btn btn-xs mt-1\\\"\\n          @click=\\\"setPriority\\\">Set as Priority\\n  </button>\\n\\n\\n  <dialog :id=\\\"`confirmPriorityChangeModal`\\\" class=\\\"modal\\\">\\n    <div class=\\\"modal-box\\\">\\n      <h3 class=\\\"font-bold text-lg\\\">Confirm Selection for {{ adminStore.sourceSelector?.source?.name }}</h3>\\n      <p class=\\\"py-4\\\">\\n        Are you sure you want to change priority to <span class=\\\"font-bold\\\">{{ adminStore.sourceSelector?.sourceType }}</span>?\\n      </p>\\n      <div class=\\\"modal-action\\\">\\n        <button class=\\\"btn\\\" @click=\\\"confirmPriorityChange\\\">Confirm</button>\\n        <button class=\\\"btn\\\" onclick=\\\"document.getElementById('confirmPriorityChangeModal').close()\\\">Cancel</button>\\n      </div>\\n    </div>\\n  </dialog>\\n\\n\\n</template>\\n\\n<script setup>\\nimport { useAdminStore } from '@/Stores/AdminStore'\\nimport { ref } from 'vue'\\n\\nconst adminStore = useAdminStore()\\n\\nlet props = defineProps([\\n  'source',\\n  'sourceType',\\n])\\n\\n// const setPriority = (sourceType) => {\\n//   emit('change', { sourceType, priority: true });\\n//   // Implement function to make API call to update the backend\\n// };\\n\\n\\nconst setPriority = () => {\\nadminStore.sourceSelector.source = props.source\\nadminStore.sourceSelector.sourceType = props.sourceType\\n  document.getElementById('confirmPriorityChangeModal').showModal() // Open the modal for confirmation\\n}\\n\\nconst confirmPriorityChange = async () => {\\n  await adminStore.setPlaybackPriorityType(adminStore.sourceSelector.source, adminStore.sourceSelector.sourceType)\\n  document.getElementById('confirmPriorityChangeModal').close() // Close the modal\\n\\n}\\n\\n// const setPriority = async () => {\\n//   // Directly call the store action to update the priority.\\n//   await adminStore.setPlaybackPriorityType(props.source, props.sourceType);\\n//   // No need to emit an event to the parent component.\\n// };\\n\\n</script>\\n\\n<style scoped>\\n.source-selector {\\n  /* Base styles */\\n  //margin-top: 0.5rem;\\n}\\n\\n.is-playing {\\n  /* Styles for playing status */\\n}\\n\\n.is-priority {\\n  /* Styles for isPriority status */\\n  color: black;\\n  font-weight: 300;\\n}\\n\\n.is-fallback {\\n  /* Styles for fallback status */\\n}\\n\\n.has-error {\\n  /* Styles for error status */\\n}\\n\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import script from \"./AddOrUpdateMistStreamModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AddOrUpdateMistStreamModal.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n\n  <dialog :id=\"id\" class=\"modal\">\n    <div class=\"modal-box w-11/12 max-w-5xl\">\n      <h3 class=\"font-bold text-lg\">\n        <slot name=\"form-title\">Default Form Title</slot>\n      </h3>\n\n\n      <div>\n        <slot name=\"form-description\">Default Form Description</slot>\n      </div>\n      <div>\n        <div class=\"flex flex-col space-y-2 px-12 mt-6\">\n          <form @submit.prevent=\"submit\">\n\n            <label class=\"block mb-2 uppercase font-bold text-xs dark:text-gray-200\"\n                   for=\"name\">Stream Name</label>\n            <input v-model=\"form.name\"\n                   class=\"bg-gray-50 border border-gray-400 text-gray-900 text-sm p-2 w-full rounded-lg focus:ring-blue-500 focus:border-blue-500 block\"\n                   type=\"text\"\n                   name=\"name\"\n                   id=\"name\" placeholder=\"Stream Name...\">\n            <div v-if=\"form.errors.name\" v-text=\"form.errors.name\" class=\"text-xs text-red-600 mt-1\"></div>\n\n            <label class=\"block mt-4 mb-2 uppercase font-bold text-xs dark:text-gray-200\"\n                   for=\"name\">Source</label>\n            <input v-model=\"form.source\"\n                   class=\"bg-gray-50 border border-gray-400 text-gray-900 text-sm p-2 w-full rounded-lg focus:ring-blue-500 focus:border-blue-500 block\"\n                   type=\"text\"\n                   name=\"source\"\n                   id=\"source\" placeholder=\"Source...\">\n            <div v-if=\"form.errors.source\" v-text=\"form.errors.source\" class=\"text-xs text-red-600 mt-1\"></div>\n\n            <label class=\"block mt-4 mb-2 uppercase font-bold text-xs dark:text-gray-200\"\n                   for=\"name\">MIME Type</label>\n            <input v-model=\"form.mime_type\"\n                   class=\"bg-gray-50 border border-gray-400 text-gray-900 text-sm p-2 w-full rounded-lg focus:ring-blue-500 focus:border-blue-500 block\"\n                   type=\"text\"\n                   name=\"mime_type\"\n                   id=\"mime_type\" placeholder=\"MIME Type...\">\n            <div v-if=\"form.errors.mime_type\" v-text=\"form.errors.mime_type\" class=\"text-xs text-red-600 mt-1\"></div>\n\n            <label class=\"block mt-4 mb-2 uppercase font-bold text-xs dark:text-gray-200\"\n                   for=\"comment\">Comment</label>\n            <input v-model=\"form.comment\"\n                      class=\"bg-gray-50 border border-gray-400 text-gray-900 text-sm p-2 w-full rounded-lg focus:ring-blue-500 focus:border-blue-500 block\"\n                      type=\"text\"\n                      name=\"comment\"\n                      id=\"comment\" placeholder=\"Comment...\"></input>\n            <div v-if=\"form.errors.comment\" v-text=\"form.errors.comment\" class=\"text-xs text-red-600 mt-1\"></div>\n\n            <label class=\"block mt-4 mb-2 uppercase font-bold text-xs dark:text-gray-200\"\n                   for=\"metadata\">Optional Parameters</label>\n            <div v-for=\"(item, index) in form.metadata\" :key=\"index\" class=\"flex items-center\">\n              <input v-model=\"item.key\"\n                     class=\"bg-gray-50 border border-gray-400 text-gray-900 text-sm p-2 mt-2 rounded-lg focus:ring-blue-500 focus:border-blue-500\"\n                     placeholder=\"Key\">\n\n              <input v-model=\"item.value\"\n                     class=\"bg-gray-50 border border-gray-400 text-gray-900 text-sm p-2 ml-2 mt-2 rounded-lg focus:ring-blue-500 focus:border-blue-500\"\n                     placeholder=\"Value\">\n\n              <button @click.prevent=\"removeMetadataField(index)\" class=\"btn btn-sm ml-2 mt-2\">Remove</button>\n            </div>\n            <button @click.prevent=\"addMetadataField\" class=\"btn btn-sm mt-2\">Add Metadata</button>\n\n\n            <div class=\"flex flex-row justify-center pt-6\">\n              <button type=\"submit\" class=\"btn btn-wide bg-green-500 hover:bg-green-400 text-white\"\n                      :disabled=\"form.processing\">\n                <slot name=\"button-label\">Default Form Title</slot>\n              </button>\n\n            </div>\n          </form>\n        </div>\n\n      </div>\n\n\n      <div class=\"modal-action\">\n        <button class=\"btn\" @click.prevent=\"closeModal\">Cancel</button>\n        <form method=\"dialog\">\n          <!-- if there is a button, it will close the modal -->\n\n        </form>\n      </div>\n    </div>\n  </dialog>\n\n</template>\n<script setup>\nimport { reactive, ref, watch } from 'vue'\nimport { useForm } from '@inertiajs/vue3'\nimport { useChannelStore } from '@/Stores/ChannelStore'\nimport { useAdminStore } from '@/Stores/AdminStore'\n\nconst channelStore = useChannelStore()\nconst adminStore = useAdminStore()\n\nimport Label from '@/Jetstream/Label.vue'\nimport Button from '@/Jetstream/Button.vue'\n\nlet props = defineProps({\n  mistStream: Object,\n  id: String,\n  // errors: Object,\n})\n\n// const errors = ref(props.errors);\nconst modalVisible = ref(false)\n\nconst metadata = ref([{key: '', value: ''}])\nlet originalName = ref(''); // used for stream name changes\n\nconst addMetadataField = () => {\n  form.metadata.push({key: '', value: ''})\n}\n\nconst removeMetadataField = (index) => {\n  form.metadata.splice(index, 1)\n}\n\nlet form = reactive(useForm({\n  id: '',\n  name: '',\n  source: 'push://',\n  mime_type: 'application/vnd.apple.mpegurl',\n  comment: '',\n  metadata: [], // Initialize with one empty metadata entry\n}))\n\nform.reset() // on modal load, reset form.\n\n// Watch for changes in the mistStream object in your Pinia store\nwatch(() => channelStore.mistStream, (newVal) => {\n  if (newVal) {\n    // Populate the form with mistStream data\n    form.id = newVal.id || ''\n    form.name = newVal.name || ''\n    originalName.value = newVal.name || ''; // Capture the original name\n    form.source = newVal.source || 'push://'\n    form.mime_type = newVal.mime_type || 'application/vnd.apple.mpegurl'\n    form.comment = newVal.comment || ''\n\n    // Convert metadata object to array format\n    if (newVal.metadata && typeof newVal.metadata === 'object') {\n      form.metadata = Object.entries(newVal.metadata).map(([key, value]) => ({\n        key, value,\n      }))\n    } else {\n      form.metadata = [{key: '', value: ''}] // Reset to initial state if no metadata\n    }\n  } else {\n    // Reset the form to initial state if there's no mistStream selected (e.g., for adding a new stream)\n    form.reset()\n  }\n}, {deep: true, immediate: true})\n//\n// let submit = () => {\n//   form.post(route('mistStream.add'))\n//   form.name = ''\n//   form.comment = ''\n//   if (!form.errors) {\n//     document.getElementById('adminAddMistStreamModal').close()\n//   }\n// }\n\nlet submit = async () => {\n  await form.post(route('mistStream.addOrUpdate', { originalName: originalName.value })), {\n    onSuccess: () => {\n      postSubmissionActions(); // Call the async function\n    },\n    onError: () => {\n      // Handle errors if needed, e.g., log to console or show a message\n      // Errors are automatically attached to the form object\n    },\n\n  }\n  closeModal()\n}\n\nconst postSubmissionActions = async () => {\n  await adminStore.fetchItems('mistStream'); // Await the fetching of items\n  channelStore.clearMistStream(); // Clear selected mistStream\n  form.reset(); // Reset form fields\n  closeModal(); // Close modal\n};\n\nfunction closeModal() {\n  document.getElementById(props.id).close()\n  channelStore.clearMistStream()\n  // Reset the form fields to their initial values\n  form.reset()\n  // Clear all validation errors\n  form.clearErrors()\n}\n\n// function toggleModal() {\n//   console.log('Toggling modal:', !modalVisible.value)\n//   modalVisible.value = !modalVisible.value\n//   form.name = ''\n//   form.comment = ''\n// }\n</script>\n","import script from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"mx-4 my-4\">\n    <div class=\"alert alert-info mt-4\"\n         v-if=\"props.flash.message\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" class=\"stroke-current shrink-0 w-6 h-6\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n      </svg>\n      <span>{{ props.flash.message }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-success mt-4 mx-3\"\n         v-if=\"props.flash.success\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.success }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-warning mt-4 mx-3\"\n         v-if=\"props.flash.warning\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"/>\n      </svg>\n      <span>{{ props.flash.warning }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-error mt-4 mx-3\"\n         v-if=\"props.flash.error\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.error }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n  </div>\n\n</template>\n\n<script setup>\nimport { router } from '@inertiajs/vue3'\nimport { computed } from \"vue\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\n\nconst appSettingStore = useAppSettingStore()\n\nappSettingStore.showFlashMessage = true\n\nlet props = defineProps({\n  flash: Object,\n\n})\n\nconst messageType = computed(() => ({\n  'text-green-700 bg-green-100 dark:bg-green-200 dark:text-green-800': props.flash.success,\n  'text-blue-700 bg-blue-100 dark:bg-blue-200 dark:text-blue-800': props.flash.message,\n  'text-orange-700 bg-orange-100 dark:bg-orange-200 dark:text-orange-800': props.flash.warning,\n  'text-red-700 bg-red-100 dark:bg-red-200 dark:text-red-800': props.flash.error,\n}))\n\nconst clearFlashMessage = async () => {\n  await router.post(route('flash.clear'));\n  router.reload();\n};\n</script>\n","import script from \"./AdminHeader.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AdminHeader.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <header>\n    <div class=\"flex justify-between my-3\">\n      <div class=\"mb-4 relative\">\n        <h1 class=\"text-3xl font-semibold inline-block\">\n          <slot/>\n        </h1>\n        <span v-if=\"displayBadges\" class=\"text-white font-semibold badge badge-success absolute -top-2 -right-10 flex items-center justify-center min-w-[2rem] h-[2rem] rounded-full\">{{ (badgePrimaryNumber ?? 0) > 99 ? '99+' : (badgePrimaryNumber ?? 0) }}</span>\n        <span v-if=\"displayBadges\" class=\"font-semibold badge badge-warning absolute -top-2 -right-20 flex items-center justify-center min-w-[2rem] h-[2rem] rounded-full\">{{ (badgeSecondaryNumber ?? 0) > 99 ? '99+' : (badgeSecondaryNumber ?? 0) }}</span>\n\n      </div>\n      <div>\n        <div class=\"flex flex-wrap-reverse justify-end gap-2\">\n          <Link :href=\"`/admin/settings`\">\n            <button\n                class=\"px-4 py-2 text-white bg-blue-600 hover:bg-blue-500 rounded-lg\"\n            >Admin Settings\n            </button>\n          </Link>\n        </div>\n      </div>\n    </div>\n  </header>\n\n</template>\n\n<script setup>\nimport { reactive } from 'vue'\n\nconst props = defineProps({\n  displayBadges: Boolean,\n  badgePrimaryNumber: Number,\n  badgeSecondaryNumber: Number,\n});\n\nconst defaultProps = {\n  displayBadges: false,\n};\n\nconst finalProps = reactive({ ...defaultProps, ...props });\n\n</script>\n","import script from \"./AddContentModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AddContentModal.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"modal\" :class=\"{ 'modal-open': showModal }\">\n    <div class=\"modal-box\">\n      <form @submit.prevent=\"handleFetchContent\" v-if=\"!contentFetched\">\n        <h3 class=\"font-bold text-lg mb-2\">Add Content to Fill Gap</h3>\n        <div class=\"form-control mb-2\">\n          <label class=\"label\">\n            <span class=\"label-text\">Select Content Type</span>\n          </label>\n          <select v-model=\"contentType\" class=\"select select-bordered\">\n            <option value=\"ShowEpisode\">Show Episode</option>\n            <option value=\"Movie\">Movie</option>\n            <option value=\"NewsStory\">News Story</option>\n            <option value=\"OtherContent\">Other Content</option>\n            <option value=\"MistStream\">Mist Stream</option>\n          </select>\n        </div>\n        <div class=\"form-control mb-4\">\n          <label class=\"label\">\n            <span class=\"label-text\">Gap Duration: {{ gapDuration }} minutes</span>\n          </label>\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary\" :disabled=\"loading\">\n          <span v-if=\"playlistStore.loading\" class=\"loading loading-spinner\" />\n          <span v-else>Retrieve Content</span>\n        </button>\n        <button type=\"button\" @click.prevent=\"closeModal\" class=\"btn btn-secondary ml-2\">Cancel</button>\n        <p v-if=\"error\" class=\"text-red-500 mt-2\">{{ error }}</p>\n      </form>\n\n      <div v-else class=\"mt-6\">\n        <div class=\"flex justify-between items-center mb-4\">\n          <input v-model=\"searchQuery\" @input=\"handleSearch\" type=\"text\" class=\"input input-bordered w-3/4\" placeholder=\"Search content...\">\n          <button @click.prevent=\"resetContent\" class=\"btn btn-secondary\">Back</button>\n        </div>\n        <h4 class=\"font-semibold text-lg mb-4 text-gray-800\">Available {{ availableContentType }}</h4>\n        <ul v-if=\"contentItems.length\" class=\"space-y-4\">\n          <li v-for=\"(item, index) in contentItems\" :key=\"index\" class=\"flex items-center justify-between p-4 border rounded-lg bg-gray-50\">\n            <div class=\"flex items-center gap-4\">\n              <SingleImage :image=\"item.content.image\" :alt=\"item.content.name\" :class=\"`w-16 h-16 object-cover rounded`\"/>\n              <div>\n                <div class=\"text-gray-800 font-medium\">{{ item.content.name }}</div>\n                <div v-if=\"item.duration_minutes\" class=\"text-gray-600\">{{ item.content.duration / 60 }} minutes</div>\n              </div>\n            </div>\n            <button @click.prevent=\"addContent(item)\" class=\"btn btn-sm btn-success\">Add</button>\n          </li>\n        </ul>\n        <div v-else>\n          <p class=\"text-gray-600\">No content available.</p>\n        </div>\n        <div class=\"flex justify-between mt-6\">\n          <button @click.prevent=\"prevPage\" :disabled=\"currentPage <= 1\" class=\"btn btn-outline\">Previous</button>\n          <button @click.prevent=\"nextPage\" :disabled=\"currentPage >= totalPages\" class=\"btn btn-outline\">Next</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed } from 'vue';\nimport { useChannelPlaylistStore } from '@/Stores/ChannelPlaylistStore';\nimport SingleImage from '@/Components/Global/Multimedia/SingleImage.vue'\n\nconst props = defineProps({\n  showModal: Boolean,\n  gapDuration: Number,\n  startDateTime: String,\n});\n\nconst emit = defineEmits(['addContentToGap']);\n\nconst contentType = ref('ShowEpisode');\nconst playlistStore = useChannelPlaylistStore();\n\nconst contentItems = computed(() => playlistStore.contentItems);\nconst contentFetched = computed(() => playlistStore.contentFetched);\nconst error = computed(() => playlistStore.error);\nconst loading = computed(() => playlistStore.loading);\nconst currentPage = computed(() => playlistStore.currentPage);\nconst totalPages = computed(() => playlistStore.totalPages);\nconst searchQuery = computed(() => playlistStore.searchQuery);\n\nconst availableContentType = computed(() => {\n  switch (contentType.value) {\n    case 'ShowEpisode':\n      return 'Show Episodes';\n    case 'Movie':\n      return 'Movies';\n    case 'NewsStory':\n      return 'News Stories';\n    case 'OtherContent':\n      return 'Other Content';\n    case 'MistStream':\n      return 'Streams';\n    default:\n      return 'Content';\n  }\n});\n\nconst handleFetchContent = () => {\n  playlistStore.fetchContent(contentType.value, props.gapDuration, props.startDateTime, currentPage.value, searchQuery.value);\n};\n\nconst handleSearch = (event) => {\n  playlistStore.setSearchQuery(event.target.value);\n  handleFetchContent();\n};\n\nconst addContent = (content) => {\n  playlistStore.addContentToSchedule(content);\n  closeModal();\n};\n\nconst closeModal = () => {\n  playlistStore.closeAddContentModal()\n  resetContent();\n};\n\nconst resetContent = () => {\n  playlistStore.resetContent();\n};\n\nconst prevPage = () => {\n  if (currentPage.value > 1) {\n    playlistStore.setPage(currentPage.value - 1);\n    handleFetchContent();\n  }\n};\n\nconst nextPage = () => {\n  if (currentPage.value < totalPages.value) {\n    playlistStore.setPage(currentPage.value + 1);\n    handleFetchContent();\n  }\n};\n</script>\n","import script from \"./PlaylistForm.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./PlaylistForm.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n    <div>\n      <label for=\"name\" class=\"block font-medium text-gray-700\">Name:</label>\n      <input type=\"text\" v-model=\"store.name\" id=\"name\" class=\"input input-bordered w-full mt-1\" required>\n    </div>\n    <div>\n      <label for=\"description\" class=\"block font-medium text-gray-700\">Description:</label>\n      <textarea v-model=\"store.description\" id=\"description\" class=\"input input-bordered w-full mt-1\"></textarea>\n    </div>\n    <div>\n      <label for=\"url\" class=\"block font-medium text-gray-700\">URL:</label>\n      <input type=\"text\" v-model=\"store.url\" id=\"url\" class=\"input input-bordered w-full mt-1\">\n    </div>\n    <div>\n      <label for=\"type\" class=\"block font-medium text-gray-700\">Type:</label>\n      <select v-model=\"store.type\" id=\"type\" class=\"input input-bordered w-full mt-1\">\n        <option value=\"regular\">Regular</option>\n        <option value=\"event\">Event</option>\n        <option value=\"special\">Special</option>\n      </select>\n    </div>\n    <div>\n      <label for=\"start_dateTime\" class=\"block font-medium text-gray-700\">\n        Start DateTime: <span class=\"text-sm text-gray-500\">(optional)</span>\n      </label>\n      <div class=\"flex\">\n        <input type=\"datetime-local\" v-model=\"store.startTime\" id=\"start_dateTime\"\n               class=\"input input-bordered w-full mt-1\">\n        <button type=\"button\" @click.prevent=\"clearStartDateTime\"\n                class=\"btn bg-gray-300 hover:bg-gray-400 text-black ml-2 mt-1\">Clear\n        </button>\n        <button type=\"button\" @click.prevent=\"setStartDateTimeNow\"\n                class=\"btn bg-gray-300 hover:bg-gray-400 text-black ml-2 mt-1\">Now\n        </button>\n      </div>\n    </div>\n    <div>\n      <label for=\"end_dateTime\" class=\"block font-medium text-gray-700\">\n        End DateTime: <span class=\"text-sm text-gray-500\">(optional)</span>\n      </label>\n      <div class=\"flex\">\n        <input type=\"datetime-local\" v-model=\"store.endTime\" id=\"end_dateTime\"\n               class=\"input input-bordered w-full mt-1\">\n        <button type=\"button\" @click.prevent=\"clearEndDateTime\"\n                class=\"btn bg-gray-300 hover:bg-gray-400 text-black ml-2 mt-1\">Clear\n        </button>\n        <button type=\"button\" @click.prevent=\"setEndDateTimeNow\"\n                class=\"btn bg-gray-300 hover:bg-gray-400 text-black ml-2 mt-1\">Now\n        </button>\n      </div>\n    </div>\n    <div>\n      <label for=\"priority\" class=\"block font-medium text-gray-700\">Priority:</label>\n      <input type=\"number\" v-model=\"store.priority\" id=\"priority\" class=\"input input-bordered w-full mt-1\">\n    </div>\n    <div>\n      <label for=\"repeat_mode\" class=\"block font-medium text-gray-700\">Repeat Mode: <span\n          class=\"text-sm text-gray-500\">(What happens when the playlist reaches the end?)</span></label>\n      <select v-model=\"store.repeat_mode\" id=\"repeat_mode\" class=\"input input-bordered w-full mt-1\">\n        <option value=\"repeat_all\">Repeat All</option>\n        <option value=\"repeat_last\">Repeat Last One Only</option>\n        <option value=\"shuffle\">Shuffle</option>\n        <option value=\"stop\">Stop</option>\n        <option value=\"next_playlist\">Play A Different Playlist</option>\n      </select>\n    </div>\n    <div v-if=\"store.repeat_mode === 'next_playlist'\">\n      <label for=\"next_playlist\" class=\"block font-medium text-gray-700\">Select Playlist:</label>\n      <select v-model=\"store.next_playlist_id\" id=\"next_playlist\" class=\"input input-bordered w-full mt-1\">\n        <option v-for=\"playlist in store.playlists\" :key=\"playlist.id\" :value=\"playlist.id\">\n          {{ playlist.name }}\n        </option>\n      </select>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { usePlaylistForm } from '@/Mixins/usePlaylistForm'\nimport { watch } from 'vue'\n\n// Use the mixin to get the shared form logic\nconst {\n  store,\n  clearStartDateTime,\n  setStartDateTimeNow,\n  clearEndDateTime,\n  setEndDateTimeNow,\n  fetchPlaylistsIfNeeded\n} = usePlaylistForm()\n\n// Watch the repeat_mode variable and call fetchPlaylistsIfNeeded when it changes\nwatch(() => store.repeat_mode, (newValue) => {\n  console.log('next_playlist selected')\n  if (newValue === 'next_playlist') {\n    fetchPlaylistsIfNeeded()\n  }\n}, {immediate: true})\n</script>\n","import script from \"./CreatePlaylistItemCard.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CreatePlaylistItemCard.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div :class=\"userStore.isSmallScreen ? '' : 'flex flex-wrap items-start justify-start w-full'\">\n    <div class=\"flex items-center space-x-2 mb-2\">\n      <SingleImage :image=\"item?.content?.image\" :class=\"`w-10 h-10 object-contain`\"/>\n      <div>\n        <div class=\"text-sm font-semibold\">#{{ index + 1 }} - {{ item?.content?.name }}</div>\n        <div class=\"text-xs text-gray-500\">{{ item.duration_minutes }} minutes &middot; Priority: {{\n            item.priority\n          }}\n        </div>\n      </div>\n    </div>\n    <div class=\"flex items-center space-x-2 mb-2 w-full\">\n      <SingleImage :image=\"item?.content?.team?.image\" :class=\"`w-5 h-5 object-contain`\"/>\n      <div class=\"text-sm\">{{ item?.content?.team?.name }}</div>\n    </div>\n    <div class=\"text-sm mb-2 w-full\">\n      <div><span class=\"text-xs uppercase font-semibold\">Start time: </span>{{ formatDate(item.start_dateTime) }}</div>\n      <div><span class=\"text-xs uppercase font-semibold\">End time: </span>{{ formatDate(item.end_dateTime) }}</div>\n    </div>\n    <div class=\"w-full mt-2 flex justify-between items-center\">\n      <div>\n        <span class=\"badge badge-outline\" :class=\"getBadgeClass(item.type)\">{{ cleanTypeName(item.type) }}</span>\n        <span v-if=\"item.is_scheduled\" class=\"badge badge-outline text-black ml-2\">Scheduled</span>\n      </div>\n      <div>\n        <button @click.prevent=\"$emit('removeItem', item.id)\" class=\"btn btn-xs btn-error\">Remove</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { useUserStore } from '@/Stores/UserStore'\nimport SingleImage from '@/Components/Global/Multimedia/SingleImage.vue'\nimport dayjs from 'dayjs'\n\nconst userStore = useUserStore()\n\nconst props = defineProps({\n  item: Object,\n  index: Number,\n})\n\nconst emit = defineEmits(['removeItem'])\n\n// Function to format the date and time\nconst formatDate = (date) => {\n  return dayjs(date).format('MMM D, YYYY, hh:mm A')\n}\n\n// Function to clean the type name\nconst cleanTypeName = (type) => {\n  // Remove the App\\Models\\ prefix if present\n  const cleanType = type.replace(/^App\\\\Models\\\\/, '')\n\n  // Add space before each uppercase letter\n  const spacedType = cleanType.replace(/([a-z])([A-Z])/g, '$1 $2')\n\n  // Capitalize the first letter if it starts with a lowercase letter\n  return spacedType.charAt(0).toUpperCase() + spacedType.slice(1)\n}\n\n// Function to get badge class based on type\nconst getBadgeClass = (type) => {\n  // Normalize the type without altering the original\n  const normalizedType = type.toLowerCase().split('\\\\').pop()\n\n  switch (normalizedType) {\n    case 'movie':\n      return 'text-red-500'\n    case 'show':\n      return 'text-blue-500'\n    case 'showepisode':\n      return 'text-green-500'\n    case 'movietrailer':\n      return 'text-orange-500'\n    case 'othercontent':\n      return 'text-purple-500'\n    case 'newsstory':\n      return 'text-yellow-500'\n    default:\n      return 'text-gray-500'\n  }\n}\n</script>\n","import script from \"./CreatePlaylistGapCard.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CreatePlaylistGapCard.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"flex flex-col justify-center space-x-2\">\n    <div class=\"text-sm font-semibold\">Gap</div>\n    <div class=\"text-xs\">\n      <span class=\"text-xs uppercase font-semibold\">Start time: </span>{{ formatDateTime(item.start_dateTime) }}\n    </div>\n    <div class=\"text-xs\">\n      <span class=\"text-xs uppercase font-semibold\">End time: </span>{{ formatDateTime(item.end_dateTime) }}\n    </div>\n    <div class=\"text-xs text-gray-500\">{{ item.duration_minutes }} minutes</div>\n    <button @click.prevent=\"emitOpenAddContentModal\" class=\"btn btn-sm btn-primary mt-2\">Add Content</button>\n  </div>\n</template>\n\n<script setup>\n\nconst props = defineProps({\n  item: Object,\n});\n\nconst emit = defineEmits(['openAddContentModal']);\n\nconst emitOpenAddContentModal = () => {\n  emit('openAddContentModal', props.item);\n};\n</script>\n","import script from \"./CreatePlaylistRemovedCard.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CreatePlaylistRemovedCard.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./ScheduleItems.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ScheduleItems.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n    <div class=\"mt-6 pt-3 border-t\">\n      <h3 class=\"text-lg font-bold mb-2\">Schedule Items</h3>\n      <div class=\"flex flex-wrap gap-2\">\n        <div class=\"mb-4\" v-if=\"store.hasRemovedItems\">\n          <button @click.prevent=\"clearRemovedItems\" class=\"btn btn-sm btn-warning\">Clear All Removed Items</button>\n        </div>\n        <div class=\"mb-4\" v-if=\"store.conflictCount > 0\">\n          <button @click.prevent=\"resolveConflicts\" class=\"btn btn-sm btn-warning\">Resolve Conflicts</button>\n        </div>\n        <div class=\"mb-4\" v-if=\"store.conflictCount === 0 && store.gapCount > 0\">\n          <button @click.prevent=\"store.insertGaps()\" class=\"btn btn-sm btn-info\">Insert Gaps</button>\n        </div>\n        <div class=\"mb-4\" v-if=\"store.scheduleItems.length > 0\">\n          <button @click.prevent=\"store.removeAllItems()\" class=\"btn btn-outline btn-sm btn-error\">Remove All Items</button>\n        </div>\n      </div>\n      <ul :class=\"isSmallScreen ? 'space-y-4' : 'divide-y divide-gray-200 space-y-4'\">\n        <li\n            v-for=\"(item, index) in store.scheduleItemsWithUserTimezone\"\n            :key=\"`${item.id}-${index}`\"\n        :class=\"getListItemClass(item.conflict, item.removed)\"\n        >\n        <CreatePlaylistItemCard\n            v-if=\"!item.removed && item.type !== 'gap'\"\n            :item=\"item\"\n            :index=\"index\"\n            @removeItem=\"removeItem\"\n        />\n        <CreatePlaylistGapCard\n            v-if=\"item.type === 'gap'\"\n            :item=\"item\"\n            @openAddContentModal=\"emitOpenAddContentModal\"\n        />\n        <CreatePlaylistRemovedCard\n            v-if=\"item.removed\"\n            :item=\"item\"\n            :index=\"index\"\n            @addItem=\"addItem\"\n        />\n        </li>\n      </ul>\n    </div>\n    <div class=\"sticky bottom-0 left-0 w-full p-4 bg-white border-t border-gray-200\">\n      <p v-if=\"store.error\" class=\"py-3 text-red-500\">{{ store.error }}</p>\n      <div class=\"flex justify-between\">\n        <button type=\"submit\" class=\"btn bg-green-500 hover:bg-green-600 text-white px-4 py-2 rounded\">{{ submitButtonText }}\n        </button>\n        <button @click.prevent=\"fetchSchedules\"\n                class=\"btn bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded\">\n          <span v-if=\"store.loadingSchedules\" class=\"loading loading-spinner\"/>\n          <span v-else>Use Schedule</span>\n        </button>\n      </div>\n      <div v-if=\"store.conflictCount > 0 || store.gapCount > 0\" class=\"mt-2\">\n        <span class=\"text-sm text-red-600 font-semibold\">Conflicts: {{ store.conflictCount }}</span>\n        <span class=\"text-sm text-orange-600 font-semibold ml-4\">Gaps: {{ store.gapCount }}</span>\n        <span v-if=\"store.processing\" class=\"ml-6 text-sm text-gray-600 font-semibold\">Processing <span\n            class=\"loading loading-dots text-info\"></span> Please wait</span>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { usePlaylistForm } from '@/Mixins/usePlaylistForm'\nimport CreatePlaylistItemCard from '@/Components/Pages/Admin/ChannelPlaylists/CreatePlaylistItemCard.vue'\nimport CreatePlaylistGapCard from '@/Components/Pages/Admin/ChannelPlaylists/CreatePlaylistGapCard.vue'\nimport CreatePlaylistRemovedCard from '@/Components/Pages/Admin/ChannelPlaylists/CreatePlaylistRemovedCard.vue'\n\nconst props = defineProps({\n  submitButtonText: {\n    type: String,\n    required: true\n  }\n})\n\nconst emit = defineEmits(['openAddContentModal']);\n\nconst {\n  store,\n  isSmallScreen,\n  getListItemClass,\n  clearRemovedItems,\n  resolveConflicts,\n  removeItem,\n  addItem,\n  openAddContentModal,\n  fetchSchedules,\n} = usePlaylistForm()\n\nconst emitOpenAddContentModal = (item) => {\n  emit('openAddContentModal', item);\n};\n</script>\n","import script from \"./DynamicModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./DynamicModal.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <dialog id=\"dynamicModal\" class=\"modal\">\n    <div class=\"modal-box w-11/12 max-w-5xl\">\n\n      <div class=\"flex flex-row justify-between align-bottom\">\n        <div class=\"flex gap-2\">\n          <h3 class=\"font-bold text-lg\">{{ adminStore.modalHeader }}</h3>\n          <span v-if=\"adminStore.loading\" class=\"loading loading-spinner\" />\n        </div>\n        <div>\n          <h3>{{ adminStore?.selectedChannel?.name }}</h3>\n        </div>\n      </div>\n      <div class=\"flex justify-center mb-6\">\n        <div class=\"flex items-center mt-6 xl:mt-0\">\n          <div class=\"relative\">\n            <input v-model=\"adminStore.searchTerm\" @input=\"debouncedFetchItems\" type=\"search\" class=\"bg-gray-50 text-black text-sm rounded-full\n                        focus:outline-none focus:shadow w-64 pl-8 px-3 py-1\" placeholder=\"Search...\">\n            <div class=\"absolute top-0 flex items-center h-full ml-2\">\n              <svg class=\"fill-current text-gray-400 w-4\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n                <path\n                    d=\"M456.69 421.39 362.6 327.3a173.81 173.81 0 0 0 34.84-104.58C397.44 126.38 319.06 48 222.72 48S48 126.38 48 222.72s78.38 174.72 174.72 174.72A173.81 173.81 0 0 0 327.3 362.6l94.09 94.09a25 25 0 0 0 35.3-35.3ZM97.92 222.72a124.8 124.8 0 1 1 124.8 124.8 124.95 124.95 0 0 1-124.8-124.8Z\"/>\n              </svg>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div>\n        <div class=\"overflow-x-auto\">\n            <table class=\"table table-xs\">\n            <thead>\n            <tr>\n              <th>\n                <span v-if=\"adminStore.currentType === 'channelPlaylist'\">Active</span>\n                <span v-if=\"adminStore.currentType === 'mistStream'\">Active</span>\n              </th>\n              <th v-if=\"adminStore.currentType === 'channelPlaylist'\">\n                <span>ID</span>\n              </th>\n              <th>\n                <span v-if=\"adminStore.currentType === 'channelPlaylist'\">Name</span>\n                <span v-if=\"adminStore.currentType === 'mistStream'\">Name</span>\n              </th>\n              <th>\n                <span v-if=\"adminStore.currentType === 'channelPlaylist'\">Type</span>\n                <span v-if=\"adminStore.currentType === 'mistStream'\">Source</span>\n              </th>\n              <th>\n                <span v-if=\"adminStore.currentType === 'channelPlaylist'\">Priority</span>\n                <span v-if=\"adminStore.currentType === 'mistStream'\">MIME Type</span>\n              </th>\n              <th>\n                <span v-if=\"adminStore.currentType === 'channelPlaylist'\">Repeat Mode</span>\n                <span v-if=\"adminStore.currentType === 'mistStream'\">Comment</span>\n              </th>\n              <th>\n                <span v-if=\"adminStore.currentType === 'channelPlaylist'\">Start Time</span>\n                <span v-if=\"adminStore.currentType === 'mistStream'\">Created On</span>\n              </th>\n              <th>\n                <span v-if=\"adminStore.currentType === 'channelPlaylist'\">End Time</span>\n                <span v-if=\"adminStore.currentType === 'mistStream'\"></span>\n              </th>\n              <th>\n                <!-- For delete -->\n              </th>\n            </tr>\n            </thead>\n\n            <tbody>\n            <tr v-for=\"item in adminStore.paginatedItems\" :key=\"item.id\" class=\"hover:bg-blue-300 hover:cursor-pointer\"\n                :class=\"{'bg-yellow-500': item.id === adminStore.activeItemId}\">\n              <td @click=\"selectItem(item)\">\n                <div v-if=\"adminStore.currentType === 'channelPlaylist'\">\n                  <span :class=\"getStatusClass(item.status)\">\n                    {{ item.status }}\n                  </span>\n                </div>\n                <span v-if=\"adminStore.currentType === 'mistStream'\"><span v-if=\"item.active\" class=\"text-green-500\">Active</span><span\n                    v-else class=\"text-red-700\">Inactive</span></span>\n              </td>\n              <td v-if=\"adminStore.currentType === 'channelPlaylist'\">\n                <span>{{ item.id }}</span>\n              </td>\n              <td @click=\"selectItem(item)\">\n                <span v-if=\"adminStore.currentType === 'channelPlaylist'\">{{ item.name }}</span>\n                <span v-if=\"adminStore.currentType === 'mistStream'\">{{ item.name }}</span>\n              </td>\n              <td @click=\"selectItem(item)\">\n                <span v-if=\"adminStore.currentType === 'channelPlaylist'\">{{ item.type }}</span>\n                <span v-if=\"adminStore.currentType === 'mistStream'\">{{ item.source }}</span>\n              </td>\n              <td @click=\"selectItem(item)\">\n                <span v-if=\"adminStore.currentType === 'channelPlaylist'\">{{ item.priority }}</span>\n                <span v-if=\"adminStore.currentType === 'mistStream'\">{{ item.mime_type }}</span>\n              </td>\n              <td @click=\"selectItem(item)\">\n                <span v-if=\"adminStore.currentType === 'channelPlaylist'\">{{ item.repeat_mode }}</span>\n                <span v-if=\"adminStore.currentType === 'channelPlaylist' && item.repeat_mode === 'next_playlist'\"><br/>{{\n                    item?.next_playlist_name\n                  }}</span>\n                <span v-if=\"adminStore.currentType === 'mistStream'\">{{ item.comment }}</span>\n              </td>\n              <td @click=\"selectItem(item)\">\n                <span v-if=\"adminStore.currentType === 'channelPlaylist'\">{{\n                    dayjs.utc(item.start_dateTime).tz(userStore.timezone).format('MMM D, YYYY, hh:mm A')\n                  }}</span>\n                <span v-if=\"adminStore.currentType === 'mistStream'\">{{ dayjs.utc(item.created_at).tz(userStore.timezone).format('MMM D, YYYY, hh:mm A') }}</span>\n\n              </td>\n              <td @click=\"selectItem(item)\">\n                <span v-if=\"adminStore.currentType === 'channelPlaylist'\">{{ dayjs.utc(item.end_dateTime).tz(userStore.timezone).format('MMM D, YYYY, hh:mm A') }}</span>\n                <span v-if=\"adminStore.currentType === 'mistStream'\"></span>\n              </td>\n              <td class=\"w-fit whitespace-nowrap overflow-hidden\">\n                <button\n                    v-if=\"adminStore.currentType === 'mistStream'\"\n                    @click.prevent=\"openEditModal(item)\"\n                    class=\"ml-2 px-2 py-1 text-white font-semibold bg-blue-500 hover:bg-blue-600 rounded-lg\"\n                >\n                  <font-awesome-icon icon=\"fa-pencil\" class=\"text-xs\"/>\n                </button>\n                <button\n                    v-if=\"adminStore.currentType === 'mistStream'\"\n                    @click=\"removeItem(item)\"\n                    class=\"ml-1 px-2 py-1 text-white font-semibold bg-red-500 hover:bg-red-600 rounded-lg\"\n                >\n                  <font-awesome-icon icon=\"fa-trash-can\" class=\"text-xs\"/>\n                </button>\n                <button\n                    v-if=\"adminStore.currentType === 'channelPlaylist'\"\n                    @click.prevent=\"openEditPlaylistModal(item)\"\n                    class=\"ml-2 px-2 py-1 text-white font-semibold bg-blue-500 hover:bg-blue-600 rounded-lg\"\n                >\n                  <font-awesome-icon icon=\"fa-pencil\" class=\"text-xs\"/>\n                </button>\n                <button\n                    v-if=\"adminStore.currentType === 'channelPlaylist' && item.status === 'Inactive'\"\n                    @click=\"removeChannelPlaylist(item)\"\n                    class=\"ml-1 px-2 py-1 text-white font-semibold bg-red-500 hover:bg-red-600 rounded-lg\"\n                >\n                  <font-awesome-icon icon=\"fa-trash-can\" class=\"text-xs\"/>\n                </button>\n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </div>\n        <div v-if=\"adminStore.totalModalPages > 1\" class=\"flex flex-row justify-center mt-6 w-full\">\n          <div class=\"join grid grid-cols-2\">\n            <button\n                class=\"join-item btn btn-sm btn-outline\"\n                @click=\"adminStore.prevPage\"\n                :disabled=\"adminStore.currentPage === 1\"\n            >\n              Previous page\n            </button>\n            <button\n                class=\"join-item btn btn-sm btn-outline\"\n                @click=\"adminStore.nextPage\"\n                :disabled=\"adminStore.currentPage === adminStore.totalModalPages\"\n            >\n              Next\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <AddOrUpdateMistStreamModal :id=\"`updateMistStreamModal`\" :form-errors=\"$page.props.errors\"\n                                  @update-list=\"refreshList\">\n        <template #form-title>\n          Update Mist Stream\n        </template>\n        <template #form-description>\n          Note: You cannot edit the stream name (right now), it will only create a new stream. This is a bug that needs\n          to be fixed in the AddOrUpdateMistStreamJob\n        </template>\n        <template #button-label>\n          Update\n        </template>\n      </AddOrUpdateMistStreamModal>\n\n      <dialog id=\"confirmSelectionModal\" class=\"modal\">\n        <div class=\"modal-box\">\n          <h3 class=\"font-bold text-lg\">Confirm Selection</h3>\n          <p class=\"py-4\">\n            Are you sure you want to select <span id=\"selectedItemName\"></span>?\n          </p>\n          <div class=\"modal-action\">\n            <button class=\"btn\" @click=\"confirmSelection\" :disabled=\"adminStore.loading\">Confirm</button>\n            <button class=\"btn\" @click=\"closeConfirmSelectionModal\" :disabled=\"adminStore.loading\">Cancel</button>\n          </div>\n        </div>\n      </dialog>\n\n      <dialog id=\"confirmRemoveModal\" class=\"modal\">\n        <div class=\"modal-box\">\n          <h3 class=\"font-bold text-lg\">Confirm Remove</h3>\n          <p class=\"py-4\">\n            Are you sure you want to remove <span id=\"selectedForRemovalItemName\"></span>?\n          </p>\n          <div class=\"modal-action\">\n            <button class=\"btn\" @click=\"confirmRemove\" :disabled=\"adminStore.loading\">Confirm</button>\n            <button class=\"btn\" @click=\"closeConfirmRemoveModal\" :disabled=\"adminStore.loading\">Cancel</button>\n          </div>\n        </div>\n      </dialog>\n\n      <!-- Edit Playlist Modal -->\n      <dialog id=\"updateChannelPlaylistModal\" class=\"modal\">\n        <div class=\"modal-box p-0 flex flex-col h-full\">\n\n          <!-- Sticky header -->\n          <div class=\"modal-header sticky top-0 left-0 right-0 bg-white p-4 z-40 border-b border-gray-200\">\n            <!-- Close button at the top right corner -->\n            <form method=\"dialog\" class=\"absolute right-2 top-2 z-50\">\n              <button class=\"btn btn-sm btn-circle btn-ghost\">✕</button>\n            </form>\n            <h2 class=\"text-2xl font-bold\">Edit Playlist</h2>\n          </div>\n\n          <!-- Modal content with padding to account for the sticky header and footer -->\n          <div class=\"modal-body flex-1 overflow-y-auto\">\n            <EditPlaylist v-if=\"selectedPlaylist\" :playlist=\"selectedPlaylist\" @update-list=\"refreshList\" />\n          </div>\n\n          <!-- Sticky footer -->\n          <div class=\"modal-action sticky bottom-0 left-0 right-0 bg-white p-4 z-40 border-t border-gray-200\">\n            <button class=\"btn\" @click=\"closeEditPlaylistModal\">Close</button>\n          </div>\n        </div>\n      </dialog>\n\n\n      <div class=\"modal-action\">\n        <form method=\"dialog\">\n          <!-- if there is a button, it will close the modal -->\n          <button class=\"btn\" @click=\"adminStore.clearSelectedChannelAndItems\">Close</button>\n        </form>\n      </div>\n    </div>\n  </dialog>\n</template>\n\n<script setup>\nimport { ref, watch, computed, onMounted, defineAsyncComponent } from 'vue'\nimport { useAdminStore } from '@/Stores/AdminStore'\nimport { useChannelStore } from '@/Stores/ChannelStore'\nimport { useUserStore } from '@/Stores/UserStore'\nimport { useChannelPlaylistStore } from '@/Stores/ChannelPlaylistStore'\nimport debounce from 'lodash/debounce'\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome'\nimport { router } from '@inertiajs/vue3'\n// Lazy load the components\nconst AddOrUpdateMistStreamModal = defineAsyncComponent(() => import('@/Components/Global/MistStreams/AddOrUpdateMistStreamModal.vue'))\nconst EditPlaylist = defineAsyncComponent(() => import('@/Components/Pages/Admin/ChannelPlaylists/EditPlaylist.vue'))\n\nimport dayjs from 'dayjs'\n\nconst adminStore = useAdminStore()\nconst channelStore = useChannelStore()\nconst userStore = useUserStore()\nconst channelPlaylistStore = useChannelPlaylistStore()\n// const searchTerm = ref('');\n\nlet props = defineProps({\n  type: String,\n})\n\nconst items = computed(() => adminStore.filteredItems)\nconst currentItemId = computed(() => adminStore.activeItem)\nconst selectedPlaylist = ref(null) // Reactive property for the selected playlist\n\n// const searchItems = () => {\n//   adminStore.searchItems(adminStore.type, searchTerm.value);\n// };\n//\n// const debouncedFetchItems = debounce(adminStore.searchItems, 300);\n\n// watch(searchTerm, debouncedFetchItems);\n\n\nconst selectedItem = ref(null) // A reactive property to hold the currently selected item\n\nconst selectItem = (item) => {\n  selectedItem.value = item // Store the item temporarily\n  document.getElementById('selectedItemName').textContent = item.name // Display the name in the modal\n  document.getElementById('confirmSelectionModal').showModal() // Open the modal for confirmation\n}\n\nconst removeItem = (item) => {\n  selectedItem.value = item // Store the item temporarily\n  document.getElementById('selectedForRemovalItemName').textContent = item.name // Display the name in the modal\n  document.getElementById('confirmRemoveModal').showModal() // Open the modal for confirmation\n}\n\nconst editItem = (item) => {\n  selectedItem.value = item // Store the item temporarily\n  // Create Modal for editing\n  // document.getElementById('selectedForRemovalItemName').textContent = item.name; // Display the name in the modal\n  // document.getElementById('confirmRemoveModal').showModal(); // Open the modal for confirmation\n}\n\nconst confirmSelection = async () => {\n  if (selectedItem.value) {\n    await adminStore.updateActiveItemId(selectedItem.value.id)\n    document.getElementById('confirmSelectionModal').close() // Close the modal\n    // Handle additional logic for item selection if necessary\n  }\n}\n\nconst confirmRemove = async () => {\n  if (selectedItem.value) {\n    removeMistStream(selectedItem.value.name)\n    document.getElementById('confirmRemoveModal').close() // Close the modal\n    // Handle additional logic for item selection if necessary\n  }\n}\n// const selectItem = async (item) => {\n//   await adminStore.updateActiveItemId(item.id);\n//   // Handle additional logic for item selection if necessary\n// };\n\nconst openEditModal = (item) => {\n  document.getElementById('updateMistStreamModal').showModal()\n  channelStore.mistStream = item\n}\n\nconst removeMistStream = (name) => {\n  router.post(route('mistStream.remove'), {'name': name})\n  document.getElementById('dynamicModal').close()\n}\n\nconst openEditPlaylistModal = (item) => {\n  console.log('Edit item opening: ', item)\n  selectedPlaylist.value = item\n  channelPlaylistStore.setPlaylistData(item)\n  document.getElementById('updateChannelPlaylistModal').showModal()\n}\n\nconst closeEditPlaylistModal = () => {\n  channelPlaylistStore.reset()\n  document.getElementById('updateChannelPlaylistModal').close()\n}\n\nconst removeChannelPlaylist = (item) => {\n  channelPlaylistStore.removePlaylist(item.id)\n  adminStore.removeItem(item)\n}\n\nconst refreshList = () => {\n  adminStore.fetchItems(props.type)\n}\n\n// onMounted(() => {\n//   adminStore.fetchItems(props.type).then(() => {\n//     adminStore.setActiveItem(props.type);\n//   }).catch(error => {\n//     console.error('Error fetching items:', error);\n//   });\n// });\n\nconst getStatusClass = (status) => {\n  switch (status) {\n    case 'Active':\n      return 'text-green-500'\n    case 'Inactive':\n      return 'text-gray-700'\n    case 'Scheduled':\n      return 'text-purple-700'\n    case 'Standby':\n      return 'text-orange-700'\n    default:\n      return ''\n  }\n}\n// adminStore.fetchItems(props.type)\n\n// onMounted(adminStore.fetchItems(adminStore.type)); // Optionally fetch items when the modal mounts\n\n// const fetchItems = () => {\n//   router.get(`/admin/channels/search/${props.type}`, { search: searchTerm.value }, {\n//     preserveState: false,\n//     onSuccess: (page) => {\n//       items.value = page.props.items; // Assume your backend sends back 'items'\n//     }\n//   });\n// };\n\n// watch(searchTerm, fetchItems);\n\n// onMounted(fetchItems); // Optionally fetch items when the modal mounts\n</script>\n\n\n<!--<script setup>-->\n<!--import { ref, defineProps, defineEmits } from 'vue';-->\n\n<!--const props = defineProps({-->\n<!--  showModal: Boolean,-->\n<!--  currentItem: Object,-->\n<!--  itemsType: String-->\n<!--});-->\n\n<!--const emits = defineEmits(['update:item', 'close']);-->\n\n<!--const searchTerm = ref('');-->\n<!--const items = ref([]);-->\n\n<!--const fetchItems = async () => {-->\n<!--  // Fetch items based on `itemsType` and `searchTerm`-->\n<!--  // Update `items` with the fetched data-->\n<!--};-->\n\n<!--const selectItem = (item) => {-->\n<!--  emits('update:item', { type: props.itemsType, item });-->\n<!--};-->\n\n<!--const closeModal = () => {-->\n<!--  emits('close');-->\n<!--};-->\n<!--</script>-->\n","<template>\n  <!--  <div class=\"source-selector\" :class=\"{'is-priority': source?.isPriority, 'is-playing': source?.isPlaying, 'is-fallback': source?.isFallback, 'has-error': source?.hasError}\">-->\n  <div\n      :class=\"['source-selector', {'is-priority': source?.playback_priority_type, 'is-playing': source?.isPlaying, 'is-fallback': source?.isFallback, 'has-error': source?.hasError}]\">\n    <div>\n      <!-- Display the source status here (playing, fallback, error) -->\n      <div v-if=\"source?.playback_priority_type === sourceType\" class=\"btn btn-xs mt-1 text-white bg-green-500 hover:bg-green-500\">Priority</div>\n      <span>\n\n      </span>\n      <!-- Icon or button to set this source as priority -->\n      <!--      <button class=\"btn btn-xs\" v-if=\"!source?.playback_priority_type\" @click=\"setPriority\">Set as Priority</button>-->\n    </div>\n  </div>\n\n  <!--  <div v-if=\"source?.playback_priority_type === 'mistStream'\">-->\n  <!--    <button class=\"btn btn-xs hover:bg-green-500 bg-green-500\">Priority</button>-->\n  <!--  </div>-->\n\n  <button v-if=\"source?.playback_priority_type !== sourceType\" class=\"btn btn-xs mt-1\"\n          @click=\"setPriority\">Set as Priority\n  </button>\n\n\n  <dialog :id=\"`confirmPriorityChangeModal`\" class=\"modal\">\n    <div class=\"modal-box\">\n      <h3 class=\"font-bold text-lg\">Confirm Selection for {{ adminStore.sourceSelector?.source?.name }}</h3>\n      <p class=\"py-4\">\n        Are you sure you want to change priority to <span class=\"font-bold\">{{ adminStore.sourceSelector?.sourceType }}</span>?\n      </p>\n      <div class=\"modal-action\">\n        <button class=\"btn\" @click=\"confirmPriorityChange\">Confirm</button>\n        <button class=\"btn\" onclick=\"document.getElementById('confirmPriorityChangeModal').close()\">Cancel</button>\n      </div>\n    </div>\n  </dialog>\n\n\n</template>\n\n<script setup>\nimport { useAdminStore } from '@/Stores/AdminStore'\nimport { ref } from 'vue'\n\nconst adminStore = useAdminStore()\n\nlet props = defineProps([\n  'source',\n  'sourceType',\n])\n\n// const setPriority = (sourceType) => {\n//   emit('change', { sourceType, priority: true });\n//   // Implement function to make API call to update the backend\n// };\n\n\nconst setPriority = () => {\nadminStore.sourceSelector.source = props.source\nadminStore.sourceSelector.sourceType = props.sourceType\n  document.getElementById('confirmPriorityChangeModal').showModal() // Open the modal for confirmation\n}\n\nconst confirmPriorityChange = async () => {\n  await adminStore.setPlaybackPriorityType(adminStore.sourceSelector.source, adminStore.sourceSelector.sourceType)\n  document.getElementById('confirmPriorityChangeModal').close() // Close the modal\n\n}\n\n// const setPriority = async () => {\n//   // Directly call the store action to update the priority.\n//   await adminStore.setPlaybackPriorityType(props.source, props.sourceType);\n//   // No need to emit an event to the parent component.\n// };\n\n</script>\n\n<style scoped>\n.source-selector {\n  /* Base styles */\n  //margin-top: 0.5rem;\n}\n\n.is-playing {\n  /* Styles for playing status */\n}\n\n.is-priority {\n  /* Styles for isPriority status */\n  color: black;\n  font-weight: 300;\n}\n\n.is-fallback {\n  /* Styles for fallback status */\n}\n\n.has-error {\n  /* Styles for error status */\n}\n\n</style>\n","import api from \"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-10.use[1]!../../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-10.use[2]!../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./SourceSelector.vue?vue&type=style&index=0&id=c559967c&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./SourceSelector.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./SourceSelector.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./SourceSelector.vue?vue&type=style&index=0&id=c559967c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-c559967c\"]])\n\nexport default __exports__","import script from \"./Label.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Label.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./CreatePlaylist.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CreatePlaylist.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"px-4 pt-4 bg-white rounded-lg shadow-lg relative flex flex-col h-full\">\n    <h2 class=\"text-2xl font-bold mb-4\">Create New Playlist</h2>\n\n    <div class=\"flex-grow overflow-auto pr-2\">\n      <form @submit.prevent=\"createPlaylist\" class=\"space-y-4\">\n        <PlaylistForm />\n        <ScheduleItems submitButtonText=\"Create\" @openAddContentModal=\"handleOpenAddContentModal\" />\n      </form>\n    </div>\n    <AddContentModal\n        v-if=\"store.showModal\"\n        :showModal=\"store.showModal\"\n        :gapDuration=\"selectedGapDuration\"\n        :startDateTime=\"startDateTime\"\n    />\n  </div>\n</template>\n\n<script setup>\nimport { usePlaylistForm } from '@/Mixins/usePlaylistForm'\nimport AddContentModal from '@/Components/Pages/Admin/ChannelPlaylists/AddContentModal.vue'\nimport PlaylistForm from '@/Components/Pages/Admin/ChannelPlaylists/PlaylistForm.vue'\nimport ScheduleItems from '@/Components/Pages/Admin/ChannelPlaylists/ScheduleItems.vue'\nimport dayjs from 'dayjs'\n\n// Use the mixin to get the shared form logic\nconst {\n  store,\n  notificationStore,\n  error,\n  selectedGapDuration,\n  showModal,\n  startDateTime,\n  fetchPlaylistsIfNeeded,\n  validateTimes,\n  openAddContentModal,\n  closeModal,\n} = usePlaylistForm()\n\nconst createPlaylist = async () => {\n  // Validate the form times using the mixin logic\n  if (!validateTimes()) {\n    return\n  }\n\n  await store.createPlaylist({\n    name: store.name,\n    description: store.description,\n    url: store.url,\n    type: store.type,\n    start_dateTime: store.startTimeUTC,\n    end_dateTime: store.endTimeUTC,\n    priority: store.priority,\n    repeat_mode: store.repeat_mode,\n    next_playlist_id: store.repeat_mode === 'next_playlist' ? store.next_playlist_id : null,\n  })\n\n  if (!store.error) {\n    // Reset the form fields after successful creation\n    store.name = ''\n    store.description = ''\n    store.url = ''\n    store.type = 'regular'\n    store.startTime = dayjs().format('YYYY-MM-DDTHH:mm')\n    store.endTime = dayjs().add(24, 'hour').format('YYYY-MM-DDTHH:mm')\n    store.priority = 1\n    store.repeat_mode = 'repeat_all'\n    store.next_playlist_id = null\n\n    // Close modal or handle success\n    document.getElementById('addChannelPlaylistModal').close()\n    store.reset()\n  } else {\n    error.value = store.error\n  }\n}\n\nconst handleOpenAddContentModal = (gapItem) => {\n  openAddContentModal(gapItem);\n  console.log('openAddContentModal', gapItem);\n}\n</script>\n","import script from \"./AdminChannelHeaderButtons.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AdminChannelHeaderButtons.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n    <div class=\"flex flex-row justify-between gap-x-4 mb-3\">\n      <div>\n        <Link :href=\"`#`\">\n          <button\n              @click.prevent=\"openAddChannelModal\"\n              class=\"btn btn-sm bg-green-500 hover:bg-green-600 text-white px-4 py-2 mr-2 rounded disabled:bg-gray-400\"\n          >Add Channel\n          </button>\n        </Link>\n        <Link :href=\"`#`\">\n          <button\n              class=\"btn btn-sm bg-green-500 hover:bg-green-600 text-white px-4 py-2 mr-2 rounded disabled:bg-gray-400\"\n              disabled\n          >Add External Source\n          </button>\n        </Link>\n        <Link :href=\"`#`\">\n          <button\n              @click.prevent=\"openAddChannelPlaylistModal\"\n              class=\"btn btn-sm bg-green-500 hover:bg-green-600 text-white px-4 py-2 mr-2 rounded disabled:bg-gray-400\"\n          >Add Channel Playlist\n          </button>\n        </Link>\n        <button\n            class=\"btn btn-sm bg-green-500 hover:bg-green-600 text-white px-4 py-2 mr-2 rounded disabled:bg-gray-400\"\n            onclick=\"addMistStreamModal.showModal()\">\n          Add Mist Stream\n        </button>\n        <AddOrUpdateMistStreamModal :id=\"`addMistStreamModal`\" :form-errors=\"$page.props.errors\">\n          <template #form-title>\n            Add Mist Stream\n          </template>\n          <template #form-description>\n            Add a new stream to the Mist Server\n          </template>\n          <template #button-label>\n            Add\n          </template>\n        </AddOrUpdateMistStreamModal>\n\n      </div>\n      <input v-model=\"adminStore.searchTerm\" type=\"search\" placeholder=\"Search...\" class=\"border px-2 rounded-lg\"/>\n    </div>\n\n    <dialog id=\"adminAddChannel\" class=\"modal\">\n      <div class=\"modal-box\">\n        <form method=\"dialog\">\n          <button class=\"btn btn-sm btn-circle btn-ghost absolute right-2 top-2\">✕</button>\n        </form>\n        <h3 class=\"font-bold text-lg mb-2\">Add Channel</h3>\n        <input v-model=\"newChannelName\" type=\"text\" placeholder=\"Channel Name\" class=\"input input-bordered w-full max-w-xs\" />\n        <button @click.prevent=\"submit\" class=\"btn btn-primary ml-2\">Add</button>\n      </div>\n    </dialog>\n\n    <dialog id=\"addChannelPlaylistModal\" class=\"modal\">\n      <div class=\"modal-box p-0 flex flex-col h-full\">\n        <form method=\"dialog\" class=\"absolute right-2 top-2 z-50\">\n          <button @click=\"clearChannelPlaylistStore\" class=\"btn btn-sm btn-circle btn-ghost\">✕</button>\n        </form>\n        <div class=\"flex-grow overflow-auto\">\n          <CreatePlaylist />\n        </div>\n      </div>\n    </dialog>\n  </div>\n</template>\n<script setup>\nimport { useAdminStore } from '@/Stores/AdminStore'\nimport { useChannelPlaylistStore } from '@/Stores/ChannelPlaylistStore'\nimport AddOrUpdateMistStreamModal from '@/Components/Global/MistStreams/AddOrUpdateMistStreamModal'\nimport { ref } from 'vue'\nimport CreatePlaylist from '@/Components/Pages/Admin/ChannelPlaylists/CreatePlaylist.vue'\n\nconst adminStore = useAdminStore()\nconst channelPlaylistStore = useChannelPlaylistStore()\n\nconst newChannelName = ref('')\n\nconst openAddChannelModal = () => {\n  document.getElementById('adminAddChannel').showModal()\n}\n\nconst openAddChannelPlaylistModal = () => {\n  channelPlaylistStore.reset()\n  document.getElementById('addChannelPlaylistModal').showModal()\n}\n\nconst clearChannelPlaylistStore = () => {\n  channelPlaylistStore.reset()\n}\n\nconst submit = async () => {\n  await adminStore.addChannel(newChannelName.value)\n  document.getElementById('adminAddChannel').close()\n  newChannelName.value = ''\n}\n</script>","import api from \"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-10.use[1]!../../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-10.use[2]!../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./AdminChannelPopperContent.vue?vue&type=style&index=0&id=d34cc41c&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import { render } from \"./AdminChannelPopperContent.vue?vue&type=template&id=d34cc41c&scoped=true\"\nconst script = {}\n\nimport \"./AdminChannelPopperContent.vue?vue&type=style&index=0&id=d34cc41c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-d34cc41c\"]])\n\nexport default __exports__","<template>\n  <Popper hover openDelay=\"50\" closeDelay=\"50\" offset-skid=\"0\" offset-distance=\"0\" placement=\"bottom\">\n    <template #content>\n      <slot name=\"content\"></slot> <!-- Dynamic content -->\n    </template>\n    <slot name=\"activator\"></slot>\n  </Popper>\n</template>\n<style scoped>\n#tooltip {\n  background: #333;\n  color: white;\n  font-weight: bold;\n  padding: 4px 8px;\n  font-size: 13px;\n  border-radius: 4px;\n}\n\n:deep(.popper) {\n  background: #333333;\n  padding: 2px;\n  border-radius: 20px;\n  color: #fff;\n  font-weight: bold;\n  text-transform: uppercase;\n}\n\n:deep(.popper #arrow::before) {\n  background: #333333;\n}\n\n:deep(.popper:hover),\n:deep(.popper:hover > #arrow::before) {\n  background: #333333;\n}\n</style>","import script from \"./AdminChannelDataPopper.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AdminChannelDataPopper.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <AdminChannelPopperContent>\n    <template #activator>\n      <button @click=\"emit('open-modal')\" :class=\"buttonClass\">\n        {{ buttonText }}\n      </button>\n    </template>\n    <template #content>\n      <div class=\"text-xs p-2\" id=\"tooltip\">\n        <div>ID: {{ dataPart.id }}</div>\n        <div>Name: {{ dataPart.name }}</div>\n        <div>Path: {{ dataPart.path }}</div>\n        <div>Type: {{ dataPart.type }}</div>\n        <div>Provider: {{ dataPart.provider }}</div>\n      </div>\n    </template>\n  </AdminChannelPopperContent>\n</template>\n<script setup>\nimport AdminChannelPopperContent from '@/Components/Pages/Admin/Channels/AdminChannelPopperContent'\nimport { computed } from 'vue'\n\nconst props = defineProps({\n  data: Object,\n  dataType: String,\n  dataTypeDb: String,\n})\n\nconst emit = defineEmits(['open-modal'])\n\n// Computed property to dynamically generate the button text\nconst buttonText = computed(() => {\n  return props.data[props.dataTypeDb]?.name || `No ${props.dataType} Name`\n})\n\n// Computed property for accessing the relevant data part\nconst dataPart = computed(() => {\n  return props.data[props.dataTypeDb] || {};\n})\n\nconst buttonClass = computed(() => {\n  return {\n    'cursor-pointer': true,\n    'text-black': true,\n    // Add 'font-semibold' only if data.playback_priority_type equals dataType\n    'font-semibold': props.data.playback_priority_type === props.dataType\n  }\n})\n</script>","import script from \"./AdminChannelDataItem.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AdminChannelDataItem.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n    <div v-if=\"data[dataTypeDb]\">\n      <AdminChannelDataPopper\n          :data=\"data\"\n          :dataType=\"dataType\"\n          :dataTypeDb=\"dataTypeDb\"\n          @open-modal=\"emit('open-modal')\"/>\n    </div>\n    <div v-else>\n      <button @click=\"emit('open-modal')\">\n    <span v-if=\"data[dataTypeDb]?.name\" class=\"text-gray-700 tracking-wide\">\n                              <span v-if=\"data.playback_priority_type === dataType\"\n                                    :class=\"{'text-black font-bold': data.playback_priority_type === dataType}\">{{\n                                  data?.dataTypeDb.name\n                                }}</span>\n      <span v-else>{{ data?.dataTypeDb.name }}</span>\n    </span>\n        <span v-else class=\"italic text-gray-300 text-sm\">no {{ dataType }}</span>\n      </button>\n    </div>\n    <!-- Status indicator + action to change source -->\n    <source-selector :source=\"data\"\n                     :source-type=\"dataType\"/>\n  </div>\n</template>\n<script setup>\nimport SourceSelector from '@/Components/Pages/Admin/Channels/SourceSelector'\nimport AdminChannelDataPopper from '@/Components/Pages/Admin/Channels/AdminChannelDataPopper.vue'\n\ndefineProps({\n  data: Object,\n  dataType: String,\n  dataTypeDb: String,\n})\n\nconst emit = defineEmits(['open-modal'])\n</script>","import script from \"./AdminChannelCurrentVideo.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AdminChannelCurrentVideo.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./AdminChannelRow.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AdminChannelRow.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"table-row bg-white border-b dark:bg-gray-800 dark:border-gray-700\">\n    <div class=\"table-cell min-w-[8rem] px-6 py-4 font-medium text-gray-900 dark:text-white whitespace-nowrap\">\n      <button @click.prevent=\"openEditChannelModal\" class=\"text-xl\">{{ channel.name }}</button>\n      <div v-if=\"channel?.isLive\" class=\"ml-2 text-xs badge badge-secondary badge-outline\">live</div>\n    </div>\n\n    <!-- Current Video -->\n    <div class=\"md:table-cell px-6 py-4 font-medium text-gray-900 dark:text-white whitespace-nowrap text-center\">\n      <AdminChannelCurrentVideo :data=\"channel\"/>\n    </div>\n\n    <!-- ExternalSource -->\n    <div class=\"table-cell px-6 py-4 align-middle text-center\">\n      <AdminChannelDataItem\n          :data=\"channel\"\n          :dataType=\"`externalSource`\"\n          :dataTypeDb=\"`external_source`\"\n          @open-modal=\"handleOpenModal('externalSource')\"/>\n    </div>\n\n    <!-- ChannelPlaylist -->\n    <div class=\"table-cell px-6 py-4 align-middle text-center\">\n      <AdminChannelDataItem\n          :data=\"channel\"\n          :dataType=\"`channelPlaylist`\"\n          :dataTypeDb=\"`channel_playlist`\"\n          @open-modal=\"handleOpenModal('channelPlaylist')\"/>\n    </div>\n\n    <!-- MistStream -->\n    <div class=\"table-cell px-6 py-4 align-middle text-center\">\n      <AdminChannelDataItem\n          :data=\"channel\"\n          :dataType=\"`mistStream`\"\n          :dataTypeDb=\"`mist_stream`\"\n          @open-modal=\"handleOpenModal('mistStream')\"/>\n    </div>\n\n    <!-- Active Toggle -->\n    <div class=\"table-cell px-6 py-4 align-middle\">\n      <div class=\"flex justify-center items-center w-full\">\n        <label class=\"cursor-pointer label\">\n          <input v-model=\"channel.active\"\n                 type=\"checkbox\"\n                 @click.prevent=\"toggleChannelActiveStatus\"\n                 class=\"toggle toggle-success\"/>\n        </label>\n      </div>\n    </div>\n\n    <dialog :id=\"'adminEditChannel_'+channel.id\" class=\"modal\">\n      <div class=\"modal-box\">\n        <form method=\"dialog\">\n          <button class=\"btn btn-sm btn-circle btn-ghost absolute right-2 top-2\">✕</button>\n        </form>\n        <h3 class=\"font-bold text-lg mb-2\">Edit Channel Name</h3>\n        <input v-model=\"channelName\" type=\"text\" class=\"input input-bordered w-full max-w-xs\" />\n        <button @click.prevent=\"submit\" class=\"btn btn-primary ml-2\">Submit</button>\n      </div>\n    </dialog>\n\n  </div>\n</template>\n\n<script setup>\nimport { useAdminStore } from '@/Stores/AdminStore'\nimport { useNotificationStore } from '@/Stores/NotificationStore'\nimport AdminChannelDataItem from '@/Components/Pages/Admin/Channels/AdminChannelDataItem'\nimport AdminChannelCurrentVideo from '@/Components/Pages/Admin/Channels/AdminChannelCurrentVideo.vue'\nimport { computed, ref } from 'vue'\n\nconst adminStore = useAdminStore()\nconst notificationStore = useNotificationStore()\n\nconst props = defineProps({\n  channel: Object,\n})\n\nconst emit = defineEmits(['open-modal'])\n\nconst channelName = ref(props.channel.name)\n\nconst openEditChannelModal = () => {\n  document.getElementById('adminEditChannel_'+props.channel.id).showModal()\n}\n\n\nconst submit = async () => {\n  await adminStore.updateChannel(props.channel.id, channelName.value)\n  document.getElementById('adminEditChannel_'+props.channel.id).close()\n}\n\n// Handle the open-modal event from grandchildren and re-emit to parent\nconst handleOpenModal = (type) => {\n  // You can add more logic here if needed before emitting\n  emit('open-modal', {channel: props.channel, type})\n    adminStore.setActiveItem(type);\n}\n\nconst toggleChannelActiveStatus = async (event) => {\n  try {\n    await adminStore.toggleChannelActiveStatus(props.channel.id);\n    await adminStore.fetchChannels();\n  } catch (error) {\n    console.error('Error toggling channel active status:', error);\n    // Assuming notificationStore is properly imported and instantiated\n    notificationStore.setToastNotification('Error toggling channel active status: ' + error, 'error');\n  } finally {\n    // Blurring the target element directly\n    if (event && event.target) {\n      event.target.blur();\n    }\n  }\n}\n\n</script>\n","import script from \"./AdminChannelPaginator.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AdminChannelPaginator.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"flex flex-row justify-center my-6 w-full\">\n    <!--                  <div class=\"join grid grid-cols-2\">-->\n    <!--                    <button class=\"join-item btn btn-sm btn-outline\" @click=\"adminStore.prevChannelsPage\">Previous page</button>-->\n    <!--                    <button class=\"join-item btn btn-sm btn-outline\" @click=\"adminStore.nextChannelsPage\">Next</button>-->\n    <!--                  </div>-->\n    <div class=\"join\">\n      <input\n          v-for=\"page in adminStore.totalChannelsPages\"\n          :key=\"page\"\n          type=\"radio\"\n          name=\"options\"\n          :value=\"page\"\n          v-model=\"adminStore.currentChannelsPage\"\n          @change=\"() => adminStore.setChannelsPage(page)\"\n          class=\"join-item btn btn-square !bg-none\"\n          :aria-label=\"`${page}`\"\n      />\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { useAdminStore } from '@/Stores/AdminStore'\nconst adminStore = useAdminStore()\n</script>\n","import script from \"./AdminChannelRowHeader.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AdminChannelRowHeader.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n\n    <div class=\"table-row\">\n      <div scope=\"col\" class=\"table-cell px-6 py-3 uppercase\">\n        <font-awesome-icon icon=\"fa-repeat\" class=\"mr-2 cursor-pointer hover:text-blue-500\"\n                           @click.prevent=\"emit('reloadChannelsList')\"/>\n        <span class=\"uppercase\">Channel </span>\n      </div>\n      <div scope=\"col\" class=\"hidden md:table-cell px-6 py-3 uppercase text-center\">\n        <span class=\"uppercase\">Current Video</span>\n      </div>\n      <div scope=\"col\" class=\"table-cell px-6 py-3 uppercase text-center\">\n        <span class=\"uppercase\">External Source</span>\n      </div>\n      <div scope=\"col\" class=\"px-6 py-3 max-w-64 text-center\">\n        <span class=\"uppercase\">Channel Playlist</span>\n      </div>\n      <div scope=\"col\" class=\"table-cell px-6 py-3 text-center\">\n        <span class=\"uppercase\">Mist Stream</span>\n      </div>\n      <div scope=\"col\" class=\"table-cell px-6 py-3 w-52 text-center\">\n        <span class=\"uppercase\">Active</span>\n      </div>\n\n    </div>\n\n</template>\n<script setup>\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome'\nconst emit = defineEmits(['reloadChannelsList'])\n</script>","import script from \"./Index.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Index.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <Head title=\"Admin/Channels\"/>\n\n  <div class=\"place-self-center flex flex-col\">\n    <div id=\"topDiv\" class=\"bg-white text-black dark:bg-gray-800 dark:text-gray-50 p-5 mb-10\">\n\n      <Message v-if=\"appSettingStore.showFlashMessage\" :flash=\"$page.props.flash\"/>\n\n      <AdminHeader\n          :displayBadges=\"true\"\n          :badgePrimaryNumber=\"adminStore.activeChannelsCount\"\n          :badgeSecondaryNumber=\"adminStore.channels.length\">Channels\n      </AdminHeader>\n      <AdminChannelHeaderButtons/>\n\n      <div class=\"bg-orange-300 px-2 text-black mb-3\">\n        <p><span class=\"font-semibold\">TRAVIS NOTE: </span>Use FFMPEG to push an .mp4 to a mist stream. This will allow\n          us to schedule video objects from anywhere\n          into our channels, and we can have a channel that loads the current video at the right time spot in the video\n          based on our schedule saved in the database.</p>\n      </div>\n\n      <div class=\"flex flex-col\">\n        <div class=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\n          <div class=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\n            <div class=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\n\n              <div class=\"relative overflow-x-auto shadow-md sm:rounded-lg\">\n                <div class=\"table w-full text-sm text-left text-gray-500 dark:text-gray-400\">\n                  <div class=\"table-header-group text-xs text-gray-700 bg-gray-50 dark:bg-gray-700 dark:text-gray-400\">\n                    <AdminChannelRowHeader @reloadChannelsList=\"reloadChannelsList\"/>\n                  </div>\n                  <div class=\"table-row-group\">\n                    <AdminChannelRow\n                        v-for=\"channel in adminStore.paginatedChannels\"\n                        :key=\"channel.id\"\n                        :channel=\"channel\"\n                        @open-modal=\"openModal\"/>\n                  </div>\n                </div>\n\n                <!-- Paginator -->\n                <AdminChannelPaginator/>\n\n              </div>\n              <DynamicModal/>\n\n\n            </div>\n          </div>\n        </div>\n      </div>\n\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { usePageSetup } from '@/Utilities/PageSetup'\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\nimport { useNotificationStore } from '@/Stores/NotificationStore'\nimport { useAdminStore } from '@/Stores/AdminStore'\nimport AdminHeader from '@/Components/Pages/Admin/AdminHeader'\nimport Message from '@/Components/Global/Modals/Messages'\nimport DynamicModal from '@/Components/Pages/Admin/Channels/DynamicModal'\nimport AdminChannelHeaderButtons from '@/Components/Pages/Admin/Channels/AdminChannelHeaderButtons'\nimport AdminChannelRow from '@/Components/Pages/Admin/Channels/AdminChannelRow.vue'\nimport AdminChannelPaginator from '@/Components/Pages/Admin/Channels/AdminChannelPaginator.vue'\nimport AdminChannelRowHeader from '@/Components/Pages/Admin/Channels/AdminChannelRowHeader.vue'\n\nusePageSetup('admin.channels')\n\nconst appSettingStore = useAppSettingStore()\nconst notificationStore = useNotificationStore()\nconst adminStore = useAdminStore()\n\nadminStore.fetchChannels()\n\nfunction hasChannelSource(channel) {\n  if (channel && channel.source && channel.source.name) {\n    return channel.source.name\n  }\n  return null // Or return any other default value if needed\n}\n\n// let search = ref(props.filters.search);\n\n// watch(search, throttle(function (value) {\n//   router.get('/admin/channels', {search: value}, {\n//     preserveState: true,\n//     replace: true\n//   });\n// }, 300));\n\nconst hasPriority = (playbackPriorityType) => {\n  if (playbackPriorityType) {\n    return true\n  }\n}\n\nconst openModal = ({channel, type}) => {\n  // adminStore.reset()\n  // adminStore.fetchChannels()\n  adminStore.setSelectedChannel(channel)\n  adminStore.setCurrentType(type)\n  adminStore.fetchItems(type) // Optionally prefetch items if the modal needs it\n  document.getElementById('dynamicModal').showModal() // Assuming the modal has an ID of 'dynamicModal'\n}\n\nconst setPlaybackPriorityType = async (channel, priorityType) => {\n  const dataToSend = {setPriorityType: priorityType}\n  try {\n    const response = await axios.post(`/admin/channels/${channel.id}/setPlaybackPriorityType`, dataToSend)\n    // do something here\n  } catch (error) {\n    console.log(error)\n  }\n}\n\nconst reloadChannelsList = async () => {\n  try {\n    await adminStore.fetchChannels()\n    // On success, show a success toast\n    notificationStore.setToastNotification('Channels reloaded successfully!', 'success', 3000)\n  } catch (error) {\n    // On failure, show an error toast\n    console.error(error)\n    notificationStore.setToastNotification('Failed to reload channels.', 'error', 3000)\n\n  }\n}\n</script>\n"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","usePlaylistForm","store","useChannelPlaylistStore","notificationStore","useNotificationStore","userStore","useUserStore","isSmallScreen","ref","selectedGapDuration","startDateTime","fetchPlaylistsIfNeeded","_ref","_callee","_context","repeat_mode","playlists","fetchPlaylists","arguments","apply","_next","_throw","fetchSchedules","getListItemClass","conflict","removed","concat","clearStartDateTime","startTime","setStartDateTimeNow","dayjs","format","clearEndDateTime","endTime","setEndDateTimeNow","removeItem","id","addItem","clearRemovedItems","resolveConflicts","openAddContentModal","gapItem","duration_minutes","showModal","start_dateTime","console","log","closeModal","validateTimes","isSameOrAfter","setGeneralServiceNotification","conflictCount","gapCount","scheduleItems","_asyncToGenerator","utc","timezone","isSameOrBefore","initialState","selectedPlaylist","gaps","add","contentItems","contentFetched","currentPage","totalPages","searchQuery","loading","loadingSchedules","processing","error","description","url","priority","next_playlist_id","defineStore","state","actions","assign","this","closeAddContentModal","_this","response","_response$data","message","status","axios","get","data","setToastNotification","t0","createPlaylist","playlist","_this2","_callee2","_context2","validateScheduleItems","post","_objectSpread","getValidScheduleItems","showNotification","handleError","updatePlaylist","_this3","_callee3","adminStore","index","adminIndex","_context3","useAdminStore","put","findIndex","items","item","playlist_items","document","getElementById","close","clearError","some","filter","sort","b","isBefore","end_dateTime","errorMessage","errorDetails","details","JSON","parse","detailedErrorMessages","_i","_Object$entries","entries","_Object$entries$_i","_slicedToArray","field","messages","messageText","Array","isArray","join","setPlaylistData","tz","map","mappedItem","content_id","content_type","order","media_type","source_path","source_type","is_live","is_scheduled","current_viewers_count","max_viewers_count","additional_sources","custom_playback_options","metadata","has_played","content","_this4","_callee4","_this4$scheduleItems","_response$data2","_context4","params","startTimeUTC","endTimeUTC","_toConsumableArray","updateConflicts","find","removeAllItems","recalculateIndexes","currentItem","j","nextItem","isAfter","selectPlaylist","removePlaylist","playlistId","router","route","channelPlaylist","conflictsResolved","_this5","_ret","_loop","_ret2","_loop2","previousItem","currentStart","previousEnd","previousStart","isSame","created_at","insertGaps","start","end","toISOString","diff","checkForGapBeforeFirstItem","checkForGapsBetweenItems","checkForGapAfterLastItem","gapStart","gapEnd","gapDuration","lastItemEnd","fetchContent","contentType","maxDurationMinutes","_arguments","_this6","_callee5","page","search","startDateTimeUTC","_response$data3","_context5","undefined","guess","current_page","total_pages","addContentToSchedule","removeGap","resetContent","setSearchQuery","query","setPage","getters","scheduleItemsWithUserTimezone","hasRemovedItems","usePageSetup","pageName","appSettingStore","useAppSettingStore","videoPlayerStore","useVideoPlayerStore","showFlashMessage","pageIsHidden","isMobile","window","innerWidth","fullPage","ott","showOttButtons","makeVideoTopRight","pageReload","pageWasReloaded","location","reload","on","event","shouldScrollToTop","requestAnimationFrame","topDiv","scrollIntoView","behavior","scrollTo","setPrevUrl","noLayout","watch","newValue","immediate","___CSS_LOADER_EXPORT___","module","channelStore","useChannelStore","props","__props","originalName","key","addMetadataField","form","reactive","useForm","source","mime_type","comment","mistStream","newVal","_ref2","deep","submit","_ref3","clearMistStream","clearErrors","splice","clearFlashMessage","computed","flash","success","warning","displayBadges","playlistStore","availableContentType","handleFetchContent","handleSearch","target","prevPage","nextPage","_usePlaylistForm","formatDate","date","getBadgeClass","toLowerCase","split","spacedType","replace","toUpperCase","emit","__emit","emitOpenAddContentModal","AddOrUpdateMistStreamModal","defineAsyncComponent","EditPlaylist","channelPlaylistStore","filteredItems","activeItem","selectedItem","selectItem","textContent","confirmSelection","updateActiveItemId","confirmRemove","removeMistStream","closeEditPlaylistModal","refreshList","fetchItems","getStatusClass","setPriority","sourceSelector","sourceType","confirmPriorityChange","setPlaybackPriorityType","options","locals","handleOpenAddContentModal","newChannelName","openAddChannelModal","openAddChannelPlaylistModal","clearChannelPlaylistStore","addChannel","script","_createBlock","_component_Popper","hover","openDelay","closeDelay","placement","_withCtx","_renderSlot","_ctx","$slots","_","buttonText","_props$data$props$dat","dataTypeDb","dataType","dataPart","buttonClass","playback_priority_type","channelName","channel","openEditChannelModal","updateChannel","handleOpenModal","setActiveItem","toggleChannelActiveStatus","fetchChannels","blur","_x","openModal","setSelectedChannel","setCurrentType","reloadChannelsList"],"sourceRoot":""}
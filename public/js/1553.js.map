{"version":3,"file":"js/1553.js","mappings":";oJAKO,SAASA,EAAaC,GACzB,IAAMC,GAAYC,EAAAA,EAAAA,gBACZC,GAAkBC,EAAAA,EAAAA,sBAClBC,GAAmBC,EAAAA,EAAAA,uBAoBzB,GAlBAH,EAAgBI,YAAcP,EAC9BG,EAAgBK,kBAAmB,EACnCL,EAAgBM,cAAe,EAE3BR,EAAUS,WACVP,EAAgBQ,IAAM,GAG1BN,EAAiBO,oBAEbT,EAAgBU,aAChBV,EAAgBU,YAAa,EAC7BC,OAAOC,SAASC,QAAO,MAGwB,KAA3BF,OAAOC,SAASE,QAGlB,CAClB,IAAMC,EAASC,SAASC,eAAe,UACnCF,GACAA,EAAOG,gBAEf,CAEAlB,EAAgBmB,aAChBnB,EAAgBoB,UAAW,EAC3BpB,EAAgBqB,gBAAiB,CAGrC,6xQCnCA,6DC0CwBpB,EAAAA,EAAAA,sBAERI,kBAAmB,EAEnC,IAAIiB,EAAQC,EAYNC,IAPcC,EAAAA,EAAAA,WAAS,iBAAO,CAClC,oEAAqEH,EAAMI,MAAMC,QACjF,gEAAiEL,EAAMI,MAAME,QAC7E,wEAAyEN,EAAMI,MAAMG,QACrF,4DAA6DP,EAAMI,MAAMI,MAC1E,IAEsB,iBAAAC,KAAAC,IAAAC,MAAG,SAAAC,IAAA,OAAAF,IAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAClBC,EAAAA,QAAQC,KAAKC,MAAM,gBAAe,OACxCF,EAAAA,QAAQ1B,SAAS,wBAAAuB,EAAAM,OAAA,GAAAR,EAAA,mLAClB,kBAHsB,OAAAH,EAAAY,MAAA,KAAAC,UAAA,gyEC1DvB,0DC4CAhD,EAAAA,EAAAA,GAAa,sBACb,IAAMI,GAAkBC,EAAAA,EAAAA","sources":["webpack:///./resources/js/Utilities/PageSetup.js","webpack:///./resources/js/Components/Global/Modals/Messages.vue?dfe9","webpack:///./resources/js/Components/Global/Modals/Messages.vue","webpack:///./resources/js/Pages/InviteCodes/NoCodes.vue?3628","webpack:///./resources/js/Pages/InviteCodes/NoCodes.vue"],"sourcesContent":["import { onBeforeMount, onMounted } from 'vue'\nimport { useUserStore } from \"@/Stores/UserStore\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useVideoPlayerStore } from \"@/Stores/VideoPlayerStore\"\n\nexport function usePageSetup(pageName) {\n    const userStore = useUserStore()\n    const appSettingStore = useAppSettingStore()\n    const videoPlayerStore = useVideoPlayerStore()\n\n    appSettingStore.currentPage = pageName\n    appSettingStore.showFlashMessage = true\n    appSettingStore.pageIsHidden = false\n\n    if (userStore.isMobile) {\n        appSettingStore.ott = 0\n    }\n\n    videoPlayerStore.makeVideoTopRight()\n\n    if (appSettingStore.pageReload) {\n        appSettingStore.pageReload = false\n        window.location.reload(true);\n    }\n    // Check if the URL contains query strings\n    const hasQueryStrings = window.location.search !== '';\n\n    // Only scroll into view if there are no query strings\n    if (!hasQueryStrings) {\n        const topDiv = document.getElementById(\"topDiv\")\n        if (topDiv) {\n            topDiv.scrollIntoView()\n        }\n    }\n    // Only update if we're not already on this page to avoid overwriting with the current URL\n    appSettingStore.setPrevUrl()\n    appSettingStore.noLayout = false\n    appSettingStore.showOttButtons = true\n    // Inertia.reload()\n\n}\n","import script from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"mx-4 my-4\">\n    <div class=\"alert alert-info mt-4\"\n         v-if=\"props.flash.message\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" class=\"stroke-current shrink-0 w-6 h-6\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n      </svg>\n      <span>{{ props.flash.message }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-success mt-4 mx-3\"\n         v-if=\"props.flash.success\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.success }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-warning mt-4 mx-3\"\n         v-if=\"props.flash.warning\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"/>\n      </svg>\n      <span>{{ props.flash.warning }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-error mt-4 mx-3\"\n         v-if=\"props.flash.error\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.error }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n  </div>\n\n</template>\n\n<script setup>\nimport { Inertia } from \"@inertiajs/inertia\"\nimport { computed } from \"vue\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\n\nconst appSettingStore = useAppSettingStore()\n\nappSettingStore.showFlashMessage = true\n\nlet props = defineProps({\n  flash: Object,\n\n})\n\nconst messageType = computed(() => ({\n  'text-green-700 bg-green-100 dark:bg-green-200 dark:text-green-800': props.flash.success,\n  'text-blue-700 bg-blue-100 dark:bg-blue-200 dark:text-blue-800': props.flash.message,\n  'text-orange-700 bg-orange-100 dark:bg-orange-200 dark:text-orange-800': props.flash.warning,\n  'text-red-700 bg-red-100 dark:bg-red-200 dark:text-red-800': props.flash.error,\n}))\n\nconst clearFlashMessage = async () => {\n  await Inertia.post(route('flash.clear'));\n  Inertia.reload();\n};\n</script>\n","import script from \"./NoCodes.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./NoCodes.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <Head title=\"No Invite Codes\"/>\n\n  <div class=\"place-self-center flex flex-col\">\n    <div id=\"topDiv\" class=\"bg-white text-black dark:bg-gray-800 dark:text-gray-50 p-5 mb-10\">\n\n      <Message v-if=\"appSettingStore.showFlashMessage\" :flash=\"$page.props.flash\"/>\n\n      <div class=\"flex flex-col w-full my-8 p-4 gap-8\">\n        <h1 class=\"text-3xl font-semibold text-center w-full\">Stay Tuned, Invite Codes Incoming!</h1>\n        <p class=\"text-xl text-center\">\n          Our exclusive Invite Codes are gearing up to unlock a new level of creativity, innovation, and community vibes. Soon, you'll be able to invite your friends, family, and favorite creators/artists to join the fun. We're adding the final sparkle to ensure everything is perfect for your inviting spree.\n        </p>\n        <div class=\"flex flex-row justify-center\">\n          <p class=\"text-xl text-center my-4\">\n            In the meantime, there's a whole world of notTV to explore. Dive into an ocean of content that's anything but ordinary.\n          </p>\n\n        </div>\n        <div class=\"flex flex-row justify-center\">\n          <button @click.prevent=\"appSettingStore.btnRedirect('/stream')\" class=\"btn btn-lg bg-orange-500 hover:bg-orange-700 text-white\">\n            Watch notTV Now!\n          </button>\n          <button v-if=\"can.viewDashboard\" @click.prevent=\"appSettingStore.btnRedirect('/stream')\" class=\"btn btn-lg ml-2 bg-gray-900 hover:bg-gray-700 text-white\">\n            My Dashboard\n          </button>\n        </div>\n      </div>\n\n\n<!--      <div class=\"flex flex-col w-full my-8 p-4 gap-8\">-->\n<!--      <h1 class=\"text-3xl font-semibold text-center w-full\">No invite codes!</h1>-->\n<!--        <div class=\"flex flex-row justify-center\">-->\n<!--          <button @click.prevent=\"appSettingStore.btnRedirect('/invite_codes')\"-->\n<!--                  class=\"btn bg-orange-500 hover:bg-orange-700 text-white\">Request some codes!-->\n<!--          </button>-->\n<!--        </div>-->\n<!--      </div>-->\n\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { Inertia } from '@inertiajs/inertia'\nimport { usePageSetup } from '@/Utilities/PageSetup'\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\nimport Message from '@/Components/Global/Modals/Messages'\n\nusePageSetup('inviteCodes.report')\nconst appSettingStore = useAppSettingStore()\n\nconst props = defineProps({\n  can: Object,\n})\n\nconst changePage = (url) => {\n  if (url) {\n    Inertia.visit(url)\n  }\n}\n\n\n</script>"],"names":["usePageSetup","pageName","userStore","useUserStore","appSettingStore","useAppSettingStore","videoPlayerStore","useVideoPlayerStore","currentPage","showFlashMessage","pageIsHidden","isMobile","ott","makeVideoTopRight","pageReload","window","location","reload","search","topDiv","document","getElementById","scrollIntoView","setPrevUrl","noLayout","showOttButtons","props","__props","clearFlashMessage","computed","flash","success","message","warning","error","_ref","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","Inertia","post","route","stop","apply","arguments"],"sourceRoot":""}
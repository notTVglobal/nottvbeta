{"version":3,"file":"js/9774.js","mappings":"sIAGIA,E,MAA0B,GAA4B,KAE1DA,EAAwBC,KAAK,CAACC,EAAOC,GAAI,4YAA6Y,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,2DAA2D,MAAQ,GAAG,SAAW,sLAAsL,eAAiB,CAAC,k0XAAu+X,WAAa,MAE9tZ,S,kDCLaC,MAAM,6B,GACFA,MAAM,Q,GACHA,MAAM,0B,GAGLA,MAAM,4C,GAEHC,EAAAA,EAAAA,oBAGS,UAFLD,MAAM,iEACT,mBACD,GCXxB,MAAME,EAAS,CAAC,EAKhB,GAFiC,E,QAAA,GAAgBA,EAAQ,CAAC,CAAC,S,4EDHvDC,EAAAA,EAAAA,oBAgBS,gBAfLF,EAAAA,EAAAA,oBAcM,MAdNG,EAcM,EAbFH,EAAAA,EAAAA,oBAEM,MAFNI,EAEM,EADFJ,EAAAA,EAAAA,oBAAgD,KAAhDK,EAAgD,EAAbC,EAAAA,EAAAA,YAAQC,EAAAC,OAAA,gBAE/CR,EAAAA,EAAAA,oBASM,aARFA,EAAAA,EAAAA,oBAOM,MAPNS,EAOM,EANFC,EAAAA,EAAAA,aAKOC,EAAA,CALAC,KAAI,mBAAmB,CARlD,SAAAC,EAAAA,EAAAA,UASwB,iBAGS,CAHTC,E,IATxBC,EAAA,W,iLEKA,E,iiJCkKA,IAAIC,GAAmBC,EAAAA,EAAAA,KACnBC,GAAYC,EAAAA,EAAAA,KAEZC,EAAQC,EAuBZ,SAASC,EAAiBC,GACtB,OAAIA,GAAWA,EAAQC,QAAUD,EAAQC,OAAOC,KACrCF,EAAQC,OAAOC,KAEnB,IACX,CAvBAP,EAAUQ,YAAc,gBACxBR,EAAUS,kBAAmB,GAE7BC,EAAAA,EAAAA,YAAU,WACNZ,EAAiBa,oBACbX,EAAUY,WACVd,EAAiBe,SAAW,WAC5Bf,EAAiBgB,IAAM,GAE3BC,SAASC,eAAe,UAAUC,gBACtC,IAeA,IAAIC,GAASC,EAAAA,EAAAA,KAAIjB,EAAMkB,QAAQF,Q,OAE/BG,EAAAA,EAAAA,OAAMH,EAAQI,KAAS,SAAUC,GAC7BC,EAAAA,QAAQC,IAAI,kBAAmB,CAAEP,OAAQK,GAAS,CAC9CG,eAAe,EACfC,SAAS,GAEjB,GAAG,M,qzJC5MCC,GAAU,CAEdA,OAAiB,OACjBA,WAAoB,GAEP,KAAI,KAASA,IAIX,KAAQC,OCNvB,MAEA,IAFiC,E,QAAA,GAAgB,EAAQ,CAAC,CAAC,YAAY,oB","sources":["webpack:///./resources/js/Pages/Admin/Channels/Index.vue?7513","webpack:///./resources/js/Components/Admin/AdminHeader.vue","webpack:///./resources/js/Components/Admin/AdminHeader.vue?7b8b","webpack:///./resources/js/Components/Pagination.vue","webpack:///./resources/js/Pages/Admin/Channels/Index.vue","webpack:///./resources/js/Pages/Admin/Channels/Index.vue?5882","webpack:///./resources/js/Pages/Admin/Channels/Index.vue?b9eb"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"#tooltip[data-v-1a3373e0]{background:#333;border-radius:4px;color:#fff;font-size:13px;font-weight:700;padding:4px 8px}[data-v-1a3373e0] .popper{background:#333;border-radius:20px;color:#fff;font-weight:700;padding:2px;text-transform:uppercase}[data-v-1a3373e0] .popper #arrow:before{background:#333}[data-v-1a3373e0] .popper:hover,[data-v-1a3373e0] .popper:hover>#arrow:before{background:#333}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/Pages/Admin/Channels/Index.vue\"],\"names\":[],\"mappings\":\"AAoNA,0BACI,eAAgB,CAKhB,iBAAkB,CAJlB,UAAY,CAGZ,cAAe,CAFf,eAAiB,CACjB,eAGJ,CAEA,0BACI,eAAmB,CAEnB,kBAAmB,CACnB,UAAW,CACX,eAAiB,CAHjB,WAAY,CAIZ,wBACJ,CAEA,wCACI,eACJ,CAEA,8EAEI,eACJ\",\"sourcesContent\":[\"<template>\\n    <Head title=\\\"Channels Admin\\\" />\\n\\n    <div class=\\\"place-self-center flex flex-col\\\">\\n        <div id=\\\"topDiv\\\" class=\\\"bg-white text-black dark:bg-gray-800 dark:text-gray-50 p-5 mb-10\\\">\\n\\n            <Message v-if=\\\"userStore.showFlashMessage\\\" :flash=\\\"$page.props.flash\\\"/>\\n\\n            <AdminHeader>Channels</AdminHeader>\\n\\n            <div class=\\\"flex flex-row justify-between gap-x-4 mb-3\\\">\\n                <div>\\n                    <Link :href=\\\"`#`\\\"><button\\n                        class=\\\"bg-green-500 hover:bg-green-600 text-white px-4 py-2 mr-2 rounded disabled:bg-gray-400\\\"\\n                        disabled\\n                    >Add Channel</button>\\n                    </Link>\\n                    <Link :href=\\\"`#`\\\"><button\\n                        class=\\\"bg-green-500 hover:bg-green-600 text-white px-4 py-2 mr-2 rounded disabled:bg-gray-400\\\"\\n                        disabled\\n                    >Add External Source</button>\\n                    </Link>\\n                    <Link :href=\\\"`#`\\\"><button\\n                        class=\\\"bg-green-500 hover:bg-green-600 text-white px-4 py-2 mr-2 rounded disabled:bg-gray-400\\\"\\n                        disabled\\n                    >Add Mist Stream</button>\\n                    </Link>\\n                </div>\\n                <input v-model=\\\"search\\\" type=\\\"search\\\" placeholder=\\\"Search...\\\" class=\\\"border px-2 rounded-lg\\\" />\\n            </div>\\n\\n            <div class=\\\"bg-orange-300 px-2 text-black mb-3\\\">\\n                <p>Add a channel: create playlist and add shows.</p>\\n                <p><span class=\\\"font-semibold\\\">TRAVIS NOTE: </span>Use FFMPEG to push an .mp4 to a mist stream. This will allow us to schedule video objects from anywhere\\n                into our channels, and we can have a channel that loads the current video at the right time spot in the video based on our schedule saved in the database.</p>\\n            </div>\\n\\n            <div class=\\\"flex flex-col\\\">\\n                <div class=\\\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\\\">\\n                    <div class=\\\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\\\">\\n                        <div class=\\\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\\\">\\n\\n                            <div class=\\\"relative overflow-x-auto shadow-md sm:rounded-lg\\\">\\n                                <div\\n                                    class=\\\"table w-full text-sm text-left text-gray-500 dark:text-gray-400\\\"\\n                                >\\n                                    <div\\n                                        class=\\\"table-header-group text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400\\\"\\n                                    >\\n                                        <div class=\\\"table-row\\\">\\n                                            <div scope=\\\"col\\\" class=\\\"table-cell px-6 py-3\\\">\\n                                                <font-awesome-icon icon=\\\"fa-repeat\\\" class=\\\"mr-2 cursor-pointer hover:text-blue-500\\\" @click.prevent=\\\"reload()\\\"/>\\n                                                Channel Name\\n                                            </div>\\n                                            <div scope=\\\"col\\\" class=\\\"hidden md:table-cell px-6 py-3\\\">\\n                                                Current Video\\n                                            </div>\\n                                            <div scope=\\\"col\\\" class=\\\"table-cell px-6 py-3\\\">\\n                                                External Source <br />\\n                                                <span class=\\\"italic text-xs text-gray-400\\\">Playlist or Live Stream</span>\\n                                            </div>\\n                                            <div scope=\\\"col\\\" class=\\\"px-6 py-3\\\">\\n                                                Mist Stream\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"table-row-group\\\">\\n                                        <div\\n                                            v-for=\\\"channel in channels.data\\\"\\n                                            :key=\\\"channel.id\\\"\\n                                            class=\\\"table-row bg-white border-b dark:bg-gray-800 dark:border-gray-700\\\"\\n                                        >\\n                                            <div\\n                                                scope=\\\"row\\\"\\n                                                class=\\\"table-cell min-w-[8rem] px-6 py-4 font-medium text-gray-900 dark:text-white whitespace-nowrap\\\"\\n                                            >\\n                                                <span>{{ channel.name }}</span>\\n                                                <div v-if=\\\"channel.isLive\\\" class=\\\"ml-2 text-xs badge badge-secondary badge-outline\\\">live</div>\\n\\n                                            </div>\\n                                            <div\\n                                                scope=\\\"row\\\"\\n                                                class=\\\"md:table-cell px-6 py-4 font-medium text-gray-900 dark:text-white whitespace-nowrap\\\"\\n                                            >\\n                                                <div v-if=\\\"channel.currentVideo\\\">\\n                                                    <Popper\\n                                                        hover openDelay=\\\"50\\\" closeDelay=\\\"50\\\" offset-skid=\\\"0\\\" offset-distance=\\\"0\\\" placement=\\\"bottom\\\"\\n\\n                                                    ><template #content>\\n                                                        <div class=\\\"text-xs\\\" id=\\\"tooltip\\\">\\n                                                            <div>ID: {{ channel.currentVideo.id }}</div>\\n                                                            <div>File Name: {{ channel.currentVideo.file_name }}</div>\\n                                                            <div>Type: {{ channel.currentVideo.type }}</div>\\n                                                            <div>Folder: {{ channel.currentVideo.folder }}</div>\\n                                                            <div>Storage Location: {{ channel.currentVideo.storage_location }}</div>\\n                                                            <div>Processing: <span v-if=\\\"channel.currentVideo.is_processing\\\">true</span><span v-else>false</span></div>\\n                                                            <div>Length: {{ channel.currentVideo.length }}</div>\\n                                                        </div>\\n                                                    </template>\\n\\n                                                        <span v-if=\\\"channel.currentVideo.name\\\" class=\\\"cursor-help text-green-500 font-semibold\\\">{{ channel.currentVideo.name }}</span>\\n                                                        <span v-else class=\\\"cursor-help text-blue-500 font-semibold\\\">Video has no name</span>\\n\\n                                                    </Popper>\\n\\n                                                </div>\\n                                                <div v-else class=\\\"italic text-gray-300 text-xs\\\">No video object playing</div>\\n                                            </div>\\n                                            <div class=\\\"table-cell px-6 py-4\\\">\\n                                                <div v-if=\\\"channel.source\\\">\\n                                                    <Popper\\n                                                        hover openDelay=\\\"50\\\" closeDelay=\\\"50\\\" offset-skid=\\\"0\\\" offset-distance=\\\"0\\\" placement=\\\"bottom\\\"\\n\\n                                                    ><template #content>\\n                                                        <div class=\\\"text-xs\\\" id=\\\"tooltip\\\">\\n                                                            <div>ID: {{ channel.source.id }}</div>\\n                                                            <div>Name: {{ channel.source.name }}</div>\\n                                                            <div>Path: {{ channel.source.path }}</div>\\n                                                            <div>Type: {{ channel.source.type }}</div>\\n                                                            <div>Provider: {{ channel.source.provider }}</div>\\n                                                        </div>\\n                                                    </template>\\n\\n                                                        <span class=\\\"cursor-help text-orange-500 font-semibold\\\">{{ hasChannelSource(channel) }}</span>\\n\\n                                                    </Popper>\\n\\n                                                </div>\\n                                                <div v-else>\\n                                                    <span class=\\\"italic text-gray-300 text-sm\\\">no source</span>\\n                                                </div>\\n\\n                                            </div>\\n                                            <div class=\\\"table-cell px-6 py-4\\\">\\n                                                <span v-if=\\\"channel.stream\\\" class=\\\"text-green-500 font-semibold\\\">{{ channel.stream }}</span>\\n                                                <span v-else class=\\\"italic text-gray-300 text-sm\\\">no stream</span>\\n                                            </div>\\n\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <!-- Paginator -->\\n                                <Pagination :data=\\\"channels\\\" class=\\\"pb-6\\\"/>\\n                            </div>\\n\\n\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n</template>\\n\\n\\n<script setup>\\nimport {onBeforeMount, onMounted, ref, watch} from \\\"vue\\\"\\nimport { useVideoPlayerStore } from \\\"@/Stores/VideoPlayerStore.js\\\"\\nimport { useUserStore } from \\\"@/Stores/UserStore\\\";\\nimport Message from \\\"@/Components/Modals/Messages\\\";\\nimport Pagination from \\\"@/Components/Pagination.vue\\\";\\nimport {FontAwesomeIcon} from \\\"@fortawesome/vue-fontawesome\\\";\\nimport AdminHeader from \\\"@/Components/Admin/AdminHeader.vue\\\";\\nimport throttle from \\\"lodash/throttle\\\";\\nimport {Inertia} from \\\"@inertiajs/inertia\\\";\\n\\nlet videoPlayerStore = useVideoPlayerStore()\\nlet userStore = useUserStore()\\n\\nlet props = defineProps({\\n    channels: Object,\\n    filters: Object,\\n})\\n\\nuserStore.currentPage = 'adminChannels'\\nuserStore.showFlashMessage = true;\\n\\nonMounted(() => {\\n    videoPlayerStore.makeVideoTopRight();\\n    if (userStore.isMobile) {\\n        videoPlayerStore.ottClass = 'ottClose'\\n        videoPlayerStore.ott = 0\\n    }\\n    document.getElementById(\\\"topDiv\\\").scrollIntoView()\\n});\\n\\n// function hasChannelSource (channel) {\\n//     if (channel.source !== null) {\\n//         return channel.source.name\\n//     }\\n// }\\n\\nfunction hasChannelSource(channel) {\\n    if (channel && channel.source && channel.source.name) {\\n        return channel.source.name;\\n    }\\n    return null; // Or return any other default value if needed\\n}\\n\\nlet search = ref(props.filters.search);\\n\\nwatch(search, throttle(function (value) {\\n    Inertia.get('/admin/channels', { search: value }, {\\n        preserveState: true,\\n        replace: true\\n    });\\n}, 300));\\n\\n</script>\\n\\n<style scoped>\\n#tooltip {\\n    background: #333;\\n    color: white;\\n    font-weight: bold;\\n    padding: 4px 8px;\\n    font-size: 13px;\\n    border-radius: 4px;\\n}\\n\\n:deep(.popper) {\\n    background: #333333;\\n    padding: 2px;\\n    border-radius: 20px;\\n    color: #fff;\\n    font-weight: bold;\\n    text-transform: uppercase;\\n}\\n\\n:deep(.popper #arrow::before) {\\n    background: #333333;\\n}\\n\\n:deep(.popper:hover),\\n:deep(.popper:hover > #arrow::before) {\\n    background: #333333;\\n}\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","<template>\n    <header>\n        <div class=\"flex justify-between my-3\">\n            <div class=\"mb-4\">\n                <h1 class=\"text-3xl font-semibold\"><slot /></h1>\n            </div>\n            <div>\n                <div class=\"flex flex-wrap-reverse justify-end gap-2\">\n                    <Link :href=\"`/admin/settings`\">\n                        <button\n                            class=\"px-4 py-2 text-white bg-blue-600 hover:bg-blue-500 rounded-lg\"\n                        >Admin Settings\n                        </button>\n                    </Link>\n                </div>\n            </div>\n        </div>\n    </header>\n\n</template>\n\n<script setup>\n\n</script>\n","import { render } from \"./AdminHeader.vue?vue&type=template&id=0e7c3d0b\"\nconst script = {}\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import script from \"./Pagination.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Pagination.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <Head title=\"Channels Admin\" />\n\n    <div class=\"place-self-center flex flex-col\">\n        <div id=\"topDiv\" class=\"bg-white text-black dark:bg-gray-800 dark:text-gray-50 p-5 mb-10\">\n\n            <Message v-if=\"userStore.showFlashMessage\" :flash=\"$page.props.flash\"/>\n\n            <AdminHeader>Channels</AdminHeader>\n\n            <div class=\"flex flex-row justify-between gap-x-4 mb-3\">\n                <div>\n                    <Link :href=\"`#`\"><button\n                        class=\"bg-green-500 hover:bg-green-600 text-white px-4 py-2 mr-2 rounded disabled:bg-gray-400\"\n                        disabled\n                    >Add Channel</button>\n                    </Link>\n                    <Link :href=\"`#`\"><button\n                        class=\"bg-green-500 hover:bg-green-600 text-white px-4 py-2 mr-2 rounded disabled:bg-gray-400\"\n                        disabled\n                    >Add External Source</button>\n                    </Link>\n                    <Link :href=\"`#`\"><button\n                        class=\"bg-green-500 hover:bg-green-600 text-white px-4 py-2 mr-2 rounded disabled:bg-gray-400\"\n                        disabled\n                    >Add Mist Stream</button>\n                    </Link>\n                </div>\n                <input v-model=\"search\" type=\"search\" placeholder=\"Search...\" class=\"border px-2 rounded-lg\" />\n            </div>\n\n            <div class=\"bg-orange-300 px-2 text-black mb-3\">\n                <p>Add a channel: create playlist and add shows.</p>\n                <p><span class=\"font-semibold\">TRAVIS NOTE: </span>Use FFMPEG to push an .mp4 to a mist stream. This will allow us to schedule video objects from anywhere\n                into our channels, and we can have a channel that loads the current video at the right time spot in the video based on our schedule saved in the database.</p>\n            </div>\n\n            <div class=\"flex flex-col\">\n                <div class=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\n                    <div class=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\n                        <div class=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\n\n                            <div class=\"relative overflow-x-auto shadow-md sm:rounded-lg\">\n                                <div\n                                    class=\"table w-full text-sm text-left text-gray-500 dark:text-gray-400\"\n                                >\n                                    <div\n                                        class=\"table-header-group text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400\"\n                                    >\n                                        <div class=\"table-row\">\n                                            <div scope=\"col\" class=\"table-cell px-6 py-3\">\n                                                <font-awesome-icon icon=\"fa-repeat\" class=\"mr-2 cursor-pointer hover:text-blue-500\" @click.prevent=\"reload()\"/>\n                                                Channel Name\n                                            </div>\n                                            <div scope=\"col\" class=\"hidden md:table-cell px-6 py-3\">\n                                                Current Video\n                                            </div>\n                                            <div scope=\"col\" class=\"table-cell px-6 py-3\">\n                                                External Source <br />\n                                                <span class=\"italic text-xs text-gray-400\">Playlist or Live Stream</span>\n                                            </div>\n                                            <div scope=\"col\" class=\"px-6 py-3\">\n                                                Mist Stream\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"table-row-group\">\n                                        <div\n                                            v-for=\"channel in channels.data\"\n                                            :key=\"channel.id\"\n                                            class=\"table-row bg-white border-b dark:bg-gray-800 dark:border-gray-700\"\n                                        >\n                                            <div\n                                                scope=\"row\"\n                                                class=\"table-cell min-w-[8rem] px-6 py-4 font-medium text-gray-900 dark:text-white whitespace-nowrap\"\n                                            >\n                                                <span>{{ channel.name }}</span>\n                                                <div v-if=\"channel.isLive\" class=\"ml-2 text-xs badge badge-secondary badge-outline\">live</div>\n\n                                            </div>\n                                            <div\n                                                scope=\"row\"\n                                                class=\"md:table-cell px-6 py-4 font-medium text-gray-900 dark:text-white whitespace-nowrap\"\n                                            >\n                                                <div v-if=\"channel.currentVideo\">\n                                                    <Popper\n                                                        hover openDelay=\"50\" closeDelay=\"50\" offset-skid=\"0\" offset-distance=\"0\" placement=\"bottom\"\n\n                                                    ><template #content>\n                                                        <div class=\"text-xs\" id=\"tooltip\">\n                                                            <div>ID: {{ channel.currentVideo.id }}</div>\n                                                            <div>File Name: {{ channel.currentVideo.file_name }}</div>\n                                                            <div>Type: {{ channel.currentVideo.type }}</div>\n                                                            <div>Folder: {{ channel.currentVideo.folder }}</div>\n                                                            <div>Storage Location: {{ channel.currentVideo.storage_location }}</div>\n                                                            <div>Processing: <span v-if=\"channel.currentVideo.is_processing\">true</span><span v-else>false</span></div>\n                                                            <div>Length: {{ channel.currentVideo.length }}</div>\n                                                        </div>\n                                                    </template>\n\n                                                        <span v-if=\"channel.currentVideo.name\" class=\"cursor-help text-green-500 font-semibold\">{{ channel.currentVideo.name }}</span>\n                                                        <span v-else class=\"cursor-help text-blue-500 font-semibold\">Video has no name</span>\n\n                                                    </Popper>\n\n                                                </div>\n                                                <div v-else class=\"italic text-gray-300 text-xs\">No video object playing</div>\n                                            </div>\n                                            <div class=\"table-cell px-6 py-4\">\n                                                <div v-if=\"channel.source\">\n                                                    <Popper\n                                                        hover openDelay=\"50\" closeDelay=\"50\" offset-skid=\"0\" offset-distance=\"0\" placement=\"bottom\"\n\n                                                    ><template #content>\n                                                        <div class=\"text-xs\" id=\"tooltip\">\n                                                            <div>ID: {{ channel.source.id }}</div>\n                                                            <div>Name: {{ channel.source.name }}</div>\n                                                            <div>Path: {{ channel.source.path }}</div>\n                                                            <div>Type: {{ channel.source.type }}</div>\n                                                            <div>Provider: {{ channel.source.provider }}</div>\n                                                        </div>\n                                                    </template>\n\n                                                        <span class=\"cursor-help text-orange-500 font-semibold\">{{ hasChannelSource(channel) }}</span>\n\n                                                    </Popper>\n\n                                                </div>\n                                                <div v-else>\n                                                    <span class=\"italic text-gray-300 text-sm\">no source</span>\n                                                </div>\n\n                                            </div>\n                                            <div class=\"table-cell px-6 py-4\">\n                                                <span v-if=\"channel.stream\" class=\"text-green-500 font-semibold\">{{ channel.stream }}</span>\n                                                <span v-else class=\"italic text-gray-300 text-sm\">no stream</span>\n                                            </div>\n\n                                        </div>\n                                    </div>\n                                </div>\n                                <!-- Paginator -->\n                                <Pagination :data=\"channels\" class=\"pb-6\"/>\n                            </div>\n\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</template>\n\n\n<script setup>\nimport {onBeforeMount, onMounted, ref, watch} from \"vue\"\nimport { useVideoPlayerStore } from \"@/Stores/VideoPlayerStore.js\"\nimport { useUserStore } from \"@/Stores/UserStore\";\nimport Message from \"@/Components/Modals/Messages\";\nimport Pagination from \"@/Components/Pagination.vue\";\nimport {FontAwesomeIcon} from \"@fortawesome/vue-fontawesome\";\nimport AdminHeader from \"@/Components/Admin/AdminHeader.vue\";\nimport throttle from \"lodash/throttle\";\nimport {Inertia} from \"@inertiajs/inertia\";\n\nlet videoPlayerStore = useVideoPlayerStore()\nlet userStore = useUserStore()\n\nlet props = defineProps({\n    channels: Object,\n    filters: Object,\n})\n\nuserStore.currentPage = 'adminChannels'\nuserStore.showFlashMessage = true;\n\nonMounted(() => {\n    videoPlayerStore.makeVideoTopRight();\n    if (userStore.isMobile) {\n        videoPlayerStore.ottClass = 'ottClose'\n        videoPlayerStore.ott = 0\n    }\n    document.getElementById(\"topDiv\").scrollIntoView()\n});\n\n// function hasChannelSource (channel) {\n//     if (channel.source !== null) {\n//         return channel.source.name\n//     }\n// }\n\nfunction hasChannelSource(channel) {\n    if (channel && channel.source && channel.source.name) {\n        return channel.source.name;\n    }\n    return null; // Or return any other default value if needed\n}\n\nlet search = ref(props.filters.search);\n\nwatch(search, throttle(function (value) {\n    Inertia.get('/admin/channels', { search: value }, {\n        preserveState: true,\n        replace: true\n    });\n}, 300));\n\n</script>\n\n<style scoped>\n#tooltip {\n    background: #333;\n    color: white;\n    font-weight: bold;\n    padding: 4px 8px;\n    font-size: 13px;\n    border-radius: 4px;\n}\n\n:deep(.popper) {\n    background: #333333;\n    padding: 2px;\n    border-radius: 20px;\n    color: #fff;\n    font-weight: bold;\n    text-transform: uppercase;\n}\n\n:deep(.popper #arrow::before) {\n    background: #333333;\n}\n\n:deep(.popper:hover),\n:deep(.popper:hover > #arrow::before) {\n    background: #333333;\n}\n</style>\n","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-9.use[1]!../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-9.use[2]!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./Index.vue?vue&type=style&index=0&id=1a3373e0&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./Index.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Index.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Index.vue?vue&type=style&index=0&id=1a3373e0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-1a3373e0\"]])\n\nexport default __exports__"],"names":["___CSS_LOADER_EXPORT___","push","module","id","class","_createElementVNode","script","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_renderSlot","_ctx","$slots","_hoisted_4","_createVNode","_component_Link","href","_withCtx","_hoisted_5","_","videoPlayerStore","useVideoPlayerStore","userStore","useUserStore","props","__props","hasChannelSource","channel","source","name","currentPage","showFlashMessage","onMounted","makeVideoTopRight","isMobile","ottClass","ott","document","getElementById","scrollIntoView","search","ref","filters","watch","throttle","value","Inertia","get","preserveState","replace","options","locals"],"sourceRoot":""}
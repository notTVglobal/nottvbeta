{"version":3,"file":"js/8687.js","mappings":";oJAKO,SAASA,EAAaC,GACzB,IAAMC,GAAYC,EAAAA,EAAAA,gBACZC,GAAkBC,EAAAA,EAAAA,sBAClBC,GAAmBC,EAAAA,EAAAA,uBAoBzB,GAlBAH,EAAgBI,YAAcP,EAC9BG,EAAgBK,kBAAmB,EACnCL,EAAgBM,cAAe,EAE3BR,EAAUS,WACVP,EAAgBQ,IAAM,GAG1BN,EAAiBO,oBAEbT,EAAgBU,aAChBV,EAAgBU,YAAa,EAC7BC,OAAOC,SAASC,QAAO,MAGwB,KAA3BF,OAAOC,SAASE,QAGlB,CAClB,IAAMC,EAASC,SAASC,eAAe,UACnCF,GACAA,EAAOG,gBAEf,CAEAlB,EAAgBmB,aAChBnB,EAAgBoB,UAAW,EAC3BpB,EAAgBqB,gBAAiB,CAGrC,yFCnCA,8DCUA,IAAMrB,GAAkBC,EAAAA,EAAAA,sBAClBH,GAAYC,EAAAA,EAAAA,gBAEduB,EAAQC,EAIZ,SAASC,IACP,GAAIxB,EAAgByB,QACdH,EAAMI,IACRC,EAAAA,QAAQC,MAAMN,EAAMI,KAEpBC,EAAAA,QAAQC,MAAM5B,EAAgByB,cAGhC,GAAIH,EAAMI,IACRC,EAAAA,QAAQC,MAAMN,EAAMI,SACf,CAEL,IAAID,EAAU3B,EAAU+B,UAAY,aAAe,IACnDF,EAAAA,QAAQC,MAAMH,EAChB,CAEJ,4hRCjCA,6DC0CwBxB,EAAAA,EAAAA,sBAERI,kBAAmB,EAEnC,IAAIiB,EAAQC,EAYNO,IAPcC,EAAAA,EAAAA,WAAS,iBAAO,CAClC,oEAAqET,EAAMU,MAAMC,QACjF,gEAAiEX,EAAMU,MAAME,QAC7E,wEAAyEZ,EAAMU,MAAMG,QACrF,4DAA6Db,EAAMU,MAAMI,MAC1E,IAEsB,iBAAAC,KAAAC,IAAAC,MAAG,SAAAC,IAAA,OAAAF,IAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAClBjB,EAAAA,QAAQkB,KAAKC,MAAM,gBAAe,OACxCnB,EAAAA,QAAQd,SAAS,wBAAA6B,EAAAK,OAAA,GAAAP,EAAA,mLAClB,kBAHsB,OAAAH,EAAAW,MAAA,KAAAC,UAAA,48CC1DvB,+CCDA,IAAMC,GAASnB,EAAAA,EAAAA,WAAS,kBAAMoB,EAAAA,EAAAA,MAAU7B,MAAM8B,MAAMF,MAAM,IACpDG,GAAYtB,EAAAA,EAAAA,WAAS,kBAAMuB,OAAOC,KAAKL,EAAOE,OAAOI,OAAS,CAAC,6vCCArE,kFCyFA5D,EAAAA,EAAAA,GAAa,qBAEb,IAAMI,GAAkBC,EAAAA,EAAAA,sBAElBqB,EAAQC,EAMVkC,GAAOC,EAAAA,EAAAA,IAAQ,CACjBC,GAAIrC,EAAMsC,KAAKD,GACfE,KAAMvC,EAAMsC,KAAKC,KACjBnC,IAAKJ,EAAMsC,KAAKlC,MAGdoC,EAAS,WACXL,EAAKM,MAAMjB,MAAM,sBAAuBxB,EAAMsC,KAAKI,MACrD,GAEkBC,EAAAA,EAAAA,MAAI","sources":["webpack:///./resources/js/Utilities/PageSetup.js","webpack:///./resources/js/Components/Global/Buttons/CancelButton.vue?b7c6","webpack:///./resources/js/Components/Global/Buttons/CancelButton.vue","webpack:///./resources/js/Components/Global/Modals/Messages.vue?dfe9","webpack:///./resources/js/Components/Global/Modals/Messages.vue","webpack:///./resources/js/Jetstream/ValidationErrors.vue?5fdc","webpack:///./resources/js/Jetstream/ValidationErrors.vue","webpack:///./resources/js/Pages/NewsRssFeeds/{$id}/Edit.vue?765c","webpack:///./resources/js/Pages/NewsRssFeeds/{$id}/Edit.vue"],"sourcesContent":["import { onBeforeMount, onMounted } from 'vue'\nimport { useUserStore } from \"@/Stores/UserStore\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useVideoPlayerStore } from \"@/Stores/VideoPlayerStore\"\n\nexport function usePageSetup(pageName) {\n    const userStore = useUserStore()\n    const appSettingStore = useAppSettingStore()\n    const videoPlayerStore = useVideoPlayerStore()\n\n    appSettingStore.currentPage = pageName\n    appSettingStore.showFlashMessage = true\n    appSettingStore.pageIsHidden = false\n\n    if (userStore.isMobile) {\n        appSettingStore.ott = 0\n    }\n\n    videoPlayerStore.makeVideoTopRight()\n\n    if (appSettingStore.pageReload) {\n        appSettingStore.pageReload = false\n        window.location.reload(true);\n    }\n    // Check if the URL contains query strings\n    const hasQueryStrings = window.location.search !== '';\n\n    // Only scroll into view if there are no query strings\n    if (!hasQueryStrings) {\n        const topDiv = document.getElementById(\"topDiv\")\n        if (topDiv) {\n            topDiv.scrollIntoView()\n        }\n    }\n    // Only update if we're not already on this page to avoid overwriting with the current URL\n    appSettingStore.setPrevUrl()\n    appSettingStore.noLayout = false\n    appSettingStore.showOttButtons = true\n    // Inertia.reload()\n\n}\n","import script from \"./CancelButton.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CancelButton.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n    <button\n        @click.prevent=\"cancel\"\n        class=\"ml-2 px-4 py-2 text-white bg-orange-600 hover:bg-orange-500 rounded-lg\"\n    >Cancel\n    </button>\n  </div>\n</template>\n\n<script setup>\nimport { Inertia } from \"@inertiajs/inertia\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useUserStore } from '@/Stores/UserStore'\n\nconst appSettingStore = useAppSettingStore()\nconst userStore = useUserStore()\n\nlet props = defineProps({\n  url: String\n})\n\nfunction cancel() {\n  if (appSettingStore.prevUrl) {\n    if (props.url) {\n      Inertia.visit(props.url)\n    } else {\n      Inertia.visit(appSettingStore.prevUrl)\n    }\n  } else {\n    if (props.url) {\n      Inertia.visit(props.url)\n    } else {\n      // Fallback if prevUrl is not available\n      let prevUrl = userStore.isCreator ? '/dashboard' : '/';\n      Inertia.visit(prevUrl);\n    }\n  }\n}\n</script>\n","import script from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"mx-4 my-4\">\n    <div class=\"alert alert-info mt-4\"\n         v-if=\"props.flash.message\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" class=\"stroke-current shrink-0 w-6 h-6\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n      </svg>\n      <span>{{ props.flash.message }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-success mt-4 mx-3\"\n         v-if=\"props.flash.success\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.success }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-warning mt-4 mx-3\"\n         v-if=\"props.flash.warning\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"/>\n      </svg>\n      <span>{{ props.flash.warning }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-error mt-4 mx-3\"\n         v-if=\"props.flash.error\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.error }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n  </div>\n\n</template>\n\n<script setup>\nimport { Inertia } from \"@inertiajs/inertia\"\nimport { computed } from \"vue\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\n\nconst appSettingStore = useAppSettingStore()\n\nappSettingStore.showFlashMessage = true\n\nlet props = defineProps({\n  flash: Object,\n\n})\n\nconst messageType = computed(() => ({\n  'text-green-700 bg-green-100 dark:bg-green-200 dark:text-green-800': props.flash.success,\n  'text-blue-700 bg-blue-100 dark:bg-blue-200 dark:text-blue-800': props.flash.message,\n  'text-orange-700 bg-orange-100 dark:bg-orange-200 dark:text-orange-800': props.flash.warning,\n  'text-red-700 bg-red-100 dark:bg-red-200 dark:text-red-800': props.flash.error,\n}))\n\nconst clearFlashMessage = async () => {\n  await Inertia.post(route('flash.clear'));\n  Inertia.reload();\n};\n</script>\n","import script from \"./ValidationErrors.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ValidationErrors.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { computed } from 'vue';\nimport { usePage } from '@inertiajs/inertia-vue3';\n\nconst errors = computed(() => usePage().props.value.errors);\nconst hasErrors = computed(() => Object.keys(errors.value).length > 0);\n</script>\n\n<template>\n    <div v-if=\"hasErrors\">\n        <div class=\"font-medium text-red-600\">\n            Whoops! Something went wrong.\n        </div>\n\n        <ul class=\"mt-3 list-disc list-inside text-sm text-red-600\">\n            <li v-for=\"(error, key) in errors\" :key=\"key\">\n                {{ error }}\n            </li>\n        </ul>\n    </div>\n</template>\n","import script from \"./Edit.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Edit.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n\n  <Head title=\"Add RSS Feed\"/>\n\n  <div class=\"place-self-center flex flex-col gap-y-3 mt-3\">\n    <div id=\"topDiv\" class=\"bg-white text-black dark:bg-gray-800 dark:text-gray-50 p-5 mb-10\">\n\n      <Message v-if=\"appSettingStore.showFlashMessage\" :flash=\"$page.props.flash\"/>\n\n      <header>\n        <div class=\"pt-6\">\n          <div class=\"flex flex-row justify-between\">\n            <h2 class=\"text-xl font-semibold leading-tight\">\n              Edit RSS Feed</h2>\n            <CancelButton/>\n          </div>\n        </div>\n      </header>\n\n\n      <div class=\"p-6 border-b border-gray-200\">\n        <form @submit.prevent=\"submit\">\n          <div class=\"mb-6\">\n            <label\n                for=\"Name\"\n                class=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300\"\n            >Name</label\n            >\n            <input\n                type=\"text\"\n                v-model=\"form.name\"\n                name=\"name\"\n                class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\"\n                placeholder=\"\"\n            />\n            <div\n                v-if=\"form.errors.name\"\n                class=\"text-sm text-red-600\"\n            >\n              {{ form.errors.name }}\n            </div>\n          </div>\n          <div class=\"mb-6\">\n            <label\n                for=\"Url\"\n                class=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300\"\n            >URL</label\n            >\n            <input\n                type=\"text\"\n                v-model=\"form.url\"\n                name=\"url\"\n                class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\"\n                placeholder=\"\"\n            />\n            <div\n                v-if=\"form.errors.url\"\n                class=\"text-sm text-red-600\"\n            >\n              {{ form.errors.url }}\n            </div>\n          </div>\n\n          <div class=\" flex justify-start\">\n            <button\n                type=\"submit\"\n                class=\"h-fit text-white bg-blue-700 hover:bg-blue-300 focus:outline-none font-medium rounded-lg text-sm px-5 py-2.5 \"\n                :disabled=\"form.processing\"\n                :class=\"{ 'opacity-25': form.processing }\"\n            >\n              Submit\n            </button>\n            <JetValidationErrors class=\"ml-4\"/>\n          </div>\n        </form>\n      </div>\n\n\n    </div>\n\n  </div>\n\n</template>\n\n<script setup>\nimport { ref } from \"vue\"\nimport { useForm } from '@inertiajs/inertia-vue3'\nimport { usePageSetup } from '@/Utilities/PageSetup'\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport JetValidationErrors from '@/Jetstream/ValidationErrors'\nimport Button from \"@/Jetstream/Button\"\nimport Message from \"@/Components/Global/Modals/Messages\"\nimport CancelButton from \"@/Components/Global/Buttons/CancelButton\"\n\nusePageSetup('newsRssFeeds.edit')\n\nconst appSettingStore = useAppSettingStore()\n\nconst props = defineProps({\n  feed: Object,\n  can: Object,\n  message: String,\n});\n\nlet form = useForm({\n  id: props.feed.id,\n  name: props.feed.name,\n  url: props.feed.url,\n});\n\nlet submit = () => {\n  form.patch(route(\"newsRssFeeds.update\", props.feed.slug));\n};\n\nlet showMessage = ref(true);\n\n</script>\n"],"names":["usePageSetup","pageName","userStore","useUserStore","appSettingStore","useAppSettingStore","videoPlayerStore","useVideoPlayerStore","currentPage","showFlashMessage","pageIsHidden","isMobile","ott","makeVideoTopRight","pageReload","window","location","reload","search","topDiv","document","getElementById","scrollIntoView","setPrevUrl","noLayout","showOttButtons","props","__props","cancel","prevUrl","url","Inertia","visit","isCreator","clearFlashMessage","computed","flash","success","message","warning","error","_ref","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","post","route","stop","apply","arguments","errors","usePage","value","hasErrors","Object","keys","length","form","useForm","id","feed","name","submit","patch","slug","ref"],"sourceRoot":""}
{"version":3,"file":"js/2098.js","mappings":"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","sources":["webpack:///./resources/js/Stores/TeamStore.js","webpack:///./resources/js/Utilities/PageSetup.js","webpack:///./resources/js/Components/Global/TextEditor/TipTapDescriptionEditor.vue?ee0b","webpack:///./resources/js/Components/Global/Buttons/CancelButton.vue?b7c6","webpack:///./resources/js/Components/Global/Buttons/CancelButton.vue","webpack:///./resources/js/Components/Global/Modals/Messages.vue?dfe9","webpack:///./resources/js/Components/Global/Modals/Messages.vue","webpack:///./resources/js/Components/Global/SocialMedia/SocialMediaLinksStoreUpdateForForm.vue","webpack:///./resources/js/Components/Global/TextEditor/TabbableTextarea.vue?4db8","webpack:///./resources/js/Components/Global/TextEditor/TabbableTextarea.vue","webpack:///./resources/js/Components/Global/TextEditor/TipTapDescriptionEditor.vue","webpack:///./resources/js/Components/Global/TextEditor/TipTapDescriptionEditor.vue?bd8c","webpack:///./resources/js/Components/Global/TextEditor/TipTapDescriptionEditor.vue?852c","webpack:///./resources/js/Components/Global/Uploaders/ImageUpload.vue?55d5","webpack:///./resources/js/Components/Global/Uploaders/ImageUpload.vue","webpack:///./resources/js/Jetstream/ValidationErrors.vue?5fdc","webpack:///./resources/js/Jetstream/ValidationErrors.vue","webpack:///./resources/js/Components/Pages/Teams/Edit/TeamEditHeader.vue?a626","webpack:///./resources/js/Components/Pages/Teams/Edit/TeamEditHeader.vue","webpack:///./resources/js/Pages/Teams/{$id}/Edit.vue?7e3a","webpack:///./resources/js/Pages/Teams/{$id}/Edit.vue"],"sourcesContent":["import {defineStore} from \"pinia\";\nimport {Inertia} from \"@inertiajs/inertia\";\n\nconst initialState = () => ({\n    id: 0,\n    name: '',\n    description: '',\n    slug: '',\n    totalSpots: '',\n    memberSpots: '',\n    teamCreator: [],\n    teamLeader: [],\n    members: [],\n    managers: [],\n    activeShow: [],\n    activeEpisode: [],\n    creators: [],\n    showModal: Boolean,\n    confirmDialog: false,\n    confirmManagerDialog: false,\n    selectedManagerName: '',\n    selectedManagerId: 0,\n    addManager: false,\n    removeManager: false,\n    deleteMemberName: '',\n    deleteMemberId: 0,\n    noteEdit: 0,\n    note: '',\n    saveNoteProcessing: Boolean,\n    // on the show episode manage page\n    // turn on the go live div\n    goLiveDisplay: false,\n    can: [],\n    openComponent: 'teamShows',\n})\n\nexport const useTeamStore = defineStore('teamStore', {\n    state: initialState,\n    actions: {\n        reset() {\n            // Reset the store to its original state (clear all data)\n            Object.assign(this, initialState());\n        },\n        // async fill() {\n        //     let r = await import('@/Json/team.json');\n        //     this.$state = r.default;\n        // },\n        setActiveTeam(team) {\n            this.id = team.id;\n            this.name = team.name;\n            this.description = team.description;\n            this.slug = team.slug;\n            this.totalSpots = team.totalSpots;\n            this.memberSpots = team.memberSpots;\n        },\n        setActiveShow(show) {\n            this.activeShow = show;\n        },\n        setActiveEpisode(episode) {\n            this.activeShow = episode;\n        },\n        // getCreators() {\n        //     Inertia.reload({ only: ['creators'] })\n        // },\n        deleteTeamMemberCancel() {\n            this.confirmDialog = false;\n        },\n        confirmTeamManagerCancel() {\n            this.confirmManagerDialog = false;\n        },\n        // loadTeamMembers(members){\n        //     this.members = members;\n        // }\n        deleteTeamMember() {\n            Inertia.visit(route('teams.removeTeamMember'), {\n                method: 'post',\n                data: {\n                    user_id: this.deleteMemberId,\n                    team_id: this.id,\n                    team_slug: this.slug\n                },\n            })\n        },\n        addTeamManager() {\n            Inertia.visit(route('teams.addTeamManager'), {\n                method: 'post',\n                data: {\n                    user_id: this.selectedManagerId,\n                    team_id: this.id,\n                    team_slug: this.slug\n                },\n            })\n            this.confirmManagerDialog = false;\n        },\n        removeTeamManager() {\n            Inertia.visit(route('teams.removeTeamManager'), {\n                method: 'post',\n                data: {\n                    user_id: this.selectedManagerId,\n                    team_id: this.id,\n                    team_slug: this.slug\n                },\n            })\n            this.confirmManagerDialog = false;\n        },\n        toggleGoLiveDisplay() {\n            this.goLiveDisplay = ! this.goLiveDisplay;\n        },\n        async fetchTeamMembers() {\n            await axios.get('/team/team-members').then().error()\n        },\n        setCreators(creators) {\n            this.creators = creators;\n        },\n    },\n\n    getters: {\n        spotsRemaining() {\n            if (this.totalSpots - this.memberSpots < 1){\n                return 0\n            }\n            return this.totalSpots - this.memberSpots;\n        },\n    }\n});\n\n\n// Another option for declaring specific data to return:\n// let data = r.default;\n//\n// import('@/Json/team.json').then(r => {\n// this.$patch({\n//     name: data.name,\n//     spots: data.spots,\n//     members: data.members\n// });\n// });\n","import { onBeforeMount, onMounted } from 'vue'\nimport { useUserStore } from \"@/Stores/UserStore\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useVideoPlayerStore } from \"@/Stores/VideoPlayerStore\"\nimport { Inertia } from '@inertiajs/inertia'\n\nexport function usePageSetup(pageName) {\n    const userStore = useUserStore()\n    const appSettingStore = useAppSettingStore()\n    const videoPlayerStore = useVideoPlayerStore()\n\n    appSettingStore.currentPage = pageName\n    appSettingStore.showFlashMessage = true\n    appSettingStore.pageIsHidden = false\n\n    if (userStore.isMobile || window.innerWidth < 1024 || appSettingStore.fullPage) {\n        appSettingStore.ott = 0;\n    } else {\n        appSettingStore.ott = 1;\n        appSettingStore.showOttButtons = true;\n    }\n\n    videoPlayerStore.makeVideoTopRight()\n\n    if (appSettingStore.pageReload) {\n        appSettingStore.pageReload = false\n        appSettingStore.pageWasReloaded = true\n        window.location.reload();\n    }\n    // Check if the URL contains query strings\n\n\n    // Only scroll into view if there are no query strings\n\n        // const topDiv = document.getElementById(\"topDiv\")\n        // if (topDiv) {\n        //     topDiv.scrollIntoView()\n        // }\n        Inertia.on('navigate', (event) => {\n            if (userStore.isMobile || window.innerWidth < 1024 || appSettingStore.fullPage) {\n                appSettingStore.ott = 0;\n            } else {\n                appSettingStore.ott = 1;\n            }\n            const hasQueryStrings = window.location.search !== '';\n            if (!hasQueryStrings || appSettingStore.shouldScrollToTop) {\n                requestAnimationFrame(() => {\n                    const topDiv = document.getElementById(\"topDiv\");\n                    if (topDiv) {\n                        topDiv.scrollIntoView({behavior: 'auto'});\n                    } else {\n                        window.scrollTo(0, 0);\n                    }\n                });\n            }\n            appSettingStore.shouldScrollToTop = false;\n        })\n    // Only update if we're not already on this page to avoid overwriting with the current URL\n    appSettingStore.setPrevUrl()\n    appSettingStore.showOttButtons = true\n    appSettingStore.noLayout = false\n\n    // Inertia.reload()\n\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".toolbar[data-v-527ae6c1]{display:flex;gap:8px}.btn[data-v-527ae6c1]{background-color:#4a5568;border:none;border-radius:4px;color:#fff;cursor:pointer;padding:8px 12px}.btn[data-v-527ae6c1]:hover{background-color:#2d3748}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/Components/Global/TextEditor/TipTapDescriptionEditor.vue\"],\"names\":[],\"mappings\":\"AAuIA,0BACE,YAAa,CACb,OACF,CAEA,sBACE,wBAAyB,CAGzB,WAAY,CACZ,iBAAkB,CAHlB,UAAY,CAIZ,cAAe,CAHf,gBAIF,CAEA,4BACE,wBACF\",\"sourcesContent\":[\"<template>\\n  <div>\\n    <div class=\\\"toolbar mb-2\\\">\\n      <button @click.prevent=\\\"toggleBold\\\" class=\\\"btn\\\">Bold</button>\\n      <button @click.prevent=\\\"toggleItalic\\\" class=\\\"btn\\\">Italic</button>\\n      <button @click.prevent=\\\"toggleUnderline\\\" class=\\\"btn\\\">Underline</button>\\n      <button @click.prevent=\\\"toggleSuperscript\\\" class=\\\"btn\\\">Superscript</button>\\n      <button @click.prevent=\\\"toggleSubscript\\\" class=\\\"btn\\\">Subscript</button>\\n    </div>\\n    <div\\n        class=\\\"editor-textarea editor-container bg-gray-50 border border-gray-400 text-gray-900 text-sm w-full rounded-lg focus-within:ring-blue-500 focus-within:border-blue-500\\\"\\n        @click=\\\"focusEditor\\\">\\n      <EditorContent :editor=\\\"editor\\\"/>\\n    </div>\\n  </div>\\n</template>\\n\\n<script setup>\\nimport { useEditor, EditorContent } from '@tiptap/vue-3'\\nimport StarterKit from '@tiptap/starter-kit'\\nimport Document from '@tiptap/extension-document'\\nimport Text from '@tiptap/extension-text'\\nimport TextStyle from '@tiptap/extension-text-style'\\nimport FontFamily from '@tiptap/extension-font-family'\\nimport Color from '@tiptap/extension-color'\\nimport Typography from '@tiptap/extension-typography'\\nimport Underline from '@tiptap/extension-underline'\\nimport Subscript from '@tiptap/extension-subscript'\\nimport Superscript from '@tiptap/extension-superscript'\\nimport Link from '@tiptap/extension-link'\\nimport { onBeforeUnmount, onMounted, onUnmounted, ref } from 'vue'\\n\\nconst emits = defineEmits(['updateContent'])\\n\\nconst props = defineProps({\\n  description: String,\\n})\\n\\nconst initialContent = props.description ? props.description : '<p>Start typing the description...</p>'\\n\\nconst editor = useEditor({\\n  autofocus: true, // Setting autofocus to true\\n  extensions: [\\n    StarterKit,\\n    Document,\\n    Text,\\n    TextStyle,\\n    FontFamily,\\n    Color,\\n    Typography,\\n    Underline,\\n    Subscript,\\n    Superscript,\\n    Link.configure({openOnClick: false}),\\n\\n  ],\\n  content: initialContent,\\n  onUpdate: ({editor}) => {\\n    const htmlOutput = editor.getHTML()\\n    emits('updateContent', htmlOutput)\\n  },\\n})\\n\\n\\nconst hasFocused = ref(false) // State to track if the editor has been focused\\n\\nconst focusEditor = (event) => {\\n  if (!hasFocused.value) {\\n    if (!props.description) {\\n      // Clear the editor the first time it's focused\\n      editor.value.commands.clearContent()\\n    }\\n    hasFocused.value = true\\n  }\\n  editor.value.commands.focus()\\n}\\nconst toggleBold = () => {\\n  editor.value.chain().focus().toggleBold().run()\\n}\\n\\nconst toggleItalic = () => {\\n  editor.value.chain().focus().toggleItalic().run()\\n}\\n\\nconst toggleUnderline = () => {\\n  editor.value.chain().focus().toggleUnderline().run()\\n}\\n\\nconst toggleSuperscript = () => {\\n  editor.value.chain().focus().toggleSuperscript().run()\\n}\\n\\nconst toggleSubscript = () => {\\n  editor.value.chain().focus().toggleSubscript().run()\\n}\\n\\n\\n// const submitDescription = () => {\\n//   if (editor) {\\n//     const htmlOutput = editor.getHTML();\\n//     // Emit or use an API call to send `htmlOutput` to your backend\\n//     console.log(htmlOutput);\\n//     // Example: emit to parent component or handle form submission\\n//     emit('update:description', htmlOutput);\\n//   }\\n// }\\n\\nonMounted(() => {\\n  // Ensure the editor is focused when needed and adjusts height accordingly\\n  editor.value?.commands.focus()\\n  adjustHeight()\\n  const editorElement = document.querySelector('.ProseMirror')  // Adjust the selector as needed\\n\\n})\\n\\nconst adjustHeight = () => {\\n  const content = editor.value.view.dom // Access the editor's content DOM node\\n  if (content) {\\n    content.style.minHeight = 'auto' // Reset minHeight to calculate potentially smaller size\\n    content.style.minHeight = `${Math.max(content.scrollHeight, 150)}px` // Set minHeight based on content or minimum\\n  }\\n}\\n\\n// Add this as a handler for content updates\\neditor.value?.on('update', adjustHeight)\\n\\n// Ensure editor is destroyed properly on component unmount\\nonBeforeUnmount(() => {\\n  if (editor.value) {\\n    editor.value.destroy()\\n  }\\n})\\n\\n</script>\\n<style scoped>\\n.toolbar {\\n  display: flex;\\n  gap: 8px;\\n}\\n\\n.btn {\\n  background-color: #4a5568;\\n  color: white;\\n  padding: 8px 12px;\\n  border: none;\\n  border-radius: 4px;\\n  cursor: pointer;\\n}\\n\\n.btn:hover {\\n  background-color: #2d3748;\\n}\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import script from \"./CancelButton.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CancelButton.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n    <button\n        @click.prevent=\"cancel\"\n        class=\"ml-2 px-4 py-2 text-white bg-orange-600 hover:bg-orange-500 rounded-lg\"\n    >Cancel\n    </button>\n  </div>\n</template>\n\n<script setup>\nimport { Inertia } from \"@inertiajs/inertia\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useUserStore } from '@/Stores/UserStore'\n\nconst appSettingStore = useAppSettingStore()\nconst userStore = useUserStore()\n\nlet props = defineProps({\n  url: String\n})\n\nfunction cancel() {\n  if (appSettingStore.prevUrl) {\n    if (props.url) {\n      Inertia.visit(props.url)\n    } else {\n      Inertia.visit(appSettingStore.prevUrl)\n    }\n  } else {\n    if (props.url) {\n      Inertia.visit(props.url)\n    } else {\n      // Fallback if prevUrl is not available\n      let prevUrl = userStore.isCreator ? '/dashboard' : '/';\n      Inertia.visit(prevUrl);\n    }\n  }\n}\n</script>\n","import script from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"mx-4 my-4\">\n    <div class=\"alert alert-info mt-4\"\n         v-if=\"props.flash.message\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" class=\"stroke-current shrink-0 w-6 h-6\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n      </svg>\n      <span>{{ props.flash.message }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-success mt-4 mx-3\"\n         v-if=\"props.flash.success\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.success }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-warning mt-4 mx-3\"\n         v-if=\"props.flash.warning\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"/>\n      </svg>\n      <span>{{ props.flash.warning }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-error mt-4 mx-3\"\n         v-if=\"props.flash.error\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.error }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n  </div>\n\n</template>\n\n<script setup>\nimport { Inertia } from \"@inertiajs/inertia\"\nimport { computed } from \"vue\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\n\nconst appSettingStore = useAppSettingStore()\n\nappSettingStore.showFlashMessage = true\n\nlet props = defineProps({\n  flash: Object,\n\n})\n\nconst messageType = computed(() => ({\n  'text-green-700 bg-green-100 dark:bg-green-200 dark:text-green-800': props.flash.success,\n  'text-blue-700 bg-blue-100 dark:bg-blue-200 dark:text-blue-800': props.flash.message,\n  'text-orange-700 bg-orange-100 dark:bg-orange-200 dark:text-orange-800': props.flash.warning,\n  'text-red-700 bg-red-100 dark:bg-red-200 dark:text-red-800': props.flash.error,\n}))\n\nconst clearFlashMessage = async () => {\n  await Inertia.post(route('flash.clear'));\n  Inertia.reload();\n};\n</script>\n","import script from \"./SocialMediaLinksStoreUpdateForForm.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./SocialMediaLinksStoreUpdateForForm.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./TabbableTextarea.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TabbableTextarea.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n<!--    <textarea-->\n<!--        @keydown.tab.prevent=\"onTabPress\"-->\n<!--        @keyup=\"emit('update:modelValue', $event.target.value)\"-->\n<!--        v-text=\"modelValue\"-->\n<!--        :placeholder=\"placeholder\" />-->\n  <textarea\n      @keydown.tab.prevent=\"onTabPress\"\n      @input=\"onInput\"\n      :value=\"modelValue\"\n      :placeholder=\"placeholder\"\n      class=\"textarea textarea-bordered text-black bg-white dark:bg-gray-800 dark:text-white\"\n  />\n</template>\n\n<script setup>\ndefineProps({\n  modelValue: String,\n  placeholder: String\n});\n\nconst emit = defineEmits(['update:modelValue']);\n// let emit = defineEmits(['update:modelValue']);\n\nconst onInput = (event) => {\n  emit('update:modelValue', event.target.value);\n};\n\nfunction onTabPress(e) {\n  let textarea = e.target;\n\n  // get caret position/selection\n  let val = textarea.value,\n      start = textarea.selectionStart,\n      end = textarea.selectionEnd;\n\n  // set textarea value to: text before caret + tab + text after caret\n  textarea.value = val.substring(0, start) + \"\\t\" + val.substring(end);\n\n  // put caret at right position again\n  textarea.selectionStart = textarea.selectionEnd = start + 1;\n}\n\n</script>\n","<template>\n  <div>\n    <div class=\"toolbar mb-2\">\n      <button @click.prevent=\"toggleBold\" class=\"btn\">Bold</button>\n      <button @click.prevent=\"toggleItalic\" class=\"btn\">Italic</button>\n      <button @click.prevent=\"toggleUnderline\" class=\"btn\">Underline</button>\n      <button @click.prevent=\"toggleSuperscript\" class=\"btn\">Superscript</button>\n      <button @click.prevent=\"toggleSubscript\" class=\"btn\">Subscript</button>\n    </div>\n    <div\n        class=\"editor-textarea editor-container bg-gray-50 border border-gray-400 text-gray-900 text-sm w-full rounded-lg focus-within:ring-blue-500 focus-within:border-blue-500\"\n        @click=\"focusEditor\">\n      <EditorContent :editor=\"editor\"/>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { useEditor, EditorContent } from '@tiptap/vue-3'\nimport StarterKit from '@tiptap/starter-kit'\nimport Document from '@tiptap/extension-document'\nimport Text from '@tiptap/extension-text'\nimport TextStyle from '@tiptap/extension-text-style'\nimport FontFamily from '@tiptap/extension-font-family'\nimport Color from '@tiptap/extension-color'\nimport Typography from '@tiptap/extension-typography'\nimport Underline from '@tiptap/extension-underline'\nimport Subscript from '@tiptap/extension-subscript'\nimport Superscript from '@tiptap/extension-superscript'\nimport Link from '@tiptap/extension-link'\nimport { onBeforeUnmount, onMounted, onUnmounted, ref } from 'vue'\n\nconst emits = defineEmits(['updateContent'])\n\nconst props = defineProps({\n  description: String,\n})\n\nconst initialContent = props.description ? props.description : '<p>Start typing the description...</p>'\n\nconst editor = useEditor({\n  autofocus: true, // Setting autofocus to true\n  extensions: [\n    StarterKit,\n    Document,\n    Text,\n    TextStyle,\n    FontFamily,\n    Color,\n    Typography,\n    Underline,\n    Subscript,\n    Superscript,\n    Link.configure({openOnClick: false}),\n\n  ],\n  content: initialContent,\n  onUpdate: ({editor}) => {\n    const htmlOutput = editor.getHTML()\n    emits('updateContent', htmlOutput)\n  },\n})\n\n\nconst hasFocused = ref(false) // State to track if the editor has been focused\n\nconst focusEditor = (event) => {\n  if (!hasFocused.value) {\n    if (!props.description) {\n      // Clear the editor the first time it's focused\n      editor.value.commands.clearContent()\n    }\n    hasFocused.value = true\n  }\n  editor.value.commands.focus()\n}\nconst toggleBold = () => {\n  editor.value.chain().focus().toggleBold().run()\n}\n\nconst toggleItalic = () => {\n  editor.value.chain().focus().toggleItalic().run()\n}\n\nconst toggleUnderline = () => {\n  editor.value.chain().focus().toggleUnderline().run()\n}\n\nconst toggleSuperscript = () => {\n  editor.value.chain().focus().toggleSuperscript().run()\n}\n\nconst toggleSubscript = () => {\n  editor.value.chain().focus().toggleSubscript().run()\n}\n\n\n// const submitDescription = () => {\n//   if (editor) {\n//     const htmlOutput = editor.getHTML();\n//     // Emit or use an API call to send `htmlOutput` to your backend\n//     console.log(htmlOutput);\n//     // Example: emit to parent component or handle form submission\n//     emit('update:description', htmlOutput);\n//   }\n// }\n\nonMounted(() => {\n  // Ensure the editor is focused when needed and adjusts height accordingly\n  editor.value?.commands.focus()\n  adjustHeight()\n  const editorElement = document.querySelector('.ProseMirror')  // Adjust the selector as needed\n\n})\n\nconst adjustHeight = () => {\n  const content = editor.value.view.dom // Access the editor's content DOM node\n  if (content) {\n    content.style.minHeight = 'auto' // Reset minHeight to calculate potentially smaller size\n    content.style.minHeight = `${Math.max(content.scrollHeight, 150)}px` // Set minHeight based on content or minimum\n  }\n}\n\n// Add this as a handler for content updates\neditor.value?.on('update', adjustHeight)\n\n// Ensure editor is destroyed properly on component unmount\nonBeforeUnmount(() => {\n  if (editor.value) {\n    editor.value.destroy()\n  }\n})\n\n</script>\n<style scoped>\n.toolbar {\n  display: flex;\n  gap: 8px;\n}\n\n.btn {\n  background-color: #4a5568;\n  color: white;\n  padding: 8px 12px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.btn:hover {\n  background-color: #2d3748;\n}\n</style>\n","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-10.use[1]!../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-10.use[2]!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./TipTapDescriptionEditor.vue?vue&type=style&index=0&id=527ae6c1&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./TipTapDescriptionEditor.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TipTapDescriptionEditor.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./TipTapDescriptionEditor.vue?vue&type=style&index=0&id=527ae6c1&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-527ae6c1\"]])\n\nexport default __exports__","import script from \"./ImageUpload.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ImageUpload.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"\">\n    <div class=\"max-full mx-auto mt-2 mb-6 bg-gray-200 p-6 text-black\">\n      <h2 class=\"text-xl font-semibold\">{{ name }}</h2>\n\n      <ul class=\"pb-4\">\n        <li>Max File Size: <span class=\"text-orange-400\">{{ maxSize }}</span></li>\n        <li>File Types accepted: <span class=\"text-orange-400\">{{ fileTypes }}</span></li>\n      </ul>\n      <file-pond\n          name=\"image\"\n          ref=\"pond\"\n          label-idle=\"Click to choose file, or drag here...\"\n          @init=\"filepondInitialized\"\n          :server=\"serverOptions\"\n          :accepted-file-types=\"fileTypes\"\n          @processfile=\"handleProcessedFile\"\n          :max-file-size=\"maxSize\"\n      />\n      <!--        <file-pond-->\n      <!--            ref=\"filePond\"-->\n      <!--            :files=\"files\"-->\n      <!--            :server=\"serverOptions\"-->\n      <!--            @init=\"handleFilePondInit\"-->\n      <!--            @beforeaddfile=\"handleBeforeAddFile\"-->\n      <!--            @processfile=\"handleProcessedFile\"-->\n      <!--        />-->\n    </div>\n  </div>\n\n</template>\n\n<script setup>\nimport { useNotificationStore } from '@/Stores/NotificationStore'\nimport vueFilePond, { setOptions } from 'vue-filepond'\nimport FilePondPluginFileValidateType from \"filepond-plugin-file-validate-type\"\nimport FilePondPluginFileValidateSize from \"filepond-plugin-file-validate-size\"\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\"\nimport FilePondPluginFileMetadata from \"filepond-plugin-file-metadata\"\nimport 'filepond/dist/filepond.min.css'\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.min.css'\n\nconst notificationStore = useNotificationStore()\n\nlet props = defineProps({\n  image: Object,\n  name: String,\n  metadataKey: String,\n  metadataValue: String,\n  modelType: String,\n  modelId: String,\n  maxSize: String,\n  fileTypes: String,\n})\n\n\n// // Initialize FilePond with the File Metadata plugin\n// const filePondOptions = {\n//     allowMultiple: false,\n//     labelIdle: \"Drop files here or click to upload\",\n//     plugins: [FilePondPluginFileMetadata()],\n// };\n\n\n// Files array to store uploaded files\n// const files = ref([]);\n\nconst metadataKey = props.metadataKey\nconst metadataValue = props.metadataValue\nconst customMetadata = {\n  [metadataKey]: metadataValue\n};\n// customMetadata.value[props.metadataKey] = 'bar';\n// customMetadata.value[props.metadataKey] = props.metadataValue;\n// const customMetadata = ref({ [props.metadataKey]: props.metadataValue });\n// const customMetadata = computed(() => ({\n//     [props.metadataKey]: props.metadataValue,\n// }));\n\n// FilePond server options (you can customize this)\nconst serverOptions = {\n  process: (fieldName, file, metadata, load, error, progress, abort) => {\n    const formData = new FormData();\n    formData.append('image', file, file.name); // Attach the file\n    // Append modelType and modelId if it's part of your component\n    if (props.modelType) {\n      formData.append('modelType', props.modelType);\n    }\n    if (props.modelId) {\n      formData.append('modelId', props.modelId);\n    }\n\n    // Axios request configuration\n    const config = {\n      onUploadProgress: (event) => {\n        // Calculate and update progress\n        progress(event.lengthComputable, event.loaded, event.total);\n      },\n    };\n\n    // Perform the Axios POST request\n    axios.post('/api/image-upload', formData, config)\n        .then(response => {\n          // FilePond expects the server to return a file ID on successful upload,\n          // but you can adjust this based on your response structure.\n          load(response.data.fileId);\n        })\n        .catch(err => {\n          // Default error message and title in case err.response is undefined\n          let errorMessage = 'An unexpected error occurred during the upload. Please try again.';\n          let errorTitle = 'Upload Error';\n\n          // Check if the error response exists and has data\n          if (err.response && err.response.data) {\n            // Example: Extracting error message from server response\n            // Adjust based on your server's error response structure\n            if (typeof err.response.data === 'object' && err.response.data.errors) {\n              // If the errors are in object format, you might want to convert them to a string\n              const errors = err.response.data.errors;\n              const errorMessages = Object.keys(errors).map(key => `${key}: ${errors[key].join(', ')}`).join('\\n');\n              errorMessage = `Upload failed with errors:\\n${errorMessages}`;\n            } else if (typeof err.response.data === 'string') {\n              // Directly use the error string as the message\n              errorMessage = err.response.data;\n            }\n          }\n\n          // Use the errorMessage and errorTitle in your notification\n          notificationStore.setGeneralServiceNotification(errorTitle, errorMessage);\n\n          // Pass a generic error message to FilePond's error handler to avoid displaying sensitive or detailed information directly in the UI\n          error('An error occurred during the upload.');\n        });\n\n\n    // Return an abort function to stop the upload if needed\n    return {\n      abort: () => {\n        // This function is called if the user aborts the upload\n        console.log(\"Upload aborted by the user.\");\n        abort();\n      }\n    };\n  },\n};\n\n\n// Initialize FilePond\n// const handleFilePondInit = () => {\n//     // FilePond has been initialized\n//     console.log(\"FilePond is ready\");\n// };\n\n// Handle the beforeaddfile event\n// const handleBeforeAddFile = (file) => {\n//     // Add metadata to the file object\n//     file.setMetadata(\"key\", \"value\");\n//     // You can set multiple metadata fields as needed\n//     // file.setMetadata(\"anotherKey\", \"anotherValue\");\n// };\n\n\nconst FilePond = vueFilePond(\n    FilePondPluginFileValidateType,\n    FilePondPluginFileValidateSize,\n    FilePondPluginImagePreview,\n    FilePondPluginFileMetadata\n);\n\n// Handle the beforeaddfile event\n// const handleBeforeAddFile = (file) => {\n//     // Add metadata to the file object\n//     file.setMetadata(\"show_id\", \"1\");\n//     // You can set multiple metadata fields as needed\n//     // file.setMetadata(\"anotherKey\", \"anotherValue\");\n// };\n\n// FilePond.registerPlugin(FilePondPluginFileMetadata);\nFilePond.setOptions = ({\n  fileMetadataObject: {\n    show_id: '1',\n  },\n});\n\n\n// Initialize FilePond with the File Metadata plugin\n// const filePondOptions = {\n//     allowMultiple: true,\n//     labelIdle: \"Drop files here or click to upload\",\n//     plugins: [FilePondPluginFileMetadata()],\n// };\n\nfunction filepondInitialized() {\n  console.log(\"Filepond is ready!\");\n  // console.log('Filepond object:', FilePond);\n\n}\n\nconst emit = defineEmits(['reloadImage'])\n\nfunction handleProcessedFile(error, file) {\n  if (error) {\n    console.log(\"Filepond processed file\");\n    console.log(error);\n    console.log(file);\n    return;\n  }\n\n  emit('reloadImage')\n\n  // Inertia.reload({\n  //     only: ['image'],\n  // });\n}\n\n</script>\n","import script from \"./ValidationErrors.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ValidationErrors.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { computed } from 'vue';\nimport { usePage } from '@inertiajs/inertia-vue3';\n\nconst errors = computed(() => usePage().props.value.errors);\nconst hasErrors = computed(() => Object.keys(errors.value).length > 0);\n</script>\n\n<template>\n    <div v-if=\"hasErrors\">\n        <div class=\"font-medium text-red-600\">\n            Whoops! Something went wrong.\n        </div>\n\n        <ul class=\"mt-3 list-disc list-inside text-sm text-red-600\">\n            <li v-for=\"(error, key) in errors\" :key=\"key\">\n                {{ error }}\n            </li>\n        </ul>\n    </div>\n</template>\n","import script from \"./TeamEditHeader.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TeamEditHeader.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <header>\n    <div class=\"flex justify-between mb-6 pt-6\">\n\n      <div>\n        <div class=\"font-bold mb-4 text-red-700\">EDIT TEAM</div>\n        <h1 class=\"text-3xl\">\n          <Link :href=\"`/teams/${team.slug}`\" class=\"text-red-700 font-bold uppercase\">{{ team.name }}</Link>\n        </h1>\n      </div>\n      <div class=\"flex flex-row\">\n        <button\n            @click.prevent=\"submit\"\n            class=\"h-fit bg-blue-600 hover:bg-blue-500 text-white rounded-lg py-2 px-4\"\n            :disabled=\"form.processing\"\n        >\n          Save\n        </button>\n        <CancelButton/>\n      </div>\n\n    </div>\n  </header>\n\n  <div class=\"mb-6\">\n    <div><span class=\"text-xs uppercase font-semibold\">Team Creator: </span>\n      <span class=\"font-bold\">{{ teamCreator.name }}</span>\n    </div>\n    <div><span class=\"text-xs uppercase font-semibold\">Team Status: </span>\n      <span class=\"font-bold\">{{ team.team_status_name }}</span>\n    </div>\n  </div>\n\n\n</template>\n\n<script setup>\nimport CancelButton from \"@/Components/Global/Buttons/CancelButton\"\n\ndefineProps({\n  team: Object,\n  teamCreator: Object,\n  form: Object,\n})\n\nconst emit = defineEmits(['submit']);\n\nconst submit = () => {\n  emit('submit');\n};\n\n</script>\n","import script from \"./Edit.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Edit.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n\n  <Head :title=\"`Edit Team: ${props.team.name}`\"/>\n\n  <div class=\"place-self-center flex flex-col gap-y-3\">\n    <div id=\"topDiv\" class=\"bg-white text-black dark:bg-gray-800 p-5 mb-10\">\n\n      <Message v-if=\"appSettingStore.showFlashMessage\" :flash=\"$page.props.flash\"/>\n\n      <TeamEditHeader :team=\"props.team\" :teamCreator=\"props.teamCreator\" :form=\"form\" @submit=\"submit\"/>\n\n\n      <div class=\"flex flex-col\">\n        <div class=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\n          <div class=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\n            <div class=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\n\n              <!--                            <TeamEditBody-->\n              <!--                                :team=\"props.team\"-->\n              <!--                                :logo=\"props.logo\"-->\n              <!--                                :images=\"props.images\"-->\n              <!--                            />-->\n\n\n              <div v-if=\"form.errors.name\" v-text=\"form.errors.name\"\n                   class=\"bg-red-600 p-2 w-full text-white font-semibold mt-1\"></div>\n              <div v-if=\"form.errors.description\" v-text=\"form.errors.description\"\n                   class=\"bg-red-600 p-2 w-full text-white font-semibold mt-1\"></div>\n              <div v-if=\"form.errors.totalSpots\" v-text=\"form.errors.totalSpots\"\n                   class=\"bg-red-600 p-2 w-full text-white font-semibold mt-1\"></div>\n\n              <!-- Begin grid 2-col -->\n              <div class=\"grid grid-cols-1 sm:grid-cols-2 space-x-6 p-6\">\n\n                <!--Left Column-->\n                <div>\n                  <div class=\"flex space-y-3\">\n                    <div class=\"mb-6\">\n                      <SingleImage :image=\"image\" :key=\"image\" :alt=\"'team logo'\" class=\"\"/>\n                      <!--                                            <img :src=\"'/storage/images/' + props.logo\" :key=\"logo\"/>-->\n                    </div>\n                  </div>\n\n                  <div>\n\n                    <label class=\"block mb-2 uppercase font-bold text-xs text-light text-red-700\"\n                           for=\"name\"\n                    >\n                      Change Team Logo\n                    </label>\n                    <ImageUpload :image=\"image\"\n                                 :modelType=\"'team'\"\n                                 :modelId=\"`${team.id}`\"\n                                 :name=\"'Upload Team Logo'\"\n                                 :maxSize=\"'10MB'\"\n                                 :fileTypes=\"'image/jpg, image/jpeg, image/png'\"\n                                 @reloadImage=\"reloadImage\"\n                    />\n\n                  </div>\n\n                </div>\n\n                <!--Right Column-->\n                <div>\n                  <!--            Replace this with TeamLogoUpload -->\n                  <!--                                    <TeamLogoUpload-->\n                  <!--                                        :team=\"props.team\"-->\n                  <!--                                        :images=\"props.images\"-->\n                  <!--                                    />-->\n\n\n                  <form @submit.prevent=\"submit\">\n                    <div class=\"mb-6\">\n                    </div>\n\n                    <div class=\"mb-6\">\n                      <label class=\"block mb-2 uppercase font-bold text-xs text-light text-red-700\"\n                             for=\"name\"\n                      >\n                        Team Name\n                      </label>\n\n                      <input v-model=\"form.name\"\n                             class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                             type=\"text\"\n                             name=\"name\"\n                             id=\"name\"\n                             required\n                      >\n                      <div v-if=\"form.errors.name\" v-text=\"form.errors.name\"\n                           class=\"text-xs text-red-600 mt-1\"></div>\n                    </div>\n\n                    <div class=\"mb-6\">\n                      <label class=\"block mb-2 uppercase font-bold text-xs text-light text-red-700 bg-white dark:bg-gray-800 dark:text-red-200\"\n                             for=\"description\"\n                      >\n                        Description\n                      </label>\n<!--                      <TabbableTextarea v-model=\"form.description\"-->\n<!--                                        class=\"border border-gray-400 p-2 w-full rounded-lg text-black bg-white dark:bg-gray-800 dark:text-white text-black bg-white dark:bg-gray-800 dark:text-white\"-->\n<!--                                        name=\"description\"-->\n<!--                                        id=\"description\"-->\n<!--                                        rows=\"10\" cols=\"30\"-->\n<!--                                        required-->\n<!--                      />-->\n                      <tip-tap-description-editor @updateContent=\"handleContentUpdate\" :description=\"team?.description\"/>\n                      <div v-if=\"form.errors.description\" v-text=\"form.errors.description\"\n                           class=\"text-xs text-red-600 mt-1\"></div>\n                    </div>\n\n                    <!--                                        tec21: this is to become a searchable list to select a team leader -->\n                    <!--                                        <div class=\"mb-6\">-->\n                    <!--                                            <label class=\"block mb-2 uppercase font-bold text-xs text-gray-700\"-->\n                    <!--                                                   for=\"teamLeader\"-->\n                    <!--                                            >-->\n                    <!--                                                Team Leader-->\n                    <!--                                            </label>-->\n                    <!--                                            <input v-model=\"form.teamLeader\"-->\n                    <!--                                                   class=\"border border-gray-400 p-2 w-full rounded-lg\"-->\n                    <!--                                                   type=\"text\"-->\n                    <!--                                                   name=\"teamLeader\"-->\n                    <!--                                                   id=\"teamLeader\"-->\n                    <!--                                            />-->\n                    <!--                                            <div v-if=\"form.errors.teamLeader\" v-text=\"form.errors.teamLeader\"-->\n                    <!--                                                 class=\"text-xs text-red-600 mt-1\"></div>-->\n                    <!--                                        </div>-->\n\n                    <div class=\"mb-6\">\n                      <label class=\"block mb-2 uppercase font-bold text-xs text-light text-red-700\"\n                             for=\"teamLeader\"\n                      >\n                        Team Leader\n                      </label>\n                      <select\n                          class=\"border border-gray-400 p-2 w-full rounded-lg block mb-2 uppercase font-bold text-xs text-gray-800\"\n                          v-model=\"selectedTeamLeader\"\n                      >\n                        <option\n                            v-if=\"props.possibleTeamLeaders && props.possibleTeamLeaders.length > 0\"\n                            v-for=\"leader in props.possibleTeamLeaders\"\n                            :key=\"leader.id\"\n                            :value=\"leader.id\"\n                            class=\"bg-white text-black border-b dark:text-gray-50 dark:bg-gray-800 dark:border-gray-600\"\n                        >\n                          {{ leader.name }} ({{ leader.role }})\n                        </option>\n                        <option v-else disabled>\n                          There are no eligible team leaders.\n                        </option>\n\n                      </select>\n\n                      <div class=\"text-xs\">Only the team creator and team managers are listed, if their creator accounts\n                        are in good standing.\n                      </div>\n\n                      <div v-if=\"form.errors.teamLeader\" v-text=\"form.errors.teamLeader\"\n                           class=\"text-xs text-red-600 mt-1\"></div>\n\n\n                    </div>\n\n                    <div class=\"mb-6\">\n                      <label class=\"block mb-2 uppercase font-bold text-xs text-light text-red-700\"\n                             for=\"description\"\n                      >\n                        Maximum # of Team Members\n                      </label>\n                      <input v-model=\"form.totalSpots\"\n                             class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                             type=\"text\"\n                             name=\"totalSpots\"\n                             id=\"totalSpots\"\n                      />\n                      <div v-if=\"form.errors.totalSpots\" v-text=\"form.errors.totalSpots\"\n                           class=\"text-xs text-red-600 mt-1\"></div>\n                    </div>\n\n                    <SocialMediaLinksStoreUpdateForForm v-model:form=\"form\" />\n\n                    <div class=\"flex justify-end mb-6\">\n                      <JetValidationErrors class=\"mr-4\"/>\n                      <button\n                          type=\"submit\"\n                          class=\"h-fit bg-blue-600 hover:bg-blue-500 text-white rounded-lg py-2 px-4 \"\n                          :disabled=\"form.processing\"\n                      >\n                        Save\n                      </button>\n                    </div>\n                  </form>\n\n                </div>\n                <!-- End Right Column -->\n              </div>\n              <!-- End grid 2-col -->\n\n\n            </div>\n          </div>\n        </div>\n      </div>\n\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { Inertia } from '@inertiajs/inertia'\nimport { ref, watch } from 'vue'\nimport { useForm } from '@inertiajs/inertia-vue3'\nimport { usePageSetup } from '@/Utilities/PageSetup'\nimport { useTeamStore } from '@/Stores/TeamStore'\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\nimport JetValidationErrors from '@/Jetstream/ValidationErrors'\nimport TeamEditHeader from '@/Components/Pages/Teams/Edit/TeamEditHeader'\nimport TeamEditBody from '@/Components/Pages/Teams/Edit/TeamEditBody'\nimport TeamLogoUpload from '@/Components/Global/FilePond/TeamLogoUpload'\nimport TabbableTextarea from '@/Components/Global/TextEditor/TabbableTextarea'\nimport ImageUpload from '@/Components/Global/Uploaders/ImageUpload'\nimport Message from '@/Components/Global/Modals/Messages'\nimport SingleImage from '@/Components/Global/Multimedia/SingleImage'\nimport SocialMediaLinksStoreUpdateForForm from '@/Components/Global/SocialMedia/SocialMediaLinksStoreUpdateForForm.vue'\nimport TipTapDescriptionEditor from '@/Components/Global/TextEditor/TipTapDescriptionEditor.vue'\n\nusePageSetup('teams/slug/edit')\n\nconst appSettingStore = useAppSettingStore()\nconst teamStore = useTeamStore()\n\nlet props = defineProps({\n  team: Object,\n  teamCreator: Object,\n  possibleTeamLeaders: Array,\n  teamLeader: Object,\n  // possibleTeamLeaders: {\n  //     type: Object,\n  //     default: () => ({ data: [] }) // Provide a default value\n  // },\n  image: Object,\n})\n\n// const selectedTeamLeader = ref(props.teamLeader ? props.teamLeader.id : null);\n// const selectedTeamLeader = ref(null);\n\n// watchEffect(() => {\n//     if (props.possibleTeamLeaders && props.possibleTeamLeaders.data && props.teamLeader) {\n//         const teamLeaderExists = props.possibleTeamLeaders.data.some(leader => leader.id === props.teamLeader.id);\n//         if (!teamLeaderExists) {\n//             props.possibleTeamLeaders.data.push(props.teamLeader);\n//         }\n//         selectedTeamLeader.value = props.teamLeader.id;\n//     }\n// });\nconst description = ref(props.team.description)\n\n\nconst handleContentUpdate = (html) => {\n  description.value = html\n  form.description = html\n}\n\nwatch(() => props.team.description, (newDescription) => {\n  description.value = newDescription\n  form.description = newDescription\n})\n\n\n\nlet form = useForm({\n  id: props.team.id,\n  name: props.team.name,\n  description: description.value,\n  totalSpots: props.team.totalSpots,\n  teamLeader: props.teamLeader ? props.teamLeader.id : null,\n  www_url: props.team.socialMediaLinks.www_url,\n  instagram_name: props.team.socialMediaLinks.instagram_name,\n  telegram_url: props.team.socialMediaLinks.telegram_url,\n  twitter_handle: props.team.socialMediaLinks.twitter_handle,\n})\n\nconst selectedTeamLeader = ref(props.teamLeader ? props.teamLeader.id : null)\n\n// Watch for changes in selectedTeamLeader and update the form\nwatch(selectedTeamLeader, (newValue) => {\n  form.teamLeader = newValue\n})\n\nlet reloadImage = () => {\n  Inertia.reload({\n    only: ['image'],\n  })\n}\n\nlet submit = () => {\n  form.patch(route('teams.update', props.team.slug))\n}\n\nteamStore.setActiveTeam(props.team)\nteamStore.logoName = props.image.name\n\n</script>\n\n\n"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","initialState","id","description","slug","totalSpots","memberSpots","teamCreator","teamLeader","members","managers","activeShow","activeEpisode","creators","showModal","Boolean","confirmDialog","confirmManagerDialog","selectedManagerName","selectedManagerId","addManager","removeManager","deleteMemberName","deleteMemberId","noteEdit","note","saveNoteProcessing","goLiveDisplay","can","openComponent","useTeamStore","defineStore","state","actions","assign","this","setActiveTeam","team","setActiveShow","show","setActiveEpisode","episode","deleteTeamMemberCancel","confirmTeamManagerCancel","deleteTeamMember","Inertia","visit","route","data","user_id","team_id","team_slug","addTeamManager","removeTeamManager","toggleGoLiveDisplay","fetchTeamMembers","fn","_callee","_context","axios","get","self","args","arguments","apply","err","undefined","setCreators","getters","spotsRemaining","usePageSetup","pageName","userStore","useUserStore","appSettingStore","useAppSettingStore","videoPlayerStore","useVideoPlayerStore","currentPage","showFlashMessage","pageIsHidden","isMobile","window","innerWidth","fullPage","ott","showOttButtons","makeVideoTopRight","pageReload","pageWasReloaded","location","reload","on","event","search","shouldScrollToTop","requestAnimationFrame","topDiv","document","getElementById","scrollIntoView","behavior","scrollTo","setPrevUrl","noLayout","___CSS_LOADER_EXPORT___","module","props","__props","cancel","prevUrl","url","isCreator","clearFlashMessage","computed","flash","success","message","warning","_ref","post","emit","onInput","target","onTabPress","textarea","val","start","selectionStart","end","selectionEnd","substring","emits","initialContent","editor","useEditor","autofocus","extensions","StarterKit","Document","Text","TextStyle","FontFamily","Color","Typography","Underline","Subscript","Superscript","Link","configure","openOnClick","content","onUpdate","_ref2","htmlOutput","getHTML","hasFocused","ref","focusEditor","commands","clearContent","focus","toggleBold","chain","run","toggleItalic","toggleUnderline","toggleSuperscript","toggleSubscript","onMounted","_editor$value","adjustHeight","querySelector","view","dom","style","minHeight","concat","Math","max","scrollHeight","_editor$value2","onBeforeUnmount","destroy","options","locals","notificationStore","useNotificationStore","serverOptions","_defineProperty","metadataKey","metadataValue","process","fieldName","file","metadata","load","progress","abort","formData","FormData","append","modelType","modelId","config","onUploadProgress","lengthComputable","loaded","total","response","fileId","errorMessage","errors","errorMessages","map","join","setGeneralServiceNotification","console","log","FilePond","vueFilePond","FilePondPluginFileValidateType","FilePondPluginFileValidateSize","FilePondPluginImagePreview","FilePondPluginFileMetadata","filepondInitialized","setOptions","fileMetadataObject","show_id","__emit","handleProcessedFile","usePage","hasErrors","submit","teamStore","handleContentUpdate","html","form","watch","newDescription","useForm","www_url","socialMediaLinks","instagram_name","telegram_url","twitter_handle","selectedTeamLeader","newValue","reloadImage","only","patch","logoName","image"],"sourceRoot":""}
{"version":3,"file":"js/6958.js","mappings":"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","sources":["webpack:///./resources/js/Stores/NewsStore.js","webpack:///./resources/js/Utilities/PageSetup.js","webpack:///./resources/js/Components/Global/TextEditor/TipTapNewsStoryEditor.vue?2fb0","webpack:///./resources/js/Components/Pages/News/CategoryCitySelector.vue?0a50","webpack:///./resources/js/Components/Global/Buttons/CancelButton.vue?b7c6","webpack:///./resources/js/Components/Global/Buttons/CancelButton.vue","webpack:///./resources/js/Components/Global/Modals/Messages.vue?dfe9","webpack:///./resources/js/Components/Global/Modals/Messages.vue","webpack:///./resources/js/Components/Global/TextEditor/TipTapNewsStoryButtons.vue?b562","webpack:///./resources/js/Components/Global/TextEditor/TipTapNewsStoryButtons.vue","webpack:///./resources/js/Components/Global/TextEditor/TipTapNewsStoryEditor.vue","webpack:///./resources/js/Components/Global/TextEditor/TipTapNewsStoryEditor.vue?ce8e","webpack:///./resources/js/Components/Global/TextEditor/TipTapNewsStoryEditor.vue?fda9","webpack:///./resources/js/Components/Pages/News/CategoryCitySelector.vue","webpack:///./resources/js/Components/Pages/News/CategoryCitySelector.vue?8aa4","webpack:///./resources/js/Components/Pages/News/CategoryCitySelector.vue?c726","webpack:///./resources/js/Jetstream/ValidationErrors.vue?5fdc","webpack:///./resources/js/Jetstream/ValidationErrors.vue","webpack:///./resources/js/Pages/News/Stories/Create.vue?a658","webpack:///./resources/js/Pages/News/Stories/Create.vue"],"sourcesContent":["import { defineStore } from 'pinia'\n\nconst initialState = () => ({\n    newsStory: [],\n    newsArticleIdTiptop: '',\n    newsArticleTitleTiptop: '',\n    newsArticleContentTiptop: '',\n    content_json: '',\n    news_category_id: null,\n    news_category_sub_id: null,\n    categories: [],\n    subcategories: [],\n    city_id: 0,\n    province_id: 0,\n    federal_electoral_district_id: 0,\n    subnational_electoral_district_id: 0,\n    type: '',\n    displayText: '',\n    country: [],\n    selectedCategory: [], // initially no selected category\n    selectedSubcategory: [],\n    selectedLocation: [], // the selected location\n    locationSearchItems: [], // array of locations for the dropdown\n    citySelectDropdownVisible: false, // visibility of the dropdown\n    focusedIndex: 0, // for managing focused item in the dropdown\n    searchQuery: '',\n    filters: [],\n    search: '',\n    formErrors: [],\n    isLoadingCategoryCityData: false,\n    newsPersons: [],\n\n    // Computed property for displaying\n})\n\nexport const useNewsStore = defineStore('newsStore', {\n    state: initialState,\n    actions: {\n        reset() {\n            // Reset the store to its original state (clear all data)\n            Object.assign(this, initialState())\n            // await this.setSelectedLocation()\n        },\n        // load NewsStory props into NewsStore\n        loadNewsStory(newsStory) {\n            this.newsStory = newsStory\n        },\n        updateNewsStoryData(newsStory, relatedData) {\n            this.newsStory = newsStory\n            this.newsArticleIdTiptop = newsStory.id\n            this.newsArticleTitleTiptop = newsStory.title\n            this.newsArticleContentTiptop = JSON.parse(newsStory.content_json)\n            this.content_json = JSON.parse(newsStory.content_json)\n            this.news_category_id = newsStory.news_category_id\n            this.news_category_sub_id = newsStory.news_category_sub_id\n            this.city_id = newsStory.city_id\n            this.province_id = newsStory.province_id\n            this.federal_electoral_district_id = newsStory.federal_electoral_district_id\n            this.subnational_electoral_district_id = newsStory.subnational_electoral_district_id\n            this.type = newsStory.type\n            // Set related data that isn't part of the newsStory object\n            this.country = relatedData.country\n            this.categories = relatedData.categories\n            // Any additional related data setup can go here\n        },\n        // Action to set the selected Category\n        setSelectedCategory() {\n            let matchingCategory = this.categories.find(category => category.id === this.news_category_id)\n            this.selectedCategory = matchingCategory || null\n            if (this.news_category_sub_id) {\n                this.getSubcategories() // After setting the category, get the subcategory\n                this.getSelectedSubcategory() // Call after subcategories are populated\n            }\n            // Check if the selected category is 3 (Local News)\n            if (this.news_category_id === 3) {\n                this.setSelectedLocation() // Set the Location for Local News\n            } else {\n                this.resetLocationIds() // Reset location-related IDs for other categories\n            }\n        },\n        // Action to get the Subcategories\n        getSubcategories() {\n\n            // Find the matching category using selectedCategory.id\n            const matchingCategory = this.categories.find(category => category.id === this.selectedCategory.id)\n\n            if (matchingCategory) {\n                // Set the subcategories from the matched category\n                this.subcategories = matchingCategory.news_category_subs\n            } else {\n                // Handle the case where no matching category is found\n                this.subcategories = [] // Set subcategories to an empty array\n                console.log('No matching category found')\n            }\n        },\n\n        getSelectedSubcategory() {\n            // console.log('start getting selected subcategory')\n\n            // Find the subcategory that matches the news_category_sub_id\n            const matchingSubcategory = this.subcategories.find(subcategory => subcategory.id === this.news_category_sub_id)\n\n            if (matchingSubcategory) {\n                // Set the selectedSubcategory to the found subcategory\n                this.selectedSubcategory = matchingSubcategory\n                // console.log('selected subcategory updated:', this.selectedSubcategory)\n            } else {\n                // Handle the case where no matching subcategory is found\n                this.selectedSubcategory = null\n                // console.log('No matching subcategory found')\n            }\n        },\n\n        async fetchLocationsForSearch() {\n            try {\n                const response = await fetch('/api/news-locations')\n                if (response.ok) {\n                    this.locationSearchItems = await response.json()\n                } else {\n                    // Handle HTTP error responses (e.g., 404, 500)\n                    console.error('Failed to fetch locations:', response.statusText)\n                }\n                this.isLoadingCategoryCityData = false\n            } catch (error) {\n                // Handle errors that occur during the fetch operation\n                console.error('Error fetching locations:', error)\n                this.isLoadingCategoryCityData = false\n            }\n        },\n\n        // Action to set the selected Location\n        setSelectedLocation() {\n            let matchingLocation = null\n\n            // Simplified conditional logic\n            if (this.city_id) {\n                matchingLocation = this.locationSearchItems.find(location => location.city_id === this.city_id)\n            } else if (this.province_id) {\n                matchingLocation = this.locationSearchItems.find(location => location.province_id === this.province_id && !location.city_id)\n            } else if (this.federal_electoral_district_id) {\n                matchingLocation = this.locationSearchItems.find(location => location.federal_electoral_district_id === this.federal_electoral_district_id)\n            } else if (this.subnational_electoral_district_id) {\n                matchingLocation = this.locationSearchItems.find(location => location.subnational_electoral_district.id === this.subnational_electoral_district_id)\n            }\n\n            // Handling null case\n            if (matchingLocation) {\n                this.selectedLocation = matchingLocation\n\n                // Set displayText based on type\n                switch (this.type) {\n                    case 'city':\n                        this.displayText = 'City'\n                        this.type = 'city'\n                        break\n                    case 'town':\n                        this.displayText = 'Town'\n                        this.type = 'town'\n                        break\n                    case 'province':\n                        this.displayText = 'Province'\n                        this.type = 'province'\n                        break\n                    case 'territory':\n                        this.displayText = 'Territory'\n                        this.type = 'territory'\n                        break\n                    case 'federalElectoralDistrict':\n                        this.displayText = 'Federal Electoral District'\n                        this.type = 'federalElectoralDistrict'\n                        break\n                    case 'subnationalElectoralDistrict':\n                        this.displayText = 'Subnational Electoral District'\n                        this.type = 'subnationalElectoralDistrict'\n                        break\n                    default:\n                        this.displayText = ''\n                        break\n                }\n            } else {\n                // Handle the case where no matching location is found\n                // this.selectedLocation = null\n                // this.selectedType = null\n                // this.city_id = null // or keep the existing value?\n                // this.type = null\n                // this.displayText = ''\n            }\n        },\n        async updateNewsStoryAndSetLocation(newsStory, relatedData) {\n            // console.log(\"News story type:\", newsStory.type); // Or relatedData.type, depending on your structure\n            await this.fetchLocationsForSearch(); // Load location items first\n            // console.log(\"Locations fetched\");\n            //\n            // // Example: Set this.type based on newsStory or relatedData if applicable\n            // this.type = newsStory.type || relatedData.type; // Adjust based on your data structure\n            // console.log(\"Type set to:\", this.type);\n\n            this.setSelectedLocation(); // Then set the selected location\n            // console.log(\"Selected location set\");\n            // Finally, update the news story data\n            this.updateNewsStoryData(newsStory, relatedData);\n        },\n// Action to set the selected Location\n        updateSelectedLocation(location) {\n            if (!location) {\n                // Handle the case where no location is passed\n                this.selectedLocation = null\n                this.displayText = ''\n                this.resetLocationIds(null)\n                return\n            }\n\n            // Update the selectedLocation based on the type of location\n            this.selectedLocation = location\n            this.displayText = this.getDisplayTextForType(location.type)\n\n            // Update the relevant IDs based on the type\n            this.city_id = null\n            this.province_id = null\n            this.federal_electoral_district_id = null\n            this.subnational_electoral_district_id = null\n\n            switch (location.type) {\n                case 'city':\n                case 'town':\n                    this.city_id = location.city_id\n                    // Assuming province_id is also part of city data\n                    this.province_id = location.province_id || null\n                    break\n                case 'province':\n                case 'territory':\n                    this.province_id = location.province_id\n                    break\n                case 'federalElectoralDistrict':\n                    this.federal_electoral_district_id = location.federal_electoral_district_id\n                    break\n                case 'subnationalElectoralDistrict':\n                    this.subnational_electoral_district_id = location.subnational_electoral_district_id\n                    break\n                // Add more cases as needed for other types\n            }\n        },\n\n// Helper function to get display text based on type\n        getDisplayTextForType(type) {\n            switch (type) {\n                case 'city':\n                    this.type = 'city'\n                    return 'City'\n                case 'town':\n                    this.type = 'town'\n                    return 'Town'\n                case 'province':\n                    this.type = 'province'\n                    return 'Province'\n                case 'territory':\n                    this.type = 'territory'\n                    return 'Territory'\n                case 'federalElectoralDistrict':\n                    this.type = 'federalElectoralDistrict'\n                    return 'Federal Electoral District'\n                case 'subnationalElectoralDistrict':\n                    this.type = 'subnationalElectoralDistrict'\n                    return 'Subnational Electoral District'\n                default:\n                    return ''\n            }\n        },\n\n        // Setter action for searchInput\n        setSearchInput(value) {\n            if (this.selectedLocation?.name !== value) {\n                this.selectedLocation = null\n            }\n            this.search = value\n        },\n\n        // Helper function to reset location IDs\n        resetLocationIds(matchingLocation) {\n            this.city_id = null\n            this.province_id = null\n            this.federal_electoral_district_id = null\n            this.subnational_electoral_district_id = null\n\n            if (matchingLocation) {\n                switch (matchingLocation.type) {\n                    case 'city':\n                        this.city_id = matchingLocation.city_id\n                        this.province_id = matchingLocation.province_id // Assuming province_id is also part of city data\n                        break\n                    case 'province':\n                    case 'territory':\n                        this.province_id = matchingLocation.province_id\n                        break\n                    case 'federalElectoralDistrict':\n                        this.federal_electoral_district_id = matchingLocation.federal_electoral_district_id\n                        break\n                    case 'subnationalElectoralDistrict':\n                        this.subnational_electoral_district_id = matchingLocation.subnational_electoral_district_id\n                        break\n                    // ... handle other types if needed\n                }\n            }\n        },\n        updateSearch(query) {\n            this.search = query;\n        },\n        async fetchNewsPersons() {\n            try {\n                const response = await fetch('/api/news-persons');\n                this.newsPersons = await response.json();\n            } catch (error) {\n                console.error('Failed to fetch news persons:', error);\n            }\n        },\n    },\n\n    getters: {\n        filteredLocationSearchItems: (state) => {\n            if (!state.search) return state.locationSearchItems;\n            return state.locationSearchItems.filter(item =>\n                item.name.toLowerCase().includes(state.search.toLowerCase())\n            );\n        },\n        searchInput: (state) => {\n            if (state.selectedLocation) {\n                if (state.selectedLocation.type === 'city' || state.selectedLocation.type === 'town') {\n                    return `${state.selectedLocation.name}, ${state.selectedLocation.province_name}`\n                }\n                return state.selectedLocation.name\n            }\n            return state.search\n        },\n        locationType(state) {\n            if (!state.selectedLocation) {\n                state.type = ''\n                state.displayText = ''\n                return 'location type is not set';\n            }\n\n            // Assuming `selectedLocation` has a property to indicate its type\n            // Adjust the logic based on how you determine the type\n            switch (state.selectedLocation.type) {\n                case 'city':\n                    state.type = 'city';\n                    state.displayText = 'City';\n                    break;\n                case 'town':\n                    state.type = 'town';\n                    state.displayText = 'Town';\n                    break;\n                case 'province':\n                    state.displayText = 'Province'\n                    state.type = 'province'\n                    break\n                case 'territory':\n                    state.displayText = 'Territory'\n                    state.type = 'territory'\n                    break\n                case 'federalElectoralDistrict':\n                    state.displayText = 'Federal Electoral District'\n                    state.type = 'federalElectoralDistrict'\n                    break\n                case 'subnationalElectoralDistrict':\n                    state.displayText = 'Subnational Electoral District'\n                    state.type = 'subnationalElectoralDistrict'\n                    break\n                default:\n                    state.displayText = ''\n                    break\n            }\n\n            return 'location type is set';\n        },\n        // filteredNewsPersons: (state) => {\n        //     if (!state.searchQuery) return state.newsPersons;\n        //     return state.newsPersons.filter(person =>\n        //         person.user.name.toLowerCase().includes(state.searchQuery.toLowerCase())\n        //     );\n        // },\n    },\n\n})\n\n","import { onBeforeMount, onMounted } from 'vue'\nimport { useUserStore } from \"@/Stores/UserStore\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useVideoPlayerStore } from \"@/Stores/VideoPlayerStore\"\nimport { Inertia } from '@inertiajs/inertia'\n\nexport function usePageSetup(pageName) {\n    const userStore = useUserStore()\n    const appSettingStore = useAppSettingStore()\n    const videoPlayerStore = useVideoPlayerStore()\n\n    appSettingStore.currentPage = pageName\n    appSettingStore.showFlashMessage = true\n    appSettingStore.pageIsHidden = false\n\n    if (userStore.isMobile || window.innerWidth < 1024 || appSettingStore.fullPage) {\n        appSettingStore.ott = 0;\n    } else {\n        appSettingStore.ott = 1;\n        appSettingStore.showOttButtons = true;\n    }\n\n    videoPlayerStore.makeVideoTopRight()\n\n    if (appSettingStore.pageReload) {\n        appSettingStore.pageReload = false\n        appSettingStore.pageWasReloaded = true\n        window.location.reload();\n    }\n    // Check if the URL contains query strings\n\n\n    // Only scroll into view if there are no query strings\n\n        // const topDiv = document.getElementById(\"topDiv\")\n        // if (topDiv) {\n        //     topDiv.scrollIntoView()\n        // }\n        Inertia.on('navigate', (event) => {\n            if (userStore.isMobile || window.innerWidth < 1024 || appSettingStore.fullPage) {\n                appSettingStore.ott = 0;\n            } else {\n                appSettingStore.ott = 1;\n            }\n            const hasQueryStrings = window.location.search !== '';\n            if (!hasQueryStrings || appSettingStore.shouldScrollToTop) {\n                requestAnimationFrame(() => {\n                    const topDiv = document.getElementById(\"topDiv\");\n                    if (topDiv) {\n                        topDiv.scrollIntoView({behavior: 'auto'});\n                    } else {\n                        window.scrollTo(0, 0);\n                    }\n                });\n            }\n            appSettingStore.shouldScrollToTop = false;\n        })\n    // Only update if we're not already on this page to avoid overwriting with the current URL\n    appSettingStore.setPrevUrl()\n    appSettingStore.showOttButtons = true\n    appSettingStore.noLayout = false\n\n    // Inertia.reload()\n\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".tiptap[data-v-13c08742]{>*+*[data-v-13c08742]{margin-top:.75em}}.character-count[data-v-13c08742]{color:#868e96;margin-left:1rem;margin-top:1rem}.tiptap p.is-editor-empty[data-v-13c08742]:first-child:before{color:#adb5bd;content:attr(data-placeholder);float:left;height:0;pointer-events:none}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/Components/Global/TextEditor/TipTapNewsStoryEditor.vue\"],\"names\":[],\"mappings\":\"AA8GA,yBACE,sBACE,gBACF,CACF,CAEA,kCAGE,aAAc,CADd,gBAAiB,CADjB,eAGF,CAGA,8DAGE,aAAc,CAFd,8BAA+B,CAC/B,UAAW,CAGX,QAAS,CADT,mBAEF\",\"sourcesContent\":[\"<template>\\n  <TipTapButtons :editor=\\\"editor\\\"/>\\n  <div\\n      class=\\\"tiptap hide-scrollbar h-auto overflow-y-auto min-h-[13rem] max-h-[96rem] mb-2 pb-2 bg-gray-50 border border-1 border-gray-300 focus:outline-none text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500\\\">\\n    <editor-content :editor=\\\"editor\\\" class=\\\"news-story\\\"/>\\n    <div class=\\\"character-count\\\" v-if=\\\"editor\\\">\\n      {{ editor.storage.characterCount.characters() }}/{{ limit }} characters\\n      <br>\\n      {{ editor.storage.characterCount.words() }} words\\n    </div>\\n\\n  </div>\\n</template>\\n\\n<script setup>\\nimport { watch } from 'vue'\\nimport { Editor, EditorContent } from '@tiptap/vue-3'\\nimport StarterKit from '@tiptap/starter-kit'\\nimport { History } from '@tiptap/extension-history'\\nimport { useNewsStore } from '@/Stores/NewsStore'\\nimport TipTapButtons from '@/Components/Global/TextEditor/TipTapNewsStoryButtons'\\nimport { TextStyle } from '@tiptap/extension-text-style'\\nimport { Color } from '@tiptap/extension-color'\\nimport Typography from '@tiptap/extension-typography'\\nimport CharacterCount from '@tiptap/extension-character-count'\\nimport Placeholder from '@tiptap/extension-placeholder'\\nimport Paragraph from '@tiptap/extension-paragraph'\\nimport { FontFamily } from '@tiptap/extension-font-family'\\nimport { TextAlign } from '@tiptap/extension-text-align'\\nimport { Strike } from '@tiptap/extension-strike'\\nimport { Underline } from '@tiptap/extension-underline'\\nimport { Subscript } from '@tiptap/extension-subscript'\\nimport { Superscript } from '@tiptap/extension-superscript'\\nimport Link from '@tiptap/extension-link'\\n\\nconst newsStore = useNewsStore()\\n\\nconst limit = 5000\\n\\n// Watch for changes in the content and update the editor\\nwatch(() => newsStore.content_json, (newContent) => {\\n  if (editor && newContent) {\\n    editor.commands.setContent(newContent)\\n  }\\n}, {immediate: true})\\n\\nconst editor = new Editor({\\n  content: newsStore.newsArticleContentTiptop,\\n  extensions: [\\n    StarterKit,\\n    Document,\\n    Text,\\n    TextStyle,\\n    FontFamily,\\n    Color,\\n    Typography,\\n    Underline,\\n    Subscript,\\n    Superscript,\\n    TextAlign.configure({\\n      types: ['heading', 'paragraph'],\\n    }),\\n    Link.configure({\\n      openOnClick: true,\\n    }),\\n    CharacterCount.configure({\\n      limit: limit,\\n    }),\\n    Placeholder.configure({\\n      // Use a placeholder:\\n      placeholder: 'Write something …',\\n      // Use different placeholders depending on the node type:\\n      // placeholder: ({ node }) => {\\n      //   if (node.type.name === 'heading') {\\n      //     return 'What’s the title?'\\n      //   }\\n\\n      //   return 'Can you add some further context?'\\n      // },\\n    }),\\n  ],\\n  onUpdate: ({editor}) => {\\n    newsStore.newsArticleContentTiptop = editor.getJSON()\\n\\n    // Auto-save -> triggered on every change,\\n    // currently disabled. Needs to be throttled.\\n    //\\n    // axios.post('/news/save', { id: newsStore.newsArticleIdTiptop, body:newsStore.newsArticleContentTiptop, title:newsStore.newsArticleTitleTiptop })\\n  },\\n  autofocus: true,\\n  editorProps: {\\n    attributes: {\\n      class: 'h-auto min-h-[12rem] max-h-[96rem] overflow-y-auto block w-full p-2.5 focus:outline-none',\\n    },\\n  },\\n})\\n\\n// onBeforeUnmount(() => {\\n//     // this isn't working, I think it's\\n//     // needed for the history extension.\\n//     editor.destroy()\\n// })\\n\\nHistory.configure({\\n  depth: 10,\\n})\\n\\n</script>\\n\\n<style scoped>\\n.tiptap {\\n  > * + * {\\n    margin-top: 0.75em;\\n  }\\n}\\n\\n.character-count {\\n  margin-top: 1rem;\\n  margin-left: 1rem;\\n  color: #868e96;\\n}\\n\\n/* Placeholder (at the top) */\\n.tiptap p.is-editor-empty:first-child::before {\\n  content: attr(data-placeholder);\\n  float: left;\\n  color: #adb5bd;\\n  pointer-events: none;\\n  height: 0;\\n}\\n\\n\\n/* Placeholder (on every new line) */\\n/*.tiptap p.is-empty::before {\\n  content: attr(data-placeholder);\\n  float: left;\\n  color: #adb5bd;\\n  pointer-events: none;\\n  height: 0;\\n}*/\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".select-container[data-v-3728640d]{max-width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/Components/Pages/News/CategoryCitySelector.vue\"],\"names\":[],\"mappings\":\"AAgSA,mCACE,cAAe,CACf,eAAgB,CAEhB,sBAAuB,CADvB,kBAEF\",\"sourcesContent\":[\"<template>\\n\\n\\n\\n  <!-- The category select -->\\n  <div class=\\\"flex flex-col py-4 px-6\\\">\\n\\n    <div v-if=\\\"!newsStore.isLoadingCategoryCityData\\\" class=\\\"bg-gray-200 rounded-lg\\\">\\n      <div class=\\\"px-4 py-4 font-semibold text-xs uppercase\\\">Category</div>\\n      <div class=\\\"px-4 pb-4\\\">\\n        <label for=\\\"categorySelect\\\" class=\\\"text-sm font-medium text-gray-900 dark:text-gray-300 pr-4\\\">Select Category:</label>\\n        <select required\\n                v-model=\\\"newsStore.selectedCategory\\\"\\n                id=\\\"categorySelect\\\"\\n                class=\\\"rounded\\\"\\n                @change=\\\"onCategoryChange\\\"\\n        >\\n          <option :value=\\\"{ id: null }\\\" >Choose a category</option>\\n          <option v-for=\\\"category in newsStore.categories\\\" :key=\\\"category.id\\\" :value=\\\"category\\\">{{ category.name }}</option>\\n        </select>\\n      </div>\\n      <div v-if=\\\"newsStore.selectedCategory.name\\\" class=\\\"flex flex-col justify-left px-4 py-4\\\">\\n        <div class=\\\"font-semibold text-xs uppercase text-indigo-900\\\">{{newsStore.selectedCategory.name}}</div>\\n        <div v-if=\\\"newsStore.selectedCategory\\\" class=\\\"px-6 py-4 text-indigo-800\\\">\\n          {{newsStore.selectedCategory.description}}\\n        </div>\\n      </div>\\n    </div>\\n    <div v-if=\\\"newsStore.isLoadingCategoryCityData\\\" class=\\\"bg-gray-200 rounded-lg p-10\\\">\\n      <span class=\\\"loading loading-spinner text-info\\\"></span>\\n    </div>\\n\\n\\n\\n    <!-- The location select -->\\n    <div v-if=\\\"newsStore.selectedCategory && newsStore.selectedCategory.id === 3\\\" class=\\\"mt-8 bg-gray-200 rounded-lg\\\">\\n      <div v-if=\\\"!newsStore.isLoadingCategoryCityData\\\">\\n      <div class=\\\"px-4 py-4 font-semibold text-xs uppercase\\\">Location</div>\\n      <div class=\\\"flex flex-col pb-4 px-6\\\">\\n        <div class=\\\"text-sm font-semibold text-gray-900 dark:text-gray-300 py-1\\\">Please select the city, town, province or electoral district:</div>\\n        <div class=\\\"w-full mr-4 relative\\\">\\n\\n          <input\\n              v-model=\\\"searchInputModel\\\"\\n              type=\\\"search\\\"\\n              class=\\\"w-full rounded-lg mt-2\\\"\\n              placeholder=\\\"Search...\\\"\\n              @focus=\\\"newsStore.citySelectDropdownVisible = true\\\"\\n              @blur=\\\"handleInputBlur\\\"\\n              @keydown=\\\"handleKeydown\\\"\\n          />\\n          <span v-if=\\\"newsStore.selectedLocation\\\" class=\\\"relative xl:absolute inset-y-0 right-0 flex items-center pr-4\\\">\\n                <!-- Styled display text -->\\n                <span class=\\\"text-gray-500\\\">{{ newsStore.displayText }}</span>\\n              </span>\\n\\n          <ul v-if=\\\"newsStore.citySelectDropdownVisible && newsStore.locationSearchItems.length > 0\\\" class=\\\"absolute z-10 w-full bg-white mt-1 max-h-60 rounded-lg shadow-lg overflow-auto border border-gray-200\\\">\\n            <li v-for=\\\"(location, index) in newsStore.filteredLocationSearchItems\\\"\\n                :key=\\\"location.id\\\"\\n                  class=\\\"cursor-pointer select-none relative py-2 pl-3 pr-9 hover:bg-gray-100\\\"\\n                  :class=\\\"{'bg-gray-200': index === newsStore.focusedIndex.value, 'dropdown-item': true, [`dropdown-item-${index}`]: true}\\\"\\n                  @click=\\\"inspectLocation(location)\\\"\\n              >\\n\\n                <span v-if=\\\"location.type === 'city' || location.type === 'town'\\\">{{ location.name }}, <span class=\\\"text-gray-600\\\">{{ location.province_name }}</span></span>\\n                <span v-if=\\\"location.type === 'province'\\\">{{ location.name }} &nbsp;&nbsp;<span class=\\\"uppercase text-xs font-semibold text-gray-600\\\">Province</span></span>\\n                <span v-if=\\\"location.type === 'territory'\\\">{{ location.name }} &nbsp;&nbsp;<span class=\\\"uppercase text-xs font-semibold text-gray-600\\\">Territory</span></span>\\n                <span v-if=\\\"location.type === 'federalElectoralDistrict'\\\">{{ location.name }} &nbsp;&nbsp;<span class=\\\"uppercase text-xs font-semibold text-gray-600\\\">Federal Electoral District</span></span>\\n                <span v-if=\\\"location.type === 'subnationalElectoralDistrict'\\\">{{ location.name }}</span>\\n\\n              </li>\\n            </ul>\\n            <div\\n                v-if=\\\"newsStore.formErrors.type\\\"\\n                class=\\\"text-sm text-red-600\\\"\\n            >\\n              {{ newsStore.formErrors.type }}\\n            </div>\\n          </div>\\n        </div>\\n    </div>\\n      <div v-if=\\\"newsStore.isLoadingCategoryCityData\\\" class=\\\"p-10\\\">\\n        <span class=\\\"loading loading-spinner text-info\\\"></span>\\n      </div>\\n    </div>\\n\\n\\n\\n\\n\\n\\n\\n    <!-- The sub-category select -->\\n    <div v-if=\\\"!newsStore.isLoadingCategoryCityData\\\" class=\\\"mt-8 bg-gray-200 rounded-lg\\\">\\n      <div class=\\\"px-4 py-4 font-semibold text-xs uppercase\\\">Sub-category</div>\\n      <div class=\\\"flex flex-wrap py-4 px-4\\\">\\n        <div class=\\\"flex flex-col\\\">\\n          <label for=\\\"subcategorySelect\\\" class=\\\"text-sm font-medium text-gray-900 dark:text-gray-300 pr-4\\\">Select Subcategory:</label>\\n          <span class=\\\"italic text-sm font-thin text-gray-900 dark:text-gray-300\\\">(optional)</span>\\n        </div>\\n        <div v-if=\\\"newsStore.selectedCategory\\\" class=\\\"flex flex-wrap\\\">\\n          <select v-model=\\\"newsStore.selectedSubcategory\\\" @change=\\\"onSubcategoryChange\\\" id=\\\"subcategorySelect\\\" class=\\\"rounded\\\">\\n            <option :value=\\\"{ id: null }\\\">Choose a sub-category</option> <!-- Add a blank option -->\\n            <option v-for=\\\"subcategory in newsStore.subcategories\\\" :key=\\\"subcategory.id\\\" :value=\\\"subcategory\\\">{{ subcategory.name }}</option>\\n          </select>\\n        </div>\\n    </div>\\n\\n    <div v-if=\\\"newsStore.selectedSubcategory\\\" class=\\\"flex-col justify-left py-4 px-4\\\">\\n      <div v-if=\\\"newsStore.selectedSubcategory\\\" class=\\\"font-semibold text-xs uppercase text-indigo-900\\\">{{newsStore.selectedSubcategory.name}}</div>\\n      <div v-if=\\\"newsStore.selectedSubcategory\\\" class=\\\"px-6 py-4 text-indigo-800\\\">\\n        {{newsStore.selectedSubcategory.description}}\\n      </div>\\n    </div>\\n    </div>\\n    <div v-if=\\\"newsStore.isLoadingCategoryCityData\\\" class=\\\"mt-8 p-10 bg-gray-200 rounded-lg\\\">\\n      <span class=\\\"loading loading-spinner text-info\\\"></span>\\n    </div>\\n\\n\\n    <div\\n        v-if=\\\"newsStore.formErrors.news_category_id\\\"\\n        class=\\\"text-sm text-red-600\\\"\\n    >\\n      {{ newsStore.formErrors.news_category_id }}\\n    </div>\\n\\n  </div>\\n\\n</template>\\n\\n<script setup>\\nimport { Inertia } from '@inertiajs/inertia'\\nimport { usePage } from '@inertiajs/inertia-vue3';\\nimport { watch, ref, computed, onMounted } from 'vue'\\nimport { debounce, throttle } from 'lodash'\\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\\nimport { useNewsStore } from '@/Stores/NewsStore'\\n\\nconst appSettingStore = useAppSettingStore()\\nconst newsStore = useNewsStore()\\n\\n// Define props and other logic\\nlet props = defineProps({\\n  newsStory: Object,\\n  country: Object,\\n  categories: Object,\\n  locationSearch: Object,\\n  filters: Object,\\n  errors: Object,\\n  searchPath: String,\\n});\\n// const { props } = usePage();\\n\\n// Watch for changes in locationSearch prop and update the store\\n// watch(() => props.locationSearch, (newLocationSearch) => {\\n//   newsStore.locationSearch = newLocationSearch;\\n// }, { deep: true });\\n//\\n// // If you need to watch the filters as well\\n// watch(() => props.filters, (newFilters) => {\\n//   if (newFilters && newFilters.search !== undefined) {\\n//     newsStore.search = newFilters.search;\\n//   }\\n// }, { deep: true });\\n\\nonMounted(async() => {\\n  // Initialize newsStore.search with the initial search value from props\\n  // newsStore.search = props.filters.search;\\n  await newsStore.fetchLocationsForSearch() // Fetch locations when the component is mounted\\n});\\n\\nconst filteredLocations = newsStore.filteredItems; // This is now a reactive property you can use in your template\\n\\nconst onCategoryChange = () => {\\n  newsStore.news_category_id = newsStore.selectedCategory.id;\\n  newsStore.news_category_sub_id = null\\n  newsStore.getSubcategories();\\n  newsStore.getSelectedSubcategory();\\n  if (newsStore.selectedCategory.id !== 3) {\\n    newsStore.city_id = null\\n    newsStore.province_id = null\\n  }\\n};\\n\\nconst onSubcategoryChange = () => {\\n  // Assuming selectedSubcategory is already updated through v-model\\n  newsStore.news_category_sub_id = newsStore.selectedSubcategory.id; // Directly set the subcategory ID\\n};\\n\\n// const selectLocation = (location) => {\\n//   console.log('selectLocation called with:', location);\\n//   newsStore.updateSelectedLocation(location);\\n// };\\nconst inspectLocation = (location) => {\\n  newsStore.updateSelectedLocation(location);\\n};\\n\\nfunction selectLocation(location) {\\n  newsStore.updateSelectedLocation(location);\\n}\\n// watch(newsStore.focusedIndex, (newValue) => {\\n//   if (newValue >= 0) {\\n//     const item = document.querySelector(`.dropdown-item-${newValue}`);\\n//     item?.scrollIntoView({ block: 'center' });\\n//   }\\n// });\\n\\nconst searchInputModel = computed({\\n  get() {\\n    return newsStore.searchInput; // Use the getter from the store\\n  },\\n  set(value) {\\n    newsStore.setSearchInput(value); // Use the setter action from the store\\n  }\\n});\\n//\\n// const searchInput = computed({\\n//   get() {\\n//     // If there's a selected location, show its name; otherwise, show the search value\\n//     const location = newsStore.selectedLocation;\\n//     if (location) {\\n//       if (location.type === 'city' || location.type === 'town') {\\n//         return `${location.name}, ${location.province_name}`;\\n//       }\\n//       return location.name;\\n//     }\\n//     return newsStore.search;\\n//   },\\n//   set(value) {\\n//     // Update the search value in the store when the user types\\n//     newsStore.search = value;\\n//\\n//     // Optionally, clear or update selectedLocation if necessary\\n//     // For example, if you want to clear the selected location when the user types:\\n//     if (newsStore.selectedLocation?.name !== value) {\\n//       newsStore.selectedLocation = null;\\n//     }\\n//   }\\n// });\\n\\n// watch(() => newsStore.search, throttle((value) => {\\n//   let url;\\n//   if (appSettingStore.currentPage === 'newsEdit') {\\n//     url = `/newsStory/${newsStore.newsStory.slug}/edit`;\\n//   } else if (appSettingStore.currentPage === 'newsCreate') {\\n//     url = '/newsStory/create';\\n//   }\\n//\\n//   if (url) {\\n//     Inertia.get(url, { search: value }, {\\n//       preserveState: true,\\n//       replace: true,\\n//     });\\n//   }\\n// }, 300));\\n\\nconst showDropdown = () => {\\n  newsStore.citySelectDropdownVisible = true;\\n};\\n\\nconst handleInputBlur = () => {\\n  // Delay hiding dropdown to allow click event on dropdown item to be processed\\n  setTimeout(() => {\\n    newsStore.citySelectDropdownVisible = false;\\n  }, 200);\\n};\\n\\nconst handleKeydown = (event) => {\\n  if (event.key === 'Enter') {\\n    // Prevent default action of the Enter key\\n    event.preventDefault();\\n\\n    if (newsStore.locationSearch.length > 0 && newsStore.focusedIndex.value !== null) {\\n      const selectedLocation = newsStore.locationSearch[newsStore.focusedIndex.value];\\n      if (selectedLocation) {\\n        newsStore.selectedLocation = selectedLocation; // Set the selected location\\n        newsStore.updateSelectedLocation(selectedLocation); // Update the location in the store\\n        newsStore.citySelectDropdownVisible = false; // Close the dropdown\\n      }\\n    }\\n  }\\n  // Handle other keydown events if necessary\\n};\\n\\n</script>\\n\\n<style scoped>\\n.select-container {\\n  max-width: 100%; /* Adjust the maximum width as needed */\\n  overflow: hidden;\\n  white-space: nowrap;\\n  text-overflow: ellipsis;\\n}\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import script from \"./CancelButton.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CancelButton.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n    <button\n        @click.prevent=\"cancel\"\n        class=\"ml-2 px-4 py-2 text-white bg-orange-600 hover:bg-orange-500 rounded-lg\"\n    >Cancel\n    </button>\n  </div>\n</template>\n\n<script setup>\nimport { Inertia } from \"@inertiajs/inertia\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useUserStore } from '@/Stores/UserStore'\n\nconst appSettingStore = useAppSettingStore()\nconst userStore = useUserStore()\n\nlet props = defineProps({\n  url: String\n})\n\nfunction cancel() {\n  if (appSettingStore.prevUrl) {\n    if (props.url) {\n      Inertia.visit(props.url)\n    } else {\n      Inertia.visit(appSettingStore.prevUrl)\n    }\n  } else {\n    if (props.url) {\n      Inertia.visit(props.url)\n    } else {\n      // Fallback if prevUrl is not available\n      let prevUrl = userStore.isCreator ? '/dashboard' : '/';\n      Inertia.visit(prevUrl);\n    }\n  }\n}\n</script>\n","import script from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"mx-4 my-4\">\n    <div class=\"alert alert-info mt-4\"\n         v-if=\"props.flash.message\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" class=\"stroke-current shrink-0 w-6 h-6\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n      </svg>\n      <span>{{ props.flash.message }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-success mt-4 mx-3\"\n         v-if=\"props.flash.success\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.success }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-warning mt-4 mx-3\"\n         v-if=\"props.flash.warning\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"/>\n      </svg>\n      <span>{{ props.flash.warning }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-error mt-4 mx-3\"\n         v-if=\"props.flash.error\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.error }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n  </div>\n\n</template>\n\n<script setup>\nimport { Inertia } from \"@inertiajs/inertia\"\nimport { computed } from \"vue\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\n\nconst appSettingStore = useAppSettingStore()\n\nappSettingStore.showFlashMessage = true\n\nlet props = defineProps({\n  flash: Object,\n\n})\n\nconst messageType = computed(() => ({\n  'text-green-700 bg-green-100 dark:bg-green-200 dark:text-green-800': props.flash.success,\n  'text-blue-700 bg-blue-100 dark:bg-blue-200 dark:text-blue-800': props.flash.message,\n  'text-orange-700 bg-orange-100 dark:bg-orange-200 dark:text-orange-800': props.flash.warning,\n  'text-red-700 bg-red-100 dark:bg-red-200 dark:text-red-800': props.flash.error,\n}))\n\nconst clearFlashMessage = async () => {\n  await Inertia.post(route('flash.clear'));\n  Inertia.reload();\n};\n</script>\n","import script from \"./TipTapNewsStoryButtons.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TipTapNewsStoryButtons.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n    <button tabindex=\"-1\"\n            @click.prevent=\"editor.chain().focus().toggleBold().run()\"\n            class=\"py-1 px-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-bold\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive('bold') }\">\n      B\n    </button>\n    <button tabindex=\"-1\"\n            @click.prevent=\"editor.chain().focus().toggleItalic().run()\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive('italic') }\">\n      i\n    </button>\n    <button tabindex=\"-1\"\n            @click.prevent=\"editor.chain().focus().toggleHeading({ level: 1 }).run()\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive('heading', { level: 1}) }\">\n      h1\n    </button>\n    <button tabindex=\"-1\"\n            @click.prevent=\"editor.chain().focus().toggleHeading({ level: 2 }).run()\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive('heading', { level: 2}) }\">\n      h2\n    </button>\n    <button tabindex=\"-1\"\n            @click.prevent=\"editor.chain().focus().toggleHeading({ level: 3 }).run()\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive('heading', { level: 3}) }\">\n      h3\n    </button>\n    <button tabindex=\"-1\"\n            @click.prevent=\"editor.chain().focus().setTextAlign('left').run()\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive({ textAlign: 'left' }) }\">\n      left\n    </button>\n    <button tabindex=\"-1\"\n            @click.prevent=\"editor.chain().focus().setTextAlign('center').run()\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive({ textAlign: 'center' }) }\">\n      center\n    </button>\n    <button tabindex=\"-1\"\n            @click.prevent=\"editor.chain().focus().setTextAlign('right').run()\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive({ textAlign: 'right' }) }\">\n      right\n    </button>\n    <button tabindex=\"-1\"\n            @click.prevent=\"editor.chain().focus().setTextAlign('justify').run()\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive({ textAlign: 'justify' }) }\">\n      justify\n    </button>\n    <button tabindex=\"-1\"\n            @click.prevent=\"editor.chain().focus().toggleBulletList().run()\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive('bulletList') }\">\n      bullet list\n    </button>\n    <button tabindex=\"-1\"\n            @click.prevent=\"editor.chain().focus().toggleOrderedList().run()\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive('orderedList') }\">\n      ordered list\n    </button>\n\n\n<!--    currently tipTap is readonly-editor. We need to convert JSON to HTML\n        then we can enable the link buttons.-->\n    <button hidden\n            tabindex=\"-1\"\n            @click.prevent=\"setLink\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive('link') }\">\n      setLink\n    </button>\n    <!--    currently tipTap is readonly-editor. We need to convert JSON to HTML\n        then we can enable the link buttons.-->\n    <button hidden\n            tabindex=\"-1\"\n            @click.prevent=\"editor.chain().focus().unsetLink().run()\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :disabled=\"!editor.isActive('link')\">\n      unsetLink\n    </button>\n\n\n    <button tabindex=\"-1\"\n            @click.prevent=\"editor.chain().focus().toggleCodeBlock().run()\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive('codeBlock') }\">\n      code block\n    </button>\n    <button tabindex=\"-1\"\n            @click.prevent=\"editor.chain().focus().toggleBlockquote().run()\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive('blockquote') }\">\n      blockquote\n    </button>\n    <button tabindex=\"-1\"\n            @click.prevent=\"editor.chain().focus().setHorizontalRule().run()\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\">\n      horizontal rule\n    </button>\n    <button tabindex=\"-1\"\n            @click.prevent=\"editor.chain().focus().toggleStrike().run()\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive('strike') }\">\n      strike\n    </button>\n    <button tabindex=\"-1\"\n            @click.prevent=\"editor.chain().focus().toggleUnderline().run()\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive('underline') }\">\n      underline\n    </button>\n    <button tabindex=\"-1\"\n            @click.prevent=\"editor.chain().focus().toggleSubscript().run()\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive('subscript') }\">\n      subscript\n    </button>\n    <button tabindex=\"-1\"\n            @click.prevent=\"editor.chain().focus().toggleSuperscript().run()\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive('superscript') }\">\n      superscript\n    </button>\n    <button tabindex=\"-1\"\n            @click.prevent=\"editor.chain().focus().undo().run()\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 disabled:hover:bg-gray-200 disabled:cursor-not-allowed disabled:text-black rounded-lg font-italic\"\n            :disabled=\"!editor.can().chain().focus().undo().run()\">\n      undo\n    </button>\n    <button tabindex=\"-1\"\n            @click.prevent=\"editor.chain().focus().redo().run()\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 disabled:hover:bg-gray-200 disabled:cursor-not-allowed disabled:text-black rounded-lg font-italic\"\n            :disabled=\"!editor.can().chain().focus().redo().run()\">\n      redo\n    </button>\n    <!-- Text color dropdown -->\n    <button tabindex=\"-1\" @click.prevent=\"toggleTextColor('#000000')\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\">\n      black\n    </button>\n    <button tabindex=\"-1\" @click.prevent=\"toggleTextColor('#F98181')\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive('textStyle', { color: '#F98181' }) }\">\n      red\n    </button>\n    <button tabindex=\"-1\" @click.prevent=\"toggleTextColor('#70CFF8')\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive('textStyle', { color: '#70CFF8' }) }\">\n      blue\n    </button>\n    <button tabindex=\"-1\" @click.prevent=\"toggleTextColor('#958DF1')\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive('textStyle', { color: '#958DF1' }) }\">\n      purple\n    </button>\n    <button tabindex=\"-1\" @click.prevent=\"toggleTextColor('#FBBC88')\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive('textStyle', { color: '#FBBC88' }) }\">\n      orange\n    </button>\n    <button tabindex=\"-1\" @click.prevent=\"toggleTextColor('#FAF594')\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive('textStyle', { color: '#FAF594' }) }\">\n      yellow\n    </button>\n    <button tabindex=\"-1\" @click.prevent=\"toggleTextColor('#94FADB')\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive('textStyle', { color: '#94FADB' }) }\">\n      teal\n    </button>\n    <button tabindex=\"-1\" @click.prevent=\"toggleTextColor('#B9F18D')\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive('textStyle', { color: '#B9F18D' }) }\">\n      green\n    </button>\n\n    <button tabindex=\"-1\" @click.prevent=\"editor.chain().focus().setFontFamily('Inter').run()\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive('textStyle', { fontFamily: 'Inter' }) }\">\n      Inter\n    </button>\n    <button tabindex=\"-1\" @click.prevent=\"editor.chain().focus().setFontFamily('Comic Sans MS, Comic Sans').run()\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive('textStyle', { fontFamily: 'Comic Sans MS, Comic Sans' }) }\">\n      Comic Sans\n    </button>\n    <button tabindex=\"-1\" @click.prevent=\"editor.chain().focus().setFontFamily('serif').run()\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive('textStyle', { fontFamily: 'serif' }) }\">\n      serif\n    </button>\n    <button tabindex=\"-1\" @click.prevent=\"editor.chain().focus().setFontFamily('monospace').run()\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive('textStyle', { fontFamily: 'monospace' }) }\">\n      monospace\n    </button>\n<!--    Cursive is the same as Comic Sans.... find a different font... -->\n    <button hidden\n            tabindex=\"-1\"\n            @click.prevent=\"editor.chain().focus().setFontFamily('cursive').run()\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive('textStyle', { fontFamily: 'cursive' }) }\">\n      cursive\n    </button>\n<!--    They can toggle the fonts... we don't really need this do we? -->\n    <button hidden\n            tabindex=\"-1\"\n            @click.prevent=\"editor.chain().focus().unsetFontFamily().run()\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\">\n      unsetFontFamily\n    </button>\n  </div>\n\n</template>\n\n<script setup>\n\nimport { ref } from 'vue'\n\nconst props = defineProps({\n  editor: Object,\n})\n\nlet textColor = null; // Variable to hold the currently set text color\n\nconst toggleTextColor = (color) => {\n  if (textColor === color) {\n    props.editor.chain().focus().unsetColor().run()\n    textColor = null;\n  } else {\n    props.editor.chain().focus().setColor(color).run()\n    textColor = color;\n  }\n};\n\n\n\n\nconst setLink = () => {\n  const previousUrl = props.editor.getAttributes('link').href\n  const url = window.prompt('URL', previousUrl)\n  // cancelled\n  if (url === null) {\n  }\n\n  // empty\n  if (url === '') {\n    props.editor\n        .chain()\n        .focus()\n        .extendMarkRange('link')\n        .unsetLink()\n        .run()\n  }\n\n  // update link\n  props.editor\n      .chain()\n      .focus()\n      .extendMarkRange('link')\n      .setLink({ href: url })\n      .run()\n}\n\n</script>\n","<template>\n  <TipTapButtons :editor=\"editor\"/>\n  <div\n      class=\"tiptap hide-scrollbar h-auto overflow-y-auto min-h-[13rem] max-h-[96rem] mb-2 pb-2 bg-gray-50 border border-1 border-gray-300 focus:outline-none text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500\">\n    <editor-content :editor=\"editor\" class=\"news-story\"/>\n    <div class=\"character-count\" v-if=\"editor\">\n      {{ editor.storage.characterCount.characters() }}/{{ limit }} characters\n      <br>\n      {{ editor.storage.characterCount.words() }} words\n    </div>\n\n  </div>\n</template>\n\n<script setup>\nimport { watch } from 'vue'\nimport { Editor, EditorContent } from '@tiptap/vue-3'\nimport StarterKit from '@tiptap/starter-kit'\nimport { History } from '@tiptap/extension-history'\nimport { useNewsStore } from '@/Stores/NewsStore'\nimport TipTapButtons from '@/Components/Global/TextEditor/TipTapNewsStoryButtons'\nimport { TextStyle } from '@tiptap/extension-text-style'\nimport { Color } from '@tiptap/extension-color'\nimport Typography from '@tiptap/extension-typography'\nimport CharacterCount from '@tiptap/extension-character-count'\nimport Placeholder from '@tiptap/extension-placeholder'\nimport Paragraph from '@tiptap/extension-paragraph'\nimport { FontFamily } from '@tiptap/extension-font-family'\nimport { TextAlign } from '@tiptap/extension-text-align'\nimport { Strike } from '@tiptap/extension-strike'\nimport { Underline } from '@tiptap/extension-underline'\nimport { Subscript } from '@tiptap/extension-subscript'\nimport { Superscript } from '@tiptap/extension-superscript'\nimport Link from '@tiptap/extension-link'\n\nconst newsStore = useNewsStore()\n\nconst limit = 5000\n\n// Watch for changes in the content and update the editor\nwatch(() => newsStore.content_json, (newContent) => {\n  if (editor && newContent) {\n    editor.commands.setContent(newContent)\n  }\n}, {immediate: true})\n\nconst editor = new Editor({\n  content: newsStore.newsArticleContentTiptop,\n  extensions: [\n    StarterKit,\n    Document,\n    Text,\n    TextStyle,\n    FontFamily,\n    Color,\n    Typography,\n    Underline,\n    Subscript,\n    Superscript,\n    TextAlign.configure({\n      types: ['heading', 'paragraph'],\n    }),\n    Link.configure({\n      openOnClick: true,\n    }),\n    CharacterCount.configure({\n      limit: limit,\n    }),\n    Placeholder.configure({\n      // Use a placeholder:\n      placeholder: 'Write something …',\n      // Use different placeholders depending on the node type:\n      // placeholder: ({ node }) => {\n      //   if (node.type.name === 'heading') {\n      //     return 'What’s the title?'\n      //   }\n\n      //   return 'Can you add some further context?'\n      // },\n    }),\n  ],\n  onUpdate: ({editor}) => {\n    newsStore.newsArticleContentTiptop = editor.getJSON()\n\n    // Auto-save -> triggered on every change,\n    // currently disabled. Needs to be throttled.\n    //\n    // axios.post('/news/save', { id: newsStore.newsArticleIdTiptop, body:newsStore.newsArticleContentTiptop, title:newsStore.newsArticleTitleTiptop })\n  },\n  autofocus: true,\n  editorProps: {\n    attributes: {\n      class: 'h-auto min-h-[12rem] max-h-[96rem] overflow-y-auto block w-full p-2.5 focus:outline-none',\n    },\n  },\n})\n\n// onBeforeUnmount(() => {\n//     // this isn't working, I think it's\n//     // needed for the history extension.\n//     editor.destroy()\n// })\n\nHistory.configure({\n  depth: 10,\n})\n\n</script>\n\n<style scoped>\n.tiptap {\n  > * + * {\n    margin-top: 0.75em;\n  }\n}\n\n.character-count {\n  margin-top: 1rem;\n  margin-left: 1rem;\n  color: #868e96;\n}\n\n/* Placeholder (at the top) */\n.tiptap p.is-editor-empty:first-child::before {\n  content: attr(data-placeholder);\n  float: left;\n  color: #adb5bd;\n  pointer-events: none;\n  height: 0;\n}\n\n\n/* Placeholder (on every new line) */\n/*.tiptap p.is-empty::before {\n  content: attr(data-placeholder);\n  float: left;\n  color: #adb5bd;\n  pointer-events: none;\n  height: 0;\n}*/\n</style>\n","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-10.use[1]!../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-10.use[2]!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./TipTapNewsStoryEditor.vue?vue&type=style&index=0&id=13c08742&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./TipTapNewsStoryEditor.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TipTapNewsStoryEditor.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./TipTapNewsStoryEditor.vue?vue&type=style&index=0&id=13c08742&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-13c08742\"]])\n\nexport default __exports__","<template>\n\n\n\n  <!-- The category select -->\n  <div class=\"flex flex-col py-4 px-6\">\n\n    <div v-if=\"!newsStore.isLoadingCategoryCityData\" class=\"bg-gray-200 rounded-lg\">\n      <div class=\"px-4 py-4 font-semibold text-xs uppercase\">Category</div>\n      <div class=\"px-4 pb-4\">\n        <label for=\"categorySelect\" class=\"text-sm font-medium text-gray-900 dark:text-gray-300 pr-4\">Select Category:</label>\n        <select required\n                v-model=\"newsStore.selectedCategory\"\n                id=\"categorySelect\"\n                class=\"rounded\"\n                @change=\"onCategoryChange\"\n        >\n          <option :value=\"{ id: null }\" >Choose a category</option>\n          <option v-for=\"category in newsStore.categories\" :key=\"category.id\" :value=\"category\">{{ category.name }}</option>\n        </select>\n      </div>\n      <div v-if=\"newsStore.selectedCategory.name\" class=\"flex flex-col justify-left px-4 py-4\">\n        <div class=\"font-semibold text-xs uppercase text-indigo-900\">{{newsStore.selectedCategory.name}}</div>\n        <div v-if=\"newsStore.selectedCategory\" class=\"px-6 py-4 text-indigo-800\">\n          {{newsStore.selectedCategory.description}}\n        </div>\n      </div>\n    </div>\n    <div v-if=\"newsStore.isLoadingCategoryCityData\" class=\"bg-gray-200 rounded-lg p-10\">\n      <span class=\"loading loading-spinner text-info\"></span>\n    </div>\n\n\n\n    <!-- The location select -->\n    <div v-if=\"newsStore.selectedCategory && newsStore.selectedCategory.id === 3\" class=\"mt-8 bg-gray-200 rounded-lg\">\n      <div v-if=\"!newsStore.isLoadingCategoryCityData\">\n      <div class=\"px-4 py-4 font-semibold text-xs uppercase\">Location</div>\n      <div class=\"flex flex-col pb-4 px-6\">\n        <div class=\"text-sm font-semibold text-gray-900 dark:text-gray-300 py-1\">Please select the city, town, province or electoral district:</div>\n        <div class=\"w-full mr-4 relative\">\n\n          <input\n              v-model=\"searchInputModel\"\n              type=\"search\"\n              class=\"w-full rounded-lg mt-2\"\n              placeholder=\"Search...\"\n              @focus=\"newsStore.citySelectDropdownVisible = true\"\n              @blur=\"handleInputBlur\"\n              @keydown=\"handleKeydown\"\n          />\n          <span v-if=\"newsStore.selectedLocation\" class=\"relative xl:absolute inset-y-0 right-0 flex items-center pr-4\">\n                <!-- Styled display text -->\n                <span class=\"text-gray-500\">{{ newsStore.displayText }}</span>\n              </span>\n\n          <ul v-if=\"newsStore.citySelectDropdownVisible && newsStore.locationSearchItems.length > 0\" class=\"absolute z-10 w-full bg-white mt-1 max-h-60 rounded-lg shadow-lg overflow-auto border border-gray-200\">\n            <li v-for=\"(location, index) in newsStore.filteredLocationSearchItems\"\n                :key=\"location.id\"\n                  class=\"cursor-pointer select-none relative py-2 pl-3 pr-9 hover:bg-gray-100\"\n                  :class=\"{'bg-gray-200': index === newsStore.focusedIndex.value, 'dropdown-item': true, [`dropdown-item-${index}`]: true}\"\n                  @click=\"inspectLocation(location)\"\n              >\n\n                <span v-if=\"location.type === 'city' || location.type === 'town'\">{{ location.name }}, <span class=\"text-gray-600\">{{ location.province_name }}</span></span>\n                <span v-if=\"location.type === 'province'\">{{ location.name }} &nbsp;&nbsp;<span class=\"uppercase text-xs font-semibold text-gray-600\">Province</span></span>\n                <span v-if=\"location.type === 'territory'\">{{ location.name }} &nbsp;&nbsp;<span class=\"uppercase text-xs font-semibold text-gray-600\">Territory</span></span>\n                <span v-if=\"location.type === 'federalElectoralDistrict'\">{{ location.name }} &nbsp;&nbsp;<span class=\"uppercase text-xs font-semibold text-gray-600\">Federal Electoral District</span></span>\n                <span v-if=\"location.type === 'subnationalElectoralDistrict'\">{{ location.name }}</span>\n\n              </li>\n            </ul>\n            <div\n                v-if=\"newsStore.formErrors.type\"\n                class=\"text-sm text-red-600\"\n            >\n              {{ newsStore.formErrors.type }}\n            </div>\n          </div>\n        </div>\n    </div>\n      <div v-if=\"newsStore.isLoadingCategoryCityData\" class=\"p-10\">\n        <span class=\"loading loading-spinner text-info\"></span>\n      </div>\n    </div>\n\n\n\n\n\n\n\n    <!-- The sub-category select -->\n    <div v-if=\"!newsStore.isLoadingCategoryCityData\" class=\"mt-8 bg-gray-200 rounded-lg\">\n      <div class=\"px-4 py-4 font-semibold text-xs uppercase\">Sub-category</div>\n      <div class=\"flex flex-wrap py-4 px-4\">\n        <div class=\"flex flex-col\">\n          <label for=\"subcategorySelect\" class=\"text-sm font-medium text-gray-900 dark:text-gray-300 pr-4\">Select Subcategory:</label>\n          <span class=\"italic text-sm font-thin text-gray-900 dark:text-gray-300\">(optional)</span>\n        </div>\n        <div v-if=\"newsStore.selectedCategory\" class=\"flex flex-wrap\">\n          <select v-model=\"newsStore.selectedSubcategory\" @change=\"onSubcategoryChange\" id=\"subcategorySelect\" class=\"rounded\">\n            <option :value=\"{ id: null }\">Choose a sub-category</option> <!-- Add a blank option -->\n            <option v-for=\"subcategory in newsStore.subcategories\" :key=\"subcategory.id\" :value=\"subcategory\">{{ subcategory.name }}</option>\n          </select>\n        </div>\n    </div>\n\n    <div v-if=\"newsStore.selectedSubcategory\" class=\"flex-col justify-left py-4 px-4\">\n      <div v-if=\"newsStore.selectedSubcategory\" class=\"font-semibold text-xs uppercase text-indigo-900\">{{newsStore.selectedSubcategory.name}}</div>\n      <div v-if=\"newsStore.selectedSubcategory\" class=\"px-6 py-4 text-indigo-800\">\n        {{newsStore.selectedSubcategory.description}}\n      </div>\n    </div>\n    </div>\n    <div v-if=\"newsStore.isLoadingCategoryCityData\" class=\"mt-8 p-10 bg-gray-200 rounded-lg\">\n      <span class=\"loading loading-spinner text-info\"></span>\n    </div>\n\n\n    <div\n        v-if=\"newsStore.formErrors.news_category_id\"\n        class=\"text-sm text-red-600\"\n    >\n      {{ newsStore.formErrors.news_category_id }}\n    </div>\n\n  </div>\n\n</template>\n\n<script setup>\nimport { Inertia } from '@inertiajs/inertia'\nimport { usePage } from '@inertiajs/inertia-vue3';\nimport { watch, ref, computed, onMounted } from 'vue'\nimport { debounce, throttle } from 'lodash'\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\nimport { useNewsStore } from '@/Stores/NewsStore'\n\nconst appSettingStore = useAppSettingStore()\nconst newsStore = useNewsStore()\n\n// Define props and other logic\nlet props = defineProps({\n  newsStory: Object,\n  country: Object,\n  categories: Object,\n  locationSearch: Object,\n  filters: Object,\n  errors: Object,\n  searchPath: String,\n});\n// const { props } = usePage();\n\n// Watch for changes in locationSearch prop and update the store\n// watch(() => props.locationSearch, (newLocationSearch) => {\n//   newsStore.locationSearch = newLocationSearch;\n// }, { deep: true });\n//\n// // If you need to watch the filters as well\n// watch(() => props.filters, (newFilters) => {\n//   if (newFilters && newFilters.search !== undefined) {\n//     newsStore.search = newFilters.search;\n//   }\n// }, { deep: true });\n\nonMounted(async() => {\n  // Initialize newsStore.search with the initial search value from props\n  // newsStore.search = props.filters.search;\n  await newsStore.fetchLocationsForSearch() // Fetch locations when the component is mounted\n});\n\nconst filteredLocations = newsStore.filteredItems; // This is now a reactive property you can use in your template\n\nconst onCategoryChange = () => {\n  newsStore.news_category_id = newsStore.selectedCategory.id;\n  newsStore.news_category_sub_id = null\n  newsStore.getSubcategories();\n  newsStore.getSelectedSubcategory();\n  if (newsStore.selectedCategory.id !== 3) {\n    newsStore.city_id = null\n    newsStore.province_id = null\n  }\n};\n\nconst onSubcategoryChange = () => {\n  // Assuming selectedSubcategory is already updated through v-model\n  newsStore.news_category_sub_id = newsStore.selectedSubcategory.id; // Directly set the subcategory ID\n};\n\n// const selectLocation = (location) => {\n//   console.log('selectLocation called with:', location);\n//   newsStore.updateSelectedLocation(location);\n// };\nconst inspectLocation = (location) => {\n  newsStore.updateSelectedLocation(location);\n};\n\nfunction selectLocation(location) {\n  newsStore.updateSelectedLocation(location);\n}\n// watch(newsStore.focusedIndex, (newValue) => {\n//   if (newValue >= 0) {\n//     const item = document.querySelector(`.dropdown-item-${newValue}`);\n//     item?.scrollIntoView({ block: 'center' });\n//   }\n// });\n\nconst searchInputModel = computed({\n  get() {\n    return newsStore.searchInput; // Use the getter from the store\n  },\n  set(value) {\n    newsStore.setSearchInput(value); // Use the setter action from the store\n  }\n});\n//\n// const searchInput = computed({\n//   get() {\n//     // If there's a selected location, show its name; otherwise, show the search value\n//     const location = newsStore.selectedLocation;\n//     if (location) {\n//       if (location.type === 'city' || location.type === 'town') {\n//         return `${location.name}, ${location.province_name}`;\n//       }\n//       return location.name;\n//     }\n//     return newsStore.search;\n//   },\n//   set(value) {\n//     // Update the search value in the store when the user types\n//     newsStore.search = value;\n//\n//     // Optionally, clear or update selectedLocation if necessary\n//     // For example, if you want to clear the selected location when the user types:\n//     if (newsStore.selectedLocation?.name !== value) {\n//       newsStore.selectedLocation = null;\n//     }\n//   }\n// });\n\n// watch(() => newsStore.search, throttle((value) => {\n//   let url;\n//   if (appSettingStore.currentPage === 'newsEdit') {\n//     url = `/newsStory/${newsStore.newsStory.slug}/edit`;\n//   } else if (appSettingStore.currentPage === 'newsCreate') {\n//     url = '/newsStory/create';\n//   }\n//\n//   if (url) {\n//     Inertia.get(url, { search: value }, {\n//       preserveState: true,\n//       replace: true,\n//     });\n//   }\n// }, 300));\n\nconst showDropdown = () => {\n  newsStore.citySelectDropdownVisible = true;\n};\n\nconst handleInputBlur = () => {\n  // Delay hiding dropdown to allow click event on dropdown item to be processed\n  setTimeout(() => {\n    newsStore.citySelectDropdownVisible = false;\n  }, 200);\n};\n\nconst handleKeydown = (event) => {\n  if (event.key === 'Enter') {\n    // Prevent default action of the Enter key\n    event.preventDefault();\n\n    if (newsStore.locationSearch.length > 0 && newsStore.focusedIndex.value !== null) {\n      const selectedLocation = newsStore.locationSearch[newsStore.focusedIndex.value];\n      if (selectedLocation) {\n        newsStore.selectedLocation = selectedLocation; // Set the selected location\n        newsStore.updateSelectedLocation(selectedLocation); // Update the location in the store\n        newsStore.citySelectDropdownVisible = false; // Close the dropdown\n      }\n    }\n  }\n  // Handle other keydown events if necessary\n};\n\n</script>\n\n<style scoped>\n.select-container {\n  max-width: 100%; /* Adjust the maximum width as needed */\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n}\n</style>\n","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-10.use[1]!../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-10.use[2]!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./CategoryCitySelector.vue?vue&type=style&index=0&id=3728640d&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./CategoryCitySelector.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CategoryCitySelector.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./CategoryCitySelector.vue?vue&type=style&index=0&id=3728640d&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-3728640d\"]])\n\nexport default __exports__","import script from \"./ValidationErrors.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ValidationErrors.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { computed } from 'vue';\nimport { usePage } from '@inertiajs/inertia-vue3';\n\nconst errors = computed(() => usePage().props.value.errors);\nconst hasErrors = computed(() => Object.keys(errors.value).length > 0);\n</script>\n\n<template>\n    <div v-if=\"hasErrors\">\n        <div class=\"font-medium text-red-600\">\n            Whoops! Something went wrong.\n        </div>\n\n        <ul class=\"mt-3 list-disc list-inside text-sm text-red-600\">\n            <li v-for=\"(error, key) in errors\" :key=\"key\">\n                {{ error }}\n            </li>\n        </ul>\n    </div>\n</template>\n","import script from \"./Create.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Create.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n\n  <Head title=\"Create News Post\"/>\n\n  <div class=\"place-self-center flex flex-col gap-y-3\">\n    <div id=\"topDiv\" class=\"bg-white text-black dark:bg-gray-800 dark:text-gray-50 p-5 mb-10\">\n\n      <Message v-if=\"appSettingStore.showFlashMessage\" :flash=\"$page.props.flash\"/>\n\n      <div class=\"flex flex-row justify-between mt-6\">\n        <h2 class=\"text-2xl font-semibold leading-tight\">\n          Create News Story\n        </h2>\n        <div class=\"flex justify-end space-x-2\">\n\n        </div>\n      </div>\n\n      <CategoryCitySelector\n          :locationSearch=\"locationSearch\"\n          :filters=\"filters\"\n          :searchPath=\"`/newsStory/create`\"\n      />\n\n      <div class=\"p-6 border-b border-gray-200\">\n        <form @submit.prevent=\"submit\">\n          <div class=\"mb-6\">\n            <label\n                for=\"Title\"\n                class=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300\"\n            >Title</label\n            >\n            <input\n                type=\"text\"\n                v-model=\"newsStore.newsArticleTitleTiptop\"\n                name=\"title\"\n                class=\"bg-gray-50 border border-gray-300 text-gray-900 rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\"\n                placeholder=\"\"\n            />\n            <div\n                v-if=\"errors.title\"\n                class=\"text-sm text-red-600\"\n            >\n              {{ errors.title }}\n            </div>\n          </div>\n          <div class=\"mb-6\">\n            <label\n                for=\"content_json\"\n                class=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300\"\n            >Content</label>\n            <TipTapEditor v-if=\"appSettingStore.currentPage === 'newsCreate'\"/>\n            <div\n                v-if=\"errors.body\"\n                class=\"text-sm text-red-600\"\n            >\n              {{ errors.body }}\n            </div>\n          </div>\n          <div class=\" flex justify-start\">\n            <button\n                type=\"submit\"\n                class=\"h-fit text-white bg-blue-700  focus:outline-none  font-medium rounded-lg text-sm px-5 py-2.5 \"\n                :disabled=\"processing\"\n                :class=\"{ 'opacity-25': processing }\"\n            >\n              Submit\n            </button>\n            <CancelButton/>\n            <JetValidationErrors class=\"ml-4\"/>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { Inertia } from '@inertiajs/inertia'\nimport { onBeforeMount, onBeforeUnmount, onMounted, watch } from 'vue'\n// import { useForm } from '@inertiajs/inertia-vue3'\nimport { usePageSetup } from '@/Utilities/PageSetup'\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\nimport { useNewsStore } from '@/Stores/NewsStore'\nimport JetValidationErrors from '@/Jetstream/ValidationErrors'\n// import TabbableTextarea from \"@/Components/Global/TextEditor/TabbableTextarea\"\n// import Tiptap from '@/Components/Global/TextEditor/TiptapNewsStoryCreate'\nimport TipTapEditor from '@/Components/Global/TextEditor/TipTapNewsStoryEditor'\n// import Tiptap from \"@/Components/Global/TextEditor/TiptapNewsStoryEdit\"\nimport CategoryCitySelector from '@/Components/Pages/News/CategoryCitySelector.vue'\nimport Message from '@/Components/Global/Modals/Messages'\nimport CancelButton from '@/Components/Global/Buttons/CancelButton.vue'\n\nusePageSetup('newsCreate')\n\nconst appSettingStore = useAppSettingStore()\nconst newsStore = useNewsStore()\n\nlet props = defineProps({\n  country: Object,\n  categories: Object,\n  locationSearch: Object,\n  filters: Object,\n  can: Object,\n  errors: Object,\n  processing: false,\n})\n\nconst errors = props.errors; // This will contain the error messages\n\nonMounted(() => {\n  // Load props into the store\n  newsStore.country = props.country\n  newsStore.categories = props.categories\n  newsStore.filters = props.filters\n  newsStore.locationSearch = props.locationSearch\n})\n\n// Watch for changes in relevant store states\nwatch(() => [newsStore.news_category_id, newsStore.news_category_sub_id], () => {\n  newsStore.setSelectedCategory()\n  // You can also watch for other relevant states if they affect setSelectedCategory\n})\n//\n// const handleCategoryUpdate = (newCategory) => {\n//   form.news_category_id = newCategory ? newCategory.id : null\n// }\n//\n// const handleSubcategoryUpdate = (newSubcategory) => {\n//   form.news_category_sub_id = newSubcategory ? newSubcategory.id : null\n// }\n//\n// const handleCityUpdate = (newCity) => {\n//   if (newCity) {\n//     form.city_id = newCity.city_id\n//     form.province_id = newCity.id\n//     form.federal_electoral_district_id = newCity.federal_electoral_district_id\n//     form.type = newCity.type\n//   } else {\n//     form.city_id = null\n//     form.province_id = null\n//     form.federal_electoral_district_id = null\n//     form.type = null\n//   }\n// }\n\n// const handleSearch = (value) => {\n//   Inertia.get('/newsStory/create', {search: value}, {\n//     preserveState: true,\n//     replace: true,\n//   })\n// }\n\n// let submit = () => {\n//   form.body = newsStore.newsArticleContentTiptop\n//   form.post(route('newsStory.store'))\n// }\n\n\n\n\nconst submit = () => {\n  props.processing = true\n  // if no category selected alert\n\n  // Check if selectedSubcategory.id is null, and if so, set it to a default value or handle it as needed\n  const subcategoryId = newsStore.selectedSubcategory ? newsStore.selectedSubcategory.id : null;\n\n  const data = {\n    title: newsStore.newsArticleTitleTiptop,\n    // body: newsStore.newsArticleContentTiptop,\n    // body: JSON.stringify(newsStore.content_json),\n    content_json: JSON.stringify(newsStore.newsArticleContentTiptop),\n    news_category_id: newsStore.selectedCategory.id,\n    news_category_sub_id: subcategoryId, // Use the value after handling null\n    city_id: newsStore.selectedLocation.city_id,\n    province_id: newsStore.selectedLocation.province_id,\n    federal_electoral_district_id: newsStore.selectedLocation.federal_electoral_district_id,\n    subnational_electoral_district_id: newsStore.selectedLocation.subnational_electoral_district_id,\n    type: newsStore.selectedLocation.type,\n  }\n\n  console.log('data submitted.')\n  Inertia.post(route('newsStory.store'), data)\n}\n\n\nonBeforeMount(() => {\n  newsStore.newsArticleTitleTiptop = ''\n  newsStore.newsArticleContentTiptop = ''\n  newsStore.content_json = null\n})\n\nonBeforeUnmount(() => {\n  newsStore.reset()\n})\n\n\n</script>\n"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","initialState","newsStory","newsArticleIdTiptop","newsArticleTitleTiptop","newsArticleContentTiptop","content_json","news_category_id","news_category_sub_id","categories","subcategories","city_id","province_id","federal_electoral_district_id","subnational_electoral_district_id","displayText","country","selectedCategory","selectedSubcategory","selectedLocation","locationSearchItems","citySelectDropdownVisible","focusedIndex","searchQuery","filters","search","formErrors","isLoadingCategoryCityData","newsPersons","useNewsStore","defineStore","state","actions","assign","this","loadNewsStory","updateNewsStoryData","relatedData","id","title","JSON","parse","setSelectedCategory","_this","matchingCategory","find","category","getSubcategories","getSelectedSubcategory","setSelectedLocation","resetLocationIds","_this2","news_category_subs","console","log","_this3","matchingSubcategory","subcategory","fetchLocationsForSearch","_this4","_callee","response","_context","fetch","ok","json","statusText","t0","_this5","matchingLocation","location","subnational_electoral_district","updateNewsStoryAndSetLocation","_this6","_callee2","_context2","updateSelectedLocation","getDisplayTextForType","setSearchInput","_this$selectedLocatio","updateSearch","query","fetchNewsPersons","_this7","_callee3","_context3","getters","filteredLocationSearchItems","filter","item","toLowerCase","includes","searchInput","concat","province_name","locationType","usePageSetup","pageName","userStore","useUserStore","appSettingStore","useAppSettingStore","videoPlayerStore","useVideoPlayerStore","currentPage","showFlashMessage","pageIsHidden","isMobile","window","innerWidth","fullPage","ott","showOttButtons","makeVideoTopRight","pageReload","pageWasReloaded","reload","Inertia","on","event","shouldScrollToTop","requestAnimationFrame","topDiv","document","getElementById","scrollIntoView","behavior","scrollTo","setPrevUrl","noLayout","___CSS_LOADER_EXPORT___","module","props","__props","cancel","prevUrl","url","visit","isCreator","clearFlashMessage","computed","flash","success","message","warning","_ref","post","route","textColor","toggleTextColor","color","editor","chain","focus","unsetColor","run","setColor","setLink","previousUrl","getAttributes","href","prompt","extendMarkRange","unsetLink","newsStore","watch","newContent","commands","setContent","immediate","Editor","content","extensions","StarterKit","Document","Text","TextStyle","FontFamily","Color","Typography","Underline","Subscript","Superscript","TextAlign","configure","types","Link","openOnClick","CharacterCount","limit","Placeholder","placeholder","onUpdate","getJSON","autofocus","editorProps","attributes","class","History","depth","options","locals","onMounted","filteredItems","onCategoryChange","onSubcategoryChange","searchInputModel","get","set","handleInputBlur","setTimeout","handleKeydown","preventDefault","locationSearch","errors","usePage","hasErrors","submit","processing","subcategoryId","data","stringify","onBeforeMount","onBeforeUnmount"],"sourceRoot":""}
{"version":3,"file":"js/6589.js","mappings":"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","sources":["webpack:///./resources/js/Stores/TeamStore.js","webpack:///./resources/js/Pages/Shows/Create.vue?4cbe","webpack:///./resources/js/Components/Buttons/CancelButton.vue?0d53","webpack:///./resources/js/Components/Buttons/CancelButton.vue","webpack:///./resources/js/Jetstream/ValidationErrors.vue?5fdc","webpack:///./resources/js/Jetstream/ValidationErrors.vue","webpack:///./resources/js/Components/Modals/CheckboxNotification.vue?6147","webpack:///./resources/js/Components/Modals/CheckboxNotification.vue","webpack:///./resources/js/Pages/Shows/Create.vue","webpack:///./resources/js/Pages/Shows/Create.vue?8bf3","webpack:///./resources/js/Pages/Shows/Create.vue?091d"],"sourcesContent":["import {defineStore} from \"pinia\";\nimport {Inertia} from \"@inertiajs/inertia\";\n\nexport const useTeamStore = defineStore('teamStore', {\n    state: () => ({\n        id: 0,\n        name: '',\n        description: '',\n        slug: '',\n        totalSpots: '',\n        memberSpots: '',\n        teamCreator: [],\n        teamLeader: [],\n        members: [],\n        managers: [],\n        activeShow: [],\n        activeEpisode: [],\n        creators: [],\n        showModal: Boolean,\n        confirmDialog: false,\n        confirmManagerDialog: false,\n        selectedManagerName: '',\n        selectedManagerId: 0,\n        addManager: false,\n        removeManager: false,\n        deleteMemberName: '',\n        deleteMemberId: 0,\n        noteEdit: 0,\n        note: '',\n        saveNoteProcessing: Boolean,\n            // on the show episode manage page\n            // turn on the go live div\n            goLiveDisplay: false,\n        can: [],\n        openComponent: 'teamShows',\n    }),\n\n    actions: {\n        // async fill() {\n        //     let r = await import('@/Json/team.json');\n        //     this.$state = r.default;\n        // },\n        setActiveTeam(team) {\n            this.id = team.id;\n            this.name = team.name;\n            this.description = team.description;\n            this.slug = team.slug;\n            this.totalSpots = team.totalSpots;\n            this.memberSpots = team.memberSpots;\n        },\n        setActiveShow(show) {\n            this.activeShow = show;\n        },\n        setActiveEpisode(episode) {\n            this.activeShow = episode;\n        },\n        // getCreators() {\n        //     Inertia.reload({ only: ['creators'] })\n        // },\n        deleteTeamMemberCancel() {\n            this.confirmDialog = false;\n        },\n        confirmTeamManagerCancel() {\n            this.confirmManagerDialog = false;\n        },\n        // loadTeamMembers(members){\n        //     this.members = members;\n        // }\n        deleteTeamMember() {\n            Inertia.visit(route('teams.removeTeamMember'), {\n                method: 'post',\n                data: {\n                    user_id: this.deleteMemberId,\n                    team_id: this.id,\n                    team_slug: this.slug\n                },\n            })\n        },\n        addTeamManager() {\n            Inertia.visit(route('teams.addTeamManager'), {\n                method: 'post',\n                data: {\n                    user_id: this.selectedManagerId,\n                    team_id: this.id,\n                    team_slug: this.slug\n                },\n            })\n            this.confirmManagerDialog = false;\n        },\n        removeTeamManager() {\n            Inertia.visit(route('teams.removeTeamManager'), {\n                method: 'post',\n                data: {\n                    user_id: this.selectedManagerId,\n                    team_id: this.id,\n                    team_slug: this.slug\n                },\n            })\n            this.confirmManagerDialog = false;\n        },\n        toggleGoLiveDisplay() {\n            this.goLiveDisplay = ! this.goLiveDisplay;\n        }\n    },\n\n    getters: {\n        spotsRemaining() {\n            if (this.totalSpots - this.memberSpots < 1){\n                return 0\n            }\n            return this.totalSpots - this.memberSpots;\n        },\n    }\n});\n\n\n// Another option for declaring specific data to return:\n// let data = r.default;\n//\n// import('@/Json/team.json').then(r => {\n// this.$patch({\n//     name: data.name,\n//     spots: data.spots,\n//     members: data.members\n// });\n// });\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".status-1[data-v-39e83af8]{color:green}.status-2[data-v-39e83af8]{color:blue}.status-3[data-v-39e83af8]{color:purple}.status-4[data-v-39e83af8]{color:orange}.status-5[data-v-39e83af8]{color:red}.status-6[data-v-39e83af8]{color:#a9a9a9;font-style:italic}.status-7[data-v-39e83af8],.status-8[data-v-39e83af8]{color:#000;font-style:italic}.status-10[data-v-39e83af8],.status-9[data-v-39e83af8]{color:red;font-style:italic}.status-11[data-v-39e83af8]{color:#a9a9a9}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/Pages/Shows/Create.vue\"],\"names\":[],\"mappings\":\"AA6TA,2BACI,WACJ,CACA,2BACI,UACJ,CACA,2BACI,YACJ,CACA,2BACI,YACJ,CACA,2BACI,SACJ,CACA,2BACI,aAAe,CACf,iBACJ,CAKA,sDAHI,UAAY,CACZ,iBAKJ,CAKA,uDAHI,SAAU,CACV,iBAKJ,CACA,4BACI,aACJ\",\"sourcesContent\":[\"<template>\\n    <Head title=\\\"Create Show\\\"/>\\n\\n    <div class=\\\"place-self-center flex flex-col gap-y-3\\\">\\n        <div id=\\\"topDiv\\\" class=\\\"bg-white text-black dark:bg-gray-800 dark:text-gray-50 p-5 mb-10\\\">\\n\\n            <Message v-if=\\\"userStore.showFlashMessage\\\" :flash=\\\"$page.props.flash\\\"/>\\n\\n            <div class=\\\"flex justify-between mt-3 mb-6\\\">\\n                <div class=\\\"text-3xl\\\">Create Show</div>\\n                <div>\\n                    <CancelButton />\\n                </div>\\n            </div>\\n\\n            <div class=\\\"bg-orange-700 text-white w-full p-6\\\"><span class=\\\"font-bold\\\">NOTE: </span>\\n                We are working on an episode poster and video uploader for this page. For the time being, please\\n                go to the show <span class=\\\"font-bold\\\">EDIT</span> page after you create the show to add a video and a poster.\\n            </div>\\n\\n            <form @submit.prevent=\\\"submit\\\" class=\\\"max-w-md mx-auto mt-8\\\">\\n                    <div class=\\\"mb-6\\\">\\n                        <label class=\\\"block mb-2 uppercase font-bold text-xs dark:text-gray-200\\\"\\n                               for=\\\"name\\\"\\n                        >\\n                            Team\\n                        </label>\\n                        <select class=\\\"border border-gray-400 p-2 w-full rounded-lg block mb-2 uppercase font-bold text-xs text-gray-800\\\"\\n                                v-model=\\\"form.team_id\\\"\\n                                required\\n                        >\\n                            <option\\n                                v-for=\\\"team in props.teams.data\\\"\\n                                :key=\\\"team.id\\\"\\n                                :value=\\\"team.id\\\"\\n                                class=\\\"bg-white text-black border-b dark:text-gray-50 dark:bg-gray-800 dark:border-gray-600\\\"\\n                                :class=\\\"'status-' + team.status.id\\\"\\n                            >\\n                                {{ team.name }} ({{ team.status.status }})\\n                            </option>\\n\\n                        </select>\\n\\n\\n                        <div v-if=\\\"form.errors.team_id\\\" v-text=\\\"form.errors.team_id\\\" class=\\\"text-xs text-red-600 mt-1\\\"></div>\\n                    </div>\\n                <div class=\\\"mb-6\\\">\\n                    <label class=\\\"block mb-2 uppercase font-bold text-xs dark:text-gray-200\\\"\\n                           for=\\\"name\\\"\\n                    >\\n                        Show Name\\n                    </label>\\n\\n                    <input v-model=\\\"form.name\\\"\\n                           class=\\\"bg-gray-50 border border-gray-400 text-gray-900 text-sm p-2 w-full rounded-lg focus:ring-blue-500 focus:border-blue-500\\\"\\n                           type=\\\"text\\\"\\n                           name=\\\"name\\\"\\n                           id=\\\"name\\\"\\n                           required\\n                    >\\n                    <div v-if=\\\"form.errors.name\\\" v-text=\\\"form.errors.name\\\" class=\\\"text-xs text-red-600 mt-1\\\"></div>\\n                </div>\\n\\n                <div class=\\\"mb-6\\\">\\n                    <label class=\\\"block mb-2 uppercase font-bold text-xs dark:text-gray-200\\\"\\n                           for=\\\"category\\\"\\n                    >\\n                        Category\\n                    </label>\\n\\n\\n                    <select class=\\\"border border-gray-400 text-gray-800 p-2 w-full rounded-lg block mb-2 uppercase font-bold text-xs \\\"\\n                            v-model=\\\"form.category\\\" @change=\\\"chooseCategory($event)\\\"\\n                    >\\n                        <option v-for=\\\"category in props.categories\\\"\\n                                :key=\\\"category.id\\\" :value=\\\"category.id\\\">{{category.name}}</option>\\n\\n\\n                    </select>\\n                    <div v-if=\\\"form.errors.category\\\" v-text=\\\"form.errors.category\\\"\\n                         class=\\\"text-xs text-red-600 mt-1\\\"></div>\\n\\n                    {{showCategoryDescription}}\\n                </div>\\n\\n                <div class=\\\"mb-6\\\">\\n                    <label class=\\\"block mb-1 uppercase font-bold text-xs dark:text-gray-200\\\"\\n                           for=\\\"sub_category\\\"\\n                    >\\n                        Sub-category\\n                    </label>\\n                    <div class=\\\"mb-2 text-sm text-orange-600\\\">Sub-categories are coming soon!</div>\\n\\n\\n                    <select disabled class=\\\"border border-gray-400 text-gray-800 disabled:bg-gray-300 dark:disabled:bg-gray-600 disabled:cursor-not-allowed p-2 w-full rounded-lg block mb-2 uppercase font-bold text-xs\\\"\\n                            v-model=\\\"form.sub_category\\\"\\n                    >\\n                        <option value=\\\"1\\\">Option</option>\\n                    </select>\\n                    <div v-if=\\\"form.errors.sub_category\\\" v-text=\\\"form.errors.sub_category\\\"\\n                         class=\\\"text-xs text-red-600 mt-1\\\"></div>\\n                </div>\\n\\n                <div class=\\\"mb-6\\\">\\n                    <label class=\\\"block mb-2 uppercase font-bold text-xs dark:text-gray-200\\\"\\n                           for=\\\"description\\\"\\n                    >\\n                        Description\\n                    </label>\\n                    <textarea v-model=\\\"form.description\\\"\\n                              class=\\\"bg-gray-50 border border-gray-400 text-gray-900 text-sm p-2 w-full rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\\\"\\n                              type=\\\"text\\\"\\n                              name=\\\"description\\\"\\n                              id=\\\"description\\\"\\n                              required\\n                    ></textarea>\\n                    <div v-if=\\\"form.errors.description\\\" v-text=\\\"form.errors.description\\\" class=\\\"text-xs text-red-600 mt-1\\\"></div>\\n                </div>\\n\\n                <div class=\\\"mb-6\\\">\\n                    <label class=\\\"block mb-2 uppercase font-bold text-xs dark:text-gray-200\\\"\\n                           for=\\\"name\\\"\\n                    >\\n                        Website URL\\n                    </label>\\n\\n                    <input v-model=\\\"form.www_url\\\"\\n                           class=\\\"border border-gray-400 p-2 w-full rounded-lg text-black\\\"\\n                           type=\\\"text\\\"\\n                           name=\\\"www_url\\\"\\n                           id=\\\"www_url\\\"\\n                    >\\n                    <div v-if=\\\"form.errors.www_url\\\" v-text=\\\"form.errors.www_url\\\"\\n                         class=\\\"text-xs text-red-600 mt-1\\\"></div>\\n                </div>\\n\\n                <div class=\\\"mb-6\\\">\\n                    <label class=\\\"block mb-2 uppercase font-bold text-xs dark:text-gray-200\\\"\\n                           for=\\\"name\\\"\\n                    >\\n                        Instagram Handle\\n                    </label>\\n\\n                    <input v-model=\\\"form.instagram_name\\\"\\n                           class=\\\"border border-gray-400 p-2 w-full rounded-lg text-black\\\"\\n                           type=\\\"text\\\"\\n                           name=\\\"instagram_name handle\\\"\\n                           id=\\\"instagram_name\\\"\\n                    >\\n                    <div v-if=\\\"form.errors.instagram_name\\\" v-text=\\\"form.errors.instagram_name\\\"\\n                         class=\\\"text-xs text-red-600 mt-1\\\"></div>\\n                </div>\\n\\n                <div class=\\\"mb-6\\\">\\n                    <label class=\\\"block mb-2 uppercase font-bold text-xs dark:text-gray-200\\\"\\n                           for=\\\"name\\\"\\n                    >\\n                        Telegram URL\\n                    </label>\\n\\n                    <input v-model=\\\"form.telegram_url\\\"\\n                           class=\\\"border border-gray-400 p-2 w-full rounded-lg text-black\\\"\\n                           type=\\\"text\\\"\\n                           name=\\\"telegram_url\\\"\\n                           id=\\\"telegram_url\\\"\\n                    >\\n                    <div v-if=\\\"form.errors.telegram_url\\\" v-text=\\\"form.errors.telegram_url\\\"\\n                         class=\\\"text-xs text-red-600 mt-1\\\"></div>\\n                </div>\\n\\n                <div class=\\\"mb-6\\\">\\n                    <label class=\\\"block mb-2 uppercase font-bold text-xs dark:text-gray-200\\\"\\n                           for=\\\"name\\\"\\n                    >\\n                        Twitter @\\n                    </label>\\n\\n                    <input v-model=\\\"form.twitter_handle\\\"\\n                           class=\\\"border border-gray-400 p-2 w-full rounded-lg text-black\\\"\\n                           type=\\\"text\\\"\\n                           name=\\\"twitter_handle\\\"\\n                           id=\\\"twitter_handle\\\"\\n                    >\\n                    <div v-if=\\\"form.errors.twitter_handle\\\" v-text=\\\"form.errors.twitter_handle\\\"\\n                         class=\\\"text-xs text-red-600 mt-1\\\"></div>\\n                </div>\\n\\n                <div class=\\\"mb-6\\\">\\n                    <label class=\\\"block mb-2 uppercase font-bold text-xs dark:text-gray-200\\\"\\n                           for=\\\"notes\\\"\\n                    >\\n                        Notes (Only your team members see these notes, they are not public)\\n                    </label>\\n                    <textarea v-model=\\\"form.notes\\\"\\n                              class=\\\"bg-gray-50 border border-gray-400 text-gray-900 text-sm p-2 w-full rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\\\"\\n                              type=\\\"text\\\"\\n                              name=\\\"notes\\\"\\n                              id=\\\"notes\\\"\\n                    ></textarea>\\n                    <div v-if=\\\"form.errors.notes\\\" v-text=\\\"form.errors.notes\\\" class=\\\"text-xs text-red-600 mt-1\\\"></div>\\n                </div>\\n\\n                <input v-model=\\\"form.user_id\\\" hidden>\\n                <div class=\\\"flex justify-between mb-6\\\">\\n                    <JetValidationErrors class=\\\"mr-4\\\" />\\n                    <button\\n                        type=\\\"submit\\\"\\n                        class=\\\"h-fit bg-blue-600 hover:bg-blue-500 text-white rounded py-2 px-4\\\"\\n                        :disabled=\\\"form.processing\\\"\\n                    >\\n                        Submit\\n                    </button>\\n                </div>\\n\\n            </form>\\n\\n            <CheckboxNotification />\\n\\n    </div>\\n    </div>\\n</template>\\n\\n<script setup>\\nimport { onBeforeMount, onMounted, ref } from 'vue'\\nimport {useForm, usePage} from \\\"@inertiajs/inertia-vue3\\\"\\nimport { useVideoPlayerStore } from \\\"@/Stores/VideoPlayerStore.js\\\"\\nimport { useTeamStore } from \\\"@/Stores/TeamStore.js\\\"\\nimport { useUserStore } from \\\"@/Stores/UserStore.js\\\";\\nimport { useNotificationStore } from \\\"@/Stores/NotificationStore.js\\\";\\nimport Message from \\\"@/Components/Modals/Messages\\\";\\nimport JetValidationErrors from '@/Jetstream/ValidationErrors.vue';\\nimport {Inertia} from \\\"@inertiajs/inertia\\\";\\nimport CancelButton from \\\"@/Components/Buttons/CancelButton.vue\\\";\\nimport CheckboxNotification from \\\"@/Components/Modals/CheckboxNotification.vue\\\";\\n\\nlet videoPlayerStore = useVideoPlayerStore()\\nlet teamStore = useTeamStore()\\nlet userStore = useUserStore()\\nlet notificationStore = useNotificationStore()\\n\\nlet props = defineProps({\\n    teams: Object,\\n    userId: Number,\\n    categories: Object,\\n    subCategories: Object,\\n})\\n\\nlet form = useForm({\\n    name: '',\\n    description: '',\\n    user_id: props.userId,\\n    team_id: '',\\n    category: '',\\n    sub_category: '',\\n    www_url: '',\\n    instagram_name: '',\\n    telegram_url: '',\\n    twitter_handle: '',\\n    notes: '',\\n});\\n\\nlet showCategoryDescription = ref(null);\\n\\nuserStore.currentPage = 'shows'\\nuserStore.showFlashMessage = true;\\nform.team_id = teamStore.id;\\n\\nconst checkForTeams = () => {\\n    if (props.teams.data.length === 0) {\\n        // Perform some actions if data array is empty\\n        console.log('No teams available.');\\n        notificationStore.active = true;\\n        notificationStore.title = \\\"No teams available.\\\";\\n        notificationStore.body = \\\"Please create a team before you create a show.\\\";\\n        notificationStore.buttonLabel = \\\"OKAY\\\";\\n        notificationStore.onClickAction = \\\"redirect\\\";\\n        notificationStore.uri = \\\"/shows/create\\\";\\n        notificationStore.redirectPageUri = \\\"/teams/create\\\";\\n        // Additional logic for empty array\\n    } else {\\n        // Do nothing if data array is not empty\\n        console.log('Teams are available.');\\n    }\\n};\\n\\nonMounted(() => {\\n    videoPlayerStore.makeVideoTopRight();\\n    if (userStore.isMobile) {\\n        videoPlayerStore.ottClass = 'ottClose'\\n        videoPlayerStore.ott = 0\\n    }\\n    document.getElementById(\\\"topDiv\\\").scrollIntoView()\\n    checkForTeams();\\n});\\n\\nlet submit = () => {\\n    form.post('/shows');\\n}\\n\\nfunction chooseCategory(event) {\\n    showCategoryDescription = props.categories[event.target.selectedIndex].description;\\n}\\n\\nfunction reset() {\\n    form.reset();\\n}\\n\\nfunction back() {\\n    let urlPrev = usePage().props.value.urlPrev\\n    if (urlPrev !== 'empty') {\\n        Inertia.visit(urlPrev)\\n    }\\n}\\n\\n</script>\\n\\n<style scoped>\\n.status-1 {\\n    color: green; /* Example color for status ID 1 */\\n}\\n.status-2 {\\n    color: blue; /* Example color for status ID 2 */\\n}\\n.status-3 {\\n    color: purple; /* Example color for status ID 3 */\\n}\\n.status-4 {\\n    color: orange; /* Example color for status ID 4 */\\n}\\n.status-5 {\\n    color: red; /* Example color for status ID 4 */\\n}\\n.status-6 {\\n    color: darkgray; /* Example color for status ID 4 */\\n    font-style: italic;\\n}\\n.status-7 {\\n    color: black; /* Example color for status ID 4 */\\n    font-style: italic;\\n}\\n.status-8 {\\n    color: black; /* Example color for status ID 4 */\\n    font-style: italic;\\n}\\n.status-9 {\\n    color: red; /* Example color for status ID 4 */\\n    font-style: italic;\\n}\\n.status-10 {\\n    color: red; /* Example color for status ID 4 */\\n    font-style: italic;\\n}\\n.status-11 {\\n    color: darkgray; /* Example color for status ID 4 */\\n}\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import script from \"./CancelButton.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CancelButton.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <div>\n        <button\n            @click=\"cancel\"\n            class=\"ml-2 px-4 py-2 text-white bg-orange-600 hover:bg-orange-500 rounded-lg\"\n        >Cancel\n        </button>\n    </div>\n</template>\n\n<script setup>\nimport { Inertia } from \"@inertiajs/inertia\"\nimport { useUserStore } from \"@/Stores/UserStore\"\n\nlet userStore = useUserStore()\n\nfunction cancel() {\n    if (userStore.prevUrl) {\n        Inertia.visit(userStore.prevUrl)\n    }\n}\n</script>\n","import script from \"./ValidationErrors.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ValidationErrors.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { computed } from 'vue';\nimport { usePage } from '@inertiajs/inertia-vue3';\n\nconst errors = computed(() => usePage().props.value.errors);\nconst hasErrors = computed(() => Object.keys(errors.value).length > 0);\n</script>\n\n<template>\n    <div v-if=\"hasErrors\">\n        <div class=\"font-medium text-red-600\">\n            Whoops! Something went wrong.\n        </div>\n\n        <ul class=\"mt-3 list-disc list-inside text-sm text-red-600\">\n            <li v-for=\"(error, key) in errors\" :key=\"key\">\n                {{ error }}\n            </li>\n        </ul>\n    </div>\n</template>\n","import script from \"./CheckboxNotification.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CheckboxNotification.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <input type=\"checkbox\" id=\"my_modal_6\" class=\"modal-toggle\" v-model=\"notificationStore.active\" />\n    <div class=\"modal\" role=\"dialog\" v-if=\"notificationStore.active\">\n        <div class=\"modal-box\">\n            <h3 class=\"font-bold text-lg\">{{ notificationStore.title }}</h3>\n            <p class=\"py-4\">{{ notificationStore.body }}</p>\n            <div class=\"modal-action\">\n                <label for=\"my_modal_6\" class=\"btn\" @click=\"modalButtonAction\">{{ notificationStore.buttonLabel }}</label>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\nimport { useNotificationStore } from \"@/Stores/NotificationStore.js\"\n\nlet notificationStore = useNotificationStore();\n\nfunction modalButtonAction() {\n    if (notificationStore.onClickAction === 'redirect') {\n        notificationStore.redirectAndClear()\n    } else if (notificationStore.onClickAction === 'close') {\n        notificationStore.closeAndClear()\n    }\n}\n\n</script>\n","<template>\n    <Head title=\"Create Show\"/>\n\n    <div class=\"place-self-center flex flex-col gap-y-3\">\n        <div id=\"topDiv\" class=\"bg-white text-black dark:bg-gray-800 dark:text-gray-50 p-5 mb-10\">\n\n            <Message v-if=\"userStore.showFlashMessage\" :flash=\"$page.props.flash\"/>\n\n            <div class=\"flex justify-between mt-3 mb-6\">\n                <div class=\"text-3xl\">Create Show</div>\n                <div>\n                    <CancelButton />\n                </div>\n            </div>\n\n            <div class=\"bg-orange-700 text-white w-full p-6\"><span class=\"font-bold\">NOTE: </span>\n                We are working on an episode poster and video uploader for this page. For the time being, please\n                go to the show <span class=\"font-bold\">EDIT</span> page after you create the show to add a video and a poster.\n            </div>\n\n            <form @submit.prevent=\"submit\" class=\"max-w-md mx-auto mt-8\">\n                    <div class=\"mb-6\">\n                        <label class=\"block mb-2 uppercase font-bold text-xs dark:text-gray-200\"\n                               for=\"name\"\n                        >\n                            Team\n                        </label>\n                        <select class=\"border border-gray-400 p-2 w-full rounded-lg block mb-2 uppercase font-bold text-xs text-gray-800\"\n                                v-model=\"form.team_id\"\n                                required\n                        >\n                            <option\n                                v-for=\"team in props.teams.data\"\n                                :key=\"team.id\"\n                                :value=\"team.id\"\n                                class=\"bg-white text-black border-b dark:text-gray-50 dark:bg-gray-800 dark:border-gray-600\"\n                                :class=\"'status-' + team.status.id\"\n                            >\n                                {{ team.name }} ({{ team.status.status }})\n                            </option>\n\n                        </select>\n\n\n                        <div v-if=\"form.errors.team_id\" v-text=\"form.errors.team_id\" class=\"text-xs text-red-600 mt-1\"></div>\n                    </div>\n                <div class=\"mb-6\">\n                    <label class=\"block mb-2 uppercase font-bold text-xs dark:text-gray-200\"\n                           for=\"name\"\n                    >\n                        Show Name\n                    </label>\n\n                    <input v-model=\"form.name\"\n                           class=\"bg-gray-50 border border-gray-400 text-gray-900 text-sm p-2 w-full rounded-lg focus:ring-blue-500 focus:border-blue-500\"\n                           type=\"text\"\n                           name=\"name\"\n                           id=\"name\"\n                           required\n                    >\n                    <div v-if=\"form.errors.name\" v-text=\"form.errors.name\" class=\"text-xs text-red-600 mt-1\"></div>\n                </div>\n\n                <div class=\"mb-6\">\n                    <label class=\"block mb-2 uppercase font-bold text-xs dark:text-gray-200\"\n                           for=\"category\"\n                    >\n                        Category\n                    </label>\n\n\n                    <select class=\"border border-gray-400 text-gray-800 p-2 w-full rounded-lg block mb-2 uppercase font-bold text-xs \"\n                            v-model=\"form.category\" @change=\"chooseCategory($event)\"\n                    >\n                        <option v-for=\"category in props.categories\"\n                                :key=\"category.id\" :value=\"category.id\">{{category.name}}</option>\n\n\n                    </select>\n                    <div v-if=\"form.errors.category\" v-text=\"form.errors.category\"\n                         class=\"text-xs text-red-600 mt-1\"></div>\n\n                    {{showCategoryDescription}}\n                </div>\n\n                <div class=\"mb-6\">\n                    <label class=\"block mb-1 uppercase font-bold text-xs dark:text-gray-200\"\n                           for=\"sub_category\"\n                    >\n                        Sub-category\n                    </label>\n                    <div class=\"mb-2 text-sm text-orange-600\">Sub-categories are coming soon!</div>\n\n\n                    <select disabled class=\"border border-gray-400 text-gray-800 disabled:bg-gray-300 dark:disabled:bg-gray-600 disabled:cursor-not-allowed p-2 w-full rounded-lg block mb-2 uppercase font-bold text-xs\"\n                            v-model=\"form.sub_category\"\n                    >\n                        <option value=\"1\">Option</option>\n                    </select>\n                    <div v-if=\"form.errors.sub_category\" v-text=\"form.errors.sub_category\"\n                         class=\"text-xs text-red-600 mt-1\"></div>\n                </div>\n\n                <div class=\"mb-6\">\n                    <label class=\"block mb-2 uppercase font-bold text-xs dark:text-gray-200\"\n                           for=\"description\"\n                    >\n                        Description\n                    </label>\n                    <textarea v-model=\"form.description\"\n                              class=\"bg-gray-50 border border-gray-400 text-gray-900 text-sm p-2 w-full rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\"\n                              type=\"text\"\n                              name=\"description\"\n                              id=\"description\"\n                              required\n                    ></textarea>\n                    <div v-if=\"form.errors.description\" v-text=\"form.errors.description\" class=\"text-xs text-red-600 mt-1\"></div>\n                </div>\n\n                <div class=\"mb-6\">\n                    <label class=\"block mb-2 uppercase font-bold text-xs dark:text-gray-200\"\n                           for=\"name\"\n                    >\n                        Website URL\n                    </label>\n\n                    <input v-model=\"form.www_url\"\n                           class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                           type=\"text\"\n                           name=\"www_url\"\n                           id=\"www_url\"\n                    >\n                    <div v-if=\"form.errors.www_url\" v-text=\"form.errors.www_url\"\n                         class=\"text-xs text-red-600 mt-1\"></div>\n                </div>\n\n                <div class=\"mb-6\">\n                    <label class=\"block mb-2 uppercase font-bold text-xs dark:text-gray-200\"\n                           for=\"name\"\n                    >\n                        Instagram Handle\n                    </label>\n\n                    <input v-model=\"form.instagram_name\"\n                           class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                           type=\"text\"\n                           name=\"instagram_name handle\"\n                           id=\"instagram_name\"\n                    >\n                    <div v-if=\"form.errors.instagram_name\" v-text=\"form.errors.instagram_name\"\n                         class=\"text-xs text-red-600 mt-1\"></div>\n                </div>\n\n                <div class=\"mb-6\">\n                    <label class=\"block mb-2 uppercase font-bold text-xs dark:text-gray-200\"\n                           for=\"name\"\n                    >\n                        Telegram URL\n                    </label>\n\n                    <input v-model=\"form.telegram_url\"\n                           class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                           type=\"text\"\n                           name=\"telegram_url\"\n                           id=\"telegram_url\"\n                    >\n                    <div v-if=\"form.errors.telegram_url\" v-text=\"form.errors.telegram_url\"\n                         class=\"text-xs text-red-600 mt-1\"></div>\n                </div>\n\n                <div class=\"mb-6\">\n                    <label class=\"block mb-2 uppercase font-bold text-xs dark:text-gray-200\"\n                           for=\"name\"\n                    >\n                        Twitter @\n                    </label>\n\n                    <input v-model=\"form.twitter_handle\"\n                           class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                           type=\"text\"\n                           name=\"twitter_handle\"\n                           id=\"twitter_handle\"\n                    >\n                    <div v-if=\"form.errors.twitter_handle\" v-text=\"form.errors.twitter_handle\"\n                         class=\"text-xs text-red-600 mt-1\"></div>\n                </div>\n\n                <div class=\"mb-6\">\n                    <label class=\"block mb-2 uppercase font-bold text-xs dark:text-gray-200\"\n                           for=\"notes\"\n                    >\n                        Notes (Only your team members see these notes, they are not public)\n                    </label>\n                    <textarea v-model=\"form.notes\"\n                              class=\"bg-gray-50 border border-gray-400 text-gray-900 text-sm p-2 w-full rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\"\n                              type=\"text\"\n                              name=\"notes\"\n                              id=\"notes\"\n                    ></textarea>\n                    <div v-if=\"form.errors.notes\" v-text=\"form.errors.notes\" class=\"text-xs text-red-600 mt-1\"></div>\n                </div>\n\n                <input v-model=\"form.user_id\" hidden>\n                <div class=\"flex justify-between mb-6\">\n                    <JetValidationErrors class=\"mr-4\" />\n                    <button\n                        type=\"submit\"\n                        class=\"h-fit bg-blue-600 hover:bg-blue-500 text-white rounded py-2 px-4\"\n                        :disabled=\"form.processing\"\n                    >\n                        Submit\n                    </button>\n                </div>\n\n            </form>\n\n            <CheckboxNotification />\n\n    </div>\n    </div>\n</template>\n\n<script setup>\nimport { onBeforeMount, onMounted, ref } from 'vue'\nimport {useForm, usePage} from \"@inertiajs/inertia-vue3\"\nimport { useVideoPlayerStore } from \"@/Stores/VideoPlayerStore.js\"\nimport { useTeamStore } from \"@/Stores/TeamStore.js\"\nimport { useUserStore } from \"@/Stores/UserStore.js\";\nimport { useNotificationStore } from \"@/Stores/NotificationStore.js\";\nimport Message from \"@/Components/Modals/Messages\";\nimport JetValidationErrors from '@/Jetstream/ValidationErrors.vue';\nimport {Inertia} from \"@inertiajs/inertia\";\nimport CancelButton from \"@/Components/Buttons/CancelButton.vue\";\nimport CheckboxNotification from \"@/Components/Modals/CheckboxNotification.vue\";\n\nlet videoPlayerStore = useVideoPlayerStore()\nlet teamStore = useTeamStore()\nlet userStore = useUserStore()\nlet notificationStore = useNotificationStore()\n\nlet props = defineProps({\n    teams: Object,\n    userId: Number,\n    categories: Object,\n    subCategories: Object,\n})\n\nlet form = useForm({\n    name: '',\n    description: '',\n    user_id: props.userId,\n    team_id: '',\n    category: '',\n    sub_category: '',\n    www_url: '',\n    instagram_name: '',\n    telegram_url: '',\n    twitter_handle: '',\n    notes: '',\n});\n\nlet showCategoryDescription = ref(null);\n\nuserStore.currentPage = 'shows'\nuserStore.showFlashMessage = true;\nform.team_id = teamStore.id;\n\nconst checkForTeams = () => {\n    if (props.teams.data.length === 0) {\n        // Perform some actions if data array is empty\n        console.log('No teams available.');\n        notificationStore.active = true;\n        notificationStore.title = \"No teams available.\";\n        notificationStore.body = \"Please create a team before you create a show.\";\n        notificationStore.buttonLabel = \"OKAY\";\n        notificationStore.onClickAction = \"redirect\";\n        notificationStore.uri = \"/shows/create\";\n        notificationStore.redirectPageUri = \"/teams/create\";\n        // Additional logic for empty array\n    } else {\n        // Do nothing if data array is not empty\n        console.log('Teams are available.');\n    }\n};\n\nonMounted(() => {\n    videoPlayerStore.makeVideoTopRight();\n    if (userStore.isMobile) {\n        videoPlayerStore.ottClass = 'ottClose'\n        videoPlayerStore.ott = 0\n    }\n    document.getElementById(\"topDiv\").scrollIntoView()\n    checkForTeams();\n});\n\nlet submit = () => {\n    form.post('/shows');\n}\n\nfunction chooseCategory(event) {\n    showCategoryDescription = props.categories[event.target.selectedIndex].description;\n}\n\nfunction reset() {\n    form.reset();\n}\n\nfunction back() {\n    let urlPrev = usePage().props.value.urlPrev\n    if (urlPrev !== 'empty') {\n        Inertia.visit(urlPrev)\n    }\n}\n\n</script>\n\n<style scoped>\n.status-1 {\n    color: green; /* Example color for status ID 1 */\n}\n.status-2 {\n    color: blue; /* Example color for status ID 2 */\n}\n.status-3 {\n    color: purple; /* Example color for status ID 3 */\n}\n.status-4 {\n    color: orange; /* Example color for status ID 4 */\n}\n.status-5 {\n    color: red; /* Example color for status ID 4 */\n}\n.status-6 {\n    color: darkgray; /* Example color for status ID 4 */\n    font-style: italic;\n}\n.status-7 {\n    color: black; /* Example color for status ID 4 */\n    font-style: italic;\n}\n.status-8 {\n    color: black; /* Example color for status ID 4 */\n    font-style: italic;\n}\n.status-9 {\n    color: red; /* Example color for status ID 4 */\n    font-style: italic;\n}\n.status-10 {\n    color: red; /* Example color for status ID 4 */\n    font-style: italic;\n}\n.status-11 {\n    color: darkgray; /* Example color for status ID 4 */\n}\n</style>\n","import api from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-9.use[1]!../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-9.use[2]!../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./Create.vue?vue&type=style&index=0&id=39e83af8&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./Create.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Create.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Create.vue?vue&type=style&index=0&id=39e83af8&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-39e83af8\"]])\n\nexport default __exports__"],"names":["useTeamStore","defineStore","state","id","name","description","slug","totalSpots","memberSpots","teamCreator","teamLeader","members","managers","activeShow","activeEpisode","creators","showModal","Boolean","confirmDialog","confirmManagerDialog","selectedManagerName","selectedManagerId","addManager","removeManager","deleteMemberName","deleteMemberId","noteEdit","note","saveNoteProcessing","goLiveDisplay","can","openComponent","actions","setActiveTeam","team","this","setActiveShow","show","setActiveEpisode","episode","deleteTeamMemberCancel","confirmTeamManagerCancel","deleteTeamMember","Inertia","visit","route","method","data","user_id","team_id","team_slug","addTeamManager","removeTeamManager","toggleGoLiveDisplay","getters","spotsRemaining","___CSS_LOADER_EXPORT___","push","module","userStore","useUserStore","cancel","prevUrl","errors","computed","usePage","props","value","hasErrors","Object","keys","length","notificationStore","useNotificationStore","modalButtonAction","onClickAction","redirectAndClear","closeAndClear","videoPlayerStore","useVideoPlayerStore","teamStore","__props","form","useForm","userId","category","sub_category","www_url","instagram_name","telegram_url","twitter_handle","notes","showCategoryDescription","ref","currentPage","showFlashMessage","onMounted","makeVideoTopRight","isMobile","ottClass","ott","document","getElementById","scrollIntoView","teams","console","log","active","title","body","buttonLabel","uri","redirectPageUri","submit","post","event","categories","target","selectedIndex","options","locals"],"sourceRoot":""}
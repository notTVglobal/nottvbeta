{"version":3,"file":"js/6500.js","mappings":"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","sources":["webpack:///./resources/js/Stores/GoLiveStore.js","webpack:///./resources/js/Utilities/TimeUtils.js","webpack:///./resources/js/Stores/ScheduleStore.js","webpack:///./resources/js/Stores/TeamStore.js","webpack:///./resources/js/Stores/VideoAuxPlayerStore.js","webpack:///./resources/js/Utilities/PageSetup.js","webpack:///./resources/js/Components/Pages/Shows/Elements/ShowRecordings.vue?4486","webpack:///./resources/js/Pages/Shows/{$id}/Manage.vue?87e4","webpack:///./resources/js/Components/Global/Buttons/DashboardButton.vue?3fff","webpack:///./resources/js/Components/Global/Buttons/DashboardButton.vue","webpack:///./resources/js/Components/Global/Calendar/DateTimePickerSelect.vue?a94f","webpack:///./resources/js/Components/Global/Calendar/DateTimePickerSelect.vue","webpack:///./resources/js/Components/Global/Modals/Messages.vue?dfe9","webpack:///./resources/js/Components/Global/Modals/Messages.vue","webpack:///./resources/js/Components/Global/Paginators/Pagination.vue?0305","webpack:///./resources/js/Components/Global/Paginators/Pagination.vue","webpack:///./resources/js/Components/Pages/Shows/Layout/ShowFooter.vue?be4d","webpack:///./resources/js/Components/Pages/Shows/Layout/ShowFooter.vue","webpack:///./resources/js/Jetstream/Label.vue","webpack:///./resources/js/Components/Global/Calendar/DateTimePicker.vue?15b5","webpack:///./resources/js/Components/Global/Calendar/DateTimePicker.vue","webpack:///./resources/js/Components/Global/Calendar/DatePicker.vue?300b","webpack:///./resources/js/Components/Global/Calendar/DatePicker.vue","webpack:///./resources/js/Components/Global/Schedule/StepSixCongratulations.vue","webpack:///./resources/js/Components/Global/Schedule/AddShowToSchedule.vue","webpack:///./resources/js/Components/Global/Schedule/AddShowToSchedule.vue?fa06","webpack:///./resources/js/Components/Global/Schedule/ChangeShowSchedule.vue?b054","webpack:///./resources/js/Components/Global/Schedule/ChangeShowSchedule.vue","webpack:///./resources/js/Components/Pages/Shows/Layout/ShowManageHeader.vue?ae3c","webpack:///./resources/js/Components/Pages/Shows/Layout/ShowManageHeader.vue","webpack:///./resources/js/Components/Pages/Shows/Elements/ManageShowEpisodesStatuses.vue?ba1d","webpack:///./resources/js/Components/Pages/Shows/Elements/ManageShowEpisodesStatuses.vue","webpack:///./resources/js/Components/Pages/Shows/Elements/ManageEpisodeEditNote.vue?89fa","webpack:///./resources/js/Components/Pages/Shows/Elements/ManageEpisodeEditNote.vue","webpack:///./resources/js/Components/Pages/Shows/Elements/ManageShowEpisode.vue?f7cf","webpack:///./resources/js/Components/Pages/Shows/Elements/ManageShowEpisode.vue","webpack:///./resources/js/Components/Pages/Shows/Elements/ManageShowEpisodesList.vue?8642","webpack:///./resources/js/Components/Pages/Shows/Elements/ManageShowEpisodesList.vue","webpack:///./resources/js/Components/Pages/Shows/Elements/ManageShowCreditsList.vue","webpack:///./resources/js/Components/Pages/Shows/Elements/ManageShowCreditsList.vue?74d6","webpack:///./resources/js/Components/Pages/Shows/Elements/ShowRecordings.vue","webpack:///./resources/js/Components/Pages/Shows/Elements/ShowRecordings.vue?c450","webpack:///./resources/js/Components/Pages/Shows/Elements/ShowRecordings.vue?c05b","webpack:///./resources/js/Pages/Shows/{$id}/Manage.vue","webpack:///./resources/js/Pages/Shows/{$id}/Manage.vue?ae46","webpack:///./resources/js/Pages/Shows/{$id}/Manage.vue?9a3e"],"sourcesContent":["import { defineStore } from 'pinia'\nimport { useNotificationStore } from '@/Stores/NotificationStore'\nimport { useVideoPlayerStore } from '@/Stores/VideoPlayerStore'\nimport { useVideoAuxPlayerStore } from '@/Stores/VideoAuxPlayerStore'\nimport videojs from 'video.js'\n\nconst initialState = () => ({\n    displayEpisodeGoLiveComponent: false,\n    isEpisode: null,\n    episode: null,\n    preSelectedShowId: null,\n    selectedShowId: null,\n    // selectedShow: null, this uses the getter... set it up in the component as a computed property\n    shows: [], // Assuming you might want to store shows here too\n    streamKey: '', // Optional: Store the generated stream key if needed\n    wildcardId: '',\n    isLive: false,\n    isRecording: false,\n    streamInfo: null,\n    rtmpUri: null,\n    destinations: [], // New state for holding destinations\n    isLoadingDestinations: false,\n    loadingDestinationId: null,\n    processingRecordingChange: false,\n    isProcessingDisableAllAutoPushes: false,\n    playerIsReloading: false,\n    pushDestinationFormSubmitProcessing: false,\n    mistServerUri: null,\n    previousStreamStatus: null,\n})\n\nexport const useGoLiveStore = defineStore('goLiveStore', {\n    state: initialState,\n    actions: {\n        reset() {\n            // Reset the store to its original state (clear all data)\n            Object.assign(this, initialState())\n        },\n        async fetchShows() {\n            try {\n                const response = await axios.get('/go-live/shows') // Adjust the URL as needed\n                this.shows = response.data\n            } catch (error) {\n                // console.error('Failed to fetch shows:', error)\n                // Handle error appropriately\n            }\n        },\n\n\n        // temporarily commenting this out\n        async generateStreamKey() {\n            if (!this.selectedShowId) {\n                // console.error('No show selected')\n                throw new Error('No show selected') // Throw an error to be caught by the caller\n            }\n\n            try {\n                const response = await axios.post(`/go-live/shows/${this.selectedShowId}/stream-key`)\n                // console.log('Stream key generated:', response.data)\n                // this.streamKey = response.data.stream_key // Assuming the response includes the stream key\n                // console.log('this new stream key: ' + this.streamKey)\n                // console.log('response data stream key: ' + response.data.stream_key)\n                // Update goLiveStore.selectedShow.mist_stream_wildcard_id with the returned stream key\n                if (this.selectedShowId && response.data.stream_key) {\n                    this.selectedShow.mist_stream_wildcard = response.data\n                    this.selectedShow.mist_stream_wildcard_id = response.data.stream_key\n                }\n                return response.data // Return the response data\n            } catch (error) {\n                // console.error('Error generating stream key:', error.response ? error.response.data : error)\n                throw error // Re-throw the error to be caught by the component\n            }\n        },\n\n        // Other actions...\n        updateAndGetStreamKey() {\n            const show = this.shows.find(show => show.id === this.selectedShowId) || null\n            const streamKey = show?.mist_stream_wildcard?.name || ' < RELOAD THIS PAGE TO GET YOUR STREAM KEY > '\n\n            // Perform the state update\n            this.streamKey = streamKey\n\n            // Return the stream key for immediate use\n            return streamKey\n        },\n\n\n        // async generateStreamKey() {\n        //     if (!this.selectedShowId) {\n        //         console.error(\"No show selected\");\n        //         throw new Error(\"No show selected\");\n        //     }\n        //\n        //     try {\n        //         const response = await axios.post(`/go-live/shows/${this.selectedShowId}/stream-key`);\n        //         console.log(\"Stream key generated:\", response.data);\n        //\n        //         // Find the index of the selected show in the shows array\n        //         const selectedIndex = this.shows.findIndex(show => show.id === this.selectedShowId);\n        //         if (selectedIndex !== -1) {\n        //             // Update the selected show with the new stream key information\n        //             this.shows[selectedIndex].mist_stream_wildcard = response.data;\n        //             this.shows[selectedIndex].mist_stream_wildcard_id = response.data.stream_key;\n        //         }\n        //         return response.data;\n        //     } catch (error) {\n        //         console.error(\"Error generating stream key:\", error.response ? error.response.data : error);\n        //         throw error;\n        //     }\n        // },\n\n\n        // setPreSelectedShowId(id) {\n        //     this.preSelectedShowId = id;\n        //     console.log('preSelectedShowId updated to:', this.preSelectedShowId);\n        // },\n        // Action to update selectedShowId and selectedShow based on selectedShowId\n        setSelectedShowId(showId) {\n            this.selectedShowId = showId\n            this.updateSelectedShow() // Call the method to update selectedShow based on new selectedShowId\n        },\n        // Method to find and update selectedShow based on selectedShowId\n        updateSelectedShow() {\n            this.selectedShow = this.shows.find(show => show.id === this.selectedShowId) || null\n        },\n        goLive() {\n            this.isLive = true\n        },\n        stopLive() {\n            this.isLive = false\n        },\n        async startRecording() {\n            // console.log('1 start recording in Go Live Store')\n            const notificationStore = useNotificationStore()\n            const showSlug = this.selectedShow.slug\n            // console.log(`Starting recording for show ${showSlug}`)\n            this.processingRecordingChange = true\n            try {\n                // console.log('2a post to /mist-stream/start-recording/')\n                const response = await axios.post('/mist-stream/start-recording/'+showSlug, {\n                    stream_name: this.streamKey,\n                })\n                // console.log('5 and we\\'re back in the GoLiveStore')\n                // console.log('Recording started successfully:', response.data)\n                // console.log('Stream Name:', this.streamKey)\n                const {message, status} = response.data\n                // Use the status from the response for the notification\n                notificationStore.setToastNotification(message, status)\n                // Update the recording status\n                this.isRecording = true\n            } catch (error) {\n                // console.error('Error starting push:', error)\n                notificationStore.setToastNotification('Failed to start recording.', 'error')\n                // Handle the error appropriately in your UI\n            } finally {\n                this.processingRecordingChange = false // Stop processing spinner regardless of outcome\n            }\n        },\n        async stopRecording() {\n            const notificationStore = useNotificationStore()\n            const showSlug = this.selectedShow.slug\n            // console.log(`Stopping recording for show ${showSlug}`)\n            this.processingRecordingChange = true\n            // console.log(`Stopping recording for show ${showSlug}`)\n            try {\n                const response = await axios.post('/mist-stream/stop-recording/'+showSlug, {\n                    stream_name: this.streamKey,\n                })\n                // console.log('Recording stopped successfully:', response.data)\n                const {message, status} = response.data\n                notificationStore.setToastNotification(message, status)\n                // Update the recording status\n                this.isRecording = false\n            } catch (error) {\n                // console.error('Error stopping recording:', error)\n                notificationStore.setToastNotification('Failed to stop push.', 'error')\n            } finally {\n                this.processingRecordingChange = false // Stop processing spinner regardless of outcome\n            }\n        },\n        // async fetchStreamInfo(streamName) {\n        //     try {\n        //         // const response = await fetch(`http://mist.nottv.io:8080/json_${encodedStreamName}.js`); // Replace with your URL\n        //         const response = await fetch(`/fetch-stream-info/${streamName}`) // Replace with your URL\n        //         if (!response.ok) throw new Error('Failed to fetch')\n        //         this.streamInfo = await response.json() // Store the data in serverInfo\n        //     } catch (error) {\n        //         console.error('Error fetching server info:', error)\n        //     }\n        // },\n        async fetchStreamInfo() {\n            const notificationStore = useNotificationStore()\n            // console.log('start fetch stream info...')\n            try {\n                if (!this.mistServerUri) {\n                    await this.fetchMistServerUri()\n                }\n                // Then, use the URI in your next request\n                const response = await axios.post('/fetch-stream-info', {\n                    streamName: this.streamKey,\n                    mistServerUri: this.mistServerUri, // Pass it as a string\n                })\n                // console.log('response returned...')\n                // console.log(response.data);\n                this.streamInfo = response.data.streamInfo || []\n                // Assuming a successful response might look like {\"message\": \"Stream is online\", \"status\": \"success\"}\n                let message, status\n\n                // Check if the response contains an error field\n                if (response.data.streamInfo.error) {\n                    message = response.data.streamInfo.error\n                    status = 'error' // Assuming 'error' as a fallback status\n                    // console.log('error returned...')\n                } else if (response.data.message && response.data.success) {\n                    // If it's a success message with a status\n                    message = response.data.message\n                    status = 'info'\n                    // console.log('success returned...')\n\n                } else {\n                    // Fallback for unexpected response structure\n                    message = 'Received unexpected response from server.'\n                    status = 'info' // Default to 'info' or another appropriate fallback status\n                    // console.log('unexpected response returned...')\n                }\n\n                // Use the status from the response for the notification\n                // notificationStore.setToastNotification(message, status)\n            } catch (error) {\n                // console.error(error);\n                notificationStore.setToastNotification('Failed to fetch stream info.', 'error')\n                // console.log('catch error...')\n            }\n        },\n        async fetchRtmpUri() {\n            try {\n                const response = await fetch(`/fetch-rtmp-uri`)\n                if (!response.ok) throw new Error('Failed to fetch')\n\n                // Parse the plain text body of the response\n                // Store the RTMP URI string in a Vue data property or similar\n                this.rtmpUri = await response.text()\n            } catch (error) {\n                // console.error('Error fetching RTMP URI:', error)\n            }\n        },\n        clearStreamInfo() {\n            this.streamInfo = null\n        },\n        toggleDisplayEpisodeGoLiveComponent(episode) {\n            // const videoPlayerAuxStore = useVideoAuxPlayerStore()\n            // videoPlayerAuxStore.reset()\n            this.displayEpisodeGoLiveComponent = !this.displayEpisodeGoLiveComponent\n            this.isEpisode = !!this.displayEpisodeGoLiveComponent\n            this.episode = episode\n            this.selectedShowId = this?.episode?.show_id\n\n        },\n        updateEpisode(episode) {\n            this.episode = episode\n        },\n        async fetchMistServerUri() {\n            const videoAuxPlayerStore = useVideoAuxPlayerStore();\n            let uriResponse = await axios.get('/mist-server/uri')\n            this.mistServerUri = uriResponse.data\n            videoAuxPlayerStore.setMistServerUri(this.mistServerUri)\n        },\n        async reloadPlayer() {\n            const videoAuxPlayerStore = useVideoAuxPlayerStore()\n            const notificationStore = useNotificationStore()\n            this.playerIsReloading = true // Start loading\n            try {\n                // First, fetch the URI\n\n                // let uriResponse = await axios.get('/mist-server/uri');\n                // this.mistServerUri = uriResponse.data; // Accessing the data prop// erty\n                // // Create an object and set the 'name' property\n                const mistStream = {\n                    name: this.streamKey,\n                }\n                // // Now, use this URI in your next request\n                // const response = await axios.post('/fetch-stream-info', {\n                //     streamName: this.streamKey,\n                //     mistServerUri: this.mistServerUri,\n                // });\n                // Now, you can pass the 'mistStream' object to the method\n                await videoAuxPlayerStore.loadMistStreamVideo(mistStream, true).then(\n                    // await this.fetchStreamInfo(),\n                )\n            } catch (error) {\n                // console.error(error);\n                // notificationStore.setGeneralServiceNotification('Failed to reload player', error)\n                notificationStore.setToastNotification('Failed to reload player.', 'error')\n            } finally {\n                this.playerIsReloading = false // Stop loading regardless of outcome\n            }\n\n        },\n        async fetchPushDestinations() {\n            const notificationStore = useNotificationStore()\n            this.isLoadingDestinations = true // Start loading\n            try {\n                const response = await axios.post('/go-live/fetch-push-destinations', {\n                    showId: this.selectedShowId,\n                    streamName: this.streamKey,\n                    backgroundFetch: false,\n                })\n                // console.log(response.data);\n                this.destinations = response.data.destinations || []\n                this.isRecording = response.data.recording || false\n                console.log('response about recording: ' + response.data.recording)\n                // Extract message and status from the response\n                const {message, status} = response.data\n                // Use the status from the response fo\n                // r the notification\n                // notificationStore.setToastNotification(message, status)\n            } catch (error) {\n                // console.error(error);\n                // notificationStore.setGeneralServiceNotification('Failed to reload player', error)\n                notificationStore.setToastNotification('Failed to fetch push destinations.', 'error')\n            } finally {\n                this.isLoadingDestinations = false // Stop loading regardless of outcome\n            }\n        },\n        async backgroundFetchPushDestinations() {\n            // Background Fetch doesn't use Toast Notifications,\n            // Keep the fetch silent in the background.\n\n            this.isLoadingDestinations = true // Start loading\n            try {\n                const response = await axios.post('/go-live/fetch-push-destinations/', {\n                    showId: this.selectedShowId,\n                    streamName: this.streamKey,\n                    backgroundFetch: true,\n                })\n                this.destinations = response.data.destinations || []\n                this.isRecording = response.data.recording || false\n            } catch (error) {\n                // console.error(error);\n                // notificationStore.setGeneralServiceNotification('Error Fetching Push Destinations', error)\n                notificationStore.setToastNotification('Failed to fetch push destinations.', 'error')\n            } finally {\n                this.isLoadingDestinations = false // Stop loading regardless of outcome\n            }\n        },\n        async deleteDestination(destinationId) {\n            // Confirm deletion with the user before proceeding\n            if (confirm(`Are you sure you want to delete the destination with ID: ${destinationId}?`)) {\n                try {\n                    // Perform the delete operation\n                    await axios.delete('/mist-stream-push-destinations/' + destinationId)\n                    // Optionally, remove the item from your local state to update the UI\n                    this.destinations = this.destinations.filter(destination => destination.id !== destinationId)\n                } catch (error) {\n                    notificationStore.setGeneralServiceNotification('Error deleting destination', error)\n                    // console.error(`Error deleting destination with ID: ${destinationId}`, error)\n                }\n            }\n        },\n        async startPush(destinationId, fullPushUri) {\n            const notificationStore = useNotificationStore()\n            this.loadingDestinationId = destinationId\n            // console.log(`Starting push for destination ${destinationId}`)\n            try {\n                const response = await axios.post('/mist-stream/start-push', {\n                    destination_id: destinationId,\n                    full_push_uri: fullPushUri,\n                    stream_name: this.streamKey,\n                })\n                // console.log('Push started successfully:', response.data)\n                // console.log('Destination ID:', destinationId)\n                // console.log('Full Push URI:', fullPushUri)\n                // console.log('Stream Name:', this.streamKey)\n                const {message, status} = response.data\n                // Use the status from the response for the notification\n                notificationStore.setToastNotification(message, status)\n                // Update the component's state to reflect the change\n                const index = this.destinations.findIndex(destination => destination.id === destinationId)\n                if (index !== -1) {\n                    this.destinations[index].push_is_started = 1\n                }\n            } catch (error) {\n                // console.error('Error starting push:', error)\n                notificationStore.setToastNotification('Failed to start push.', 'error')\n                // Handle the error appropriately in your UI\n            } finally {\n                this.loadingDestinationId = null // Stop loading regardless of outcome\n            }\n        },\n        async stopPush(destinationId) {\n            const notificationStore = useNotificationStore()\n            this.loadingDestinationId = destinationId\n            // console.log(`Stopping push for destination ${destinationId}`)\n            try {\n                const response = await axios.post('/mist-stream/stop-push', {destination_id: destinationId})\n                // console.log('Push stopped successfully:', response.data)\n                const {message, status} = response.data\n                notificationStore.setToastNotification(message, status)\n                // Update the component's state to reflect the change\n            } catch (error) {\n                // console.error('Error stopping push:', error)\n                notificationStore.setToastNotification('Failed to stop push.', 'error')\n            } finally {\n                this.loadingDestinationId = null // Stop loading regardless of outcome\n                const index = this.destinations.findIndex(destination => destination.id === destinationId)\n                if (index !== -1) {\n                    this.destinations[index].push_is_started = 0\n                }\n            }\n        },\n        async enableAutoPush(destinationId) {\n            this.loadingDestinationId = destinationId\n            const notificationStore = useNotificationStore()\n            try {\n                const response = await axios.post('/mist-stream/push-auto-add/' + destinationId)\n                // console.log('Auto push enabled successfully:', response.data)\n                const {message, status} = response.data\n                notificationStore.setToastNotification(message, status)\n                const index = this.destinations.findIndex(destination => destination.id === destinationId)\n                if (index !== -1) {\n                    this.destinations[index].has_auto_push = 1\n                }\n            } catch (error) {\n                // console.error('Error enabling auto push:', error)\n                notificationStore.setToastNotification('Failed to enable auto push.', 'error')\n            } finally {\n                this.loadingDestinationId = null // Stop loading regardless of outcome\n            }\n        },\n        async disableAutoPush(destinationId) {\n            const notificationStore = useNotificationStore()\n            this.loadingDestinationId = destinationId\n            try {\n                const response = await axios.post('/mist-stream/push-auto-remove/' + destinationId)\n                // console.log('Auto push removed successfully:', response.data)\n                const {message, status} = response.data\n                notificationStore.setToastNotification(message, status)\n                const index = this.destinations.findIndex(destination => destination.id === destinationId)\n                if (index !== -1) {\n                    this.destinations[index].has_auto_push = 0\n                }\n            } catch (error) {\n                // console.error('Error disabling auto push:', error)\n                notificationStore.setToastNotification('Failed to disable auto push.', 'error')\n            } finally {\n                this.loadingDestinationId = null // Stop loading regardless of outcome\n            }\n        },\n        async disableAllAutoPushes() {\n            const notificationStore = useNotificationStore()\n            this.isProcessingDisableAllAutoPushes = true\n            try {\n                const response = await axios.post('/mist-stream/remove-all-auto-pushes-for-stream', {'streamName': this.streamKey})\n                // console.log('Auto push disabled successfully:', response.data)\n                const {message, status} = response.data\n                notificationStore.setToastNotification(message, status)\n                await this.fetchPushDestinations()\n            } catch (error) {\n                // console.error('Error disabling auto push:', error)\n                notificationStore.setToastNotification('Failed to disable auto push.', 'error')\n            } finally {\n                this.isProcessingDisableAllAutoPushes = false // Stop loading regardless of outcome\n                await this.fetchPushDestinations()\n            }\n        },\n    },\n    getters: {\n        selectedShow: (state) => {\n            const show = state.shows.find(show => show.id === state.selectedShowId) || null\n            state.streamKey = show?.mist_stream_wildcard?.name || 'Fallback value if undefined'\n            state.wildcardId = show?.mist_stream_wildcard?.id || 'Fallback value if undefined'\n            state.isRecording = show?.mist_stream_wildcard?.is_recording || false\n            return show\n        },\n        fullRtmpUri: (state) => {\n            return state.rtmpUri ? state.rtmpUri + 'live/' : ''\n        },\n        fullUrl: (state) => {\n            // Directly construct fullRtmpUri from state\n            const fullRtmpUri = state.rtmpUri ? state.rtmpUri + 'live/' : ''\n\n            // Directly find the show based on selectedShowId to avoid using getters\n            // const show = state.shows.find(show => show.id === state.selectedShowId) || null;\n            // const streamKey = show?.mist_stream_wildcard?.name || 'Fallback value if undefined';\n\n            // Return the concatenated URL\n            return `${fullRtmpUri}${state.streamKey}`\n        },\n        // Example getter that might filter destinations based on some criteria\n        activeDestinations: (state) => {\n            return state.destinations.filter(destination => destination.push_is_started)\n        },\n        sourceName: (state) => {\n            if (state.selectedShow?.mist_stream_wildcard?.name) {\n                return state.selectedShow.mist_stream_wildcard.name\n            } else if (state.episode?.mist_stream_wildcard?.name) {\n                return state.episode.mist_stream_wildcard.name\n            }\n            return null // No source available\n        },\n        streamOffline: (state) => {\n            // Check if the 'error' key exists and if its value is 'Stream is offline'\n            // If streamInfo is null or undefined, it defaults to an empty object {}\n            return (state.streamInfo?.error ?? '') === 'Stream is offline';\n        },\n    },\n\n\n})\n","// utilities/timeUtils.js\nimport dayjs from 'dayjs';\nimport utc from 'dayjs/plugin/utc';\nimport timezone from 'dayjs/plugin/timezone';\n\ndayjs.extend(utc);\ndayjs.extend(timezone);\n\n/**\n * Creates an array of Date objects representing time slots.\n *\n * This function generates a sequence of time slots starting from a specified\n * start time, continuing for a given number of hours, and spaced apart\n * by a specified interval in minutes.\n *\n * @param {Date} start - The start time from which to generate slots, as a Date object.\n * @param {number} [durationHours=4] - The total duration for which to generate slots, in hours.\n * @param {number} [intervalMinutes=30] - The interval between each slot, in minutes.\n * @param {string} timezone - The timezone in which the time slots will be calculated.\n * @returns {Date[]} An array of Date objects, each representing a time slot.\n *\n * Example:\n * If start is `new Date('2024-01-01T08:00:00Z')`, durationHours is 2, and intervalMinutes is 30,\n * the output will be an array of Date objects representing the times:\n * `08:00`, `08:30`, `09:00`, and `09:30`.\n */\nexport function createTimeSlots(start, durationHours = 4, intervalMinutes = 30, timezone) {\n    // console.log(`Creating time slots starting from ${start}, for ${durationHours} hours, every ${intervalMinutes} minutes in timezone ${timezone}.`);\n    let slots = [];\n    let startTime = dayjs(start).tz(timezone);  // Convert start time to the correct time zone\n    for (let i = 0; i < (durationHours * 60) / intervalMinutes; i++) {\n        let slotTime = startTime.add(i * intervalMinutes, 'minute').toDate();  // Generate slots in the correct time zone\n        slots.push(slotTime);  // Keep as Date object\n    }\n    return slots;\n}\n// export function createTimeSlots(start, durationHours = 4, intervalMinutes = 30) {\n//     let slots = [];\n//     let startTime = dayjs(start).tz(userStore.timezone);  // Convert start time to the correct time zone\n//     for (let i = 0; i < (durationHours * 60) / intervalMinutes; i++) {\n//         let slotTime = new Date(start.getTime() + i * intervalMinutes * 60000);\n//         slots.push(slotTime);  // Keep as Date object\n//     }\n//     return slots;\n// }","import { defineStore } from 'pinia'\nimport { useUserStore } from '@/Stores/UserStore'\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\nimport { createTimeSlots } from '@/Utilities/TimeUtils'\nimport {\n    format,\n    isToday,\n    isTomorrow,\n    isYesterday,\n    startOfDay,\n} from 'date-fns'\n\n// Import dayjs and its plugins\nimport dayjs from 'dayjs'\nimport isSameOrAfter from 'dayjs/plugin/isSameOrAfter'\nimport isSameOrBefore from 'dayjs/plugin/isSameOrBefore' // To check if the day is the same\nimport timezone from 'dayjs/plugin/timezone'\nimport utc from 'dayjs/plugin/utc'\nimport weekOfYear from 'dayjs/plugin/weekOfYear' // For week start and end calculations\nimport advancedFormat from 'dayjs/plugin/advancedFormat' // For more complex formatting options\n\n// Extend dayjs with the plugins\ndayjs.extend(timezone)\ndayjs.extend(weekOfYear)\ndayjs.extend(advancedFormat)\ndayjs.extend(utc)\ndayjs.extend(isSameOrAfter)\ndayjs.extend(isSameOrBefore)\n\nfunction convertScheduleToTimezone(scheduleData) {\n    const userStore = useUserStore() // Access the UserStore\n\n    return scheduleData.data.map(item => {\n        // Convert top-level start_time and end_time using UserStore methods\n        // console.log(`Original startTime for ${item.id}: ${item.startTime}`)\n        const startTimeInUserTz = item.startTime ? userStore.formatDateTimeFromUtcToUserTimezone(item.startTime, 'YYYY-MM-DD HH:mm:ss') : null\n        const endTimeInUserTz = item.endTime ? userStore.formatDateTimeFromUtcToUserTimezone(item.endTime, 'YYYY-MM-DD HH:mm:ss') : null\n        // Add debug logging to help trace conversion issues or confirm correct conversions\n        // console.log(`Converted startTime for ${item.id}: ${startTimeInUserTz}`)\n\n        return {\n            ...item,\n            startTime: startTimeInUserTz,\n            endTime: endTimeInUserTz,\n            timezone: userStore.timezone,\n        }\n    })\n}\n\n// Helper function to get dates within the next 6 hours from viewingWindowStart\nfunction getUpcomingContentDates(viewingWindowStart) {\n    let dates = []\n    let start = dayjs(viewingWindowStart) // Ensure viewingWindowStart is a Day.js object\n\n    for (let i = 0; i < 6; i++) {\n        // Add i hours to the start time, each time creating a new Day.js object\n        dates.push(start.add(i, 'hour').toDate()) // Convert to Date if necessary; otherwise keep as Day.js object\n    }\n    // console.log(1)\n    return dates\n\n}\n\nconst getTimeZone = () => {\n    const userStore = useUserStore()\n    // This function should return the timezone of the user.\n    // This could be dynamic based on the user's settings or browser settings.\n    // return Intl.DateTimeFormat().resolvedOptions().timeZone;\n    // console.log(2)\n    return userStore.timezone\n}\n\nconst initialState = () => ({\n    baseTime: dayjs().tz(getTimeZone()).toDate(),\n    currentHalfHour: dayjs().tz(getTimeZone()).startOf('hour').add(dayjs().minute() >= 30 ? 30 : 0, 'minute').toDate(),\n    fourHoursLater: dayjs().tz(getTimeZone()).startOf('hour').add(dayjs().minute() >= 30 ? 30 : 0, 'minute').add(4, 'hour').toDate(),\n    viewingWindowStart: dayjs().tz(getTimeZone()).startOf('hour').toDate(),\n    currentMonth: dayjs().tz(getTimeZone()).startOf('month').toDate(),\n    selectedDay: dayjs().tz(getTimeZone()).toDate(),\n    currentWeekStart: dayjs().tz(getTimeZone()).startOf('week').toDate(),\n    currentWeekEnd: dayjs().tz(getTimeZone()).endOf('week').toDate(),\n    nextFourHoursOfContent: [],\n    nextFourHoursOfContentWithPlaceholders: [],\n    // nextFourHoursWithHalfHourIntervals: [],\n    // viewingMode: 'automatic', // or 'userSelected'\n    fiveDaySixHourSchedule: [], // Holds the schedule shows 5 day / 6 hour structured data\n    schedules: [], // this is our new schedules array, storing fetched schedule data\n    isLoading: true, // This flag indicates if data is currently being fetched\n    nextPage: 1, // This keeps track of the next page to fetch for pagination\n    hasMore: true, // This flag indicates if there are more schedules to fetch\n    todaysContent: [],\n    weeklyContent: [],\n    dataFetchLog: [],\n    savingToSchedule: false,\n    slotIntervalMinutes: 30,\n    mediumScreenSlotHours: 4, // 4 hours = 8 slots\n    smallScreenSlotHours: 2, // 2 hours = 4 slots\n    verySmallScreenSlotHours: 1, // 1 hour = 2 slots\n    timeSlots: [],\n    timeBanners: [\n        {id: 1, name: 'Early Morning', startTime: '04:00', duration: 2},\n        {id: 2, name: 'Morning', startTime: '06:00', duration: 6},\n        {id: 3, name: 'Afternoon', startTime: '12:00', duration: 5},\n        {id: 4, name: 'Prime Time', startTime: '17:00', duration: 3},\n        {id: 5, name: 'Late Prime Time', startTime: '20:00', duration: 3},\n        {id: 6, name: 'Late Night', startTime: '23:00', duration: 2}, // Spans midnight to 01:00\n        {id: 7, name: 'Overnight', startTime: '01:00', duration: 3}, // Spans from 01:00 to 04:00\n    ],\n})\n\nexport const useScheduleStore = defineStore('scheduleStore', {\n    state: initialState,\n    actions: {\n        resetAll() {\n            // Reset the store to its original state (clear all data)\n            Object.assign(this, initialState())\n            // console.log(3)\n        },\n        reset() {\n            this.viewingWindowStart = dayjs().tz(getTimeZone()).startOf('hour').toDate()\n            this.currentMonth = dayjs().tz(getTimeZone()).startOf('month').toDate()\n            this.selectedDay = dayjs().tz(getTimeZone()).toDate()\n            // console.log(4)\n        },\n        async setSelectedDay(day) {\n            // Ensure that 'day' is a Day.js object, convert if coming as a native Date or string\n            const selectedDay = dayjs(day)\n\n            // Set the selected day\n            this.selectedDay = selectedDay.toDate() // Convert back to Date if necessary; otherwise keep as Day.js object\n\n            // Explicitly set the viewingWindowStart to 4 AM for the selected day\n            this.viewingWindowStart = selectedDay.startOf('day').add(4, 'hours').toDate()\n\n            // Set the start and end of the week based on the selected day\n            this.currentWeekStart = selectedDay.startOf('week').toDate() // Consider week starting on Sunday\n            this.currentWeekEnd = selectedDay.endOf('week').toDate() // Consider week ending on Saturday\n\n            // Use the updated fetch logic\n            await this.fetchWeekDataIfNeeded()\n            // console.log(5)\n        },\n        setSelectedDayToToday(day) {\n            const now = dayjs()  // Create a Day.js object for the current date and time\n\n            // Set selectedDay to the current date and time\n            this.selectedDay = now.toDate() // Convert back to Date if necessary; otherwise keep as Day.js object\n\n            // Set viewingWindowStart to the start of the current hour using Day.js\n            this.viewingWindowStart = now.startOf('hour').toDate()\n            // console.log(6)\n        },\n        async changeDay(days) {\n            const currentTimeZone = getTimeZone() // or however you obtain the timezone\n            // Extract the time component from the current viewing window start\n            const currentTime = dayjs(this.viewingWindowStart).hour() * 60 + dayjs(this.viewingWindowStart).minute()\n\n            // Create a new day and set it to the start of that day\n            let newDay = dayjs(this.viewingWindowStart).tz(currentTimeZone).add(days, 'day').startOf('day')\n\n            // Set the time back to the original time\n            newDay = newDay.add(currentTime, 'minute')\n\n            // Depending on your application's needs, you may or may not need to convert it back to a JavaScript Date object\n            // If you need a Date object:\n            this.viewingWindowStart = newDay.toDate()\n\n            // If you can use dayjs objects directly (preferred if possible):\n            this.viewingWindowStart = newDay\n\n            // // Check if the week of the new day is already loaded\n            // const weekStart = startOfWeek(newDay, {weekStartsOn: 0});\n            // const weekEnd = endOfWeek(newDay, {weekStartsOn: 0});\n\n            // Use the updated centralized fetch logic without redundant checks\n            await this.fetchWeekDataIfNeeded()\n\n            // // Check for the need to load data for the new week\n            // if (this.needsDataForWeek(weekStart, weekEnd)) {\n            //     await this.loadWeekFromDate(newDay).catch(error => {\n            //         console.error(\"Failed to load data for the new week:\", error);\n            //     });\n            // }\n\n            // // Check for the need to load data for the new week\n            // if (!this.needsDataForWeek()) {\n            //     // Data for the current week has already been loaded; skip fetching\n            //     console.log(\"Data for the current week has already been loaded; skipping redundant fetch.\");\n            //     return;\n            // }\n            //\n            // // Proceed with data fetching if needed\n            // await this.checkAndFetchForUpcomingContent();\n            // console.log(7)\n        },\n        async shiftHours(hours) {\n            // Shift the viewing window by the specified number of hours\n            this.viewingWindowStart = dayjs(this.viewingWindowStart).add(hours, 'hour').toDate()\n\n            // Set the current week start and end based on the new viewing window start\n            this.currentWeekStart = dayjs(this.viewingWindowStart).startOf('week').toDate()\n            this.currentWeekEnd = dayjs(this.viewingWindowStart).endOf('week').toDate()\n\n            // If the day has changed, update selectedDay and the week's range\n            if (!dayjs(this.viewingWindowStart).isSame(dayjs(this.selectedDay), 'day')) {\n                this.selectedDay = dayjs(this.viewingWindowStart).startOf('day').toDate()\n            }\n\n            // Use the updated fetch logic\n            await this.fetchWeekDataIfNeeded()\n            // console.log(8)\n        },\n        isElevenPM(date) {\n            // Convert the date to a Day.js object if it's not already one\n            const time = dayjs(date)\n            // Check if the hour is 23 (11 PM)\n            // console.log(9)\n            return time.hour() === 23\n\n        },\n        // Actions to change the month\n        async subtractMonth() {\n            // Convert currentMonth to a Day.js object if it's not already and subtract one month\n            this.currentMonth = dayjs(this.currentMonth).subtract(1, 'month').toDate()\n\n            try {\n                // Pass the new currentMonth to setSelectedDay\n                await this.setSelectedDay(this.currentMonth)\n                // console.log('Set selected day based on current month:', this.currentMonth)\n            } catch (error) {\n                console.error(`Failed to set selected day based on current month ${this.currentMonth}:`, error)\n            }\n            // console.log(10)\n        },\n        async addMonth() {\n            // Convert currentMonth to a Day.js object if it's not already and add one month\n            this.currentMonth = dayjs(this.currentMonth).add(1, 'month').toDate()\n\n            try {\n                // Pass the new currentMonth to setSelectedDay\n                await this.setSelectedDay(this.currentMonth)\n                // console.log('Set selected day based on current month:', this.currentMonth)\n            } catch (error) {\n                console.error(`Failed to set selected day based on current month ${this.currentMonth}:`, error)\n            }\n            // console.log(11)\n        },\n        async fetchFiveDaySixHourSchedule() {\n            console.error('fetchFiveDaySixHourSchedule')\n            try {\n                const userStore = useUserStore()\n                const response = await axios.get('/api/schedule')\n\n                // Fallback to response timezone if userStore.timezone is not set\n                const timezone = userStore.timezone || response.data.userTimezone || 'UTC' // Additional fallback to 'UTC'\n\n                // Convert the entire schedule, including nested recurrenceDetails, to the user's timezone\n                this.fiveDaySixHourSchedule = convertScheduleToTimezone(response.data, timezone)\n                // console.error('fetchFiveDaySixHourSchedule', response.data)\n            } catch (error) {\n                console.error('Failed to load schedule shows:', error)\n                // Handle the error state as needed, e.g., setting an error state property\n            }\n            // console.log(12)\n        },\n        async fetchTodaysContent() {\n            try {\n                const userStore = useUserStore()\n                const response = await axios.get('/api/schedule/today')\n\n                // Fallback to response timezone if userStore.timezone is not set\n                const timezone = userStore.timezone || response.data.userTimezone || 'UTC' // Additional fallback to 'UTC'\n\n                this.todaysContent = convertScheduleToTimezone(response.data, timezone)\n            } catch (error) {\n                console.error('Failed to fetch today\\'s content:', error)\n            }\n            // console.log(13)\n        },\n        async preloadWeeklyContent() {\n            console.log('preloading weekly content...')\n            // Use the current date to preload content for the current week\n            const currentDate = dayjs(this.baseTime) // Creates a Day.js object representing the current date and time\n\n            try {\n                // Call loadWeekFromDate with the current Day.js date object\n                await this.loadWeekFromDate(currentDate) // loadWeekFromDate uses dayjs\n            } catch (error) {\n                console.error('Failed to preload weekly content:', error)\n            }\n            // console.log(14)\n        },\n        // this is our new fetch schedules method.\n        async fetchSchedules(startDate, endDate) {\n            this.isLoading = true\n            console.log(`Loading schedule between: ${startDate} and ${endDate}`) // Log the date being requested\n            try {\n                const userStore = useUserStore()\n                const dayStartDate = dayjs(startDate)\n                const dayEndDate = dayjs(endDate)\n                const fullISOStartDate = dayStartDate.toISOString()\n                const fullISOEndDate = dayEndDate.toISOString()\n\n                const response = await axios.get(`/api/schedules/range?start=${fullISOStartDate}&end=${fullISOEndDate}`)\n\n                const formattedStartDate = dayStartDate.format('YYYY-MM-DD') // For potential error messages and logging\n                const formattedEndDate = dayEndDate.format('YYYY-MM-DD') // For potential error messages and logging\n                // console.log(`Loading schedule between: ${formattedStartDate} and ${formattedEndDate}`) // Log the date being requested\n                // console.log('Received response:', response.data) // Log the raw response data\n\n                // Fallback to response timezone if userStore.timezone is not set\n                const timezone = userStore.timezone || response.data.userTimezone\n\n                const newData = convertScheduleToTimezone(response.data, timezone) // Ensure you are accessing the correct data property from the response\n\n                // Merge newData into schedules, avoiding duplicates\n                // this.schedules = [...this.schedules, ...newData].filter((value, index, self) =>\n                //         index === self.findIndex((t) => (\n                //             t.id === value.id && t.startTime === value.startTime\n                //         )),\n                // )\n                // Merge newData into schedules, avoiding duplicates\n                this.schedules = [...new Set([...this.schedules, ...newData].map(item => JSON.stringify(item)))].map(item => JSON.parse(item));\n                // console.log('Updated schedules:', this.schedules); // Log the updated schedules\n\n                // Optionally update fetch logs or perform additional state updates\n                // this.updateFetchLogs(startDate) // this was designed to just log a week fetching at a time.\n\n            } catch (error) {\n                console.error('Failed to fetch schedules:', error)\n                this.isLoading = false\n                // console.log('012')\n            } finally {\n                this.isLoading = false\n                // console.log('Schedule loaded!')\n            }\n        },\n\n        async fetchMoreSchedules() {\n            // Prevent fetching if already loading or if there are no more schedules to fetch\n            if (this.isLoading || !this.hasMore) return;\n\n            this.isLoading = true;\n            console.log('Fetching more schedules...');\n            try {\n                const lastSchedule = this.schedules[this.schedules.length - 1];\n                const startDate = lastSchedule ? dayjs(lastSchedule.startTime).format('YYYY-MM-DD') : dayjs().format('YYYY-MM-DD');\n                const endDate = dayjs(startDate).add(7, 'day').format('YYYY-MM-DD'); // Fetch the next 7 days\n\n                await this.fetchSchedules(startDate, endDate);\n\n                // Check if new schedules were added\n                const newSchedules = this.schedules.slice(this.schedules.length - 1);\n                // If no new schedules are fetched, set hasMore to false\n                if (newSchedules.length === 0) {\n                    this.hasMore = false;\n                } else {\n                    // Increment the next page number for future fetches\n                    this.nextPage += 1;\n                }\n            } catch (error) {\n                console.error('Failed to fetch more schedules:', error);\n            } finally {\n                this.isLoading = false;\n            }\n        },\n\n        async loadWeekFromDate(date) {\n            let formattedDate = null // Declare formattedDate outside of the try block\n            this.isLoading = true\n            console.log('Loading week from date...')\n            try {\n                const userStore = useUserStore()\n                // Ensure the date is in UTC format for the request\n                // console.log('Date before formatted: ' + date)\n                // Convert date to Day.js object and format it in ISO string with UTC\n                const dayDate = dayjs(date)\n                const fullISODate = dayDate.toISOString()\n                // console.log(`Loading week data for date in UTC: ${fullISODate}`)\n\n                // Fetch the week's schedule data\n                // Send the dateTime and timezone as a JSON object in a POST request\n                const response = await axios.post(`/api/schedule/week/${fullISODate}`)\n\n                // const formattedDate = date.toISOString().split('T')[0];\n                // Log and error handling\n                const formattedDate = dayDate.format('YYYY-MM-DD') // For potential error messages and logging\n                // console.log(`Loading week data for date: ${formattedDate}`) // Log the date being requested\n                //\n                // const response = await axios.get(`/api/schedule/week/${formattedDate}`);\n                // console.log('Received response:', response.data) // Log the raw response data\n\n                // Fallback to response timezone if userStore.timezone is not set\n                const timezone = userStore.timezone || response.data.userTimezone\n                // console.log(`Using timezone: ${timezone}`) // Log the timezone being used\n\n                const newData = convertScheduleToTimezone(response.data, timezone) // Ensure you are accessing the correct data property from the response\n\n                // Merge newData into weeklyContent, avoiding duplicates\n                this.weeklyContent = [...this.weeklyContent, ...newData].filter((value, index, self) =>\n                        index === self.findIndex((t) => (\n                            t.id === value.id && t.startTime === value.startTime\n                        )),\n                )\n\n                // console.log('Updated weeklyContent:', this.weeklyContent) // Log the updated weekly content\n\n                // Optionally update fetch logs or perform additional state updates\n                this.updateFetchLogs(date)\n\n                this.isLoading = false\n                // console.log('Week from date loaded!')\n            } catch (error) {\n                console.error(`Failed to load content for week starting ${formattedDate}:`, error)\n                this.isLoading = false\n                // console.log('002')\n            }\n            // console.log(15)\n            // console.log('End of loadWeekFromDate function')\n        },\n        updateFetchLogs(date) {\n            // Convert date to a Day.js object if it's not already one\n            const dayDate = dayjs(date)\n\n            // Use Day.js to calculate the start and end of the week\n            const weekStart = dayDate.startOf('week').toISOString() // Assumes the week starts on Sunday\n            const weekEnd = dayDate.endOf('week').toISOString() // Assumes the week ends on Saturday\n            const fetchTime = dayjs().toISOString() // Current time in ISO format\n\n            // Find existing log entry for the week\n            const existingLogIndex = this.dataFetchLog.findIndex(log =>\n                log.weekStart === weekStart && log.weekEnd === weekEnd)\n\n            if (existingLogIndex !== -1) {\n                // Update the last fetch time if the log already exists\n                this.dataFetchLog[existingLogIndex].lastFetch = fetchTime\n            } else {\n                // Add a new log entry if it does not exist\n                this.dataFetchLog.push({weekStart, weekEnd, lastFetch: fetchTime})\n            }\n            // console.log(16)\n        },\n        needsDataForWeek() {\n            // Helper function to format dates to 'YYYY-MM-DD' for easier comparison\n            const formatISODate = (date) => dayjs(date).format('YYYY-MM-DD')\n\n            // Current week range in 'YYYY-MM-DD' format\n            const weekStartStr = formatISODate(this.currentWeekStart)\n            const weekEndStr = formatISODate(this.currentWeekEnd)\n\n            // Enhanced logging for debugging\n            // console.log(`Current week range: ${weekStartStr} to ${weekEndStr}`)\n            // console.log('Existing data fetch log entries:', this.dataFetchLog)\n\n            // Iterate through the fetch log to check if the current week has been fetched\n            const weekHasBeenFetched = this.dataFetchLog.some(log => {\n                // Convert log dates to 'YYYY-MM-DD' format for comparison\n                const logWeekStartStr = formatISODate(log.weekStart)\n                const logWeekEndStr = formatISODate(log.weekEnd)\n\n                // Log each comparison for insight\n                // console.log(`Comparing to fetched range: ${logWeekStartStr} to ${logWeekEndStr}`)\n\n                return logWeekStartStr <= weekStartStr && logWeekEndStr >= weekEndStr\n            })\n\n            // Log the final determination\n            // console.log(`Week from ${weekStartStr} to ${weekEndStr} has ${weekHasBeenFetched ? '' : 'not '}been fetched.`)\n            // console.log(17)\n            return !weekHasBeenFetched\n        },\n        calculateExtendedEndForUpcomingContent() {\n            // Convert viewingWindowStart to a Day.js object if it's not already one\n            const baseStartTime = dayjs(this.viewingWindowStart)\n\n            // Extend by 6 hours to cover the upcoming content span\n            // Day.js handles date and time addition cleanly, returning a new Day.js object\n            const extendedEndTime = baseStartTime.add(6, 'hour')\n\n            // console.log(18)\n            // Return the extended end time as a Date object, if needed elsewhere as a Date\n            return extendedEndTime.toDate()\n        },\n        // Function to check for and fetch missing upcoming content\n        async checkAndFetchForUpcomingContent() {\n            const upcomingDates = getUpcomingContentDates(this.viewingWindowStart) // Assuming this returns Day.js objects\n            const now = dayjs()\n            const fifteenMinutesAgo = now.subtract(15, 'minutes')\n\n            for (const date of upcomingDates) {\n                const dateString = date.format('YYYY-MM-DD')  // Day.js format for 'YYYY-MM-DD'\n                const contentCoverageAndFreshness = this.weeklyContent.some(content => {\n                    const contentDate = dayjs(content.startTime).format('YYYY-MM-DD')  // Convert and compare as 'YYYY-MM-DD'\n                    const lastFetchedTime = this.dataFetchLog[dateString]\n                    const isFresh = lastFetchedTime && dayjs(lastFetchedTime) > fifteenMinutesAgo\n                    return dateString === contentDate && isFresh\n                })\n\n                if (!contentCoverageAndFreshness) {\n                    // This date needs data fetching\n                    await this.fetchDataAndUpdateLog(dateString, date.toDate()) // Pass as Date if needed, or adjust downstream functions to accept Day.js objects\n                    break // Assuming you fetch data for the week, so no need to check further dates within the same week\n                }\n            }\n            // console.log(19)\n        },\n        async fetchDataAndUpdateLog(dateString, date) {\n            try {\n                // Assuming 'date' is already a Day.js object; if not, convert it\n                const dayDate = dayjs(date)\n\n                await this.loadWeekFromDate(dayDate.toDate())  // Pass as a Date if needed, or adjust 'loadWeekFromDate' to accept Day.js objects\n                // Successfully fetched, so update the log\n                this.dataFetchLog[dateString] = dayjs().toISOString()  // Use Day.js to get the current time in ISO format\n                // console.log('Data fetched successfully for date:', dateString)\n            } catch (error) {\n                console.error(`Failed to fetch data for date ${dateString}:`, error)\n            }\n            // console.log(20)\n        },\n\n        // Updated to use this.currentWeekStart and this.currentWeekEnd directly\n        async fetchWeekDataIfNeeded() {\n            // Assumes this.currentWeekStart and this.currentWeekEnd are already set\n            if (this.needsDataForWeek()) {\n                await this.checkAndFetchForUpcomingContent().catch(error => {\n                    console.error('Failed to load data for the week:', error)\n                    return false // Indicates failure to fetch when an error occurs\n                })\n            } else {\n                console.log('Week data already loaded; no need to fetch.')\n            }\n            // console.log(21)\n        },\n\n        // Function to simply update baseTime with the given time (expected to be a Day.js object or compatible input)\n        updateBaseTime(time) {\n            // Ensure the time is a Day.js object when setting baseTime\n            this.baseTime = dayjs(time).toDate()  // Convert to Date if necessary; consider keeping it as Day.js object if possible\n            // console.log(22)\n        },\n\n        // Function to set baseTime based on a new time input (expected to be a string, Date, etc.)\n        setBaseTime(newTime) {\n            // Convert newTime to a Day.js object and then to Date if necessary\n            this.baseTime = dayjs(newTime).toDate()  // This handles various input formats and ensures consistency\n            // console.log(23)\n        },\n\n\n        /**\n         * This method orchestrates the update of show scheduling data for the next four hours.\n         * It is designed to be triggered when there are changes to the base time or when a manual refresh is needed.\n         * The method handles loading and organizing the scheduling data to be ready for display in the grid.\n         */\n        async updateNextFourHours() {\n            // Set the loading state to true to indicate that data processing is underway.\n            // This can be used to display a loading spinner or disable user interaction temporarily.\n            this.isLoading = true\n\n            // Update the time range for the scheduling grid. This adjusts `currentHalfHour` and `fourHoursLater`\n            // based on the current `baseTime`. These values define the range of time for which shows will be displayed.\n            this.updateTimeRange()\n\n            // Update the time slots\n            this.setTimeSlots()\n\n            // Prepares the shows for the grid display by filtering, calculating grid slots,\n            // resolving conflicts, and optionally filling empty grid slots with placeholders.\n            // This step involves several functions that ensure shows are positioned correctly according to their\n            // start time, duration, and conflicts with other shows.\n            this.prepareShowsForGrid()\n\n            // Reset the loading state to false indicates that the data processing is complete.\n            // This allows the user interface to be interactive again and shows the updated data in the grid.\n            this.isLoading = false\n            // console.log(24)\n        },\n\n\n        updateTimeRange() {\n            // Ensure the baseTime is interpreted correctly in the current user's timezone\n            const baseDate = dayjs(this.baseTime).tz(getTimeZone())\n\n            // Calculate the rounded minutes to either 0 or 30 based on the current time\n            const roundedMinutes = baseDate.minute() < 30 ? 0 : 30\n\n            // Set the current half hour, rounding down to the nearest half-hour mark\n            const currentHalfHour = baseDate.minute(roundedMinutes).second(0).millisecond(0).startOf('minute')\n\n            // Calculate four hours later from the current half-hour mark\n            const fourHoursLater = currentHalfHour.add(4, 'hours')\n\n            // Update the store's currentHalfHour and fourHoursLater ensuring they are Date objects if required\n            this.currentHalfHour = currentHalfHour.toDate()\n            this.fourHoursLater = fourHoursLater.toDate()\n            // console.log(25)\n\n            // console.log('Fetching shows between:', currentHalfHour.format('YYYY-MM-DD HH:mm:ss'), 'and', fourHoursLater.format('YYYY-MM-DD HH:mm:ss'))\n        },\n\n        initializeTimeSlots() {\n            this.timeSlots = createTimeSlots()\n        },\n\n        setTimeSlots() {\n            const appSettingStore = useAppSettingStore()\n            let slotHours\n\n            // Determine the number of slot hours based on screen size\n            if (appSettingStore.isVerySmallScreen) {\n                slotHours = this.verySmallScreenSlotHours\n            } else if (appSettingStore.isSmallScreen) {\n                slotHours = this.smallScreenSlotHours\n            } else {\n                slotHours = this.mediumScreenSlotHours\n            }\n\n            const intervalMinutes = this.slotIntervalMinutes\n            const slots = []\n            const totalSlots = (slotHours * 60) / intervalMinutes\n\n            // Ensure state.currentHalfHour is a Day.js object\n            const currentHalfHour = dayjs(this.currentHalfHour)\n\n            // Calculate the time for each slot using Day.js\n            for (let i = 0; i < totalSlots; i++) {\n                let slotTime = currentHalfHour.add(i * intervalMinutes, 'minute')\n                slots.push(slotTime.toDate())  // Convert back to JavaScript Date if necessary\n            }\n            this.timeSlots = slots\n            // console.log(26)\n            return slots.length\n        },\n\n        prepareShowsForGrid() {\n\n            if (!this.timeSlots || !Array.isArray(this.timeSlots) || this.timeSlots.length === 0) {\n                console.error('timeSlots is not properly initialized.')\n                // console.log(27)\n                // Handle this scenario, e.g., by initializing timeSlots, or skipping the update\n                return\n            }\n\n\n            // Step 1: Filter shows within the desired time range\n            const shows = this.filterShowsForTimeRange()\n\n            // Step 2: Calculate initial grid slots for these shows\n            const processedShows = this.calculateGridSlots(shows, this.timeSlots)\n\n            // Step 3: Process shows to set nowPlaying and comingUpNext flags\n            const showsWithStatusFlags = this.processShows(processedShows)\n\n            // Step 4: Update column occupancy and find the maximum row used\n            const {colOccupancy, maxRowUsed} = this.updateColumnOccupancy(showsWithStatusFlags, this.timeSlots.length)\n\n            // Step 5: Fill gaps in the grid with placeholders\n            const gridItems = this.fillGapsAndCreatePlaceholders(colOccupancy, maxRowUsed, this.timeSlots.length)\n\n            // Step 6: Combine processed shows with the placeholders\n            const combinedShows = [...showsWithStatusFlags, ...gridItems]\n\n            // Step 7: Sort and group shows by rows\n            this.nextFourHoursOfContent = this.sortShowsByPosition(combinedShows)\n            // console.log(28)\n        },\n\n        filterShowsForTimeRange() {\n            return this.schedules.filter(show => {\n                // Validate show data integrity\n                if (typeof show.startTime !== 'string' || typeof show.durationMinutes !== 'number') {\n                    console.warn('Invalid show data:', show.startTime, show.durationMinutes)\n                    // console.log(29)\n                    return false // Skip this show if it doesn't meet data expectations\n                }\n\n                const showStart = dayjs(show.startTime)\n                const showEnd = dayjs(show.endTime)\n                const isInTimeRange = showStart.isBefore(this.fourHoursLater) && showEnd.isAfter(this.currentHalfHour)\n\n                // Detailed logging for debugging\n                if (isInTimeRange) {\n                    const hasStarted = showStart.isBefore(this.currentHalfHour) ? 'already started' : 'starts within range'\n                    // console.log(`Show: ${show.content.name}, ${hasStarted}, Start: ${showStart.format('HH:mm:ss')}, End: ${showEnd.format('HH:mm:ss')}, Duration: ${show.durationMinutes}`)\n                }\n                // console.log(30)\n                return isInTimeRange\n            })\n        },\n\n        calculateGridSlots(shows, timeSlots) {\n            // Validate the timeSlots array to prevent errors\n            if (!Array.isArray(timeSlots) || timeSlots.length === 0) {\n                console.error('Invalid or empty timeSlots array')\n                // console.log(31)\n                return [] // Exit if no valid time slots to work with\n            }\n\n            // Determine the range of timeSlots\n            const firstTimeSlot = dayjs(timeSlots[0])\n            const lastTimeSlot = dayjs(timeSlots[timeSlots.length - 1]).add(30, 'minutes')\n\n\n            return shows.filter(show => {\n                const showStart = dayjs(show.startTime)\n                const showEnd = dayjs(show.endTime)\n                return showStart.isBefore(lastTimeSlot) && showEnd.isAfter(firstTimeSlot)\n            }).map(show => {\n                const showStart = dayjs(show.startTime)\n                const showEnd = dayjs(show.endTime)\n                // console.log('************************************')\n                // console.log(`Processing show: ${show.content.name}, Start: ${show.startTime}, End: ${show.endTime}`)\n\n                // Find the index of the slot where the show should start\n                let slotIndex = timeSlots.findIndex(slot => showStart.isSameOrBefore(dayjs(slot)))\n\n                // Adjust if the show starts exactly at a slot time or just after the last checked slot time\n                if (slotIndex === -1 || showStart.isAfter(dayjs(timeSlots[slotIndex]))) {\n                    slotIndex = Math.max(0, slotIndex)\n                }\n\n                // console.log(`Comparing show start ${showStart.format()} to timeSlot index ${slotIndex} at ${dayjs(timeSlots[slotIndex]).format()}`)\n\n                // Calculate the end slot index\n                let endSlotIndex = timeSlots.findIndex(slot => showEnd.isSameOrBefore(dayjs(slot).add(30, 'minutes')))\n\n                // If the end slot index points to a slot that starts after the show ends, subtract one\n                if (endSlotIndex !== -1 && showEnd.isBefore(dayjs(timeSlots[endSlotIndex]))) {\n                    endSlotIndex--\n                }\n\n                // Handle cases where the show ends after the last slot\n                if (endSlotIndex === -1 || showEnd.isSame(dayjs(timeSlots[timeSlots.length - 1]).add(30, 'minutes'))) {\n                    endSlotIndex = timeSlots.length - 1\n                }\n\n                // console.log(`Comparing show end ${showEnd.format()} to timeSlot index ${endSlotIndex} at ${endSlotIndex !== -1 ? dayjs(timeSlots[endSlotIndex]).format() : 'out of range'}`)\n\n\n                // Calculate the number of slots the show should span\n                let span = endSlotIndex - slotIndex + 1\n\n                // console.log(`Calculated gridStart: ${slotIndex + 1}, gridSpan: ${span}`)\n                // console.log(32)\n                return {\n                    ...show,\n                    gridStart: slotIndex + 1, // Convert to 1-based index for grid positioning\n                    gridSpan: span,\n                }\n            })\n        },\n\n        processShows(shows) {\n            let comingUpNextSet = false\n\n            shows.forEach(show => {\n                const start = dayjs(show.startTime)\n                const end = start.add(show.durationMinutes, 'minutes')\n                const now = dayjs(this.baseTime)\n\n                // Determine if the show is now playing\n                show.nowPlaying = !show.placeholder && now.isAfter(start) && now.isBefore(end) && show.gridStart === 1\n\n                // Find the first show that does not start in the first grid column\n                if (!comingUpNextSet && !show.placeholder && show.gridStart > 1) {\n                    show.comingUpNext = true\n                    comingUpNextSet = true  // Ensure only one show gets this flag\n                }\n            })\n            // console.log(33)\n            return shows\n        },\n\n        updateColumnOccupancy(processedShows, cols) {\n            let colOccupancy = new Array(cols).fill(null).map(() => new Set())\n            let maxRowUsed = 0\n            processedShows.forEach(show => {\n                for (let i = show.gridStart - 1; i < show.gridStart - 1 + show.gridSpan; i++) {\n                    if (i >= 0 && i < cols) {\n                        colOccupancy[i].add(show.gridRow)\n                        maxRowUsed = Math.max(maxRowUsed, show.gridRow)\n                    }\n                }\n            })\n            // console.log(34)\n            return {colOccupancy, maxRowUsed}\n        },\n\n        fillGapsAndCreatePlaceholders(colOccupancy, maxRowUsed, cols) {\n            let gridItems = []\n            // Ensure at least one row is processed even if no shows are present\n            maxRowUsed = Math.max(maxRowUsed, 1)\n            for (let row = 1; row <= maxRowUsed; row++) {\n                gridItems.push(...this.findAndFillGapsForSingleRow(colOccupancy, row, cols))\n            }\n            // console.log(35)\n            return gridItems\n        },\n\n        findAndFillGapsForSingleRow(colOccupancy, row, cols) {\n            let gridItems = []\n            let gapStart = -1\n            for (let i = 0; i < cols; i++) {\n                if (!colOccupancy[i].has(row)) {\n                    gapStart = gapStart === -1 ? i : gapStart\n                } else if (gapStart !== -1) {\n                    // Use different placeholders based on the row number\n                    if (row === 1) {\n                        gridItems.push(this.createPlaceholder(gapStart + 1, i - gapStart, row))\n                    } else {\n                        gridItems.push(this.createBlankSpotPlaceholder(gapStart + 1, i - gapStart, row))\n                    }\n                    gapStart = -1\n                }\n            }\n            if (gapStart !== -1) {\n                // Again, differentiate between the first row and other rows\n                if (row === 1) {\n                    gridItems.push(this.createPlaceholder(gapStart + 1, cols - gapStart, row))\n                } else {\n                    gridItems.push(this.createBlankSpotPlaceholder(gapStart + 1, cols - gapStart, row))\n                }\n            }\n            // console.log(36)\n            return gridItems\n        },\n\n        sortShowsByPosition(combinedShows) {\n            if (!Array.isArray(combinedShows)) {\n                console.error('Expected an array of shows, received:', combinedShows)\n                return [] // Return an empty array if not an array to prevent errors\n            }\n\n            // console.log(37)\n            // Sort shows directly by row and then by start position within each row\n            return combinedShows.sort((a, b) => a.gridRow - b.gridRow || a.gridStart - b.gridStart)\n        },\n\n        createPlaceholder(start, span, row) {\n            // console.log(38)\n            return {\n                placeholder: true,\n                startTime: 'placeholder',\n                priority: 0,\n                gridStart: start,\n                gridSpan: span,\n                gridRow: row,\n                content: {name: 'Nothing scheduled.'},\n            }\n        },\n\n        createBlankSpotPlaceholder(start, span, row) {\n            // console.log(39)\n            return {\n                placeholder: true,\n                startTime: 'placeholder',\n                priority: 0,\n                gridStart: start,\n                gridSpan: span,\n                gridRow: row,\n                content: {name: 'Blank Spot'}, // Ensure it is differentiated from normal placeholders\n            }\n        },\n\n    },\n\n    getters: {\n        currentTime: (state) => {\n            // console.log('getter', 40)\n            return dayjs(state.baseTime).format('h:mm A')\n        },\n        currentDate: (state) => {\n            // console.log('getter', 40)\n            return dayjs(state.baseTime).format('MMMM DD, YYYY')\n        },\n        // Prepare banners with grid positions based on current time slots\n        preparedTimeBanners: (state) => {\n            // console.log('getter', 41)\n            const timeZone = getTimeZone() // Ensure this is defined\n            let now = dayjs().tz(timeZone)\n            let todayStart = now.startOf('day')\n            let tomorrowStart = todayStart.add(1, 'day')\n            let yesterdayStart = todayStart.subtract(1, 'day');\n\n            // console.log('Current Time Slots:', state.timeSlots.map(slot => dayjs(slot).format('HH:mm')))\n\n            return state.timeBanners.flatMap(banner => {\n                // console.log('getter', 42)\n                // Create banner times for today and tomorrow to handle overnight spans\n                let bannerTodayStart = todayStart.hour(parseInt(banner.startTime.split(':')[0])).minute(parseInt(banner.startTime.split(':')[1]))\n                let bannerTodayEnd = bannerTodayStart.clone().add(banner.duration, 'hours')\n                let bannerTomorrowStart = tomorrowStart.hour(parseInt(banner.startTime.split(':')[0])).minute(parseInt(banner.startTime.split(':')[1]))\n                let bannerTomorrowEnd = bannerTomorrowStart.clone().add(banner.duration, 'hours')\n                let bannerYesterdayStart = yesterdayStart.hour(parseInt(banner.startTime.split(':')[0])).minute(parseInt(banner.startTime.split(':')[1]));\n                let bannerYesterdayEnd = bannerYesterdayStart.clone().add(banner.duration, 'hours');\n\n                // Create an array of potential banners for today and tomorrow\n                let potentialBanners = [\n                    {...banner, start: bannerYesterdayStart, end: bannerYesterdayEnd},\n                    {...banner, start: bannerTodayStart, end: bannerTodayEnd},\n                    {...banner, start: bannerTomorrowStart, end: bannerTomorrowEnd},\n                ]\n\n                return potentialBanners.map(banner => {\n                    // console.log('getter', 43)\n                    const startSlotIndex = state.timeSlots.findIndex(slot => banner.start.isSameOrBefore(dayjs(slot)) && banner.end.isAfter(dayjs(slot)))\n                    let endSlotIndex = state.timeSlots.findIndex(slot => banner.end.isSameOrBefore(dayjs(slot)))\n\n                    // Adjust the end index to be inclusive of the end time\n                    if (endSlotIndex === -1 || banner.end.isAfter(dayjs(state.timeSlots[state.timeSlots.length - 1]))) {\n                        endSlotIndex = state.timeSlots.length - 1\n                    } else {\n                        endSlotIndex -= 1\n                    }\n\n                    const gridStart = startSlotIndex + 1\n                    const gridSpan = endSlotIndex - startSlotIndex + 1\n\n                    // console.log(`Processing Banner: ${banner.name}`)\n                    // console.log(`StartTime: ${banner.start.format('HH:mm')}, EndTime: ${banner.end.format('HH:mm')}`)\n                    // console.log(`StartSlotIndex: ${startSlotIndex}, EndSlotIndex: ${endSlotIndex}`)\n                    // console.log(`Calculated gridStart: ${gridStart}, gridSpan: ${gridSpan}`)\n\n                    // Ensure the banner should be displayed within the current time slots\n                    if (gridStart && gridSpan > 0) {\n                        // console.log('getter', 44)\n                        return {...banner, gridStart, gridSpan}\n                    }\n                    // console.log('getter', 45)\n                    return null\n                })\n            }).filter(banner => banner != null) // Filter out banners that don't fit within the current time slots\n                .sort((a, b) => a.gridStart - b.gridStart) // Sort by gridStart, with the lowest number first\n        },\n\n\n        // setTimeSlots: (state) => {\n        //     const appSettingStore = useAppSettingStore()\n        //     let slotHours\n        //\n        //     // Determine the number of slot hours based on screen size\n        //     if (appSettingStore.isVerySmallScreen) {\n        //         slotHours = state.verySmallScreenSlotHours\n        //     } else if (appSettingStore.isSmallScreen) {\n        //         slotHours = state.smallScreenSlotHours\n        //     } else {\n        //         slotHours = state.mediumScreenSlotHours\n        //     }\n        //\n        //     const intervalMinutes = state.slotIntervalMinutes\n        //     const slots = []\n        //     const totalSlots = (slotHours * 60) / intervalMinutes\n        //\n        //     // Ensure state.currentHalfHour is a Day.js object\n        //     const currentHalfHour = dayjs(state.currentHalfHour)\n        //\n        //     // Calculate the time for each slot using Day.js\n        //     for (let i = 0; i < totalSlots; i++) {\n        //         let slotTime = currentHalfHour.add(i * intervalMinutes, 'minute')\n        //         slots.push(slotTime.toDate())  // Convert back to JavaScript Date if necessary\n        //     }\n        //     state.timeSlots = slots\n        //     return slots.length\n        // },\n\n        nextFourHoursWithHalfHourIntervals: (state) => {\n            // Check if timeSlots is not null, undefined, or empty before accessing length\n            if (!state.timeSlots || state.timeSlots.length === 0) {\n                console.log('timeSlots is null or has no elements')\n                // console.log('getter', 46)\n                // Handle this scenario appropriately, such as returning an empty array or a default value\n                return []\n            }\n\n            const userStore = useUserStore() // Access the user store\n            const appSettingStore = useAppSettingStore() // Access the settings store\n            const userTimezone = userStore.timezone // Get the user's timezone\n            const cols = state.timeSlots.length\n\n            const intervals = []\n            const now = dayjs(state.baseTime).tz(userTimezone) // Get the current time in the user's timezone\n\n            // Determine if the current minute is less than 30 to start at the top of the hour or at the half-hour\n            let current = now.minute() < 30 ? now.startOf('hour') : now.startOf('hour').add(30, 'minutes')\n\n\n            // Generate intervals for the next 4 hours, each 30 minutes apart\n            // Adjust the loop count based on the number of columns/ intervals needed\n            for (let i = 0; i < cols; i++) { // Adjust the number of intervals based on the screen size\n                intervals.push({\n                    formatted: current.format('hh:mm A'), // Formatted time for display\n                    dateTimeString: current.format('YYYY-MM-DD HH:mm:ss'), // Y-m-d H:m:s format for comparisons\n                })\n                current = current.add(30, 'minute') // Move to the next 30-minute interval\n            }\n            // console.log('getter', 47)\n            return intervals\n        },\n\n        upcomingContent: (state) => {\n            // Since viewingWindowStart is now a Day.js object, use Day.js methods directly\n            const start = dayjs(state.viewingWindowStart).subtract(1, 'hour') // 1 hour earlier\n            const end = start.add(7, 'hours') // 6 hours later from the start\n\n            // Group shows by start time using Day.js\n            const showsGroupedByStartTime = state.weeklyContent.reduce((acc, item) => {\n                const itemStart = dayjs(item.startTime).valueOf() // Use .valueOf() to get the timestamp\n                if (!acc[itemStart]) {\n                    acc[itemStart] = []\n                }\n                acc[itemStart].push(item)\n                return acc\n            }, {})\n\n            // Select the show with the lowest priority for each start time\n            const selectedShows = Object.values(showsGroupedByStartTime).map(group => {\n                return group.reduce((selected, item) => {\n                    return !selected || item.priority < selected.priority ? item : selected\n                }, null)\n            })\n            // console.log('getter', 48)\n            // Filter shows that fall within the next 6-hour window and sort them\n            return selectedShows\n                .filter(item => {\n                    const itemStart = dayjs(item.startTime)\n                    return itemStart.isSameOrAfter(start) && itemStart.isBefore(end)\n                })\n                .sort((a, b) => dayjs(a.startTime).unix() - dayjs(b.startTime).unix()) // Sorting by Unix timestamp\n        },\n\n\n        nextSixHours: (state) => {\n            // Assuming state.viewingWindowStart is already a Day.js object.\n            // If it's still a native Date, convert it first:\n            let adjustedStart = dayjs(state.viewingWindowStart)\n\n            // Add 6 hours to the adjusted start time\n            const end = adjustedStart.add(6, 'hours')\n\n            // Generate each hour of the interval between adjustedStart and end\n            const hours = []\n            let hour = adjustedStart\n\n            while (hour.isBefore(end)) {\n                hours.push(hour.toDate()) // Convert back to Date if necessary; otherwise, just use `hour` if you can use Day.js objects directly\n                hour = hour.add(1, 'hour')\n            }\n            // console.log('getter', 49)\n            return hours\n        },\n\n        dateMessage: (state) => {\n            const startDay = startOfDay(state.viewingWindowStart)\n            const formattedDate = format(startDay, 'EEEE MMMM do, yyyy')\n            // console.log('getter', 50)\n            if (isToday(startDay)) {\n                return `Today - ${formattedDate}`\n            } else if (isYesterday(startDay)) {\n                return `Yesterday - ${formattedDate}`\n            } else if (isTomorrow(startDay)) {\n                return `Tomorrow - ${formattedDate}`\n            } else {\n                return formattedDate\n            }\n        },\n\n        currentMonthIndex: (state) => {\n            // Ensure state.currentMonth is converted to a Day.js object\n            const month = dayjs(state.currentMonth)\n            // console.log('getter', 51)\n            // Day.js months are 0-indexed just like JavaScript Date, returns the month (0-11)\n            return month.month()\n        },\n\n        currentMonthName: (state) => {\n            // Ensure state.currentMonth is converted to a Day.js object\n            const month = dayjs(state.currentMonth)\n            // console.log('getter', 52)\n            // Returns the full name of the month, e.g., 'January', 'February', etc.\n            return month.format('MMMM')\n        },\n\n        currentYear: (state) => {\n            // Ensure state.currentMonth is converted to a Day.js object\n            const month = dayjs(state.currentMonth)\n            // console.log('getter', 53)\n            // Returns the year\n            return month.year()\n        },\n        isToday: (state) => {\n            const today = dayjs()  // Gets today's date as a Day.js object\n            const viewingStart = dayjs(state.viewingWindowStart)  // Convert to Day.js object if not already\n            // console.log('getter', 54)\n            // Compare if both dates are the same calendar day\n            return today.isSame(viewingStart, 'day')\n        },\n\n        daysInMonth: (state) => {\n            // Assuming state.currentMonth is a Day.js object; if it's a Date, convert it:\n            const currentMonth = dayjs(state.currentMonth)\n\n            const startOfCurrentMonth = currentMonth.startOf('month')\n            const endOfCurrentMonth = currentMonth.endOf('month')\n\n            // Adjust these to ensure the grid starts on Sunday and ends on Saturday\n            const startOfGrid = startOfCurrentMonth.startOf('week')  // Assumes the week starts on Sunday by default\n            const endOfGrid = endOfCurrentMonth.endOf('week')        // Assumes the week ends on Saturday by default\n\n            // Generate the days for the calendar grid\n            const days = []\n            let day = startOfGrid\n\n            while (day.isBefore(endOfGrid) || day.isSame(endOfGrid, 'day')) {\n                days.push(day.toDate()) // Collect days as Date objects; remove toDate() if you can use Day.js objects directly\n                day = day.add(1, 'day')\n            }\n            // console.log('getter', 55)\n            return days\n        },\n\n    },\n})\n","import { defineStore } from 'pinia'\nimport { router } from '@inertiajs/vue3'\nimport { useNotificationStore } from '@/Stores/NotificationStore'\n\nconst initialState = () => ({\n    id: 0,\n    name: '',\n    description: '',\n    slug: '',\n    totalSpots: '',\n    memberSpots: '',\n    teamCreator: [],\n    teamLeader: [],\n    members: [],\n    managers: [],\n    activeShow: [],\n    activeEpisode: [],\n    creators: [],\n    showModal: Boolean,\n    confirmDialog: false,\n    confirmManagerDialog: false,\n    selectedManagerName: '',\n    selectedManagerId: 0,\n    addManager: false,\n    removeManager: false,\n    deleteMemberName: '',\n    deleteMemberId: 0,\n    noteEdit: 0,\n    note: '',\n    saveNoteProcessing: Boolean,\n    // on the show episode manage page\n    // turn on the go live div\n    goLiveDisplay: false,\n    can: [],\n    openComponent: 'teamShows',\n})\n\nexport const useTeamStore = defineStore('teamStore', {\n    state: initialState,\n    actions: {\n        reset() {\n            // Reset the store to its original state (clear all data)\n            Object.assign(this, initialState())\n        },\n        // async fill() {\n        //     let r = await import('@/Json/team.json');\n        //     this.$state = r.default;\n        // },\n        setActiveTeam(team) {\n            this.id = team.id\n            this.name = team.name\n            this.description = team.description\n            this.slug = team.slug\n            this.members = team.members\n            this.managers = team.managers\n            this.totalSpots = team.totalSpots\n            this.memberSpots = team.memberSpots\n        },\n        setActiveShow(show) {\n            this.activeShow = show\n        },\n        setActiveEpisode(episode) {\n            this.activeShow = episode\n        },\n        addMember(member) {\n            this.members.push(member)\n        },\n        removeMember(memberId) {\n            this.members = this.members.filter(member => member.id !== memberId);\n        },\n        updateCreatorTeams(creatorId, teamId, remove = false) {\n            const creator = this.creators.find(c => c.id === creatorId);\n            if (creator) {\n                if (remove) {\n                    creator.teams = creator.teams.filter(team => team.id !== teamId);\n                } else {\n                    creator.teams.push({ id: teamId, is_manager: false }); // Add the new team to the creator's teams\n                }\n            }\n        },\n        // getCreators() {\n        //     router.reload({ only: ['creators'] })\n        // },\n        deleteTeamMemberCancel() {\n            this.confirmDialog = false\n        },\n        confirmTeamManagerCancel() {\n            this.confirmManagerDialog = false\n        },\n        // loadTeamMembers(members){\n        //     this.members = members;\n        // }\n        // deleteTeamMember() {\n        //     router.visit(route('teams.removeTeamMember'), {\n        //         method: 'post',\n        //         data: {\n        //             user_id: this.deleteMemberId,\n        //             team_id: this.id,\n        //             team_slug: this.slug,\n        //         },\n        //     })\n        // },\n        async deleteTeamMember() {\n            const notificationStore = useNotificationStore()\n            const payload = {\n                user_id: this.deleteMemberId,\n                team_id: this.id,\n            };\n\n            try {\n                const response = await axios.post(route('teams.removeTeamMember'), payload);\n                if (response.status === 200) {\n                    this.removeMember(this.deleteMemberId);\n                    this.updateCreatorTeams(this.deleteMemberId, this.id, true); // Remove the team from the creator's teams\n                    this.confirmDialog = false;\n                    notificationStore.setToastNotification(response.data.message, 'success')\n                } else {\n                    this.confirmDialog = false;\n                    notificationStore.setToastNotification('Failed to remove member from the team.', 'warning')\n                }\n            } catch (error) {\n                console.error(error);\n                this.confirmDialog = false;\n                notificationStore.setToastNotification('An error occurred while removing the member from the team.', 'error')\n            }\n        },\n\n        addTeamManager() {\n            router.visit(route('teams.addTeamManager'), {\n                method: 'post',\n                data: {\n                    user_id: this.selectedManagerId,\n                    team_id: this.id,\n                    team_slug: this.slug,\n                },\n            })\n            this.confirmManagerDialog = false\n        },\n        removeTeamManager() {\n            router.visit(route('teams.removeTeamManager'), {\n                method: 'post',\n                data: {\n                    user_id: this.selectedManagerId,\n                    team_id: this.id,\n                    team_slug: this.slug,\n                },\n            })\n            this.confirmManagerDialog = false\n        },\n        toggleGoLiveDisplay() {\n            this.goLiveDisplay = !this.goLiveDisplay\n        },\n        async fetchTeamMembers() {\n            await axios.get('/team/team-members').then().error()\n        },\n        setCreators(creators) {\n            this.creators = creators\n        },\n    },\n\n    getters: {\n        spotsRemaining(state) {\n            if (!state.members) {\n                return state.totalSpots; // Assume no members if state.members is not defined\n            }\n            return Math.max(state.totalSpots - state.members.length, 0);\n        },\n        membersCount(state) {\n            if (!state.members) {\n                return 0; // Assume no members if state.members is not defined\n            }\n            return state.members.length;\n        },\n    },\n})\n\n\n// Another option for declaring specific data to return:\n// let data = r.default;\n//\n// import('@/Json/team.json').then(r => {\n// this.$patch({\n//     name: data.name,\n//     spots: data.spots,\n//     members: data.members\n// });\n// });\n","import { defineStore } from 'pinia'\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\nimport { useStreamStore } from '@/Stores/StreamStore'\nimport { useUserStore } from '@/Stores/UserStore'\nimport { useChannelStore } from '@/Stores/ChannelStore'\nimport { useShowStore } from '@/Stores/ShowStore'\nimport { useAudioStore } from '@/Stores/AudioStore'\nimport videojs from 'video.js'\nimport { usePage } from '@inertiajs/vue3'\nimport { nextTick } from 'vue'\nimport { useNotificationStore } from '@/Stores/NotificationStore'\n\nconst initialState = () => ({\n    mistServerUri: 'https://mist.nottv.io/', // tec21: 2024-02-09, if we don't start with the address here changing channels is really slow and buggy. Address for the MistServer listed in the Admin Settings saved in AppSetting\n    player: null, // Video.js player instance\n    eventListenersAttached: false, // Track if listeners are attached\n    videoPlayerLoaded: false,\n    class: '',\n    videoContainerClass: '',\n    // ottClass: 'OttClose',\n    videoSourceIdSrc1: '',\n    videoSourceIdSrc2: '',\n    videoSourceIdSrc3: '',\n    videoSourceTypeSrc1: '',\n    videoSourceTypeSrc2: '',\n    videoSourceTypeSrc3: '',\n    firstPlayVideoSourceType: '',\n    firstPlayVideoSource: '',\n    key: '',\n    videoName: '',\n    videoSource: '',\n    videoSourceType: '',\n    videoPoster: '',\n    nextSource: '',\n    previousSource: '',\n    currentView: '',\n    currentChannelId: 0,\n    currentChannelName: '',\n    currentShow: {},\n    currentShowEpisode: {},\n    currentVideo: {},\n    hasVideo: false,\n    controls: true,\n    muted: true,\n    paused: true,\n    // videoCurrentTime: '',\n    currentTime: 0, // Current playback time in seconds\n    duration: 0, // Total video duration in seconds\n    formattedTime: '00:00 / 00:00', // Formatted time string\n    blue: false, // DO NOT REMOVE\n    videoIsYoutube: false,\n    videoUploadComplete: false,\n})\n\nexport const useVideoAuxPlayerStore = defineStore('videoAuxPlayerStore', {\n    state: initialState,\n    actions: {\n        reset() {\n            // Reset the store to its original state (clear all data)\n            Object.assign(this, initialState())\n        },\n\n        async getMistServerUri() {\n            try {\n                let response = await axios.get('/mist-server/uri')\n                this.mistServerUri = response.data\n            } catch (error) {\n                console.error(error)\n            }\n        },\n\n        // Initialize or update the player instance\n        setPlayer(playerInstance) {\n            this.player = playerInstance\n            this.initializePlayer().then(() => {\n                this.attachEventListeners() // Attach event listeners after initialization\n            }).catch(error => {\n                console.error('Error during video player initialization:', error)\n            })\n        },\n\n        // Initialize the player with necessary settings and start playback\n        async initializePlayer() {\n            if (!this.player) {\n                console.error('Video.js player is not initialized.')\n                return\n            }\n\n            await nextTick() // Ensure Vue's DOM updates are processed\n\n            // Perform any necessary audio context and node setup\n            await useAudioStore().ensureAudioContextAndNodesReady(this.player)\n\n            // Apply initial player settings\n            this.player.controls(false)\n            this.player.muted(this.muted)\n\n            // Attempt to start playback\n            this.player.ready(() => {\n                this.player.play().then(() => {\n                    console.log('Playback started successfully')\n                }).catch(error => {\n                    console.error('Error trying to play the video:', error)\n                    // Handle the error (e.g., showing a user-friendly message)\n                })\n            })\n        },\n\n        // Attach event listeners to the player\n        attachEventListeners() {\n            if (!this.player || this.eventListenersAttached) {\n                console.log('Event listeners are already attached or video player is not initialized.')\n                return\n            }\n\n            this.player.on('timeupdate', this.handleTimeUpdate)\n            this.player.on('fullscreenchange', this.handleFullscreenChange)\n            this.player.on('play', this.handlePlay)\n            this.player.on('pause', this.handlePause)\n            this.player.on('error', this.handleError)\n\n            this.eventListenersAttached = true\n            console.log('Event listeners attached.')\n        },\n\n        // Detach event listeners from the player\n        detachEventListeners() {\n            if (!this.player || !this.eventListenersAttached) {\n                console.log('Event listeners are already detached or video player is not initialized.')\n                return\n            }\n\n            useAudioStore().stopAudioLevelMonitoring()\n            this.player.off('timeupdate', this.handleTimeUpdate)\n            this.player.off('fullscreenchange', this.handleFullscreenChange)\n            this.player.off('play', this.handlePlay)\n            this.player.off('pause', this.handlePause)\n            this.player.off('error', this.handleError)\n\n            this.eventListenersAttached = false\n            console.log('Event listeners detached.')\n        },\n\n        // Dispose of the player and perform cleanup\n        disposePlayer() {\n            if (!this.player) {\n                console.error('Video player is not initialized.')\n                return\n            }\n            this.detachEventListeners() // Detach event listeners if attached\n            this.player.dispose() // Dispose of the player instance\n            this.player = null // Reset the player state\n\n            // Optionally, stop audio level monitoring if linked to the player lifecycle\n            // const audioStore = useAudioStore();\n            // audioStore.stopAudioLevelMonitoring();\n\n            console.log('Video player disposed and cleaned up.')\n        },\n\n        // New method to prepare for a new video source\n        prepareForNewVideoSource(source) {\n            console.log('Preparing for new video source')\n\n            // Example: Clear any existing channel or video-specific state\n            // useChannelStore().clearChannel()\n\n            // Reset or cleanup any existing video playback, if necessary\n            // this.resetPlayback();\n\n            // Load and play the new video source\n            this.loadNewVideo(source)\n        },\n\n        resetPlayback() {\n            if (this.player) {\n                this.player.pause()\n                this.player.muted(true)\n                this.player.currentTime(0) // Optionally reset the time\n                // Further cleanup logic here, if necessary\n                this.detachEventListeners() // Detach event listeners if attached\n            }\n        },\n\n        // Event handlers\n        handleTimeUpdate() {\n            // console.log('Handling timeupdate...');\n            // Implement your logic\n            this.currentTime = this.player.currentTime()\n            this.duration = this.player.duration()\n            const progressPercentage = (this.currentTime / this.duration) * 100\n            this.formattedTime = `${this.formatDuration(this.currentTime)} / ${this.formatDuration(this.duration)}`\n\n            // Update UI elements or emit events as needed\n            // Note: Direct manipulation of the DOM or component refs from the store is not recommended\n\n        },\n        // for the handleTimeUpdate eventHandler\n        formatDuration(durationInSeconds) {\n            const hours = Math.floor(durationInSeconds / 3600)\n            const minutes = Math.floor((durationInSeconds % 3600) / 60)\n            const seconds = Math.floor(durationInSeconds % 60)\n\n            const parts = [hours, minutes, seconds].map(part => part.toString().padStart(2, '0'))\n            return parts.join(':')\n        },\n        handleFullscreenChange() {\n            console.log('Handling fullscreenchange...')\n            // Implement your logic\n            this.player?.on('fullscreenchange', () => {\n                if (this.player.isFullscreen()) {\n                    // Video is entering fullscreen mode\n                    // You can add custom behavior for entering fullscreen here if needed\n                } else {\n                    // Video is exiting fullscreen mode\n                    // Check if the video was playing before entering fullscreen\n                    if (this.player.paused() === false) {\n                        // Resume playback after exiting fullscreen\n                        this.player.play()\n                    }\n                }\n            })\n        },\n        handlePlay() {\n            console.log('Handling play...')\n            // Implement your logic\n            this.player?.on('play', () => {\n                this.paused = false\n            })\n        },\n        handlePause() {\n            console.log('Handling pause...')\n            // Implement your logic\n            this.player?.on('pause', () => {\n                this.paused = true\n            })\n        },\n        handleError() {\n            console.log('Handling error...')\n            // Implement your logic\n            this.player?.on('error', function () {\n                const error = this.player.error()\n                console.error('Video.js Error:', error.code, error.message)\n            })\n        },\n        makeBlue() {\n            // for testing. DO NOT REMOVE.\n            this.blue = true\n        },\n        // Apparently this loadFirstPlay isn't being used...\n        // loadFirstPlay() {\n        //     const {props} = usePage()\n        //     let videoJs = videojs('aux-player')\n        //     const type = props.firstPlayVideoSourceType\n        //     const src = props.firstPlayVideoSource\n        //     videoJs.ready(() => {\n        //         videoJs.src({src, type})\n        //         videoJs.play().then(() => {\n        //             console.log('Playback started successfully')\n        //         }).catch(error => {\n        //             console.error('Error trying to play the video:', error)\n        //             // Handle the error (e.g., showing a user-friendly message)\n        //         })\n        //     })\n        //     console.log(type)\n        //     console.log(src)\n        // },\n        // Toggle mute state\n        toggleMute() {\n            if (this.muted) {\n                this.unMute()\n            } else {\n                this.mute()\n            }\n        },\n        // Mute the video\n        mute() {\n            if (this.player) {\n                this.player.muted(true)\n                this.muted = true\n            }\n        },\n        // Unmute the video\n        unMute() {\n            // const audioStore = useAudioStore()\n\n            if (this.player) {\n                // Prepare audio setup for when it's unmuted\n                // audioStore.userInteractionForAudio()\n\n                // Optionally, if fadeInAudioFromMuted is a gradual process,\n                // ensure this.player.muted(false) is called within that function.\n                // audioStore.fadeInAudioFromMuted()\n\n                this.player.muted(false)\n                this.muted = false\n            }\n        },\n        togglePlay() {\n            let videoJs = videojs('aux-player')\n\n            if (this.paused) {\n                videoJs.play()\n            } else {\n                videoJs.pause()\n            }\n        },\n        load() {\n            let videoJs = videojs('aux-player')\n            videoJs.load()\n        },\n        loadNewLiveSource(source, sourceType) {\n            let videoJs = videojs('aux-player')\n            let fullSourceUrl = this.mistServerUri + '/hls/' + source + '/index.m3u8'\n            videoJs.src({'src': fullSourceUrl, 'type': sourceType});\n            videoJs.play()\n        },\n        pause() {\n            let videoJs = videojs('aux-player')\n            videoJs.controls(false)\n            videoJs.pause()\n            this.paused = true\n        },\n        play() {\n            let videoJs = videojs('aux-player')\n\n            videoJs.play()\n            videoJs.controls(false)\n            this.paused = false\n        },\n        // next not built yet\n        next() {\n            let videoJs = videojs('aux-player')\n            videoJs.controls(false)\n            videoJs.src(this.nextSource)\n        },\n        // back not built yet\n        back() {\n            let videoJs = videojs('aux-player')\n            videoJs.controls(false)\n            videoJs.src(this.previousSource)\n        },\n        fullscreen() {\n            let videoJs = videojs('aux-player')\n            videoJs.controls(false)\n            // videoJs.fullscreen(this.previousSource)\n            videoJs.requestFullscreen()\n        },\n        getVideoCurrentTime() {\n            let videoJs = videojs('aux-player')\n            videoJs.controls(false)\n            this.videoCurrentTime = videoJs.currentTime\n        },\n\n\n        // This playNewVideo was created to access the audioContext\n        // which our audio compressor uses. This is new as of 2/2/2024\n        // ~ tec21\n\n        // playNewVideo(source) {\n        //     useChannelStore().clearChannel() // Reset or clear channel store\n        //     const videoJs = videojs('aux-player')\n        //     let videoSrc, videoSourceType\n        //     // Determine the source type and construct the source URL if necessary\n        //     if (source.mediaType === 'externalVideo') {\n        //         videoSrc = source.video_url // Direct URL to the video\n        //         videoSourceType = source.type // MIME type, e.g., 'video/youtube', 'video/mp4'\n        //     } else {\n        //         // Construct file path for internal videos\n        //         videoSrc = `${source.cdn_endpoint}${source.cloud_folder}${source.folder}/${source.file_name}`\n        //         videoSourceType = source.type // MIME type, typically 'video/mp4' for file-based sources\n        //     }\n        //     this.resumeAudioContextIfNeeded()\n        //     videoJs.src({src: videoSrc, type: videoSourceType})\n        //     videoJs.muted(false)\n        // },\n\n        // getSourceDetails(source) {\n        //     let videoSrc = source.video_url; // Directly access the video URL\n        //\n        //     // Default to 'video/mp4' if type is falsy ('', null, undefined, etc.)\n        //     let videoSourceType = source.type || 'video/mp4'\n        //\n        //     // Determine the mediaType and construct the source URL if necessary\n        //     if (source.mediaType === 'externalVideo') {\n        //         videoSrc = source.video_url // Direct URL to the video\n        //     } else {\n        //         // Internal video: construct the path, ensuring the file name is encoded\n        //         let encodedFileName = encodeURIComponent(source.file_name);\n        //         console.log(encodedFileName)\n        //         videoSrc = `${source.cdn_endpoint}${source.cloud_folder}${source.folder}/${encodedFileName}`\n        //     }\n        //     // Logic to determine videoSrc and videoSourceType\n        //     console.log(`Video Source: ${videoSrc}, Type: ${videoSourceType}`);\n        //     return { videoSrc, videoSourceType } // Return as an object\n        // },\n\n\n        getSourceDetails(source) {\n            let videoSrc, videoSourceType\n\n            console.log('getSourceDetails called with source:', source);\n\n            // Default to 'video/mp4' if type is not specified or is empty\n            videoSourceType = source.type || 'video/mp4'\n            console.log(`Determined Video Source Type: ${videoSourceType}`);\n\n            if (source.mediaType === 'externalVideo') {\n                // For external videos, use the URL as provided without encoding\n                videoSrc = source.video_url\n                console.log('Using external video source:', videoSrc);\n            } else {\n                console.log('CDN Endpoint:', source.cdn_endpoint);\n                console.log('Cloud Folder:', source.cloud_folder);\n                console.log('Folder:', source.folder);\n                console.log('File Name:', source.file_name);\n                // For internal videos, construct the URL from its components\n                // Here, we assume the cdn_endpoint, cloud_folder, and folder are correctly formatted\n                // and do not require encoding. Only the file_name might need encoding.\n                const basePath = `${source.cdn_endpoint}${source.cloud_folder}${source.folder}/`\n                // const encodedFileName = encodeURIComponent(source.file_name);\n                const fileName = source.file_name\n                videoSrc = basePath + fileName\n                console.log('Constructed internal video source:', videoSrc);\n                // If your server or CDN is configured to handle spaces in URLs without %20 encoding\n                // or if the original working URLs did not use standard URL encoding,\n                // you might adjust the encoding strategy here.\n                // For example, to replace spaces with %20 but leave other characters as-is:\n                // const fileNameForUrl = source.file_name.replace(/ /g, '%20');\n                // videoSrc = basePath + fileNameForUrl;\n            }\n\n            console.log(`Final Constructed Video Source: ${videoSrc}, Type: ${videoSourceType}`);\n            return {videoSrc, videoSourceType}\n        },\n\n\n        loadNewVideo(source) {\n            try {\n                let videoJs = videojs('aux-player');\n                console.log('LOAD NEW VIDEO');\n                const audioStore = useAudioStore();\n                // Correctly destructure the returned object to get videoSrc and videoSourceType\n                const {videoSrc, videoSourceType} = this.getSourceDetails(source);\n\n                // Example: Stopping and cleaning up the current video and audio setup\n                if (videoJs) {\n                    videoJs.src({'src': videoSrc, 'type': videoSourceType});\n\n                    videoJs.ready(() => {\n                        // ensureAudioContextAndNodesReady does the following:\n                        // 1. Resumes AudioContext if suspended.\n                        // 2. (Re)connects MediaElementSource from the video element to AudioContext.\n                        audioStore.deferAudioSetup = false;\n                        audioStore.ensureAudioContextAndNodesReady(videoJs).then(() => {\n                            // Only attempt to play the video after ensuring the AudioContext is ready\n                            videoJs.play().catch(error => {\n                                useNotificationStore().setGeneralServiceNotification('Error', 'Playback initiation error: ' + error)\n                                console.error('Playback initiation error: ', error);\n                            });\n\n                            // Consider toggling mute based on the user's preference or previous state\n                            videoJs.muted(false);\n                            this.muted = false;\n                        });\n                    });\n                }\n            } catch (error) {\n                // Log the error or perform any other error handling\n                useNotificationStore().setGeneralServiceNotification('Error', 'Error loading new video: ' + error)\n                console.error('Error loading new video: ', error);\n            }\n        },\n\n        // loadNewVideo(source) {\n        //     console.log('LOAD NEW VIDEO TTTTTTTTTTTTTTTTTTTTTTTTTS');\n        //     console.log('LOAD NEW VIDEO initiated with source:', source);\n        //     const audioStore = useAudioStore();\n        //     this.unMute();\n        //     // Destructure the returned object to get videoSrc and videoSourceType\n        //     const { videoSrc, videoSourceType } = this.getSourceDetails(source);\n        //     console.log(`Video source details received: Src - ${videoSrc}, Type - ${videoSourceType}`);\n        //\n        //     // Ensure you're using the same player instance (`videoJs` in this context) for consistency\n        //     let videoJs = videojs('aux-player'); // Ensure this ID matches your video player element\n        //     console.log('Video.js player instance created or retrieved.');\n        //\n        //     // Stop and clean up the current video and audio setup if necessary\n        //     videoJs.ready(() => {\n        //         console.log('Video.js player is ready.');\n        //         videoJs.src({ 'src': videoSrc, 'type': videoSourceType });\n        //         console.log(`Video source set: ${videoSrc} of type ${videoSourceType}`);\n        //\n        //         // Ensure AudioContext and nodes are ready\n        //         audioStore.ensureAudioContextAndNodesReady(videoJs).then(() => {\n        //             console.log('Audio context and nodes are ready. Attempting to play video.');\n        //\n        //             videoJs.play().then(() => {\n        //                 console.log('Video playback started successfully.');\n        //             }).catch(error => {\n        //                 console.error('Playback initiation error:', error);\n        //             });\n        //             // Attempt to play the video after ensuring the AudioContext is ready\n        //             // videoJs.play().catch(error => {\n        //             //     console.error('Playback initiation error:', error);\n        //             // });\n        //\n        //             // Apply the unMute logic from loadMistStreamVideo to ensure audio is correctly configured\n        //             this.unMute();\n        //             console.log('Audio unmuted.');\n        //             this.paused = false;\n        //             console.log('Paused flag set to false.');\n        //         }).catch(error => {\n        //             console.error('Error ensuring audio context and nodes are ready:', error);\n        //         });\n        //     });\n        // },\n\n        playNewVideo() {\n            console.log('PLAY NEW VIDEO')\n            if (this.player) {\n                // Wait for the video to be ready before playing\n                this.player.ready(() => {\n                    this.player.play()\n                    // Assuming you want to unmute here; check if this aligns with user interaction policies\n                    this.player.muted(false)\n                    this.muted = false\n                })\n            }\n        },\n\n\n// load video from different types of sources:\n// Url\n// YouTube\n// EmbedCode\n// Mist\n// File\n        loadNewSourceFromYouTube(source) {\n            this.videoIsYoutube = true\n            useChannelStore().clearChannel()\n            let videoJs = videojs('aux-player')\n            this.videoSource = source\n            this.videoSourceType = 'video/youtube'\n            videoJs.src({'src': this.videoSource, 'type': this.videoSourceType})\n            videoJs.controls(false)\n            this.unMute()\n            this.paused = false\n        },\n        loadNewLiveSourceFromRumble(source) {\n            this.videoIsYoutube = true\n            useChannelStore().clearChannel()\n            let videoJs = videojs('aux-player')\n            this.videoSource = source\n            this.videoSourceType = 'application/x-mpegURL'\n            videoJs.src({'src': this.videoSource, 'type': this.videoSourceType})\n            videoJs.controls(false)\n            this.unMute()\n            this.paused = false\n        },\n        loadNewSourceFromUrl(source) {\n            try {\n                this.videoIsYoutube = false;\n                useChannelStore().clearChannel();\n                let videoJs = videojs('aux-player');\n\n                if (!source.video_url || !source.type) {\n                    useNotificationStore().setGeneralServiceNotification('Error', 'Invalid video source.')\n                    throw new Error(\"Invalid video source.\");\n                }\n\n                this.videoSource = source.video_url;\n                this.videoSourceType = source.type;\n                videoJs.src({'src': source.video_url, 'type': source.type});\n\n                this.unMute();\n                this.paused = false;\n            } catch (error) {\n                useNotificationStore().setGeneralServiceNotification('Error', 'Failed to load new source: ' + error)\n                console.error(\"Failed to load new source:\", error);\n                throw error; // Re-throw the error to be caught by the caller\n            }\n        },\n        loadNewSourceFromMist(source) {\n            this.videoIsYoutube = false\n            let videoJs = videojs('aux-player')\n            let filePath = 'https://mist.not.tv/hls/'\n            this.videoSource = filePath + source + '/index.m3u8'\n            this.videoSourceType = 'application/x-mpegURL'\n            videoJs.src({'src': this.videoSource, 'type': this.videoSourceType})\n            this.unMute()\n            this.paused = false\n        },\n        loadNewSourceFromFile(source) {\n            this.videoIsYoutube = false\n            useChannelStore().clearChannel()\n            let videoJs = videojs('aux-player')\n            let filePath = source.cdn_endpoint + source.cloud_folder + source.folder + '/'\n            this.videoSource = source.file_name\n            this.videoSourceType = source.type\n            videoJs.src({'src': filePath + this.videoSource, 'type': this.videoSourceType})\n            this.unMute()\n            this.paused = false\n        },\n\n        // The new load video functions (2024-02-09 tec21 and ChatGPT)\n        loadExternalSourceVideo() {\n\n        },\n        loadPlaylistVideos() {\n\n        },\n        async loadMistStreamVideo(mistStream, stayMuted) {\n            let shouldUnmute = true\n            if(stayMuted) {\n                shouldUnmute = false\n            };\n            // console.log('Loading Mist Stream Video for:', mistStream.name); // Log which Mist Stream is being loaded\n            // This mistServerUri comes from appSettings\n            if (!this.mistServerUri) {\n                console.log('Mist Server URI not set, fetching...') // Log fetching attempt\n                await this.getMistServerUri()\n            }\n            if (this.mistServerUri) {\n                // console.log('Mist Server URI:', this.mistServerUri); // Log the URI to confirm it's fetched\n                let basePath = this.mistServerUri\n                this.videoSource = basePath + 'hls/' + mistStream.name + '/index.m3u8'\n                // console.log('Video Source Set To:', this.videoSource); // Log the final video source\n\n                this.videoSourceType = 'application/vnd.apple.mpegURL'\n                // console.log('Setting player source to:', this.videoSource, 'of type:', this.videoSourceType); // Log the source setting\n                let videoJs = videojs('aux-player')\n                videoJs.src({'src': this.videoSource, 'type': this.videoSourceType})\n                if (shouldUnmute) {\n                    this.unMute()\n                }\n                this.paused = false\n            } else {\n                console.error('Mist Server URI is still not set after fetching.')\n            }\n            // let basePath = this.mistServerUri\n            // this.videoSource = basePath + 'hls/' + mistStream.name + '/index.m3u8'\n            // this.videoSourceType = \"application/vnd.apple.mpegURL\"\n            // this.player.src({'src': this.videoSource, 'type': this.videoSourceType})\n            // this.unMute()\n            // this.paused = false\n        },\n        async loadVideoFromFile(video) {\n            // console.log('Loading Mist Stream Video for:', mistStream.name); // Log which Mist Stream is being loaded\n            // This mistServerUri comes from appSettings\n            // if (!this.mistServerUri) {\n            //     console.log('Mist Server URI not set, fetching...') // Log fetching attempt\n            //     await this.getMistServerUri()\n            // }\n            // if (this.mistServerUri) {\n                // console.log('Mist Server URI:', this.mistServerUri); // Log the URI to confirm it's fetched\n                // let basePath = this.mistServerUri\n                // this.videoSource = basePath + 'hls/' + video.name + '/index.m3u8'\n                // console.log('Video Source Set To:', this.videoSource); // Log the final video source\n\n            // this.videoSourceType = 'video/mp4'\n            console.log('Video Source Type:', video.type);\n            console.log('Video URL:', video.video_url);\n            console.log('CDN Endpoint:', video.cdn_endpoint);\n            console.log('Cloud Folder:', video.cloud_folder);\n            console.log('Folder:', video.folder);\n            console.log('File Name:', video.file_name);\n\n            let videoSource = video.cdn_endpoint + video.cloud_folder + video.folder + '/' + video.file_name\n                // console.log('Setting player source to:', this.videoSource, 'of type:', this.videoSourceType); // Log the source setting\n                let videoJs = videojs('aux-player')\n                videoJs.src({'src': videoSource, 'type': video.type})\n                this.unMute()\n                this.paused = false\n            // } else {\n            //     console.error('Mist Server URI is still not set after fetching.')\n            // }\n            // let basePath = this.mistServerUri\n            // this.videoSource = basePath + 'hls/' + mistStream.name + '/index.m3u8'\n            // this.videoSourceType = \"application/vnd.apple.mpegURL\"\n            // this.player.src({'src': this.videoSource, 'type': this.videoSourceType})\n            // this.unMute()\n            // this.paused = false\n        },\n\n\n        setNowPlayingInfoVideoFile(source) {\n            this.nowPlayingType = 'Video File'\n            this.nowPlayingName = source.file_name\n            useStreamStore().currentChannel = 'On Demand'\n        },\n        setNowPlayingInfoShow(show, episode) {\n            this.clearNowPlayingInfo()\n            const showStore = useShowStore()\n\n            if (show.firstPlayVideo) {\n                showStore.setName(show.firstPlayVideo.name)\n                showStore.setEpisodeUrl(`/shows/${show.slug}/episode/${source.firstPlayVideo.slug}`)\n            } else if (episode) {\n                showStore.setName(show.name)\n                showStore.setUrl(`/shows/${show.slug}`)\n                showStore.setEpisodeName(episode.name)\n                showStore.setEpisodeUrl(`/shows/${show.slug}/episode/${episode.slug}`)\n            } else {\n                showStore.setName(show.name)\n                showStore.setUrl(`/shows/${show.slug}`)\n            }\n        },\n// change video size/position and page layout\n        makeVideoPiP() {\n            // const appSettingStore = useAppSettingStore();\n            // const userStore = useUserStore();\n            //\n            // if (userStore.isMobile) {\n            //     let videoJs = videojs('aux-player')\n            //     videoJs.controls(false)\n            //     if(this.fullPage) {\n            //         this.class = 'pipVideoClassFullPage'\n            //         this.videoContainerClass = 'pipVideoContainerFullPage'\n            //     } else {\n            //         this.class = 'pipVideoClassTopRight'\n            //         this.videoContainerClass = 'pipVideoContainerTopRight'\n            //     }\n            //     appSettingStore.togglePipChatMode()\n            // }\n        },\n        makeVideoFullPage() {\n            const appSettingStore = useAppSettingStore()\n            const userStore = useUserStore()\n\n            // this.fullPage = true; // to be deleted and replaced by appSettingStore.fullPage\n            appSettingStore.fullPage = true\n            // userStore.hidePage = true // to be deleted and replaced by appSettingStore.hidePage\n            appSettingStore.hidePage = true\n            appSettingStore.ott = 0\n\n            this.videoContainerClass = 'fullPageVideoContainer'\n            this.class = 'fullPageVideoClass'\n            this.controls = !userStore.isMobile\n        },\n        makeVideoTopRight() {\n            const appSettingStore = useAppSettingStore()\n\n            // this.fullPage = false // to be deleted and replaced by appSettingStore.fullPage\n            appSettingStore.fullPage = false\n            // userStore.hidePage = false // to be deleted and replaced by appSettingStore.hidePage\n            appSettingStore.hidePage = false\n            // this.currentPageIsStream = false // to be deleted and replaced by appSettingStore.currentPageIsStream\n            appSettingStore.currentPageIsStream = false\n\n            this.videoContainerClass = 'topRightVideoContainer'\n            this.class = 'topRightVideoClass'\n            this.controls = false\n        },\n        makeVideoWelcomePage() {\n            const appSettingStore = useAppSettingStore()\n            this.videoContainerClass = 'welcomeVideoContainer'\n            this.class = 'welcomeVideoClass'\n            appSettingStore.loggedIn = false\n            appSettingStore.fullPage = true\n            appSettingStore.hidePage = false\n        },\n        setMistServerUri(mistServerUri) {\n            this.mistServerUri = mistServerUri\n        }\n\n\n    },\n\n    getters: {},\n})\n","import { onBeforeMount, onMounted } from 'vue'\nimport { useUserStore } from \"@/Stores/UserStore\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useVideoPlayerStore } from \"@/Stores/VideoPlayerStore\"\nimport { router } from '@inertiajs/vue3'\n\nexport function usePageSetup(pageName) {\n    const userStore = useUserStore()\n    const appSettingStore = useAppSettingStore()\n    const videoPlayerStore = useVideoPlayerStore()\n\n    appSettingStore.currentPage = pageName\n    appSettingStore.showFlashMessage = true\n    appSettingStore.pageIsHidden = false\n\n    if (userStore.isMobile || window.innerWidth < 1024 || appSettingStore.fullPage) {\n        appSettingStore.ott = 0;\n    } else {\n        appSettingStore.ott = 1;\n        appSettingStore.showOttButtons = true;\n    }\n\n    videoPlayerStore.makeVideoTopRight()\n\n    if (appSettingStore.pageReload) {\n        appSettingStore.pageReload = false\n        appSettingStore.pageWasReloaded = true\n        window.location.reload();\n    }\n    // Check if the URL contains query strings\n\n\n    // Only scroll into view if there are no query strings\n\n        // const topDiv = document.getElementById(\"topDiv\")\n        // if (topDiv) {\n        //     topDiv.scrollIntoView()\n        // }\n        router.on('navigate', (event) => {\n            if (userStore.isMobile || window.innerWidth < 1024 || appSettingStore.fullPage) {\n                appSettingStore.ott = 0;\n            } else {\n                appSettingStore.ott = 1;\n            }\n            const hasQueryStrings = window.location.search !== '';\n            if (!hasQueryStrings || appSettingStore.shouldScrollToTop) {\n                requestAnimationFrame(() => {\n                    const topDiv = document.getElementById(\"topDiv\");\n                    if (topDiv) {\n                        topDiv.scrollIntoView({behavior: 'auto'});\n                    } else {\n                        window.scrollTo(0, 0);\n                    }\n                });\n            }\n            appSettingStore.shouldScrollToTop = false;\n        })\n    // Only update if we're not already on this page to avoid overwriting with the current URL\n    appSettingStore.setPrevUrl()\n    appSettingStore.showOttButtons = true\n    appSettingStore.noLayout = false\n\n    // router.reload()\n\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".copy-message{background-color:#000000bf;border-radius:10px;bottom:20%;color:#fff;font-size:1.5rem;left:50%;padding:20px;position:fixed;transform:translateX(-50%);z-index:100}.copy-message,.fade-enter-active,.fade-leave-active{transition:opacity .5s ease}.fade-enter-from,.fade-leave-to{opacity:0}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/Components/Pages/Shows/Elements/ShowRecordings.vue\"],\"names\":[],\"mappings\":\"AA6XA,cAKE,0BAAqC,CAGrC,kBAAmB,CANnB,UAAW,CAIX,UAAY,CAGZ,gBAAiB,CANjB,QAAS,CAIT,YAAa,CANb,cAAe,CAGf,0BAA2B,CAM3B,WAEF,CAEA,oDAHE,2BAKF,CAEA,gCACE,SACF\",\"sourcesContent\":[\"  <template>\\n\\n  <div class=\\\"w-full bg-yellow-200 px-2 py-1\\\">\\n    <span class=\\\"font-semibold uppercase\\\">⚠️ NOTICE: </span> The first time you playback a recording it will take a long time to load. This only happens the first time!\\n  </div>\\n  <table class=\\\"min-w-full divide-y divide-gray-200\\\">\\n    <thead class=\\\"divide-y divide-gray-200\\\">\\n    <!--                                <tr v-for=\\\"episode in episodes.data\\\" :key=\\\"episode.id\\\">-->\\n    <tr>\\n      <td class=\\\"px-6 py-4 whitespace-nowrap\\\">\\n        <div class=\\\"flex items-center\\\">\\n          <div>\\n            <div class=\\\"text-sm font-semibold pl-14\\\">\\n              <!--                                                    <Link :href=\\\"`/admin/users/${episode.id}`\\\" class=\\\"text-indigo-600 hover:text-indigo-900\\\">{{ episode.name }}</Link>-->\\n              Date\\n            </div>\\n          </div>\\n        </div>\\n      </td>\\n\\n      <td class=\\\"px-6 py-4 whitespace-nowrap text-sm font-semibold\\\">\\n        Start Time\\n      </td>\\n\\n      <td class=\\\"px-6 py-4 whitespace-nowrap text-sm font-semibold\\\">\\n        End Time\\n      </td>\\n\\n      <td class=\\\"px-6 py-4 whitespace-nowrap text-sm font-semibold\\\">\\n        Duration\\n      </td>\\n\\n      <td class=\\\"px-6 py-4 whitespace-nowrap text-sm font-semibold text-right\\\">\\n        Expires in\\n      </td>\\n\\n      <td class=\\\"px-6 py-4 whitespace-nowrap text-sm font-semibold text-right\\\">\\n\\n      </td>\\n    </tr>\\n    </thead>\\n    <tbody class=\\\"bg-white divide-y divide-gray-200\\\">\\n    <tr v-for=\\\"recording in showRecordings.data\\\" :key=\\\"recording.id\\\"\\n        @mouseover=\\\"state.hoveredRow = recording.id\\\"\\n        @mouseleave=\\\"state.hoveredRow = null\\\"\\n        @click=\\\"openVideo(recording)\\\"\\n        :class=\\\"rowClass(recording.id)\\\"\\n    >\\n      <td class=\\\"px-6 py-4 whitespace-nowrap\\\">\\n        <div>{{ userStore.formatDateInUserTimezone(recording.start_time) }}</div>\\n        <div v-if=\\\"recording.comment\\\" class=\\\"text-xs uppercase text-orange-700 font-semibold break-words\\\">\\n          <span :class=\\\"{ 'text-indigo-600': recording.comment !== 'automated recording' }\\\">{{\\n              recording.comment\\n            }}</span>\\n        </div>\\n      </td>\\n      <td class=\\\"px-6 py-4 whitespace-nowrap\\\">\\n        {{ userStore.formatTimeFromDateInUserTimezone(recording.start_time) }}\\n      </td>\\n      <td class=\\\"px-6 py-4 whitespace-nowrap\\\">\\n        {{ userStore.formatTimeFromDateInUserTimezone(recording.end_time) }}\\n      </td>\\n      <td class=\\\"px-6 py-4 whitespace-nowrap\\\">\\n        {{ formatDuration(recording.total_milliseconds_recorded) }}\\n      </td>\\n      <td class=\\\"px-6 py-4 whitespace-nowrap\\\">\\n        <!-- Placeholder for expiration logic -->\\n\\n      </td>\\n      <!-- We are not making recordings shareable at this time. -->\\n      <td class=\\\" px-6 py-4 whitespace-nowrap text-right text-sm font-medium space-x-1\\\">\\n        <button @click.stop=\\\"shareRecording(recording.shareUrl)\\\"\\n                class=\\\"hidden btn btn-xs bg-orange-200 hover:bg-orange-300 text-black\\\">\\n          <font-awesome-icon icon=\\\"fa-share\\\" class=\\\"\\\"/>\\n          Share\\n        </button>\\n        <button @click.stop=\\\"confirmAddToEpisode\\\"\\n                class=\\\"btn btn-xs\\\">Add To Episode\\n        </button>\\n        <button @click.stop=\\\"confirmDownload(recording)\\\"\\n                class=\\\"btn btn-xs btn-info\\\">Download\\n        </button>\\n        <div @click.stop=\\\"confirmSaveToPremium\\\"\\n                class=\\\"btn btn-xs\\\">Save to Premium Storage\\n        </div>\\n      </td>\\n    </tr>\\n    </tbody>\\n  </table>\\n\\n  <div class=\\\"flex flex-row flex-wrap w-full justify-center\\\">\\n    <Pagination :data=\\\"showRecordings\\\" class=\\\"\\\" />\\n  </div>\\n\\n  <dialog id=\\\"confirmRecordingPlaybackModal\\\" class=\\\"modal\\\">\\n    <div class=\\\"modal-box w-full items-center text-center text-black bg-white dark:bg-gray-800 dark:text-white\\\">\\n      <form method=\\\"dialog\\\">\\n        <button class=\\\"btn btn-sm btn-circle btn-ghost absolute right-2 top-2\\\">✕</button>\\n      </form>\\n      <h3 class=\\\"font-bold text-lg\\\"></h3>\\n      <p class=\\\"py-4 text-xl mt-4\\\">Would you like to play the recording<br/> from\\n        <span class=\\\"font-semibold\\\">{{ selectedRecordingDate }}</span>?</p>\\n      <p class=\\\"my-2 text-left\\\" v-if=\\\"selectedRecording && selectedRecording.path\\\"><span\\n          class=\\\"font-semibold\\\">Path: </span>{{ selectedRecording.path }}</p>\\n      <p class=\\\"my-2 text-left\\\" v-if=\\\"selectedRecording && selectedRecording.comment\\\">\\n        <span class=\\\"font-semibold\\\">Comment: </span>\\n        <span>{{ selectedRecording.comment }}</span>\\n      </p>\\n      <button class=\\\"mt-4 btn\\\" @click=\\\"play\\\">Play</button>\\n    </div>\\n\\n    <form method=\\\"dialog\\\" class=\\\"modal-backdrop\\\">\\n      <button>close</button>\\n    </form>\\n  </dialog>\\n\\n  <transition name=\\\"fade\\\">\\n    <div v-if=\\\"showCopyMessage\\\" class=\\\"copy-message\\\">\\n      {{ copyMessage }}\\n    </div>\\n  </transition>\\n\\n  <dialog id=\\\"confirmAddToEpisodeModal\\\" class=\\\"modal\\\">\\n    <div class=\\\"modal-box text-center text-black bg-white dark:bg-gray-800 dark:text-white\\\">\\n      <form method=\\\"dialog\\\">\\n        <button class=\\\"btn btn-sm btn-circle btn-ghost absolute right-2 top-2\\\">✕</button>\\n      </form>\\n      <h3 class=\\\"font-bold text-lg pt-8\\\">Add Recording To Episode</h3>\\n      <p class=\\\"py-4\\\">We are working on this feature!</p>\\n      <div class=\\\"modal-action\\\">\\n        <form method=\\\"dialog\\\">\\n          <!-- if there is a button in form, it will close the modal -->\\n          <button class=\\\"btn\\\">Okay</button>\\n        </form>\\n      </div>\\n    </div>\\n  </dialog>\\n\\n  <dialog id=\\\"confirmDownloadModal\\\" class=\\\"modal\\\">\\n    <div class=\\\"modal-box text-center text-black bg-white dark:bg-gray-800 dark:text-white\\\">\\n      <form method=\\\"dialog\\\">\\n        <button class=\\\"btn btn-sm btn-circle btn-ghost absolute right-2 top-2\\\">✕</button>\\n      </form>\\n      <h3 class=\\\"font-bold text-lg pt-8\\\">Confirm Download</h3>\\n      <p class=\\\"py-4\\\">Are you sure you want to download the recording?</p>\\n      <div class=\\\"modal-action\\\">\\n        <form method=\\\"dialog\\\" class=\\\"w-full flex justify-center\\\">\\n          <!-- if there is a button in form, it will close the modal -->\\n          <button @click=\\\"beginDownload\\\" class=\\\"btn btn-info w-20\\\">Yes</button>\\n        </form>\\n      </div>\\n    </div>\\n  </dialog>\\n\\n  <dialog id=\\\"downloadStarted\\\" class=\\\"modal\\\">\\n    <div class=\\\"modal-box text-center text-black bg-white dark:bg-gray-800 dark:text-white\\\">\\n      <form method=\\\"dialog\\\">\\n        <button class=\\\"btn btn-sm btn-circle btn-ghost absolute right-2 top-2\\\">✕</button>\\n      </form>\\n      <h3 class=\\\"font-bold text-lg pt-8\\\">Download Started</h3>\\n      <p class=\\\"py-4\\\">Your recording is now downloading!</p>\\n      <div class=\\\"modal-action\\\">\\n        <form method=\\\"dialog\\\" class=\\\"w-full flex justify-center\\\">\\n          <!-- if there is a button in form, it will close the modal -->\\n          <button class=\\\"btn\\\">Okay</button>\\n        </form>\\n      </div>\\n    </div>\\n  </dialog>\\n\\n  <dialog id=\\\"confirmSaveToPremiumModal\\\" class=\\\"modal\\\">\\n    <div class=\\\"modal-box text-center text-black bg-white dark:bg-gray-800 dark:text-white\\\">\\n      <form method=\\\"dialog\\\">\\n        <button class=\\\"btn btn-sm btn-circle btn-ghost absolute right-2 top-2\\\">✕</button>\\n      </form>\\n      <h3 class=\\\"font-bold text-lg pt-8\\\">Save To Premium Storage</h3>\\n      <p class=\\\"py-4\\\">We are working on this feature!</p>\\n      <div class=\\\"modal-action\\\">\\n        <form method=\\\"dialog\\\">\\n          <!-- if there is a button in form, it will close the modal -->\\n          <button class=\\\"btn\\\">Okay</button>\\n        </form>\\n      </div>\\n    </div>\\n  </dialog>\\n\\n\\n</template>\\n\\n<script setup>\\nimport { useVideoPlayerStore } from '@/Stores/VideoPlayerStore'\\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\\nimport { useNowPlayingStore } from '@/Stores/NowPlayingStore'\\nimport { useUserStore } from '@/Stores/UserStore'\\nimport { computed, reactive, ref } from 'vue'\\nimport { useClipboard } from '@vueuse/core'\\nimport Pagination from '@/Components/Global/Paginators/Pagination.vue'\\n\\nconst videoPlayerStore = useVideoPlayerStore()\\nconst appSettingStore = useAppSettingStore()\\nconst nowPlayingStore = useNowPlayingStore()\\nconst userStore = useUserStore()\\n\\nconst shareClip = useClipboard()\\n\\nconst props = defineProps({\\n  showName: String,\\n  showSlug: String,\\n  showImage: Object,\\n  showRecordings: Object,\\n})\\n\\nconst formatDuration = (totalMilliseconds) => {\\n  let seconds = Math.floor(totalMilliseconds / 1000)\\n  let minutes = Math.floor(seconds / 60)\\n  const hours = Math.floor(minutes / 60)\\n\\n  seconds = seconds % 60\\n  minutes = minutes % 60\\n\\n  // Padding numbers to always show two digits\\n  const paddedHours = hours.toString().padStart(2, '0')\\n  const paddedMinutes = minutes.toString().padStart(2, '0')\\n  const paddedSeconds = seconds.toString().padStart(2, '0')\\n\\n  return `${paddedHours}h ${paddedMinutes}m ${paddedSeconds}s`\\n}\\n\\nconst state = reactive({\\n  hoveredRow: null,\\n})\\n\\nconst selectedRecording = ref(null)\\nconst selectedRecordingDate = ref('')\\nconst selectedRecordingStreamName = ref('')\\nconst selectedRecordingId = ref('')\\nconst nowPlayingRecording = ref(null)\\nconst nowPlayingRecordingId = ref('')\\nconst nowPlayingStreamName = ref('')\\n\\n// Computed property returning a function to determine row classes\\nconst rowClass = computed(() => (recordingId) => ({\\n  'hover:bg-blue-100 cursor-pointer': state.hoveredRow === recordingId,\\n  'bg-green-100': nowPlayingRecordingId.value === recordingId,\\n}))\\n\\nconst openVideo = (recording) => {\\n  document.getElementById('confirmRecordingPlaybackModal').showModal()\\n  selectedRecording.value = recording\\n  console.log(recording)\\n  console.log(selectedRecording.value)\\n  selectedRecordingStreamName.value = recording.streamName\\n  selectedRecordingId.value = recording.id\\n  selectedRecordingDate.value = userStore.formatDateInUserTimezone(recording.start_time)\\n  console.log('Opening video for stream:', recording.streamName)\\n  // Implement the video opening logic here\\n}\\n\\nconst source = ref({\\n  mediaType: '',\\n  recording: {\\n    source: '',\\n    sourceType: '',\\n  },\\n})\\nconsole.log('slug: ' + props.showSlug)\\nconst play = () => {\\n  source.value.mediaType = 'recording'\\n  source.value.recording = {\\n    source: selectedRecordingStreamName,\\n    sourceType: 'video/mp4',\\n  }\\n  console.log('recording source: ' + selectedRecordingStreamName.value)\\n  try {\\n    videoPlayerStore.loadNewVideo(source.value)\\n    nowPlayingRecording.value = selectedRecording.value\\n    nowPlayingRecordingId.value = selectedRecordingId.value\\n    nowPlayingStreamName.value = selectedRecordingStreamName.value\\n    appSettingStore.toggleOttInfo()\\n    console.log('now playing ID: ' + nowPlayingRecordingId.value)\\n    const nowPlayingDate = userStore.formatDateInUserTimezone(nowPlayingRecording.value.start_time)\\n    const nowPlayingStartTime = userStore.formatTimeFromDateInUserTimezone(nowPlayingRecording.value.start_time)\\n    const secondaryName = nowPlayingDate + ' ' + nowPlayingStartTime + ' Recording'\\n\\n    // Set common details specific to this video play event for nowPlayingStore\\n    const mediaType = source.value.mediaType\\n    const commonDetails = {\\n      primaryName: props.showName, //showName\\n      secondaryName: secondaryName, //date startTime Recording\\n      description: nowPlayingRecording?.value?.comment ?? null, // Comment\\n      primaryUrl: 'shows/' + props.showSlug,\\n      secondaryUrl: null,\\n      channelName: null,\\n      image: props?.showImage,\\n      team: null,\\n      creative_commons: null,\\n    }\\n    const videoDetails = {\\n      // Assuming video details are structured correctly in your episode data\\n      video_url: '',\\n      type: source.value.recording.sourceType, // MIME type for video.js\\n    }\\n\\n    // Update the currently playing media in nowPlayingStore with the latest details\\n    nowPlayingStore.setActiveMedia(mediaType, {\\n      ...commonDetails,\\n      videoDetails, // Spread in the specific details for internal or external video\\n    })\\n\\n    // Close the modal upon successful video playback\\n    document.getElementById('confirmRecordingPlaybackModal').close()\\n  } catch (error) {\\n    console.error('Error loading new video:', error)\\n    // Handle error appropriately, possibly with user feedback\\n  }\\n\\n}\\n\\nconst shareRecording = (shareUrl) => {\\n  shareClip.copy(shareUrl)\\n  copyMessage.value = 'Video share URL copied!'\\n  showCopyMessage.value = true\\n  setTimeout(() => {\\n    showCopyMessage.value = false\\n  }, 1000) // Hide after 3 seconds\\n}\\n\\nconst showCopyMessage = ref(false)\\nconst copyMessage = ref('')\\n\\nconst confirmAddToEpisode = () => {\\n  document.getElementById('confirmAddToEpisodeModal').showModal()\\n}\\n\\nconst confirmDownload = (recording) => {\\n  selectedRecording.value = recording\\n  // Confirm the download.\\n  document.getElementById('confirmDownloadModal').showModal()\\n}\\n\\nconst beginDownload = () => {\\n  // Once confirmed, execute the download.\\n\\n  // The URL where your files are hosted\\n  const url = selectedRecording.value.download.url\\n\\n  console.log('download url: ' + url)\\n  // Create an anchor (<a>) element\\n  const downloadLink = document.createElement('a')\\n  downloadLink.href = url\\n\\n  // Optionally, if you want the download to have a specific filename:\\n  // downloadLink.download = 'YourCustomFileNameHere';\\n\\n  // This is necessary for the download to work in Firefox when triggered programmatically\\n  document.body.appendChild(downloadLink)\\n\\n  downloadLink.click()\\n\\n  // Clean up by removing the element after triggering the download\\n  document.body.removeChild(downloadLink)\\n  selectedRecording.value = null\\n  document.getElementById('downloadStarted').showModal()\\n}\\n\\nconst confirmSaveToPremium = () => {\\n  document.getElementById('confirmSaveToPremiumModal').showModal()\\n}\\n\\n\\n// function triggerDownload(url, filename = \\\"\\\") {\\n//   const a = document.createElement('a');\\n//   a.href = url;\\n//   a.download = filename; // You can specify a filename here, or leave it empty\\n//   document.body.appendChild(a);\\n//   a.click();\\n//   document.body.removeChild(a);\\n// }\\n\\n</script>\\n<style>\\n.copy-message {\\n  position: fixed;\\n  bottom: 20%;\\n  left: 50%;\\n  transform: translateX(-50%);\\n  background-color: rgba(0, 0, 0, 0.75);\\n  color: white;\\n  padding: 20px;\\n  border-radius: 10px;\\n  font-size: 1.5rem;\\n  z-index: 100;\\n  transition: opacity 0.5s ease;\\n}\\n\\n.fade-enter-active, .fade-leave-active {\\n  transition: opacity 0.5s ease;\\n}\\n\\n.fade-enter-from, .fade-leave-to {\\n  opacity: 0;\\n}\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"@keyframes wave-bg-10f0fbd1{0%,to{background-color:#dbeafe}50%{background-color:#bfdbfe}}.wave-background[data-v-10f0fbd1]{animation:wave-bg-10f0fbd1 5s ease-in-out infinite;background-color:#dbeafe}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/Pages/Shows/{$id}/Manage.vue\"],\"names\":[],\"mappings\":\"AAuWA,4BACE,MACE,wBACF,CACA,IACE,wBACF,CACF,CAEA,kCACE,kDAA0C,CAC1C,wBACF\",\"sourcesContent\":[\"<template>\\n\\n  <Head :title=\\\"`Manage Show: ${props.show.name}`\\\"/>\\n\\n  <div id=\\\"topDiv\\\" class=\\\"place-self-center flex flex-col\\\">\\n    <div class=\\\"min-h-screen bg-white text-black dark:bg-gray-900 dark:text-gray-50 rounded px-5\\\">\\n\\n      <Message v-if=\\\"appSettingStore.showFlashMessage\\\" :flash=\\\"$page.props.flash\\\"/>\\n      <div class=\\\"alert alert-error mt-4 mx-3\\\"\\n           v-if=\\\"showStore.errorMessage\\\">\\n        <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" class=\\\"stroke-current shrink-0 h-6 w-6\\\" fill=\\\"none\\\" viewBox=\\\"0 0 24 24\\\">\\n          <path stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" stroke-width=\\\"2\\\"\\n                d=\\\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\\\"/>\\n        </svg>\\n        <span>{{ showStore.errorMessage }}</span>\\n        <button class=\\\"text-xs ml-12\\\" @click=\\\"showStore.errorMessage = ''\\\"> Close</button>\\n      </div>\\n\\n      <header class=\\\"bg-gradient-to-r from-blue-100 via-white to-transparent p-4 text-black font-bold rounded-lg\\\">\\n        <!--            <header class=\\\"wave-background p-4 text-black font-bold rounded-lg\\\">-->\\n\\n        <div class=\\\"flex justify-between mb-3 pt-6\\\">\\n          <div class=\\\"font-bold mb-4 text-black align-bottom text-lg\\\">MANAGE SHOW</div>\\n\\n          <div class=\\\"flex flex-col\\\">\\n            <div class=\\\"flex flex-row w-full justify-end mb-2\\\">\\n              <button\\n                  @click=\\\"appSettingStore.btnRedirect(`/teams/${team.slug}/manage`)\\\"\\n                  class=\\\"px-4 py-2 mr-2 mb-2 h-fit text-white font-semibold bg-orange-500 hover:bg-orange-600 rounded-lg\\\"\\n              >Back to<br/>\\n                Manage Team\\n              </button>\\n            </div>\\n            <div class=\\\"flex flex-wrap-reverse justify-end\\\">\\n              <button\\n                  v-if=\\\"can.goLive\\\"\\n                  @click=\\\"goLive\\\"\\n                  class=\\\"px-4 py-2 mr-2 mb-2 h-fit text-white font-semibold bg-red-500 hover:bg-red-600 rounded-lg\\\"\\n              >Go Live\\n              </button>\\n              <button\\n                  v-if=\\\"teamStore.can.editShow\\\"\\n                  @click=\\\"appSettingStore.btnRedirect(`/shows/${show.slug}/edit`)\\\"\\n                  class=\\\"px-4 py-2 mb-2 h-fit text-white font-semibold bg-blue-500 hover:bg-blue-600 rounded-lg\\\"\\n              >Edit Show\\n              </button>\\n\\n              <DashboardButton class=\\\"mb-2\\\"/>\\n\\n            </div>\\n          </div>\\n\\n        </div>\\n\\n        <ShowManageHeader\\n            :show=\\\"props.show\\\"\\n            :team=\\\"props.team\\\"\\n            :can=\\\"can\\\"\\n        />\\n\\n        <div class=\\\"flex justify-end mt-6\\\">\\n\\n\\n        </div>\\n      </header>\\n\\n\\n      <!--            <div class=\\\"my-6 ml-10 w-3/4\\\">-->\\n      <!--                {{ teamStore.activeShow.description }}-->\\n      <!--            </div>-->\\n\\n      <div class=\\\"my-6 text-gray-100\\\">\\n        <span class=\\\"uppercase text-xs font-semibold text-black\\\">SHOW NOTES: </span>\\n        <span class=\\\"text-black light:text-black dark:text-white\\\">{{ props.show.notes }}</span>\\n      </div>\\n\\n\\n      <div class=\\\"flex flex-col\\\">\\n        <div class=\\\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\\\">\\n          <div class=\\\"py-2 align-middle inline-block w-full sm:px-6 lg:px-8 space-y-4\\\">\\n            <!--          <div class=\\\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\\\">-->\\n            <!--            <div class=\\\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\\\">-->\\n\\n            <!-- This code doesn't work .. it's meant to become a header button that collapses/expands each section -->\\n            <!--                            <button class=\\\"bg-orange-300 p-2 font-bold w-full text-left\\\" type=\\\"button\\\"-->\\n            <!--                                    data-bs-toggle=\\\"collapse\\\" data-bs-target=\\\"#collapseExample\\\" aria-expanded=\\\"true\\\"-->\\n            <!--                                    aria-controls=\\\"collapseExample\\\">Episodes-->\\n            <!--                            </button>-->\\n\\n            <!--                            <div class=\\\"collapse\\\" id=\\\"collapseExample\\\">-->\\n            <!--              <div>-->\\n            <!--                <div class=\\\"bg-blue-100 p-2 font-bold text-black\\\">Episodes</div>-->\\n            <div @click=\\\"toggleComponent('showEpisodes')\\\"\\n                 :class=\\\"{'rounded-t-lg': showStore.openComponent === 'showEpisodes', 'rounded-lg': showStore.openComponent !== 'showEpisodes'}\\\"\\n                 class=\\\"accordion-header p-2 font-bold transition duration-300 ease-in-out transform focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 overflow-hidden shadow-lg bg-blue-100 hover:bg-blue-300 dark:hover:bg-blue-900 text-black hover:text-blue-900 dark:text-blue-100 dark:hover:text-white\\\">\\n              <font-awesome-icon icon=\\\"fa-play-circle\\\" class=\\\"\\\"/>\\n              Episodes\\n            </div>\\n            <div v-if=\\\"showStore.openComponent === 'showEpisodes'\\\">\\n              <div class=\\\"mt-4 mb-12 pb-6 shadow overflow-auto border-b border-gray-200 sm:rounded-lg\\\">\\n                <ShowEpisodesList :episodes=\\\"props.episodes\\\" :show=\\\"props.show\\\"\\n                                  :episodeStatuses=\\\"props.episodeStatuses\\\"/>\\n              </div>\\n            </div>\\n            <!--              </div>-->\\n\\n            <!--                            <table class=\\\"min-w-full divide-y divide-gray-200\\\">-->\\n            <!--                                <tbody class=\\\"bg-white divide-y divide-gray-200\\\">-->\\n            <!--                                <tr v-for=\\\"episode in episodes.data\\\" :key=\\\"episode.id\\\">-->\\n            <!--                                    <td class=\\\"px-6 py-4 whitespace-nowrap\\\">-->\\n            <!--                                        <div class=\\\"flex items-center\\\">-->\\n            <!--                                            <div>-->\\n            <!--                                                <div class=\\\"text-sm font-medium text-gray-900\\\">-->\\n            <!--                                                    <Link :href=\\\"`/admin/users/${episode.id}`\\\" class=\\\"text-indigo-600 hover:text-indigo-900\\\">{{ episode.name }}</Link>-->\\n            <!--                                                </div>-->\\n            <!--                                            </div>-->\\n            <!--                                        </div>-->\\n            <!--                                    </td>-->\\n\\n            <!--                                    <td class=\\\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\\\">-->\\n            <!--                                        <Link :href=\\\"`/admin/users/edit/${episode.id}`\\\" class=\\\"text-indigo-600 hover:text-indigo-900\\\">Edit</Link>-->\\n            <!--                                    </td>-->\\n            <!--                                </tr>-->\\n            <!--                                </tbody>-->\\n            <!--                            </table>-->\\n\\n            <!--                            &lt;!&ndash; Paginator &ndash;&gt;-->\\n            <!--                            <Pagination :links=\\\"episode.links\\\" class=\\\"mt-6\\\"/>-->\\n\\n            <!--            </div>-->\\n\\n            <!--            <div class=\\\"mt-4 shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\\\">-->\\n            <!--              <div class=\\\"bg-blue-100 p-2 font-bold text-black\\\">Credits</div>-->\\n            <!--              -->\\n            <!--              -->\\n            <div @click=\\\"toggleComponent('showCredits')\\\"\\n                 :class=\\\"{'rounded-t-lg': showStore.openComponent === 'showCredits', 'rounded-lg': showStore.openComponent !== 'showCredits'}\\\"\\n                 class=\\\"accordion-header p-2 font-bold transition duration-300 ease-in-out transform focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 overflow-auto shadow-lg bg-blue-100 hover:bg-blue-300 dark:hover:bg-blue-900 text-black hover:text-blue-900 dark:text-blue-100 dark:hover:text-white\\\">\\n              <font-awesome-icon icon=\\\"fa-clipboard-list\\\" class=\\\"\\\"/>\\n              Credits and Assignments\\n            </div>\\n            <div v-if=\\\"showStore.openComponent === 'showCredits'\\\">\\n              <div class=\\\"mt-4 mb-12 pb-6 shadow overflow-auto border-b border-gray-200 sm:rounded-lg\\\">\\n                <div class=\\\"border-1 border-t mb-3 bg-blue-100 py-1 px-2 text-xs font-semibold text-red-800\\\">\\n                  In development. Not currently working.\\n                </div>\\n                <Link\\n                    :href=\\\"`#`\\\"\\n                    v-if=\\\"teamStore.can.createAssignment\\\">\\n                  <button\\n                      class=\\\"bg-green-500 hover:bg-green-600 text-white ml-2 my-2 px-4 py-2 rounded disabled:bg-gray-400 h-max w-max\\\"\\n                      disabled\\n                  >Create Assignment\\n                  </button>\\n                </Link>\\n\\n                <ShowCreditsList/>\\n              </div>\\n            </div>\\n            <!--            </div>-->\\n\\n            <!--            <div class=\\\"mt-4 shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\\\">-->\\n            <!--              <div class=\\\"bg-blue-100 p-2 font-bold text-black\\\">Recordings</div>-->\\n            <div @click=\\\"toggleComponent('showRecordings')\\\"\\n                 :class=\\\"{'rounded-t-lg': showStore.openComponent === 'showRecordings', 'rounded-lg': showStore.openComponent !== 'showRecordings'}\\\"\\n                 class=\\\"accordion-header p-2 font-bold transition duration-300 ease-in-out transform focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 overflow-auto shadow-lg bg-blue-100 hover:bg-blue-300 dark:hover:bg-blue-900 text-black hover:text-blue-900 dark:text-blue-100 dark:hover:text-white\\\">\\n              <font-awesome-icon icon=\\\"fa-circle\\\" class=\\\"text-red-700\\\"/>\\n              Recordings\\n            </div>\\n            <div v-if=\\\"showStore.openComponent === 'showRecordings'\\\">\\n              <div class=\\\"mt-4 mb-12 pb-6 shadow overflow-auto border-b border-gray-200 sm:rounded-lg\\\">\\n                <ShowRecordings :showRecordings=\\\"show.recordings\\\" :showName=\\\"show.name\\\" :showSlug=\\\"show.slug\\\"\\n                                :showImage=\\\"show.image\\\"/>\\n\\n                <!--            </div>-->\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <ShowFooter :team=\\\"team\\\" :show=\\\"show\\\"/>\\n    </div>\\n  </div>\\n\\n</template>\\n\\n<script setup>\\nimport { onBeforeUnmount, onMounted, onUnmounted, ref } from 'vue'\\nimport { usePage } from '@inertiajs/vue3'\\nimport { usePageSetup } from '@/Utilities/PageSetup'\\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\\nimport { useShowStore } from '@/Stores/ShowStore'\\nimport { useTeamStore } from '@/Stores/TeamStore'\\nimport { useGoLiveStore } from '@/Stores/GoLiveStore'\\nimport ShowManageHeader from '@/Components/Pages/Shows/Layout/ShowManageHeader'\\nimport ShowFooter from '@/Components/Pages/Shows/Layout/ShowFooter'\\nimport ShowEpisodesList from '@/Components/Pages/Shows/Elements/ManageShowEpisodesList'\\nimport ShowCreditsList from '@/Components/Pages/Shows/Elements/ManageShowCreditsList'\\nimport Message from '@/Components/Global/Modals/Messages'\\nimport DashboardButton from '@/Components/Global/Buttons/DashboardButton.vue'\\nimport ShowRecordings from '@/Components/Pages/Shows/Elements/ShowRecordings.vue'\\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome'\\n\\nusePageSetup('shows/slug/manage')\\n\\nconst appSettingStore = useAppSettingStore()\\nconst showStore = useShowStore()\\nconst teamStore = useTeamStore()\\nconst goLiveStore = useGoLiveStore()\\n\\nconst toggleComponent = (componentName) => {\\n  showStore.openComponent = showStore.openComponent === componentName ? null : componentName\\n}\\n\\nconst page = usePage().props\\n\\nconst props = defineProps({\\n  show: Object,\\n  team: Object,\\n  episodes: Object,\\n  episodeStatuses: Object,\\n  // filters: Object,\\n  can: Object,\\n})\\n\\nteamStore.setActiveTeam(props.team)\\nteamStore.setActiveShow(props.show)\\nteamStore.can = props.can\\n\\nconst currentUsers = ref([]);\\n\\n// let search = ref(props.filters.search);\\n//\\n// watch(search, throttle(function (value) {\\n//     router.get('/shows', { search: value }, {\\n//         preserveState: true,\\n//         replace: true\\n//     });\\n// }, 300));\\n\\nconst goLive = () => {\\n  goLiveStore.reset()\\n  goLiveStore.preSelectedShowId = props.show.id\\n  appSettingStore.btnRedirect(`/golive`)\\n}\\n\\nonMounted(() => {\\n  showStore.initializeShow(props.show)\\n  console.log(`Subscribing to channel creator.show.${props.show.id}`)\\n\\n  // Echo.private(`creator.show.${props.show.id}`)\\n  //     .subscribed(() => {\\n  //       console.log(`Successfully subscribed to channel creator.show.${props.show.id}`);\\n  //     })\\n  //     .listen('.CreatorContentStatusUpdated', (event) => {\\n  //       // console.log('CreatorContentStatusUpdated event received', event);\\n  //       showStore.$patch({\\n  //         isSaving: event.meta.isSaving,\\n  //         isUpdatingSchedule: event.meta.isUpdatingSchedule,\\n  //         updatedBy: event.meta.updatedBy,\\n  //       });\\n  //       // console.log('showStore.isSaving:', showStore.isSaving); // Log to verify update\\n  //     })\\n  //     .error((error) => {\\n  //       console.error('Error subscribing to channel:', error);\\n  //     });\\n\\n  Echo.join(`creator.show.${props.show.id}`)\\n      .here(async (users) => {\\n        console.log('Users currently in the channel:', users)\\n        currentUsers.value = users;\\n        // Elect the leader (first user in the list)\\n        if (users.length > 0) {\\n          const leader = users[0];\\n          showStore.setLeader(leader);\\n          console.log(`Leader elected: ${leader.name}`);\\n        }\\n\\n        console.log(showStore.isUpdatingSchedule, showStore.updatedBy)\\n        // Check if the user is the only one in the channel\\n        if (currentUsers.value.length === 1 && showStore.isUpdatingSchedule && showStore.updatedBy) {\\n          try {\\n            // Reset the isUpdatingSchedule and updatedBy fields\\n            await axios.put(`/api/shows/${props.show.slug}/meta`, {\\n              isUpdatingSchedule: false,\\n              updatedBy: showStore.updatedBy,\\n            });\\n            console.log('isUpdatingSchedule and updatedBy fields reset');\\n\\n            // Update the showStore accordingly\\n            // showStore.isUpdatingSchedule = false;\\n            // showStore.updatedBy = null;\\n          } catch (error) {\\n            console.error('Error updating meta:', error);\\n          }\\n        }\\n      })\\n      .joining((user) => {\\n        console.log('User joined the channel:', user)\\n        currentUsers.value.push(user);\\n      })\\n      .leaving((user) => {\\n        console.log('User left the channel:', user)\\n        currentUsers.value = currentUsers.value.filter(u => u.id !== user.id);\\n\\n        if (user.id === showStore.leader.id) {\\n          console.log('Leader left, electing new leader');\\n          // Elect a new leader if the current leader leaves\\n          if (currentUsers.value.length > 0) {\\n            const newLeader = currentUsers.value[0];\\n            showStore.setLeader(newLeader);\\n            console.log(`New leader elected: ${newLeader.name}`);\\n          }\\n        }\\n        // If current user is still the leader, run the command\\n        if (showStore.leader.id === page.value.user.id) {\\n          axios.post(`/api/${props.show.slug}/user-left-channel`, {\\n            user: user,\\n            channel: `creator.show.${props.show.id}`,\\n            showSlug: props.show.slug, // Pass the show slug\\n          }).then(response => {\\n            console.log('Successfully posted to user-left-channel:', response.data);\\n          }).catch(error => {\\n            console.error('Error posting to user-left-channel:', error);\\n          });\\n        }\\n      })\\n      .listen('.CreatorContentStatusUpdated', (event) => {\\n        console.log('CreatorContentStatusUpdated event received:', event)\\n        showStore.$patch({\\n          isSaving: event.meta.isSaving,\\n          isUpdatingSchedule: event.meta.isUpdatingSchedule,\\n          updatedBy: event.meta.updatedBy,\\n        })\\n      })\\n      .listen('.ShowScheduleDetailsUpdated', (event) => {\\n        console.log('ShowScheduleDetailsUpdated event received:', event)\\n        showStore.scheduleDetails = event.scheduleDetails\\n      })\\n      .error((error) => {\\n        console.error('Error subscribing to channel:', error)\\n      })\\n\\n})\\n\\nonBeforeUnmount(() => {\\n  // Echo.leave(`creator.show.${props.show.id}`);\\n  Echo.leave(`creator.show.${props.show.id}`)\\n\\n  showStore.setUpdatingStatus(false, page.value.user.name, props.show.slug)\\n\\n  console.log(`Unsubscribed from channel creator.show.${props.show.id}`)\\n  showStore.reset()\\n})\\n\\n</script>\\n\\n\\n<style scoped>\\n@keyframes wave-bg {\\n  0%, 100% {\\n    background-color: #dbeafe; /* Original color */\\n  }\\n  50% {\\n    background-color: #bfdbfe; /* Slightly lighter color */\\n  }\\n}\\n\\n.wave-background {\\n  animation: wave-bg 5s infinite ease-in-out;\\n  background-color: #dbeafe; /* Starting color */\\n}\\n\\n\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import script from \"./DashboardButton.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./DashboardButton.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n    <button\n        @click=\"appSettingStore.btnRedirect('/dashboard')\"\n        class=\"bg-black hover:bg-gray-800 text-white font-semibold ml-2 mt-2 px-4 py-2 rounded-lg disabled:bg-gray-400 h-max w-max\"\n    >Dashboard\n    </button>\n  </div>\n</template>\n\n<script setup>\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\n\nconst appSettingStore = useAppSettingStore()\n\n</script>\n","import script from \"./DateTimePickerSelect.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./DateTimePickerSelect.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n    <!--        &lt;!&ndash; Date Picker &ndash;&gt;-->\n    <!--        <v-date-picker-->\n    <!--            v-model=\"selectedDate\"-->\n    <!--            is-inline-->\n    <!--            :attributes=\"{-->\n    <!--        placeholder: 'Select a Date',-->\n    <!--      }\"-->\n    <!--        />-->\n\n    <!--        &lt;!&ndash; Time Picker &ndash;&gt;-->\n    <!--        <v-time-picker-->\n    <!--            v-model=\"selectedTime\"-->\n    <!--            :step-minutes=\"15\"-->\n    <!--            :format=\"12\"-->\n    <!--            :min-time=\"'00:00:00'\"-->\n    <!--            :max-time=\"'23:59:59'\"-->\n    <!--            :attributes=\"{-->\n    <!--        placeholder: 'Select a Time',-->\n    <!--      }\"-->\n    <!--        />-->\n\n\n    <!--        <template>-->\n    <!--            <Calendar />-->\n    <!--&lt;!&ndash;            <DatePicker v-model=\"date\" />&ndash;&gt;-->\n    <!--            <VDatePicker v-model=\"date\" mode=\"dateTime\" :popover=\"false\" hide-time-header>-->\n    <!--                <template #default=\"{ togglePopover, inputValue, inputEvents }\">-->\n    <!--                    <div-->\n    <!--                        class=\"flex rounded-lg border border-gray-300 dark:border-gray-600 overflow-hidden\"-->\n    <!--                    >-->\n    <!--                        <button-->\n    <!--                            class=\"flex justify-center items-center px-2 bg-accent-100 hover:bg-accent-200 text-accent-700 border-r border-gray-300 dark:bg-gray-700 dark:text-accent-300 dark:border-gray-600 dark:hover:bg-gray-600\"-->\n    <!--                            @click=\"() => togglePopover()\"-->\n    <!--                        >-->\n    <!--                            <IconCalendar class=\"w-5 h-5\" />-->\n    <!--                        </button>-->\n    <!--                        <input-->\n    <!--                            :value=\"inputValue\"-->\n    <!--                            v-on=\"inputEvents\"-->\n    <!--                            class=\"flex-grow px-2 py-1 bg-white dark:bg-gray-700\"-->\n    <!--                        />-->\n    <!--                    </div>-->\n    <!--                </template>-->\n    <!--            </VDatePicker>-->\n    <!--        </template>-->\n\n    <DatePicker v-model=\"date\" mode=\"dateTime\" hide-time-header>\n      <template #default=\"{ togglePopover }\">\n        <button\n            class=\"px-3 py-2 bg-blue-500 text-sm text-white font-semibold rounded-md\"\n            @click.prevent=\"togglePopover\"\n        >\n          <slot name=\"buttonName\">Select date</slot>\n        </button>\n      </template>\n    </DatePicker>\n\n  </div>\n</template>\n\n<script setup>\nimport { ref, defineProps, defineEmits, watch } from 'vue'\nimport VDatePicker from 'v-calendar'\n// import VCalendar from 'v-calendar'\nimport { Calendar, DatePicker } from 'v-calendar'\nimport 'v-calendar/style.css'\n\nconst props = defineProps({\n  // initialDate: Date,\n  // initialTime: String,\n  inputValue: String,\n  date: String,\n});\n\nconst emits = defineEmits();\n\n// let date = new Date();\n// let date = ref(new Date());\nlet date = ref(props.date);\nconst calendar = ref(null);\nconst inputValue = ref(props.inputValue || null);\n\n// Define refs to store selected date and time\n// const selectedDate = ref(props.initialDate || null);\n// const selectedTime = ref(props.initialTime || null);\n\n\n// Watch for changes in selected dateTime emit it\nwatch([date], ([newDate]) => {\n  emits('date-time-selected', {date: newDate});\n});\n</script>\n","import script from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"mx-4 my-4\">\n    <div class=\"alert alert-info mt-4\"\n         v-if=\"props.flash.message\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" class=\"stroke-current shrink-0 w-6 h-6\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n      </svg>\n      <span>{{ props.flash.message }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-success mt-4 mx-3\"\n         v-if=\"props.flash.success\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.success }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-warning mt-4 mx-3\"\n         v-if=\"props.flash.warning\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"/>\n      </svg>\n      <span>{{ props.flash.warning }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-error mt-4 mx-3\"\n         v-if=\"props.flash.error\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.error }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n  </div>\n\n</template>\n\n<script setup>\nimport { router } from '@inertiajs/vue3'\nimport { computed } from \"vue\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\n\nconst appSettingStore = useAppSettingStore()\n\nappSettingStore.showFlashMessage = true\n\nlet props = defineProps({\n  flash: Object,\n\n})\n\nconst messageType = computed(() => ({\n  'text-green-700 bg-green-100 dark:bg-green-200 dark:text-green-800': props.flash.success,\n  'text-blue-700 bg-blue-100 dark:bg-blue-200 dark:text-blue-800': props.flash.message,\n  'text-orange-700 bg-orange-100 dark:bg-orange-200 dark:text-orange-800': props.flash.warning,\n  'text-red-700 bg-red-100 dark:bg-red-200 dark:text-red-800': props.flash.error,\n}))\n\nconst clearFlashMessage = async () => {\n  await router.post(route('flash.clear'));\n  router.reload();\n};\n</script>\n","import script from \"./Pagination.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Pagination.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div v-if=\"data.last_page > 1\" class=\"flex flex-wrap justify-center my-4 space-x-4 space-y-2\">\n    <div></div>\n    <Component v-if=\"data && data.links\"\n        :is=\"link.url ? 'Link' : 'span'\"\n        v-for=\"(link, key) in data.links\"\n        :key=\"key\"\n        :href=\"link.url\"\n        @click.prevent=\"saveScrollPosition\"\n        v-html=\"link.label\"\n        class=\"px-4 py-3 text-sm leading-4 h-fit\"\n        :class=\"{ 'text-white bg-orange-400 hover:bg-orange-400 dark:bg-orange-400 dark:hover:bg-orange-400': link.active,\n                      'rounded mt-2 mr-0.5 text-gray-300 dark:text-gray-700': ! link.url,\n                      'rounded bg-gray-200 hover:bg-gray-300 dark:bg-gray-800 dark:hover:bg-gray-600 text-gray-800 dark:text-gray-50 focus:text-indigo-500 hover:shadow': link.url }\"\n    />\n  </div>\n</template>\n\n\n<script setup>\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\n\nconst appSettingStore = useAppSettingStore()\n\ndefineProps({\n  data: Object,\n})\n\n\nappSettingStore.savedScrollPosition = 0\nconst saveScrollPosition = () => {\n  appSettingStore.savedScrollPosition = window.scrollY\n}\nwindow.scrollTo(0, appSettingStore.savedScrollPosition)\n\n</script>\n\n\n<!--class=\"px-1 text-gray-800 dark:text-gray-50 dark:hover:text-blue-400 hover:text-blue-400\"-->\n<!--:class=\"{ 'text-gray-300 dark:text-gray-700 dark:hover:text-gray-700 hover:text-gray-300': ! link.url, 'font-bold' : link.active }\"-->\n","import script from \"./ShowFooter.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ShowFooter.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n\n  <div class=\"flex flex-row flex-wrap-reverse justify-between mt-64 mb-4\">\n    <div>\n      <span class=\"text-xs uppercase font-semibold\">Show ID: </span>\n      <span class=\"text-xs\">{{ show.ulid }}</span>\n    </div>\n\n    <div class=\"flex flex-wrap justify-end text-right\">\n\n\n      <!-- Paginator -->\n      <!--                            <Pagination :links=\"`#`\" class=\"mt-6\"/>-->\n      <div class=\"text-gray-200 ml-2 uppercase\">\n        {{ show.name }}&nbsp;\n      </div>\n      <div>\n        ©\n        <!--                    If there is a copyright year display it... we need to remove the &copy; and replace it with whichever creative commons icon it needs -->\n        <span v-if=\"show.last_release_year > 0\">{{ show.first_release_year }}-{{ show.last_release_year }}</span>\n        <span v-if=\"!show.last_release_year && show.first_release_year\">{{ show.first_release_year }}</span>\n        <span class=\"text-xs font-semibold text-gray-500\"\n              v-if=\"!show.last_release_year && !show.first_release_year && show.copyrightYear\">{{\n            show.copyrightYear\n          }}</span>\n        <span class=\"text-xs font-semibold text-gray-500\"\n              v-if=\"show.creative_commons?.id === 7\">&nbsp;&copy;&nbsp;</span>\n        <!--                    If there is no copyright year then it's probably public domain... so we'll just display the creative commons name-->\n        <span v-if=\"show.creative_commons?.name\"\n              class=\"text-xs font-semibold text-gray-500\">&nbsp;&bull;&nbsp;{{ show.creative_commons?.name }}&nbsp;&bull;&nbsp;</span>\n\n\n      </div>\n    </div>\n\n  </div>\n\n</template>\n\n<script setup>\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\n\nconst appSettingStore = useAppSettingStore()\n\ndefineProps({\n  team: Object,\n  show: Object,\n})\n\nlet currentYear = new Date().getFullYear()\n\n</script>\n","import script from \"./Label.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Label.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./DateTimePicker.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./DateTimePicker.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n    <DatePicker v-model=\"date\" mode=\"dateTime\" :minute-increment=\"30\"/>\n\n  </div>\n</template>\n\n<script setup>\nimport { ref, defineProps, defineEmits, watch, onMounted } from 'vue'\nimport { DatePicker } from 'v-calendar'\nimport 'v-calendar/style.css'\nimport { useUserStore } from '@/Stores/UserStore'\nimport dayjs from 'dayjs'\nimport utc from 'dayjs/plugin/utc'\nimport timezone from 'dayjs/plugin/timezone'\n\nconst userStore = useUserStore()\n\ndayjs.extend(utc)\ndayjs.extend(timezone)\n\nconst props = defineProps({\n  date: null,\n});\n\nconst emits = defineEmits(['date-time-selected']);\n\nlet date = ref(props.date ? props.date : dayjs().tz(userStore.timezone).format('YYYY-MM-DDTHH:mm:ssZ'));\n\nconst calendar = ref(null);\n\n// Customize time picker options to show only :00 and :30 minutes\nconst timePickerOptions = {\n  step: 30, // Step in minutes, to show :00 and :30\n  round: 30, // Round to nearest step\n  start: '00:00', // Start time\n  end: '23:30', // End time\n};\n\n// Watch for changes in selected dateTime emit it\nwatch(date, (newDate) => {\n  emits('date-time-selected', {date: newDate});\n});\n\nonMounted(() => {\n  if (!props.date) {\n    date.value = dayjs().tz(userStore.timezone).format('YYYY-MM-DDTHH:mm:ssZ');\n  }\n});\n</script>\n","import script from \"./DatePicker.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./DatePicker.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n    <DatePicker v-model=\"date\" mode=\"date\" view=\"weekly\" :disabled-dates=\"disabledDays\" expanded/>\n\n  </div>\n</template>\n\n<script setup>\nimport { ref, defineProps, defineEmits, watch, computed } from 'vue'\nimport { DatePicker } from 'v-calendar'\nimport 'v-calendar/style.css'\n\nconst props = defineProps({\n  date: null,\n  disabledDays: {\n    type: Array,\n    default: () => [], // Default to an empty array if not provided\n  },\n});\n\nconst emits = defineEmits();\n\nlet date = ref(props.date);\nconst calendar = ref(null);\n//\n// // Compute allowedDayNumbers only if allowedDays is provided and not empty\n// const allowedDayNumbers = computed(() => {\n//   if (props.disabledDays.length > 0) {\n//     const dayMap = { 'Sunday': 0, 'Monday': 1, 'Tuesday': 2, 'Wednesday': 3, 'Thursday': 4, 'Friday': 5, 'Saturday': 6 };\n//     return props.disabledDays.map(day => dayMap[day]);\n//   }\n//   return null; // Return null to indicate no restrictions\n// });\n//\n// // Compute dateAttributes based on whether allowedDayNumbers is null\n// const dateAttributes = computed(() => {\n//   if (allowedDayNumbers.value !== null) {\n//     return [\n//       {\n//         key: 'disabled',\n//         dates: date => !allowedDayNumbers.value.includes(date.getDay()),\n//       },\n//       {\n//         key: 'tomorrow',\n//         highlight: true,\n//         dates: new Date(new Date().setDate(new Date().getDate() + 1)),\n//       },\n//     ];\n//   }\n//   // Return an empty array or any default attributes when no allowedDays are provided\n//   return [];\n// });\n\n// Watch for changes in selected dateTime emit it\nwatch([date], ([newDate]) => {\n  emits('date-time-selected', {date: newDate});\n});\n</script>\n","import script from \"./StepSixCongratulations.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./StepSixCongratulations.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <dialog id=\"addShowToScheduleModal\" class=\"modal text-black\">\n    <div class=\"modal-box w-11/12 max-w-5xl text-black bg-white dark:bg-gray-800 dark:text-white\">\n      <button v-if=\"currentStep === 6\"\n              @click.prevent=\"closeModal\"\n              :disabled=\"currentStep !== totalSteps\"\n              class=\"btn justify-end\">Close\n      </button>\n\n      <div class=\"flex flex-row justify-between\">\n        <div>\n          <h2 v-if=\"currentStep !== 6\" class=\"font-bold text-xl\">\n            <slot name=\"form-title\">Default Form Title</slot>\n            <span class=\"font-medium\">({{ selectedTimezone }})</span>\n          </h2>\n        </div>\n        <div>\n          <button v-if=\"currentStep <= 5\"\n                  class=\"btn\"\n                  @click.prevent=\"closeModalAndReset\">Cancel\n          </button>\n        </div>\n      </div>\n\n      <div>\n        <h4 v-if=\"currentStep !== 6\" class=\"font-medium text-lg\">\n          <slot name=\"form-description\">Default Form Description</slot>\n        </h4>\n      </div>\n\n      <div class=\"flex flex-col space-y-2 px-12 mt-6\">\n        <form @submit.prevent=\"submit\">\n\n          <div v-if=\"currentStep === 0\" class=\"mt-6\">\n            <!-- Step 0 content -->\n            <!-- Part 1: Confirm Timezone -->\n\n            <div v-if=\"!timezoneConfirmed\">\n              <div class=\"mb-2 pb-6 text-primary text-center\">Confirm Timezone</div>\n              <div class=\"flex flex-row justify-center\">\n                <select id=\"timezone-select\" v-model=\"selectedTimezone\" @change=\"updateTimezone\"\n                        class=\"ml-2 rounded-lg select select-bordered bg-white dark:bg-gray-800 dark:text-white\">\n                  <option v-for=\"timezone in userStore.timezones\" :key=\"timezone\" :value=\"timezone\">{{\n                      timezone\n                    }}\n                  </option>\n                </select>\n              </div>\n              <div class=\"flex flex-row justify-center pt-6\">\n                <button @click.prevent=\"confirmTimezone\" class=\"btn btn-primary\">Confirm Timezone</button>\n              </div>\n            </div>\n\n\n            <!-- Part 2: Choose Schedule Type -->\n            <div v-else>\n              <div class=\"mb-2 text-primary text-center\">Choose Schedule Type</div>\n              <div class=\"flex justify-center space-x-4 mt-4\">\n                <button @click.prevent=\"selectScheduleType('one-time')\"\n                        class=\"btn btn-primary h-40 w-60 bg-indigo-500 hover:bg-indigo-700 text-white rounded-lg flex flex-col p-4\">\n                  <span class=\"text-lg\">One-time Event</span>\n                </button>\n                <button @click.prevent=\"selectScheduleType('recurring')\"\n                        class=\"btn btn-primary h-40 w-60 bg-indigo-500 hover:bg-indigo-700 text-white rounded-lg flex flex-col p-4\">\n                  <span class=\"text-lg\">Recurring Show</span>\n                </button>\n              </div>\n              <div @click.prevent=\"timezoneConfirmed = false\" class=\"mt-4 btn btn-sm\">< change timezone</div>\n            </div>\n\n\n          </div>\n\n\n          <div v-if=\"form.scheduleType === 'one-time'\" class=\"py-6\">\n            <!-- Steps Header for one-time shows -->\n            <ul v-if=\"currentStep <= 5 && currentStep !== 0\" class=\"steps w-full\">\n              <li @click.prevent=\"goToStep(1)\" class=\"step cursor-pointer\"\n                  :class=\"{ 'step-primary': currentStep >= 1 && currentStep !== 6}\">\n                <div>&nbsp;</div>\n                <div :class=\"{ 'text-primary': currentStep === 1 }\">Choose Start Day/Time</div>\n                <div :class=\"{ 'text-primary': currentStep === 1 }\">{{ formattedStartDate }}&nbsp;</div>\n                <div :class=\"{ 'text-primary': currentStep === 1 }\">{{ formattedStartTimeForOneTime }}&nbsp;</div>\n              </li>\n              <li @click.prevent=\"goToStep(2)\" class=\"step cursor-pointer\"\n                  :class=\"{ 'step-primary': currentStep >= 2 }\">\n                <div>&nbsp;</div>\n                <div :class=\"{ 'text-primary': currentStep === 2 }\">Set Duration</div>\n                <div :class=\"{ 'text-primary': currentStep === 2 }\"> {{ form.durationDisplay }}&nbsp;</div>\n                <div>&nbsp;</div>\n              </li>\n            </ul>\n\n            <div class=\"mt-6 pt-6\">\n\n              <div v-if=\"currentStep === 1\" class=\"flex flex-row justify-center\">\n                <!-- Step 1 content -->\n                <div class=\"flex flex-col\">\n                  <div class=\"mb-2\">1. Choose start date and time.</div>\n                  <DateTimePicker :date=\"form.startDate\" @date-time-selected=\"handleStartDateSelected\"/>\n                </div>\n              </div>\n            </div>\n\n            <div v-if=\"currentStep === 2\" class=\"flex flex-row justify-center\">\n              <!-- Step 3 content -->\n              <div class=\"flex flex-col\">\n                <div class=\"mb-2\">3. Choose duration (maximum 3 hours)</div>\n                <div class=\"flex items-center gap-2\">\n                  <select v-model=\"form.durationHour\"\n                          class=\"select select-bordered bg-white dark:bg-gray-800 dark:text-white\">\n                    <option value=\"0\">0 hours</option>\n                    <option value=\"1\">1 hour</option>\n                    <option value=\"2\">2 hours</option>\n                    <option value=\"3\">3 hours</option>\n                  </select>\n                  <select v-model=\"form.durationMinute\"\n                          class=\"select select-bordered bg-white dark:bg-gray-800 dark:text-white\">\n                    <option v-for=\"option in minuteOptions\" :key=\"option\" :value=\"option\">{{ option }} minutes</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n\n          </div>\n\n          <div v-if=\"form.scheduleType === 'recurring'\" class=\"py-6\">\n            <!-- Steps Header for recurring shows -->\n            <ul v-if=\"currentStep <= 5 && currentStep !== 0\" class=\"steps w-full\">\n              <li @click.prevent=\"goToStep(1)\" class=\"step cursor-pointer\"\n                  :class=\"{ 'step-primary': currentStep >= 1 && currentStep !== 6}\">\n                <div>&nbsp;</div>\n                <div :class=\"{ 'text-primary': currentStep === 1 }\">Choose Days</div>\n                <div :class=\"{ 'text-primary': currentStep === 1 }\">{{ abbreviatedDaysOfWeekOrdered }}&nbsp;</div>\n              </li>\n              <li @click.prevent=\"goToStep(2)\" class=\"step cursor-pointer\"\n                  :class=\"{ 'step-primary': currentStep >= 2 }\">\n                <div>&nbsp;</div>\n                <div :class=\"{ 'text-primary': currentStep === 2 }\">Start time</div>\n                <div :class=\"{ 'text-primary': currentStep === 2 }\">{{ formattedStartTime }}&nbsp;</div>\n              </li>\n              <li @click.prevent=\"goToStep(3)\" class=\"step cursor-pointer\"\n                  :class=\"{ 'step-primary': currentStep >= 3 }\">\n                <div>&nbsp;</div>\n                <div :class=\"{ 'text-primary': currentStep === 3 }\">Duration</div>\n                <div :class=\"{ 'text-primary': currentStep === 3 }\"> {{ form.durationDisplay }}&nbsp;</div>\n              </li>\n              <li @click.prevent=\"goToStep(4)\" class=\"step cursor-pointer\"\n                  :class=\"{ 'step-primary': currentStep >= 4 }\">\n                <div>&nbsp;</div>\n                <div :class=\"{ 'text-primary': currentStep === 4 }\">Start date</div>\n                <div :class=\"{ 'text-primary': currentStep === 4 }\">{{ formattedStartDate }}&nbsp;</div>\n              </li>\n              <li @click.prevent=\"goToStep(5)\" class=\"step cursor-pointer\"\n                  :class=\"{ 'step-primary': currentStep >= 5 }\">\n                <div>&nbsp;</div>\n                <div :class=\"{ 'text-primary': currentStep === 5 }\">End date</div>\n                <div :class=\"{ 'text-primary': currentStep === 5 }\">{{ formattedEndDate }}&nbsp;</div>\n              </li>\n            </ul>\n\n\n            <div class=\"mt-6 pt-6\">\n\n              <div v-if=\"currentStep === 1\">\n                <!-- Step 1 content -->\n                <div class=\"mb-2\">1. Choose days of the week.</div>\n                <label v-for=\"day in ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\"\n                       :key=\"day\"\n                       class=\"ml-4 cursor-pointer\">\n                  <input type=\"checkbox\" v-model=\"form.daysOfWeek\" :value=\"day\" class=\"cursor-pointer checkbox\"> <span\n                    class=\"pl-1\">{{ day }}</span>\n                </label>\n              </div>\n              <div v-if=\"currentStep === 2\">\n                <!-- Step 2 content -->\n                <div class=\"mb-2\">2. Choose start time</div>\n                <div class=\"flex items-center gap-2 text-black bg-white dark:bg-gray-800 dark:text-white\">\n                  <!-- Hour selection -->\n                  <select v-model=\"form.startTime.hour\"\n                          class=\"form-select select select-bordered text-black bg-white dark:bg-gray-800 dark:text-white\">\n                    <option v-for=\"hour in hours\" :key=\"hour\" :value=\"hour\">{{ hour }}</option>\n                  </select>\n\n                  <!-- Minute selection -->\n                  <select v-model=\"form.startTime.minute\"\n                          class=\"form-select select select-bordered  text-black bg-white dark:bg-gray-800 dark:text-white\">\n                    <option value=\"00\">00</option>\n                    <option value=\"30\">30</option>\n                  </select>\n\n                  <!-- AM/PM selection -->\n                  <select v-model=\"form.startTime.meridian\"\n                          class=\"form-select select select-bordered text-black bg-white dark:bg-gray-800 dark:text-white \">\n                    <option value=\"AM\">AM</option>\n                    <option value=\"PM\">PM</option>\n                  </select>\n                </div>\n              </div>\n              <div v-if=\"currentStep === 3\">\n                <!-- Step 3 content -->\n                <div class=\"mb-2\">3. Choose duration (maximum 3 hours)</div>\n                <div class=\"flex items-center gap-2\">\n                  <select v-model=\"form.durationHour\"\n                          class=\"select select-bordered text-black bg-white dark:bg-gray-800 dark:text-white\">\n                    <option value=\"0\">0 hours</option>\n                    <option value=\"1\">1 hour</option>\n                    <option value=\"2\">2 hours</option>\n                    <option value=\"3\">3 hours</option>\n                  </select>\n                  <select v-model=\"form.durationMinute\"\n                          class=\"select select-bordered text-black bg-white dark:bg-gray-800 dark:text-white\">\n                    <option v-for=\"option in minuteOptions\" :key=\"option\" :value=\"option\">{{ option }} minutes</option>\n                  </select>\n                </div>\n              </div>\n              <div v-if=\"currentStep === 4\">\n                <!-- Step 4 content -->\n                <div class=\"mb-2\">4. Choose start date (tomorrow or later)</div>\n                <DatePicker :date=\"form.startDate\" :disabledDays=\"disabledDays\"\n                            @date-time-selected=\"handleStartDateSelected\"/>\n              </div>\n              <div v-if=\"currentStep === 5\">\n                <!-- Step 5 content -->\n                <div class=\"mb-2\">5. Choose end date (cannot be longer than 3 months, so 3 months is pre-set)</div>\n                <DatePicker :date=\"form.endDate\" :disabledDays=\"disabledDays\"\n                            @date-time-selected=\"handleEndDateSelected\"/>\n              </div>\n            </div>\n          </div>\n\n          <StepSixCongratulations v-if=\"currentStep === 6 && Object.keys(form.errors).length === 0\" class=\"p-4\">\n            <template #header>Congratulations!</template>\n            <template #subHeader>You've successfully scheduled your show on notTV!</template>\n          </StepSixCongratulations>\n\n          <div v-if=\"currentStep === 6 && Object.keys(form.errors).length > 0\" class=\"p-4 text-red-700 w-full\">\n            <ul>\n              <li v-for=\"(errorMessages, key) in form.errors\" :key=\"key\">\n                <span v-if=\"Array.isArray(errorMessages)\">{{ key }}:</span>\n                <ul v-if=\"Array.isArray(errorMessages)\">\n                  <li v-for=\"(message, index) in errorMessages\" :key=\"index\">{{ message }}</li>\n                </ul>\n                <span v-else>{{ errorMessages }}</span>\n              </li>\n            </ul>\n          </div>\n\n\n          <div class=\"flex flex-row justify-between mt-12\">\n            <button v-if=\"(currentStep <= 5 && currentStep !== 0) || (currentStep === 6 && form.errors.length > 0)\"\n                    @click.prevent=\"goToPreviousStep\"\n                    :disabled=\"currentStep === 0\"\n                    class=\"btn\">Back\n            </button>\n            <div></div>\n            <div v-if=\"stepError\" class=\"px-3 text-red-700\" v-html=\"stepError\"/>\n            <div></div>\n            <button v-if=\"currentStep <=5 && currentStep !== 0\"\n                    @click.prevent=\"goToNextStep\"\n                    :disabled=\"currentStep === totalSteps\"\n                    class=\"btn btn-primary text-white\">Next\n            </button>\n            <button v-if=\"currentStep === 6\"\n                    @click.prevent=\"closeModal\"\n                    :disabled=\"currentStep !== totalSteps\"\n                    class=\"btn justify-self-end\">Close\n            </button>\n          </div>\n\n\n        </form>\n      </div>\n    </div>\n  </dialog>\n\n  <dialog id=\"confirmAddShowModal\" class=\"modal\">\n    <div class=\"modal-box text-center bg-white dark:bg-gray-800 dark:text-white\">\n      <h3 class=\"font-bold text-lg\">Are you sure you want to add your show to the schedule?</h3>\n      <div class=\"modal-action flex flex-row justify-center\">\n        <button class=\"btn btn-success text-white px-6\" @click.prvent=\"submit\">Yes!</button>\n        <button class=\"btn\" @click.prvent=\"closeConfirmAddShowModal\">Go back</button>\n      </div>\n    </div>\n  </dialog>\n\n</template>\n<script setup>\nimport { router } from '@inertiajs/vue3'\nimport { computed, getCurrentInstance, onMounted, onUnmounted, reactive, ref, watch } from 'vue'\nimport { usePage } from '@inertiajs/vue3'\nimport dayjs from 'dayjs'\nimport utc from 'dayjs/plugin/utc' // Required for UTC support\nimport timezone from 'dayjs/plugin/timezone' // Required for timezone support\nimport { useUserStore } from '@/Stores/UserStore'\nimport { useScheduleStore } from '@/Stores/ScheduleStore'\nimport { useShowStore } from '@/Stores/ShowStore'\nimport { useNotificationStore } from '@/Stores/NotificationStore'\nimport DateTimePicker from '@/Components/Global/Calendar/DateTimePicker.vue'\nimport DatePicker from '@/Components/Global/Calendar/DatePicker.vue'\nimport StepSixCongratulations from '@/Components/Global/Schedule/StepSixCongratulations.vue'\n\nimport Label from '@/Jetstream/Label.vue'\nimport Button from '@/Jetstream/Button.vue'\n\nconst userStore = useUserStore()\nconst scheduleStore = useScheduleStore()\nconst showStore = useShowStore()\nconst notificationStore = useNotificationStore()\n\ndayjs.extend(utc)\ndayjs.extend(timezone)\n\nlet page = usePage().props\n\nlet props = defineProps({\n  id: String,\n  show: Object,\n  // errors: Object,\n})\n\n// Access the global properties\nconst {proxy} = getCurrentInstance()\n\nconst startConfetti = () => {\n  proxy.$confetti.start()\n}\n\nconst stopConfetti = () => {\n  proxy.$confetti.stop()\n}\n\n// const errors = ref(props.errors);\n\nlet endDate = ''\nconst formEndDate = ref('')\nconst selectedEndDate = ref(null)\nconst timezoneConfirmed = ref(false)\nconst modalVisible = ref(false)\n\nconst currentStep = ref(0)\nconst totalSteps = ref(6)\nconst stepError = ref('') // To store the error message for the current step\n\n\n// Define the initial form state\nconst initialFormState = {\n  scheduleType: '', // 'one-time' or 'recurring'\n  daysOfWeek: [],\n  startTime: {\n    hour: '12',\n    minute: '00',\n    meridian: 'AM',\n  },\n  duration: '',\n  durationHour: '0', // Initialize as '0' to represent the default selection\n  durationMinute: '30', // Default to '30' minutes for '0' hours\n  durationDisplay: '30 minutes', // Default display text\n  startDate: '',\n  endDate: '',\n  errors: {},\n}\n\nconst form = reactive({...initialFormState}) // on modal load, reset form.\n\n// Function to reset the form\nconst resetForm = () => {\n  Object.assign(form, initialFormState)\n}\n\n// Function to clear errors\nconst clearErrors = () => {\n  form.errors = {}\n}\n\nfunction confirmTimezone() {\n  timezoneConfirmed.value = true\n}\n\nfunction selectScheduleType(type) {\n  form.scheduleType = type\n  // Proceed to the next step based on the selection\n  goToNextStep()\n}\n\nfunction goToNextStep() {\n  // Clear any existing error message\n  stepError.value = ''\n\n  if (form.scheduleType === 'recurring') {\n\n    // Combine startDate and startTime into a single dayjs object\n    let startHour = parseInt(form.startTime.hour)\n    const startMinute = parseInt(form.startTime.minute)\n\n    if (form.startTime.meridian === 'PM' && startHour !== 12) {\n      startHour += 12\n    } else if (form.startTime.meridian === 'AM' && startHour === 12) {\n      startHour = 0\n    }\n\n    // Combine form.startDate and form.startTime\n    const startDateTime = dayjs(form.startDate)\n        .hour(startHour)\n        .minute(startMinute)\n        .second(0)\n        .millisecond(0)\n\n    const now = dayjs().tz(userStore.timezone)\n    const sixHoursFromNow = now.add(6, 'hour')\n\n    const isBeforeSixHours = startDateTime.isBefore(sixHoursFromNow)\n\n    if (currentStep.value === 1 && form.daysOfWeek.length === 0) {\n      // If no days are selected and the current step is 1, set an error message\n      stepError.value = 'Please select at least one day of the week.'\n    } else if (currentStep.value === 4 && !form.startDate) {\n      // If no start date is selected and the current step is 4, set an error message\n      stepError.value = 'Please select a start date.'\n    } else if (currentStep.value === 4 && isBeforeSixHours) {\n      // If the start date is within the next 6 hours when the current step is 4, set an error message\n      stepError.value = 'Start date must be at least 6 hours in the future.'\n    } else if (currentStep.value === 5 && dayjs(form.endDate).isAfter(dayjs(form.startDate).add(3, 'months').add(1, 'week'))) {\n      // Allow the end date to be up to one week beyond exactly three months from the start date\n      // const latestEndDate = dayjs(form.startDate).add(3, 'months').add(1, 'week').format('ddd MMM D YYYY')\n      stepError.value = `End date must be within 3 months and 1 week of the start date. <\\/br>The latest possible end date is ${provisionalEndDate.value}. <\\/br>This limitation is for the Beta Version of notTV only.`\n    } else if (currentStep.value === 5) {\n      document.getElementById('confirmAddShowModal').showModal()\n    } else if (currentStep.value < totalSteps.value) {\n      // Proceed to the next step if there are no errors\n      currentStep.value++\n    }\n  } else if (form.scheduleType === 'one-time') {\n\n    const now = dayjs().tz(userStore.timezone)\n    const sixHoursFromNow = now.add(6, 'hour')\n\n    const isBeforeSixHours = dayjs(form.startDate).isBefore(sixHoursFromNow)\n\n    if (currentStep.value === 1 && !form.startDate) {\n      // If no start date is selected and the current step is 1, set an error message\n      stepError.value = 'Please select a start date.'\n    } else if (currentStep.value === 1 && isBeforeSixHours) {\n      // If the start date is today or earlier when the current step is 1, set an error message\n      stepError.value = 'Start date must be at least 6 hours in the future.'\n    } else if (currentStep.value === 2) {\n      document.getElementById('confirmAddShowModal').showModal()\n    } else if (currentStep.value < totalSteps.value) {\n      // Proceed to the next step if there are no errors\n      currentStep.value++\n    }\n  }\n\n}\n\nfunction goToPreviousStep() {\n  if (form.scheduleType === 'recurring' && currentStep.value > 0) {\n    currentStep.value--\n  } else if (form.scheduleType === 'one-time' && currentStep.value > 2) {\n    currentStep.value = 2\n  } else if (form.scheduleType === 'one-time') {\n    currentStep.value--\n  }\n}\n\nfunction goToStep(num) {\n  // Clear any existing error message\n  stepError.value = ''\n  if (form.scheduleType === 'recurring') {\n    if (currentStep.value === 1 && form.daysOfWeek.length === 0) {\n      // If no days are selected and the current step is 1, set an error message\n      stepError.value = 'Please select at least one day of the week.'\n    } else if ((currentStep.value === 4 && !form.startDate) || (num === 5 && !form.startDate)) {\n      // If no start date is selected and the current step is 4, set an error message\n      stepError.value = 'Please select a start date.'\n    } else if ((currentStep.value === 4 && dayjs(form.startDate).isBefore(dayjs().add(1, 'day').startOf('day'))) || (num === 5 && dayjs(form.startDate).isBefore(dayjs().add(1, 'day').startOf('day')))) {\n      // If the start date is today or earlier when the current step is 4, set an error message\n      stepError.value = 'Start date must be later than today.'\n    } else\n      currentStep.value = num\n  } else if (form.scheduleType === 'one-time') {\n    if (currentStep.value === 1 && !form.startDate) {\n      // If no start date is selected and the current step is 1, set an error message\n      stepError.value = 'Please select a start date.'\n    } else if (currentStep.value === 1 && dayjs(form.startDate).isBefore(dayjs().add(1, 'day').startOf('day'))) {\n      // If the start date is today or earlier when the current step is 1, set an error message\n      stepError.value = 'Start date must be later than today.'\n    } else\n      currentStep.value = num\n  }\n\n}\n\n// Define the order of days\nconst daysOrder = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n\n// Mapping full day names to their abbreviations\nconst dayAbbreviations = {\n  'Sunday': 'Su',\n  'Monday': 'M',\n  'Tuesday': 'Tu',\n  'Wednesday': 'W',\n  'Thursday': 'Th',\n  'Friday': 'F',\n  'Saturday': 'Sa',\n}\n\n// Define the mapping from day names to their numerical values (0 = Sunday, 6 = Saturday)\nconst dayNameToNumber = {\n  'Sunday': 1,\n  'Monday': 2,\n  'Tuesday': 3,\n  'Wednesday': 4,\n  'Thursday': 5,\n  'Friday': 6,\n  'Saturday': 7,\n}\n\n// Computed property to get the abbreviated days of the week in the correct order\nconst abbreviatedDaysOfWeekOrdered = computed(() => {\n  // Sort the selected days based on their index in daysOrder\n  const sortedSelectedDays = form.daysOfWeek\n      .map(day => ({day, index: daysOrder.indexOf(day)}))\n      .sort((a, b) => a.index - b.index)\n      .map(sortedDay => dayAbbreviations[sortedDay.day]) // Map to abbreviations\n\n  return sortedSelectedDays.join(', ')\n})\n\n// Watch for changes in the selected days of the week\nwatch(() => form.daysOfWeek, (newDays) => {\n  // If currently on the first step and at least one day is selected, clear the error message\n  if (currentStep.value === 1 && newDays.length > 0) {\n    stepError.value = ''\n  }\n}, {immediate: true})\n\n\n// Generate hours (1-12 for AM/PM format)\nconst hours = Array.from({length: 12}, (_, i) => (i + 1).toString().padStart(2, '0'))\n\n// A computed property to format the time for display\nlet formattedStartTime = computed(() => {\n  // Only format the time if all parts have been selected\n  if (form.startTime.hour && form.startTime.minute && form.startTime.meridian) {\n    return `${form.startTime.hour}:${form.startTime.minute} ${form.startTime.meridian}`\n  } else {\n    return '' // Default message\n  }\n})\n\n// Compute the available minute options based on the selected hour\nconst minuteOptions = computed(() => {\n  if (form.durationHour === '0') {\n    return ['30'] // Only '30' minutes if '0 hours' is selected\n  } else if (form.durationHour === '3') {\n    return ['00'] // Only '00' minutes if '3 hours' is selected\n  } else {\n    return ['00', '30'] // Both '00' and '30' minutes options available otherwise\n  }\n})\n\n// Function to update the duration display text based on current selections\nconst updateDurationDisplay = () => {\n  let display = `${form.durationHour} hour${form.durationHour === '1' ? '' : 's'}`\n  if (form.durationHour === '0') {\n    display = '30 minutes' // Display '30 minutes' for '0 hours' selection\n  } else if (form.durationMinute === '30' && form.durationHour !== '0') {\n    display += ' and 30 minutes' // Append 'and 30 minutes' for selections other than '0 hours'\n  }\n  form.durationDisplay = display // Update the display text in the form state\n}\n\n// Watch the durationMinute for changes to update the display accordingly\nwatch(() => form.durationMinute, () => {\n  updateDurationDisplay()\n}, {immediate: true})\n\n// Automatically adjust the minute selection when the hour changes\nwatch(() => form.durationHour, (newHour) => {\n  if (newHour === '1' || newHour === '2' || newHour === '3') {\n    form.durationMinute = '00' // Force to '00' if '3 hours' is selected\n  } else if (newHour === '0') {\n    form.durationMinute = '30' // Force to '30' if '0 hours' is selected\n  }\n  // Update the duration display based on the new selections\n  updateDurationDisplay()\n}, {immediate: true})\n\n// Initialize the display text based on the default selections\nupdateDurationDisplay()\n\n// Assuming form.startDate is in 'YYYY-MM-DD' format or a Date object\nconst formattedStartTimeForOneTime = computed(() => {\n  if (!form.startDate) return ''\n  // Directly parse and format the date in local time without converting timezones\n  // console.log('formattedStartTimeForOneTime time in: ' + form.startDate)\n  // console.log('formattedStartTimeForOneTime time out: ' + timeIn)\n  return dayjs(form.startDate).format('hh:mm A') // This should match the local time equivalent of the input\n\n\n})\n\nconst formattedStartDate = computed(() => {\n  if (!form.startDate) return ''\n  return dayjs(form.startDate).format('ddd MMM D YYYY') // Formats to \"Wed Feb 21 2024\"\n})\n\nlet formattedEndDate = computed(() => {\n  if (!form.endDate) return ''\n  return dayjs(form.endDate).format('ddd MMM D YYYY') // Formats to \"Wed Feb 21 2024\"\n})\n\n// Compute the disabled days based on the selected days of the week\nconst disabledDays = computed(() => {\n  const selectedDayNumbers = form.daysOfWeek.map(day => dayNameToNumber[day])\n  const disabledDayNumbers = Object.values(dayNameToNumber).filter(dayNum => !selectedDayNumbers.includes(dayNum))\n  // Return the structure expected by the DatePicker component for disabling days\n  return [\n    {\n      repeat: {\n        weekdays: disabledDayNumbers,\n      },\n    },\n  ]\n})\n\nconst provisionalEndDate = ref('')\n// Handle date selection from DatePicker\nconst handleStartDateSelected = ({date}) => {\n  stepError.value = '' // Clear any existing error messages\n  const dayjsDate = dayjs(date)\n  // form.startDate = dayjsDate.tz(userStore.canadianTimezone, true).format(); // Update the start date\n  form.startDate = date // Update the start date\n  // console.log('handleStartDate form.startDate: ' + form.startDate)\n  // console.log('handleStartDate raw date: ' + date)\n\n  // Calculate a rough endDate 3 months from the startDate\n  endDate = dayjs(date).add(3, 'months')\n\n  // If endDate's weekday differs from startDate's, adjust to the next occurrence of the same weekday\n  const startWeekday = dayjs(date).day()\n  while (endDate.day() !== startWeekday) {\n    endDate = endDate.add(1, 'day')\n  }\n\n  // If the endDate is more than a week away from being exactly 3 months, adjust by subtracting days to get closer to the 3-month mark\n  if (endDate.diff(dayjs(date).add(3, 'months'), 'week') > 1) {\n    endDate = endDate.subtract(endDate.diff(dayjs(date).add(3, 'months'), 'days') % 7, 'days')\n\n  }\n\n  form.endDate = endDate\n  // console.log('handleStartDate form.endDate: ' + form.endDate)\n  provisionalEndDate.value = dayjs(form.endDate).format('ddd MMM D YYYY') // Update the endDate in the form\n  // console.log('provisionalEndDate: ' + provisionalEndDate.value)\n}\n\n// Handles end date selection\nconst handleEndDateSelected = ({date}) => {\n  console.log('handleEndDate: ' + date)\n  // form.endDate = dayjs(date).tz(userStore.timezone) // Directly set the end date from the selection\n  form.endDate = date // Directly set the end date from the selection\n  // console.log('handleEndDate form.endDate: ' + form.endDate)\n  // console.log('NEW handleEndDate form.endDate: ' + selectedEndDate.value)\n  // You might want to add validation or adjustment logic here as well\n}\n\nconst submit = async () => {\n  closeConfirmAddShowModal()\n\n  try {\n    const payload = showStore.preparePayload(form)\n    // console.log('==================================================')\n    // console.log('PAYLOAD:', payload)\n\n    const response = await showStore.addShowToSchedule(payload)\n    // console.log('Success:', response)\n    goToStep(6)\n    startConfetti()\n  } catch (error) {\n    console.error('Error submitting form:', error)\n    goToStep(6)\n    if (error.response && error.response.data) {\n      form.errors = error.response.data\n      notificationStore.setToastNotification(form.errors, 'error', 10000)\n    } else {\n      form.errors = error.message || 'An unknown error occurred'\n      notificationStore.setToastNotification(form.errors, 'error', 10000)\n    }\n  }\n}\n\n// async function submit() {\n//   closeConfirmAddShowModal()\n//   let formattedDuration = ''\n//\n//   console.log('==================================================')\n//\n//   // If we reach here, user confirmed. Proceed with submission.\n//   if (form.scheduleType === 'one-time') {\n//\n//     // 1. Start date/time\n//       // Parse the startDate as a Day.js object\n//       console.log('SUBMIT start date in: ' + form.startDate)\n//       // form.startDate = dayjs(form.startDate).tz(userStore.canadianTimezone, true).format()\n//       // console.log('SUBMIT start date out: ' + form.startDate)\n//       let startDate = dayjs(form.startDate).tz(userStore.canadianTimezone, true);\n//       form.startDate = startDate.format()\n//       console.log('SUBMIT start date formatted: ' + form.startDate);\n//\n//     // 2. Duration\n//       // Ensure duration hours and minutes are treated as numbers\n//       let durationHours = Number(form.durationHour);\n//       let durationMinutes = Number(form.durationMinute);\n//\n//       form.duration = (durationHours * 60) + durationMinutes;\n//\n//     // 3. End date/time\n//\n//       // Adjust the endDate by setting the correct hour and minute, then adding the duration\n//       endDate = startDate\n//           .add(durationHours, 'hour')\n//           .add(durationMinutes, 'minute');\n//\n//       // If you need to adjust for a specific timezone without changing the local time\n//         // Note: The true flag in tz() might not be necessary depending on your exact needs for timezone handling\n//         form.endDate = dayjs(endDate).tz(userStore.canadianTimezone, true).format();\n//         console.log('SUBMIT end date out: ' + form.endDate);\n//\n//\n//     // 4. Other values are null\n//       form.startTime = null // not used for one-time\n//       form.daysOfWeek = null // not used for one-time\n//\n//\n//   }\n//\n//\n//   if (form.scheduleType === 'recurring') {\n//\n//\n//     // 1. Start date in, add start time\n//       console.log('SUBMIT startDate in: ' + form.startDate);\n//\n//       // Assuming form.startTime.hour, form.startTime.minute are in correct format and form.startTime.meridian is either 'AM' or 'PM'\n//       let hour = parseInt(form.startTime.hour) % 12;// Convert to 12-hour format\n//       if (form.startTime.meridian === 'PM') hour += 12; // Convert PM to 24-hour format\n//\n//       // Parse the startDate and set the time\n//       let startDate = dayjs(form.startDate).hour(hour).minute(form.startTime.minute);\n//       form.startDate = dayjs(startDate).tz(userStore.canadianTimezone, true).format()\n//     console.log('whats the start date? ' + form.startDate)\n//       let newEndTime = dayjs(form.startDate).add(form.durationHour, 'hours').add(form.durationMinute, 'minutes')\n//     form.endTime = newEndTime.format('HH:mm:ss')\n//     console.log('NEW END TIME: ' + form.endTime);\n//     // Extract the date part of form.endDate\n//     let endDateOnly = dayjs(form.endDate).format('YYYY-MM-DD');\n// // Combine endDateOnly with form.endTime to update the form.endDate\n//     form.endDate = dayjs(endDateOnly + ' ' + form.endTime).format('YYYY-MM-DD HH:mm:ss');\n//\n//     let newFormattedEndDateTime = dayjs(form.endDate).tz(userStore.canadianTimezone, true).format()\n//     console.log('NEW END DATETIME: ' + newFormattedEndDateTime);\n//       form.endDate = newFormattedEndDateTime\n//     console.log('CONFIRM END DATETIME: ' + form.endDate);\n//     // Calculating endDate based on startDate and the duration\n//     // let endDate = startDate.add(totalDurationMinutes, 'minute');\n//\n//     // Setting form.endDate and logging\n//     // let endDate = form.endDate.format()\n//     // form.endDate = endDate.format();\n//\n//\n//     // 2. Start time (HH:MM:SS)\n//       // formattedStartTime = startDate.format('HH:mm:ss');\n//       form.startTime = startDate.format('HH:mm:ss'); // Use the desired format\n//       console.log('SUBMIT start time formatted in dayjs: ' + form.startTime);\n//\n//     // 3. Duration\n//       console.log('SUBMIT duration minute in: ' + form.durationMinute);\n//       console.log('SUBMIT duration hour in: ' + form.durationHour);\n//\n//     // Correctly calculating total duration in minutes\n//     let totalDurationMinutes = (parseInt(form.durationHour) * 60) + parseInt(form.durationMinute);\n//     console.log('SUBMIT formatted duration in minutes: ' + totalDurationMinutes);\n//\n//       // // Calculate total duration in minutes\n//       formattedDuration = (Number(form.durationHour) * 60) + Number(form.durationMinute);\n//       form.duration = formattedDuration\n//\n//\n//       // console.log('SUBMIT formatted duration in minutes: ' + form.duration);\n//\n//     // 4. End date, add end time (end date with HH:MM:SS = start time + duration)\n//     //   // Ensure the initial timestamp is correctly parsed as a Day.js date object\n//     //       if (!selectedEndDate) {\n//     //         form.endDate = startDate.add(totalDurationMinutes, 'minutes')\n//     //         console.log('no selected end date')\n//     //       } else {\n//     //         form.endDate = dayjs(selectedEndDate.value).add(totalDurationMinutes, 'minutes')\n//     //         console.log('Selected end date!')\n//     //       }\n//\n//     // Log the original values to ensure they're what you expect\n//     // console.log('Original duration hour:', form.durationHour);\n//     // console.log('Original duration minute:', form.durationMinute);\n//     //       const durationHours = parseInt(form.durationHour, 10);\n//     //       const durationMinutes = parseInt(form.durationMinute, 10);\n//     // // Log the parsed values to confirm they've been correctly interpreted\n//     // console.log('Parsed duration hour (as integer):', durationHours);\n//     // console.log('Parsed duration minute (as integer):', durationMinutes);\n//     //\n//     //       form.endDate = dayjs(form.endDate)\n//     //           .add(durationHours, 'hours')\n//     //           .add(durationMinutes, 'minutes')\n//     //           .format()\n//     //       // form.duration = totalDurationMinutes\n//     //       console.log('SUBMIT end date in: ' + form.endDate);\n//\n//           //\n//           // let endDate = dayjs(form.endDate).hour(hour).minute(form.startTime.minute);\n//           // console.log('SUBMIT end date formatted in dayjs: ' + endDate);\n//\n//       // Convert hour and minute from form.startTime to numbers\n//       //     let newHour = Number(form.startTime.hour) % 12;\n//       //     if (form.startTime.meridian === 'PM') newHour += 12; // Adjust for 24-hour format if PM\n//\n//       // Ensure duration hours and minutes are treated as numbers\n//       //     let durationHours = Number(form.durationHour);\n//       //     let durationMinutes = Number(form.durationMinute);\n//\n//       // Adjust the endDate by setting the correct hour and minute, then adding the duration\n//       //     let endDate = dayjs(endDate)\n//       //         .add(totalDurationMinutes, 'minutes')\n//     //\n//     // endDate.value = dayjs(endDate.value)\n//     //     .add(totalDurationMinutes, 'minutes')\n//     //\n//     // console.log('NEW end date WITH MINUTES ADDED: ' + endDate.value);\n//\n//               // .add(durationMinutes, 'minute');\n//\n//       // If you need to adjust for a specific timezone without changing the local time\n//       // Note: The true flag in tz() might not be necessary depending on your exact needs for timezone handling\n//     // Adding duration directly to startDate to avoid confusion and ensure accuracy\n//\n//     //\n//     // form.endDate = dayjs(endDate.value).format();\n//     //       console.log('NEW ADJUSTED == form.endDate: ' + form.endDate);\n//\n//\n//     // 5. Days of week\n//\n//\n//\n//   }\n//\n//   // Prepare the payload for the API based on the schedule type\n//   const handleAddShow = async () => {\n//     const payload = {\n//       contentType: 'show',\n//       contentId: props.show.id,\n//       scheduleType: form.scheduleType,\n//       startTime: form.startTime,\n//       duration: form.duration,\n//       // startDate: form.startDate,\n//       startDate: form.startDate,\n//       endDate: form.endDate,\n//       daysOfWeek: form.scheduleType === 'recurring' ? form.daysOfWeek : [],\n//       timezone: userStore.canadianTimezone,\n//       // Include other relevant form data here\n//     }\n//\n//     console.log('==================================================')\n//     console.log('PAYLOAD: Content Type: ' + payload.contentType)\n//     console.log('PAYLOAD: Content ID: ' + payload.contentId)\n//     console.log('PAYLOAD: Formatted Start Date: ' + payload.startDate)\n//     console.log('PAYLOAD: Formatted Start Time: ' + payload.startTime)\n//     console.log('PAYLOAD: Formatted Duration in minutes: ' + payload.duration)\n//     console.log('PAYLOAD: Formatted End Date: ' + payload.endDate)\n//     console.log('PAYLOAD: Formatted Days of Week: ' + payload.daysOfWeek)\n//     console.log('PAYLOAD: User Timezone: ' + userStore.canadianTimezone)\n//\n//     // Adjust the start and end time based on the selected time and meridian\n//     // const adjustedStartTime = dayjs(`${form.startDate} ${payload.startTime}`, 'YYYY-MM-DD hh:mm A').toISOString()\n//     // const durationInMinutes = parseInt(form.durationHour) * 60 + parseInt(form.durationMinute)\n//     // const adjustedEndTime = dayjs(adjustedStartTime).add(durationInMinutes, 'minute').toISOString()\n//\n//     try {\n//       // Replace '/api/schedule' with your actual API endpoint\n//       const response = await axios.post('/api/schedule/addToSchedule', payload);\n//\n//       // Handle success - process response.data as needed\n//       console.log('Success:', response.data);\n//       goToStep(6);\n//       startConfetti();\n//       scheduleStore.savingToSchedule = true\n//     } catch (error) {\n//       // Handle errors\n//       console.error('Error submitting form:', error);\n//       goToStep(6); // Navigate to the error display step\n//       // Populate `form.errors` with the error details for display\n//       // Axios wraps the response error in `error.response`\n//       if (error.response && error.response.data) {\n//         form.errors.value = error.response.data;\n//       } else {\n//         form.errors.value = error.message || 'An unknown error occurred';\n//       }\n//     }\n//   }\n// }\n\nfunction closeModal() {\n  document.getElementById('addShowToScheduleModal').close()\n  // Reset the form fields to their initial values\n  resetForm()\n  // Clear all validation errors\n  clearErrors()\n  stopConfetti()\n  currentStep.value = 0\n  // router.visit(`/shows/${props.show.slug}/manage`)\n}\n\nfunction closeConfirmAddShowModal() {\n  document.getElementById('confirmAddShowModal').close()\n}\n\nconst closeModalAndReset = () => {\n  currentStep.value = 0\n  closeModal()\n  // router.visit(`/shows/${props.show.slug}/manage`)\n}\n\n// Watcher for currentStep to display Confetti\n// watch(currentStep, (newVal) => {\n//   if (newVal === 6) {\n//     startConfetti()\n//   }\n// })\n\n// Initialize selectedTimezone with the current value from userStore\nconst selectedTimezone = ref(userStore.canadianTimezone)\n\n// Watch for changes in userStore's timezone and update selectedTimezone accordingly\nwatch(() => userStore.canadianTimezone, (newTimezone) => {\n  selectedTimezone.value = newTimezone\n  // dayjs.tz.setDefault(userStore.timezone);\n})\n\n\n// Function to handle the keydown event\nconst handleKeydown = (event) => {\n  if (event.key === 'Escape') {\n    console.log('ESC pressed, modal is open')\n    stopConfetti()\n    currentStep.value = 0\n    router.redirect(`/shows/${props.show.slug}/manage`)\n\n  }\n}\n\nonMounted(() => {\n  document.addEventListener('keydown', handleKeydown)\n})\n\nonUnmounted(() => {\n  document.removeEventListener('keydown', handleKeydown)\n})\n\n// onMounted(async () => {\n//   timezones.value = await getTimeZones(); // Fetch the list of timezones\n// });\n\nfunction updateTimezone() {\n  // Update the timezone in your store\n  userStore.setUserTimezone(selectedTimezone.value)\n  // Optionally, send the updated timezone to your backend here\n}\n\n</script>\n","import script from \"./AddShowToSchedule.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AddShowToSchedule.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./ChangeShowSchedule.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChangeShowSchedule.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <dialog id=\"changeScheduleModal\" class=\"modal\">\n    <div class=\"modal-box w-11/12 max-w-5xl text-black bg-white dark:bg-gray-800 dark:text-white\">\n\n      <div class=\"flex flex-row justify-center text-center\">\n        <div>\n          <h2 class=\"font-bold text-xl\">\n            Change Show Schedule\n          </h2>\n          <div class=\"my-6 font-medium\">\n            We are developing this feature. Check back soon.\n            <!--            <slot name=\"form-description\">Default Form Description</slot>-->\n          </div>\n          <div class=\"mb-6\">\n            For now you can <button @click.prevent=\"removeFromSchedule\" class=\"text-blue-700 hover:text-blue-500\">remove the show</button> from the schedule and re-add it again.\n          </div>\n          <div class=\"mt-4 mb-2 text-left\"></div>\n          <StepSixCongratulations/>\n          <div v-if=\"errors\" class=\"mb-6 text-red-700\">\n            <div>{{ errors }}</div>\n            <div>Please let Travis know.</div>\n          </div>\n          <div class=\"flex flex-row justify-center\">\n            <button @click.prevent=\"closeModal\" class=\"btn\">Okay</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </dialog>\n</template>\n\n<script setup>\nimport { onMounted, ref } from 'vue'\nimport { usePage } from '@inertiajs/vue3'\nimport { useShowStore } from '@/Stores/ShowStore'\nimport StepSixCongratulations from '@/Components/Global/Schedule/StepSixCongratulations.vue'\n\nconst showStore = useShowStore()\n\nconst page = usePage().props\n\nlet props = defineProps({\n  show: Object\n})\n\nconst errors = ref()\n\nconst closeModal = () => {\n  document.getElementById('changeScheduleModal').close()\n}\n\nconst removeFromSchedule = async () => {\n  await showStore.removeFromSchedule('App\\\\Models\\\\Show', props.show.id)\n  closeModal()\n};\n\n\n</script>\n","import script from \"./ShowManageHeader.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ShowManageHeader.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n      <div class=\"flex flex-row items-start\">\n        <!--                <img :src=\"'/storage/images/' + show.poster\" alt=\"\" class=\"w-20 mr-2 justify-left\">-->\n        <Link :href=\"`/shows/${show.slug}`\" class=\"uppercase\">\n          <div class=\"h-80\">\n            <SingleImage :image=\"show.image\" alt=\"'show poster'\" class=\"w-60 object-contain mr-2 justify-left\"/>\n          </div>\n        </Link>\n        <div class=\"flex flex-col pl-4\">\n          <Link :href=\"`/shows/${show.slug}`\" class=\"uppercase\"><span class=\"hover:text-blue-600 mb-3 inline-flex items-center text-3xl font-semibold relative\">{{ show.name }}</span></Link>\n            <div><span class=\"text-xs  font-semibold uppercase\">Team: </span>\n              <Link :href=\"`/teams/${team.slug}/manage`\" class=\"text-blue-500 hover:text-blue-600 ml-2 uppercase font-bold\"> {{\n                  team.name\n                }}\n              </Link>\n            </div>\n            <div><span class=\"text-xs font-semibold mr-2 uppercase\">Show Runner: </span><span\n                class=\"font-medium font-bold\"> {{ show.showRunner.name }} </span></div>\n            <div class=\"pt-4\"><span class=\"text-xs font-semibold mr-2 uppercase\">Category: </span><span\n                class=\"font-medium text-orange-800\"> {{ show?.category?.name }} </span></div>\n            <div><span class=\"text-xs font-semibold mr-2 uppercase\">Sub-category: </span><span\n                class=\"font-medium text-orange-800\"> {{ show?.subCategory?.name }} </span></div>\n\n          <div class=\"mt-12 w-full h-full flex flex-col\">\n            <div class=\"flex-grow\"></div>\n            <div v-if=\"showStore.isScheduled && showStore.scheduleDetails\">\n              <div v-if=\"nextBroadcastDate\">\n                The next broadcast date is <strong>{{ userStore.formatDateTimeFromUtcToUserTimezone(nextBroadcastDate) }}&nbsp;{{ userStore.timezoneAbbreviation }}</strong>. <ConvertDateTimeToTimeAgo :dateTime=\"nextBroadcastDate\" :class=\"`text-yellow-500`\" />\n              </div>\n              <div v-else-if=\"isFutureBroadcast\">\n                The next broadcast date is <strong>{{ userStore.formatDateTimeFromUtcToUserTimezone(showStore.scheduleDetails.startTime) }}&nbsp;{{ userStore.timezoneAbbreviation }}</strong>. <ConvertDateTimeToTimeAgo :dateTime=\"showStore.scheduleDetails.startTime\" :class=\"`text-yellow-500`\" />\n              </div>\n              <div>\n                Your show is currently scheduled as <strong>{{ showStore.scheduleDetails.type }}</strong>.\n                <div v-if=\"showStore.scheduleDetails.type === 'one-time'\">\n                  It will start on <strong>{{ userStore.formatDateTimeFromUtcToUserTimezone(showStore.scheduleDetails.startTime) }}&nbsp;{{ userStore.timezoneAbbreviation }}</strong> and last for <strong>{{ showStore.scheduleDetails.durationMinutes }} minutes</strong>.\n                </div>\n                <div v-else>\n                  <template v-if=\"Array.isArray(showStore.scheduleDetails.daysOfWeek)\">\n                    It recurs on <strong>{{ showStore.scheduleDetails.daysOfWeek.join(', ') }}</strong>\n                  </template>\n                  <template v-else>\n                    It recurs on <strong>{{ showStore.scheduleDetails.daysOfWeek }}</strong>\n                  </template>\n                  starting at <strong>{{ userStore.formatTimeFromDateInUserTimezone(showStore.scheduleDetails.startTime) }}&nbsp;{{ userStore.timezoneAbbreviation }}</strong> with each occurrence lasting <strong>{{ showStore.scheduleDetails.durationMinutes }} minutes</strong>.\n                </div>\n              </div>\n            </div>\n\n            <div v-if=\"can.editShow\">\n            <button v-if=\"!showStore.isScheduled\" @click=\"openAddShowToScheduleModal\"\n                    :disabled=\"showStore.loadingUpdatingStatus || showStore.isUpdatingSchedule || showStore.isSaving\"\n                    class=\"btn btn-lg bg-green-500 hover:bg-green-700 border-green-500 text-white drop-shadow-lg py-2 flex flex-col disabled:text-white\">\n              <span v-if=\"showStore.loadingUpdatingStatus\" class=\"loading loading-dots text-white\"></span>\n              <span v-else-if=\"!showStore.isUpdatingSchedule && !showStore.isSaving\" class=\"\">Add Show To Schedule</span>\n              <span v-else>The schedule is being updated...</span>\n            </button>\n            <button v-if=\"showStore.isScheduled\" @click=\"openChangeScheduleModal\"\n                    :disabled=\"showStore.loadingUpdatingStatus || showStore.isUpdatingSchedule || showStore.isSaving\"\n                    class=\"btn btn-lg bg-indigo-500 hover:bg-indigo-700 border-indigo-500 text-white drop-shadow-lg py-2 flex flex-col\">\n              <span v-if=\"showStore.loadingUpdatingStatus\" class=\"loading loading-dots text-white\"></span>\n              <span v-else-if=\"!showStore.isUpdatingSchedule && !showStore.isSaving\">Change Schedule</span>\n              <span v-else>The schedule is being updated...</span>\n            </button>\n              <div v-if=\"showStore.isUpdatingSchedule\" class=\"mt-4 text-red-600\">\n                <span>{{ showStore.updatedBy }} is currently updating the schedule...</span>\n              </div>\n            </div>\n          </div>\n        </div>\n\n      </div>\n\n    <AddShowToSchedule :show=\"show\">\n      <template #form-title>\n        Add your show to the schedule\n      </template>\n      <template #form-description>\n        NOTE: You may want to schedule episodes individually.\n      </template>\n      <template #button-label>\n        Add\n      </template>\n    </AddShowToSchedule>\n\n    <ChangeSchedule :show=\"show\"/>\n\n  </div>\n</template>\n\n<script setup>\nimport { computed, onBeforeUnmount, onMounted, ref } from 'vue'\nimport { usePage } from '@inertiajs/vue3'\nimport { useShowStore } from \"@/Stores/ShowStore\"\nimport { useUserStore } from \"@/Stores/UserStore\"\nimport { useNotificationStore } from \"@/Stores/NotificationStore\"\nimport SingleImage from \"@/Components/Global/Multimedia/SingleImage\"\nimport Button from '@/Jetstream/Button.vue'\nimport AddShowToSchedule from '@/Components/Global/Schedule/AddShowToSchedule.vue'\nimport ChangeSchedule from '@/Components/Global/Schedule/ChangeShowSchedule.vue'\nimport dayjs from 'dayjs'\nimport utc from 'dayjs/plugin/utc';\nimport timezone from 'dayjs/plugin/timezone';\nimport ConvertDateTimeToTimeAgo from '@/Components/Global/DateTime/ConvertDateTimeToTimeAgo.vue'\n\ndayjs.extend(utc);\ndayjs.extend(timezone);\n\nconst showStore = useShowStore()\nconst userStore = useUserStore()\nconst notificationStore = useNotificationStore()\n\nconst page = usePage().props\n\nconst props = defineProps({\n  show: Object,\n  team: Object,\n  can: Object,\n})\n\nconst errors = ref();\n\nconst nextBroadcastDate = computed(() => {\n  console.log('showStore.scheduleDetails:', showStore.scheduleDetails);\n\n  const now = dayjs();\n  if (showStore.scheduleDetails && showStore.scheduleDetails.broadcastDates) {\n    const broadcastDatesObj = JSON.parse(showStore.scheduleDetails.broadcastDates);\n    console.log('Parsed broadcastDates:', broadcastDatesObj);\n\n    if (Array.isArray(broadcastDatesObj.broadcastDates)) {\n      const upcomingDates = broadcastDatesObj.broadcastDates\n          .map(dateStr => {\n            const date = dayjs.tz(dateStr, broadcastDatesObj.timezone);\n            console.log('date:', date.toString());\n            return date;\n          })\n          .filter(date => date.isAfter(now))\n          .sort((a, b) => a - b);\n\n      console.log('upcomingDates:', upcomingDates);\n      return upcomingDates.length > 0 ? upcomingDates[0].toISOString() : null;\n    }\n  }\n  return null;\n});\n\nconst isFutureBroadcast = computed(() => {\n  return dayjs(showStore.scheduleDetails.startTime).isAfter(dayjs());\n});\n\n// Function to set up MutationObserver for a modal\nconst watchModal = (modalId, onClose) => {\n  const modalElement = document.getElementById(modalId);\n  if (!modalElement) return;\n\n  const observer = new MutationObserver((mutationsList) => {\n    for (let mutation of mutationsList) {\n      if (mutation.type === 'attributes' && mutation.attributeName === 'open') {\n        if (!modalElement.hasAttribute('open')) {\n          onClose();\n        }\n      }\n    }\n  });\n\n  observer.observe(modalElement, { attributes: true });\n\n  return observer;\n};\n\nconst openAddShowToScheduleModal = async () => {\n  try {\n    await showStore.setUpdatingStatus(true, page.value.user.name, props.show.slug);\n    document.getElementById('addShowToScheduleModal').showModal();\n    notificationStore.setToastNotification('Show meta loaded.', 'info')\n  } catch (error) {\n    errors.value = 'Failed to set saving state. Please try again.';\n    notificationStore.setToastNotification(errors.value, 'error', 10000)\n  }\n};\n\nconst openChangeScheduleModal = async () => {\n  try {\n    await showStore.setUpdatingStatus(true, page.value.user.name, props.show.slug);\n    document.getElementById('changeScheduleModal').showModal();\n    notificationStore.setToastNotification('Show meta loaded.', 'info')\n  } catch (error) {\n    errors.value = 'Failed to set saving state. Please try again.';\n    notificationStore.setToastNotification(errors.value, 'error', 10000)\n  }\n};\n\n// Declare observers so they can be cleaned up on unmount\nlet addShowToScheduleObserver;\nlet changeScheduleObserver;\n\nonMounted(async () => {\n  addShowToScheduleObserver = watchModal('addShowToScheduleModal', async () => {\n    await showStore.setUpdatingStatus(false, page.value.user.name, props.show.slug);\n  });\n\n  changeScheduleObserver = watchModal('changeScheduleModal', async () => {\n    await showStore.setUpdatingStatus(false, page.value.user.name, props.show.slug);\n  });\n\n  // Check the flag in meta on page load\n  console.log('show.meta:', props.show.meta);\n\n  const meta = props.show.meta ? JSON.parse(props.show.meta) : {};\n  console.log('Parsed meta:', meta);\n  console.log('isUpdatingSchedule:', meta.isUpdatingSchedule);\n  console.log('updatedBy:', meta.updatedBy);\n  console.log('current user:', page.value.user.name);\n\n  if (meta.isUpdatingSchedule && meta.updatedBy === page.value.user.name) {\n    console.log('Resetting isUpdatingSchedule and updatedBy');\n    await showStore.setUpdatingStatus(false, page.value.user.name, props.show.slug);\n  }\n});\n\n// Store observers to disconnect them later\nonBeforeUnmount(() => {\n  if (addShowToScheduleObserver) addShowToScheduleObserver.disconnect();\n  if (changeScheduleObserver) changeScheduleObserver.disconnect();\n});\n</script>\n","import script from \"./ManageShowEpisodesStatuses.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ManageShowEpisodesStatuses.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <div>\n        <div v-if=\"!userStore.isAdmin\">\n            <button v-if=\"teamStore.can.editShow && props.episodeStatusId !== 9 && props.episodeStatusId !== 10\" :class=\"episodeStatusClass\" @click=\"openEpisodeStatuses()\">{{ episodeStatus }}</button>\n            <div v-if=\"!teamStore.can.editShow || props.episodeStatusId === 9 || props.episodeStatusId === 10\" class=\"cursor-not-allowed\" :class=\"episodeStatusClass\">{{ episodeStatus }}</div>\n        </div>\n        <div v-else>\n            <button :class=\"episodeStatusClass\" @click=\"openEpisodeStatuses()\">{{ episodeStatus }}</button>\n        </div>\n\n        <dialog :id=\"dialogId\" class=\"modal\">\n            <div class=\"modal-box h-fit bg-white text-black\">\n                <div v-if=\"props.episodeStatusId === 7\">\n                    <h3 class=\"text-center mb-2\">Episode is Published</h3>\n                    <p class=\"text-center mb-2\">\n                        Please contact the notTV Team if you need to change the episode status. This is because the episode is already promoted and distributed.\n                    </p>\n                    <p class=\"text-center\">\n                        Email <a class=\"text-blue-600 hover:text-blue-500\" :href=\"`mailto:hello@not.tv?subject=Need%20Help%20With%20Published%20Episode%20ID:%20${props.episodeUlid}&body=Episode%20ID:%20${props.episodeUlid}%0AEpisode%20Name:%20${props.episodeName}%0AShow%20Name:%20${props.showName}`\">hello@not.tv</a> for assistance\n                    </p>\n                    <p v-if=\"userStore.isAdmin\" class=\"text-center mt-2\">\n                        <button @click=\"openAdminChangeStatusModal()\" class=\"btn btn-wide my-2 text-white bg-orange-600 hover:bg-orange-500\">Change Status (admin only)</button>\n                    </p>\n                </div>\n                <div v-else>\n                    <div v-if=\"!setDateTime\">\n                        <h2 class=\"text-center mb-2\">Change the Episode Status:</h2>\n                        <div v-for=\"(status, key)  in episodeStatuses\" :key=\"key\" class=\"text-center\">\n                            <div class=\"btn btn-wide my-1\" @click=\"checkEpisodeStatus(episodeId, status.id)\">{{ status.name }}</div>\n                        </div>\n                    </div>\n                    <div v-if=\"setDateTime\">\n                        <h3 class=\"text-center mb-2\">Set the Scheduled Release Date and Time:</h3>\n                        <div class=\"text-center\">\n                            <DateTimePicker :date=\"convertedDate\" @date-time-selected=\"handleScheduledDateTime\" />\n                            <button class=\"btn my-2\" @click=\"changeEpisodeStatus(episodeId, 6)\">Schedule it!</button>\n                            <button class=\"btn ml-2 my-2\" @click=\"cancelScheduleEpisode\">Cancel</button>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n\n            <form method=\"dialog\" class=\"modal-backdrop\">\n                <button>close</button>\n            </form>\n        </dialog>\n\n        <dialog :id=\"`confirmPublishModal.${episodeId}`\" class=\"modal\">\n            <div class=\"modal-box\">\n                <h3 class=\"text-center font-bold text-lg\">Are you sure you want to publish?</h3>\n                <p class=\"text-center py-4\">This action cannot be undone. When you publish an episode it registers it on the blockchain and promotes it on the network.</p>\n                <div class=\"modal-action\">\n                    <form method=\"dialog\">\n                            <button @click=\"changeEpisodeStatus(episodeId, 7)\" class=\"btn text-white bg-green-600 hover:bg-green-500 mr-2\">Yes! Publish Now!</button>\n                            <button class=\"btn text-white bg-orange-600 hover:bg-orange-500\">No, cancel</button>\n                    </form>\n                </div>\n            </div>\n        </dialog>\n\n        <dialog :id=\"`adminChangeStatusModal.${episodeId}`\" class=\"modal\">\n            <div class=\"modal-box\">\n                <h3 class=\"text-center font-bold text-lg\">Change Status (Admin Only)</h3>\n                <p class=\"text-center py-4\">This is the Admin Override to change the episode status. If the episode is already published and you un-publish it the episode will be reverted to \"Review\" and become inaccessible to the public.</p>\n                <div class=\"w-full flex justify-center mt-2 pb-4\">\n                    <form method=\"dialog\">\n                        <button @click=\"changeEpisodeStatus(episodeId, 5)\" class=\"btn text-white bg-blue-600 hover:bg-blue-500 mr-2\">Un-publish</button>\n                        <button @click=\"changeEpisodeStatus(episodeId, 9)\" class=\"btn text-white bg-orange-600 hover:bg-orange-500 mr-2\">Freeze</button>\n                        <button @click=\"changeEpisodeStatus(episodeId, 10)\" class=\"btn text-white bg-red-600 hover:bg-red-500\">Restrict</button>\n                    </form>\n                </div>\n                <p class=\"text-center py-4\"><span class=\"font-semibold\">Please Note:</span> Un-publishing will have an adverse affect on the promotional links already used.</p>\n                <p class=\"text-center py-4\"><span class=\"italic\">Press ESC to close or <button @click=\"closeModals\" class=\"text-blue-600 hover:text-blue-500\">click here</button> to close.</span></p>\n            </div>\n        </dialog>\n\n    </div>\n\n</template>\n\n<script setup>\nimport { router } from '@inertiajs/vue3'\nimport { computed, ref, watch, watchEffect } from 'vue'\nimport { format } from \"date-fns\"\nimport { useTeamStore } from \"@/Stores/TeamStore\"\nimport { useShowStore } from \"@/Stores/ShowStore\"\nimport { useUserStore } from \"@/Stores/UserStore\"\nimport DateTimePicker from \"@/Components/Global/Calendar/DateTimePicker\"\nimport DateTimePickerSelect from \"@/Components/Global/Calendar/DateTimePickerSelect\"\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport timezone from 'dayjs/plugin/timezone';\nimport utc from 'dayjs/plugin/utc'; // Required for timezone support\n\nconst teamStore = useTeamStore()\nconst showStore = useShowStore()\nconst userStore = useUserStore()\n\n// Extend Day.js with the plugins\ndayjs.extend(relativeTime);\ndayjs.extend(timezone);\ndayjs.extend(utc);\n\nlet props = defineProps({\n    episodeId: '',\n    episodeUlid: '',\n    episodeName: '',\n    episodeSlug: '',\n    episodeStatus: '',\n    episodeStatusId: '',\n    episodeStatuses: Object,\n    showName: '',\n    showSlug: '',\n    scheduledDateTime: String,\n})\n\n// Ref for reactive timezone\nconst userTimezone = ref(userStore.timezone);\n\nconst convertedDate = ref('');\nwatchEffect(() => {\n  if (userStore.timezone) {\n    convertedDate.value = dayjs.utc(props.scheduledDateTime).tz(userStore.timezone).format();\n  }\n})\n\nconst convertTimeToUserTimezone = (date, timezone) => {\n  // Convert the date to the provided timezone using Day.js\n  return dayjs.tz(date, timezone);\n};\n\nconst errorMessage = ref('');\nconst dialogId = props.episodeId+'episodeStatuses'\n\nlet scheduledDateTime = ref(null)\nlet setDateTime = ref(false)\n\nfunction openEpisodeStatuses() {\n    document.getElementById(dialogId).showModal()\n}\n\n// function checkEpisodeStatus(episodeId, newStatusId) {\n//     setDateTime = true;\n//     if (newStatusId === 6 && scheduledDateTime === null) {\n//         // open a model to set scheduled dateTime\n//\n//         router.reload()\n//     }\n// }\n\nconst checkEpisodeStatus = (episodeId, statusId) => {\n    if (statusId === 6) {\n        // update the modal to set scheduled dateTime\n        setDateTime.value = !setDateTime.value;\n    } else if (statusId === 7) {\n        // open modal to confirm they want to publish.\n        document.getElementById('confirmPublishModal.' + props.episodeId).showModal()\n    }\n    else if (statusId !== 6) {\n        changeEpisodeStatus(episodeId, statusId)\n    }\n};\n\nconst cancelScheduleEpisode = () => {\n    setDateTime.value = !setDateTime.value;\n};\n\nconst openAdminChangeStatusModal = () => {\n    document.getElementById('adminChangeStatusModal.'+props.episodeId).showModal()\n}\n\nconst handleScheduledDateTime = (newDate) => {\n    selectedScheduledDateTime.value = newDate;\n    scheduledDateTime = newDate.date;\n    console.log(scheduledDateTime)\n    updateScheduledDateTime()\n    console.log(formattedScheduledDateTime)\n}\n\nconsole.log('we already have the user timezone: ' + userStore.timezone)\n\n// const getUserTimezone = () => {\n//     // Use the Intl object to get the user's timezone\n//     userTimezone.value = Intl.DateTimeFormat().resolvedOptions().timeZone;\n// };\n\nlet selectedScheduledDateTime = ref('');\nlet formattedScheduledDateTime = ref(''); // This will display the formatted date and time\n\nconst convertToTimeZone = (dateTime, userTimezone) => {\n    return format(dateTime, 'yyyy-MM-dd HH:mm:ssXXX', { userTimezone });\n};\n\nconst updateScheduledDateTime = () => {\n    if (selectedScheduledDateTime.value) {\n        // Convert the selected date and time to the desired time zone\n        // const timeZone = 'UTC'; // Change this to your desired time zone\n        formattedScheduledDateTime.value = convertToTimeZone(\n            new Date(scheduledDateTime),\n            userTimezone\n        );\n    } else {\n        formattedScheduledDateTime.value = '';\n    }\n};\n\nasync function changeEpisodeStatus(episodeId, statusId) {\n    try {\n        const response = await axios.post('/shows/episode/changeEpisodeStatus', {\n            episode_id: episodeId,\n            new_status_id: statusId,\n            scheduled_release_dateTime: formattedScheduledDateTime.value\n        });\n        // Handle success response as needed\n        // ...\n        // Check if the response contains an \"alert\" message\n        if (response.data.alert) {\n            // Display the alert message\n            alert(response.data.alert);\n        }\n    } catch (error) {\n        if (error.response) {\n            showStore.errorMessage = error.response.data.error\n        } else {\n            // console.error(error);\n        }\n    }\n    // return response\n    document.getElementById(dialogId).close()\n    router.reload()\n}\n\nconst closeModals = () => {\n    document.getElementById(dialogId).close()\n    document.getElementById('confirmPublishModal.'+props.episodeId).close()\n    document.getElementById('adminChangeStatusModal.'+props.episodeId).close()\n    router.reload()\n}\n\nconst episodeStatusClass = computed(() => ({\n    'btn m-1 w-fit font-semibold text-xl text-orange-400': props.episodeStatusId===1,\n    'btn m-1 w-fit text-xl text-green-400': props.episodeStatusId===2,\n    'btn m-1 w-fit font-semibold text-xl text-green-600': props.episodeStatusId===3,\n    'btn m-1 w-fit font-bold text-xl text-green-600': props.episodeStatusId===4,\n    'btn m-1 w-fit font-semibold text-xl text-purple-700': props.episodeStatusId===5,\n    'btn m-1 w-fit font-italic text-xl text-pink-500': props.episodeStatusId===6,\n    'btn m-1 w-fit font-bold text-xl light:text-black dark:text-white': props.episodeStatusId===7,\n    'btn m-1 w-fit font-medium text-xl text-gray-500': props.episodeStatusId===8,\n    'btn m-1 w-fit font-semibold font-italic text-xl text-red-700': props.episodeStatusId===9,\n    'btn m-1 w-fit font-bold text-xl text-red-800': props.episodeStatusId===10,\n}))\n\n</script>\n","import script from \"./ManageEpisodeEditNote.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ManageEpisodeEditNote.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n    <form @submit.prevent=\"\">\n      <input\n          class=\"bg-white text-black p-1 w-3/4\"\n          placeholder=\"Write a note...\"\n          type=\"text\"\n          ref=\"episodeNote\"\n          v-model=\"form.note\"\n          @keyup.enter=\"saveNote\"\n          @focusout=\"closeNote\">\n    </form>\n  </div>\n\n</template>\n\n<script setup>\nimport { onMounted, ref } from \"vue\"\nimport note from \"lodash/seq\"\nimport { useShowStore } from \"@/Stores/ShowStore\"\nimport { useForm } from \"@inertiajs/vue3\"\n\nconst showStore = useShowStore()\n\nshowStore.saveNoteProcessing = false\n\nlet props = defineProps({\n  episode: Object,\n});\n\nlet form = useForm({\n  note: '',\n});\nform.note = props.episode.notes;\nconst emit = defineEmits(['saveNoteProcessing'])\nconst episodeNote = ref(null);\n\n// Focus the input element when the component is mounted\nonMounted(() => {\n  episodeNote.value.focus();\n});\n\nfunction closeNote() {\n  if (form.note === props.episode.notes) {\n    showStore.noteEdit = 0;\n  }\n  saveNote()\n}\n\nfunction saveNote() {\n\n  // axios.post('/shows/notes', {\n  //     notes: form.note,\n  //     showId: props.show.id,\n  // })\n  //     teamStore.noteEdit = 0;\n  //     updateNote++;\n  //     props.show.note = 'update';\n\n// Why does this not work? We are not\n// getting a response.\n//\n  showStore.saveNoteProcessing = true;\n  showStore.note = form.note;\n  emit('saveNoteProcessing');\n  axios.post('/shows/episode/notes', {\n    notes: form.note,\n    episodeId: props.episode.id,\n  }).then(response => {\n    showStore.noteEdit = 0;\n    console.log('note saved');\n    showStore.saveNoteProcessing = false;\n  })\n      .catch(error => {\n        console.log(error);\n      })\n}\n\n</script>\n","import script from \"./ManageShowEpisode.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ManageShowEpisode.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <tr v-if=\"showStore.episodeIsBeingDeleted !== episode.id\" class=\"bg-yellow-100\">\n    <td class=\"px-6 py-4 text-sm\">\n\n      <!-- If there is no episode number set by the user\n             the episode number defaults to the episode id           -->\n      <div v-if=\"!episode.episodeNumber\">{{ episode.id }}</div>\n      <div v-if=\"episode.episodeNumber\">{{ episode.episodeNumber }}</div>\n\n    </td>\n    <td class=\"text-xl font-medium align-center my-auto justify-center gap-x-4 px-6 py-4 uppercase h-full\">\n      <!-- Example image and link setup, uncomment or adjust as needed -->\n<!--       <img :src=\"`/storage/images/${episode.poster}`\" alt=\"\" class=\"rounded-xl w-10\">-->\n      <div @click=\"router.visit(`/shows/${showSlug}/episode/${episode.slug}/manage`)\" class=\"flex flex-row break-words gap-x-2 gap-y-2 hover:cursor-pointer\">\n        <SingleImage :image=\"episode.image\" :alt=\"episode.name\" :class=\"`rounded-xl min-w-16 min-h-16 max-w-16 max-h-16`\" />\n        <span class=\"hover:text-blue-600 font-semibold dark:text-blue-400 dark:hover:text-blue-200 text-left\">\n          {{ episode.name }}\n        </span>\n      </div>\n    </td>\n\n\n    <!--        <td class=\"text-gray-500 px-6 py-4 text-sm\">-->\n    <!--            {{episode.notes}}-->\n    <!--        </td>-->\n    <td class=\"light:text-gray-600 dark:text-gray-100 px-6 py-4 text-sm w-full min-w-[16rem]\">\n      <span v-if=\"!episode.notes\" v-show=\"showStore.noteEdit !== props.episode.id\" class=\"italic\" @click=\"editNote\">Click here to add/edit a note.</span>\n      <span v-if=\"episode.notes\" v-show=\"showStore.noteEdit !== props.episode.id\" :key=\"componentKey\" @click=\"editNote\">{{\n          episode.notes\n        }}</span>\n      <div v-if=\"showStore.noteEdit === props.episode.id\">\n\n        <EpisodeNoteEdit :episode=\"props.episode\" v-on:saveNoteProcessing=\"reloadNote\"/>\n        <div v-if=\"showStore.saveNoteProcessing\">Saving...</div>\n      </div>\n\n    </td>\n    <td class=\"px-6 py-4 text-right\">\n      <div class=\"dropdown dropdown-left\">\n        <!--                <button tabindex=\"0\" :class=\"episodeStatus\" @click=\"openEpisodeStatuses\">{{ episode.episodeStatus }}</button>-->\n        <ShowEpisodeStatuses :episodeStatus=\"props.episode.episodeStatus\"\n                             :episodeStatusId=\"props.episode.episodeStatusId\"\n                             :episodeStatuses=\"props.episodeStatuses\"\n                             :episodeId=\"props.episode.id\"\n                             :episodeUlid=\"props.episode.ulid\"\n                             :episodeName=\"props.episode.name\"\n                             :episodeSlug=\"props.episode.slug\"\n                             :showSlug=\"props.showSlug\"\n                             :showName=\"props.showName\"\n                             :scheduledDateTime=\"props.episode.scheduledReleaseDateTime\"/>\n      </div>\n      <div v-if=\"episode.episodeStatusId === 6\">\n        Scheduled for: <br />\n        {{ scheduledReleaseDateTime }}\n      </div>\n      <div v-if=\"episode.episodeStatusId === 7\">\n        Released on: <br/>\n        {{ releaseDateTime }}\n      </div>\n\n    </td>\n    <td>\n      <div class=\"flex flex-row justify-start mr-2\">\n        <div>\n          <button\n              v-if=\"teamStore.can.editShow\"\n              @click=\"appSettingStore.btnRedirect(`/shows/${showSlug}/episode/${episode.slug}/edit`)\"\n              class=\"px-4 py-2 text-white font-semibold bg-blue-500 hover:bg-blue-600 rounded-lg mr-2\"\n          >Edit\n          </button>\n        </div>\n        <button\n            v-if=\"teamStore.can.manageShow && !props.episode.isPublished\"\n            @click=\"deleteShowEpisode\"\n            class=\"px-4 py-2 text-white font-semibold bg-red-500 hover:bg-red-600 rounded-lg\"\n        >\n          <font-awesome-icon icon=\"fa-trash-can\"/>\n        </button>\n      </div>\n    </td>\n  </tr>\n  <tr v-else>\n    <td class=\"w-full text-center\">\n      <span class=\"loading loading-infinity loading-lg\"></span><span class=\"ml-3\">The episode is being deleted...</span>\n    </td>\n  </tr>\n</template>\n\n<script setup>\nimport { router } from '@inertiajs/vue3'\nimport { useForm } from \"@inertiajs/vue3\"\nimport { computed, ref } from \"vue\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useTeamStore } from \"@/Stores/TeamStore\"\nimport { useShowStore } from \"@/Stores/ShowStore\"\nimport { useUserStore } from \"@/Stores/UserStore\"\nimport { FontAwesomeIcon } from \"@fortawesome/vue-fontawesome\"\nimport ShowEpisodeStatuses from \"@/Components/Pages/Shows/Elements/ManageShowEpisodesStatuses\"\nimport EpisodeNoteEdit from \"@/Components/Pages/Shows/Elements/ManageEpisodeEditNote\"\nimport SingleImage from '@/Components/Global/Multimedia/SingleImage.vue'\n\nconst appSettingStore = useAppSettingStore()\nconst teamStore = useTeamStore()\nconst showStore = useShowStore()\nconst userStore = useUserStore()\n\nlet props = defineProps({\n  episode: Object,\n  episodeStatuses: Object,\n  showSlug: String,\n  showName: String,\n});\n\nlet showEpisodeStatuses = ref(false)\n\nconst releaseDateTime = userStore.formatDateInUserTimezone(props.episode.releaseDateTime, 'ddd DD MMM YYYY')\nconst scheduledReleaseDateTime = userStore.formatDateInUserTimezone(props.episode.scheduledReleaseDateTime, 'ddd DD MMM YYYY, hh:mm A' + ' ' + userStore.timezoneAbbreviation)\n\nshowStore.noteEdit = 0\nconst componentKey = ref(0);\n\nfunction reloadNote() {\n  props.episode.notes = showStore.note;\n  componentKey.value += 1;\n}\n\nlet form = useForm({\n  note: '',\n});\n\nfunction editNote() {\n  showStore.noteEdit = props.episode.id\n}\n\nfunction openEpisodeStatuses() {\n  document.getElementById('episodeStatuses').showModal()\n}\n\nconst deleteShowEpisode = async () => {\n\n  // episode is being deleted\n\n\n  const confirmation = confirm('Are you sure you want to delete this show episode?');\n\n  if (confirmation) {\n    try {\n      showStore.episodeIsBeingDeleted = props.episode.id;\n      // Make the DELETE request to delete the show episode\n      await axios.delete(`/shows/${props.showSlug}/episode/${props.episode.slug}`)\n          .then((response) => {\n            // Handle the response\n            if (response.status === 200) {\n              // Display the JSON message from the response\n              showStore.errorMessage = response.data.message\n              // alert(response.data.message);\n              // Update the UI\n              router.reload()\n              showStore.episodeIsBeingDeleted = 0;\n              // For example, you can use Inertia's visit method to navigate to a new page:\n              // await router.visit(route('some.route'));\n            } else {\n              // Handle other response statuses if needed\n              showStore.errorMessage = response.statusText\n              console.error('Delete request failed:', response.statusText);\n              showStore.episodeIsBeingDeleted = 0;\n              router.reload()\n            }\n          })\n          .catch((error) => {\n            console.error('Error deleting show episode:', error);\n            showStore.errorMessage = error\n            showStore.episodeIsBeingDeleted = 0;\n            router.reload()\n          });\n\n\n      // await router.delete(route('shows.showEpisodes.destroy', [props.showSlug, props.episode.slug]));\n      console.log(\"it should've been deleted\");\n      // Redirect to a different page or update the UI as needed\n\n      console.log('inertia reload');\n      // For example, you can use Inertia's visit method to navigate to a new page:\n      // await router.visit(route('some.route'));\n    } catch (error) {\n      console.error('Error deleting show episode:', error);\n    }\n  }\n};\n\n\n</script>\n","import script from \"./ManageShowEpisodesList.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ManageShowEpisodesList.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n\n  <div>\n    <button\n        v-if=\"teamStore.can.createEpisode\"\n        @click=\"appSettingStore.btnRedirect(`/shows/${show.slug}/episode/create`)\"\n        class=\"ml-6 my-4 px-4 py-2 text-white font-semibold bg-green-500 hover:bg-green-600 rounded-lg disabled:bg-gray-400\"\n\n    >Create Episode\n    </button>\n  </div>\n  <table class=\"min-w-full divide-y divide-gray-200\">\n    <thead class=\"divide-y divide-gray-200\">\n    <!--                                <tr v-for=\"episode in episodes.data\" :key=\"episode.id\">-->\n    <tr>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n        Ep.#\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap w-1/3\">\n        <div class=\"flex items-start\">\n          <div class=\"text-sm font-medium\">\n            <!--                                                    <Link :href=\"`/admin/users/${episode.id}`\" class=\"text-indigo-600 hover:text-indigo-900\">{{ episode.name }}</Link>-->\n            Episode Name\n          </div>\n        </div>\n      </td>\n\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n        Episode Notes\n      </td>\n\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n        Episode Notes\n      </td>\n\n      <td>\n        <!--edit button goes in this column-->\n      </td>\n    </tr>\n    </thead>\n\n    <tbody class=\"divide-y divide-gray-200\">\n\n    <ShowEpisode v-for=\"episode in props.episodes.data\"\n                 :episode=\"episode\"\n                 :showSlug=\"props.show.slug\"\n                 :showName=\"props.show.name\"\n                 :episodeStatuses=\"props.episodeStatuses\"/>\n\n    </tbody>\n  </table>\n\n  <!-- Paginator -->\n  <Pagination :data=\"episodes\" class=\"\"/>\n\n</template>\n\n<script setup>\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useTeamStore } from \"@/Stores/TeamStore\"\nimport ShowEpisode from \"@/Components/Pages/Shows/Elements/ManageShowEpisode\"\nimport Pagination from \"@/Components/Global/Paginators/Pagination\"\n\nconst appSettingStore = useAppSettingStore()\nconst teamStore = useTeamStore()\n\nlet props = defineProps({\n  show: Object,\n  episodes: Object,\n  episodeStatuses: Object,\n  filters: Object,\n  can: Object,\n});\n\n// Access flashed messages from Inertia's props\n// const { success, error } = page.props;\n\n// Create refs to hold success and error messages\n// const successMessage = ref(success);\n// const errorMessage = ref(error);\n\n</script>\n","<template>\n\n    <table class=\"min-w-full divide-y divide-gray-200\">\n        <thead class=\"divide-y divide-gray-200\">\n        <!--                                <tr v-for=\"episode in episodes.data\" :key=\"episode.id\">-->\n        <tr>\n            <td class=\"px-6 py-4 whitespace-nowrap\">\n                <div class=\"flex items-center\">\n                    <div>\n                        <div class=\"text-sm font-medium pl-14\">\n                            <!--                                                    <Link :href=\"`/admin/users/${episode.id}`\" class=\"text-indigo-600 hover:text-indigo-900\">{{ episode.name }}</Link>-->\n                            Name\n                        </div>\n                    </div>\n                </div>\n            </td>\n\n            <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n                Role\n            </td>\n\n            <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n                Completed Assignments\n            </td>\n\n            <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n                Total Credits\n            </td>\n\n            <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-right\">\n                Status\n            </td>\n        </tr>\n        </thead>\n        <tbody class=\"bg-white divide-y divide-gray-200\">\n        <!--  INSERT CREDITS HERE  -->\n        </tbody>\n\n    </table>\n\n</template>\n\n<script setup>\n\n\n</script>\n","import { render } from \"./ManageShowCreditsList.vue?vue&type=template&id=65646f00\"\nconst script = {}\n\nimport exportComponent from \"../../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","  <template>\n\n  <div class=\"w-full bg-yellow-200 px-2 py-1\">\n    <span class=\"font-semibold uppercase\">⚠️ NOTICE: </span> The first time you playback a recording it will take a long time to load. This only happens the first time!\n  </div>\n  <table class=\"min-w-full divide-y divide-gray-200\">\n    <thead class=\"divide-y divide-gray-200\">\n    <!--                                <tr v-for=\"episode in episodes.data\" :key=\"episode.id\">-->\n    <tr>\n      <td class=\"px-6 py-4 whitespace-nowrap\">\n        <div class=\"flex items-center\">\n          <div>\n            <div class=\"text-sm font-semibold pl-14\">\n              <!--                                                    <Link :href=\"`/admin/users/${episode.id}`\" class=\"text-indigo-600 hover:text-indigo-900\">{{ episode.name }}</Link>-->\n              Date\n            </div>\n          </div>\n        </div>\n      </td>\n\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm font-semibold\">\n        Start Time\n      </td>\n\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm font-semibold\">\n        End Time\n      </td>\n\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm font-semibold\">\n        Duration\n      </td>\n\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm font-semibold text-right\">\n        Expires in\n      </td>\n\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm font-semibold text-right\">\n\n      </td>\n    </tr>\n    </thead>\n    <tbody class=\"bg-white divide-y divide-gray-200\">\n    <tr v-for=\"recording in showRecordings.data\" :key=\"recording.id\"\n        @mouseover=\"state.hoveredRow = recording.id\"\n        @mouseleave=\"state.hoveredRow = null\"\n        @click=\"openVideo(recording)\"\n        :class=\"rowClass(recording.id)\"\n    >\n      <td class=\"px-6 py-4 whitespace-nowrap\">\n        <div>{{ userStore.formatDateInUserTimezone(recording.start_time) }}</div>\n        <div v-if=\"recording.comment\" class=\"text-xs uppercase text-orange-700 font-semibold break-words\">\n          <span :class=\"{ 'text-indigo-600': recording.comment !== 'automated recording' }\">{{\n              recording.comment\n            }}</span>\n        </div>\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap\">\n        {{ userStore.formatTimeFromDateInUserTimezone(recording.start_time) }}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap\">\n        {{ userStore.formatTimeFromDateInUserTimezone(recording.end_time) }}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap\">\n        {{ formatDuration(recording.total_milliseconds_recorded) }}\n      </td>\n      <td class=\"px-6 py-4 whitespace-nowrap\">\n        <!-- Placeholder for expiration logic -->\n\n      </td>\n      <!-- We are not making recordings shareable at this time. -->\n      <td class=\" px-6 py-4 whitespace-nowrap text-right text-sm font-medium space-x-1\">\n        <button @click.stop=\"shareRecording(recording.shareUrl)\"\n                class=\"hidden btn btn-xs bg-orange-200 hover:bg-orange-300 text-black\">\n          <font-awesome-icon icon=\"fa-share\" class=\"\"/>\n          Share\n        </button>\n        <button @click.stop=\"confirmAddToEpisode\"\n                class=\"btn btn-xs\">Add To Episode\n        </button>\n        <button @click.stop=\"confirmDownload(recording)\"\n                class=\"btn btn-xs btn-info\">Download\n        </button>\n        <div @click.stop=\"confirmSaveToPremium\"\n                class=\"btn btn-xs\">Save to Premium Storage\n        </div>\n      </td>\n    </tr>\n    </tbody>\n  </table>\n\n  <div class=\"flex flex-row flex-wrap w-full justify-center\">\n    <Pagination :data=\"showRecordings\" class=\"\" />\n  </div>\n\n  <dialog id=\"confirmRecordingPlaybackModal\" class=\"modal\">\n    <div class=\"modal-box w-full items-center text-center text-black bg-white dark:bg-gray-800 dark:text-white\">\n      <form method=\"dialog\">\n        <button class=\"btn btn-sm btn-circle btn-ghost absolute right-2 top-2\">✕</button>\n      </form>\n      <h3 class=\"font-bold text-lg\"></h3>\n      <p class=\"py-4 text-xl mt-4\">Would you like to play the recording<br/> from\n        <span class=\"font-semibold\">{{ selectedRecordingDate }}</span>?</p>\n      <p class=\"my-2 text-left\" v-if=\"selectedRecording && selectedRecording.path\"><span\n          class=\"font-semibold\">Path: </span>{{ selectedRecording.path }}</p>\n      <p class=\"my-2 text-left\" v-if=\"selectedRecording && selectedRecording.comment\">\n        <span class=\"font-semibold\">Comment: </span>\n        <span>{{ selectedRecording.comment }}</span>\n      </p>\n      <button class=\"mt-4 btn\" @click=\"play\">Play</button>\n    </div>\n\n    <form method=\"dialog\" class=\"modal-backdrop\">\n      <button>close</button>\n    </form>\n  </dialog>\n\n  <transition name=\"fade\">\n    <div v-if=\"showCopyMessage\" class=\"copy-message\">\n      {{ copyMessage }}\n    </div>\n  </transition>\n\n  <dialog id=\"confirmAddToEpisodeModal\" class=\"modal\">\n    <div class=\"modal-box text-center text-black bg-white dark:bg-gray-800 dark:text-white\">\n      <form method=\"dialog\">\n        <button class=\"btn btn-sm btn-circle btn-ghost absolute right-2 top-2\">✕</button>\n      </form>\n      <h3 class=\"font-bold text-lg pt-8\">Add Recording To Episode</h3>\n      <p class=\"py-4\">We are working on this feature!</p>\n      <div class=\"modal-action\">\n        <form method=\"dialog\">\n          <!-- if there is a button in form, it will close the modal -->\n          <button class=\"btn\">Okay</button>\n        </form>\n      </div>\n    </div>\n  </dialog>\n\n  <dialog id=\"confirmDownloadModal\" class=\"modal\">\n    <div class=\"modal-box text-center text-black bg-white dark:bg-gray-800 dark:text-white\">\n      <form method=\"dialog\">\n        <button class=\"btn btn-sm btn-circle btn-ghost absolute right-2 top-2\">✕</button>\n      </form>\n      <h3 class=\"font-bold text-lg pt-8\">Confirm Download</h3>\n      <p class=\"py-4\">Are you sure you want to download the recording?</p>\n      <div class=\"modal-action\">\n        <form method=\"dialog\" class=\"w-full flex justify-center\">\n          <!-- if there is a button in form, it will close the modal -->\n          <button @click=\"beginDownload\" class=\"btn btn-info w-20\">Yes</button>\n        </form>\n      </div>\n    </div>\n  </dialog>\n\n  <dialog id=\"downloadStarted\" class=\"modal\">\n    <div class=\"modal-box text-center text-black bg-white dark:bg-gray-800 dark:text-white\">\n      <form method=\"dialog\">\n        <button class=\"btn btn-sm btn-circle btn-ghost absolute right-2 top-2\">✕</button>\n      </form>\n      <h3 class=\"font-bold text-lg pt-8\">Download Started</h3>\n      <p class=\"py-4\">Your recording is now downloading!</p>\n      <div class=\"modal-action\">\n        <form method=\"dialog\" class=\"w-full flex justify-center\">\n          <!-- if there is a button in form, it will close the modal -->\n          <button class=\"btn\">Okay</button>\n        </form>\n      </div>\n    </div>\n  </dialog>\n\n  <dialog id=\"confirmSaveToPremiumModal\" class=\"modal\">\n    <div class=\"modal-box text-center text-black bg-white dark:bg-gray-800 dark:text-white\">\n      <form method=\"dialog\">\n        <button class=\"btn btn-sm btn-circle btn-ghost absolute right-2 top-2\">✕</button>\n      </form>\n      <h3 class=\"font-bold text-lg pt-8\">Save To Premium Storage</h3>\n      <p class=\"py-4\">We are working on this feature!</p>\n      <div class=\"modal-action\">\n        <form method=\"dialog\">\n          <!-- if there is a button in form, it will close the modal -->\n          <button class=\"btn\">Okay</button>\n        </form>\n      </div>\n    </div>\n  </dialog>\n\n\n</template>\n\n<script setup>\nimport { useVideoPlayerStore } from '@/Stores/VideoPlayerStore'\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\nimport { useNowPlayingStore } from '@/Stores/NowPlayingStore'\nimport { useUserStore } from '@/Stores/UserStore'\nimport { computed, reactive, ref } from 'vue'\nimport { useClipboard } from '@vueuse/core'\nimport Pagination from '@/Components/Global/Paginators/Pagination.vue'\n\nconst videoPlayerStore = useVideoPlayerStore()\nconst appSettingStore = useAppSettingStore()\nconst nowPlayingStore = useNowPlayingStore()\nconst userStore = useUserStore()\n\nconst shareClip = useClipboard()\n\nconst props = defineProps({\n  showName: String,\n  showSlug: String,\n  showImage: Object,\n  showRecordings: Object,\n})\n\nconst formatDuration = (totalMilliseconds) => {\n  let seconds = Math.floor(totalMilliseconds / 1000)\n  let minutes = Math.floor(seconds / 60)\n  const hours = Math.floor(minutes / 60)\n\n  seconds = seconds % 60\n  minutes = minutes % 60\n\n  // Padding numbers to always show two digits\n  const paddedHours = hours.toString().padStart(2, '0')\n  const paddedMinutes = minutes.toString().padStart(2, '0')\n  const paddedSeconds = seconds.toString().padStart(2, '0')\n\n  return `${paddedHours}h ${paddedMinutes}m ${paddedSeconds}s`\n}\n\nconst state = reactive({\n  hoveredRow: null,\n})\n\nconst selectedRecording = ref(null)\nconst selectedRecordingDate = ref('')\nconst selectedRecordingStreamName = ref('')\nconst selectedRecordingId = ref('')\nconst nowPlayingRecording = ref(null)\nconst nowPlayingRecordingId = ref('')\nconst nowPlayingStreamName = ref('')\n\n// Computed property returning a function to determine row classes\nconst rowClass = computed(() => (recordingId) => ({\n  'hover:bg-blue-100 cursor-pointer': state.hoveredRow === recordingId,\n  'bg-green-100': nowPlayingRecordingId.value === recordingId,\n}))\n\nconst openVideo = (recording) => {\n  document.getElementById('confirmRecordingPlaybackModal').showModal()\n  selectedRecording.value = recording\n  console.log(recording)\n  console.log(selectedRecording.value)\n  selectedRecordingStreamName.value = recording.streamName\n  selectedRecordingId.value = recording.id\n  selectedRecordingDate.value = userStore.formatDateInUserTimezone(recording.start_time)\n  console.log('Opening video for stream:', recording.streamName)\n  // Implement the video opening logic here\n}\n\nconst source = ref({\n  mediaType: '',\n  recording: {\n    source: '',\n    sourceType: '',\n  },\n})\nconsole.log('slug: ' + props.showSlug)\nconst play = () => {\n  source.value.mediaType = 'recording'\n  source.value.recording = {\n    source: selectedRecordingStreamName,\n    sourceType: 'video/mp4',\n  }\n  console.log('recording source: ' + selectedRecordingStreamName.value)\n  try {\n    videoPlayerStore.loadNewVideo(source.value)\n    nowPlayingRecording.value = selectedRecording.value\n    nowPlayingRecordingId.value = selectedRecordingId.value\n    nowPlayingStreamName.value = selectedRecordingStreamName.value\n    appSettingStore.toggleOttInfo()\n    console.log('now playing ID: ' + nowPlayingRecordingId.value)\n    const nowPlayingDate = userStore.formatDateInUserTimezone(nowPlayingRecording.value.start_time)\n    const nowPlayingStartTime = userStore.formatTimeFromDateInUserTimezone(nowPlayingRecording.value.start_time)\n    const secondaryName = nowPlayingDate + ' ' + nowPlayingStartTime + ' Recording'\n\n    // Set common details specific to this video play event for nowPlayingStore\n    const mediaType = source.value.mediaType\n    const commonDetails = {\n      primaryName: props.showName, //showName\n      secondaryName: secondaryName, //date startTime Recording\n      description: nowPlayingRecording?.value?.comment ?? null, // Comment\n      primaryUrl: 'shows/' + props.showSlug,\n      secondaryUrl: null,\n      channelName: null,\n      image: props?.showImage,\n      team: null,\n      creative_commons: null,\n    }\n    const videoDetails = {\n      // Assuming video details are structured correctly in your episode data\n      video_url: '',\n      type: source.value.recording.sourceType, // MIME type for video.js\n    }\n\n    // Update the currently playing media in nowPlayingStore with the latest details\n    nowPlayingStore.setActiveMedia(mediaType, {\n      ...commonDetails,\n      videoDetails, // Spread in the specific details for internal or external video\n    })\n\n    // Close the modal upon successful video playback\n    document.getElementById('confirmRecordingPlaybackModal').close()\n  } catch (error) {\n    console.error('Error loading new video:', error)\n    // Handle error appropriately, possibly with user feedback\n  }\n\n}\n\nconst shareRecording = (shareUrl) => {\n  shareClip.copy(shareUrl)\n  copyMessage.value = 'Video share URL copied!'\n  showCopyMessage.value = true\n  setTimeout(() => {\n    showCopyMessage.value = false\n  }, 1000) // Hide after 3 seconds\n}\n\nconst showCopyMessage = ref(false)\nconst copyMessage = ref('')\n\nconst confirmAddToEpisode = () => {\n  document.getElementById('confirmAddToEpisodeModal').showModal()\n}\n\nconst confirmDownload = (recording) => {\n  selectedRecording.value = recording\n  // Confirm the download.\n  document.getElementById('confirmDownloadModal').showModal()\n}\n\nconst beginDownload = () => {\n  // Once confirmed, execute the download.\n\n  // The URL where your files are hosted\n  const url = selectedRecording.value.download.url\n\n  console.log('download url: ' + url)\n  // Create an anchor (<a>) element\n  const downloadLink = document.createElement('a')\n  downloadLink.href = url\n\n  // Optionally, if you want the download to have a specific filename:\n  // downloadLink.download = 'YourCustomFileNameHere';\n\n  // This is necessary for the download to work in Firefox when triggered programmatically\n  document.body.appendChild(downloadLink)\n\n  downloadLink.click()\n\n  // Clean up by removing the element after triggering the download\n  document.body.removeChild(downloadLink)\n  selectedRecording.value = null\n  document.getElementById('downloadStarted').showModal()\n}\n\nconst confirmSaveToPremium = () => {\n  document.getElementById('confirmSaveToPremiumModal').showModal()\n}\n\n\n// function triggerDownload(url, filename = \"\") {\n//   const a = document.createElement('a');\n//   a.href = url;\n//   a.download = filename; // You can specify a filename here, or leave it empty\n//   document.body.appendChild(a);\n//   a.click();\n//   document.body.removeChild(a);\n// }\n\n</script>\n<style>\n.copy-message {\n  position: fixed;\n  bottom: 20%;\n  left: 50%;\n  transform: translateX(-50%);\n  background-color: rgba(0, 0, 0, 0.75);\n  color: white;\n  padding: 20px;\n  border-radius: 10px;\n  font-size: 1.5rem;\n  z-index: 100;\n  transition: opacity 0.5s ease;\n}\n\n.fade-enter-active, .fade-leave-active {\n  transition: opacity 0.5s ease;\n}\n\n.fade-enter-from, .fade-leave-to {\n  opacity: 0;\n}\n</style>\n","import api from \"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-10.use[1]!../../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-10.use[2]!../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./ShowRecordings.vue?vue&type=style&index=0&id=5ebeab87&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./ShowRecordings.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ShowRecordings.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ShowRecordings.vue?vue&type=style&index=0&id=5ebeab87&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n\n  <Head :title=\"`Manage Show: ${props.show.name}`\"/>\n\n  <div id=\"topDiv\" class=\"place-self-center flex flex-col\">\n    <div class=\"min-h-screen bg-white text-black dark:bg-gray-900 dark:text-gray-50 rounded px-5\">\n\n      <Message v-if=\"appSettingStore.showFlashMessage\" :flash=\"$page.props.flash\"/>\n      <div class=\"alert alert-error mt-4 mx-3\"\n           v-if=\"showStore.errorMessage\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n        </svg>\n        <span>{{ showStore.errorMessage }}</span>\n        <button class=\"text-xs ml-12\" @click=\"showStore.errorMessage = ''\"> Close</button>\n      </div>\n\n      <header class=\"bg-gradient-to-r from-blue-100 via-white to-transparent p-4 text-black font-bold rounded-lg\">\n        <!--            <header class=\"wave-background p-4 text-black font-bold rounded-lg\">-->\n\n        <div class=\"flex justify-between mb-3 pt-6\">\n          <div class=\"font-bold mb-4 text-black align-bottom text-lg\">MANAGE SHOW</div>\n\n          <div class=\"flex flex-col\">\n            <div class=\"flex flex-row w-full justify-end mb-2\">\n              <button\n                  @click=\"appSettingStore.btnRedirect(`/teams/${team.slug}/manage`)\"\n                  class=\"px-4 py-2 mr-2 mb-2 h-fit text-white font-semibold bg-orange-500 hover:bg-orange-600 rounded-lg\"\n              >Back to<br/>\n                Manage Team\n              </button>\n            </div>\n            <div class=\"flex flex-wrap-reverse justify-end\">\n              <button\n                  v-if=\"can.goLive\"\n                  @click=\"goLive\"\n                  class=\"px-4 py-2 mr-2 mb-2 h-fit text-white font-semibold bg-red-500 hover:bg-red-600 rounded-lg\"\n              >Go Live\n              </button>\n              <button\n                  v-if=\"teamStore.can.editShow\"\n                  @click=\"appSettingStore.btnRedirect(`/shows/${show.slug}/edit`)\"\n                  class=\"px-4 py-2 mb-2 h-fit text-white font-semibold bg-blue-500 hover:bg-blue-600 rounded-lg\"\n              >Edit Show\n              </button>\n\n              <DashboardButton class=\"mb-2\"/>\n\n            </div>\n          </div>\n\n        </div>\n\n        <ShowManageHeader\n            :show=\"props.show\"\n            :team=\"props.team\"\n            :can=\"can\"\n        />\n\n        <div class=\"flex justify-end mt-6\">\n\n\n        </div>\n      </header>\n\n\n      <!--            <div class=\"my-6 ml-10 w-3/4\">-->\n      <!--                {{ teamStore.activeShow.description }}-->\n      <!--            </div>-->\n\n      <div class=\"my-6 text-gray-100\">\n        <span class=\"uppercase text-xs font-semibold text-black\">SHOW NOTES: </span>\n        <span class=\"text-black light:text-black dark:text-white\">{{ props.show.notes }}</span>\n      </div>\n\n\n      <div class=\"flex flex-col\">\n        <div class=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\n          <div class=\"py-2 align-middle inline-block w-full sm:px-6 lg:px-8 space-y-4\">\n            <!--          <div class=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">-->\n            <!--            <div class=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">-->\n\n            <!-- This code doesn't work .. it's meant to become a header button that collapses/expands each section -->\n            <!--                            <button class=\"bg-orange-300 p-2 font-bold w-full text-left\" type=\"button\"-->\n            <!--                                    data-bs-toggle=\"collapse\" data-bs-target=\"#collapseExample\" aria-expanded=\"true\"-->\n            <!--                                    aria-controls=\"collapseExample\">Episodes-->\n            <!--                            </button>-->\n\n            <!--                            <div class=\"collapse\" id=\"collapseExample\">-->\n            <!--              <div>-->\n            <!--                <div class=\"bg-blue-100 p-2 font-bold text-black\">Episodes</div>-->\n            <div @click=\"toggleComponent('showEpisodes')\"\n                 :class=\"{'rounded-t-lg': showStore.openComponent === 'showEpisodes', 'rounded-lg': showStore.openComponent !== 'showEpisodes'}\"\n                 class=\"accordion-header p-2 font-bold transition duration-300 ease-in-out transform focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 overflow-hidden shadow-lg bg-blue-100 hover:bg-blue-300 dark:hover:bg-blue-900 text-black hover:text-blue-900 dark:text-blue-100 dark:hover:text-white\">\n              <font-awesome-icon icon=\"fa-play-circle\" class=\"\"/>\n              Episodes\n            </div>\n            <div v-if=\"showStore.openComponent === 'showEpisodes'\">\n              <div class=\"mt-4 mb-12 pb-6 shadow overflow-auto border-b border-gray-200 sm:rounded-lg\">\n                <ShowEpisodesList :episodes=\"props.episodes\" :show=\"props.show\"\n                                  :episodeStatuses=\"props.episodeStatuses\"/>\n              </div>\n            </div>\n            <!--              </div>-->\n\n            <!--                            <table class=\"min-w-full divide-y divide-gray-200\">-->\n            <!--                                <tbody class=\"bg-white divide-y divide-gray-200\">-->\n            <!--                                <tr v-for=\"episode in episodes.data\" :key=\"episode.id\">-->\n            <!--                                    <td class=\"px-6 py-4 whitespace-nowrap\">-->\n            <!--                                        <div class=\"flex items-center\">-->\n            <!--                                            <div>-->\n            <!--                                                <div class=\"text-sm font-medium text-gray-900\">-->\n            <!--                                                    <Link :href=\"`/admin/users/${episode.id}`\" class=\"text-indigo-600 hover:text-indigo-900\">{{ episode.name }}</Link>-->\n            <!--                                                </div>-->\n            <!--                                            </div>-->\n            <!--                                        </div>-->\n            <!--                                    </td>-->\n\n            <!--                                    <td class=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">-->\n            <!--                                        <Link :href=\"`/admin/users/edit/${episode.id}`\" class=\"text-indigo-600 hover:text-indigo-900\">Edit</Link>-->\n            <!--                                    </td>-->\n            <!--                                </tr>-->\n            <!--                                </tbody>-->\n            <!--                            </table>-->\n\n            <!--                            &lt;!&ndash; Paginator &ndash;&gt;-->\n            <!--                            <Pagination :links=\"episode.links\" class=\"mt-6\"/>-->\n\n            <!--            </div>-->\n\n            <!--            <div class=\"mt-4 shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">-->\n            <!--              <div class=\"bg-blue-100 p-2 font-bold text-black\">Credits</div>-->\n            <!--              -->\n            <!--              -->\n            <div @click=\"toggleComponent('showCredits')\"\n                 :class=\"{'rounded-t-lg': showStore.openComponent === 'showCredits', 'rounded-lg': showStore.openComponent !== 'showCredits'}\"\n                 class=\"accordion-header p-2 font-bold transition duration-300 ease-in-out transform focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 overflow-auto shadow-lg bg-blue-100 hover:bg-blue-300 dark:hover:bg-blue-900 text-black hover:text-blue-900 dark:text-blue-100 dark:hover:text-white\">\n              <font-awesome-icon icon=\"fa-clipboard-list\" class=\"\"/>\n              Credits and Assignments\n            </div>\n            <div v-if=\"showStore.openComponent === 'showCredits'\">\n              <div class=\"mt-4 mb-12 pb-6 shadow overflow-auto border-b border-gray-200 sm:rounded-lg\">\n                <div class=\"border-1 border-t mb-3 bg-blue-100 py-1 px-2 text-xs font-semibold text-red-800\">\n                  In development. Not currently working.\n                </div>\n                <Link\n                    :href=\"`#`\"\n                    v-if=\"teamStore.can.createAssignment\">\n                  <button\n                      class=\"bg-green-500 hover:bg-green-600 text-white ml-2 my-2 px-4 py-2 rounded disabled:bg-gray-400 h-max w-max\"\n                      disabled\n                  >Create Assignment\n                  </button>\n                </Link>\n\n                <ShowCreditsList/>\n              </div>\n            </div>\n            <!--            </div>-->\n\n            <!--            <div class=\"mt-4 shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">-->\n            <!--              <div class=\"bg-blue-100 p-2 font-bold text-black\">Recordings</div>-->\n            <div @click=\"toggleComponent('showRecordings')\"\n                 :class=\"{'rounded-t-lg': showStore.openComponent === 'showRecordings', 'rounded-lg': showStore.openComponent !== 'showRecordings'}\"\n                 class=\"accordion-header p-2 font-bold transition duration-300 ease-in-out transform focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 overflow-auto shadow-lg bg-blue-100 hover:bg-blue-300 dark:hover:bg-blue-900 text-black hover:text-blue-900 dark:text-blue-100 dark:hover:text-white\">\n              <font-awesome-icon icon=\"fa-circle\" class=\"text-red-700\"/>\n              Recordings\n            </div>\n            <div v-if=\"showStore.openComponent === 'showRecordings'\">\n              <div class=\"mt-4 mb-12 pb-6 shadow overflow-auto border-b border-gray-200 sm:rounded-lg\">\n                <ShowRecordings :showRecordings=\"show.recordings\" :showName=\"show.name\" :showSlug=\"show.slug\"\n                                :showImage=\"show.image\"/>\n\n                <!--            </div>-->\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <ShowFooter :team=\"team\" :show=\"show\"/>\n    </div>\n  </div>\n\n</template>\n\n<script setup>\nimport { onBeforeUnmount, onMounted, onUnmounted, ref } from 'vue'\nimport { usePage } from '@inertiajs/vue3'\nimport { usePageSetup } from '@/Utilities/PageSetup'\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\nimport { useShowStore } from '@/Stores/ShowStore'\nimport { useTeamStore } from '@/Stores/TeamStore'\nimport { useGoLiveStore } from '@/Stores/GoLiveStore'\nimport ShowManageHeader from '@/Components/Pages/Shows/Layout/ShowManageHeader'\nimport ShowFooter from '@/Components/Pages/Shows/Layout/ShowFooter'\nimport ShowEpisodesList from '@/Components/Pages/Shows/Elements/ManageShowEpisodesList'\nimport ShowCreditsList from '@/Components/Pages/Shows/Elements/ManageShowCreditsList'\nimport Message from '@/Components/Global/Modals/Messages'\nimport DashboardButton from '@/Components/Global/Buttons/DashboardButton.vue'\nimport ShowRecordings from '@/Components/Pages/Shows/Elements/ShowRecordings.vue'\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome'\n\nusePageSetup('shows/slug/manage')\n\nconst appSettingStore = useAppSettingStore()\nconst showStore = useShowStore()\nconst teamStore = useTeamStore()\nconst goLiveStore = useGoLiveStore()\n\nconst toggleComponent = (componentName) => {\n  showStore.openComponent = showStore.openComponent === componentName ? null : componentName\n}\n\nconst page = usePage().props\n\nconst props = defineProps({\n  show: Object,\n  team: Object,\n  episodes: Object,\n  episodeStatuses: Object,\n  // filters: Object,\n  can: Object,\n})\n\nteamStore.setActiveTeam(props.team)\nteamStore.setActiveShow(props.show)\nteamStore.can = props.can\n\nconst currentUsers = ref([]);\n\n// let search = ref(props.filters.search);\n//\n// watch(search, throttle(function (value) {\n//     router.get('/shows', { search: value }, {\n//         preserveState: true,\n//         replace: true\n//     });\n// }, 300));\n\nconst goLive = () => {\n  goLiveStore.reset()\n  goLiveStore.preSelectedShowId = props.show.id\n  appSettingStore.btnRedirect(`/golive`)\n}\n\nonMounted(() => {\n  showStore.initializeShow(props.show)\n  console.log(`Subscribing to channel creator.show.${props.show.id}`)\n\n  // Echo.private(`creator.show.${props.show.id}`)\n  //     .subscribed(() => {\n  //       console.log(`Successfully subscribed to channel creator.show.${props.show.id}`);\n  //     })\n  //     .listen('.CreatorContentStatusUpdated', (event) => {\n  //       // console.log('CreatorContentStatusUpdated event received', event);\n  //       showStore.$patch({\n  //         isSaving: event.meta.isSaving,\n  //         isUpdatingSchedule: event.meta.isUpdatingSchedule,\n  //         updatedBy: event.meta.updatedBy,\n  //       });\n  //       // console.log('showStore.isSaving:', showStore.isSaving); // Log to verify update\n  //     })\n  //     .error((error) => {\n  //       console.error('Error subscribing to channel:', error);\n  //     });\n\n  Echo.join(`creator.show.${props.show.id}`)\n      .here(async (users) => {\n        console.log('Users currently in the channel:', users)\n        currentUsers.value = users;\n        // Elect the leader (first user in the list)\n        if (users.length > 0) {\n          const leader = users[0];\n          showStore.setLeader(leader);\n          console.log(`Leader elected: ${leader.name}`);\n        }\n\n        console.log(showStore.isUpdatingSchedule, showStore.updatedBy)\n        // Check if the user is the only one in the channel\n        if (currentUsers.value.length === 1 && showStore.isUpdatingSchedule && showStore.updatedBy) {\n          try {\n            // Reset the isUpdatingSchedule and updatedBy fields\n            await axios.put(`/api/shows/${props.show.slug}/meta`, {\n              isUpdatingSchedule: false,\n              updatedBy: showStore.updatedBy,\n            });\n            console.log('isUpdatingSchedule and updatedBy fields reset');\n\n            // Update the showStore accordingly\n            // showStore.isUpdatingSchedule = false;\n            // showStore.updatedBy = null;\n          } catch (error) {\n            console.error('Error updating meta:', error);\n          }\n        }\n      })\n      .joining((user) => {\n        console.log('User joined the channel:', user)\n        currentUsers.value.push(user);\n      })\n      .leaving((user) => {\n        console.log('User left the channel:', user)\n        currentUsers.value = currentUsers.value.filter(u => u.id !== user.id);\n\n        if (user.id === showStore.leader.id) {\n          console.log('Leader left, electing new leader');\n          // Elect a new leader if the current leader leaves\n          if (currentUsers.value.length > 0) {\n            const newLeader = currentUsers.value[0];\n            showStore.setLeader(newLeader);\n            console.log(`New leader elected: ${newLeader.name}`);\n          }\n        }\n        // If current user is still the leader, run the command\n        if (showStore.leader.id === page.value.user.id) {\n          axios.post(`/api/${props.show.slug}/user-left-channel`, {\n            user: user,\n            channel: `creator.show.${props.show.id}`,\n            showSlug: props.show.slug, // Pass the show slug\n          }).then(response => {\n            console.log('Successfully posted to user-left-channel:', response.data);\n          }).catch(error => {\n            console.error('Error posting to user-left-channel:', error);\n          });\n        }\n      })\n      .listen('.CreatorContentStatusUpdated', (event) => {\n        console.log('CreatorContentStatusUpdated event received:', event)\n        showStore.$patch({\n          isSaving: event.meta.isSaving,\n          isUpdatingSchedule: event.meta.isUpdatingSchedule,\n          updatedBy: event.meta.updatedBy,\n        })\n      })\n      .listen('.ShowScheduleDetailsUpdated', (event) => {\n        console.log('ShowScheduleDetailsUpdated event received:', event)\n        showStore.scheduleDetails = event.scheduleDetails\n      })\n      .error((error) => {\n        console.error('Error subscribing to channel:', error)\n      })\n\n})\n\nonBeforeUnmount(() => {\n  // Echo.leave(`creator.show.${props.show.id}`);\n  Echo.leave(`creator.show.${props.show.id}`)\n\n  showStore.setUpdatingStatus(false, page.value.user.name, props.show.slug)\n\n  console.log(`Unsubscribed from channel creator.show.${props.show.id}`)\n  showStore.reset()\n})\n\n</script>\n\n\n<style scoped>\n@keyframes wave-bg {\n  0%, 100% {\n    background-color: #dbeafe; /* Original color */\n  }\n  50% {\n    background-color: #bfdbfe; /* Slightly lighter color */\n  }\n}\n\n.wave-background {\n  animation: wave-bg 5s infinite ease-in-out;\n  background-color: #dbeafe; /* Starting color */\n}\n\n\n</style>\n","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-10.use[1]!../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-10.use[2]!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./Manage.vue?vue&type=style&index=0&id=10f0fbd1&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./Manage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Manage.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Manage.vue?vue&type=style&index=0&id=10f0fbd1&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-10f0fbd1\"]])\n\nexport default __exports__"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","initialState","displayEpisodeGoLiveComponent","isEpisode","episode","preSelectedShowId","selectedShowId","shows","streamKey","wildcardId","isLive","isRecording","streamInfo","rtmpUri","destinations","isLoadingDestinations","loadingDestinationId","processingRecordingChange","isProcessingDisableAllAutoPushes","playerIsReloading","pushDestinationFormSubmitProcessing","mistServerUri","previousStreamStatus","useGoLiveStore","defineStore","state","actions","assign","this","fetchShows","_this","_callee","response","_context","axios","get","data","t0","generateStreamKey","_this2","_callee2","_context2","post","concat","stream_key","selectedShow","mist_stream_wildcard","mist_stream_wildcard_id","updateAndGetStreamKey","_show$mist_stream_wil","_this3","show","find","id","setSelectedShowId","showId","updateSelectedShow","_this4","goLive","stopLive","startRecording","_this5","_callee3","notificationStore","showSlug","_response$data","message","status","_context3","useNotificationStore","slug","stream_name","setToastNotification","stopRecording","_this6","_callee4","_response$data2","_context4","fetchStreamInfo","_this7","_callee5","_context5","fetchMistServerUri","streamName","success","fetchRtmpUri","_this8","_callee6","_context6","fetch","ok","text","clearStreamInfo","toggleDisplayEpisodeGoLiveComponent","_this$episode","show_id","updateEpisode","_this9","_callee7","videoAuxPlayerStore","uriResponse","_context7","useVideoAuxPlayerStore","setMistServerUri","reloadPlayer","_this10","_callee8","mistStream","_context8","loadMistStreamVideo","fetchPushDestinations","_this11","_callee9","_response$data3","_context9","backgroundFetch","recording","console","log","backgroundFetchPushDestinations","_this12","_callee10","_context10","deleteDestination","destinationId","_this13","_callee11","_context11","confirm","filter","destination","setGeneralServiceNotification","startPush","fullPushUri","_this14","_callee12","_response$data4","index","_context12","destination_id","full_push_uri","findIndex","push_is_started","stopPush","_this15","_callee13","_response$data5","_context13","enableAutoPush","_this16","_callee14","_response$data6","_context14","has_auto_push","disableAutoPush","_this17","_callee15","_response$data7","_context15","disableAllAutoPushes","_this18","_callee16","_response$data8","_context16","getters","_show$mist_stream_wil2","_show$mist_stream_wil3","_show$mist_stream_wil4","is_recording","fullRtmpUri","fullUrl","activeDestinations","sourceName","_state$selectedShow","_state$episode","streamOffline","_state$streamInfo$err","_state$streamInfo","dayjs","utc","timezone","ownKeys","getOwnPropertySymbols","getOwnPropertyDescriptor","_objectSpread","_defineProperty","getOwnPropertyDescriptors","defineProperties","obj","toPrimitive","String","Number","_toPrimitive","convertScheduleToTimezone","scheduleData","userStore","useUserStore","map","item","startTimeInUserTz","startTime","formatDateTimeFromUtcToUserTimezone","endTimeInUserTz","endTime","getUpcomingContentDates","viewingWindowStart","dates","start","add","toDate","weekOfYear","advancedFormat","isSameOrAfter","isSameOrBefore","getTimeZone","baseTime","tz","currentHalfHour","startOf","minute","fourHoursLater","currentMonth","selectedDay","currentWeekStart","currentWeekEnd","endOf","nextFourHoursOfContent","nextFourHoursOfContentWithPlaceholders","fiveDaySixHourSchedule","schedules","isLoading","nextPage","hasMore","todaysContent","weeklyContent","dataFetchLog","savingToSchedule","slotIntervalMinutes","mediumScreenSlotHours","smallScreenSlotHours","verySmallScreenSlotHours","timeSlots","timeBanners","duration","useScheduleStore","resetAll","setSelectedDay","day","fetchWeekDataIfNeeded","setSelectedDayToToday","now","changeDay","days","currentTimeZone","currentTime","newDay","hour","shiftHours","hours","isSame","isElevenPM","date","subtractMonth","subtract","addMonth","fetchFiveDaySixHourSchedule","userTimezone","fetchTodaysContent","preloadWeeklyContent","currentDate","loadWeekFromDate","fetchSchedules","startDate","endDate","dayStartDate","dayEndDate","fullISOStartDate","fullISOEndDate","newData","toISOString","format","_toConsumableArray","Set","JSON","stringify","parse","fetchMoreSchedules","lastSchedule","formattedDate","dayDate","fullISODate","updateFetchLogs","weekStart","weekEnd","fetchTime","existingLogIndex","lastFetch","needsDataForWeek","formatISODate","weekStartStr","weekEndStr","some","logWeekStartStr","logWeekEndStr","calculateExtendedEndForUpcomingContent","checkAndFetchForUpcomingContent","upcomingDates","fifteenMinutesAgo","_iterator","_step","_loop","_createForOfIteratorHelper","dateString","content","contentDate","lastFetchedTime","isFresh","fetchDataAndUpdateLog","t1","updateBaseTime","time","setBaseTime","newTime","updateNextFourHours","updateTimeRange","setTimeSlots","prepareShowsForGrid","baseDate","roundedMinutes","second","millisecond","initializeTimeSlots","durationHours","intervalMinutes","slots","slotTime","createTimeSlots","slotHours","appSettingStore","useAppSettingStore","isVerySmallScreen","isSmallScreen","totalSlots","Array","isArray","filterShowsForTimeRange","processedShows","calculateGridSlots","showsWithStatusFlags","processShows","_this$updateColumnOcc","updateColumnOccupancy","colOccupancy","maxRowUsed","gridItems","fillGapsAndCreatePlaceholders","combinedShows","sortShowsByPosition","durationMinutes","warn","showStart","showEnd","isInTimeRange","isBefore","isAfter","firstTimeSlot","lastTimeSlot","slotIndex","slot","Math","max","endSlotIndex","span","gridStart","gridSpan","comingUpNextSet","end","nowPlaying","placeholder","comingUpNext","cols","fill","gridRow","row","findAndFillGapsForSingleRow","gapStart","has","createPlaceholder","createBlankSpotPlaceholder","sort","b","priority","preparedTimeBanners","timeZone","todayStart","tomorrowStart","yesterdayStart","flatMap","banner","bannerTodayStart","parseInt","split","bannerTodayEnd","clone","bannerTomorrowStart","bannerTomorrowEnd","bannerYesterdayStart","bannerYesterdayEnd","startSlotIndex","nextFourHoursWithHalfHourIntervals","intervals","current","formatted","dateTimeString","upcomingContent","showsGroupedByStartTime","reduce","acc","itemStart","valueOf","group","selected","unix","nextSixHours","adjustedStart","dateMessage","startDay","startOfDay","isToday","isYesterday","isTomorrow","currentMonthIndex","month","currentMonthName","currentYear","year","today","viewingStart","daysInMonth","startOfCurrentMonth","endOfCurrentMonth","startOfGrid","endOfGrid","description","totalSpots","memberSpots","teamCreator","teamLeader","members","managers","activeShow","activeEpisode","creators","showModal","Boolean","confirmDialog","confirmManagerDialog","selectedManagerName","selectedManagerId","addManager","removeManager","deleteMemberName","deleteMemberId","noteEdit","note","saveNoteProcessing","goLiveDisplay","can","openComponent","useTeamStore","setActiveTeam","team","setActiveShow","setActiveEpisode","addMember","member","removeMember","memberId","updateCreatorTeams","creatorId","teamId","remove","creator","teams","is_manager","deleteTeamMemberCancel","confirmTeamManagerCancel","deleteTeamMember","payload","user_id","team_id","route","addTeamManager","router","visit","team_slug","removeTeamManager","toggleGoLiveDisplay","fetchTeamMembers","setCreators","spotsRemaining","membersCount","player","eventListenersAttached","videoPlayerLoaded","class","videoContainerClass","videoSourceIdSrc1","videoSourceIdSrc2","videoSourceIdSrc3","videoSourceTypeSrc1","videoSourceTypeSrc2","videoSourceTypeSrc3","firstPlayVideoSourceType","firstPlayVideoSource","videoName","videoSource","videoSourceType","videoPoster","nextSource","previousSource","currentView","currentChannelId","currentChannelName","currentShow","currentShowEpisode","currentVideo","hasVideo","controls","muted","paused","formattedTime","blue","videoIsYoutube","videoUploadComplete","getMistServerUri","setPlayer","playerInstance","initializePlayer","attachEventListeners","nextTick","useAudioStore","ensureAudioContextAndNodesReady","ready","play","on","handleTimeUpdate","handleFullscreenChange","handlePlay","handlePause","handleError","detachEventListeners","stopAudioLevelMonitoring","off","disposePlayer","dispose","prepareForNewVideoSource","source","loadNewVideo","resetPlayback","pause","formatDuration","durationInSeconds","floor","part","toString","padStart","join","_this$player","isFullscreen","_this$player2","_this$player3","_this$player4","code","makeBlue","toggleMute","unMute","mute","togglePlay","videoJs","videojs","load","loadNewLiveSource","sourceType","fullSourceUrl","src","back","fullscreen","requestFullscreen","getVideoCurrentTime","videoCurrentTime","getSourceDetails","videoSrc","mediaType","video_url","cdn_endpoint","cloud_folder","folder","file_name","audioStore","_this$getSourceDetail","deferAudioSetup","playNewVideo","loadNewSourceFromYouTube","useChannelStore","clearChannel","loadNewLiveSourceFromRumble","loadNewSourceFromUrl","loadNewSourceFromMist","loadNewSourceFromFile","filePath","loadExternalSourceVideo","loadPlaylistVideos","stayMuted","shouldUnmute","basePath","loadVideoFromFile","video","setNowPlayingInfoVideoFile","nowPlayingType","nowPlayingName","useStreamStore","currentChannel","setNowPlayingInfoShow","clearNowPlayingInfo","showStore","useShowStore","firstPlayVideo","setName","setEpisodeUrl","setUrl","setEpisodeName","makeVideoPiP","makeVideoFullPage","fullPage","hidePage","ott","isMobile","makeVideoTopRight","currentPageIsStream","makeVideoWelcomePage","loggedIn","usePageSetup","pageName","videoPlayerStore","useVideoPlayerStore","currentPage","showFlashMessage","pageIsHidden","window","innerWidth","showOttButtons","pageReload","pageWasReloaded","location","reload","event","search","shouldScrollToTop","requestAnimationFrame","topDiv","document","getElementById","scrollIntoView","behavior","scrollTo","setPrevUrl","noLayout","___CSS_LOADER_EXPORT___","module","props","__props","emits","ref","inputValue","watch","_ref2","newDate","_slicedToArray","clearFlashMessage","computed","flash","warning","_ref","savedScrollPosition","saveScrollPosition","scrollY","Date","getFullYear","__emit","onMounted","usePage","proxy","getCurrentInstance","stopConfetti","$confetti","timezoneConfirmed","currentStep","totalSteps","stepError","initialFormState","scheduleType","daysOfWeek","meridian","durationHour","durationMinute","durationDisplay","errors","form","reactive","confirmTimezone","selectScheduleType","goToNextStep","startHour","startMinute","startDateTime","sixHoursFromNow","isBeforeSixHours","provisionalEndDate","goToPreviousStep","goToStep","num","daysOrder","dayAbbreviations","dayNameToNumber","abbreviatedDaysOfWeekOrdered","indexOf","sortedDay","newDays","immediate","from","_","formattedStartTime","minuteOptions","updateDurationDisplay","display","newHour","formattedStartTimeForOneTime","formattedStartDate","formattedEndDate","disabledDays","selectedDayNumbers","repeat","weekdays","dayNum","includes","handleStartDateSelected","startWeekday","diff","handleEndDateSelected","submit","_ref3","closeConfirmAddShowModal","preparePayload","addShowToSchedule","closeModal","close","closeModalAndReset","selectedTimezone","canadianTimezone","newTimezone","handleKeydown","redirect","updateTimezone","setUserTimezone","addEventListener","onUnmounted","removeEventListener","removeFromSchedule","addShowToScheduleObserver","changeScheduleObserver","page","nextBroadcastDate","scheduleDetails","broadcastDates","broadcastDatesObj","dateStr","isFutureBroadcast","watchModal","modalId","onClose","modalElement","observer","MutationObserver","mutationsList","mutation","attributeName","hasAttribute","observe","attributes","openAddShowToScheduleModal","setUpdatingStatus","user","openChangeScheduleModal","meta","isUpdatingSchedule","updatedBy","onBeforeUnmount","disconnect","teamStore","relativeTime","convertedDate","watchEffect","scheduledDateTime","dialogId","episodeId","setDateTime","openEpisodeStatuses","cancelScheduleEpisode","handleScheduledDateTime","selectedScheduledDateTime","updateScheduledDateTime","formattedScheduledDateTime","dateTime","convertToTimeZone","changeEpisodeStatus","_x","_x2","_changeEpisodeStatus","statusId","episode_id","new_status_id","scheduled_release_dateTime","alert","errorMessage","closeModals","episodeStatusClass","episodeStatusId","useForm","notes","emit","episodeNote","closeNote","saveNote","focus","releaseDateTime","formatDateInUserTimezone","scheduledReleaseDateTime","timezoneAbbreviation","componentKey","reloadNote","editNote","deleteShowEpisode","episodeIsBeingDeleted","statusText","_createElementVNode","script","_createElementBlock","_hoisted_1","_hoisted_4","nowPlayingStore","useNowPlayingStore","shareClip","useClipboard","totalMilliseconds","seconds","minutes","paddedHours","paddedMinutes","paddedSeconds","hoveredRow","selectedRecording","selectedRecordingDate","selectedRecordingStreamName","selectedRecordingId","nowPlayingRecording","nowPlayingRecordingId","nowPlayingStreamName","rowClass","recordingId","_nowPlayingRecording$","_nowPlayingRecording$2","toggleOttInfo","secondaryName","start_time","formatTimeFromDateInUserTimezone","commonDetails","primaryName","showName","comment","primaryUrl","secondaryUrl","channelName","image","showImage","creative_commons","videoDetails","setActiveMedia","showCopyMessage","copyMessage","confirmAddToEpisode","beginDownload","url","download","downloadLink","createElement","href","body","appendChild","click","removeChild","confirmSaveToPremium","shareUrl","copy","setTimeout","options","locals","goLiveStore","toggleComponent","componentName","currentUsers","btnRedirect","initializeShow","Echo","here","users","leader","setLeader","put","joining","leaving","newLeader","channel","listen","$patch","isSaving","leave"],"sourceRoot":""}
{"version":3,"file":"js/7032.js","mappings":";+JAMO,SAASA,EAAaC,GACzB,IAAMC,GAAYC,EAAAA,EAAAA,gBACZC,GAAkBC,EAAAA,EAAAA,sBAClBC,GAAmBC,EAAAA,EAAAA,uBAEzBH,EAAgBI,YAAcP,EAC9BG,EAAgBK,kBAAmB,EACnCL,EAAgBM,cAAe,EAG3BR,EAAUS,UAAYC,OAAOC,WAAa,MAEnCT,EAAgBU,SADvBV,EAAgBW,IAAM,GAIM,IAAxBX,EAAgBW,MAChBX,EAAgBW,IAAM,GAG1BX,EAAgBY,gBAAiB,GAGrCV,EAAiBW,oBAEbb,EAAgBc,aAChBd,EAAgBc,YAAa,EAC7Bd,EAAgBe,iBAAkB,EAClCP,OAAOQ,SAASC,UAWhBC,EAAAA,GAAOC,GAAG,YAAY,SAACC,GAEftB,EAAUS,UAAYC,OAAOC,WAAa,MAAQT,EAAgBU,SAClEV,EAAgBW,IAAM,EAEM,IAAxBX,EAAgBW,MAChBX,EAAgBW,IAAM,GAIqB,KAA3BH,OAAOQ,SAASK,SAChBrB,EAAgBsB,mBACpCC,uBAAsB,WAClB,IAAMC,EAASC,SAASC,eAAe,UACnCF,EACAA,EAAOG,eAAe,CAACC,SAAU,SAEjCpB,OAAOqB,SAAS,EAAG,EAE3B,IAEJ7B,EAAgBsB,mBAAoB,CACxC,IAEJtB,EAAgB8B,aAChB9B,EAAgBY,gBAAiB,EACjCZ,EAAgB+B,UAAW,CAI/B,8xQCrEA,6DC0CwB9B,EAAAA,EAAAA,sBAERI,kBAAmB,EAEnC,IAAI2B,EAAQC,EAYNC,IAPcC,EAAAA,EAAAA,WAAS,iBAAO,CAClC,oEAAqEH,EAAMI,MAAMC,QACjF,gEAAiEL,EAAMI,MAAME,QAC7E,wEAAyEN,EAAMI,MAAMG,QACrF,4DAA6DP,EAAMI,MAAMI,MAC1E,IAEsB,iBAAAC,KAAAC,IAAAC,MAAG,SAAAC,IAAA,OAAAF,IAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAClB9B,EAAAA,GAAO+B,KAAKC,MAAM,gBAAe,OACvChC,EAAAA,GAAOD,SAAS,wBAAA6B,EAAAK,OAAA,GAAAP,EAAA,mLACjB,kBAHsB,OAAAH,EAAAW,MAAA,KAAAC,UAAA,4yJC1DvB,8PCiJAzD,EAAAA,EAAAA,GAAa,aAEb,IAAMI,GAAkBC,EAAAA,EAAAA,sBAClBH,GAAYC,EAAAA,EAAAA,gBAEdiC,GAAQC","sources":["webpack:///./resources/js/Utilities/PageSetup.js","webpack:///./resources/js/Components/Global/Modals/Messages.vue?dfe9","webpack:///./resources/js/Components/Global/Modals/Messages.vue","webpack:///./resources/js/Pages/Users/{$id}/Index.vue?39ba","webpack:///./resources/js/Pages/Users/{$id}/Index.vue"],"sourcesContent":["import { onBeforeMount, onMounted } from 'vue'\nimport { useUserStore } from \"@/Stores/UserStore\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useVideoPlayerStore } from \"@/Stores/VideoPlayerStore\"\nimport { router } from '@inertiajs/vue3'\n\nexport function usePageSetup(pageName) {\n    const userStore = useUserStore()\n    const appSettingStore = useAppSettingStore()\n    const videoPlayerStore = useVideoPlayerStore()\n\n    appSettingStore.currentPage = pageName\n    appSettingStore.showFlashMessage = true\n    appSettingStore.pageIsHidden = false\n\n// PageSetup utility\n    if (userStore.isMobile || window.innerWidth < 1024) {\n        appSettingStore.ott = 0; // Close all panels on mobile devices\n    } else if (appSettingStore.fullPage) {\n        appSettingStore.ott = 0; // Default to closed in fullPage mode\n    } else {\n        if (appSettingStore.ott === 0) {\n            appSettingStore.ott = 4\n        }\n        // appSettingStore.ott = 4; // Open OttChat by default on larger screens\n        appSettingStore.showOttButtons = true;\n    }\n\n    videoPlayerStore.makeVideoTopRight()\n\n    if (appSettingStore.pageReload) {\n        appSettingStore.pageReload = false\n        appSettingStore.pageWasReloaded = true\n        window.location.reload();\n    }\n    // Check if the URL contains query strings\n\n\n    // Only scroll into view if there are no query strings\n\n        // const topDiv = document.getElementById(\"topDiv\")\n        // if (topDiv) {\n        //     topDiv.scrollIntoView()\n        // }\n        router.on('navigate', (event) => {\n            // Ensure OTT panels do not open automatically on mobile devices\n            if (userStore.isMobile || window.innerWidth < 1024 || appSettingStore.fullPage) {\n                appSettingStore.ott = 0; // Close all panels on mobile devices\n            } else {\n                if (appSettingStore.ott === 0) {\n                    appSettingStore.ott = 4\n                }\n                // appSettingStore.ott = 0; // Default to closed on larger screens\n            }\n            const hasQueryStrings = window.location.search !== '';\n            if (!hasQueryStrings || appSettingStore.shouldScrollToTop) {\n                requestAnimationFrame(() => {\n                    const topDiv = document.getElementById(\"topDiv\");\n                    if (topDiv) {\n                        topDiv.scrollIntoView({behavior: 'auto'});\n                    } else {\n                        window.scrollTo(0, 0);\n                    }\n                });\n            }\n            appSettingStore.shouldScrollToTop = false;\n        })\n    // Only update if we're not already on this page to avoid overwriting with the current URL\n    appSettingStore.setPrevUrl()\n    appSettingStore.showOttButtons = true\n    appSettingStore.noLayout = false\n\n    // router.reload()\n\n}\n","import script from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"mx-4 my-4\">\n    <div class=\"alert alert-info mt-4\"\n         v-if=\"props.flash.message\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" class=\"stroke-current shrink-0 w-6 h-6\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n      </svg>\n      <span>{{ props.flash.message }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-success mt-4 mx-3\"\n         v-if=\"props.flash.success\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.success }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-warning mt-4 mx-3\"\n         v-if=\"props.flash.warning\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"/>\n      </svg>\n      <span>{{ props.flash.warning }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-error mt-4 mx-3\"\n         v-if=\"props.flash.error\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.error }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n  </div>\n\n</template>\n\n<script setup>\nimport { router } from '@inertiajs/vue3'\nimport { computed } from \"vue\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\n\nconst appSettingStore = useAppSettingStore()\n\nappSettingStore.showFlashMessage = true\n\nlet props = defineProps({\n  flash: Object,\n\n})\n\nconst messageType = computed(() => ({\n  'text-green-700 bg-green-100 dark:bg-green-200 dark:text-green-800': props.flash.success,\n  'text-blue-700 bg-blue-100 dark:bg-blue-200 dark:text-blue-800': props.flash.message,\n  'text-orange-700 bg-orange-100 dark:bg-orange-200 dark:text-orange-800': props.flash.warning,\n  'text-red-700 bg-red-100 dark:bg-red-200 dark:text-red-800': props.flash.error,\n}))\n\nconst clearFlashMessage = async () => {\n  await router.post(route('flash.clear'));\n  router.reload();\n};\n</script>\n","import script from \"./Index.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Index.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n\n  <Head :title=\"props.userSelected.name\"/>\n\n  <div class=\"flex flex-col gap-y-3\">\n    <div id=\"topDiv\" class=\"light:bg-white dark:bg-gray-800 light:text-black dark:text-gray-50 p-5 mb-10\">\n\n      <Message v-if=\"appSettingStore.showFlashMessage\" :flash=\"$page.props.flash\"/>\n\n      <div class=\"flex justify-end mb-3 gap-2 pt-6\">\n        <Link v-if=\"$page.props.user.isAdmin === 1\" :href=\"`/users`\">\n          <button\n              class=\"px-4 py-2 text-white bg-blue-600 hover:bg-blue-500 rounded-lg\"\n          >All Users\n          </button>\n        </Link>\n        <Link v-if=\"$page.props.user.isAdmin === 1\" :href=\"`/users/${props.userSelected.id}/edit`\">\n          <button\n              class=\"px-4 py-2 text-white bg-blue-600 hover:bg-blue-500 rounded-lg\"\n          >Edit User\n          </button>\n        </Link>\n        <Link :href=\"`/dashboard`\">\n          <button\n              class=\"px-4 py-2 text-white bg-blue-600 hover:bg-blue-500 rounded-lg\"\n          >Dashboard\n          </button>\n        </Link>\n      </div>\n\n      <p class=\"mb-6\">\n        <img :src=\"props.userSelected.profile_photo_url\" class=\"rounded-full h-20 w-20 object-cover\"/>\n      </p>\n\n      <h2 class=\"text-2xl pb-2\">\n        {{ props.userSelected.name }}\n      </h2>\n\n      <div class=\"p-6 bg-gray-800 border-b border-gray-200 space-y-2 text-gray-100\">\n        <div v-if=\"props.userSelected.isAdmin === 1\">\n          <span class=\"font-bold text-red-600\">Administrator</span>\n        </div>\n        <div v-if=\"props.userSelected.isVip\">\n          <span class=\"text-2xl font-semibold text-purple-600\">VIP</span>\n        </div>\n        <div v-if=\"props.isCreator\">\n          <span class=\"text-2xl font-semibold text-blue-500\">Creator</span>\n        </div>\n        <div v-if=\"props.isNewsPerson\" class=\"text-yellow-600\">\n          <span class=\"text-2xl font-semibold\">News Team</span>\n          <!-- Displaying roles -->\n          <div v-if=\"props.newsPersonRoles.length\">\n        <span class=\"text-xl\">\n            {{ props.newsPersonRoles.join(', ') }}\n        </span>\n          </div>\n        </div>\n        <div>\n          <div class=\"\"><span class=\"text-xs uppercase mr-2\">User ID: </span><span\n              class=\"text-base font-semibold\">{{ props.userSelected.id }}</span></div>\n\n          <div><span class=\"text-xs uppercase mr-2\">User Type: </span>{{ props.role }}</div>\n        </div>\n        <div>\n          <div v-if=\"$page.props.userSelected.role_id === 4\">\n            <span class=\"text-xs uppercase mr-2\">Creator Number: </span>{{ props.userSelected.creatorNumber }}\n          </div>\n        </div>\n        <div v-if=\"props.subscriptionName\">\n          <span class=\"text-xs uppercase mr-2\">Subscription: </span>{{ props.subscriptionName }}\n        </div>\n        <div>\n          <span class=\"text-xs uppercase mr-2\">Subscription Status: </span>{{ props.subscriptionStatus }}\n        </div>\n        <div v-if=\"props.trialEndsAt\">\n          <span class=\"text-xs uppercase mr-2\">Trial Ends At: </span>{{ formatDate(props.trialEndsAt) }}\n        </div>\n        <div v-if=\"props.endsAt\">\n          <span class=\"text-xs uppercase mr-2\">Subscription Renewal Date: </span>{{ formatDate(props.endsAt) }}\n        </div>\n        <div v-if=\"$page.props.user.isAdmin\">\n          <span class=\"text-xs uppercase mr-2\">Stripe ID: </span>{{ props.userSelected.stripe_id }}\n        </div>\n        <div v-if=\"$page.props.user.isAdmin\" class=\"text-yellow-500\">\n          <span class=\"text-xs uppercase mr-2\">Last Login: </span>{{ userStore.formatDateTimeFromUtcToUserTimezone(props.lastLoginAt) }} {{ userStore.timezoneAbbreviation}}\n        </div>\n      </div>\n\n      <div class=\"p-6 bg-gray-800 border-b border-gray-600\">\n        <div class=\"space-y-3\">\n          <div>\n            <span class=\"text-base font-semibold uppercase mr-2 text-gray-400\">Email:</span>\n            <span class=\"text-sm text-gray-300\">{{ props.userSelected.email }}</span>\n          </div>\n          <div>\n            <span class=\"text-base font-semibold uppercase mr-2 text-gray-400\">Phone:</span>\n            <span class=\"text-sm text-gray-300\">{{ props.userSelected.phone }}</span>\n          </div>\n          <div class=\"pt-5 mt-5 border-t border-gray-600\">\n            <div>\n              <span class=\"text-base font-semibold uppercase mr-2 text-gray-400\">Address 1:</span>\n              <span class=\"text-sm text-gray-300\">{{ props.userSelected.address1 }}</span>\n            </div>\n            <div>\n              <span class=\"text-base font-semibold uppercase mr-2 text-gray-400\">Address 2:</span>\n              <span class=\"text-sm text-gray-300\">{{ props.userSelected.address2 }}</span>\n            </div>\n            <div>\n              <span class=\"text-base font-semibold uppercase mr-2 text-gray-400\">City:</span>\n              <span class=\"text-sm text-gray-300\">{{ props.userSelected.city }}</span>\n            </div>\n            <div>\n              <span class=\"text-base font-semibold uppercase mr-2 text-gray-400\">Province:</span>\n              <span class=\"text-sm text-gray-300\">{{ props.userSelected.province }}</span>\n            </div>\n            <div>\n              <span class=\"text-base font-semibold uppercase mr-2 text-gray-400\">Country:</span>\n              <span class=\"text-sm text-gray-300\">{{ props.userSelected.country }}</span>\n            </div>\n            <div>\n              <span class=\"text-base font-semibold uppercase mr-2 text-gray-400\">Postal Code:</span>\n              <span class=\"text-sm text-gray-300\">{{ props.userSelected.postalCode }}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div v-if=\"userSelected.role_id === 4\" class=\"p-6 light:bg-white dark:bg-gray-800 border-b border-gray-200\">\n        <div class=\"text-2xl pb-2\">\n          Teams this user belongs to:\n        </div>\n        <div v-for=\"team in props.teams\"\n             :key=\"team.id\">\n          <Link :href=\"`/teams/${team.slug}`\"\n                class=\"text-xl mt-2 tracking-wider light:text-blue-800 light:hover:text-blue-600 dark:text-blue-200 dark:hover:text-blue-400\">\n            {{ team.name }}\n          </Link>\n        </div>\n      </div>\n    </div>\n  </div>\n\n\n</template>\n\n<script setup>\nimport { usePageSetup } from '@/Utilities/PageSetup'\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\nimport { useUserStore } from '@/Stores/UserStore'\nimport Message from '@/Components/Global/Modals/Messages'\n\nusePageSetup('usersShow')\n\nconst appSettingStore = useAppSettingStore()\nconst userStore = useUserStore()\n\nlet props = defineProps({\n  userSelected: Object,\n  isCreator: Boolean,\n  isNewsPerson: Boolean,\n  newsPersonRoles: Array,\n  subscriptionStatus: String,\n  trialEndsAt: String,\n  endsAt: String,\n  subscriptionName: String,\n  role: String,\n  lastLoginAt: String,\n  teams: Object,\n})\n\n</script>\n"],"names":["usePageSetup","pageName","userStore","useUserStore","appSettingStore","useAppSettingStore","videoPlayerStore","useVideoPlayerStore","currentPage","showFlashMessage","pageIsHidden","isMobile","window","innerWidth","fullPage","ott","showOttButtons","makeVideoTopRight","pageReload","pageWasReloaded","location","reload","router","on","event","search","shouldScrollToTop","requestAnimationFrame","topDiv","document","getElementById","scrollIntoView","behavior","scrollTo","setPrevUrl","noLayout","props","__props","clearFlashMessage","computed","flash","success","message","warning","error","_ref","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","post","route","stop","apply","arguments"],"sourceRoot":""}
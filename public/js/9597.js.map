{"version":3,"file":"js/9597.js","mappings":"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","sources":["webpack:///./resources/js/Stores/AdminStore.js","webpack:///./resources/js/Stores/ScheduleStore.js","webpack:///./resources/js/Utilities/PageSetup.js","webpack:///./resources/js/Components/Global/Calendar/MonthView.vue?2416","webpack:///./resources/js/Components/Global/Calendar/ThreeDayView.vue?98d5","webpack:///./resources/js/Components/Global/Calendar/TodayView.vue?e38d","webpack:///./resources/js/Components/Global/Calendar/WeekView.vue?116d","webpack:///./resources/js/Components/Pages/Admin/Channels/SourceSelector.vue?fb50","webpack:///./resources/js/Pages/Admin/Schedule/Index.vue?c3d8","webpack:///./resources/js/Components/Global/Calendar/TodayView.vue","webpack:///./resources/js/Components/Global/Calendar/TodayView.vue?d129","webpack:///./resources/js/Components/Global/Calendar/TodayView.vue?ee4f","webpack:///./resources/js/Components/Global/MistStreams/AddOrUpdateMistStreamModal.vue?ba39","webpack:///./resources/js/Components/Global/MistStreams/AddOrUpdateMistStreamModal.vue","webpack:///./resources/js/Components/Global/Modals/Messages.vue?dfe9","webpack:///./resources/js/Components/Global/Modals/Messages.vue","webpack:///./resources/js/Components/Global/Paginators/Pagination.vue?0305","webpack:///./resources/js/Components/Global/Paginators/Pagination.vue","webpack:///./resources/js/Components/Pages/Admin/AdminHeader.vue?239a","webpack:///./resources/js/Components/Pages/Admin/AdminHeader.vue","webpack:///./resources/js/Components/Pages/Admin/Channels/DynamicModal.vue?a432","webpack:///./resources/js/Components/Pages/Admin/Channels/DynamicModal.vue","webpack:///./resources/js/Components/Pages/Admin/Channels/SourceSelector.vue","webpack:///./resources/js/Components/Pages/Admin/Channels/SourceSelector.vue?6a9d","webpack:///./resources/js/Components/Pages/Admin/Channels/SourceSelector.vue?98e8","webpack:///./resources/js/Jetstream/Label.vue","webpack:///./resources/js/Components/Global/Calendar/MonthView.vue","webpack:///./resources/js/Components/Global/Calendar/MonthView.vue?e924","webpack:///./resources/js/Components/Global/Calendar/MonthView.vue?bbfc","webpack:///./resources/js/Components/Global/Calendar/WeekView.vue?fcba","webpack:///./resources/js/Components/Global/Calendar/WeekView.vue","webpack:///./resources/js/Components/Global/Calendar/ThreeDayView.vue?9557","webpack:///./resources/js/Components/Global/Calendar/ThreeDayView.vue","webpack:///./resources/js/Pages/Admin/Schedule/Index.vue","webpack:///./resources/js/Pages/Admin/Schedule/Index.vue?a392","webpack:///./resources/js/Pages/Admin/Schedule/Index.vue?a503"],"sourcesContent":["import { defineStore } from 'pinia'\nimport { useNotificationStore } from '@/Stores/NotificationStore'\n\nconst initialState = () => ({\n    channels: [], // For Admin Channels page\n    items: [], // for Admin Channels DynamicModal... ExternalSource, ChannelPlaylist, MistStream\n    activeItemId: null,\n    selectedChannel: null, // The currently active item\n    currentType: '', // 'externalSource', 'channelPlaylist', 'mistStream'\n    searchTerm: '',\n    type: '',\n    modalHeader: '',\n    currentPage: 1,\n    itemsPerPage: 10,\n    currentChannelsPage: 1,\n    itemsPerChannelsPage: 7,\n    sourceSelector: {\n        source: null,\n        sourceType: null\n    },\n    firstPlaySettings: {},\n    validationErrors: {},\n})\n\nexport const useAdminStore = defineStore('adminStore', {\n    state: initialState,\n    actions: {\n        reset() {\n            // Reset the store to its original state (clear all data)\n            Object.assign(this, initialState())\n        },\n\n        loadChannels(channels) {\n            this.channels = channels\n        },\n        async fetchChannels() {\n            await axios.get('/api/channels_list')\n                .then(response => {\n                    this.channels = response.data\n                })\n                .catch(error => {\n                    console.log(error)\n                })\n        },\n        async toggleChannelActiveStatus(channelId) {\n            const notificationStore = useNotificationStore();\n            try {\n                const response = await axios.post('/admin/channels/' + channelId + '/toggleChannelActive');\n                // Extract message and status from the response\n                const { message, status } = response.data;\n                // Use the status from the response for the notification\n                notificationStore.setToastNotification(message, status);\n            } catch (error) {\n                console.error(error);\n                notificationStore.setToastNotification('Failed to toggle channel status.', 'error');\n            }\n        },\n        async addChannel(name) {\n            const notificationStore = useNotificationStore();\n            try {\n                const response = await axios.post('/admin/channels/add', {'name': name});\n\n                if (response.data.success) {\n                    // Operation was a success\n                    await this.fetchChannels();\n                    notificationStore.setToastNotification(response.data.message, 'success');\n                } else {\n                    // Handle logical errors even when the HTTP response was OK\n                    // Assuming 'status' and 'message' are part of the error response\n                    const { message, status } = response.data;\n                    let errorMessage = 'Failed to add channel due to a server error.';\n\n                    if (status === 'error' && message && message.fallbackMessages) {\n                        // Construct a more detailed error message based on validation feedback\n                        const validationMessages = Object.values(message.fallbackMessages)\n                            .map(msgs => msgs.join(' ')) // Join messages if there are multiple for one field\n                            .join('; '); // Separate field messages with semicolons\n\n                        errorMessage = validationMessages || errorMessage;\n                    }\n\n                    notificationStore.setToastNotification(errorMessage, 'error');\n                }\n            } catch (error) {\n                console.error(error);\n                notificationStore.setToastNotification('Failed to add channel due to a network or server error.', 'error');\n            }\n        },\n        async updateChannel(channelId, newName) {\n            const notificationStore = useNotificationStore();\n            try {\n                const response = await axios.post(`/admin/channels/${channelId}`, {'name': newName});\n\n                if (response.data.success) {\n                    // Operation was a success\n                    await this.fetchChannels();\n                    notificationStore.setToastNotification(response.data.message, 'success');\n                } else {\n                    // Handle logical errors even when the HTTP response was OK\n                    // Assuming 'status' and 'message' are part of the error response\n                    const { message, status } = response.data;\n                    let errorMessage = 'Failed to add channel due to a server error.';\n\n                    if (status === 'error' && message && message.fallbackMessages) {\n                        // Construct a more detailed error message based on validation feedback\n                        const validationMessages = Object.values(message.fallbackMessages)\n                            .map(msgs => msgs.join(' ')) // Join messages if there are multiple for one field\n                            .join('; '); // Separate field messages with semicolons\n\n                        errorMessage = validationMessages || errorMessage;\n                    }\n\n                    notificationStore.setToastNotification(errorMessage, 'error');\n                }\n            } catch (error) {\n                console.error(error);\n                notificationStore.setToastNotification('Failed to add channel due to a network or server error.', 'error');\n            }\n        },\n        setSelectedChannel(item) {\n            this.selectedChannel = item\n        },\n        setCurrentType(type) {\n            this.currentType = type\n            this.modalHeader = type + ' list'\n        },\n        clearSelectedChannelAndItems() {\n            this.selectedChannel = null\n            this.items = []\n            this.activeItemId = null\n            this.currentType = ''\n            this.modalHeader = ''\n            this.currentPage = 1\n            this.itemsPerPage = 10\n            this.searchTerm = ''\n        },\n        // async searchItems(type, searchTerm = '') {\n        //     this.currentType = type;\n        //     this.searchTerm = searchTerm;\n        //     // Assuming you have a function to perform the fetch; adjust accordingly\n        //     const response = await fetch(`/admin/channels/search/${type}?search=${searchTerm}`);\n        //     const data = await response.json();\n        //     this.items = data.items;\n        // },\n        async fetchItems(type) {\n            this.currentType = type\n            if (this.currentType === 'mistStream') {\n                // retrieve all mistStreams paginated.\n                // Can Vue search through the items?\n                const response = await fetch(`/mistStreams`)\n                this.items = await response.json()\n                if (this.selectedChannel.mist_stream_id) {\n                    this.activeItemId = this.selectedChannel.mist_stream_id\n                }\n            } else if (this.currentType === 'externalSource') {\n                // retrieve all externalSources\n                const response = await fetch(`/externalSources`)\n                this.items = await response.json()\n                if (this.selectedChannel.channel_external_source_id) {\n                    this.activeItemId = this.selectedChannel.channel_external_source_id\n                }\n            } else if (this.currentType === 'channelPlaylist') {\n                // retrieve all channelPlaylists\n                const response = await fetch(`/channelPlaylists`)\n                this.items = await response.json()\n                if (this.selectedChannel.channel_playlist_id) {\n                    this.activeItemId = this.selectedChannel.channel_playlist_id\n                }\n            }\n            // Assuming you have a function to perform the fetch; adjust accordingly\n            // const response = await fetch(`/admin/channels/search/${type}?search=${searchTerm}`);\n            // const data = await response.json();\n            // this.items = data.items;\n        },\n        async updateActiveItemId(id) {\n            this.activeItemId = id\n            if (this.currentType === 'mistStream') {\n                await this.setMistStream(this.selectedChannel, id)\n            } else if (this.currentType === 'channelPlaylist') {\n                await this.setChannelPlaylist(this.selectedChannel, id)\n            } else if (this.currentType === 'externalSource') {\n                await this.setExternalSource(this.selectedChannel, id)\n            }\n        },\n        // Add more actions as needed\n        // this next one should probably go in AdminChannelStore\n        async setPlaybackPriorityType(channel, priorityType) {\n            const dataToSend = {setPriorityType: priorityType}\n            try {\n                const response = await axios.post(`/admin/channels/${channel.id}/setPlaybackPriorityType`, dataToSend)\n                if (response.data.success) {\n                    this.fetchChannels()\n                    // Find the index of the updated channel in the channels array\n                    const index = this.channels.findIndex(c => c.id === channel.id)\n                    if (index !== -1) {\n                        // Update the channel in the channels array with the updated data\n                        this.channels[index] = response.data.channel\n                    }\n                }\n            } catch (error) {\n                console.error(error)\n            }\n        },\n        async setMistStream(channel, mistStreamId) {\n            const dataToSend = {mistStreamId: mistStreamId}\n            try {\n                const response = await axios.post(`/admin/channels/${channel.id}/setMistStream`, dataToSend)\n                if (response.data.success) {\n                    this.fetchChannels()\n                    // Find the index of the updated channel in the channels array\n                    const index = this.channels.findIndex(c => c.id === channel.id)\n                    if (index !== -1) {\n                        // Update the channel in the channels array with the updated data\n                        this.channels[index] = response.data.channel\n                    }\n                }\n            } catch (error) {\n                console.error(error)\n            }\n        },\n        async setChannelPlaylist(channel, channelPlaylistId) {\n            const dataToSend = {channelPlaylistId: channelPlaylistId}\n            try {\n                const response = await axios.post(`/admin/channels/${channel.id}/setChannelPlaylist`, dataToSend)\n                if (response.data.success) {\n                    this.fetchChannels()\n                    // Find the index of the updated channel in the channels array\n                    const index = this.channels.findIndex(c => c.id === channel.id)\n                    if (index !== -1) {\n                        // Update the channel in the channels array with the updated data\n                        this.channels[index] = response.data.channel\n                    }\n                }\n            } catch (error) {\n                console.error(error)\n            }\n        },\n        async setExternalSource(channel, externalSourceId) {\n            const dataToSend = {mistStreamId: externalSourceId}\n            try {\n                const response = await axios.post(`/admin/channels/${channel.id}/setExternalSource`, dataToSend)\n                if (response.data.success) {\n                    this.fetchChannels()\n                    // Find the index of the updated channel in the channels array\n                    const index = this.channels.findIndex(c => c.id === channel.id)\n                    if (index !== -1) {\n                        // Update the channel in the channels array with the updated data\n                        this.channels[index] = response.data.channel\n                    }\n                }\n            } catch (error) {\n                console.error(error)\n            }\n        },\n        nextPage() {\n            const totalModalPages = Math.ceil(this.items.length / this.itemsPerPage)\n            if (this.currentPage < totalModalPages) this.currentPage++\n        },\n        prevPage() {\n            if (this.currentPage > 1) this.currentPage--\n        },\n        setPage(page) {\n            this.currentPage = page\n        },\n        nextChannelsPage() {\n            const totalModalPages = Math.ceil(this.channels.length / this.itemsPerChannelsPage)\n            if (this.currentChannelsPage < totalModalPages) this.currentChannelsPage++\n        },\n        prevChannelsPage() {\n            if (this.currentChannelsPage > 1) this.currentChannelsPage--\n        },\n        setChannelsPage(page) {\n            this.currentChannelsPage = page\n        },\n        ////// FIRST PLAY SETTINGS\n        /////////////////////////// admin/update-first-play-settings\n        async fetchFirstPlaySettings() {\n            const notificationStore = useNotificationStore();\n            try {\n                const response = await axios.post(`/admin/fetch-first-play-settings`);\n                if (response.data.success) {\n                    // Operation was a success\n                    this.firstPlaySettings = response.data.firstPlaySettings\n                    notificationStore.setToastNotification(response.data.message, 'success', 1500);\n                } else {\n                    // Handle logical errors even when the HTTP response was OK\n                    // Assuming 'status' and 'message' are part of the error response\n                    const { message, status } = response.data;\n                    let errorMessage = 'Failed to fetch First Play Settings due to a server error.';\n\n                    if (status === 'error' && message && message.fallbackMessages) {\n                        // Construct a more detailed error message based on validation feedback\n                        const validationMessages = Object.values(message.fallbackMessages)\n                            .map(msgs => msgs.join(' ')) // Join messages if there are multiple for one field\n                            .join('; '); // Separate field messages with semicolons\n\n                        errorMessage = validationMessages || errorMessage;\n                    }\n\n                    notificationStore.setToastNotification(errorMessage, 'error');\n                }\n            } catch (error) {\n                console.error(error);\n                notificationStore.setToastNotification('Failed to fetch First Play Settings due to a network or server error.', 'error');\n            }\n        },\n        async updateFirstPlaySettings() {\n            const notificationStore = useNotificationStore();\n\n            try {\n                const response = await axios.patch('/admin/update-first-play-settings', this.firstPlaySettings);\n\n                if (!response.data.success) {\n                    // This block might not be necessary if your server correctly uses HTTP status codes for errors\n                    this.validationErrors = response.data.errors || {};\n                    notificationStore.setToastNotification(response.data.message, 'error');\n                    return; // Exit early since we've handled the error case\n                }\n\n                // Operation was a success\n                this.firstPlaySettings = response.data.firstPlaySettings;\n                this.validationErrors = {}; // Clear any existing validation errors\n                notificationStore.setToastNotification(response.data.message, 'success', 1500);\n            } catch (error) {\n                // Properly handle the error response\n                if (error.response && error.response.data) {\n                    // Server responded with a non-2xx status code\n                    console.log(\"Error response data:\", error.response.data);\n                    this.validationErrors = error.response.data.errors || {};\n                    const errorMessage = error.response.data.message || 'Failed to save First Play Settings due to a network or server error.';\n                    notificationStore.setToastNotification(errorMessage, 'error');\n                } else {\n                    // The request was made but no response was received or other errors occurred\n                    notificationStore.setToastNotification('Failed to save First Play Settings due to a network or server error.', 'error');\n                }\n            }\n        },\n        handleErrors(data) {\n            const notificationStore = useNotificationStore();\n            let errorMessage = 'Failed to save First Play Settings due to a server error.';\n\n            if (data.status === 'error') {\n                if (data.errors) {\n                    // Directly use the validation errors from the server response\n                    this.validationErrors = data.errors;\n                    errorMessage = \"Please check your input.\";\n                } else if (data.message) {\n                    // Use the message provided by the server as the error message\n                    errorMessage = data.message;\n                }\n\n                notificationStore.setToastNotification(errorMessage, 'error');\n            }\n        },\n    },\n\n    // Getters (if needed)\n    getters: {\n        filteredItems: (state) => state.items, // Placeholder, adjust if you need actual filtering\n        currentItem: (state) => state.items.find((item) => item.id === state.activeItem),\n        // setHeader: (state) => state.modalHeader = state.currentType + ' list',\n        paginatedItems: (state) => {\n            const start = (state.currentPage - 1) * state.itemsPerPage\n            const end = start + state.itemsPerPage\n            return state.items.slice(start, end)\n        },\n        paginatedChannels: (state) => {\n            const start = (state.currentChannelsPage - 1) * state.itemsPerChannelsPage\n            const end = start + state.itemsPerChannelsPage\n            return state.channels.slice(start, end)\n        },\n        totalModalPages(state) {\n            return Math.ceil(state.items.length / state.itemsPerPage)\n        },\n        totalChannelsPages(state) {\n            return Math.ceil(state.channels.length / state.itemsPerChannelsPage)\n        },\n        // Getter to count active channels\n        activeChannelsCount: (state) => {\n            // Use Array.prototype.filter to keep only items with 'active' true,\n            // then use the length property to get the count\n            return state.channels.filter(channel => channel.active).length;\n        },\n    },\n})\n","import { defineStore } from 'pinia'\nimport { useUserStore } from '@/Stores/UserStore'\nimport {\n    addDays,\n    addHours,\n    addMonths,\n    eachDayOfInterval,\n    eachHourOfInterval,\n    endOfMonth,\n    endOfWeek,\n    format,\n    getHours,\n    getMonth,\n    getYear,\n    isSameDay,\n    isToday,\n    isTomorrow,\n    isYesterday,\n    startOfDay,\n    startOfHour,\n    startOfMonth,\n    startOfWeek,\n    subMonths,\n} from 'date-fns'\n\n// Import dayjs and its plugins\nimport dayjs from 'dayjs'\nimport relativeTime from 'dayjs/plugin/relativeTime'\nimport timezone from 'dayjs/plugin/timezone'\nimport utc from 'dayjs/plugin/utc'\n\n// Extend dayjs with the plugins\ndayjs.extend(relativeTime)\ndayjs.extend(timezone)\ndayjs.extend(utc)\n\nfunction convertScheduleToTimezone(scheduleData) {\n    const userStore = useUserStore(); // Access the UserStore\n\n    return scheduleData.data.map(item => {\n        // Convert top-level start_time and end_time using UserStore methods\n        const startTimeInUserTz = item.start_time ? userStore.formatDateTimeFromUtcToUserTimezone(item.start_time, 'YYYY-MM-DD HH:mm:ss') : null;\n        const endTimeInUserTz = item.end_time ? userStore.formatDateTimeFromUtcToUserTimezone(item.end_time, 'YYYY-MM-DD HH:mm:ss') : null;\n\n        // Check and convert recurrenceDetails if present\n        let recurrenceDetailsInUserTz = null;\n        if (item.recurrenceDetails) {\n            const { start_time, start_date, end_date } = item.recurrenceDetails;\n            recurrenceDetailsInUserTz = {\n                ...item.recurrenceDetails,\n                start_time: start_time ? userStore.formatTimeInUserTimezone(start_time, 'HH:mm:ss') : null,\n                start_date: start_date ? userStore.formatDateTimeFromUtcToUserTimezone(start_date, 'YYYY-MM-DD') : null,\n                end_date: end_date ? userStore.formatDateTimeFromUtcToUserTimezone(end_date, 'YYYY-MM-DD') : null,\n            };\n        }\n\n        return {\n            ...item,\n            start_time: startTimeInUserTz,\n            end_time: endTimeInUserTz,\n            recurrenceDetails: recurrenceDetailsInUserTz,\n        };\n    });\n}\n\n// Helper function to get dates within the next 6 hours from viewingWindowStart\nfunction getUpcomingContentDates(viewingWindowStart) {\n    let dates = [];\n    let start = new Date(viewingWindowStart);\n    for (let i = 0; i < 6; i++) {\n        dates.push(new Date(start.setHours(start.getHours() + i)));\n    }\n    return dates;\n}\n\nconst initialState = () => ({\n    viewingWindowStart: new Date(),\n    currentMonth: new Date(),\n    selectedDay: new Date(),\n    // viewingMode: 'automatic', // or 'userSelected'\n    fiveDaySixHourSchedule: [], // Holds the schedule shows 5 day / 6 hour structured data\n    todaysContent: [],\n    weeklyContent: [],\n    dataFetchLog: [],\n})\n\nexport const useScheduleStore = defineStore('scheduleStore', {\n    state: initialState,\n    actions: {\n        resetAll() {\n            // Reset the store to its original state (clear all data)\n            Object.assign(this, initialState())\n        },\n        reset() {\n            const now = new Date()\n            this.viewingWindowStart = now\n            this.currentMonth = now\n            this.selectedDay = now\n        },\n        async setSelectedDay(day) {\n            this.selectedDay = day\n            // Explicitly set the viewingWindowStart to 4 AM for the selected day\n            this.viewingWindowStart = addHours(startOfDay(day), 4)\n\n            // Check if the week of the selected day is already loaded\n            const weekStart = startOfWeek(day, {weekStartsOn: 0});\n            const weekEnd = endOfWeek(day, {weekStartsOn: 0});\n\n            // First, check if we need to load data for the new week\n            if (this.needsDataForWeek(weekStart, weekEnd)) {\n                // If new data is needed for the week, load it\n                await this.loadWeekFromDate(day).catch(error => {\n                    console.error(\"Failed to load data for the new week:\", error);\n                });\n            }\n\n            // Then, check and fetch for any missing upcoming content\n            // This is necessary in case the week data is present but specific upcoming content within the week is missing\n            await this.checkAndFetchForUpcomingContent();\n        },\n        setSelectedDayToToday(day) {\n            const now = new Date()\n            this.selectedDay = now\n            this.viewingWindowStart = startOfHour(now)\n        },\n        async changeDay(days) {\n            const currentTime = this.viewingWindowStart.getHours() * 60 + this.viewingWindowStart.getMinutes()\n            let newDay = addDays(startOfDay(this.viewingWindowStart), days)\n            newDay = new Date(newDay.setMinutes(currentTime)) // Preserve time of day\n\n            this.selectedDay = newDay\n            this.viewingWindowStart = newDay\n\n            // Check if the week of the new day is already loaded\n            const weekStart = startOfWeek(newDay, {weekStartsOn: 0});\n            const weekEnd = endOfWeek(newDay, {weekStartsOn: 0});\n\n            // Check for the need to load data for the new week\n            if (this.needsDataForWeek(weekStart, weekEnd)) {\n                await this.loadWeekFromDate(newDay).catch(error => {\n                    console.error(\"Failed to load data for the new week:\", error);\n                });\n            }\n\n            // Then, check and fetch for any missing upcoming content\n            await this.checkAndFetchForUpcomingContent();\n        },\n        async shiftHours(hours) {\n            // Shift the viewing window\n            this.viewingWindowStart = addHours(this.viewingWindowStart, hours);\n\n            // Update selectedDay if the day has changed\n            if (!isSameDay(this.viewingWindowStart, this.selectedDay)) {\n                this.selectedDay = startOfDay(this.viewingWindowStart);\n            }\n\n            // Check if the week of the new viewing window is already loaded\n            const weekStart = startOfWeek(this.viewingWindowStart, { weekStartsOn: 0 });\n            const weekEnd = endOfWeek(this.viewingWindowStart, { weekStartsOn: 0 });\n\n            // Check for the need to load data for the new week\n            if (this.needsDataForWeek(weekStart, weekEnd)) {\n                await this.loadWeekFromDate(this.viewingWindowStart).catch(error => {\n                    console.error(\"Failed to load data for the new week:\", error);\n                });\n            }\n\n            // Then, check and fetch for any missing upcoming content\n            await this.checkAndFetchForUpcomingContent();\n        },\n        isElevenPM(date) {\n            return getHours(date) === 23 // Checks if the hour is 23 (11 PM)\n        },\n        // Actions to change the month\n        async subtractMonth() {\n            // Subtract one month from the currentMonth\n            this.currentMonth = subMonths(this.currentMonth, 1)\n\n            try {\n                await this.setSelectedDay(this.currentMonth)\n                console.log(\"Set selected day based on current month:\", this.currentMonth);\n            } catch (error) {\n                console.error(`Failed to set selected day based on current month ${this.currentMonth}:`, error);\n            }\n        },\n        async addMonth() {\n            this.currentMonth = addMonths(this.currentMonth, 1)\n            try {\n                await this.setSelectedDay(this.currentMonth)\n                console.log(\"Set selected day based on current month:\", this.currentMonth);\n            } catch (error) {\n                console.error(`Failed to set selected day based on current month ${this.currentMonth}:`, error);\n            }\n        },\n        async fetchFiveDaySixHourSchedule() {\n            try {\n                const userStore = useUserStore()\n                const response = await axios.get('/api/schedule')\n\n                // Fallback to response timezone if userStore.timezone is not set\n                const timezone = userStore.timezone || response.data.userTimezone || 'UTC'; // Additional fallback to 'UTC'\n\n                // Convert the entire schedule, including nested recurrenceDetails, to the user's timezone\n                this.fiveDaySixHourSchedule = convertScheduleToTimezone(response.data, timezone)\n            } catch (error) {\n                console.error('Failed to load schedule shows:', error)\n                // Handle the error state as needed, e.g., setting an error state property\n            }\n        },\n        async fetchTodaysContent() {\n            try {\n                const userStore = useUserStore()\n                const response = await axios.get('/api/schedule/today')\n\n                // Fallback to response timezone if userStore.timezone is not set\n                const timezone = userStore.timezone || response.data.userTimezone || 'UTC'; // Additional fallback to 'UTC'\n\n                this.todaysContent = convertScheduleToTimezone(response.data, timezone)\n            } catch (error) {\n                console.error('Failed to fetch today\\'s content:', error)\n            }\n        },\n        async preloadWeeklyContent() {\n            const userStore = useUserStore()\n            try {\n                const response = await axios.get('/api/schedule/week')\n                if (!userStore.timezone) {\n                    console.error(\"Timezone is not set.\");\n                    return; // Or handle this case as appropriate for your app\n                }\n\n                // Fallback to response timezone if userStore.timezone is not set\n                const timezone = userStore.timezone || response.data.userTimezone; // Additional fallback to 'UTC'\n\n                this.weeklyContent = convertScheduleToTimezone(response.data, timezone)\n            } catch (error) {\n                console.error('Failed to preload weekly content:', error)\n            }\n        },\n        async loadWeekFromDate(date) {\n            let formattedDate; // Declare formattedDate outside of the try block\n            try {\n                const userStore = useUserStore();\n                // Ensure the date is in UTC format for the request\n                const formattedDate = date.toISOString().split('T')[0];\n                console.log(`Loading week data for date: ${formattedDate}`); // Log the date being requested\n\n                const response = await axios.get(`/api/schedule/week/${formattedDate}`);\n                console.log('Received response:', response.data); // Log the raw response data\n\n                // Fallback to response timezone if userStore.timezone is not set\n                const timezone = userStore.timezone || response.data.userTimezone || 'UTC'; // Additional fallback to 'UTC'\n                console.log(`Using timezone: ${timezone}`); // Log the timezone being used\n\n                const newData = convertScheduleToTimezone(response.data, timezone); // Ensure you are accessing the correct data property from the response\n\n                // Update the fetch log with the current fetch\n                const weekStart = startOfWeek(new Date(date), { weekStartsOn: 0 }).toISOString();\n                const weekEnd = endOfWeek(new Date(date), { weekStartsOn: 0 }).toISOString();\n                const fetchTime = new Date().toISOString();\n\n                const existingLogIndex = this.dataFetchLog.findIndex(log => log.weekStart === weekStart && log.weekEnd === weekEnd);\n                if (existingLogIndex !== -1) {\n                    this.dataFetchLog[existingLogIndex].lastFetch = fetchTime;\n                } else {\n                    this.dataFetchLog.push({ weekStart, weekEnd, lastFetch: fetchTime });\n                }\n\n                // Merge newData into weeklyContent, avoiding duplicates\n                this.weeklyContent = [...this.weeklyContent, ...newData].filter((value, index, self) =>\n                        index === self.findIndex((t) => (\n                            t.id === value.id && t.start_time === value.start_time\n                        ))\n                );\n            } catch (error) {\n                console.error(`Failed to load content for week starting ${formattedDate}:`, error);\n            }\n        },\n\n        needsDataForWeek(weekStart, weekEnd) {\n            // Extend weekEnd to cover the span of upcoming content from viewingWindowStart\n            const extendedEnd = this.calculateExtendedEndForUpcomingContent();\n\n            // Adjust weekEnd if the extended end is beyond the original weekEnd\n            if (extendedEnd > weekEnd) {\n                weekEnd = extendedEnd;\n            }\n\n            // Now weekEnd includes any additional day(s) that might be displayed\n            weekEnd.setHours(23, 59, 59, 999);\n\n            const hasDataForExtendedWeek = this.weeklyContent.some(content => {\n                const contentDate = new Date(content.start_time);\n                return contentDate >= weekStart && contentDate <= weekEnd;\n            });\n\n            console.log('Has data for extended week range:', hasDataForExtendedWeek);\n            return !hasDataForExtendedWeek;\n        },\n        calculateExtendedEndForUpcomingContent() {\n            // Assuming viewingWindowStart is the reference start time for upcoming content\n            const baseStartTime = new Date(this.viewingWindowStart);\n            // Extend by 6 hours to cover the upcoming content span\n            // Return the extended end time, potentially adjusting into the next day\n            return new Date(baseStartTime.getTime() + (6 * 60 * 60 * 1000));\n        },\n        // Function to check for and fetch missing upcoming content\n        async checkAndFetchForUpcomingContent() {\n            const upcomingDates = getUpcomingContentDates(this.viewingWindowStart);\n            const now = new Date();\n            const fifteenMinutesAgo = new Date(now.getTime() - 15 * 60000);\n\n            for (const date of upcomingDates) {\n                const dateString = date.toISOString().split('T')[0];\n                const contentCoverageAndFreshness = this.weeklyContent.some(content => {\n                    const contentDate = new Date(content.start_time).toDateString();\n                    const lastFetchedTime = this.dataFetchLog[dateString];\n                    const isFresh = lastFetchedTime && new Date(lastFetchedTime) > fifteenMinutesAgo;\n                    return date.toDateString() === contentDate && isFresh;\n                });\n\n                if (!contentCoverageAndFreshness) {\n                    // This date needs data fetching\n                    await this.fetchDataAndUpdateLog(dateString, date);\n                    break; // Assuming you fetch data for the week, so no need to check further dates within the same week\n                }\n            }\n        },\n        async fetchDataAndUpdateLog(dateString, date) {\n            try {\n                await this.loadWeekFromDate(date);\n                // Successfully fetched, so update the log\n                this.dataFetchLog[dateString] = new Date().toISOString();\n                console.log(\"Data fetched successfully for date:\", dateString);\n            } catch (error) {\n                console.error(`Failed to fetch data for date ${dateString}:`, error);\n            }\n        }\n\n    },\n\n    getters: {\n        upcomingContent: (state) => {\n            const start = new Date(state.viewingWindowStart.getTime() - 60 * 60 * 1000); // 1 hour earlier\n            const end = new Date(start.getTime() + 7 * 60 * 60 * 1000); // 6 hours later\n\n            // Filter weeklyContent for the next 6 hours window\n            return state.weeklyContent.filter(item => {\n                const itemStart = new Date(item.start_time);\n                return itemStart >= start && itemStart < end;\n            }).sort((a, b) => new Date(a.start_time) - new Date(b.start_time));\n        },\n        nextSixHours: (state) => {\n            let adjustedStart = state.viewingWindowStart\n            const end = addHours(adjustedStart, 5)\n            return eachHourOfInterval({start: adjustedStart, end})\n        },\n        dateMessage: (state) => {\n            const startDay = startOfDay(state.viewingWindowStart)\n            const formattedDate = format(startDay, 'EEEE MMMM do, yyyy')\n            if (isToday(startDay)) {\n                return `Today - ${formattedDate}`\n            } else if (isYesterday(startDay)) {\n                return `Yesterday - ${formattedDate}`\n            } else if (isTomorrow(startDay)) {\n                return `Tomorrow - ${formattedDate}`\n            } else {\n                return formattedDate\n            }\n        },\n        currentMonthIndex: (state) => getMonth(state.currentMonth), // Adds a getter to get the current month's index\n        currentMonthName: (state) => format(state.currentMonth, 'MMMM'),\n        currentYear: (state) => getYear(state.currentMonth),\n        daysInMonth: (state) => {\n            const startOfCurrentMonth = startOfMonth(state.currentMonth);\n            const endOfCurrentMonth = endOfMonth(state.currentMonth);\n\n            // Adjust these to ensure the grid starts on Sunday and ends on Saturday\n            const startOfGrid = startOfWeek(startOfCurrentMonth, { weekStartsOn: 0 });\n            const endOfGrid = endOfWeek(endOfCurrentMonth, { weekStartsOn: 0 });\n\n            // Generate the days for the calendar grid\n            return eachDayOfInterval({ start: startOfGrid, end: endOfGrid });\n        },\n        isToday: (state) => {\n            const today = new Date()\n            const viewingStart = new Date(state.viewingWindowStart)\n\n            return today.toDateString() === viewingStart.toDateString()\n        },\n    },\n})\n","import { onBeforeMount, onMounted } from 'vue'\nimport { useUserStore } from \"@/Stores/UserStore\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useVideoPlayerStore } from \"@/Stores/VideoPlayerStore\"\nimport { Inertia } from '@inertiajs/inertia'\n\nexport function usePageSetup(pageName) {\n    const userStore = useUserStore()\n    const appSettingStore = useAppSettingStore()\n    const videoPlayerStore = useVideoPlayerStore()\n\n    appSettingStore.currentPage = pageName\n    appSettingStore.showFlashMessage = true\n    appSettingStore.pageIsHidden = false\n\n    if (userStore.isMobile) {\n        appSettingStore.ott = 0\n    }\n\n    videoPlayerStore.makeVideoTopRight()\n\n    if (appSettingStore.pageReload) {\n        appSettingStore.pageReload = false\n        window.location.reload(true);\n    }\n    // Check if the URL contains query strings\n\n\n    // Only scroll into view if there are no query strings\n\n        // const topDiv = document.getElementById(\"topDiv\")\n        // if (topDiv) {\n        //     topDiv.scrollIntoView()\n        // }\n        Inertia.on('navigate', (event) => {\n            const hasQueryStrings = window.location.search !== '';\n            if (!hasQueryStrings || appSettingStore.shouldScrollToTop) {\n                requestAnimationFrame(() => {\n                    const topDiv = document.getElementById(\"topDiv\");\n                    if (topDiv) {\n                        topDiv.scrollIntoView({behavior: 'auto'});\n                    } else {\n                        window.scrollTo(0, 0);\n                    }\n                });\n            }\n            appSettingStore.shouldScrollToTop = false;\n        })\n    // Only update if we're not already on this page to avoid overwriting with the current URL\n    appSettingStore.setPrevUrl()\n    appSettingStore.showOttButtons = true\n    appSettingStore.noLayout = false\n\n    // Inertia.reload()\n\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".source-selector[data-v-c559967c]{//margin-top:.5rem}.is-priority[data-v-c559967c]{color:#000;font-weight:300}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/Components/Pages/Admin/Channels/SourceSelector.vue\"],\"names\":[],\"mappings\":\"AA8EA,kCAEE,kBACF,CAMA,8BAEE,UAAY,CACZ,eACF\",\"sourcesContent\":[\"<template>\\n  <!--  <div class=\\\"source-selector\\\" :class=\\\"{'is-priority': source?.isPriority, 'is-playing': source?.isPlaying, 'is-fallback': source?.isFallback, 'has-error': source?.hasError}\\\">-->\\n  <div\\n      :class=\\\"['source-selector', {'is-priority': source?.playback_priority_type, 'is-playing': source?.isPlaying, 'is-fallback': source?.isFallback, 'has-error': source?.hasError}]\\\">\\n    <div>\\n      <!-- Display the source status here (playing, fallback, error) -->\\n      <div v-if=\\\"source?.playback_priority_type === sourceType\\\" class=\\\"btn btn-xs mt-1 text-white bg-green-500 hover:bg-green-500\\\">Priority</div>\\n      <span>\\n\\n      </span>\\n      <!-- Icon or button to set this source as priority -->\\n      <!--      <button class=\\\"btn btn-xs\\\" v-if=\\\"!source?.playback_priority_type\\\" @click=\\\"setPriority\\\">Set as Priority</button>-->\\n    </div>\\n  </div>\\n\\n  <!--  <div v-if=\\\"source?.playback_priority_type === 'mistStream'\\\">-->\\n  <!--    <button class=\\\"btn btn-xs hover:bg-green-500 bg-green-500\\\">Priority</button>-->\\n  <!--  </div>-->\\n\\n  <button v-if=\\\"source?.playback_priority_type !== sourceType\\\" class=\\\"btn btn-xs mt-1\\\"\\n          @click=\\\"setPriority\\\">Set as Priority\\n  </button>\\n\\n\\n  <dialog :id=\\\"`confirmPriorityChangeModal`\\\" class=\\\"modal\\\">\\n    <div class=\\\"modal-box\\\">\\n      <h3 class=\\\"font-bold text-lg\\\">Confirm Selection for {{ adminStore.sourceSelector?.source?.name }}</h3>\\n      <p class=\\\"py-4\\\">\\n        Are you sure you want to change priority to <span class=\\\"font-bold\\\">{{ adminStore.sourceSelector?.sourceType }}</span>?\\n      </p>\\n      <div class=\\\"modal-action\\\">\\n        <button class=\\\"btn\\\" @click=\\\"confirmPriorityChange\\\">Confirm</button>\\n        <button class=\\\"btn\\\" onclick=\\\"document.getElementById('confirmPriorityChangeModal').close()\\\">Cancel</button>\\n      </div>\\n    </div>\\n  </dialog>\\n\\n\\n</template>\\n\\n<script setup>\\nimport { useAdminStore } from '@/Stores/AdminStore'\\nimport { ref } from 'vue'\\n\\nconst adminStore = useAdminStore()\\n\\nlet props = defineProps([\\n  'source',\\n  'sourceType',\\n])\\n\\n// const setPriority = (sourceType) => {\\n//   emit('change', { sourceType, priority: true });\\n//   // Implement function to make API call to update the backend\\n// };\\n\\n\\nconst setPriority = () => {\\nadminStore.sourceSelector.source = props.source\\nadminStore.sourceSelector.sourceType = props.sourceType\\n  document.getElementById('confirmPriorityChangeModal').showModal() // Open the modal for confirmation\\n}\\n\\nconst confirmPriorityChange = async () => {\\n  await adminStore.setPlaybackPriorityType(adminStore.sourceSelector.source, adminStore.sourceSelector.sourceType)\\n  document.getElementById('confirmPriorityChangeModal').close() // Close the modal\\n\\n}\\n\\n// const setPriority = async () => {\\n//   // Directly call the store action to update the priority.\\n//   await adminStore.setPlaybackPriorityType(props.source, props.sourceType);\\n//   // No need to emit an event to the parent component.\\n// };\\n\\n</script>\\n\\n<style scoped>\\n.source-selector {\\n  /* Base styles */\\n  //margin-top: 0.5rem;\\n}\\n\\n.is-playing {\\n  /* Styles for playing status */\\n}\\n\\n.is-priority {\\n  /* Styles for isPriority status */\\n  color: black;\\n  font-weight: 300;\\n}\\n\\n.is-fallback {\\n  /* Styles for fallback status */\\n}\\n\\n.has-error {\\n  /* Styles for error status */\\n}\\n\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"#tooltip[data-v-1ef2a708]{background:#333;border-radius:4px;color:#fff;font-size:13px;font-weight:700;padding:4px 8px}[data-v-1ef2a708] .popper{background:#333;border-radius:20px;color:#fff;font-weight:700;padding:2px;text-transform:uppercase}[data-v-1ef2a708] .popper #arrow:before{background:#333}[data-v-1ef2a708] .popper:hover,[data-v-1ef2a708] .popper:hover>#arrow:before{background:#333}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/Pages/Admin/Schedule/Index.vue\"],\"names\":[],\"mappings\":\"AA+KA,0BACE,eAAgB,CAKhB,iBAAkB,CAJlB,UAAY,CAGZ,cAAe,CAFf,eAAiB,CACjB,eAGF,CAEA,0BACE,eAAmB,CAEnB,kBAAmB,CACnB,UAAW,CACX,eAAiB,CAHjB,WAAY,CAIZ,wBACF,CAEA,wCACE,eACF,CAEA,8EAEE,eACF\",\"sourcesContent\":[\"<template>\\n  <Head title=\\\"Admin/Schedule\\\"/>\\n\\n  <div class=\\\"place-self-center flex flex-col\\\">\\n    <div id=\\\"topDiv\\\" class=\\\"bg-white text-black dark:bg-gray-800 dark:text-gray-50 p-5 mb-10\\\">\\n\\n      <Message v-if=\\\"appSettingStore.showFlashMessage\\\" :flash=\\\"$page.props.flash\\\"/>\\n\\n      <AdminHeader>Schedule</AdminHeader>\\n\\n      <div class=\\\"flex flex-row justify-between gap-x-4 mb-3\\\">\\n        <div>\\n          <Link :href=\\\"`#`\\\">\\n            <button\\n                class=\\\"btn btn-sm bg-green-500 hover:bg-green-600 text-white px-4 py-2 mr-2 rounded disabled:bg-gray-400\\\"\\n                disabled\\n            >Blank\\n            </button>\\n          </Link>\\n          <Link :href=\\\"`#`\\\">\\n            <button\\n                class=\\\"btn btn-sm bg-green-500 hover:bg-green-600 text-white px-4 py-2 mr-2 rounded disabled:bg-gray-400\\\"\\n                disabled\\n            >Blank\\n            </button>\\n          </Link>\\n          <Link :href=\\\"`#`\\\">\\n            <button\\n                class=\\\"btn btn-sm bg-green-500 hover:bg-green-600 text-white px-4 py-2 mr-2 rounded disabled:bg-gray-400\\\"\\n                disabled\\n            >Blank\\n            </button>\\n          </Link>\\n          <button\\n              @click.prevent=\\\"purgeAllCaches\\\"\\n              class=\\\"btn btn-sm bg-green-500 hover:bg-green-600 text-white px-4 py-2 mr-2 rounded-lg disabled:bg-gray-400\\\"\\n          >\\n            Purge All Caches\\n          </button>\\n\\n\\n        </div>\\n        <input v-model=\\\"adminStore.searchTerm\\\" type=\\\"search\\\" placeholder=\\\"Search...\\\" class=\\\"border px-2 rounded-lg\\\"/>\\n      </div>\\n\\n      <div class=\\\"flex flex-col\\\">\\n        <div class=\\\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\\\">\\n          <div class=\\\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\\\">\\n            <div class=\\\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\\\">\\n\\n              <div class=\\\"relative overflow-x-auto shadow-md sm:rounded-lg\\\">\\n                <div\\n                    class=\\\"table w-full text-sm text-left text-gray-500 dark:text-gray-400\\\"\\n                >\\n                  <div\\n                      class=\\\"table-header-group text-xs text-gray-700 bg-gray-50 dark:bg-gray-700 dark:text-gray-400\\\"\\n                  >\\n                    <div class=\\\"table-row\\\">\\n                      <div scope=\\\"col\\\" class=\\\"table-cell px-6 py-3 uppercase\\\">\\n                        <font-awesome-icon icon=\\\"fa-repeat\\\" class=\\\"mr-2 cursor-pointer hover:text-blue-500\\\"\\n                                           @click.prevent=\\\"resetCalendar\\\"/>\\n                        <span class=\\\"uppercase\\\">Calendar </span>\\n                      </div>\\n\\n\\n                    </div>\\n                  </div>\\n                  <div class=\\\"table-row-group\\\">\\n\\n                    <div class=\\\"calendar\\\">\\n\\n                      <!-- Calendar View -->\\n                      <div class=\\\"calendar-view\\\">\\n                        <MonthView />\\n\\n                        <!-- View Selector -->\\n                        <div class=\\\"view-selector px-6 space-x-2 border-t-2 border-gray-50 pt-6\\\">\\n                          <span class=\\\"text-xm uppercase font-semibold tracking-wider\\\">View: </span>\\n                          <button @click=\\\"setView('week')\\\" class=\\\"py-1 px-2 text-black rounded-lg\\\" :class=\\\"[currentView === 'week' ? 'bg-blue-200' : 'bg-gray-100 hover:bg-gray-200']\\\">Week</button>\\n                          <button @click=\\\"setView('threeDay')\\\" class=\\\"py-1 px-2 text-black rounded-lg\\\" :class=\\\"[currentView === 'threeDay' ? 'bg-blue-200' : 'bg-gray-100 hover:bg-gray-200']\\\">3-Day</button>\\n                          <button @click=\\\"setView('oneDay')\\\" class=\\\"py-1 px-2 text-black rounded-lg\\\" :class=\\\"[currentView === 'oneDay' ? 'bg-blue-200' : 'bg-gray-100 hover:bg-gray-200']\\\">1-Day</button>\\n                          <button  @click=\\\"setToToday\\\" class=\\\"py-1 px-2 text-black rounded-lg\\\" :class=\\\"{'bg-blue-200': scheduleStore.isToday, 'bg-gray-100 hover:bg-gray-200': !scheduleStore.isToday}\\\">Today</button>\\n                        </div>\\n                        <WeekView v-if=\\\"currentView === 'week'\\\"/>\\n                        <ThreeDayView v-if=\\\"currentView === 'threeDay'\\\"/>\\n                        <TodayView v-if=\\\"currentView === 'oneDay'\\\"/>\\n                      </div>\\n                    </div>\\n\\n\\n\\n\\n\\n                  </div>\\n                </div>\\n\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n\\n\\n\\n\\n\\n      </div>\\n    </div>\\n  </div>\\n\\n</template>\\n\\n\\n<script setup>\\nimport { Inertia } from '@inertiajs/inertia'\\nimport { onBeforeUnmount, onMounted, onUnmounted, ref, watch } from 'vue'\\nimport throttle from 'lodash/throttle'\\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome'\\nimport { usePageSetup } from '@/Utilities/PageSetup'\\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\\nimport { useScheduleStore } from '@/Stores/ScheduleStore'\\nimport { useAdminStore } from '@/Stores/AdminStore'\\nimport AdminHeader from '@/Components/Pages/Admin/AdminHeader'\\nimport Message from '@/Components/Global/Modals/Messages'\\nimport Pagination from '@/Components/Global/Paginators/Pagination'\\nimport SourceSelector from '@/Components/Pages/Admin/Channels/SourceSelector'\\nimport DynamicModal from '@/Components/Pages/Admin/Channels/DynamicModal'\\nimport AddOrUpdateMistStreamModal from '@/Components/Global/MistStreams/AddOrUpdateMistStreamModal'\\nimport MonthView from '@/Components/Global/Calendar/MonthView'\\nimport WeekView from '@/Components/Global/Calendar/WeekView'\\nimport ThreeDayView from '@/Components/Global/Calendar/ThreeDayView'\\nimport TodayView from '@/Components/Global/Calendar/TodayView'\\n\\nusePageSetup('admin.schedule')\\n\\nconst appSettingStore = useAppSettingStore()\\nconst scheduleStore = useScheduleStore()\\nconst adminStore = useAdminStore()\\n\\nlet props = defineProps({})\\n\\nconst reloadSchedule = () => {\\n  //\\n}\\n\\nconst setToToday = () => {\\n  // Use the existing action to set the selected day to today\\n  scheduleStore.setSelectedDayToToday(new Date());\\n  currentView.value = 'oneDay'\\n};\\n\\nconst currentView = ref('oneDay')\\n\\nconst setView = (view) => {\\n  currentView.value = view\\n}\\n\\nconst purgeAllCaches = () => {\\n  scheduleStore.resetAll()\\n  Inertia.post('/invalidate-caches/')\\n  Inertia.reload()\\n}\\n\\nconst resetCalendar = () => {\\n  scheduleStore.reset()\\n  scheduleStore.checkAndFetchForUpcomingContent()\\n}\\n\\nonBeforeUnmount(() => {\\n  scheduleStore.reset()\\n})\\n\\n</script>\\n\\n<style scoped>\\n\\n#tooltip {\\n  background: #333;\\n  color: white;\\n  font-weight: bold;\\n  padding: 4px 8px;\\n  font-size: 13px;\\n  border-radius: 4px;\\n}\\n\\n:deep(.popper) {\\n  background: #333333;\\n  padding: 2px;\\n  border-radius: 20px;\\n  color: #fff;\\n  font-weight: bold;\\n  text-transform: uppercase;\\n}\\n\\n:deep(.popper #arrow::before) {\\n  background: #333333;\\n}\\n\\n:deep(.popper:hover),\\n:deep(.popper:hover > #arrow::before) {\\n  background: #333333;\\n}\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","<template>\n  <!-- Today view layout -->\n  <div class=\"today-view container mx-auto px-4 py-8 flex flex-col\">\n    <button  v-if=\"!scheduleStore.isToday\"\n             @click=\"scheduleStore.setSelectedDayToToday(new Date());\"\n             class=\"py-1 px-2 text-white rounded-lg w-fit\"\n             :class=\"{'bg-blue-300': scheduleStore.isToday, 'bg-green-600 hover:bg-green-700': !scheduleStore.isToday}\">\n      Go To Now</button>\n    <div class=\"flex justify-center text-center mb-4\">\n      <h2 class=\"text-3xl font-bold mb-2\">{{ dateMessage }}</h2>\n    </div>\n    <div class=\"flex justify-between items-center mb-4\">\n      <button\n          @click=\"scheduleStore.changeDay(-1)\"\n          class=\"bg-gray-100 hover:bg-gray-200 text-black p-2 rounded shadow\"\n      >\n        &lt; Previous Day\n      </button>\n      <div class=\"flex flex-col text-center\">\n\n        <h3>{{ userStore.canadianTimezoneDescription }} Time</h3>\n      </div>\n      <button\n          @click=\"scheduleStore.changeDay(1)\"\n          class=\"bg-gray-100 hover:bg-gray-200 text-black p-2 rounded shadow\"\n      >\n        Next Day &gt;\n      </button>\n    </div>\n    <button\n        @click=\"scheduleStore.shiftHours(-6)\"\n        class=\"mb-4 bg-gray-100 hover:bg-gray-200 text-black py-2 rounded shadow\"\n    >\n      &#8593; Back 6 Hours\n    </button>\n\n    <div class=\"flex flex-col flex-grow\">\n      <div v-for=\"(hour, index) in scheduleStore.nextSixHours\" :key=\"hour.toString()\">\n\n        <!-- Time Segment Label -->\n        <div\n            v-if=\"index === 0 || getTimeSegment(hour).segment !== getTimeSegment(scheduleStore.nextSixHours[index - 1]).segment\"\n            :class=\"getTimeSegment(hour).color\"\n            class=\"mb-4 p-2 text-black text-center font-bold text-2xl rounded shadow\">\n          {{ getTimeSegment(hour).segment }}\n        </div>\n\n        <!-- Content for the current hour -->\n        <template v-for=\"item in upcomingContent\">\n          <div v-if=\"isWithinCurrentHour(item, hour)\" :key=\"item.id\"\n               :class=\"['p-4 rounded-lg shadow', getTimeSegment(new Date(item.start_time)).color, 'mb-4']\">\n            <div class=\"flex flex-row\">\n              <div class=\"flex flex-col w-28 max-w-28 mr-4 text-gray-500\">\n                <div class=\"font-bold text-black break-words\">{{\n                    formatHour(new Date(item.start_time))\n                  }}&nbsp;{{ userStore.timezoneAbbreviation }}\n                </div>\n                <div class=\"break-words\">{{ formatDuration(item.durationMinutes) }}</div>\n              </div>\n              <div class=\"\">\n                <button @click.prevent=\"goToContentPage(item)\">\n                  <SingleImage v-if=\"item.type === 'show'\" :image=\"item?.content?.show?.image\"\n                               :alt=\"item?.content?.show?.name\" class=\"w-20 h-20\"/>\n                  <SingleImage v-else :image=\"item?.content?.image\" :alt=\"item?.content?.name\" class=\"w-20 h-20\"/>\n                </button>\n              </div>\n              <div class=\"ml-4\">\n                <div class=\"text-gray-800 text-2xl tracking-wider mt-auto\">\n                  <button @click.prevent=\"goToContentPage(item)\" class=\"text-left\">\n                    <span v-if=\"item.type === 'show'\">{{ item?.content?.show?.name }}</span>\n                    <span v-if=\"item.type === 'movie'\">{{ item?.content?.name }}</span>\n                  </button>\n                </div>\n                <div class=\"mt-2\">\n                  <div class=\"text-gray-700 flex flex-wrap\">\n                    <div class=\"ml-1 my-1 text-xs font-semibold tracking-wide uppercase\">\n                      <span v-if=\"item.type === 'show'\" class=\"text-green-500 bg-gray-900 px-2 py-1 rounded\">show</span>\n                      <span v-if=\"item.type === 'movie'\"\n                            class=\"text-pink-500 bg-gray-900 px-2 py-1 rounded\">movie</span>\n                    </div>\n                    <div v-if=\"item?.content?.show?.category?.name || item?.content?.category?.name\"\n                         class=\"ml-1 my-1 font-semibold text-xs uppercase tracking-wider text-yellow-600 bg-gray-900 px-2 py-1 rounded\">\n                    <span v-if=\"item.type === 'show' && item?.content?.show?.category?.name\"\n                          class=\"\">{{ item?.content?.show?.category?.name }}</span>\n                      <span v-if=\"item.type === 'movie' && item?.content?.subCategory?.name\"\n                            class=\"\">{{ item?.content?.category?.name }}</span>\n                    </div>\n                    <div v-if=\"item?.content?.show?.subCategory?.name || item?.content?.subCategory?.name\"\n                         class=\"ml-1 my\n                         -1 text-xs font-semibold tracking-wide text-yellow-500 bg-gray-900 px-2 py-1 rounded\">\n                      <span v-if=\"item.type === 'show'\" class=\"\">{{ item?.content?.show?.subCategory?.name }}</span>\n                      <span v-if=\"item.type === 'movie'\" class=\"\">{{ item?.content?.subCategory?.name }}</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </template>\n\n\n        <!-- Fallback if no content is found for the current hour -->\n        <div v-if=\"!isContentAvailableForHour(hour)\" :class=\"getTimeSegment(hour).color\"\n             class=\"mb-4 p-4 rounded-lg shadow text-gray-500\">\n          <div class=\"font-semibold\">{{ formatHour(hour) }}&nbsp;{{ userStore.timezoneAbbreviation }}</div>\n          <div>Nothing scheduled.</div>\n        </div>\n\n        <!-- Dynamically insert the dateMessage for the next day if the hour is 11 PM -->\n        <div v-if=\"scheduleStore.isElevenPM(hour) && scheduleStore.nextSixHours[index + 1]\"\n             class=\"my-4 p-2 bg-blue-800 text-white rounded shadow\">\n          {{ generateDateMessage(addHours(hour, 1)) }}\n        </div>\n      </div>\n    </div>\n\n    <button\n        @click=\"scheduleStore.shiftHours(6)\"\n        class=\"bg-gray-100 hover:bg-gray-200 text-black py-2 rounded shadow\"\n    >\n      &#8595; Forward 6 Hours\n    </button>\n  </div>\n</template>\n\n<script setup>\n// Today view logic\n// import { ref, computed } from 'vue'\nimport { useScheduleStore } from '@/Stores/ScheduleStore'\nimport { useUserStore } from '@/Stores/UserStore'\nimport {\n  format,\n  startOfHour,\n  addHours,\n  isToday,\n  isYesterday,\n  isTomorrow,\n  startOfDay,\n  isWithinInterval,\n  isSameDay,\n} from 'date-fns'\nimport { storeToRefs } from 'pinia'\nimport { computed, onMounted, ref, watch, watchEffect } from 'vue'\nimport SingleImage from '@/Components/Global/Multimedia/SingleImage.vue'\nimport { Inertia } from '@inertiajs/inertia'\n\nconst scheduleStore = useScheduleStore()\nconst userStore = useUserStore()\nconst {upcomingContent, dateMessage} = storeToRefs(scheduleStore)\n\nconst selectedDay = ref(scheduleStore.selectedDay)\nconst weeklyContent = computed(() => scheduleStore.weeklyContent)\n\nwatch(selectedDay, (newValue) => {\n  scheduleStore.setSelectedDay(newValue)\n  // If necessary, trigger other actions when selectedDay changes\n})\n\nfunction isWithinCurrentHour(item, hour) {\n  const startOfCurrentHour = startOfHour(hour)\n  const endOfCurrentHour = addHours(startOfCurrentHour, 1)\n  const contentStartTime = new Date(item.start_time)\n  return contentStartTime >= startOfCurrentHour && contentStartTime < endOfCurrentHour\n}\n\n// Assuming `upcomingContent` is a computed property that already filters\n// content within a 6-hour window from `scheduleStore.viewingWindowStart`\nfunction isContentAvailableForHour(hour) {\n  // Convert the given hour to the start and end of that hour block\n  const startOfCurrentHour = startOfHour(hour)\n  const endOfCurrentHour = addHours(startOfCurrentHour, 1)\n\n  // Check if any item in `upcomingContent` starts within this hour block\n  return upcomingContent.value.some(item => {\n    const contentStartTime = new Date(item.start_time)\n    return contentStartTime >= startOfCurrentHour && contentStartTime < endOfCurrentHour\n  })\n}\n\nfunction formatHour(date) {\n  return format(date, 'h:mm aaaa')\n}\n\nfunction getTimeSegment(hour) {\n  const hourOfDay = hour.getHours()\n  if (hourOfDay >= 4 && hourOfDay < 6) return {segment: 'Early Morning', color: 'bg-gray-200'}\n  if (hourOfDay >= 6 && hourOfDay < 12) return {segment: 'Morning', color: 'bg-yellow-200'}\n  if (hourOfDay >= 12 && hourOfDay < 17) return {segment: 'Afternoon', color: 'bg-green-200'}\n  if (hourOfDay >= 17 && hourOfDay < 20) return {segment: 'Prime Time', color: 'bg-red-200'}\n  if (hourOfDay >= 20 && hourOfDay < 23) return {segment: 'Late Prime Time', color: 'bg-purple-200'}\n  if (hourOfDay >= 23 || hourOfDay < 1) return {segment: 'Late Night', color: 'bg-blue-200'}\n  if (hourOfDay >= 1 && hourOfDay < 4) return {segment: 'Overnight', color: 'bg-indigo-200'}\n  return {segment: '', color: ''} // Default case\n}\n\n// A computed property to determine the starting segment for the displayed hours\nconst startingSegment = computed(() => scheduleStore.nextSixHours.value.length > 0 ? getTimeSegment(scheduleStore.nextSixHours.value[0]) : null)\n\nfunction generateDateMessage(date) {\n  // This method mirrors the logic in the store's getter but accepts any date.\n  const startDay = startOfDay(date)\n  const formattedDate = format(startDay, 'EEEE, MMMM do')\n  if (isToday(startDay)) {\n    return `Today - ${formattedDate}`\n  } else if (isYesterday(startDay)) {\n    return `Yesterday - ${formattedDate}`\n  } else if (isTomorrow(startDay)) {\n    return `Tomorrow - ${formattedDate}`\n  } else {\n    return formattedDate\n  }\n}\n\nconst goToContentPage = (item) => {\n  if (item.type === 'show') {\n    Inertia.visit(`/shows/${item.content.show.slug}`)\n  } else if (item.type === 'movie') {\n    Inertia.visit(`/movies/${item.content.slug}`)\n  }\n}\n\nconst formatDuration = (minutes) => {\n  if (minutes < 60) {\n    return `${minutes} minutes`\n  } else if (minutes === 60) {\n    return `1 hour`\n  } else {\n    const hours = Math.floor(minutes / 60)\n    const remainingMinutes = minutes % 60\n    if (remainingMinutes === 0) {\n      return `${hours} hours`\n    } else {\n      return `${hours} hour${hours > 1 ? 's' : ''} and ${remainingMinutes} minutes`\n    }\n  }\n}\n\n\n// Define a reactive watcher on the timezone\n// This watcher will call preloadWeeklyContent whenever the timezone changes and is not null\nwatch(\n    () => userStore.timezone,\n    async (newTimezone, oldTimezone) => {\n      // Ensure the timezone is set before calling preloadWeeklyContent\n      if (newTimezone) {\n        await scheduleStore.preloadWeeklyContent()\n      }\n    },\n    {immediate: true}, // This option ensures the watcher is triggered immediately on mount\n)\n\n// Optionally, keep the onMounted if there are other initialization tasks\nonMounted(async () => {\n  // Check if timezone is already available on mount and preload content if it hasn't been done by the watcher\n  if (userStore.timezone) {\n    await scheduleStore.preloadWeeklyContent()\n  }\n})\n</script>\n\n<style scoped>\n/* Styles specific to today view */\n</style>","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-9.use[1]!../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-9.use[2]!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./TodayView.vue?vue&type=style&index=0&id=c20ec346&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./TodayView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TodayView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./TodayView.vue?vue&type=style&index=0&id=c20ec346&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-c20ec346\"]])\n\nexport default __exports__","import script from \"./AddOrUpdateMistStreamModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AddOrUpdateMistStreamModal.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n\n  <dialog :id=\"id\" class=\"modal\">\n    <div class=\"modal-box w-11/12 max-w-5xl\">\n      <h3 class=\"font-bold text-lg\">\n        <slot name=\"form-title\">Default Form Title</slot>\n      </h3>\n\n\n      <div>\n        <slot name=\"form-description\">Default Form Description</slot>\n      </div>\n      <div>\n        <div class=\"flex flex-col space-y-2 px-12 mt-6\">\n          <form @submit.prevent=\"submit\">\n\n            <label class=\"block mb-2 uppercase font-bold text-xs dark:text-gray-200\"\n                   for=\"name\">Stream Name</label>\n            <input v-model=\"form.name\"\n                   class=\"bg-gray-50 border border-gray-400 text-gray-900 text-sm p-2 w-full rounded-lg focus:ring-blue-500 focus:border-blue-500 block\"\n                   type=\"text\"\n                   name=\"name\"\n                   id=\"name\" placeholder=\"Stream Name...\">\n            <div v-if=\"form.errors.name\" v-text=\"form.errors.name\" class=\"text-xs text-red-600 mt-1\"></div>\n\n            <label class=\"block mt-4 mb-2 uppercase font-bold text-xs dark:text-gray-200\"\n                   for=\"name\">Source</label>\n            <input v-model=\"form.source\"\n                   class=\"bg-gray-50 border border-gray-400 text-gray-900 text-sm p-2 w-full rounded-lg focus:ring-blue-500 focus:border-blue-500 block\"\n                   type=\"text\"\n                   name=\"source\"\n                   id=\"source\" placeholder=\"Source...\">\n            <div v-if=\"form.errors.source\" v-text=\"form.errors.source\" class=\"text-xs text-red-600 mt-1\"></div>\n\n            <label class=\"block mt-4 mb-2 uppercase font-bold text-xs dark:text-gray-200\"\n                   for=\"name\">MIME Type</label>\n            <input v-model=\"form.mime_type\"\n                   class=\"bg-gray-50 border border-gray-400 text-gray-900 text-sm p-2 w-full rounded-lg focus:ring-blue-500 focus:border-blue-500 block\"\n                   type=\"text\"\n                   name=\"mime_type\"\n                   id=\"mime_type\" placeholder=\"MIME Type...\">\n            <div v-if=\"form.errors.mime_type\" v-text=\"form.errors.mime_type\" class=\"text-xs text-red-600 mt-1\"></div>\n\n            <label class=\"block mt-4 mb-2 uppercase font-bold text-xs dark:text-gray-200\"\n                   for=\"comment\">Comment</label>\n            <input v-model=\"form.comment\"\n                      class=\"bg-gray-50 border border-gray-400 text-gray-900 text-sm p-2 w-full rounded-lg focus:ring-blue-500 focus:border-blue-500 block\"\n                      type=\"text\"\n                      name=\"comment\"\n                      id=\"comment\" placeholder=\"Comment...\"></input>\n            <div v-if=\"form.errors.comment\" v-text=\"form.errors.comment\" class=\"text-xs text-red-600 mt-1\"></div>\n\n            <label class=\"block mt-4 mb-2 uppercase font-bold text-xs dark:text-gray-200\"\n                   for=\"metadata\">Optional Parameters</label>\n            <div v-for=\"(item, index) in form.metadata\" :key=\"index\" class=\"flex items-center\">\n              <input v-model=\"item.key\"\n                     class=\"bg-gray-50 border border-gray-400 text-gray-900 text-sm p-2 mt-2 rounded-lg focus:ring-blue-500 focus:border-blue-500\"\n                     placeholder=\"Key\">\n\n              <input v-model=\"item.value\"\n                     class=\"bg-gray-50 border border-gray-400 text-gray-900 text-sm p-2 ml-2 mt-2 rounded-lg focus:ring-blue-500 focus:border-blue-500\"\n                     placeholder=\"Value\">\n\n              <button @click.prevent=\"removeMetadataField(index)\" class=\"btn btn-sm ml-2 mt-2\">Remove</button>\n            </div>\n            <button @click.prevent=\"addMetadataField\" class=\"btn btn-sm mt-2\">Add Metadata</button>\n\n\n            <div class=\"flex flex-row justify-center pt-6\">\n              <button type=\"submit\" class=\"btn btn-wide bg-green-500 hover:bg-green-400 text-white\"\n                      :disabled=\"form.processing\">\n                <slot name=\"button-label\">Default Form Title</slot>\n              </button>\n\n            </div>\n          </form>\n        </div>\n\n      </div>\n\n\n      <div class=\"modal-action\">\n        <button class=\"btn\" @click.prevent=\"closeModal\">Cancel</button>\n        <form method=\"dialog\">\n          <!-- if there is a button, it will close the modal -->\n\n        </form>\n      </div>\n    </div>\n  </dialog>\n\n</template>\n<script setup>\nimport { reactive, ref, watch } from 'vue'\nimport { useForm } from '@inertiajs/inertia-vue3'\nimport { useChannelStore } from '@/Stores/ChannelStore'\nimport { useAdminStore } from '@/Stores/AdminStore'\n\nconst channelStore = useChannelStore()\nconst adminStore = useAdminStore()\n\nimport Label from '@/Jetstream/Label.vue'\nimport Button from '@/Jetstream/Button.vue'\n\nlet props = defineProps({\n  mistStream: Object,\n  id: String,\n  // errors: Object,\n})\n\n// const errors = ref(props.errors);\nconst modalVisible = ref(false)\n\nconst metadata = ref([{key: '', value: ''}])\nlet originalName = ref(''); // used for stream name changes\n\nconst addMetadataField = () => {\n  form.metadata.push({key: '', value: ''})\n}\n\nconst removeMetadataField = (index) => {\n  form.metadata.splice(index, 1)\n}\n\nlet form = reactive(useForm({\n  id: '',\n  name: '',\n  source: 'push://',\n  mime_type: 'application/vnd.apple.mpegurl',\n  comment: '',\n  metadata: [], // Initialize with one empty metadata entry\n}))\n\nform.reset() // on modal load, reset form.\n\n// Watch for changes in the mistStream object in your Pinia store\nwatch(() => channelStore.mistStream, (newVal) => {\n  if (newVal) {\n    // Populate the form with mistStream data\n    form.id = newVal.id || ''\n    form.name = newVal.name || ''\n    originalName.value = newVal.name || ''; // Capture the original name\n    form.source = newVal.source || 'push://'\n    form.mime_type = newVal.mime_type || 'application/vnd.apple.mpegurl'\n    form.comment = newVal.comment || ''\n\n    // Convert metadata object to array format\n    if (newVal.metadata && typeof newVal.metadata === 'object') {\n      form.metadata = Object.entries(newVal.metadata).map(([key, value]) => ({\n        key, value,\n      }))\n    } else {\n      form.metadata = [{key: '', value: ''}] // Reset to initial state if no metadata\n    }\n  } else {\n    // Reset the form to initial state if there's no mistStream selected (e.g., for adding a new stream)\n    form.reset()\n  }\n}, {deep: true, immediate: true})\n//\n// let submit = () => {\n//   form.post(route('mistStream.add'))\n//   form.name = ''\n//   form.comment = ''\n//   if (!form.errors) {\n//     document.getElementById('adminAddMistStreamModal').close()\n//   }\n// }\n\nlet submit = async () => {\n  await form.post(route('mistStream.addOrUpdate', { originalName: originalName.value })), {\n    onSuccess: () => {\n      postSubmissionActions(); // Call the async function\n    },\n    onError: () => {\n      // Handle errors if needed, e.g., log to console or show a message\n      // Errors are automatically attached to the form object\n    },\n\n  }\n  closeModal()\n}\n\nconst postSubmissionActions = async () => {\n  await adminStore.fetchItems('mistStream'); // Await the fetching of items\n  channelStore.clearMistStream(); // Clear selected mistStream\n  form.reset(); // Reset form fields\n  closeModal(); // Close modal\n};\n\nfunction closeModal() {\n  document.getElementById(props.id).close()\n  channelStore.clearMistStream()\n  // Reset the form fields to their initial values\n  form.reset()\n  // Clear all validation errors\n  form.clearErrors()\n}\n\n// function toggleModal() {\n//   console.log('Toggling modal:', !modalVisible.value)\n//   modalVisible.value = !modalVisible.value\n//   form.name = ''\n//   form.comment = ''\n// }\n</script>","import script from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"mx-4 my-4\">\n    <div class=\"alert alert-info mt-4\"\n         v-if=\"props.flash.message\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" class=\"stroke-current shrink-0 w-6 h-6\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n      </svg>\n      <span>{{ props.flash.message }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-success mt-4 mx-3\"\n         v-if=\"props.flash.success\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.success }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-warning mt-4 mx-3\"\n         v-if=\"props.flash.warning\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"/>\n      </svg>\n      <span>{{ props.flash.warning }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-error mt-4 mx-3\"\n         v-if=\"props.flash.error\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.error }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n  </div>\n\n</template>\n\n<script setup>\nimport { Inertia } from \"@inertiajs/inertia\"\nimport { computed } from \"vue\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\n\nconst appSettingStore = useAppSettingStore()\n\nappSettingStore.showFlashMessage = true\n\nlet props = defineProps({\n  flash: Object,\n\n})\n\nconst messageType = computed(() => ({\n  'text-green-700 bg-green-100 dark:bg-green-200 dark:text-green-800': props.flash.success,\n  'text-blue-700 bg-blue-100 dark:bg-blue-200 dark:text-blue-800': props.flash.message,\n  'text-orange-700 bg-orange-100 dark:bg-orange-200 dark:text-orange-800': props.flash.warning,\n  'text-red-700 bg-red-100 dark:bg-red-200 dark:text-red-800': props.flash.error,\n}))\n\nconst clearFlashMessage = async () => {\n  await Inertia.post(route('flash.clear'));\n  Inertia.reload();\n};\n</script>\n","import script from \"./Pagination.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Pagination.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div v-if=\"data.last_page > 1\" class=\"flex flex-wrap justify-center my-4 space-x-4 space-y-2\">\n    <div></div>\n    <Component\n        :is=\"link.url ? 'Link' : 'span'\"\n        v-for=\"(link, key) in data.links\"\n        :key=\"key\"\n        :href=\"link.url\"\n        @click.prevent=\"saveScrollPosition\"\n        v-html=\"link.label\"\n        class=\"px-4 py-3 text-sm leading-4 h-fit\"\n        :class=\"{ 'text-white bg-orange-400 hover:bg-orange-400 dark:bg-orange-400 dark:hover:bg-orange-400': link.active,\n                      'rounded mt-2 mr-0.5 text-gray-300 dark:text-gray-700': ! link.url,\n                      'rounded bg-gray-200 hover:bg-gray-300 dark:bg-gray-800 dark:hover:bg-gray-600 text-gray-800 dark:text-gray-50 focus:text-indigo-500 hover:shadow': link.url }\"\n    />\n  </div>\n</template>\n\n\n<script setup>\nimport { onMounted, onUpdated } from 'vue'\n\ndefineProps({\n  data: Object,\n})\nlet savedScrollPosition = 0\nconst saveScrollPosition = () => {\n  savedScrollPosition = window.scrollY\n}\nonMounted(() => {\n  window.scrollTo(0, savedScrollPosition)\n})\n</script>\n\n\n<!--class=\"px-1 text-gray-800 dark:text-gray-50 dark:hover:text-blue-400 hover:text-blue-400\"-->\n<!--:class=\"{ 'text-gray-300 dark:text-gray-700 dark:hover:text-gray-700 hover:text-gray-300': ! link.url, 'font-bold' : link.active }\"-->\n","import script from \"./AdminHeader.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AdminHeader.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <header>\n    <div class=\"flex justify-between my-3\">\n      <div class=\"mb-4 relative\">\n        <h1 class=\"text-3xl font-semibold inline-block\">\n          <slot/>\n        </h1>\n        <span v-if=\"displayBadges\" class=\"text-white font-semibold badge badge-success absolute -top-2 -right-10 flex items-center justify-center min-w-[2rem] h-[2rem] rounded-full\">{{ (badgePrimaryNumber ?? 0) > 99 ? '99+' : (badgePrimaryNumber ?? 0) }}</span>\n        <span v-if=\"displayBadges\" class=\"font-semibold badge badge-warning absolute -top-2 -right-20 flex items-center justify-center min-w-[2rem] h-[2rem] rounded-full\">{{ (badgeSecondaryNumber ?? 0) > 99 ? '99+' : (badgeSecondaryNumber ?? 0) }}</span>\n\n      </div>\n      <div>\n        <div class=\"flex flex-wrap-reverse justify-end gap-2\">\n          <Link :href=\"`/admin/settings`\">\n            <button\n                class=\"px-4 py-2 text-white bg-blue-600 hover:bg-blue-500 rounded-lg\"\n            >Admin Settings\n            </button>\n          </Link>\n        </div>\n      </div>\n    </div>\n  </header>\n\n</template>\n\n<script setup>\nimport { reactive } from 'vue'\n\nconst props = defineProps({\n  displayBadges: Boolean,\n  badgePrimaryNumber: Number,\n  badgeSecondaryNumber: Number,\n});\n\nconst defaultProps = {\n  displayBadges: false,\n};\n\nconst finalProps = reactive({ ...defaultProps, ...props });\n\n</script>\n","import script from \"./DynamicModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./DynamicModal.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <dialog id=\"dynamicModal\" class=\"modal\">\n    <div class=\"modal-box w-11/12 max-w-5xl\">\n\n      <div class=\"flex flex-row justify-between align-bottom\">\n        <div >\n         <h3 class=\"font-bold text-lg\">{{ adminStore.modalHeader }}</h3>\n        </div>\n        <div>\n          <h3>{{ adminStore?.selectedChannel?.name }}</h3>\n        </div>\n      </div>\n      <div class=\"flex justify-center mb-6\">\n        <div class=\"flex items-center mt-6 xl:mt-0\">\n          <div class=\"relative\">\n            <input v-model=\"adminStore.searchTerm\" @input=\"debouncedFetchItems\" type=\"search\" class=\"bg-gray-50 text-black text-sm rounded-full\n                        focus:outline-none focus:shadow w-64 pl-8 px-3 py-1\" placeholder=\"Search...\">\n            <div class=\"absolute top-0 flex items-center h-full ml-2\">\n              <svg class=\"fill-current text-gray-400 w-4\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n                <path\n                    d=\"M456.69 421.39 362.6 327.3a173.81 173.81 0 0 0 34.84-104.58C397.44 126.38 319.06 48 222.72 48S48 126.38 48 222.72s78.38 174.72 174.72 174.72A173.81 173.81 0 0 0 327.3 362.6l94.09 94.09a25 25 0 0 0 35.3-35.3ZM97.92 222.72a124.8 124.8 0 1 1 124.8 124.8 124.95 124.95 0 0 1-124.8-124.8Z\"/>\n              </svg>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div>\n        <div class=\"overflow-x-auto\">\n          <table class=\"table table-xs\">\n            <thead>\n            <tr>\n              <th>\n                <span v-if=\"adminStore.currentType === 'channelPlaylist'\">Active</span>\n                <span v-if=\"adminStore.currentType === 'mistStream'\">Active</span>\n              </th>\n              <th>\n                <span v-if=\"adminStore.currentType === 'channelPlaylist'\">Name</span>\n                <span v-if=\"adminStore.currentType === 'mistStream'\">Name</span>\n              </th>\n              <th>\n                <span v-if=\"adminStore.currentType === 'channelPlaylist'\">Type</span>\n                <span v-if=\"adminStore.currentType === 'mistStream'\">Source</span>\n              </th>\n              <th>\n                <span v-if=\"adminStore.currentType === 'channelPlaylist'\">Priority</span>\n                <span v-if=\"adminStore.currentType === 'mistStream'\">MIME Type</span>\n              </th>\n              <th>\n                <span v-if=\"adminStore.currentType === 'channelPlaylist'\">Repeat Mode</span>\n                <span v-if=\"adminStore.currentType === 'mistStream'\">Comment</span>\n              </th>\n              <th>\n                <span v-if=\"adminStore.currentType === 'channelPlaylist'\">Start Time</span>\n                <span v-if=\"adminStore.currentType === 'mistStream'\">Created On</span>\n              </th>\n              <th>\n                <span v-if=\"adminStore.currentType === 'channelPlaylist'\">End Time</span>\n                <span v-if=\"adminStore.currentType === 'mistStream'\"></span>\n              </th>\n              <th>\n                  <!-- For delete -->\n              </th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr v-for=\"item in adminStore.paginatedItems\" :key=\"item.id\" class=\"hover:bg-blue-300 hover:cursor-pointer\" :class=\"{'bg-yellow-500': item.id === adminStore.activeItemId}\">\n              <td @click=\"selectItem(item)\" >\n                <div v-if=\"adminStore.currentType === 'channelPlaylist'\"><span v-if=\"item.active\" class=\"text-green-500\">Active</span><span v-else class=\"text-red-700\">Inactive</span></div>\n                <span v-if=\"adminStore.currentType === 'mistStream'\"><span v-if=\"item.active\" class=\"text-green-500\">Active</span><span v-else class=\"text-red-700\">Inactive</span></span>\n              </td>\n              <td @click=\"selectItem(item)\" >\n                <span v-if=\"adminStore.currentType === 'channelPlaylist'\">{{ item.name }}</span>\n                <span v-if=\"adminStore.currentType === 'mistStream'\">{{ item.name }}</span>\n              </td>\n              <td @click=\"selectItem(item)\" >\n                <span v-if=\"adminStore.currentType === 'channelPlaylist'\">{{ item.type }}</span>\n                <span v-if=\"adminStore.currentType === 'mistStream'\">{{ item.source }}</span>\n              </td>\n              <td @click=\"selectItem(item)\" >\n                <span v-if=\"adminStore.currentType === 'channelPlaylist'\">{{ item.priority }}</span>\n                <span v-if=\"adminStore.currentType === 'mistStream'\">{{ item.mime_type }}</span>\n              </td>\n              <td @click=\"selectItem(item)\" >\n                <span v-if=\"adminStore.currentType === 'channelPlaylist'\">{{ item.repeat_mode }}</span>\n                <span v-if=\"adminStore.currentType === 'mistStream'\">{{ item.comment }}</span>\n              </td>\n              <td @click=\"selectItem(item)\" >\n                <span v-if=\"adminStore.currentType === 'channelPlaylist'\">{{ formatDateTime(item.start_time) }}</span>\n                <span v-if=\"adminStore.currentType === 'mistStream'\">{{ formatDateTime(item.created_at) }}</span>\n\n              </td>\n              <td @click=\"selectItem(item)\" >\n                <span v-if=\"adminStore.currentType === 'channelPlaylist'\">{{ formatDateTime(item.end_time) }}</span>\n                <span v-if=\"adminStore.currentType === 'mistStream'\"></span>\n              </td>\n              <td class=\"w-fit whitespace-nowrap overflow-hidden\">\n                <button\n                    v-if=\"adminStore.currentType === 'mistStream'\"\n                    @click.prevent=\"openEditModal(item)\"\n                    class=\"ml-2 px-2 py-1 text-white font-semibold bg-blue-500 hover:bg-blue-600 rounded-lg\"\n                >\n                  <font-awesome-icon icon=\"fa-pencil\" class=\"text-xs\"/>\n                </button>\n                <button\n                    v-if=\"adminStore.currentType === 'mistStream'\"\n                    @click=\"removeItem(item)\"\n                    class=\"ml-1 px-2 py-1 text-white font-semibold bg-red-500 hover:bg-red-600 rounded-lg\"\n                >\n                  <font-awesome-icon icon=\"fa-trash-can\" class=\"text-xs\"/>\n                </button>\n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </div>\n        <div v-if=\"adminStore.totalModalPages > 1\" class=\"flex flex-row justify-center mt-6 w-full\">\n          <div class=\"join grid grid-cols-2\">\n            <button class=\"join-item btn btn-sm btn-outline\" @click=\"adminStore.prevPage\">Previous page</button>\n            <button class=\"join-item btn btn-sm btn-outline\" @click=\"adminStore.nextPage\">Next</button>\n          </div>\n        </div>\n      </div>\n\n      <AddOrUpdateMistStreamModal :id=\"`updateMistStreamModal`\" :form-errors=\"$page.props.errors\" @update-list=\"refreshList\">\n        <template #form-title>\n          Update Mist Stream\n        </template>\n        <template #form-description>\n          Note: You cannot edit the stream name (right now), it will only create a new stream. This is a bug that needs to be fixed in the AddOrUpdateMistStreamJob\n        </template>\n        <template #button-label>\n          Update\n        </template>\n      </AddOrUpdateMistStreamModal>\n\n\n      <dialog id=\"confirmSelectionModal\" class=\"modal\">\n        <div class=\"modal-box\">\n          <h3 class=\"font-bold text-lg\">Confirm Selection</h3>\n          <p class=\"py-4\">\n            Are you sure you want to select <span id=\"selectedItemName\"></span>?\n          </p>\n          <div class=\"modal-action\">\n            <button class=\"btn\" @click=\"confirmSelection\">Confirm</button>\n            <button class=\"btn\" onclick=\"document.getElementById('confirmSelectionModal').close()\">Cancel</button>\n          </div>\n        </div>\n      </dialog>\n\n      <dialog id=\"confirmRemoveModal\" class=\"modal\">\n        <div class=\"modal-box\">\n          <h3 class=\"font-bold text-lg\">Confirm Remove</h3>\n          <p class=\"py-4\">\n            Are you sure you want to remove <span id=\"selectedForRemovalItemName\"></span>?\n          </p>\n          <div class=\"modal-action\">\n            <button class=\"btn\" @click=\"confirmRemove\">Confirm</button>\n            <button class=\"btn\" onclick=\"document.getElementById('confirmRemoveModal').close()\">Cancel</button>\n          </div>\n        </div>\n      </dialog>\n\n\n      <div class=\"modal-action\">\n        <form method=\"dialog\">\n          <!-- if there is a button, it will close the modal -->\n          <button class=\"btn\" @click=\"adminStore.clearSelectedChannelAndItems\">Close</button>\n        </form>\n      </div>\n    </div>\n  </dialog>\n</template>\n\n<script setup>\nimport { ref, watch, computed, onMounted, nextTick } from 'vue'\nimport { useAdminStore } from '@/Stores/AdminStore'\nimport { useChannelStore } from '@/Stores/ChannelStore'\nimport debounce from \"lodash/debounce\"\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome'\nimport { Inertia } from '@inertiajs/inertia'\nimport AddOrUpdateMistStreamModal from '@/Components/Global/MistStreams/AddOrUpdateMistStreamModal.vue'\n\nconst adminStore = useAdminStore();\nconst channelStore = useChannelStore();\n// const searchTerm = ref('');\n\nlet props = defineProps({\n  type: String\n})\n\nconst items = computed(() => adminStore.filteredItems);\nconst currentItemId = computed(() => adminStore.activeItem);\n\n// const searchItems = () => {\n//   adminStore.searchItems(adminStore.type, searchTerm.value);\n// };\n//\n// const debouncedFetchItems = debounce(adminStore.searchItems, 300);\n\n// watch(searchTerm, debouncedFetchItems);\n\n\nconst selectedItem = ref(null); // A reactive property to hold the currently selected item\n\nconst selectItem = (item) => {\n  selectedItem.value = item; // Store the item temporarily\n  document.getElementById('selectedItemName').textContent = item.name; // Display the name in the modal\n  document.getElementById('confirmSelectionModal').showModal(); // Open the modal for confirmation\n};\n\nconst removeItem = (item) => {\n  selectedItem.value = item; // Store the item temporarily\n  document.getElementById('selectedForRemovalItemName').textContent = item.name; // Display the name in the modal\n  document.getElementById('confirmRemoveModal').showModal(); // Open the modal for confirmation\n};\n\nconst editItem = (item) => {\n  selectedItem.value = item; // Store the item temporarily\n  // Create Modal for editing\n  // document.getElementById('selectedForRemovalItemName').textContent = item.name; // Display the name in the modal\n  // document.getElementById('confirmRemoveModal').showModal(); // Open the modal for confirmation\n};\n\nconst confirmSelection = async () => {\n  if (selectedItem.value) {\n    await adminStore.updateActiveItemId(selectedItem.value.id);\n    document.getElementById('confirmSelectionModal').close(); // Close the modal\n    // Handle additional logic for item selection if necessary\n  }\n};\n\nconst confirmRemove = async () => {\n  if (selectedItem.value) {\n    await removeMistStream(selectedItem.value.name);\n    document.getElementById('confirmRemoveModal').close(); // Close the modal\n    // Handle additional logic for item selection if necessary\n  }\n};\n// const selectItem = async (item) => {\n//   await adminStore.updateActiveItemId(item.id);\n//   // Handle additional logic for item selection if necessary\n// };\n\nconst openEditModal = (item) => {\n  updateMistStreamModal.showModal()\n  channelStore.mistStream = item\n}\n\nonMounted(async () => {\n  await adminStore.fetchItems(props.type)\n})\n\n\nconst removeMistStream = (name) => {\n  Inertia.post(route('mistStream.remove'), { 'name': name } )\n  document.getElementById('dynamicModal').close();\n}\n\nconst refreshList = () => {\n  adminStore.fetchItems(props.type);\n}\n// adminStore.fetchItems(props.type)\n\n// onMounted(adminStore.fetchItems(adminStore.type)); // Optionally fetch items when the modal mounts\n\n// const fetchItems = () => {\n//   Inertia.get(`/admin/channels/search/${props.type}`, { search: searchTerm.value }, {\n//     preserveState: false,\n//     onSuccess: (page) => {\n//       items.value = page.props.items; // Assume your backend sends back 'items'\n//     }\n//   });\n// };\n\n// watch(searchTerm, fetchItems);\n\n// onMounted(fetchItems); // Optionally fetch items when the modal mounts\n</script>\n\n\n<!--<script setup>-->\n<!--import { ref, defineProps, defineEmits } from 'vue';-->\n\n<!--const props = defineProps({-->\n<!--  showModal: Boolean,-->\n<!--  currentItem: Object,-->\n<!--  itemsType: String-->\n<!--});-->\n\n<!--const emits = defineEmits(['update:item', 'close']);-->\n\n<!--const searchTerm = ref('');-->\n<!--const items = ref([]);-->\n\n<!--const fetchItems = async () => {-->\n<!--  // Fetch items based on `itemsType` and `searchTerm`-->\n<!--  // Update `items` with the fetched data-->\n<!--};-->\n\n<!--const selectItem = (item) => {-->\n<!--  emits('update:item', { type: props.itemsType, item });-->\n<!--};-->\n\n<!--const closeModal = () => {-->\n<!--  emits('close');-->\n<!--};-->\n<!--</script>-->\n","<template>\n  <!--  <div class=\"source-selector\" :class=\"{'is-priority': source?.isPriority, 'is-playing': source?.isPlaying, 'is-fallback': source?.isFallback, 'has-error': source?.hasError}\">-->\n  <div\n      :class=\"['source-selector', {'is-priority': source?.playback_priority_type, 'is-playing': source?.isPlaying, 'is-fallback': source?.isFallback, 'has-error': source?.hasError}]\">\n    <div>\n      <!-- Display the source status here (playing, fallback, error) -->\n      <div v-if=\"source?.playback_priority_type === sourceType\" class=\"btn btn-xs mt-1 text-white bg-green-500 hover:bg-green-500\">Priority</div>\n      <span>\n\n      </span>\n      <!-- Icon or button to set this source as priority -->\n      <!--      <button class=\"btn btn-xs\" v-if=\"!source?.playback_priority_type\" @click=\"setPriority\">Set as Priority</button>-->\n    </div>\n  </div>\n\n  <!--  <div v-if=\"source?.playback_priority_type === 'mistStream'\">-->\n  <!--    <button class=\"btn btn-xs hover:bg-green-500 bg-green-500\">Priority</button>-->\n  <!--  </div>-->\n\n  <button v-if=\"source?.playback_priority_type !== sourceType\" class=\"btn btn-xs mt-1\"\n          @click=\"setPriority\">Set as Priority\n  </button>\n\n\n  <dialog :id=\"`confirmPriorityChangeModal`\" class=\"modal\">\n    <div class=\"modal-box\">\n      <h3 class=\"font-bold text-lg\">Confirm Selection for {{ adminStore.sourceSelector?.source?.name }}</h3>\n      <p class=\"py-4\">\n        Are you sure you want to change priority to <span class=\"font-bold\">{{ adminStore.sourceSelector?.sourceType }}</span>?\n      </p>\n      <div class=\"modal-action\">\n        <button class=\"btn\" @click=\"confirmPriorityChange\">Confirm</button>\n        <button class=\"btn\" onclick=\"document.getElementById('confirmPriorityChangeModal').close()\">Cancel</button>\n      </div>\n    </div>\n  </dialog>\n\n\n</template>\n\n<script setup>\nimport { useAdminStore } from '@/Stores/AdminStore'\nimport { ref } from 'vue'\n\nconst adminStore = useAdminStore()\n\nlet props = defineProps([\n  'source',\n  'sourceType',\n])\n\n// const setPriority = (sourceType) => {\n//   emit('change', { sourceType, priority: true });\n//   // Implement function to make API call to update the backend\n// };\n\n\nconst setPriority = () => {\nadminStore.sourceSelector.source = props.source\nadminStore.sourceSelector.sourceType = props.sourceType\n  document.getElementById('confirmPriorityChangeModal').showModal() // Open the modal for confirmation\n}\n\nconst confirmPriorityChange = async () => {\n  await adminStore.setPlaybackPriorityType(adminStore.sourceSelector.source, adminStore.sourceSelector.sourceType)\n  document.getElementById('confirmPriorityChangeModal').close() // Close the modal\n\n}\n\n// const setPriority = async () => {\n//   // Directly call the store action to update the priority.\n//   await adminStore.setPlaybackPriorityType(props.source, props.sourceType);\n//   // No need to emit an event to the parent component.\n// };\n\n</script>\n\n<style scoped>\n.source-selector {\n  /* Base styles */\n  //margin-top: 0.5rem;\n}\n\n.is-playing {\n  /* Styles for playing status */\n}\n\n.is-priority {\n  /* Styles for isPriority status */\n  color: black;\n  font-weight: 300;\n}\n\n.is-fallback {\n  /* Styles for fallback status */\n}\n\n.has-error {\n  /* Styles for error status */\n}\n\n</style>\n","import api from \"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-9.use[1]!../../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-9.use[2]!../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./SourceSelector.vue?vue&type=style&index=0&id=c559967c&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./SourceSelector.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./SourceSelector.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./SourceSelector.vue?vue&type=style&index=0&id=c559967c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-c559967c\"]])\n\nexport default __exports__","import script from \"./Label.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Label.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"month-view\">\n    <!-- Month view layout -->\n    <div class=\"container mx-auto px-4 py-8\">\n      <div class=\"flex justify-between items-center mb-4\">\n        <button @click=\"scheduleStore.subtractMonth\" class=\"p-2 bg-gray-200 rounded-full hover:bg-gray-300\">\n          <!-- Previous Month -->\n          <span>&lt;</span>\n        </button>\n        <span>{{ currentMonthName }} {{ currentYear }}</span>\n        <button @click=\"scheduleStore.addMonth\" class=\"p-2 bg-gray-200 rounded-full hover:bg-gray-300\">\n          <!-- Next Month -->\n          <span>&gt;</span>\n        </button>\n      </div>\n      <div class=\"grid grid-cols-7 gap-4 text-center\">\n        <!-- Day of the week headings -->\n        <div class=\"font-bold\" v-for=\"day in daysOfWeek\" :key=\"day\">{{ day }}</div>\n        <!-- Days -->\n        <div\n            class=\"py-2 rounded-full hover:bg-blue-100 cursor-pointer\"\n            v-for=\"(day, index) in daysInMonth\"\n            :key=\"index\"\n            :class=\"{'bg-blue-200 text-gray-800': isSelectedDay(day), 'text-gray-300': !isCurrentMonth(day), 'text-gray-800': isCurrentMonth(day)}\"\n            @click=\"selectDay(day)\"\n        >\n          {{ day.getDate() }}\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\n// Month view logic\nimport { useScheduleStore } from '@/Stores/ScheduleStore';\nimport { getMonth, isSameDay, isToday as isTodayDate, startOfMonth, endOfMonth, startOfWeek, endOfWeek, eachDayOfInterval, addDays } from 'date-fns';\nimport { storeToRefs } from 'pinia'\nimport { computed, watch } from 'vue'\n\nconst scheduleStore = useScheduleStore();\n// const { currentMonthName, currentYear, daysInMonth, subtractMonth, addMonth, currentMonthIndex } = storeToRefs(scheduleStore);\nconst { viewingWindowStart, currentMonth, currentMonthName, currentYear, daysInMonth } = storeToRefs(scheduleStore);\n\n// const now = new Date();\n// const currentMonth = ref(now);\n\nwatch(viewingWindowStart, (newValue, oldValue) => {\n  // When viewingWindowStart changes, update currentMonth to the new month of viewingWindowStart\n  scheduleStore.currentMonth = new Date(viewingWindowStart.value.getFullYear(), viewingWindowStart.value.getMonth(), 1);\n  }, { deep: true });\n\nconst daysOfWeek = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\n// Computes the days to be displayed in the month, including days from the previous and next months to fill the weeks\n// const daysInMonth = computed(() => {\n//   const currentMonth = scheduleStore.currentMonth; // Assuming currentMonth is a reactive date object for the current month\n//   const startOfCurrentMonth = startOfMonth(currentMonth);\n//   const endOfCurrentMonth = endOfMonth(currentMonth);\n//\n//   // Start at the beginning of the week where the first day of the month is\n//   const startOfGrid = startOfWeek(startOfCurrentMonth, { weekStartsOn: 0 });\n//   // End at the end of the week where the last day of the month is\n//   const endOfGrid = endOfWeek(endOfCurrentMonth, { weekStartsOn: 0 });\n//\n//   // Generate the days for the calendar grid\n//   return eachDayOfInterval({ start: startOfGrid, end: endOfGrid });\n// });\n\n// Method to handle day selection\nfunction selectDay(day) {\n  scheduleStore.setSelectedDay(day); // Assuming you've added setSelectedDay action to your store\n}\n\nfunction isToday(day) {\n  return isTodayDate(day);\n}\n\nfunction isSelectedDay(day) {\n  return isSameDay(day, scheduleStore.selectedDay); // Use isSameDay for comparison\n}\n\nfunction isCurrentMonth(day) {\n  // Since you're already tracking currentMonth in the store, ensure this function uses it directly\n  return getMonth(day) === getMonth(scheduleStore.currentMonth); // Directly compare to the store's currentMonth\n}\n\n// const startDayOfMonth = computed(() => startOfMonth(currentMonth.value));\n// const endDayOfMonth = computed(() => endOfMonth(currentMonth.value));\n\n// const daysInMonth = computed(() =>\n//     eachDayOfInterval({\n//       start: startDayOfMonth.value,\n//       end: endDayOfMonth.value,\n//     })\n// );\n\n// const currentMonthName = computed(() => format(currentMonth.value, 'MMMM'));\n// const currentYear = computed(() => getYear(currentMonth.value));\n\n// function subtractMonth() {\n//   currentMonth.value = subMonths(currentMonth.value, 1);\n// }\n//\n// function addMonth() {\n//   currentMonth.value = addMonths(currentMonth.value, 1);\n// }\n\n// function isToday(day) {\n//   return isTodayDate(day);\n// }\n//\n// function isCurrentMonth(day) {\n//   return getMonth(day) === currentMonthIndex.value; // Use `.value` because `storeToRefs` makes it a ref\n// }\n</script>\n\n<style scoped>\n/* Styles specific to month view */\n</style>","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-9.use[1]!../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-9.use[2]!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./MonthView.vue?vue&type=style&index=0&id=6ea1523e&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./MonthView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./MonthView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./MonthView.vue?vue&type=style&index=0&id=6ea1523e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-6ea1523e\"]])\n\nexport default __exports__","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-9.use[1]!../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-9.use[2]!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./WeekView.vue?vue&type=style&index=0&id=91256a50&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./WeekView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./WeekView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./WeekView.vue?vue&type=style&index=0&id=91256a50&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-91256a50\"]])\n\nexport default __exports__","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-9.use[1]!../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-9.use[2]!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./ThreeDayView.vue?vue&type=style&index=0&id=51271fd0&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./ThreeDayView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ThreeDayView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ThreeDayView.vue?vue&type=style&index=0&id=51271fd0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-51271fd0\"]])\n\nexport default __exports__","<template>\n  <Head title=\"Admin/Schedule\"/>\n\n  <div class=\"place-self-center flex flex-col\">\n    <div id=\"topDiv\" class=\"bg-white text-black dark:bg-gray-800 dark:text-gray-50 p-5 mb-10\">\n\n      <Message v-if=\"appSettingStore.showFlashMessage\" :flash=\"$page.props.flash\"/>\n\n      <AdminHeader>Schedule</AdminHeader>\n\n      <div class=\"flex flex-row justify-between gap-x-4 mb-3\">\n        <div>\n          <Link :href=\"`#`\">\n            <button\n                class=\"btn btn-sm bg-green-500 hover:bg-green-600 text-white px-4 py-2 mr-2 rounded disabled:bg-gray-400\"\n                disabled\n            >Blank\n            </button>\n          </Link>\n          <Link :href=\"`#`\">\n            <button\n                class=\"btn btn-sm bg-green-500 hover:bg-green-600 text-white px-4 py-2 mr-2 rounded disabled:bg-gray-400\"\n                disabled\n            >Blank\n            </button>\n          </Link>\n          <Link :href=\"`#`\">\n            <button\n                class=\"btn btn-sm bg-green-500 hover:bg-green-600 text-white px-4 py-2 mr-2 rounded disabled:bg-gray-400\"\n                disabled\n            >Blank\n            </button>\n          </Link>\n          <button\n              @click.prevent=\"purgeAllCaches\"\n              class=\"btn btn-sm bg-green-500 hover:bg-green-600 text-white px-4 py-2 mr-2 rounded-lg disabled:bg-gray-400\"\n          >\n            Purge All Caches\n          </button>\n\n\n        </div>\n        <input v-model=\"adminStore.searchTerm\" type=\"search\" placeholder=\"Search...\" class=\"border px-2 rounded-lg\"/>\n      </div>\n\n      <div class=\"flex flex-col\">\n        <div class=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\n          <div class=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\n            <div class=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\n\n              <div class=\"relative overflow-x-auto shadow-md sm:rounded-lg\">\n                <div\n                    class=\"table w-full text-sm text-left text-gray-500 dark:text-gray-400\"\n                >\n                  <div\n                      class=\"table-header-group text-xs text-gray-700 bg-gray-50 dark:bg-gray-700 dark:text-gray-400\"\n                  >\n                    <div class=\"table-row\">\n                      <div scope=\"col\" class=\"table-cell px-6 py-3 uppercase\">\n                        <font-awesome-icon icon=\"fa-repeat\" class=\"mr-2 cursor-pointer hover:text-blue-500\"\n                                           @click.prevent=\"resetCalendar\"/>\n                        <span class=\"uppercase\">Calendar </span>\n                      </div>\n\n\n                    </div>\n                  </div>\n                  <div class=\"table-row-group\">\n\n                    <div class=\"calendar\">\n\n                      <!-- Calendar View -->\n                      <div class=\"calendar-view\">\n                        <MonthView />\n\n                        <!-- View Selector -->\n                        <div class=\"view-selector px-6 space-x-2 border-t-2 border-gray-50 pt-6\">\n                          <span class=\"text-xm uppercase font-semibold tracking-wider\">View: </span>\n                          <button @click=\"setView('week')\" class=\"py-1 px-2 text-black rounded-lg\" :class=\"[currentView === 'week' ? 'bg-blue-200' : 'bg-gray-100 hover:bg-gray-200']\">Week</button>\n                          <button @click=\"setView('threeDay')\" class=\"py-1 px-2 text-black rounded-lg\" :class=\"[currentView === 'threeDay' ? 'bg-blue-200' : 'bg-gray-100 hover:bg-gray-200']\">3-Day</button>\n                          <button @click=\"setView('oneDay')\" class=\"py-1 px-2 text-black rounded-lg\" :class=\"[currentView === 'oneDay' ? 'bg-blue-200' : 'bg-gray-100 hover:bg-gray-200']\">1-Day</button>\n                          <button  @click=\"setToToday\" class=\"py-1 px-2 text-black rounded-lg\" :class=\"{'bg-blue-200': scheduleStore.isToday, 'bg-gray-100 hover:bg-gray-200': !scheduleStore.isToday}\">Today</button>\n                        </div>\n                        <WeekView v-if=\"currentView === 'week'\"/>\n                        <ThreeDayView v-if=\"currentView === 'threeDay'\"/>\n                        <TodayView v-if=\"currentView === 'oneDay'\"/>\n                      </div>\n                    </div>\n\n\n\n\n\n                  </div>\n                </div>\n\n              </div>\n            </div>\n          </div>\n        </div>\n\n\n\n\n\n      </div>\n    </div>\n  </div>\n\n</template>\n\n\n<script setup>\nimport { Inertia } from '@inertiajs/inertia'\nimport { onBeforeUnmount, onMounted, onUnmounted, ref, watch } from 'vue'\nimport throttle from 'lodash/throttle'\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome'\nimport { usePageSetup } from '@/Utilities/PageSetup'\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\nimport { useScheduleStore } from '@/Stores/ScheduleStore'\nimport { useAdminStore } from '@/Stores/AdminStore'\nimport AdminHeader from '@/Components/Pages/Admin/AdminHeader'\nimport Message from '@/Components/Global/Modals/Messages'\nimport Pagination from '@/Components/Global/Paginators/Pagination'\nimport SourceSelector from '@/Components/Pages/Admin/Channels/SourceSelector'\nimport DynamicModal from '@/Components/Pages/Admin/Channels/DynamicModal'\nimport AddOrUpdateMistStreamModal from '@/Components/Global/MistStreams/AddOrUpdateMistStreamModal'\nimport MonthView from '@/Components/Global/Calendar/MonthView'\nimport WeekView from '@/Components/Global/Calendar/WeekView'\nimport ThreeDayView from '@/Components/Global/Calendar/ThreeDayView'\nimport TodayView from '@/Components/Global/Calendar/TodayView'\n\nusePageSetup('admin.schedule')\n\nconst appSettingStore = useAppSettingStore()\nconst scheduleStore = useScheduleStore()\nconst adminStore = useAdminStore()\n\nlet props = defineProps({})\n\nconst reloadSchedule = () => {\n  //\n}\n\nconst setToToday = () => {\n  // Use the existing action to set the selected day to today\n  scheduleStore.setSelectedDayToToday(new Date());\n  currentView.value = 'oneDay'\n};\n\nconst currentView = ref('oneDay')\n\nconst setView = (view) => {\n  currentView.value = view\n}\n\nconst purgeAllCaches = () => {\n  scheduleStore.resetAll()\n  Inertia.post('/invalidate-caches/')\n  Inertia.reload()\n}\n\nconst resetCalendar = () => {\n  scheduleStore.reset()\n  scheduleStore.checkAndFetchForUpcomingContent()\n}\n\nonBeforeUnmount(() => {\n  scheduleStore.reset()\n})\n\n</script>\n\n<style scoped>\n\n#tooltip {\n  background: #333;\n  color: white;\n  font-weight: bold;\n  padding: 4px 8px;\n  font-size: 13px;\n  border-radius: 4px;\n}\n\n:deep(.popper) {\n  background: #333333;\n  padding: 2px;\n  border-radius: 20px;\n  color: #fff;\n  font-weight: bold;\n  text-transform: uppercase;\n}\n\n:deep(.popper #arrow::before) {\n  background: #333333;\n}\n\n:deep(.popper:hover),\n:deep(.popper:hover > #arrow::before) {\n  background: #333333;\n}\n</style>\n","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-9.use[1]!../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-9.use[2]!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./Index.vue?vue&type=style&index=0&id=1ef2a708&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./Index.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Index.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Index.vue?vue&type=style&index=0&id=1ef2a708&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-1ef2a708\"]])\n\nexport default __exports__"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","initialState","channels","items","activeItemId","selectedChannel","currentType","searchTerm","modalHeader","currentPage","itemsPerPage","currentChannelsPage","itemsPerChannelsPage","sourceSelector","source","sourceType","firstPlaySettings","validationErrors","useAdminStore","defineStore","state","actions","assign","this","loadChannels","fetchChannels","_this","_callee","_context","axios","get","response","data","console","log","toggleChannelActiveStatus","channelId","_callee2","notificationStore","_response$data","message","status","_context2","useNotificationStore","post","setToastNotification","t0","addChannel","_this2","_callee3","_response$data2","errorMessage","validationMessages","_context3","success","fallbackMessages","map","msgs","join","updateChannel","newName","_this3","_callee4","_response$data3","_context4","concat","setSelectedChannel","item","setCurrentType","clearSelectedChannelAndItems","fetchItems","_this4","_callee5","_response","_response2","_context5","fetch","json","mist_stream_id","channel_external_source_id","channel_playlist_id","updateActiveItemId","id","_this5","_callee6","_context6","setMistStream","setChannelPlaylist","setExternalSource","setPlaybackPriorityType","channel","priorityType","_this6","_callee7","dataToSend","index","_context7","setPriorityType","findIndex","mistStreamId","_this7","_callee8","_context8","channelPlaylistId","_this8","_callee9","_context9","externalSourceId","_this9","_callee10","_context10","nextPage","totalModalPages","Math","ceil","prevPage","setPage","page","nextChannelsPage","prevChannelsPage","setChannelsPage","fetchFirstPlaySettings","_this10","_callee11","_response$data4","_context11","updateFirstPlaySettings","_this11","_callee12","_context12","patch","errors","handleErrors","getters","filteredItems","currentItem","find","activeItem","paginatedItems","start","end","paginatedChannels","totalChannelsPages","activeChannelsCount","filter","active","ownKeys","getOwnPropertySymbols","getOwnPropertyDescriptor","_objectSpread","_defineProperty","getOwnPropertyDescriptors","defineProperties","obj","toPrimitive","String","Number","_toPrimitive","convertScheduleToTimezone","scheduleData","userStore","useUserStore","startTimeInUserTz","start_time","formatDateTimeFromUtcToUserTimezone","endTimeInUserTz","end_time","recurrenceDetailsInUserTz","recurrenceDetails","_item$recurrenceDetai","start_date","end_date","formatTimeInUserTimezone","getUpcomingContentDates","viewingWindowStart","dates","Date","setHours","getHours","dayjs","relativeTime","timezone","utc","currentMonth","selectedDay","fiveDaySixHourSchedule","todaysContent","weeklyContent","dataFetchLog","useScheduleStore","resetAll","now","setSelectedDay","day","weekStart","weekEnd","addHours","startOfDay","startOfWeek","weekStartsOn","endOfWeek","needsDataForWeek","loadWeekFromDate","checkAndFetchForUpcomingContent","setSelectedDayToToday","startOfHour","changeDay","days","currentTime","newDay","getMinutes","addDays","setMinutes","shiftHours","hours","isSameDay","isElevenPM","date","subtractMonth","subMonths","addMonth","addMonths","fetchFiveDaySixHourSchedule","userTimezone","fetchTodaysContent","preloadWeeklyContent","_formattedDate","_timezone4","newData","fetchTime","existingLogIndex","formattedDate","toISOString","split","lastFetch","_toConsumableArray","extendedEnd","calculateExtendedEndForUpcomingContent","hasDataForExtendedWeek","some","content","contentDate","baseStartTime","getTime","upcomingDates","fifteenMinutesAgo","_iterator","_step","_loop","_createForOfIteratorHelper","dateString","toDateString","lastFetchedTime","isFresh","fetchDataAndUpdateLog","t1","upcomingContent","itemStart","sort","b","nextSixHours","adjustedStart","eachHourOfInterval","dateMessage","startDay","format","isToday","isYesterday","isTomorrow","currentMonthIndex","getMonth","currentMonthName","currentYear","getYear","daysInMonth","startOfCurrentMonth","startOfMonth","endOfCurrentMonth","endOfMonth","startOfGrid","endOfGrid","eachDayOfInterval","today","viewingStart","usePageSetup","pageName","appSettingStore","useAppSettingStore","videoPlayerStore","useVideoPlayerStore","showFlashMessage","pageIsHidden","isMobile","ott","makeVideoTopRight","pageReload","window","location","reload","Inertia","on","event","search","shouldScrollToTop","requestAnimationFrame","topDiv","document","getElementById","scrollIntoView","behavior","scrollTo","setPrevUrl","showOttButtons","noLayout","___CSS_LOADER_EXPORT___","module","scheduleStore","_storeToRefs","storeToRefs","ref","computed","isWithinCurrentHour","hour","startOfCurrentHour","endOfCurrentHour","contentStartTime","isContentAvailableForHour","formatHour","getTimeSegment","hourOfDay","segment","color","watch","newValue","goToContentPage","visit","show","slug","formatDuration","minutes","floor","remainingMinutes","_ref","newTimezone","oldTimezone","_x","_x2","immediate","onMounted","options","locals","channelStore","useChannelStore","props","__props","originalName","addMetadataField","form","metadata","reactive","useForm","mime_type","comment","mistStream","newVal","entries","_ref2","_slicedToArray","deep","submit","_ref3","route","closeModal","close","clearMistStream","clearErrors","splice","clearFlashMessage","flash","warning","savedScrollPosition","saveScrollPosition","scrollY","displayBadges","adminStore","selectedItem","selectItem","textContent","showModal","confirmSelection","confirmRemove","removeMistStream","refreshList","updateMistStreamModal","setPriority","confirmPriorityChange","oldValue","getFullYear","daysOfWeek","isSelectedDay","isCurrentMonth","setToToday","currentView","setView","view","purgeAllCaches","resetCalendar","onBeforeUnmount"],"sourceRoot":""}
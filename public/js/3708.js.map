{"version":3,"file":"js/3708.js","mappings":";8HAGWA,GAAeC,EAAAA,EAAAA,IAAY,YAAa,CAC/CC,MAAO,iBAAO,CACVC,GAAI,EACJC,KAAM,GACNC,YAAa,GACbC,KAAM,GACNC,WAAY,GACZC,YAAa,GACbC,WAAY,GACZC,QAAS,GACTC,SAAU,GACVC,WAAY,GACZC,cAAe,GACfC,SAAU,GACVC,UAAWC,QACXC,eAAe,EACfC,sBAAsB,EACtBC,oBAAqB,GACrBC,kBAAmB,EACnBC,YAAY,EACZC,eAAe,EACfC,iBAAkB,GAClBC,eAAgB,EAChBC,SAAU,EACVC,KAAM,GACNC,mBAAoBX,QAGhBY,eAAe,EACnBC,IAAK,GACR,EAEDC,QAAS,CAKLC,cAAa,SAACC,GACVC,KAAK9B,GAAK6B,EAAK7B,GACf8B,KAAK7B,KAAO4B,EAAK5B,KACjB6B,KAAK5B,YAAc2B,EAAK3B,YACxB4B,KAAK3B,KAAO0B,EAAK1B,KACjB2B,KAAK1B,WAAayB,EAAKzB,WACvB0B,KAAKzB,YAAcwB,EAAKxB,WAC5B,EACA0B,cAAa,SAACC,GACVF,KAAKrB,WAAauB,CACtB,EACAC,iBAAgB,SAACC,GACbJ,KAAKrB,WAAayB,CACtB,EAIAC,uBAAsB,WAClBL,KAAKhB,eAAgB,CACzB,EACAsB,yBAAwB,WACpBN,KAAKf,sBAAuB,CAChC,EAIAsB,iBAAgB,WACZC,EAAAA,QAAQC,MAAMC,MAAM,0BAA2B,CAC3CC,OAAQ,OACRC,KAAM,CACFC,QAASb,KAAKT,eACduB,QAASd,KAAK9B,GACd6C,UAAWf,KAAK3B,OAG5B,EACA2C,eAAc,WACVR,EAAAA,QAAQC,MAAMC,MAAM,wBAAyB,CACzCC,OAAQ,OACRC,KAAM,CACFC,QAASb,KAAKb,kBACd2B,QAASd,KAAK9B,GACd6C,UAAWf,KAAK3B,QAGxB2B,KAAKf,sBAAuB,CAChC,EACAgC,kBAAiB,WACbT,EAAAA,QAAQC,MAAMC,MAAM,2BAA4B,CAC5CC,OAAQ,OACRC,KAAM,CACFC,QAASb,KAAKb,kBACd2B,QAASd,KAAK9B,GACd6C,UAAWf,KAAK3B,QAGxB2B,KAAKf,sBAAuB,CAChC,EACAiC,oBAAmB,WACflB,KAAKL,eAAkBK,KAAKL,aAChC,GAGJwB,QAAS,CACLC,eAAc,WACV,OAAIpB,KAAK1B,WAAa0B,KAAKzB,YAAc,EAC9B,EAEJyB,KAAK1B,WAAa0B,KAAKzB,WAClC,ioCCxGR,4GC2EI8C,GAAOC,EAAAA,EAAAA,KAAIC,EAAMF,OACJC,EAAAA,EAAAA,KAAI,OACFA,EAAAA,EAAAA,KAAIC,EAAMC,YAAc,aAS3CC,EAAAA,EAAAA,OAAM,CAACJ,IAAO,SAAAK,GAAe,IAAbC,EAAaC,EAAAF,EAAA,GAAN,GACnBG,EAAM,qBAAsB,CAAER,KAAMM,GACxC,8xBCxFA,6mCCAA,yECgBA,IAAIG,GAAc,IAAIC,MAAOC,+pCChB7B,0ECagBC,EAAAA,EAAAA,MACAlE,EAAAA,EAAAA,mjBCdhB,qHCiBImE,GAAYD,EAAAA,EAAAA,KAEhBC,EAAUxC,oBAAqB,EAM/B,IAAIyC,GAAOC,EAAAA,EAAAA,IAAQ,CACf3C,KAAM,KAEV0C,EAAK1C,KAAO8B,EAAMnB,QAAQiC,MAE1B,IAAMC,GAAchB,EAAAA,EAAAA,KAAI,MAOxB,SAASiB,IACDJ,EAAK1C,OAAS8B,EAAMnB,QAAQiC,QAC5BH,EAAU1C,SAAW,GACvBgD,GACN,CAEA,SAASA,IAaLN,EAAUxC,oBAAqB,EAC/BwC,EAAUzC,KAAO0C,EAAK1C,KACtBgD,EAAK,sBACLC,MAAMC,KAAK,uBAAwB,CAC/BN,MAAOF,EAAK1C,KACZmD,UAAWrB,EAAMnB,QAAQlC,KAC1B2E,MAAK,SAAAC,GACJZ,EAAU1C,SAAW,EACrBuD,QAAQC,IAAI,cACZd,EAAUxC,oBAAqB,CACnC,IAAE,OACU,SAAAuD,GACJF,QAAQC,IAAKC,EACjB,GACR,QArCAC,EAAAA,EAAAA,YAAU,WACNZ,EAAYa,MAAMC,OACtB,klDCnCA,oFCaI/B,GAAOC,EAAAA,EAAAA,KAAIC,EAAMF,OACJC,EAAAA,EAAAA,KAAI,aAGrBG,EAAAA,EAAAA,OAAM,CAACJ,IAAO,SAAAK,GAAe,IAAbC,EAAaC,EAAAF,EAAA,GAAN,GACnBG,EAAM,qBAAsB,CAAER,KAAMM,GACxC,y7OCnBA,+JCsCI0B,GAAYtF,EAAAA,EAAAA,KACZmE,GAAYD,EAAAA,EAAAA,KAWVqB,IADehC,EAAAA,EAAAA,KAAI,IACRC,EAAMqB,UAAU,mBAE7BW,GAAoBjC,EAAAA,EAAAA,KAAI,MACxBkC,GAAclC,EAAAA,EAAAA,MAAI,GAetB,IASMmC,EAAwB,WAC1BD,EAAYL,OAASK,EAAYL,KACrC,EAEMO,EAA0B,SAAC/B,GAC7BgC,EAA0BR,MAAQxB,EAClC4B,EAAoB5B,EAAQN,KAC5B0B,QAAQC,IAAIO,GACZK,IACAb,QAAQC,IAAIa,EAChB,EAEMC,GAAexC,EAAAA,EAAAA,KAAI,IAOrBqC,GAA4BrC,EAAAA,EAAAA,KAAI,IAChCuC,GAA6BvC,EAAAA,EAAAA,KAAI,IAM/BsC,EAA0B,WACxBD,EAA0BR,MAG1BU,EAA2BV,MART,SAACY,EAAUD,GACjC,OAAOE,EAAAA,EAAAA,GAAOD,EAAU,yBAA0B,CAAED,aAAAA,GACxD,CAM2CG,CAC/B,IAAIlC,KAAKwB,GACTO,GAGJD,EAA2BV,MAAQ,EAE3C,EAAE,SAEae,EAAmBC,EAAAC,GAAA,OAAAC,EAAAC,MAAC,KAADC,UAAA,UAAAF,UAwBjC,SAxBiCG,IAAAC,MAAlC,SAAAC,EAAmC9B,EAAW+B,GAAQ,IAAA7B,EAAA,OAAA0B,IAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEvBrC,MAAMC,KAAK,qCAAsC,CACpEqC,WAAYpC,EACZqC,cAAeN,EACfO,2BAA4BrB,EAA2BV,QACzD,QAJIL,EAAQ+B,EAAAM,MAQDvE,KAAKwE,OAEdA,MAAMtC,EAASlC,KAAKwE,OACvBP,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAQ,GAAAR,EAAA,SAEGA,EAAAQ,GAAMvC,WACNZ,EAAUoD,aAAeT,EAAAQ,GAAMvC,SAASlC,KAAKqC,OAGhD,QAGLsC,SAASC,eAAelC,GAAUmC,QAClCjF,EAAAA,QAAQkF,SAAQ,yBAAAb,EAAAc,OAAA,GAAAjB,EAAA,iBAvBcL,gLAwBjCA,EAAAC,MAAA,KAAAC,UAAA,CAED,IAAMqB,GAAqBC,EAAAA,EAAAA,WAAS,iBAAO,CACvC,sDAA+E,IAAxBtE,EAAMuE,gBAC7D,uCAAgE,IAAxBvE,EAAMuE,gBAC9C,qDAA8E,IAAxBvE,EAAMuE,gBAC5D,iDAA0E,IAAxBvE,EAAMuE,gBACxD,sDAA+E,IAAxBvE,EAAMuE,gBAC7D,kDAA2E,IAAxBvE,EAAMuE,gBACzD,mEAA4F,IAAxBvE,EAAMuE,gBAC1E,kDAA2E,IAAxBvE,EAAMuE,gBACzD,+DAAwF,IAAxBvE,EAAMuE,gBACtE,+CAAwE,KAAxBvE,EAAMuE,gBACzD,2TAjGGP,SAASC,eAAelC,GAAUxE,w1BAYV8D,mBACP,KADkB+B,QAG/BnB,EAAYL,OAASK,EAAYL,MACb,IAAbwB,GACPT,EAAoBtB,EAAW+B,IALZ,IAAC/B,EAAW+B,6gQCpEvC,gHC4EItB,GAAYtF,EAAAA,EAAAA,KACZmE,GAAYD,EAAAA,EAAAA,MAQUX,EAAAA,EAAAA,MAAI,GAE9BY,EAAU1C,SAAW,EACrB,IAAMuG,GAAezE,EAAAA,EAAAA,KAAI,GAEzB,SAAS0E,IACLzE,EAAMnB,QAAQiC,MAAQH,EAAUzC,KAChCsG,EAAa5C,OAAS,CAC1B,EAEWf,EAAAA,EAAAA,IAAQ,CACf3C,KAAM,KAGV,SAASwG,IACL/D,EAAU1C,SAAW+B,EAAMnB,QAAQlC,EACvC,CAMA,IAAMgI,EAAiB,iBAAAC,KAAA3B,IAAAC,MAAG,SAAAC,IAAA,OAAAF,IAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAK4D,IAA7DqB,QAAQ,sDAEX,CAAFvB,EAAAE,KAAA,SAGR,OAHQF,EAAAC,KAAA,EAER5C,EAAUmE,sBAAwB9E,EAAMnB,QAAQlC,GAChD2G,EAAAE,KAAA,EACMrC,MAAK,OAAQ,UAAD4D,OAAW/E,EAAMgF,SAAQ,aAAAD,OAAY/E,EAAMnB,QAAQ/B,OAChEwE,MAAK,SAACC,GAEqB,MAApBA,EAAS0D,QAETtE,EAAUoD,aAAexC,EAASlC,KAAK6F,QAGvCjG,EAAAA,QAAQkF,SACRxD,EAAUmE,sBAAwB,IAKlCnE,EAAUoD,aAAexC,EAAS4D,WAClC3D,QAAQE,MAAM,yBAA0BH,EAAS4D,YACjDxE,EAAUmE,sBAAwB,EAClC7F,EAAAA,QAAQkF,SAEhB,IAAE,OACK,SAACzC,GACJF,QAAQE,MAAM,+BAAgCA,GAC9Cf,EAAUoD,aAAerC,EACzBf,EAAUmE,sBAAwB,EAClC7F,EAAAA,QAAQkF,QACZ,IAAE,OAKN3C,QAAQC,IAAI,6BAGZD,QAAQC,IAAI,kBAEZ6B,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAQ,GAAAR,EAAA,SAEA9B,QAAQE,MAAM,+BAA8B4B,EAAAQ,IAAS,yBAAAR,EAAAc,OAAA,GAAAjB,EAAA,iMAGhE,kBAnDsB,OAAAyB,EAAA7B,MAAA,KAAAC,UAAA,2qHC3GvB,4tBCHWoC,MAAM,4CACTC,EAAAA,EAAAA,oBA8BQ,SA9BDD,MAAM,4BAA0B,EAEvCC,EAAAA,EAAAA,oBA2BK,YA1BDA,EAAAA,EAAAA,oBASK,MATDD,MAAM,+BAA6B,EACnCC,EAAAA,EAAAA,oBAOM,OAPDD,MAAM,qBAAmB,EAC1BC,EAAAA,EAAAA,oBAKM,aAJFA,EAAAA,EAAAA,oBAGM,OAHDD,MAAM,6BACsK,iBAO7LC,EAAAA,EAAAA,oBAEK,MAFDD,MAAM,mDAAkD,WAI5DC,EAAAA,EAAAA,oBAEK,MAFDD,MAAM,mDAAkD,4BAI5DC,EAAAA,EAAAA,oBAEK,MAFDD,MAAM,mDAAkD,oBAI5DC,EAAAA,EAAAA,oBAEK,MAFDD,MAAM,8DAA6D,gBAEvE,IAGJC,EAAAA,EAAAA,oBAEQ,SAFDD,MAAM,qCAAmC,UCjCxD,MAAME,GAAS,CAAC,EAKhB,IAFiC,cAAgBA,GAAQ,CAAC,CAAC,gDDFvDC,EAAAA,EAAAA,oBAoCQ,QApCRC,GAoCQC,u7FEjCZ,gICkLIC,GAAmBC,EAAAA,EAAAA,KACnBhF,GAAYD,EAAAA,EAAAA,KACZoB,GAAYtF,EAAAA,EAAAA,KACZoJ,GAAYC,EAAAA,EAAAA,YAEhBD,EAAUE,YAAc,QACxBF,EAAUG,kBAAmB,GAE7BpE,EAAAA,EAAAA,YAAU,WACN+D,EAAiBM,oBACbJ,EAAUK,WACVP,EAAiBQ,SAAW,WAC5BR,EAAiBS,IAAM,GAE3BnC,SAASC,eAAe,UAAUmC,gBACtC,KAEAC,EAAAA,EAAAA,cAAa,WACT1F,EAAUoD,aAAe,EAC7B,IAWAjC,EAAUvD,cAAcyB,EAAMxB,MAC9BsD,EAAUpD,cAAcsB,EAAMrB,MAC9BmD,EAAUzD,IAAM2B,EAAM3B","sources":["webpack:///./resources/js/Stores/TeamStore.js","webpack:///./resources/js/Components/Calendar/DateTimePickerSelect.vue?5178","webpack:///./resources/js/Components/Calendar/DateTimePickerSelect.vue","webpack:///./resources/js/Components/Pagination.vue","webpack:///./resources/js/Components/Shows/ShowFooter.vue?17e4","webpack:///./resources/js/Components/Shows/ShowFooter.vue","webpack:///./resources/js/Components/Shows/ShowHeader.vue?2268","webpack:///./resources/js/Components/Shows/ShowHeader.vue","webpack:///./resources/js/Components/Shows/Manage/EpisodeNoteEdit.vue?c863","webpack:///./resources/js/Components/Shows/Manage/EpisodeNoteEdit.vue","webpack:///./resources/js/Components/Calendar/DateTimePicker.vue?c93b","webpack:///./resources/js/Components/Calendar/DateTimePicker.vue","webpack:///./resources/js/Components/Shows/Manage/ShowEpisodeStatuses.vue?b9a6","webpack:///./resources/js/Components/Shows/Manage/ShowEpisodeStatuses.vue","webpack:///./resources/js/Components/Shows/Manage/ShowEpisode.vue?5516","webpack:///./resources/js/Components/Shows/Manage/ShowEpisode.vue","webpack:///./resources/js/Components/Shows/Manage/ShowEpisodesList.vue","webpack:///./resources/js/Components/Shows/Manage/ShowCreditsList.vue","webpack:///./resources/js/Components/Shows/Manage/ShowCreditsList.vue?e773","webpack:///./resources/js/Pages/Shows/{$id}/Manage.vue?9a3e","webpack:///./resources/js/Pages/Shows/{$id}/Manage.vue"],"sourcesContent":["import {defineStore} from \"pinia\";\nimport {Inertia} from \"@inertiajs/inertia\";\n\nexport let useTeamStore = defineStore('teamStore', {\n    state: () => ({\n        id: 0,\n        name: '',\n        description: '',\n        slug: '',\n        totalSpots: '',\n        memberSpots: '',\n        teamLeader: [],\n        members: [],\n        managers: [],\n        activeShow: [],\n        activeEpisode: [],\n        creators: [],\n        showModal: Boolean,\n        confirmDialog: false,\n        confirmManagerDialog: false,\n        selectedManagerName: '',\n        selectedManagerId: 0,\n        addManager: false,\n        removeManager: false,\n        deleteMemberName: '',\n        deleteMemberId: 0,\n        noteEdit: 0,\n        note: '',\n        saveNoteProcessing: Boolean,\n            // on the show episode manage page\n            // turn on the go live div\n            goLiveDisplay: false,\n        can: [],\n    }),\n\n    actions: {\n        // async fill() {\n        //     let r = await import('@/Json/team.json');\n        //     this.$state = r.default;\n        // },\n        setActiveTeam(team) {\n            this.id = team.id;\n            this.name = team.name;\n            this.description = team.description;\n            this.slug = team.slug;\n            this.totalSpots = team.totalSpots;\n            this.memberSpots = team.memberSpots;\n        },\n        setActiveShow(show) {\n            this.activeShow = show;\n        },\n        setActiveEpisode(episode) {\n            this.activeShow = episode;\n        },\n        // getCreators() {\n        //     Inertia.reload({ only: ['creators'] })\n        // },\n        deleteTeamMemberCancel() {\n            this.confirmDialog = false;\n        },\n        confirmTeamManagerCancel() {\n            this.confirmManagerDialog = false;\n        },\n        // loadTeamMembers(members){\n        //     this.members = members;\n        // }\n        deleteTeamMember() {\n            Inertia.visit(route('teams.removeTeamMember'), {\n                method: 'post',\n                data: {\n                    user_id: this.deleteMemberId,\n                    team_id: this.id,\n                    team_slug: this.slug\n                },\n            })\n        },\n        addTeamManager() {\n            Inertia.visit(route('teams.addTeamManager'), {\n                method: 'post',\n                data: {\n                    user_id: this.selectedManagerId,\n                    team_id: this.id,\n                    team_slug: this.slug\n                },\n            })\n            this.confirmManagerDialog = false;\n        },\n        removeTeamManager() {\n            Inertia.visit(route('teams.removeTeamManager'), {\n                method: 'post',\n                data: {\n                    user_id: this.selectedManagerId,\n                    team_id: this.id,\n                    team_slug: this.slug\n                },\n            })\n            this.confirmManagerDialog = false;\n        },\n        toggleGoLiveDisplay() {\n            this.goLiveDisplay = ! this.goLiveDisplay;\n        }\n    },\n\n    getters: {\n        spotsRemaining() {\n            if (this.totalSpots - this.memberSpots < 1){\n                return 0\n            }\n            return this.totalSpots - this.memberSpots;\n        },\n    }\n});\n\n\n// Another option for declaring specific data to return:\n// let data = r.default;\n//\n// import('@/Json/team.json').then(r => {\n// this.$patch({\n//     name: data.name,\n//     spots: data.spots,\n//     members: data.members\n// });\n// });\n","import script from \"./DateTimePickerSelect.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./DateTimePickerSelect.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <div>\n<!--        &lt;!&ndash; Date Picker &ndash;&gt;-->\n<!--        <v-date-picker-->\n<!--            v-model=\"selectedDate\"-->\n<!--            is-inline-->\n<!--            :attributes=\"{-->\n<!--        placeholder: 'Select a Date',-->\n<!--      }\"-->\n<!--        />-->\n\n<!--        &lt;!&ndash; Time Picker &ndash;&gt;-->\n<!--        <v-time-picker-->\n<!--            v-model=\"selectedTime\"-->\n<!--            :step-minutes=\"15\"-->\n<!--            :format=\"12\"-->\n<!--            :min-time=\"'00:00:00'\"-->\n<!--            :max-time=\"'23:59:59'\"-->\n<!--            :attributes=\"{-->\n<!--        placeholder: 'Select a Time',-->\n<!--      }\"-->\n<!--        />-->\n\n\n<!--        <template>-->\n<!--            <Calendar />-->\n<!--&lt;!&ndash;            <DatePicker v-model=\"date\" />&ndash;&gt;-->\n<!--            <VDatePicker v-model=\"date\" mode=\"dateTime\" :popover=\"false\" hide-time-header>-->\n<!--                <template #default=\"{ togglePopover, inputValue, inputEvents }\">-->\n<!--                    <div-->\n<!--                        class=\"flex rounded-lg border border-gray-300 dark:border-gray-600 overflow-hidden\"-->\n<!--                    >-->\n<!--                        <button-->\n<!--                            class=\"flex justify-center items-center px-2 bg-accent-100 hover:bg-accent-200 text-accent-700 border-r border-gray-300 dark:bg-gray-700 dark:text-accent-300 dark:border-gray-600 dark:hover:bg-gray-600\"-->\n<!--                            @click=\"() => togglePopover()\"-->\n<!--                        >-->\n<!--                            <IconCalendar class=\"w-5 h-5\" />-->\n<!--                        </button>-->\n<!--                        <input-->\n<!--                            :value=\"inputValue\"-->\n<!--                            v-on=\"inputEvents\"-->\n<!--                            class=\"flex-grow px-2 py-1 bg-white dark:bg-gray-700\"-->\n<!--                        />-->\n<!--                    </div>-->\n<!--                </template>-->\n<!--            </VDatePicker>-->\n<!--        </template>-->\n\n            <DatePicker v-model=\"date\" mode=\"dateTime\" hide-time-header >\n                <template #default=\"{ togglePopover }\">\n                    <button\n                        class=\"px-3 py-2 bg-blue-500 text-sm text-white font-semibold rounded-md\"\n                        @click.prevent=\"togglePopover\"\n                    >\n                        <slot name=\"buttonName\">Select date</slot>\n                    </button>\n                </template>\n            </DatePicker>\n\n    </div>\n</template>\n\n<script setup>\nimport {ref, defineProps, defineEmits, watch} from 'vue';\nimport VDatePicker from 'v-calendar';\n// import VCalendar from 'v-calendar';\nimport { Calendar, DatePicker } from 'v-calendar';\nimport 'v-calendar/style.css';\n\nconst props = defineProps({\n    // initialDate: Date,\n    // initialTime: String,\n    inputValue: String,\n    date: String,\n});\n\nconst emits = defineEmits();\n\n// let date = new Date();\n// let date = ref(new Date());\nlet date = ref(props.date);\nconst calendar = ref(null);\nconst inputValue = ref(props.inputValue || null);\n\n// Define refs to store selected date and time\n// const selectedDate = ref(props.initialDate || null);\n// const selectedTime = ref(props.initialTime || null);\n\n\n\n// Watch for changes in selected dateTime emit it\nwatch([date], ([newDate]) => {\n    emits('date-time-selected', { date: newDate });\n});\n</script>\n","import script from \"./Pagination.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Pagination.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./ShowFooter.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ShowFooter.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n\n    <div class=\"flex justify-end mt-6 pb-24\">\n        <!-- Paginator -->\n        <!--                            <Pagination :links=\"`#`\" class=\"mt-6\"/>-->\n        <Link :href=\"`/teams/${team.slug}`\" class=\"text-blue-500 hover:text-blue-700 ml-2 uppercase\"> {{ team.name }} ©\n            <span v-if=\"show.last_release_year > 0\" >{{ show.first_release_year }}-{{show.last_release_year}}</span>\n            <span v-if=\"!show.last_release_year && show.first_release_year\">{{show.first_release_year}}</span>\n            <span v-if=\"!show.last_release_year && !show.first_release_year\">{{currentYear}}</span>\n        </Link>\n    </div>\n\n</template>\n\n<script setup>\n\ndefineProps({\n    team: Object,\n    show: Object,\n})\n\nlet currentYear = new Date().getFullYear()\n\n</script>\n","import script from \"./ShowHeader.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ShowHeader.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","\n<template>\n    <div>\n        <Link :href=\"`/shows/${show.slug}`\" class=\"uppercase\">\n            <div class=\"flex flex-row\">\n<!--                <img :src=\"'/storage/images/' + show.poster\" alt=\"\" class=\"w-20 mr-2 justify-left\">-->\n                <SingleImage :image=\"show.image\" :poster=\"show.poster\" alt=\"'show poster'\" class=\"w-20 mr-2 justify-left\" />\n                <span class=\"inline-flex items-center text-3xl font-semibold relative\">{{ show.name }}</span>\n            </div>\n        </Link>\n    </div>\n</template>\n\n<script setup>\nimport {useShowStore} from \"@/Stores/ShowStore.js\";\nimport {useTeamStore} from \"@/Stores/TeamStore.js\";\nimport SingleImage from \"@/Components/Multimedia/SingleImage.vue\";\n\nlet showStore = useShowStore();\nlet teamStore = useTeamStore();\n\ndefineProps({\n    show: Object,\n    team: Object,\n})\n\n</script>\n","import script from \"./EpisodeNoteEdit.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./EpisodeNoteEdit.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <div>\n        <form @submit.prevent=\"\">\n            <input\n                class=\"text-black p-1 w-3/4\"\n                placeholder=\"Write a note...\"\n                type=\"text\"\n                ref=\"episodeNote\"\n                v-model=\"form.note\"\n                @keyup.enter=\"saveNote\"\n                @focusout=\"closeNote\">\n        </form>\n    </div>\n\n</template>\n\n<script setup>\nimport { useShowStore } from \"@/Stores/ShowStore\";\nimport {useForm} from \"@inertiajs/inertia-vue3\";\nimport {onMounted, ref} from \"vue\";\nimport note from \"lodash/seq\";\n\nlet showStore = useShowStore();\n\nshowStore.saveNoteProcessing = false;\n\nlet props = defineProps({\n    episode: Object,\n});\n\nlet form = useForm({\n    note: '',\n});\nform.note = props.episode.notes;\nconst emit = defineEmits(['saveNoteProcessing'])\nconst episodeNote = ref(null);\n\n// Focus the input element when the component is mounted\nonMounted(() => {\n    episodeNote.value.focus();\n});\n\nfunction closeNote() {\n    if (form.note === props.episode.notes) {\n        showStore.noteEdit = 0;\n    } saveNote()\n}\n\nfunction saveNote() {\n\n    // axios.post('/shows/notes', {\n    //     notes: form.note,\n    //     showId: props.show.id,\n    // })\n    //     teamStore.noteEdit = 0;\n    //     updateNote++;\n    //     props.show.note = 'update';\n\n// Why does this not work? We are not\n// getting a response.\n//\n    showStore.saveNoteProcessing = true;\n    showStore.note = form.note;\n    emit('saveNoteProcessing');\n    axios.post('/shows/episode/notes', {\n        notes: form.note,\n        episodeId: props.episode.id,\n    }).then(response => {\n        showStore.noteEdit = 0;\n        console.log('note saved');\n        showStore.saveNoteProcessing = false;\n    })\n        .catch( error => {\n            console.log( error );\n        })\n}\n\n</script>\n","import script from \"./DateTimePicker.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./DateTimePicker.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <div>\n        <DatePicker v-model=\"date\" mode=\"dateTime\" />\n\n    </div>\n</template>\n\n<script setup>\nimport {ref, defineProps, defineEmits, watch} from 'vue';\nimport { DatePicker } from 'v-calendar';\nimport 'v-calendar/style.css';\n\nconst props = defineProps({\n    date: String,\n});\n\nconst emits = defineEmits();\n\nlet date = ref(props.date);\nconst calendar = ref(null);\n\n// Watch for changes in selected dateTime emit it\nwatch([date], ([newDate]) => {\n    emits('date-time-selected', { date: newDate });\n});\n</script>\n","import script from \"./ShowEpisodeStatuses.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ShowEpisodeStatuses.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <div>\n        <button v-if=\"teamStore.can.editShow && props.episodeStatusId !== 9 && props.episodeStatusId !== 10\" :class=\"episodeStatusClass\" @click=\"openEpisodeStatuses()\">{{ episodeStatus }}</button>\n        <div v-if=\"!teamStore.can.editShow || props.episodeStatusId === 9 || props.episodeStatusId === 10\" class=\"cursor-not-allowed\" :class=\"episodeStatusClass\">{{ episodeStatus }}</div>\n\n        <dialog :id=\"dialogId\" class=\"modal\">\n            <div class=\"modal-box h-fit overflow-scroll bg-white text-black\">\n                <div v-if=\"!setDateTime\">\n                    <h2 class=\"text-center mb-2\">Change the Episode Status:</h2>\n                    <div v-for=\"(status, key)  in episodeStatuses\" :key=\"key\" class=\"text-center\">\n                        <div class=\"btn btn-wide my-1\" @click=\"checkEpisodeStatus(episodeId, status.id)\">{{ status.name }}</div>\n                    </div>\n                </div>\n                <div v-if=\"setDateTime\">\n                    <h3 class=\"text-center mb-2\">Set the Scheduled Release Date and Time:</h3>\n                    <div class=\"text-center\">\n                        <DateTimePicker :date=\"props.scheduled_release_dateTime\" @date-time-selected=\"handleScheduledDateTime\" />\n                        <button class=\"btn my-2\" @click=\"changeEpisodeStatus(episodeId, 6)\">Schedule it!</button>\n                        <button class=\"btn ml-2 my-2\" @click=\"cancelScheduleEpisode\">Cancel</button>\n                    </div>\n                </div>\n\n            </div>\n\n            <form method=\"dialog\" class=\"modal-backdrop\">\n                <button>close</button>\n            </form>\n        </dialog>\n\n    </div>\n\n</template>\n\n<script setup>\n\nimport {computed, ref} from \"vue\";\nimport {Inertia} from \"@inertiajs/inertia\";\nimport {useTeamStore} from \"@/Stores/TeamStore\";\nimport {useShowStore} from \"@/Stores/ShowStore\";\nimport DateTimePicker from \"@/Components/Calendar/DateTimePicker.vue\";\nimport DateTimePickerSelect from \"@/Components/Calendar/DateTimePickerSelect.vue\";\nimport {format} from \"date-fns-tz\";\n\nlet teamStore = useTeamStore()\nlet showStore = useShowStore()\n\nlet props = defineProps({\n    episodeId: '',\n    episodeStatus: '',\n    episodeStatusId: '',\n    episodeStatuses: Object,\n    scheduledDateTime: '',\n})\n\nconst errorMessage = ref('');\nconst dialogId = props.episodeId+'episodeStatuses'\n\nlet scheduledDateTime = ref(null)\nlet setDateTime = ref(false)\n\nfunction openEpisodeStatuses() {\n    document.getElementById(dialogId).showModal()\n}\n\n// function checkEpisodeStatus(episodeId, newStatusId) {\n//     setDateTime = true;\n//     if (newStatusId === 6 && scheduledDateTime === null) {\n//         // open a model to set scheduled dateTime\n//\n//         Inertia.reload()\n//     }\n// }\n\nconst checkEpisodeStatus = (episodeId, statusId) => {\n    if (statusId === 6) {\n        // update the modal to set scheduled dateTime\n        setDateTime.value = !setDateTime.value;\n    } else if (statusId !== 6) {\n        changeEpisodeStatus(episodeId, statusId)\n    }\n};\n\nconst cancelScheduleEpisode = () => {\n    setDateTime.value = !setDateTime.value;\n};\n\nconst handleScheduledDateTime = (newDate) => {\n    selectedScheduledDateTime.value = newDate;\n    scheduledDateTime = newDate.date;\n    console.log(scheduledDateTime)\n    updateScheduledDateTime()\n    console.log(formattedScheduledDateTime)\n}\n\nconst userTimezone = ref('');\n\nconst getUserTimezone = () => {\n    // Use the Intl object to get the user's timezone\n    userTimezone.value = Intl.DateTimeFormat().resolvedOptions().timeZone;\n};\n\nlet selectedScheduledDateTime = ref('');\nlet formattedScheduledDateTime = ref(''); // This will display the formatted date and time\n\nconst convertToTimeZone = (dateTime, userTimezone) => {\n    return format(dateTime, 'yyyy-MM-dd HH:mm:ssXXX', { userTimezone });\n};\n\nconst updateScheduledDateTime = () => {\n    if (selectedScheduledDateTime.value) {\n        // Convert the selected date and time to the desired time zone\n        // const timeZone = 'UTC'; // Change this to your desired time zone\n        formattedScheduledDateTime.value = convertToTimeZone(\n            new Date(scheduledDateTime),\n            userTimezone\n        );\n    } else {\n        formattedScheduledDateTime.value = '';\n    }\n};\n\nasync function changeEpisodeStatus(episodeId, statusId) {\n    try {\n        const response = await axios.post('/shows/episode/changeEpisodeStatus', {\n            episode_id: episodeId,\n            new_status_id: statusId,\n            scheduled_release_dateTime: formattedScheduledDateTime.value\n        });\n        // Handle success response as needed\n        // ...\n        // Check if the response contains an \"alert\" message\n        if (response.data.alert) {\n            // Display the alert message\n            alert(response.data.alert);\n        }\n    } catch (error) {\n        if (error.response) {\n            showStore.errorMessage = error.response.data.error\n        } else {\n            // console.error(error);\n        }\n    }\n    // return response\n    document.getElementById(dialogId).close()\n    Inertia.reload()\n}\n\nconst episodeStatusClass = computed(() => ({\n    'btn m-1 w-fit font-semibold text-xl text-orange-400': props.episodeStatusId===1,\n    'btn m-1 w-fit text-xl text-green-400': props.episodeStatusId===2,\n    'btn m-1 w-fit font-semibold text-xl text-green-600': props.episodeStatusId===3,\n    'btn m-1 w-fit font-bold text-xl text-green-600': props.episodeStatusId===4,\n    'btn m-1 w-fit font-semibold text-xl text-purple-700': props.episodeStatusId===5,\n    'btn m-1 w-fit font-italic text-xl text-pink-500': props.episodeStatusId===6,\n    'btn m-1 w-fit font-bold text-xl light:text-black dark:text-white': props.episodeStatusId===7,\n    'btn m-1 w-fit font-medium text-xl text-gray-500': props.episodeStatusId===8,\n    'btn m-1 w-fit font-semibold font-italic text-xl text-red-700': props.episodeStatusId===9,\n    'btn m-1 w-fit font-bold text-xl text-red-800': props.episodeStatusId===10,\n}))\n\n</script>\n","import script from \"./ShowEpisode.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ShowEpisode.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <tr v-if=\"showStore.episodeIsBeingDeleted !== episode.id\">\n        <td class=\"px-6 py-4 text-sm\">\n\n            <!-- If there is no episode number set by the user\n                   the episode number defaults to the episode id           -->\n            <div v-if=\"!episode.episodeNumber\">{{ episode.id }}</div>\n            <div v-if=\"episode.episodeNumber\">{{ episode.episodeNumber }}</div>\n\n        </td>\n        <td class=\"text-xl font-medium flex items-center gap-x-4 px-6 py-4 uppercase w-fit\">\n<!--            <img :src=\"`/storage/images/${episode.poster}`\" alt=\"\" class=\"rounded-xl w-10\">-->\n            <!--                                                    <Link :href=\"`/admin/users/${episode.id}`\" class=\"text-indigo-600 hover:text-indigo-900\">{{ episode.name }}</Link>-->\n            <Link :href=\"`/shows/${showSlug}/episode/${episode.slug}/manage`\" class=\"font-semibold light:text-blue-800 light:hover:text-blue-600 dark:text-blue-400 dark:hover:text-blue-200\">\n\n                {{  episode.name }}\n\n            </Link>\n        </td>\n\n<!--        <td class=\"text-gray-500 px-6 py-4 text-sm\">-->\n<!--            {{episode.notes}}-->\n<!--        </td>-->\n        <td class=\"light:text-gray-600 dark:text-gray-100 px-6 py-4 text-sm w-full min-w-[16rem]\">\n            <span v-if=\"!episode.notes\" v-show=\"showStore.noteEdit !== props.episode.id\" class=\"italic\" @click=\"editNote\">Click here to add/edit a note.</span>\n            <span v-if=\"episode.notes\" v-show=\"showStore.noteEdit !== props.episode.id\" :key=\"componentKey\" @click=\"editNote\">{{ episode.notes }}</span>\n            <div v-if=\"showStore.noteEdit === props.episode.id\">\n\n                <EpisodeNoteEdit :episode=\"props.episode\" v-on:saveNoteProcessing=\"reloadNote\" />\n                <div v-if=\"showStore.saveNoteProcessing\">Saving...</div>\n            </div>\n\n        </td>\n        <td class=\"px-6 py-4 text-right\">\n            <div class=\"dropdown dropdown-left\">\n<!--                <button tabindex=\"0\" :class=\"episodeStatus\" @click=\"openEpisodeStatuses\">{{ episode.episodeStatus }}</button>-->\n                <ShowEpisodeStatuses :episodeStatus=\"props.episode.episodeStatus\"\n                                     :episodeStatusId=\"props.episode.episodeStatusId\"\n                                     :episodeStatuses=\"props.episodeStatuses\"\n                                     :episodeId=\"props.episode.id\"\n                                     :scheduledDateTime=\"props.episode.scheduled_release_dateTime\"/>\n            </div>\n\n        </td>\n        <td>\n            <div class=\"flex flex-row justify-end space-x-1 space-y-1 mr-1\">\n                <div></div>\n                <Link\n                    :href=\"`/shows/${showSlug}/episode/${episode.slug}/edit`\"\n                    v-if=\"teamStore.can.editShow\">\n                    <button\n                        class=\"px-4 py-2 text-white font-semibold bg-blue-500 hover:bg-blue-600 rounded-lg\"\n                    >Edit\n                    </button>\n                </Link>\n                <button\n                    v-if=\"teamStore.can.manageShow && !props.episode.isPublished\"\n                    @click=\"deleteShowEpisode\"\n                    class=\"px-4 py-2 text-white font-semibold bg-red-500 hover:bg-red-600 rounded-lg\"\n                ><font-awesome-icon icon=\"fa-trash-can\" />\n                </button>\n            </div>\n        </td>\n    </tr>\n    <tr v-else>\n        <td class=\"w-full text-center\">\n            <span class=\"loading loading-infinity loading-lg\"></span><span class=\"ml-3\">The episode is being deleted...</span>\n        </td>\n    </tr>\n</template>\n\n<script setup>\nimport { useTeamStore } from \"@/Stores/TeamStore\";\nimport { useShowStore } from \"@/Stores/ShowStore\";\nimport {computed, ref} from \"vue\";\nimport {useForm} from \"@inertiajs/inertia-vue3\";\nimport EpisodeNoteEdit from \"@/Components/Shows/Manage/EpisodeNoteEdit\";\nimport ShowEpisodeStatuses from \"@/Components/Shows/Manage/ShowEpisodeStatuses.vue\";\nimport {FontAwesomeIcon} from \"@fortawesome/vue-fontawesome\";\nimport {Inertia} from \"@inertiajs/inertia\";\n\nlet teamStore = useTeamStore();\nlet showStore = useShowStore();\n\nlet props = defineProps({\n    episode: Object,\n    episodeStatuses: Object,\n    showSlug: String,\n});\n\nlet showEpisodeStatuses = ref(false)\n\nshowStore.noteEdit = 0\nconst componentKey = ref(0);\n\nfunction reloadNote () {\n    props.episode.notes = showStore.note;\n    componentKey.value += 1;\n}\n\nlet form = useForm({\n    note: '',\n});\n\nfunction editNote() {\n    showStore.noteEdit = props.episode.id\n}\n\nfunction openEpisodeStatuses() {\n    document.getElementById('episodeStatuses').showModal()\n}\n\nconst deleteShowEpisode = async () => {\n\n    // episode is being deleted\n\n\n    const confirmation = confirm('Are you sure you want to delete this show episode?');\n\n    if (confirmation) {\n        try {\n            showStore.episodeIsBeingDeleted = props.episode.id;\n            // Make the DELETE request to delete the show episode\n            await axios.delete(`/shows/${props.showSlug}/episode/${props.episode.slug}`)\n                .then((response) => {\n                    // Handle the response\n                    if (response.status === 200) {\n                        // Display the JSON message from the response\n                        showStore.errorMessage = response.data.message\n                        // alert(response.data.message);\n                        // Update the UI\n                        Inertia.reload()\n                        showStore.episodeIsBeingDeleted = 0;\n                        // For example, you can use Inertia's visit method to navigate to a new page:\n                        // await Inertia.visit(route('some.route'));\n                    } else {\n                        // Handle other response statuses if needed\n                        showStore.errorMessage = response.statusText\n                        console.error('Delete request failed:', response.statusText);\n                        showStore.episodeIsBeingDeleted = 0;\n                        Inertia.reload()\n                    }\n                })\n                .catch((error) => {\n                    console.error('Error deleting show episode:', error);\n                    showStore.errorMessage = error\n                    showStore.episodeIsBeingDeleted = 0;\n                    Inertia.reload()\n                });\n\n\n\n            // await Inertia.delete(route('shows.showEpisodes.destroy', [props.showSlug, props.episode.slug]));\n            console.log(\"it should've been deleted\");\n            // Redirect to a different page or update the UI as needed\n\n            console.log('inertia reload');\n            // For example, you can use Inertia's visit method to navigate to a new page:\n            // await Inertia.visit(route('some.route'));\n        } catch (error) {\n            console.error('Error deleting show episode:', error);\n        }\n    }\n};\n\n\n\n\n\n</script>\n","import script from \"./ShowEpisodesList.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ShowEpisodesList.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n\n    <table class=\"min-w-full divide-y divide-gray-200\">\n        <thead class=\"divide-y divide-gray-200\">\n        <!--                                <tr v-for=\"episode in episodes.data\" :key=\"episode.id\">-->\n        <tr>\n            <td class=\"px-6 py-4 whitespace-nowrap\">\n                <div class=\"flex items-center\">\n                    <div>\n                        <div class=\"text-sm font-medium pl-14\">\n                            <!--                                                    <Link :href=\"`/admin/users/${episode.id}`\" class=\"text-indigo-600 hover:text-indigo-900\">{{ episode.name }}</Link>-->\n                            Name\n                        </div>\n                    </div>\n                </div>\n            </td>\n\n            <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n                Role\n            </td>\n\n            <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n                Completed Assignments\n            </td>\n\n            <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n                Total Credits\n            </td>\n\n            <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-right\">\n                Status\n            </td>\n        </tr>\n        </thead>\n        <tbody class=\"bg-white divide-y divide-gray-200\">\n        <!--  INSERT CREDITS HERE  -->\n        </tbody>\n\n    </table>\n\n</template>\n\n<script setup>\n\n\n</script>\n","import { render } from \"./ShowCreditsList.vue?vue&type=template&id=2e1f3e48\"\nconst script = {}\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import script from \"./Manage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Manage.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n\n    <Head :title=\"`Manage Show: ${props.show.name}`\"/>\n\n    <div id=\"topDiv\" class=\"place-self-center flex flex-col\">\n        <div class=\"min-h-screen bg-white text-black dark:bg-gray-900 dark:text-gray-50 rounded px-5 pb-36\">\n\n            <Message v-if=\"userStore.showFlashMessage\" :flash=\"$page.props.flash\"/>\n            <div class=\"alert alert-error mt-4 mx-3\"\n                 v-if=\"showStore.errorMessage\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\" /></svg>\n                <span>{{ showStore.errorMessage }}</span>\n                <button class=\"text-xs ml-12\" @click=\"showStore.errorMessage = ''\"> Close</button>\n            </div>\n\n            <header>\n            <div class=\"flex justify-between mb-3 pt-6\">\n                <div class=\"gap-2\">\n                    <div class=\"font-bold mb-4 text-orange-400\">MANAGE SHOW</div>\n                    <div>\n                        <ShowHeader\n                            :show=\"props.show\"\n                            :team=\"props.team\"\n                        />\n                    </div>\n                </div>\n\n\n                <div>\n                    <div class=\"flex flex-wrap-reverse justify-end gap-2\">\n                        <div class=\"\">\n                            <Link\n                                :href=\"`/golive`\"\n                                v-if=\"teamStore.can.goLive\">\n                                <button\n                                    class=\"px-4 py-2 text-white font-semibold bg-red-500 hover:bg-red-600 rounded-lg disabled:bg-gray-400\"\n                                >Go Live\n                                </button>\n                            </Link>\n                        </div>\n                        <div class=\"\">\n                        <Link\n                            :href=\"route('shows.createEpisode',{show: props.show.slug})\"\n                            v-if=\"teamStore.can.createEpisode\">\n                            <button\n                                class=\"px-4 py-2 text-white font-semibold bg-green-500 hover:bg-green-600 rounded-lg disabled:bg-gray-400\"\n\n                            >Create Episode\n                            </button>\n                        </Link>\n                        </div>\n                        <div class=\"\">\n                            <Link\n                                :href=\"`/shows/${show.slug}/edit`\"\n                                v-if=\"teamStore.can.editShow\">\n                                <button\n                                    class=\"px-4 py-2 text-white font-semibold bg-blue-500 hover:bg-blue-600 rounded-lg\"\n                                >Edit\n                                </button>\n                            </Link>\n                        </div>\n                        <div hidden>\n                            <Link :href=\"`/dashboard`\">\n                                <button\n                                    class=\"px-4 py-2 text-white bg-blue-600 hover:bg-blue-500 rounded-lg\"\n                                >Dashboard\n                                </button>\n                            </Link>\n                        </div>\n                    </div>\n\n\n\n                <div class=\"flex justify-end mt-6\">\n                    <div class=\"flex flex-col\">\n                        <div><span class=\"text-xs  font-semibold uppercase\">Team: </span><Link :href=\"`/teams/${team.slug}/manage`\" class=\"text-blue-500 ml-2 uppercase font-bold\"> {{ team.name }} </Link></div>\n                        <div><span class=\"text-xs  font-semibold mr-2 uppercase\">Show Runner: </span><span class=\"font-bold\"> {{ show.showRunner }} </span></div>\n                        <div><span class=\"text-xs  font-semibold mr-2 uppercase\">Category: </span><span class=\"font-bold\"> {{ show.categoryName }} </span></div>\n                        <div><span class=\"text-xs  font-semibold mr-2 uppercase\">Sub-category: </span><span class=\"font-bold\"> {{ show.subCategoryName }} </span></div>\n                    </div>\n                </div>\n\n\n                </div>\n\n            </div>\n            </header>\n\n\n<!--            <div class=\"my-6 ml-10 w-3/4\">-->\n<!--                {{ teamStore.activeShow.description }}-->\n<!--            </div>-->\n\n            <div class=\"p-5 text-gray-100\">\n                <span class=\"uppercase text-xs font-semibold text-orange-300\">SHOW NOTES: </span>\n                <span class=\"text-black light:text-black dark:text-white\">{{ props.show.notes }}</span>\n            </div>\n\n\n            <div class=\"flex flex-col\">\n                <div class=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\n                    <div class=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\n                        <div class=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\n\n<!-- This code doesn't work .. it's meant to become a header button that collapses/expands each section -->\n<!--                            <button class=\"bg-orange-300 p-2 font-bold w-full text-left\" type=\"button\"-->\n<!--                                    data-bs-toggle=\"collapse\" data-bs-target=\"#collapseExample\" aria-expanded=\"true\"-->\n<!--                                    aria-controls=\"collapseExample\">Episodes-->\n<!--                            </button>-->\n\n<!--                            <div class=\"collapse\" id=\"collapseExample\">-->\n                            <div>\n                                <div class=\"bg-orange-300 p-2 font-bold text-black\">Episodes</div>\n\n                                <ShowEpisodesList :episodes=\"props.episodes\" :show=\"props.show\" :episodeStatuses=\"props.episodeStatuses\"/>\n                            </div>\n\n                            <!--                            <table class=\"min-w-full divide-y divide-gray-200\">-->\n                            <!--                                <tbody class=\"bg-white divide-y divide-gray-200\">-->\n                            <!--                                <tr v-for=\"episode in episodes.data\" :key=\"episode.id\">-->\n                            <!--                                    <td class=\"px-6 py-4 whitespace-nowrap\">-->\n                            <!--                                        <div class=\"flex items-center\">-->\n                            <!--                                            <div>-->\n                            <!--                                                <div class=\"text-sm font-medium text-gray-900\">-->\n                            <!--                                                    <Link :href=\"`/admin/users/${episode.id}`\" class=\"text-indigo-600 hover:text-indigo-900\">{{ episode.name }}</Link>-->\n                            <!--                                                </div>-->\n                            <!--                                            </div>-->\n                            <!--                                        </div>-->\n                            <!--                                    </td>-->\n\n                            <!--                                    <td class=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">-->\n                            <!--                                        <Link :href=\"`/admin/users/edit/${episode.id}`\" class=\"text-indigo-600 hover:text-indigo-900\">Edit</Link>-->\n                            <!--                                    </td>-->\n                            <!--                                </tr>-->\n                            <!--                                </tbody>-->\n                            <!--                            </table>-->\n\n                            <!--                            &lt;!&ndash; Paginator &ndash;&gt;-->\n                            <!--                            <Pagination :links=\"episode.links\" class=\"mt-6\"/>-->\n\n                        </div>\n\n                        <div class=\"mt-4 shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\n                            <div class=\"bg-orange-300 p-2 font-bold text-black\">Credits</div>\n                            <div class=\"border-1 border-t mb-3 bg-orange-300 py-1 px-2 text-xs font-semibold text-red-800\">\n                                In development. Not currently working.\n                            </div>\n                            <Link\n                                :href=\"`#`\"\n                                v-if=\"teamStore.can.createAssignment\">\n                                <button\n                                    class=\"bg-green-500 hover:bg-green-600 text-white ml-2 my-2 px-4 py-2 rounded disabled:bg-gray-400 h-max w-max\"\n                                    disabled\n                                >Create Assignment\n                                </button>\n                            </Link>\n\n                            <ShowCreditsList/>\n\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n            <ShowFooter :team=\"props.team\" :show=\"props.show\"/>\n        </div>\n    </div>\n\n</template>\n\n<script setup>\nimport {useVideoPlayerStore} from \"@/Stores/VideoPlayerStore.js\"\nimport {useShowStore} from \"@/Stores/ShowStore.js\"\nimport {useTeamStore} from \"@/Stores/TeamStore.js\"\nimport {useUserStore} from \"@/Stores/UserStore\";\nimport ShowHeader from \"@/Components/Shows/ShowHeader\"\nimport ShowEpisodesList from \"@/Components/Shows/Manage/ShowEpisodesList\"\nimport ShowFooter from \"@/Components/Shows/ShowFooter\"\nimport ShowCreditsList from \"@/Components/Shows/Manage/ShowCreditsList\";\nimport Message from \"@/Components/Modals/Messages\";\nimport {onBeforeMount, onMounted, onUnmounted, ref} from \"vue\";\n\n\nlet videoPlayerStore = useVideoPlayerStore()\nlet showStore = useShowStore();\nlet teamStore = useTeamStore();\nlet userStore = useUserStore()\n\nuserStore.currentPage = 'shows'\nuserStore.showFlashMessage = true;\n\nonMounted(() => {\n    videoPlayerStore.makeVideoTopRight();\n    if (userStore.isMobile) {\n        videoPlayerStore.ottClass = 'ottClose'\n        videoPlayerStore.ott = 0\n    }\n    document.getElementById(\"topDiv\").scrollIntoView()\n});\n\nonUnmounted( () => {\n    showStore.errorMessage = ''\n})\n\nlet props = defineProps({\n    show: Object,\n    team: Object,\n    episodes: Object,\n    episodeStatuses: Object,\n    // filters: Object,\n    can: Object,\n});\n\nteamStore.setActiveTeam(props.team);\nteamStore.setActiveShow(props.show);\nteamStore.can = props.can;\n\n// let search = ref(props.filters.search);\n//\n// watch(search, throttle(function (value) {\n//     Inertia.get('/shows', { search: value }, {\n//         preserveState: true,\n//         replace: true\n//     });\n// }, 300));\n\n\n\n</script>\n\n\n"],"names":["useTeamStore","defineStore","state","id","name","description","slug","totalSpots","memberSpots","teamLeader","members","managers","activeShow","activeEpisode","creators","showModal","Boolean","confirmDialog","confirmManagerDialog","selectedManagerName","selectedManagerId","addManager","removeManager","deleteMemberName","deleteMemberId","noteEdit","note","saveNoteProcessing","goLiveDisplay","can","actions","setActiveTeam","team","this","setActiveShow","show","setActiveEpisode","episode","deleteTeamMemberCancel","confirmTeamManagerCancel","deleteTeamMember","Inertia","visit","route","method","data","user_id","team_id","team_slug","addTeamManager","removeTeamManager","toggleGoLiveDisplay","getters","spotsRemaining","date","ref","props","inputValue","watch","_ref2","newDate","_slicedToArray","emits","currentYear","Date","getFullYear","useShowStore","showStore","form","useForm","notes","episodeNote","closeNote","saveNote","emit","axios","post","episodeId","then","response","console","log","error","onMounted","value","focus","teamStore","dialogId","scheduledDateTime","setDateTime","cancelScheduleEpisode","handleScheduledDateTime","selectedScheduledDateTime","updateScheduledDateTime","formattedScheduledDateTime","userTimezone","dateTime","format","convertToTimeZone","changeEpisodeStatus","_x","_x2","_changeEpisodeStatus","apply","arguments","_regeneratorRuntime","mark","_callee","statusId","wrap","_context","prev","next","episode_id","new_status_id","scheduled_release_dateTime","sent","alert","t0","errorMessage","document","getElementById","close","reload","stop","episodeStatusClass","computed","episodeStatusId","componentKey","reloadNote","editNote","deleteShowEpisode","_ref","confirm","episodeIsBeingDeleted","concat","showSlug","status","message","statusText","class","_createElementVNode","script","_createElementBlock","_hoisted_1","_hoisted_4","videoPlayerStore","useVideoPlayerStore","userStore","useUserStore","currentPage","showFlashMessage","makeVideoTopRight","isMobile","ottClass","ott","scrollIntoView","onUnmounted"],"sourceRoot":""}
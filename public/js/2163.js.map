{"version":3,"file":"js/2163.js","mappings":";+bACAA,EAAA,kBAAAC,CAAA,MAAAC,EAAAD,EAAA,GAAAE,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAK,gBAAA,SAAAP,EAAAD,EAAAE,GAAAD,EAAAD,GAAAE,EAAAO,KAAA,EAAAC,EAAA,mBAAAC,OAAAA,OAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAjB,EAAAD,EAAAE,GAAA,OAAAC,OAAAK,eAAAP,EAAAD,EAAA,CAAAS,MAAAP,EAAAiB,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAApB,EAAAD,EAAA,KAAAkB,EAAA,aAAAjB,GAAAiB,EAAA,SAAAjB,EAAAD,EAAAE,GAAA,OAAAD,EAAAD,GAAAE,CAAA,WAAAoB,EAAArB,EAAAD,EAAAE,EAAAG,GAAA,IAAAK,EAAAV,GAAAA,EAAAI,qBAAAmB,EAAAvB,EAAAuB,EAAAX,EAAAT,OAAAqB,OAAAd,EAAAN,WAAAU,EAAA,IAAAW,EAAApB,GAAA,WAAAE,EAAAK,EAAA,WAAAH,MAAAiB,EAAAzB,EAAAC,EAAAY,KAAAF,CAAA,UAAAe,EAAA1B,EAAAD,EAAAE,GAAA,WAAA0B,KAAA,SAAAC,IAAA5B,EAAA6B,KAAA9B,EAAAE,GAAA,OAAAD,GAAA,OAAA2B,KAAA,QAAAC,IAAA5B,EAAA,EAAAD,EAAAsB,KAAAA,EAAA,IAAAS,EAAA,iBAAAC,EAAA,iBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,YAAAZ,IAAA,UAAAa,IAAA,UAAAC,IAAA,KAAAC,EAAA,GAAApB,EAAAoB,EAAA1B,GAAA,8BAAA2B,EAAApC,OAAAqC,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAA,MAAAD,GAAAA,IAAAvC,GAAAG,EAAAyB,KAAAW,EAAA7B,KAAA0B,EAAAG,GAAA,IAAAE,EAAAN,EAAAjC,UAAAmB,EAAAnB,UAAAD,OAAAqB,OAAAc,GAAA,SAAAM,EAAA3C,GAAA,0BAAA4C,SAAA,SAAA7C,GAAAkB,EAAAjB,EAAAD,GAAA,SAAAC,GAAA,YAAA6C,QAAA9C,EAAAC,EAAA,gBAAA8C,EAAA9C,EAAAD,GAAA,SAAAgD,EAAA9C,EAAAK,EAAAG,EAAAE,GAAA,IAAAE,EAAAa,EAAA1B,EAAAC,GAAAD,EAAAM,GAAA,aAAAO,EAAAc,KAAA,KAAAZ,EAAAF,EAAAe,IAAAE,EAAAf,EAAAP,MAAA,OAAAsB,GAAA,UAAAkB,EAAAlB,IAAA1B,EAAAyB,KAAAC,EAAA,WAAA/B,EAAAkD,QAAAnB,EAAAoB,SAAAC,MAAA,SAAAnD,GAAA+C,EAAA,OAAA/C,EAAAS,EAAAE,EAAA,aAAAX,GAAA+C,EAAA,QAAA/C,EAAAS,EAAAE,EAAA,IAAAZ,EAAAkD,QAAAnB,GAAAqB,MAAA,SAAAnD,GAAAe,EAAAP,MAAAR,EAAAS,EAAAM,EAAA,aAAAf,GAAA,OAAA+C,EAAA,QAAA/C,EAAAS,EAAAE,EAAA,IAAAA,EAAAE,EAAAe,IAAA,KAAA3B,EAAAK,EAAA,gBAAAE,MAAA,SAAAR,EAAAI,GAAA,SAAAgD,IAAA,WAAArD,GAAA,SAAAA,EAAAE,GAAA8C,EAAA/C,EAAAI,EAAAL,EAAAE,EAAA,WAAAA,EAAAA,EAAAA,EAAAkD,KAAAC,EAAAA,GAAAA,GAAA,aAAA3B,EAAA1B,EAAAE,EAAAG,GAAA,IAAAE,EAAAwB,EAAA,gBAAArB,EAAAE,GAAA,GAAAL,IAAA0B,EAAA,UAAAqB,MAAA,mCAAA/C,IAAA2B,EAAA,cAAAxB,EAAA,MAAAE,EAAA,OAAAH,MAAAR,EAAAsD,MAAA,OAAAlD,EAAAmD,OAAA9C,EAAAL,EAAAwB,IAAAjB,IAAA,KAAAE,EAAAT,EAAAoD,SAAA,GAAA3C,EAAA,KAAAE,EAAA0C,EAAA5C,EAAAT,GAAA,GAAAW,EAAA,IAAAA,IAAAmB,EAAA,gBAAAnB,CAAA,cAAAX,EAAAmD,OAAAnD,EAAAsD,KAAAtD,EAAAuD,MAAAvD,EAAAwB,SAAA,aAAAxB,EAAAmD,OAAA,IAAAjD,IAAAwB,EAAA,MAAAxB,EAAA2B,EAAA7B,EAAAwB,IAAAxB,EAAAwD,kBAAAxD,EAAAwB,IAAA,gBAAAxB,EAAAmD,QAAAnD,EAAAyD,OAAA,SAAAzD,EAAAwB,KAAAtB,EAAA0B,EAAA,IAAAK,EAAAX,EAAA3B,EAAAE,EAAAG,GAAA,cAAAiC,EAAAV,KAAA,IAAArB,EAAAF,EAAAkD,KAAArB,EAAAF,EAAAM,EAAAT,MAAAM,EAAA,gBAAA1B,MAAA6B,EAAAT,IAAA0B,KAAAlD,EAAAkD,KAAA,WAAAjB,EAAAV,OAAArB,EAAA2B,EAAA7B,EAAAmD,OAAA,QAAAnD,EAAAwB,IAAAS,EAAAT,IAAA,YAAA6B,EAAA1D,EAAAE,GAAA,IAAAG,EAAAH,EAAAsD,OAAAjD,EAAAP,EAAAa,SAAAR,GAAA,GAAAE,IAAAN,EAAA,OAAAC,EAAAuD,SAAA,eAAApD,GAAAL,EAAAa,SAAA,SAAAX,EAAAsD,OAAA,SAAAtD,EAAA2B,IAAA5B,EAAAyD,EAAA1D,EAAAE,GAAA,UAAAA,EAAAsD,SAAA,WAAAnD,IAAAH,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAA,IAAAkC,UAAA,oCAAA1D,EAAA,aAAA8B,EAAA,IAAAzB,EAAAiB,EAAApB,EAAAP,EAAAa,SAAAX,EAAA2B,KAAA,aAAAnB,EAAAkB,KAAA,OAAA1B,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAAnB,EAAAmB,IAAA3B,EAAAuD,SAAA,KAAAtB,EAAA,IAAAvB,EAAAF,EAAAmB,IAAA,OAAAjB,EAAAA,EAAA2C,MAAArD,EAAAF,EAAAgE,YAAApD,EAAAH,MAAAP,EAAA+D,KAAAjE,EAAAkE,QAAA,WAAAhE,EAAAsD,SAAAtD,EAAAsD,OAAA,OAAAtD,EAAA2B,IAAA5B,GAAAC,EAAAuD,SAAA,KAAAtB,GAAAvB,GAAAV,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAA,IAAAkC,UAAA,oCAAA7D,EAAAuD,SAAA,KAAAtB,EAAA,UAAAgC,EAAAlE,GAAA,IAAAD,EAAA,CAAAoE,OAAAnE,EAAA,SAAAA,IAAAD,EAAAqE,SAAApE,EAAA,SAAAA,IAAAD,EAAAsE,WAAArE,EAAA,GAAAD,EAAAuE,SAAAtE,EAAA,SAAAuE,WAAAC,KAAAzE,EAAA,UAAA0E,EAAAzE,GAAA,IAAAD,EAAAC,EAAA0E,YAAA,GAAA3E,EAAA4B,KAAA,gBAAA5B,EAAA6B,IAAA5B,EAAA0E,WAAA3E,CAAA,UAAAyB,EAAAxB,GAAA,KAAAuE,WAAA,EAAAJ,OAAA,SAAAnE,EAAA4C,QAAAsB,EAAA,WAAAS,OAAA,YAAAlC,EAAA1C,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAAE,EAAAF,EAAAY,GAAA,GAAAV,EAAA,OAAAA,EAAA4B,KAAA9B,GAAA,sBAAAA,EAAAiE,KAAA,OAAAjE,EAAA,IAAA6E,MAAA7E,EAAA8E,QAAA,KAAAvE,GAAA,EAAAG,EAAA,SAAAuD,IAAA,OAAA1D,EAAAP,EAAA8E,QAAA,GAAAzE,EAAAyB,KAAA9B,EAAAO,GAAA,OAAA0D,EAAAxD,MAAAT,EAAAO,GAAA0D,EAAAV,MAAA,EAAAU,EAAA,OAAAA,EAAAxD,MAAAR,EAAAgE,EAAAV,MAAA,EAAAU,CAAA,SAAAvD,EAAAuD,KAAAvD,CAAA,YAAAqD,UAAAd,EAAAjD,GAAA,2BAAAoC,EAAAhC,UAAAiC,EAAA9B,EAAAoC,EAAA,eAAAlC,MAAA4B,EAAAjB,cAAA,IAAAb,EAAA8B,EAAA,eAAA5B,MAAA2B,EAAAhB,cAAA,IAAAgB,EAAA2C,YAAA7D,EAAAmB,EAAArB,EAAA,qBAAAhB,EAAAgF,oBAAA,SAAA/E,GAAA,IAAAD,EAAA,mBAAAC,GAAAA,EAAAgF,YAAA,QAAAjF,IAAAA,IAAAoC,GAAA,uBAAApC,EAAA+E,aAAA/E,EAAAkF,MAAA,EAAAlF,EAAAmF,KAAA,SAAAlF,GAAA,OAAAE,OAAAiF,eAAAjF,OAAAiF,eAAAnF,EAAAoC,IAAApC,EAAAoF,UAAAhD,EAAAnB,EAAAjB,EAAAe,EAAA,sBAAAf,EAAAG,UAAAD,OAAAqB,OAAAmB,GAAA1C,CAAA,EAAAD,EAAAsF,MAAA,SAAArF,GAAA,OAAAkD,QAAAlD,EAAA,EAAA2C,EAAAG,EAAA3C,WAAAc,EAAA6B,EAAA3C,UAAAU,GAAA,0BAAAd,EAAA+C,cAAAA,EAAA/C,EAAAuF,MAAA,SAAAtF,EAAAC,EAAAG,EAAAE,EAAAG,QAAA,IAAAA,IAAAA,EAAA8E,SAAA,IAAA5E,EAAA,IAAAmC,EAAAzB,EAAArB,EAAAC,EAAAG,EAAAE,GAAAG,GAAA,OAAAV,EAAAgF,oBAAA9E,GAAAU,EAAAA,EAAAqD,OAAAb,MAAA,SAAAnD,GAAA,OAAAA,EAAAsD,KAAAtD,EAAAQ,MAAAG,EAAAqD,MAAA,KAAArB,EAAAD,GAAAzB,EAAAyB,EAAA3B,EAAA,aAAAE,EAAAyB,EAAA/B,GAAA,0BAAAM,EAAAyB,EAAA,qDAAA3C,EAAAyF,KAAA,SAAAxF,GAAA,IAAAD,EAAAG,OAAAF,GAAAC,EAAA,WAAAG,KAAAL,EAAAE,EAAAuE,KAAApE,GAAA,OAAAH,EAAAwF,UAAA,SAAAzB,IAAA,KAAA/D,EAAA4E,QAAA,KAAA7E,EAAAC,EAAAyF,MAAA,GAAA1F,KAAAD,EAAA,OAAAiE,EAAAxD,MAAAR,EAAAgE,EAAAV,MAAA,EAAAU,CAAA,QAAAA,EAAAV,MAAA,EAAAU,CAAA,GAAAjE,EAAA0C,OAAAA,EAAAjB,EAAArB,UAAA,CAAA6E,YAAAxD,EAAAmD,MAAA,SAAA5E,GAAA,QAAA4F,KAAA,OAAA3B,KAAA,OAAAN,KAAA,KAAAC,MAAA3D,EAAA,KAAAsD,MAAA,OAAAE,SAAA,UAAAD,OAAA,YAAA3B,IAAA5B,EAAA,KAAAuE,WAAA3B,QAAA6B,IAAA1E,EAAA,QAAAE,KAAA,WAAAA,EAAA2F,OAAA,IAAAxF,EAAAyB,KAAA,KAAA5B,KAAA2E,OAAA3E,EAAA4F,MAAA,WAAA5F,GAAAD,EAAA,EAAA8F,KAAA,gBAAAxC,MAAA,MAAAtD,EAAA,KAAAuE,WAAA,GAAAG,WAAA,aAAA1E,EAAA2B,KAAA,MAAA3B,EAAA4B,IAAA,YAAAmE,IAAA,EAAAnC,kBAAA,SAAA7D,GAAA,QAAAuD,KAAA,MAAAvD,EAAA,IAAAE,EAAA,cAAA+F,EAAA5F,EAAAE,GAAA,OAAAK,EAAAgB,KAAA,QAAAhB,EAAAiB,IAAA7B,EAAAE,EAAA+D,KAAA5D,EAAAE,IAAAL,EAAAsD,OAAA,OAAAtD,EAAA2B,IAAA5B,KAAAM,CAAA,SAAAA,EAAA,KAAAiE,WAAAM,OAAA,EAAAvE,GAAA,IAAAA,EAAA,KAAAG,EAAA,KAAA8D,WAAAjE,GAAAK,EAAAF,EAAAiE,WAAA,YAAAjE,EAAA0D,OAAA,OAAA6B,EAAA,UAAAvF,EAAA0D,QAAA,KAAAwB,KAAA,KAAA9E,EAAAT,EAAAyB,KAAApB,EAAA,YAAAM,EAAAX,EAAAyB,KAAApB,EAAA,iBAAAI,GAAAE,EAAA,SAAA4E,KAAAlF,EAAA2D,SAAA,OAAA4B,EAAAvF,EAAA2D,UAAA,WAAAuB,KAAAlF,EAAA4D,WAAA,OAAA2B,EAAAvF,EAAA4D,WAAA,SAAAxD,GAAA,QAAA8E,KAAAlF,EAAA2D,SAAA,OAAA4B,EAAAvF,EAAA2D,UAAA,YAAArD,EAAA,UAAAsC,MAAA,kDAAAsC,KAAAlF,EAAA4D,WAAA,OAAA2B,EAAAvF,EAAA4D,WAAA,KAAAR,OAAA,SAAA7D,EAAAD,GAAA,QAAAE,EAAA,KAAAsE,WAAAM,OAAA,EAAA5E,GAAA,IAAAA,EAAA,KAAAK,EAAA,KAAAiE,WAAAtE,GAAA,GAAAK,EAAA6D,QAAA,KAAAwB,MAAAvF,EAAAyB,KAAAvB,EAAA,oBAAAqF,KAAArF,EAAA+D,WAAA,KAAA5D,EAAAH,EAAA,OAAAG,IAAA,UAAAT,GAAA,aAAAA,IAAAS,EAAA0D,QAAApE,GAAAA,GAAAU,EAAA4D,aAAA5D,EAAA,UAAAE,EAAAF,EAAAA,EAAAiE,WAAA,UAAA/D,EAAAgB,KAAA3B,EAAAW,EAAAiB,IAAA7B,EAAAU,GAAA,KAAA8C,OAAA,YAAAS,KAAAvD,EAAA4D,WAAAnC,GAAA,KAAA+D,SAAAtF,EAAA,EAAAsF,SAAA,SAAAjG,EAAAD,GAAA,aAAAC,EAAA2B,KAAA,MAAA3B,EAAA4B,IAAA,gBAAA5B,EAAA2B,MAAA,aAAA3B,EAAA2B,KAAA,KAAAqC,KAAAhE,EAAA4B,IAAA,WAAA5B,EAAA2B,MAAA,KAAAoE,KAAA,KAAAnE,IAAA5B,EAAA4B,IAAA,KAAA2B,OAAA,cAAAS,KAAA,kBAAAhE,EAAA2B,MAAA5B,IAAA,KAAAiE,KAAAjE,GAAAmC,CAAA,EAAAgE,OAAA,SAAAlG,GAAA,QAAAD,EAAA,KAAAwE,WAAAM,OAAA,EAAA9E,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAsE,WAAAxE,GAAA,GAAAE,EAAAoE,aAAArE,EAAA,YAAAiG,SAAAhG,EAAAyE,WAAAzE,EAAAqE,UAAAG,EAAAxE,GAAAiC,CAAA,kBAAAlC,GAAA,QAAAD,EAAA,KAAAwE,WAAAM,OAAA,EAAA9E,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAsE,WAAAxE,GAAA,GAAAE,EAAAkE,SAAAnE,EAAA,KAAAI,EAAAH,EAAAyE,WAAA,aAAAtE,EAAAuB,KAAA,KAAArB,EAAAF,EAAAwB,IAAA6C,EAAAxE,EAAA,QAAAK,CAAA,YAAA+C,MAAA,0BAAA8C,cAAA,SAAApG,EAAAE,EAAAG,GAAA,YAAAoD,SAAA,CAAA5C,SAAA6B,EAAA1C,GAAAgE,WAAA9D,EAAAgE,QAAA7D,GAAA,cAAAmD,SAAA,KAAA3B,IAAA5B,GAAAkC,CAAA,GAAAnC,CAAA,UAAAqG,EAAAC,EAAApD,EAAAqD,EAAAC,EAAAC,EAAAC,EAAA7E,GAAA,QAAA8E,EAAAL,EAAAI,GAAA7E,GAAApB,EAAAkG,EAAAlG,KAAA,OAAAmG,GAAA,YAAAL,EAAAK,EAAA,CAAAD,EAAApD,KAAAL,EAAAzC,GAAA+E,QAAAtC,QAAAzC,GAAA2C,KAAAoD,EAAAC,EAAA,UAAAI,EAAAC,GAAA,sBAAAC,EAAA,KAAAC,EAAAC,UAAA,WAAAzB,SAAA,SAAAtC,EAAAqD,GAAA,IAAAD,EAAAQ,EAAAI,MAAAH,EAAAC,GAAA,SAAAR,EAAA/F,GAAA4F,EAAAC,EAAApD,EAAAqD,EAAAC,EAAAC,EAAA,OAAAhG,EAAA,UAAAgG,EAAAU,GAAAd,EAAAC,EAAApD,EAAAqD,EAAAC,EAAAC,EAAA,QAAAU,EAAA,CAAAX,OAAAY,EAAA,KAKA,IAAMC,EAAe,WAAH,MAAU,CACxBC,+BAA+B,EAC/BC,UAAW,KACXC,QAAS,KACTC,kBAAmB,KACnBC,eAAgB,KAEhBC,MAAO,GACPC,UAAW,GACXC,WAAY,GACZC,QAAQ,EACRC,aAAa,EACbC,WAAY,KACZC,QAAS,KACTC,aAAc,GACdC,uBAAuB,EACvBC,qBAAsB,KACtBC,2BAA2B,EAC3BC,kCAAkC,EAClCC,mBAAmB,EACnBC,qCAAqC,EACrCC,cAAe,KACfC,qBAAsB,KACzB,EAEYC,GAAiBC,EAAAA,EAAAA,IAAY,cAAe,CACrDC,MAAOxB,EACPyB,QAAS,CACLlE,MAAK,WAEDzE,OAAO4I,OAAOC,KA9BE,CACxB1B,+BAA+B,EAC/BC,UAAW,KACXC,QAAS,KACTC,kBAAmB,KACnBC,eAAgB,KAEhBC,MAAO,GACPC,UAAW,GACXC,WAAY,GACZC,QAAQ,EACRC,aAAa,EACbC,WAAY,KACZC,QAAS,KACTC,aAAc,GACdC,uBAAuB,EACvBC,qBAAsB,KACtBC,2BAA2B,EAC3BC,kCAAkC,EAClCC,mBAAmB,EACnBC,qCAAqC,EACrCC,cAAe,KACfC,qBAAsB,MASlB,EACMO,WAAU,WAAG,IAAAC,EAAA,YAAArC,EAAA9G,IAAAoF,MAAA,SAAAgE,IAAA,IAAAC,EAAA,OAAArJ,IAAAuB,MAAA,SAAA+H,GAAA,cAAAA,EAAAzD,KAAAyD,EAAApF,MAAA,cAAAoF,EAAAzD,KAAA,EAAAyD,EAAApF,KAAA,EAEYqF,MAAMC,IAAI,kBAAiB,OAA5CH,EAAQC,EAAA1F,KACduF,EAAKvB,MAAQyB,EAASI,KAAIH,EAAApF,KAAA,eAAAoF,EAAAzD,KAAA,EAAAyD,EAAAI,GAAAJ,EAAA,iCAAAA,EAAAtD,OAAA,GAAAoD,EAAA,iBAHftC,EAQnB,EAIM6C,kBAAiB,WAAG,IAAAC,EAAA,YAAA9C,EAAA9G,IAAAoF,MAAA,SAAAyE,IAAA,IAAAR,EAAA,OAAArJ,IAAAuB,MAAA,SAAAuI,GAAA,cAAAA,EAAAjE,KAAAiE,EAAA5F,MAAA,UACjB0F,EAAKjC,eAAgB,CAAFmC,EAAA5F,KAAA,cAEd,IAAIX,MAAM,oBAAmB,cAAAuG,EAAAjE,KAAA,EAAAiE,EAAA5F,KAAA,EAIZqF,MAAMQ,KAAK,kBAADC,OAAmBJ,EAAKjC,eAAc,gBAAc,OASpF,OATK0B,EAAQS,EAAAlG,KAMVgG,EAAKjC,gBAAkB0B,EAASI,KAAKQ,aACrCL,EAAKM,aAAaC,qBAAuBd,EAASI,KAClDG,EAAKM,aAAaE,wBAA0Bf,EAASI,KAAKQ,YAC7DH,EAAA/F,OAAA,SACMsF,EAASI,MAAI,cAAAK,EAAAjE,KAAA,GAAAiE,EAAAJ,GAAAI,EAAA,SAAAA,EAAAJ,GAAA,yBAAAI,EAAA9D,OAAA,GAAA6D,EAAA,kBAjBF/C,EAsB1B,EAGAuD,sBAAqB,WAAG,IAAAC,EAAAC,EAAA,KACdC,EAAOvB,KAAKrB,MAAM6C,MAAK,SAAAD,GAAI,OAAIA,EAAKE,KAAOH,EAAK5C,cAAc,KAAK,KACnEE,GAAY2C,SAA0B,QAAtBF,EAAJE,EAAML,4BAAoB,IAAAG,OAAA,EAA1BA,EAA4BnF,OAAQ,gDAMtD,OAHA8D,KAAKpB,UAAYA,EAGVA,CACX,EAiCA8C,kBAAiB,SAACC,GACd3B,KAAKtB,eAAiBiD,EACtB3B,KAAK4B,oBACT,EAEAA,mBAAkB,WAAG,IAAAC,EAAA,KACjB7B,KAAKiB,aAAejB,KAAKrB,MAAM6C,MAAK,SAAAD,GAAI,OAAIA,EAAKE,KAAOI,EAAKnD,cAAc,KAAK,IACpF,EACAoD,OAAM,WACF9B,KAAKlB,QAAS,CAClB,EACAiD,SAAQ,WACJ/B,KAAKlB,QAAS,CAClB,EACMkD,eAAc,WAAG,IAAAC,EAAA,YAAApE,EAAA9G,IAAAoF,MAAA,SAAA+F,IAAA,IAAAC,EAAAC,EAAAhC,EAAAiC,EAAAC,EAAAC,EAAA,OAAAxL,IAAAuB,MAAA,SAAAkK,GAAA,cAAAA,EAAA5F,KAAA4F,EAAAvH,MAAA,OAKkB,OAH/BkH,GAAoBM,EAAAA,EAAAA,wBACpBL,EAAWH,EAAKhB,aAAayB,KAEnCT,EAAK5C,2BAA4B,EAAImD,EAAA5F,KAAA,EAAA4F,EAAAvH,KAAA,EAGVqF,MAAMQ,KAAK,gCAAgCsB,EAAU,CACxEO,YAAaV,EAAKrD,YACpB,OAFIwB,EAAQoC,EAAA7H,KAKd0H,EAC0BjC,EAASI,KAA5B8B,EAAOD,EAAPC,QAASC,EAAMF,EAANE,OAEhBJ,EAAkBS,qBAAqBN,EAASC,GAEhDN,EAAKlD,aAAc,EAAIyD,EAAAvH,KAAA,iBAAAuH,EAAA5F,KAAA,GAAA4F,EAAA/B,GAAA+B,EAAA,SAGvBL,EAAkBS,qBAAqB,6BAA8B,SACrE,QAEuC,OAFvCJ,EAAA5F,KAAA,GAEAqF,EAAK5C,2BAA4B,EAAMmD,EAAArF,OAAA,6BAAAqF,EAAAzF,OAAA,GAAAmF,EAAA,wBAxBxBrE,EA0BvB,EACMgF,cAAa,WAAG,IAAAC,EAAA,YAAAjF,EAAA9G,IAAAoF,MAAA,SAAA4G,IAAA,IAAAZ,EAAAC,EAAAhC,EAAA4C,EAAAV,EAAAC,EAAA,OAAAxL,IAAAuB,MAAA,SAAA2K,GAAA,cAAAA,EAAArG,KAAAqG,EAAAhI,MAAA,OAKlB,OAJMkH,GAAoBM,EAAAA,EAAAA,wBACpBL,EAAWU,EAAK7B,aAAayB,KAEnCI,EAAKzD,2BAA4B,EACjC4D,EAAArG,KAAA,EAAAqG,EAAAhI,KAAA,EAE2BqF,MAAMQ,KAAK,+BAA+BsB,EAAU,CACvEO,YAAaG,EAAKlE,YACpB,OAFIwB,EAAQ6C,EAAAtI,KAGdqI,EAC0B5C,EAASI,KAA5B8B,EAAOU,EAAPV,QAASC,EAAMS,EAANT,OAChBJ,EAAkBS,qBAAqBN,EAASC,GAEhDO,EAAK/D,aAAc,EAAKkE,EAAAhI,KAAA,iBAAAgI,EAAArG,KAAA,GAAAqG,EAAAxC,GAAAwC,EAAA,SAGxBd,EAAkBS,qBAAqB,uBAAwB,SAAQ,QAEhC,OAFgCK,EAAArG,KAAA,GAEvEkG,EAAKzD,2BAA4B,EAAM4D,EAAA9F,OAAA,6BAAA8F,EAAAlG,OAAA,GAAAgG,EAAA,wBAnBzBlF,EAqBtB,EAWMqF,gBAAe,WAAG,IAAAC,EAAA,YAAAtF,EAAA9G,IAAAoF,MAAA,SAAAiH,IAAA,IAAAjB,EAAA/B,EAAA,OAAArJ,IAAAuB,MAAA,SAAA+K,GAAA,cAAAA,EAAAzG,KAAAyG,EAAApI,MAAA,OAEpB,GADMkH,GAAoBM,EAAAA,EAAAA,wBAC1BY,EAAAzG,KAAA,EAESuG,EAAK1D,cAAe,CAAF4D,EAAApI,KAAA,eAAAoI,EAAApI,KAAA,EACbkI,EAAKG,qBAAoB,cAAAD,EAAApI,KAAA,EAGZqF,MAAMQ,KAAK,qBAAsB,CACpDyC,WAAYJ,EAAKvE,UACjBa,cAAe0D,EAAK1D,gBACtB,OAHIW,EAAQiD,EAAA1I,KAMdwI,EAAKnE,WAAaoB,EAASI,KAAKxB,YAAc,GAK1CoB,EAASI,KAAKxB,WAAWpB,OACfwC,EAASI,KAAKxB,WAAWpB,MAC1B,SAEFwC,EAASI,KAAK8B,SAAWlC,EAASI,KAAKgD,SAEpCpD,EAASI,KAAK8B,QACf,SAKC,4CACD,QAKbe,EAAApI,KAAA,iBAAAoI,EAAAzG,KAAA,GAAAyG,EAAA5C,GAAA4C,EAAA,SAGAlB,EAAkBS,qBAAqB,+BAAgC,SACvE,yBAAAS,EAAAtG,OAAA,GAAAqG,EAAA,kBAzCgBvF,EA2CxB,EACM4F,aAAY,WAAG,IAAAC,EAAA,YAAA7F,EAAA9G,IAAAoF,MAAA,SAAAwH,IAAA,IAAAvD,EAAA,OAAArJ,IAAAuB,MAAA,SAAAsL,GAAA,cAAAA,EAAAhH,KAAAgH,EAAA3I,MAAA,cAAA2I,EAAAhH,KAAA,EAAAgH,EAAA3I,KAAA,EAEU4I,MAAM,mBAAkB,OAAjC,IAARzD,EAAQwD,EAAAjJ,MACAmJ,GAAI,CAAFF,EAAA3I,KAAA,cAAQ,IAAIX,MAAM,mBAAkB,cAAAsJ,EAAA3I,KAAA,EAI/BmF,EAAS2D,OAAM,OAApCL,EAAKzE,QAAO2E,EAAAjJ,KAAAiJ,EAAA3I,KAAG,GAAH,cAAA2I,EAAAhH,KAAG,GAAHgH,EAAAnD,GAAAmD,EAAA,kCAAAA,EAAA7G,OAAA,GAAA4G,EAAA,kBAPC9F,EAWrB,EACAmG,gBAAe,WACXhE,KAAKhB,WAAa,IACtB,EACAiF,oCAAmC,SAACzF,GAAS,IAAA0F,EAGzClE,KAAK1B,+BAAiC0B,KAAK1B,8BAC3C0B,KAAKzB,YAAcyB,KAAK1B,8BACxB0B,KAAKxB,QAAUA,EACfwB,KAAKtB,eAAiBsB,YAAa,QAATkE,EAAJlE,KAAMxB,eAAO,IAAA0F,OAAA,EAAbA,EAAeC,OAEzC,EACAC,cAAa,SAAC5F,GACVwB,KAAKxB,QAAUA,CACnB,EACM8E,mBAAkB,WAAG,IAAAe,EAAA,YAAAxG,EAAA9G,IAAAoF,MAAA,SAAAmI,IAAA,IAAAC,EAAAC,EAAA,OAAAzN,IAAAuB,MAAA,SAAAmM,GAAA,cAAAA,EAAA7H,KAAA6H,EAAAxJ,MAAA,OAC6B,OAA9CsJ,GAAsBG,EAAAA,EAAAA,0BAAwBD,EAAAxJ,KAAA,EAC5BqF,MAAMC,IAAI,oBAAmB,OAAjDiE,EAAWC,EAAA9J,KACf0J,EAAK5E,cAAgB+E,EAAYhE,KACjC+D,EAAoBI,iBAAiBN,EAAK5E,eAAc,wBAAAgF,EAAA1H,OAAA,GAAAuH,EAAA,IAJjCzG,EAK3B,EACM+G,aAAY,WAAG,IAAAC,EAAA,YAAAhH,EAAA9G,IAAAoF,MAAA,SAAA2I,IAAA,IAAAP,EAAApC,EAAA4C,EAAA,OAAAhO,IAAAuB,MAAA,SAAA0M,GAAA,cAAAA,EAAApI,KAAAoI,EAAA/J,MAAA,OAkBb,OAjBEsJ,GAAsBG,EAAAA,EAAAA,0BACtBvC,GAAoBM,EAAAA,EAAAA,wBAC1BoC,EAAKtF,mBAAoB,EAAKyF,EAAApI,KAAA,EAOpBmI,EAAa,CACf7I,KAAM2I,EAAKjG,WAOfoG,EAAA/J,KAAA,EACMsJ,EAAoBU,oBAAoBF,GAAY,GAAM3K,OAE/D,OAAA4K,EAAA/J,KAAA,gBAAA+J,EAAApI,KAAA,EAAAoI,EAAAvE,GAAAuE,EAAA,SAID7C,EAAkBS,qBAAqB,2BAA4B,SAAQ,QAE5C,OAF4CoC,EAAApI,KAAA,GAE3EiI,EAAKtF,mBAAoB,EAAMyF,EAAA7H,OAAA,6BAAA6H,EAAAjI,OAAA,GAAA+H,EAAA,uBA3BlBjH,EA8BrB,EACMqH,sBAAqB,WAAG,IAAAC,EAAA,YAAAtH,EAAA9G,IAAAoF,MAAA,SAAAiJ,IAAA,IAAAjD,EAAA/B,EAAAiF,EAAA,OAAAtO,IAAAuB,MAAA,SAAAgN,GAAA,cAAAA,EAAA1I,KAAA0I,EAAArK,MAAA,OAEQ,OAD5BkH,GAAoBM,EAAAA,EAAAA,wBAC1B0C,EAAKhG,uBAAwB,EAAKmG,EAAA1I,KAAA,EAAA0I,EAAArK,KAAA,EAEPqF,MAAMQ,KAAK,mCAAoC,CAClEa,OAAQwD,EAAKzG,eACb6E,WAAY4B,EAAKvG,UACjB2G,iBAAiB,IACnB,OAJInF,EAAQkF,EAAA3K,KAMdwK,EAAKjG,aAAekB,EAASI,KAAKtB,cAAgB,GAClDiG,EAAKpG,YAAcqB,EAASI,KAAKgF,YAAa,EAC9CC,QAAQC,IAAI,6BAA+BtF,EAASI,KAAKgF,WACzDH,EAC0BjF,EAASI,KAArB6E,EAAP/C,QAAe+C,EAAN9C,OAGhB+C,EAAArK,KAAA,iBAAAqK,EAAA1I,KAAA,GAAA0I,EAAA7E,GAAA6E,EAAA,SAIAnD,EAAkBS,qBAAqB,qCAAsC,SAAQ,QAElD,OAFkD0C,EAAA1I,KAAA,GAErFuI,EAAKhG,uBAAwB,EAAMmG,EAAAnI,OAAA,6BAAAmI,EAAAvI,OAAA,GAAAqI,EAAA,wBAvBbvH,EAyB9B,EACM8H,gCAA+B,WAAG,IAAAC,EAAA,YAAA/H,EAAA9G,IAAAoF,MAAA,SAAA0J,IAAA,IAAAzF,EAAA,OAAArJ,IAAAuB,MAAA,SAAAwN,GAAA,cAAAA,EAAAlJ,KAAAkJ,EAAA7K,MAAA,OAIF,OAAlC2K,EAAKzG,uBAAwB,EAAK2G,EAAAlJ,KAAA,EAAAkJ,EAAA7K,KAAA,EAEPqF,MAAMQ,KAAK,oCAAqC,CACnEa,OAAQiE,EAAKlH,eACb6E,WAAYqC,EAAKhH,UACjB2G,iBAAiB,IACnB,OAJInF,EAAQ0F,EAAAnL,KAKdiL,EAAK1G,aAAekB,EAASI,KAAKtB,cAAgB,GAClD0G,EAAK7G,YAAcqB,EAASI,KAAKgF,YAAa,EAAKM,EAAA7K,KAAA,gBAAA6K,EAAAlJ,KAAA,EAAAkJ,EAAArF,GAAAqF,EAAA,SAInD3D,kBAAkBS,qBAAqB,qCAAsC,SAAQ,QAElD,OAFkDkD,EAAAlJ,KAAA,GAErFgJ,EAAKzG,uBAAwB,EAAM2G,EAAA3I,OAAA,6BAAA2I,EAAA/I,OAAA,GAAA8I,EAAA,uBAlBHhI,EAoBxC,EACMkI,kBAAiB,SAACC,GAAe,IAAAC,EAAA,YAAApI,EAAA9G,IAAAoF,MAAA,SAAA+J,IAAA,OAAAnP,IAAAuB,MAAA,SAAA6N,GAAA,cAAAA,EAAAvJ,KAAAuJ,EAAAlL,MAAA,WAE/BmL,QAAQ,4DAADrF,OAA6DiF,EAAa,MAAM,CAAFG,EAAAlL,KAAA,gBAAAkL,EAAAvJ,KAAA,EAAAuJ,EAAAlL,KAAA,EAG3EqF,MAAK,OAAQ,kCAAoC0F,GAAc,OAErEC,EAAK/G,aAAe+G,EAAK/G,aAAamH,QAAO,SAAAC,GAAW,OAAIA,EAAY7E,KAAOuE,CAAa,IAACG,EAAAlL,KAAA,gBAAAkL,EAAAvJ,KAAA,EAAAuJ,EAAA1F,GAAA0F,EAAA,SAE7FhE,kBAAkBoE,8BAA8B,6BAA4BJ,EAAA1F,IAC5E,yBAAA0F,EAAApJ,OAAA,GAAAmJ,EAAA,iBAV2BrI,EAavC,EACM2I,UAAS,SAACR,EAAeS,GAAa,IAAAC,EAAA,YAAA7I,EAAA9G,IAAAoF,MAAA,SAAAwK,IAAA,IAAAxE,EAAA/B,EAAAwG,EAAAtE,EAAAC,EAAAsE,EAAA,OAAA9P,IAAAuB,MAAA,SAAAwO,GAAA,cAAAA,EAAAlK,KAAAkK,EAAA7L,MAAA,OAGxC,OAFMkH,GAAoBM,EAAAA,EAAAA,wBAC1BiE,EAAKtH,qBAAuB4G,EAC5Bc,EAAAlK,KAAA,EAAAkK,EAAA7L,KAAA,EAE2BqF,MAAMQ,KAAK,0BAA2B,CACzDiG,eAAgBf,EAChBgB,cAAeP,EACf9D,YAAa+D,EAAK9H,YACpB,OAJIwB,EAAQ0G,EAAAnM,KAQdiM,EAC0BxG,EAASI,KAA5B8B,EAAOsE,EAAPtE,QAASC,EAAMqE,EAANrE,OAEhBJ,EAAkBS,qBAAqBN,EAASC,IAGjC,KADTsE,EAAQH,EAAKxH,aAAa+H,WAAU,SAAAX,GAAW,OAAIA,EAAY7E,KAAOuE,CAAa,OAErFU,EAAKxH,aAAa2H,GAAOK,gBAAkB,GAC9CJ,EAAA7L,KAAA,iBAAA6L,EAAAlK,KAAA,GAAAkK,EAAArG,GAAAqG,EAAA,SAGD3E,EAAkBS,qBAAqB,wBAAyB,SAChE,QAEiC,OAFjCkE,EAAAlK,KAAA,GAEA8J,EAAKtH,qBAAuB,KAAK0H,EAAA3J,OAAA,6BAAA2J,EAAA/J,OAAA,GAAA4J,EAAA,wBA3BG9I,EA6B5C,EACMsJ,SAAQ,SAACnB,GAAe,IAAAoB,EAAA,YAAAvJ,EAAA9G,IAAAoF,MAAA,SAAAkL,IAAA,IAAAlF,EAAA/B,EAAAkH,EAAAhF,EAAAC,EAAAsE,EAAA,OAAA9P,IAAAuB,MAAA,SAAAiP,GAAA,cAAAA,EAAA3K,KAAA2K,EAAAtM,MAAA,OAG1B,OAFMkH,GAAoBM,EAAAA,EAAAA,wBAC1B2E,EAAKhI,qBAAuB4G,EAC5BuB,EAAA3K,KAAA,EAAA2K,EAAAtM,KAAA,EAE2BqF,MAAMQ,KAAK,yBAA0B,CAACiG,eAAgBf,IAAe,OAAtF5F,EAAQmH,EAAA5M,KACd2M,EAC0BlH,EAASI,KAA5B8B,EAAOgF,EAAPhF,QAASC,EAAM+E,EAAN/E,OAChBJ,EAAkBS,qBAAqBN,EAASC,GAChDgF,EAAAtM,KAAA,iBAAAsM,EAAA3K,KAAA,GAAA2K,EAAA9G,GAAA8G,EAAA,SAGApF,EAAkBS,qBAAqB,uBAAwB,SAAQ,QAMtE,OANsE2E,EAAA3K,KAAA,GAEvEwK,EAAKhI,qBAAuB,MAEb,KADTyH,EAAQO,EAAKlI,aAAa+H,WAAU,SAAAX,GAAW,OAAIA,EAAY7E,KAAOuE,CAAa,OAErFoB,EAAKlI,aAAa2H,GAAOK,gBAAkB,GAC9CK,EAAApK,OAAA,6BAAAoK,EAAAxK,OAAA,GAAAsK,EAAA,wBAlBqBxJ,EAoB9B,EACM2J,eAAc,SAACxB,GAAe,IAAAyB,EAAA,YAAA5J,EAAA9G,IAAAoF,MAAA,SAAAuL,IAAA,IAAAvF,EAAA/B,EAAAuH,EAAArF,EAAAC,EAAAsE,EAAA,OAAA9P,IAAAuB,MAAA,SAAAsP,GAAA,cAAAA,EAAAhL,KAAAgL,EAAA3M,MAAA,OAEgB,OADhDwM,EAAKrI,qBAAuB4G,EACtB7D,GAAoBM,EAAAA,EAAAA,wBAAsBmF,EAAAhL,KAAA,EAAAgL,EAAA3M,KAAA,EAErBqF,MAAMQ,KAAK,8BAAgCkF,GAAc,OAA1E5F,EAAQwH,EAAAjN,KACdgN,EAC0BvH,EAASI,KAA5B8B,EAAOqF,EAAPrF,QAASC,EAAMoF,EAANpF,OAChBJ,EAAkBS,qBAAqBN,EAASC,IAEjC,KADTsE,EAAQY,EAAKvI,aAAa+H,WAAU,SAAAX,GAAW,OAAIA,EAAY7E,KAAOuE,CAAa,OAErFyB,EAAKvI,aAAa2H,GAAOgB,cAAgB,GAC5CD,EAAA3M,KAAA,iBAAA2M,EAAAhL,KAAA,GAAAgL,EAAAnH,GAAAmH,EAAA,SAGDzF,EAAkBS,qBAAqB,8BAA+B,SAAQ,QAE7C,OAF6CgF,EAAAhL,KAAA,GAE9E6K,EAAKrI,qBAAuB,KAAKwI,EAAAzK,OAAA,6BAAAyK,EAAA7K,OAAA,GAAA2K,EAAA,wBAhBL7J,EAkBpC,EACMiK,gBAAe,SAAC9B,GAAe,IAAA+B,EAAA,YAAAlK,EAAA9G,IAAAoF,MAAA,SAAA6L,IAAA,IAAA7F,EAAA/B,EAAA6H,EAAA3F,EAAAC,EAAAsE,EAAA,OAAA9P,IAAAuB,MAAA,SAAA4P,GAAA,cAAAA,EAAAtL,KAAAsL,EAAAjN,MAAA,OAEQ,OADnCkH,GAAoBM,EAAAA,EAAAA,wBAC1BsF,EAAK3I,qBAAuB4G,EAAakC,EAAAtL,KAAA,EAAAsL,EAAAjN,KAAA,EAEdqF,MAAMQ,KAAK,iCAAmCkF,GAAc,OAA7E5F,EAAQ8H,EAAAvN,KACdsN,EAC0B7H,EAASI,KAA5B8B,EAAO2F,EAAP3F,QAASC,EAAM0F,EAAN1F,OAChBJ,EAAkBS,qBAAqBN,EAASC,IAEjC,KADTsE,EAAQkB,EAAK7I,aAAa+H,WAAU,SAAAX,GAAW,OAAIA,EAAY7E,KAAOuE,CAAa,OAErF+B,EAAK7I,aAAa2H,GAAOgB,cAAgB,GAC5CK,EAAAjN,KAAA,iBAAAiN,EAAAtL,KAAA,GAAAsL,EAAAzH,GAAAyH,EAAA,SAGD/F,EAAkBS,qBAAqB,+BAAgC,SAAQ,QAE9C,OAF8CsF,EAAAtL,KAAA,GAE/EmL,EAAK3I,qBAAuB,KAAK8I,EAAA/K,OAAA,6BAAA+K,EAAAnL,OAAA,GAAAiL,EAAA,wBAhBJnK,EAkBrC,EACMsK,qBAAoB,WAAG,IAAAC,EAAA,YAAAvK,EAAA9G,IAAAoF,MAAA,SAAAkM,IAAA,IAAAlG,EAAA/B,EAAAkI,EAAAhG,EAAAC,EAAA,OAAAxL,IAAAuB,MAAA,SAAAiQ,GAAA,cAAAA,EAAA3L,KAAA2L,EAAAtN,MAAA,OAEmB,OADtCkH,GAAoBM,EAAAA,EAAAA,wBAC1B2F,EAAK9I,kCAAmC,EAAIiJ,EAAA3L,KAAA,EAAA2L,EAAAtN,KAAA,EAEjBqF,MAAMQ,KAAK,iDAAkD,CAAC,WAAcsH,EAAKxJ,YAAW,OAG5D,OAHjDwB,EAAQmI,EAAA5N,KACd2N,EAC0BlI,EAASI,KAA5B8B,EAAOgG,EAAPhG,QAASC,EAAM+F,EAAN/F,OAChBJ,EAAkBS,qBAAqBN,EAASC,GAAOgG,EAAAtN,KAAA,GACjDmN,EAAKlD,wBAAuB,QAAAqD,EAAAtN,KAAA,iBAAAsN,EAAA3L,KAAA,GAAA2L,EAAA9H,GAAA8H,EAAA,SAGlCpG,EAAkBS,qBAAqB,+BAAgC,SAAQ,QAEjC,OAFiC2F,EAAA3L,KAAA,GAE/EwL,EAAK9I,kCAAmC,EAAMiJ,EAAAtN,KAAA,GACxCmN,EAAKlD,wBAAuB,eAAAqD,EAAApL,OAAA,6BAAAoL,EAAAxL,OAAA,GAAAsL,EAAA,wBAdbxK,EAgB7B,GAEJ2K,QAAS,CACLvH,aAAc,SAACpB,GAAU,IAAA4I,EAAAC,EAAAC,EACfpH,EAAO1B,EAAMlB,MAAM6C,MAAK,SAAAD,GAAI,OAAIA,EAAKE,KAAO5B,EAAMnB,cAAc,KAAK,KAI3E,OAHAmB,EAAMjB,WAAY2C,SAA0B,QAAtBkH,EAAJlH,EAAML,4BAAoB,IAAAuH,OAAA,EAA1BA,EAA4BvM,OAAQ,8BACtD2D,EAAMhB,YAAa0C,SAA0B,QAAtBmH,EAAJnH,EAAML,4BAAoB,IAAAwH,OAAA,EAA1BA,EAA4BjH,KAAM,8BACrD5B,EAAMd,aAAcwC,SAA0B,QAAtBoH,EAAJpH,EAAML,4BAAoB,IAAAyH,OAAA,EAA1BA,EAA4BC,gBAAgB,EACzDrH,CACX,EACAsH,YAAa,SAAChJ,GACV,OAAOA,EAAMZ,QAAUY,EAAMZ,QAAU,QAAU,EACrD,EACA6J,QAAS,SAACjJ,GAEN,IAAMgJ,EAAchJ,EAAMZ,QAAUY,EAAMZ,QAAU,QAAU,GAO9D,MAAO,GAAP8B,OAAU8H,GAAW9H,OAAGlB,EAAMjB,UAClC,EAEAmK,mBAAoB,SAAClJ,GACjB,OAAOA,EAAMX,aAAamH,QAAO,SAAAC,GAAW,OAAIA,EAAYY,eAAe,GAC/E,EACA8B,WAAY,SAACnJ,GAAU,IAAAoJ,EAAAC,EACnB,OAAsB,QAAtBD,EAAIpJ,EAAMoB,oBAAY,IAAAgI,GAAsB,QAAtBA,EAAlBA,EAAoB/H,4BAAoB,IAAA+H,GAAxCA,EAA0C/M,KACnC2D,EAAMoB,aAAaC,qBAAqBhF,KAC3B,QAAjBgN,EAAIrJ,EAAMrB,eAAO,IAAA0K,GAAsB,QAAtBA,EAAbA,EAAehI,4BAAoB,IAAAgI,GAAnCA,EAAqChN,KACrC2D,EAAMrB,QAAQ0C,qBAAqBhF,KAEvC,IACX,EACAiN,cAAe,SAACtJ,GAAU,IAAAuJ,EAAAC,EAGtB,MAA2C,uBAAZ,QAAxBD,EAAiB,QAAjBC,EAACxJ,EAAMb,kBAAU,IAAAqK,OAAA,EAAhBA,EAAkBzL,aAAK,IAAAwL,EAAAA,EAAI,GACvC,g6CCvfRrS,EAAA,kBAAAC,CAAA,MAAAC,EAAAD,EAAA,GAAAE,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAK,gBAAA,SAAAP,EAAAD,EAAAE,GAAAD,EAAAD,GAAAE,EAAAO,KAAA,EAAAC,EAAA,mBAAAC,OAAAA,OAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAjB,EAAAD,EAAAE,GAAA,OAAAC,OAAAK,eAAAP,EAAAD,EAAA,CAAAS,MAAAP,EAAAiB,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAApB,EAAAD,EAAA,KAAAkB,EAAA,aAAAjB,GAAAiB,EAAA,SAAAjB,EAAAD,EAAAE,GAAA,OAAAD,EAAAD,GAAAE,CAAA,WAAAoB,EAAArB,EAAAD,EAAAE,EAAAG,GAAA,IAAAK,EAAAV,GAAAA,EAAAI,qBAAAmB,EAAAvB,EAAAuB,EAAAX,EAAAT,OAAAqB,OAAAd,EAAAN,WAAAU,EAAA,IAAAW,EAAApB,GAAA,WAAAE,EAAAK,EAAA,WAAAH,MAAAiB,EAAAzB,EAAAC,EAAAY,KAAAF,CAAA,UAAAe,EAAA1B,EAAAD,EAAAE,GAAA,WAAA0B,KAAA,SAAAC,IAAA5B,EAAA6B,KAAA9B,EAAAE,GAAA,OAAAD,GAAA,OAAA2B,KAAA,QAAAC,IAAA5B,EAAA,EAAAD,EAAAsB,KAAAA,EAAA,IAAAS,EAAA,iBAAAC,EAAA,iBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,YAAAZ,IAAA,UAAAa,IAAA,UAAAC,IAAA,KAAAC,EAAA,GAAApB,EAAAoB,EAAA1B,GAAA,8BAAA2B,EAAApC,OAAAqC,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAA,MAAAD,GAAAA,IAAAvC,GAAAG,EAAAyB,KAAAW,EAAA7B,KAAA0B,EAAAG,GAAA,IAAAE,EAAAN,EAAAjC,UAAAmB,EAAAnB,UAAAD,OAAAqB,OAAAc,GAAA,SAAAM,EAAA3C,GAAA,0BAAA4C,SAAA,SAAA7C,GAAAkB,EAAAjB,EAAAD,GAAA,SAAAC,GAAA,YAAA6C,QAAA9C,EAAAC,EAAA,gBAAA8C,EAAA9C,EAAAD,GAAA,SAAAgD,EAAA9C,EAAAK,EAAAG,EAAAE,GAAA,IAAAE,EAAAa,EAAA1B,EAAAC,GAAAD,EAAAM,GAAA,aAAAO,EAAAc,KAAA,KAAAZ,EAAAF,EAAAe,IAAAE,EAAAf,EAAAP,MAAA,OAAAsB,GAAA,UAAAkB,EAAAlB,IAAA1B,EAAAyB,KAAAC,EAAA,WAAA/B,EAAAkD,QAAAnB,EAAAoB,SAAAC,MAAA,SAAAnD,GAAA+C,EAAA,OAAA/C,EAAAS,EAAAE,EAAA,aAAAX,GAAA+C,EAAA,QAAA/C,EAAAS,EAAAE,EAAA,IAAAZ,EAAAkD,QAAAnB,GAAAqB,MAAA,SAAAnD,GAAAe,EAAAP,MAAAR,EAAAS,EAAAM,EAAA,aAAAf,GAAA,OAAA+C,EAAA,QAAA/C,EAAAS,EAAAE,EAAA,IAAAA,EAAAE,EAAAe,IAAA,KAAA3B,EAAAK,EAAA,gBAAAE,MAAA,SAAAR,EAAAI,GAAA,SAAAgD,IAAA,WAAArD,GAAA,SAAAA,EAAAE,GAAA8C,EAAA/C,EAAAI,EAAAL,EAAAE,EAAA,WAAAA,EAAAA,EAAAA,EAAAkD,KAAAC,EAAAA,GAAAA,GAAA,aAAA3B,EAAA1B,EAAAE,EAAAG,GAAA,IAAAE,EAAAwB,EAAA,gBAAArB,EAAAE,GAAA,GAAAL,IAAA0B,EAAA,UAAAqB,MAAA,mCAAA/C,IAAA2B,EAAA,cAAAxB,EAAA,MAAAE,EAAA,OAAAH,MAAAR,EAAAsD,MAAA,OAAAlD,EAAAmD,OAAA9C,EAAAL,EAAAwB,IAAAjB,IAAA,KAAAE,EAAAT,EAAAoD,SAAA,GAAA3C,EAAA,KAAAE,EAAA0C,EAAA5C,EAAAT,GAAA,GAAAW,EAAA,IAAAA,IAAAmB,EAAA,gBAAAnB,CAAA,cAAAX,EAAAmD,OAAAnD,EAAAsD,KAAAtD,EAAAuD,MAAAvD,EAAAwB,SAAA,aAAAxB,EAAAmD,OAAA,IAAAjD,IAAAwB,EAAA,MAAAxB,EAAA2B,EAAA7B,EAAAwB,IAAAxB,EAAAwD,kBAAAxD,EAAAwB,IAAA,gBAAAxB,EAAAmD,QAAAnD,EAAAyD,OAAA,SAAAzD,EAAAwB,KAAAtB,EAAA0B,EAAA,IAAAK,EAAAX,EAAA3B,EAAAE,EAAAG,GAAA,cAAAiC,EAAAV,KAAA,IAAArB,EAAAF,EAAAkD,KAAArB,EAAAF,EAAAM,EAAAT,MAAAM,EAAA,gBAAA1B,MAAA6B,EAAAT,IAAA0B,KAAAlD,EAAAkD,KAAA,WAAAjB,EAAAV,OAAArB,EAAA2B,EAAA7B,EAAAmD,OAAA,QAAAnD,EAAAwB,IAAAS,EAAAT,IAAA,YAAA6B,EAAA1D,EAAAE,GAAA,IAAAG,EAAAH,EAAAsD,OAAAjD,EAAAP,EAAAa,SAAAR,GAAA,GAAAE,IAAAN,EAAA,OAAAC,EAAAuD,SAAA,eAAApD,GAAAL,EAAAa,SAAA,SAAAX,EAAAsD,OAAA,SAAAtD,EAAA2B,IAAA5B,EAAAyD,EAAA1D,EAAAE,GAAA,UAAAA,EAAAsD,SAAA,WAAAnD,IAAAH,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAA,IAAAkC,UAAA,oCAAA1D,EAAA,aAAA8B,EAAA,IAAAzB,EAAAiB,EAAApB,EAAAP,EAAAa,SAAAX,EAAA2B,KAAA,aAAAnB,EAAAkB,KAAA,OAAA1B,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAAnB,EAAAmB,IAAA3B,EAAAuD,SAAA,KAAAtB,EAAA,IAAAvB,EAAAF,EAAAmB,IAAA,OAAAjB,EAAAA,EAAA2C,MAAArD,EAAAF,EAAAgE,YAAApD,EAAAH,MAAAP,EAAA+D,KAAAjE,EAAAkE,QAAA,WAAAhE,EAAAsD,SAAAtD,EAAAsD,OAAA,OAAAtD,EAAA2B,IAAA5B,GAAAC,EAAAuD,SAAA,KAAAtB,GAAAvB,GAAAV,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAA,IAAAkC,UAAA,oCAAA7D,EAAAuD,SAAA,KAAAtB,EAAA,UAAAgC,EAAAlE,GAAA,IAAAD,EAAA,CAAAoE,OAAAnE,EAAA,SAAAA,IAAAD,EAAAqE,SAAApE,EAAA,SAAAA,IAAAD,EAAAsE,WAAArE,EAAA,GAAAD,EAAAuE,SAAAtE,EAAA,SAAAuE,WAAAC,KAAAzE,EAAA,UAAA0E,EAAAzE,GAAA,IAAAD,EAAAC,EAAA0E,YAAA,GAAA3E,EAAA4B,KAAA,gBAAA5B,EAAA6B,IAAA5B,EAAA0E,WAAA3E,CAAA,UAAAyB,EAAAxB,GAAA,KAAAuE,WAAA,EAAAJ,OAAA,SAAAnE,EAAA4C,QAAAsB,EAAA,WAAAS,OAAA,YAAAlC,EAAA1C,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAAE,EAAAF,EAAAY,GAAA,GAAAV,EAAA,OAAAA,EAAA4B,KAAA9B,GAAA,sBAAAA,EAAAiE,KAAA,OAAAjE,EAAA,IAAA6E,MAAA7E,EAAA8E,QAAA,KAAAvE,GAAA,EAAAG,EAAA,SAAAuD,IAAA,OAAA1D,EAAAP,EAAA8E,QAAA,GAAAzE,EAAAyB,KAAA9B,EAAAO,GAAA,OAAA0D,EAAAxD,MAAAT,EAAAO,GAAA0D,EAAAV,MAAA,EAAAU,EAAA,OAAAA,EAAAxD,MAAAR,EAAAgE,EAAAV,MAAA,EAAAU,CAAA,SAAAvD,EAAAuD,KAAAvD,CAAA,YAAAqD,UAAAd,EAAAjD,GAAA,2BAAAoC,EAAAhC,UAAAiC,EAAA9B,EAAAoC,EAAA,eAAAlC,MAAA4B,EAAAjB,cAAA,IAAAb,EAAA8B,EAAA,eAAA5B,MAAA2B,EAAAhB,cAAA,IAAAgB,EAAA2C,YAAA7D,EAAAmB,EAAArB,EAAA,qBAAAhB,EAAAgF,oBAAA,SAAA/E,GAAA,IAAAD,EAAA,mBAAAC,GAAAA,EAAAgF,YAAA,QAAAjF,IAAAA,IAAAoC,GAAA,uBAAApC,EAAA+E,aAAA/E,EAAAkF,MAAA,EAAAlF,EAAAmF,KAAA,SAAAlF,GAAA,OAAAE,OAAAiF,eAAAjF,OAAAiF,eAAAnF,EAAAoC,IAAApC,EAAAoF,UAAAhD,EAAAnB,EAAAjB,EAAAe,EAAA,sBAAAf,EAAAG,UAAAD,OAAAqB,OAAAmB,GAAA1C,CAAA,EAAAD,EAAAsF,MAAA,SAAArF,GAAA,OAAAkD,QAAAlD,EAAA,EAAA2C,EAAAG,EAAA3C,WAAAc,EAAA6B,EAAA3C,UAAAU,GAAA,0BAAAd,EAAA+C,cAAAA,EAAA/C,EAAAuF,MAAA,SAAAtF,EAAAC,EAAAG,EAAAE,EAAAG,QAAA,IAAAA,IAAAA,EAAA8E,SAAA,IAAA5E,EAAA,IAAAmC,EAAAzB,EAAArB,EAAAC,EAAAG,EAAAE,GAAAG,GAAA,OAAAV,EAAAgF,oBAAA9E,GAAAU,EAAAA,EAAAqD,OAAAb,MAAA,SAAAnD,GAAA,OAAAA,EAAAsD,KAAAtD,EAAAQ,MAAAG,EAAAqD,MAAA,KAAArB,EAAAD,GAAAzB,EAAAyB,EAAA3B,EAAA,aAAAE,EAAAyB,EAAA/B,GAAA,0BAAAM,EAAAyB,EAAA,qDAAA3C,EAAAyF,KAAA,SAAAxF,GAAA,IAAAD,EAAAG,OAAAF,GAAAC,EAAA,WAAAG,KAAAL,EAAAE,EAAAuE,KAAApE,GAAA,OAAAH,EAAAwF,UAAA,SAAAzB,IAAA,KAAA/D,EAAA4E,QAAA,KAAA7E,EAAAC,EAAAyF,MAAA,GAAA1F,KAAAD,EAAA,OAAAiE,EAAAxD,MAAAR,EAAAgE,EAAAV,MAAA,EAAAU,CAAA,QAAAA,EAAAV,MAAA,EAAAU,CAAA,GAAAjE,EAAA0C,OAAAA,EAAAjB,EAAArB,UAAA,CAAA6E,YAAAxD,EAAAmD,MAAA,SAAA5E,GAAA,QAAA4F,KAAA,OAAA3B,KAAA,OAAAN,KAAA,KAAAC,MAAA3D,EAAA,KAAAsD,MAAA,OAAAE,SAAA,UAAAD,OAAA,YAAA3B,IAAA5B,EAAA,KAAAuE,WAAA3B,QAAA6B,IAAA1E,EAAA,QAAAE,KAAA,WAAAA,EAAA2F,OAAA,IAAAxF,EAAAyB,KAAA,KAAA5B,KAAA2E,OAAA3E,EAAA4F,MAAA,WAAA5F,GAAAD,EAAA,EAAA8F,KAAA,gBAAAxC,MAAA,MAAAtD,EAAA,KAAAuE,WAAA,GAAAG,WAAA,aAAA1E,EAAA2B,KAAA,MAAA3B,EAAA4B,IAAA,YAAAmE,IAAA,EAAAnC,kBAAA,SAAA7D,GAAA,QAAAuD,KAAA,MAAAvD,EAAA,IAAAE,EAAA,cAAA+F,EAAA5F,EAAAE,GAAA,OAAAK,EAAAgB,KAAA,QAAAhB,EAAAiB,IAAA7B,EAAAE,EAAA+D,KAAA5D,EAAAE,IAAAL,EAAAsD,OAAA,OAAAtD,EAAA2B,IAAA5B,KAAAM,CAAA,SAAAA,EAAA,KAAAiE,WAAAM,OAAA,EAAAvE,GAAA,IAAAA,EAAA,KAAAG,EAAA,KAAA8D,WAAAjE,GAAAK,EAAAF,EAAAiE,WAAA,YAAAjE,EAAA0D,OAAA,OAAA6B,EAAA,UAAAvF,EAAA0D,QAAA,KAAAwB,KAAA,KAAA9E,EAAAT,EAAAyB,KAAApB,EAAA,YAAAM,EAAAX,EAAAyB,KAAApB,EAAA,iBAAAI,GAAAE,EAAA,SAAA4E,KAAAlF,EAAA2D,SAAA,OAAA4B,EAAAvF,EAAA2D,UAAA,WAAAuB,KAAAlF,EAAA4D,WAAA,OAAA2B,EAAAvF,EAAA4D,WAAA,SAAAxD,GAAA,QAAA8E,KAAAlF,EAAA2D,SAAA,OAAA4B,EAAAvF,EAAA2D,UAAA,YAAArD,EAAA,UAAAsC,MAAA,kDAAAsC,KAAAlF,EAAA4D,WAAA,OAAA2B,EAAAvF,EAAA4D,WAAA,KAAAR,OAAA,SAAA7D,EAAAD,GAAA,QAAAE,EAAA,KAAAsE,WAAAM,OAAA,EAAA5E,GAAA,IAAAA,EAAA,KAAAK,EAAA,KAAAiE,WAAAtE,GAAA,GAAAK,EAAA6D,QAAA,KAAAwB,MAAAvF,EAAAyB,KAAAvB,EAAA,oBAAAqF,KAAArF,EAAA+D,WAAA,KAAA5D,EAAAH,EAAA,OAAAG,IAAA,UAAAT,GAAA,aAAAA,IAAAS,EAAA0D,QAAApE,GAAAA,GAAAU,EAAA4D,aAAA5D,EAAA,UAAAE,EAAAF,EAAAA,EAAAiE,WAAA,UAAA/D,EAAAgB,KAAA3B,EAAAW,EAAAiB,IAAA7B,EAAAU,GAAA,KAAA8C,OAAA,YAAAS,KAAAvD,EAAA4D,WAAAnC,GAAA,KAAA+D,SAAAtF,EAAA,EAAAsF,SAAA,SAAAjG,EAAAD,GAAA,aAAAC,EAAA2B,KAAA,MAAA3B,EAAA4B,IAAA,gBAAA5B,EAAA2B,MAAA,aAAA3B,EAAA2B,KAAA,KAAAqC,KAAAhE,EAAA4B,IAAA,WAAA5B,EAAA2B,MAAA,KAAAoE,KAAA,KAAAnE,IAAA5B,EAAA4B,IAAA,KAAA2B,OAAA,cAAAS,KAAA,kBAAAhE,EAAA2B,MAAA5B,IAAA,KAAAiE,KAAAjE,GAAAmC,CAAA,EAAAgE,OAAA,SAAAlG,GAAA,QAAAD,EAAA,KAAAwE,WAAAM,OAAA,EAAA9E,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAsE,WAAAxE,GAAA,GAAAE,EAAAoE,aAAArE,EAAA,YAAAiG,SAAAhG,EAAAyE,WAAAzE,EAAAqE,UAAAG,EAAAxE,GAAAiC,CAAA,kBAAAlC,GAAA,QAAAD,EAAA,KAAAwE,WAAAM,OAAA,EAAA9E,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAsE,WAAAxE,GAAA,GAAAE,EAAAkE,SAAAnE,EAAA,KAAAI,EAAAH,EAAAyE,WAAA,aAAAtE,EAAAuB,KAAA,KAAArB,EAAAF,EAAAwB,IAAA6C,EAAAxE,EAAA,QAAAK,CAAA,YAAA+C,MAAA,0BAAA8C,cAAA,SAAApG,EAAAE,EAAAG,GAAA,YAAAoD,SAAA,CAAA5C,SAAA6B,EAAA1C,GAAAgE,WAAA9D,EAAAgE,QAAA7D,GAAA,cAAAmD,SAAA,KAAA3B,IAAA5B,GAAAkC,CAAA,GAAAnC,CAAA,UAAAqG,EAAAC,EAAApD,EAAAqD,EAAAC,EAAAC,EAAAC,EAAA7E,GAAA,QAAA8E,EAAAL,EAAAI,GAAA7E,GAAApB,EAAAkG,EAAAlG,KAAA,OAAAmG,GAAA,YAAAL,EAAAK,EAAA,CAAAD,EAAApD,KAAAL,EAAAzC,GAAA+E,QAAAtC,QAAAzC,GAAA2C,KAAAoD,EAAAC,EAAA,UAAAI,EAAAC,GAAA,sBAAAC,EAAA,KAAAC,EAAAC,UAAA,WAAAzB,SAAA,SAAAtC,EAAAqD,GAAA,IAAAD,EAAAQ,EAAAI,MAAAH,EAAAC,GAAA,SAAAR,EAAA/F,GAAA4F,EAAAC,EAAApD,EAAAqD,EAAAC,EAAAC,EAAA,OAAAhG,EAAA,UAAAgG,EAAAU,GAAAd,EAAAC,EAAApD,EAAAqD,EAAAC,EAAAC,EAAA,QAAAU,EAAA,CAAAX,OAAAY,EAAA,KAUAkL,IAAAA,OAAaC,KACbD,IAAAA,OAAaE,KAEb,IAAMnL,EAAe,WAAH,MAAU,CACxBoL,WAAY,GACZC,WAAY,CACRC,YAAa,EACbC,SAAU,EACVC,MAAO,GAEXC,kBAAmB,KACnBC,oBAAqB,KACrBC,sBAAuB,KACvBC,WAAW,EACXC,iBAAiB,EACjBC,YAAa,GAChB,EAEYC,GAAoBxK,EAAAA,EAAAA,IAAY,iBAAkB,CAC3DC,MAAOxB,EACPyB,QAAS,CACCuK,gBAAe,WAAW,IAAAC,EAAArM,UAAAiC,EAAA,YAAArC,EAAA9G,IAAAoF,MAAA,SAAAgE,IAAA,IAAAoK,EAAAC,EAAAC,EAAA9I,EAAAvB,EAAA,OAAArJ,IAAAuB,MAAA,SAAA+H,GAAA,cAAAA,EAAAzD,KAAAyD,EAAApF,MAAA,OAGK,GAHfuP,EAAIF,EAAAxO,OAAA,QAAAsC,IAAAkM,EAAA,GAAAA,EAAA,GAAG,EACzBpK,EAAK+J,WAAY,EACXQ,GAAYC,EAAAA,EAAAA,gBACZ/I,EAAuB,QAAjB4I,EAAGE,EAAUlJ,YAAI,IAAAgJ,OAAA,EAAdA,EAAgB9I,GAElB,CAAFpB,EAAApF,KAAA,QAEgB,OADvBwK,QAAQ7H,MAAM,wBACdsC,EAAK+J,WAAY,EAAM5J,EAAAvF,OAAA,wBAAAuF,EAAAzD,KAAA,EAAAyD,EAAApF,KAAA,GAKAqF,EAAAA,EAAMC,IAAI,kBAAmB,CAChDoK,OAAQ,CACJxG,QAASxC,EACT6I,KAAMA,KAEZ,QALIpK,EAAQC,EAAA1F,KAMduF,EAAKuJ,WAAarJ,EAASI,KAAKA,KAChCN,EAAKwJ,WAAa,CACdC,YAAavJ,EAASI,KAAKoK,aAC3BhB,SAAUxJ,EAASI,KAAKqK,UACxBhB,MAAOzJ,EAASI,KAAKqJ,OACvBxJ,EAAApF,KAAA,iBAAAoF,EAAAzD,KAAA,GAAAyD,EAAAI,GAAAJ,EAAA,SAEFoF,QAAQ7H,MAAM,8BAA6ByC,EAAAI,IAAS,QAE7B,OAF6BJ,EAAAzD,KAAA,GAEpDsD,EAAK+J,WAAY,EAAM5J,EAAAlD,OAAA,6BAAAkD,EAAAtD,OAAA,GAAAoD,EAAA,wBA3BCtC,EA6BhC,EACAjC,MAAK,WACDzE,OAAO4I,OAAOC,KAjDE,CACxByJ,WAAY,GACZC,WAAY,CACRC,YAAa,EACbC,SAAU,EACVC,MAAO,GAEXC,kBAAmB,KACnBC,oBAAqB,KACrBC,sBAAuB,KACvBC,WAAW,EACXC,iBAAiB,EACjBC,YAAa,IAsCT,EACAW,yBAAwB,SAACC,GAErB,OADkBC,EAAAA,EAAAA,gBACDF,yBAAyBC,EAC9C,EACAE,iCAAgC,SAACF,GAE7B,OADkBC,EAAAA,EAAAA,gBACDC,iCAAiCF,EACtD,EACAG,eAAc,SAACC,GACX,IAAIC,EAAUC,KAAKC,MAAMH,EAAoB,KACzCI,EAAUF,KAAKC,MAAMF,EAAU,IAC7BI,EAAQH,KAAKC,MAAMC,EAAU,IACnCH,GAAoB,GACpBG,GAAoB,GACpB,IAAME,EAAcD,EAAME,WAAWC,SAAS,EAAG,KAC3CC,EAAgBL,EAAQG,WAAWC,SAAS,EAAG,KAC/CE,EAAgBT,EAAQM,WAAWC,SAAS,EAAG,KACrD,MAAO,GAAP5K,OAAU0K,EAAW,MAAA1K,OAAK6K,EAAa,MAAA7K,OAAK8K,EAAa,IAC7D,EACAC,qBAAoB,SAACtG,GACjBxF,KAAK8J,kBAAoBtE,CAC7B,EACAuG,uBAAsB,WAClB/L,KAAK8J,kBAAoB,IAC7B,EACMkC,UAAS,WAAG,IAAArL,EAAA,YAAA9C,EAAA9G,IAAAoF,MAAA,SAAAyE,IAAA,IAAAqL,EAAAC,EAAAC,EAAA1B,EAAAlJ,EAAA6K,EAAA,OAAArV,IAAAuB,MAAA,SAAAuI,GAAA,cAAAA,EAAAjE,KAAAiE,EAAA5F,MAAA,OAcb,OAZKgR,GAAmBI,EAAAA,EAAAA,uBACnBH,GAAkBI,EAAAA,EAAAA,sBAClBH,GAAkBI,EAAAA,EAAAA,sBAClB9B,GAAYC,EAAAA,EAAAA,gBACZnJ,EAAOkJ,EAAUlJ,KAEjB6K,EAAS,CACXI,UAAW,YACXhH,UAAW,CACP4G,OAAQzL,EAAKmJ,kBAAkBnH,YAAY,OAC3C8J,WAAY,cAEnB5L,EAAAjE,KAAA,EAAAiE,EAAA5F,KAAA,EAESgR,EAAiBS,aAAaN,GAAO,OAC3CzL,EAAKqJ,sBAAwBrJ,EAAKmJ,kBAAkBrI,GACpDyK,EAAgBS,gBAChBR,EAAgBS,eAAeR,EAAOI,UAAW,CAC7CK,YAAatL,EAAKrF,KAClB4Q,cAAe,GAAF/L,OAAKJ,EAAKmK,yBAAyBnK,EAAKmJ,kBAAkBiD,YAAW,KAAAhM,OAAIJ,EAAKsK,iCAAiCzF,UAAUuH,YAAW,cACjJC,YAAarM,EAAKmJ,kBAAkBmD,SAAW,KAC/CC,WAAY,SAAFnM,OAAWQ,EAAKmB,MAC1ByK,MAAO5L,EAAK4L,QACbtM,EAAA5F,KAAA,iBAAA4F,EAAAjE,KAAA,GAAAiE,EAAAJ,GAAAI,EAAA,SAEH4E,QAAQ7H,MAAM,2BAA0BiD,EAAAJ,IAAS,yBAAAI,EAAA9D,OAAA,GAAA6D,EAAA,kBA3BvC/C,EA6BlB,EACAuP,kBAAiB,WACb,GAAKpN,KAAK8J,kBAAV,CAEA,IACMuD,EADYrN,KAAK8J,kBACDwD,aAChBC,EAAeC,SAASC,cAAc,KAC5CF,EAAaG,KAAOL,EACpBG,SAASG,KAAKC,YAAYL,GAC1BA,EAAaM,QACbL,SAASG,KAAKG,YAAYP,EARS,CASvC,EACAQ,eAAc,SAACC,GAAU,IAAA1M,EAAA,KACrB2M,UAAUC,UAAUC,UAAUH,GAAU5T,MAAK,WACzCkH,EAAK6I,YAAc,0BACnB7I,EAAK4I,iBAAkB,EACvBkE,YAAW,WACP9M,EAAK4I,iBAAkB,CAC3B,GAAG,IACP,GACJ,GAEJ1B,QAAS,CACL6F,oBAAqB,SAACxO,GAClB,IAAMyO,GAAYtD,EAAAA,EAAAA,gBAClB,OAAOnL,EAAM4J,WAAW8E,KAAI,SAAA/I,GAAS,OAAAgJ,EAAAA,EAAA,GAC9BhJ,GAAS,IACZiJ,iBAAkBnF,IAAAA,IAAU9D,EAAUkJ,gBAAgBC,GAAGL,EAAU9E,UAAUoF,OAAO,cACpFC,iBAAkBvF,IAAAA,IAAU9D,EAAUkJ,gBAAgBC,GAAGL,EAAU9E,UAAUoF,OAAO,UACpFE,eAAgBxF,IAAAA,IAAU9D,EAAUuJ,cAAcJ,GAAGL,EAAU9E,UAAUoF,OAAO,WAAS,GAEjG,8JCjJRtF,IAAAA,OAAaC,KACbD,IAAAA,OAAaE,uvDCLbzS,EAAA,kBAAAC,CAAA,MAAAC,EAAAD,EAAA,GAAAE,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAK,gBAAA,SAAAP,EAAAD,EAAAE,GAAAD,EAAAD,GAAAE,EAAAO,KAAA,EAAAC,EAAA,mBAAAC,OAAAA,OAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAjB,EAAAD,EAAAE,GAAA,OAAAC,OAAAK,eAAAP,EAAAD,EAAA,CAAAS,MAAAP,EAAAiB,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAApB,EAAAD,EAAA,KAAAkB,EAAA,aAAAjB,GAAAiB,EAAA,SAAAjB,EAAAD,EAAAE,GAAA,OAAAD,EAAAD,GAAAE,CAAA,WAAAoB,EAAArB,EAAAD,EAAAE,EAAAG,GAAA,IAAAK,EAAAV,GAAAA,EAAAI,qBAAAmB,EAAAvB,EAAAuB,EAAAX,EAAAT,OAAAqB,OAAAd,EAAAN,WAAAU,EAAA,IAAAW,EAAApB,GAAA,WAAAE,EAAAK,EAAA,WAAAH,MAAAiB,EAAAzB,EAAAC,EAAAY,KAAAF,CAAA,UAAAe,EAAA1B,EAAAD,EAAAE,GAAA,WAAA0B,KAAA,SAAAC,IAAA5B,EAAA6B,KAAA9B,EAAAE,GAAA,OAAAD,GAAA,OAAA2B,KAAA,QAAAC,IAAA5B,EAAA,EAAAD,EAAAsB,KAAAA,EAAA,IAAAS,EAAA,iBAAAC,EAAA,iBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,YAAAZ,IAAA,UAAAa,IAAA,UAAAC,IAAA,KAAAC,EAAA,GAAApB,EAAAoB,EAAA1B,GAAA,8BAAA2B,EAAApC,OAAAqC,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAA,MAAAD,GAAAA,IAAAvC,GAAAG,EAAAyB,KAAAW,EAAA7B,KAAA0B,EAAAG,GAAA,IAAAE,EAAAN,EAAAjC,UAAAmB,EAAAnB,UAAAD,OAAAqB,OAAAc,GAAA,SAAAM,EAAA3C,GAAA,0BAAA4C,SAAA,SAAA7C,GAAAkB,EAAAjB,EAAAD,GAAA,SAAAC,GAAA,YAAA6C,QAAA9C,EAAAC,EAAA,gBAAA8C,EAAA9C,EAAAD,GAAA,SAAAgD,EAAA9C,EAAAK,EAAAG,EAAAE,GAAA,IAAAE,EAAAa,EAAA1B,EAAAC,GAAAD,EAAAM,GAAA,aAAAO,EAAAc,KAAA,KAAAZ,EAAAF,EAAAe,IAAAE,EAAAf,EAAAP,MAAA,OAAAsB,GAAA,UAAAkB,EAAAlB,IAAA1B,EAAAyB,KAAAC,EAAA,WAAA/B,EAAAkD,QAAAnB,EAAAoB,SAAAC,MAAA,SAAAnD,GAAA+C,EAAA,OAAA/C,EAAAS,EAAAE,EAAA,aAAAX,GAAA+C,EAAA,QAAA/C,EAAAS,EAAAE,EAAA,IAAAZ,EAAAkD,QAAAnB,GAAAqB,MAAA,SAAAnD,GAAAe,EAAAP,MAAAR,EAAAS,EAAAM,EAAA,aAAAf,GAAA,OAAA+C,EAAA,QAAA/C,EAAAS,EAAAE,EAAA,IAAAA,EAAAE,EAAAe,IAAA,KAAA3B,EAAAK,EAAA,gBAAAE,MAAA,SAAAR,EAAAI,GAAA,SAAAgD,IAAA,WAAArD,GAAA,SAAAA,EAAAE,GAAA8C,EAAA/C,EAAAI,EAAAL,EAAAE,EAAA,WAAAA,EAAAA,EAAAA,EAAAkD,KAAAC,EAAAA,GAAAA,GAAA,aAAA3B,EAAA1B,EAAAE,EAAAG,GAAA,IAAAE,EAAAwB,EAAA,gBAAArB,EAAAE,GAAA,GAAAL,IAAA0B,EAAA,UAAAqB,MAAA,mCAAA/C,IAAA2B,EAAA,cAAAxB,EAAA,MAAAE,EAAA,OAAAH,MAAAR,EAAAsD,MAAA,OAAAlD,EAAAmD,OAAA9C,EAAAL,EAAAwB,IAAAjB,IAAA,KAAAE,EAAAT,EAAAoD,SAAA,GAAA3C,EAAA,KAAAE,EAAA0C,EAAA5C,EAAAT,GAAA,GAAAW,EAAA,IAAAA,IAAAmB,EAAA,gBAAAnB,CAAA,cAAAX,EAAAmD,OAAAnD,EAAAsD,KAAAtD,EAAAuD,MAAAvD,EAAAwB,SAAA,aAAAxB,EAAAmD,OAAA,IAAAjD,IAAAwB,EAAA,MAAAxB,EAAA2B,EAAA7B,EAAAwB,IAAAxB,EAAAwD,kBAAAxD,EAAAwB,IAAA,gBAAAxB,EAAAmD,QAAAnD,EAAAyD,OAAA,SAAAzD,EAAAwB,KAAAtB,EAAA0B,EAAA,IAAAK,EAAAX,EAAA3B,EAAAE,EAAAG,GAAA,cAAAiC,EAAAV,KAAA,IAAArB,EAAAF,EAAAkD,KAAArB,EAAAF,EAAAM,EAAAT,MAAAM,EAAA,gBAAA1B,MAAA6B,EAAAT,IAAA0B,KAAAlD,EAAAkD,KAAA,WAAAjB,EAAAV,OAAArB,EAAA2B,EAAA7B,EAAAmD,OAAA,QAAAnD,EAAAwB,IAAAS,EAAAT,IAAA,YAAA6B,EAAA1D,EAAAE,GAAA,IAAAG,EAAAH,EAAAsD,OAAAjD,EAAAP,EAAAa,SAAAR,GAAA,GAAAE,IAAAN,EAAA,OAAAC,EAAAuD,SAAA,eAAApD,GAAAL,EAAAa,SAAA,SAAAX,EAAAsD,OAAA,SAAAtD,EAAA2B,IAAA5B,EAAAyD,EAAA1D,EAAAE,GAAA,UAAAA,EAAAsD,SAAA,WAAAnD,IAAAH,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAA,IAAAkC,UAAA,oCAAA1D,EAAA,aAAA8B,EAAA,IAAAzB,EAAAiB,EAAApB,EAAAP,EAAAa,SAAAX,EAAA2B,KAAA,aAAAnB,EAAAkB,KAAA,OAAA1B,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAAnB,EAAAmB,IAAA3B,EAAAuD,SAAA,KAAAtB,EAAA,IAAAvB,EAAAF,EAAAmB,IAAA,OAAAjB,EAAAA,EAAA2C,MAAArD,EAAAF,EAAAgE,YAAApD,EAAAH,MAAAP,EAAA+D,KAAAjE,EAAAkE,QAAA,WAAAhE,EAAAsD,SAAAtD,EAAAsD,OAAA,OAAAtD,EAAA2B,IAAA5B,GAAAC,EAAAuD,SAAA,KAAAtB,GAAAvB,GAAAV,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAA,IAAAkC,UAAA,oCAAA7D,EAAAuD,SAAA,KAAAtB,EAAA,UAAAgC,EAAAlE,GAAA,IAAAD,EAAA,CAAAoE,OAAAnE,EAAA,SAAAA,IAAAD,EAAAqE,SAAApE,EAAA,SAAAA,IAAAD,EAAAsE,WAAArE,EAAA,GAAAD,EAAAuE,SAAAtE,EAAA,SAAAuE,WAAAC,KAAAzE,EAAA,UAAA0E,EAAAzE,GAAA,IAAAD,EAAAC,EAAA0E,YAAA,GAAA3E,EAAA4B,KAAA,gBAAA5B,EAAA6B,IAAA5B,EAAA0E,WAAA3E,CAAA,UAAAyB,EAAAxB,GAAA,KAAAuE,WAAA,EAAAJ,OAAA,SAAAnE,EAAA4C,QAAAsB,EAAA,WAAAS,OAAA,YAAAlC,EAAA1C,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAAE,EAAAF,EAAAY,GAAA,GAAAV,EAAA,OAAAA,EAAA4B,KAAA9B,GAAA,sBAAAA,EAAAiE,KAAA,OAAAjE,EAAA,IAAA6E,MAAA7E,EAAA8E,QAAA,KAAAvE,GAAA,EAAAG,EAAA,SAAAuD,IAAA,OAAA1D,EAAAP,EAAA8E,QAAA,GAAAzE,EAAAyB,KAAA9B,EAAAO,GAAA,OAAA0D,EAAAxD,MAAAT,EAAAO,GAAA0D,EAAAV,MAAA,EAAAU,EAAA,OAAAA,EAAAxD,MAAAR,EAAAgE,EAAAV,MAAA,EAAAU,CAAA,SAAAvD,EAAAuD,KAAAvD,CAAA,YAAAqD,UAAAd,EAAAjD,GAAA,2BAAAoC,EAAAhC,UAAAiC,EAAA9B,EAAAoC,EAAA,eAAAlC,MAAA4B,EAAAjB,cAAA,IAAAb,EAAA8B,EAAA,eAAA5B,MAAA2B,EAAAhB,cAAA,IAAAgB,EAAA2C,YAAA7D,EAAAmB,EAAArB,EAAA,qBAAAhB,EAAAgF,oBAAA,SAAA/E,GAAA,IAAAD,EAAA,mBAAAC,GAAAA,EAAAgF,YAAA,QAAAjF,IAAAA,IAAAoC,GAAA,uBAAApC,EAAA+E,aAAA/E,EAAAkF,MAAA,EAAAlF,EAAAmF,KAAA,SAAAlF,GAAA,OAAAE,OAAAiF,eAAAjF,OAAAiF,eAAAnF,EAAAoC,IAAApC,EAAAoF,UAAAhD,EAAAnB,EAAAjB,EAAAe,EAAA,sBAAAf,EAAAG,UAAAD,OAAAqB,OAAAmB,GAAA1C,CAAA,EAAAD,EAAAsF,MAAA,SAAArF,GAAA,OAAAkD,QAAAlD,EAAA,EAAA2C,EAAAG,EAAA3C,WAAAc,EAAA6B,EAAA3C,UAAAU,GAAA,0BAAAd,EAAA+C,cAAAA,EAAA/C,EAAAuF,MAAA,SAAAtF,EAAAC,EAAAG,EAAAE,EAAAG,QAAA,IAAAA,IAAAA,EAAA8E,SAAA,IAAA5E,EAAA,IAAAmC,EAAAzB,EAAArB,EAAAC,EAAAG,EAAAE,GAAAG,GAAA,OAAAV,EAAAgF,oBAAA9E,GAAAU,EAAAA,EAAAqD,OAAAb,MAAA,SAAAnD,GAAA,OAAAA,EAAAsD,KAAAtD,EAAAQ,MAAAG,EAAAqD,MAAA,KAAArB,EAAAD,GAAAzB,EAAAyB,EAAA3B,EAAA,aAAAE,EAAAyB,EAAA/B,GAAA,0BAAAM,EAAAyB,EAAA,qDAAA3C,EAAAyF,KAAA,SAAAxF,GAAA,IAAAD,EAAAG,OAAAF,GAAAC,EAAA,WAAAG,KAAAL,EAAAE,EAAAuE,KAAApE,GAAA,OAAAH,EAAAwF,UAAA,SAAAzB,IAAA,KAAA/D,EAAA4E,QAAA,KAAA7E,EAAAC,EAAAyF,MAAA,GAAA1F,KAAAD,EAAA,OAAAiE,EAAAxD,MAAAR,EAAAgE,EAAAV,MAAA,EAAAU,CAAA,QAAAA,EAAAV,MAAA,EAAAU,CAAA,GAAAjE,EAAA0C,OAAAA,EAAAjB,EAAArB,UAAA,CAAA6E,YAAAxD,EAAAmD,MAAA,SAAA5E,GAAA,QAAA4F,KAAA,OAAA3B,KAAA,OAAAN,KAAA,KAAAC,MAAA3D,EAAA,KAAAsD,MAAA,OAAAE,SAAA,UAAAD,OAAA,YAAA3B,IAAA5B,EAAA,KAAAuE,WAAA3B,QAAA6B,IAAA1E,EAAA,QAAAE,KAAA,WAAAA,EAAA2F,OAAA,IAAAxF,EAAAyB,KAAA,KAAA5B,KAAA2E,OAAA3E,EAAA4F,MAAA,WAAA5F,GAAAD,EAAA,EAAA8F,KAAA,gBAAAxC,MAAA,MAAAtD,EAAA,KAAAuE,WAAA,GAAAG,WAAA,aAAA1E,EAAA2B,KAAA,MAAA3B,EAAA4B,IAAA,YAAAmE,IAAA,EAAAnC,kBAAA,SAAA7D,GAAA,QAAAuD,KAAA,MAAAvD,EAAA,IAAAE,EAAA,cAAA+F,EAAA5F,EAAAE,GAAA,OAAAK,EAAAgB,KAAA,QAAAhB,EAAAiB,IAAA7B,EAAAE,EAAA+D,KAAA5D,EAAAE,IAAAL,EAAAsD,OAAA,OAAAtD,EAAA2B,IAAA5B,KAAAM,CAAA,SAAAA,EAAA,KAAAiE,WAAAM,OAAA,EAAAvE,GAAA,IAAAA,EAAA,KAAAG,EAAA,KAAA8D,WAAAjE,GAAAK,EAAAF,EAAAiE,WAAA,YAAAjE,EAAA0D,OAAA,OAAA6B,EAAA,UAAAvF,EAAA0D,QAAA,KAAAwB,KAAA,KAAA9E,EAAAT,EAAAyB,KAAApB,EAAA,YAAAM,EAAAX,EAAAyB,KAAApB,EAAA,iBAAAI,GAAAE,EAAA,SAAA4E,KAAAlF,EAAA2D,SAAA,OAAA4B,EAAAvF,EAAA2D,UAAA,WAAAuB,KAAAlF,EAAA4D,WAAA,OAAA2B,EAAAvF,EAAA4D,WAAA,SAAAxD,GAAA,QAAA8E,KAAAlF,EAAA2D,SAAA,OAAA4B,EAAAvF,EAAA2D,UAAA,YAAArD,EAAA,UAAAsC,MAAA,kDAAAsC,KAAAlF,EAAA4D,WAAA,OAAA2B,EAAAvF,EAAA4D,WAAA,KAAAR,OAAA,SAAA7D,EAAAD,GAAA,QAAAE,EAAA,KAAAsE,WAAAM,OAAA,EAAA5E,GAAA,IAAAA,EAAA,KAAAK,EAAA,KAAAiE,WAAAtE,GAAA,GAAAK,EAAA6D,QAAA,KAAAwB,MAAAvF,EAAAyB,KAAAvB,EAAA,oBAAAqF,KAAArF,EAAA+D,WAAA,KAAA5D,EAAAH,EAAA,OAAAG,IAAA,UAAAT,GAAA,aAAAA,IAAAS,EAAA0D,QAAApE,GAAAA,GAAAU,EAAA4D,aAAA5D,EAAA,UAAAE,EAAAF,EAAAA,EAAAiE,WAAA,UAAA/D,EAAAgB,KAAA3B,EAAAW,EAAAiB,IAAA7B,EAAAU,GAAA,KAAA8C,OAAA,YAAAS,KAAAvD,EAAA4D,WAAAnC,GAAA,KAAA+D,SAAAtF,EAAA,EAAAsF,SAAA,SAAAjG,EAAAD,GAAA,aAAAC,EAAA2B,KAAA,MAAA3B,EAAA4B,IAAA,gBAAA5B,EAAA2B,MAAA,aAAA3B,EAAA2B,KAAA,KAAAqC,KAAAhE,EAAA4B,IAAA,WAAA5B,EAAA2B,MAAA,KAAAoE,KAAA,KAAAnE,IAAA5B,EAAA4B,IAAA,KAAA2B,OAAA,cAAAS,KAAA,kBAAAhE,EAAA2B,MAAA5B,IAAA,KAAAiE,KAAAjE,GAAAmC,CAAA,EAAAgE,OAAA,SAAAlG,GAAA,QAAAD,EAAA,KAAAwE,WAAAM,OAAA,EAAA9E,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAsE,WAAAxE,GAAA,GAAAE,EAAAoE,aAAArE,EAAA,YAAAiG,SAAAhG,EAAAyE,WAAAzE,EAAAqE,UAAAG,EAAAxE,GAAAiC,CAAA,kBAAAlC,GAAA,QAAAD,EAAA,KAAAwE,WAAAM,OAAA,EAAA9E,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAsE,WAAAxE,GAAA,GAAAE,EAAAkE,SAAAnE,EAAA,KAAAI,EAAAH,EAAAyE,WAAA,aAAAtE,EAAAuB,KAAA,KAAArB,EAAAF,EAAAwB,IAAA6C,EAAAxE,EAAA,QAAAK,CAAA,YAAA+C,MAAA,0BAAA8C,cAAA,SAAApG,EAAAE,EAAAG,GAAA,YAAAoD,SAAA,CAAA5C,SAAA6B,EAAA1C,GAAAgE,WAAA9D,EAAAgE,QAAA7D,GAAA,cAAAmD,SAAA,KAAA3B,IAAA5B,GAAAkC,CAAA,GAAAnC,CAAA,UAAAqG,EAAAC,EAAApD,EAAAqD,EAAAC,EAAAC,EAAAC,EAAA7E,GAAA,QAAA8E,EAAAL,EAAAI,GAAA7E,GAAApB,EAAAkG,EAAAlG,KAAA,OAAAmG,GAAA,YAAAL,EAAAK,EAAA,CAAAD,EAAApD,KAAAL,EAAAzC,GAAA+E,QAAAtC,QAAAzC,GAAA2C,KAAAoD,EAAAC,EAAA,UAAAI,EAAAC,GAAA,sBAAAC,EAAA,KAAAC,EAAAC,UAAA,WAAAzB,SAAA,SAAAtC,EAAAqD,GAAA,IAAAD,EAAAQ,EAAAI,MAAAH,EAAAC,GAAA,SAAAR,EAAA/F,GAAA4F,EAAAC,EAAApD,EAAAqD,EAAAC,EAAAC,EAAA,OAAAhG,EAAA,UAAAgG,EAAAU,GAAAd,EAAAC,EAAApD,EAAAqD,EAAAC,EAAAC,EAAA,QAAAU,EAAA,CAAAX,OAAAY,EAAA,cAAA4Q,EAAAhY,EAAAE,GAAA,IAAAD,EAAAE,OAAAsF,KAAAzF,GAAA,GAAAG,OAAA8X,sBAAA,KAAA1X,EAAAJ,OAAA8X,sBAAAjY,GAAAE,IAAAK,EAAAA,EAAA8O,QAAA,SAAAnP,GAAA,OAAAC,OAAA+X,yBAAAlY,EAAAE,GAAAiB,UAAA,KAAAlB,EAAAwE,KAAAyC,MAAAjH,EAAAM,EAAA,QAAAN,CAAA,UAAAuX,EAAAxX,GAAA,QAAAE,EAAA,EAAAA,EAAA+G,UAAAnC,OAAA5E,IAAA,KAAAD,EAAA,MAAAgH,UAAA/G,GAAA+G,UAAA/G,GAAA,GAAAA,EAAA,EAAA8X,EAAA7X,OAAAF,IAAA,GAAA4C,SAAA,SAAA3C,GAAAiY,EAAAnY,EAAAE,EAAAD,EAAAC,GAAA,IAAAC,OAAAiY,0BAAAjY,OAAAkY,iBAAArY,EAAAG,OAAAiY,0BAAAnY,IAAA+X,EAAA7X,OAAAF,IAAA4C,SAAA,SAAA3C,GAAAC,OAAAK,eAAAR,EAAAE,EAAAC,OAAA+X,yBAAAjY,EAAAC,GAAA,WAAAF,CAAA,UAAAmY,EAAAG,EAAA5R,EAAAjG,GAAA,IAAAC,EAAA,OAAAA,EAAA,SAAAT,EAAAC,GAAA,aAAA+C,EAAAhD,KAAAA,EAAA,OAAAA,EAAA,IAAAD,EAAAC,EAAAU,OAAA4X,aAAA,YAAAvY,EAAA,KAAAU,EAAAV,EAAA8B,KAAA7B,EAAAC,GAAA,wBAAA+C,EAAAvC,GAAA,OAAAA,EAAA,UAAAqD,UAAA,kEAAA7D,EAAAsY,OAAAC,QAAAxY,EAAA,CAAAyY,CAAAhS,EAAA,WAAAA,EAAA,UAAAzD,EAAAvC,GAAAA,EAAA8X,OAAA9X,MAAA4X,EAAAnY,OAAAK,eAAA8X,EAAA5R,EAAA,CAAAjG,MAAAA,EAAAU,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAiX,EAAA5R,GAAAjG,EAAA6X,CAAA,CA4BA,SAASK,EAA0BC,GAC/B,IAAMtB,GAAYtD,EAAAA,EAAAA,gBAElB,OAAO4E,EAAapP,KAAK+N,KAAI,SAAAsB,GAGzB,IAAMC,EAAoBD,EAAKnB,eAAiBJ,EAAUyB,oCAAoCF,EAAKnB,eAAgB,uBAAyB,KACtIsB,EAAkBH,EAAKd,aAAeT,EAAUyB,oCAAoCF,EAAKd,aAAc,uBAAyB,KAItI,OAAAP,EAAAA,EAAA,GACOqB,GAAI,IACPnB,eAAgBoB,EAChBf,aAAciB,EACdxG,SAAU8E,EAAU9E,UAE5B,GACJ,CAGA,SAASyG,EAAwBC,GAI7B,IAHA,IAAIC,EAAQ,GACRC,EAAQ9G,IAAM4G,GAETxY,EAAI,EAAGA,EAAI,EAAGA,IAEnByY,EAAM1U,KAAK2U,EAAMC,IAAI3Y,EAAG,QAAQ4Y,UAGpC,OAAOH,CAEX,CAvCA7G,IAAAA,OAAaE,KACbF,IAAAA,OAAaiH,KACbjH,IAAAA,OAAakH,KACblH,IAAAA,OAAaC,KACbD,IAAAA,OAAamH,KACbnH,IAAAA,OAAaoH,KAoCb,IAAMC,EAAc,WAMhB,OALkB3F,EAAAA,EAAAA,gBAKDxB,QACrB,EAEMnL,EAAe,WAAH,MAAU,CACxBuS,SAAUtH,MAAQqF,GAAGgC,KACrBE,gBAAiBvH,MAAQqF,GAAGgC,KAAeG,QAAQ,QAAQT,IAAI/G,MAAQyH,UAAY,GAAK,GAAK,EAAG,UAChGC,eAAgB1H,MAAQqF,GAAGgC,KAAeG,QAAQ,QAAQT,IAAI/G,MAAQyH,UAAY,GAAK,GAAK,EAAG,UAAUV,IAAI,EAAG,QAChHH,mBAAoB5G,MAAQqF,GAAGgC,KAAeG,QAAQ,QACtDG,aAAc3H,MAAQqF,GAAGgC,KAAeG,QAAQ,SAChDI,YAAa5H,MAAQqF,GAAGgC,KACxBQ,iBAAkB7H,MAAQqF,GAAGgC,KAAeG,QAAQ,QACpDM,eAAgB9H,MAAQqF,GAAGgC,KAAeU,MAAM,QAChDC,uBAAwB,GACxBC,uCAAwC,GAGxCC,uBAAwB,GACxBC,UAAW,GACXxH,WAAW,EACXyH,SAAU,EACVC,SAAS,EACTC,cAAe,GACfC,cAAe,GACfC,aAAc,GACdC,kBAAkB,EAClBC,oBAAqB,GACrBC,sBAAuB,EACvBC,qBAAsB,EACtBC,yBAA0B,EAC1BC,UAAW,GACXC,YAAa,CACT,CAAC5Q,GAAI,EAAGvF,KAAM,gBAAiBoW,UAAW,QAASC,SAAU,GAC7D,CAAC9Q,GAAI,EAAGvF,KAAM,UAAWoW,UAAW,QAASC,SAAU,GACvD,CAAC9Q,GAAI,EAAGvF,KAAM,YAAaoW,UAAW,QAASC,SAAU,GACzD,CAAC9Q,GAAI,EAAGvF,KAAM,aAAcoW,UAAW,QAASC,SAAU,GAC1D,CAAC9Q,GAAI,EAAGvF,KAAM,kBAAmBoW,UAAW,QAASC,SAAU,GAC/D,CAAC9Q,GAAI,EAAGvF,KAAM,aAAcoW,UAAW,QAASC,SAAU,GAC1D,CAAC9Q,GAAI,EAAGvF,KAAM,YAAaoW,UAAW,QAASC,SAAU,IAEhE,EAEYC,GAAmB5S,EAAAA,EAAAA,IAAY,gBAAiB,CACzDC,MAAOxB,EACPyB,QAAS,CACL2S,SAAQ,WAEJtb,OAAO4I,OAAOC,KAAM3B,IAExB,EACAzC,MAAK,WACDoE,KAAK4Q,SAAWtH,MAAQqF,GAAGgC,KAC3B3Q,KAAKkQ,mBAAqB5G,MAAQqF,GAAGgC,KAAeG,QAAQ,QAC5D9Q,KAAKiR,aAAe3H,MAAQqF,GAAGgC,KAAeG,QAAQ,SACtD9Q,KAAKkR,YAAc5H,MAAQqF,GAAGgC,IAElC,EACM+B,eAAc,SAACC,GAAK,IAAAzS,EAAA,YAAArC,EAAA9G,IAAAoF,MAAA,SAAAgE,IAAA,IAAA+Q,EAAA,OAAAna,IAAAuB,MAAA,SAAA+H,GAAA,cAAAA,EAAAzD,KAAAyD,EAAApF,MAAA,OActB,OAZMiW,EAAc5H,IAAMqJ,GAG1BzS,EAAKgR,YAAcA,EAAYZ,SAG/BpQ,EAAKgQ,mBAAqBgB,EAAYJ,QAAQ,OAAOT,IAAI,EAAG,SAASC,SAGrEpQ,EAAKiR,iBAAmBD,EAAYJ,QAAQ,QAAQR,SACpDpQ,EAAKkR,eAAiBF,EAAYG,MAAM,QAAQf,SAEhDjQ,EAAApF,KAAA,EACMiF,EAAK0S,wBAAuB,wBAAAvS,EAAAtD,OAAA,GAAAoD,EAAA,IAfZtC,EAiB1B,EACAgV,sBAAqB,SAACF,GAClB,IAAMG,EAAMxJ,MAGZtJ,KAAKkR,YAAc4B,EAAIxC,SAGvBtQ,KAAKkQ,mBAAqB4C,EAAIhC,QAAQ,QAAQR,QAElD,EACMyC,UAAS,SAACC,GAAM,IAAArS,EAAA,YAAA9C,EAAA9G,IAAAoF,MAAA,SAAAyE,IAAA,IAAAqS,EAAAC,EAAAC,EAAA,OAAApc,IAAAuB,MAAA,SAAAuI,GAAA,cAAAA,EAAAjE,KAAAiE,EAAA5F,MAAA,OAsBlB,OArBMgY,EAAkBtC,IAElBuC,EAAsD,GAAxC5J,IAAM3I,EAAKuP,oBAAoBkD,OAAc9J,IAAM3I,EAAKuP,oBAAoBa,SAMhGoC,GAHIA,EAAS7J,IAAM3I,EAAKuP,oBAAoBvB,GAAGsE,GAAiB5C,IAAI2C,EAAM,OAAOlC,QAAQ,QAGzET,IAAI6C,EAAa,UAIjCvS,EAAKuP,mBAAqBiD,EAAO7C,SAGjC3P,EAAKuP,mBAAqBiD,EAM1BtS,EAAA5F,KAAA,EACM0F,EAAKiS,wBAAuB,wBAAA/R,EAAA9D,OAAA,GAAA6D,EAAA,IAvBhB/C,EA0CtB,EACMwV,WAAU,SAAC7H,GAAO,IAAAlK,EAAA,YAAAzD,EAAA9G,IAAAoF,MAAA,SAAA+F,IAAA,OAAAnL,IAAAuB,MAAA,SAAAkK,GAAA,cAAAA,EAAA5F,KAAA4F,EAAAvH,MAAA,OAapB,OAXAqG,EAAK4O,mBAAqB5G,IAAMhI,EAAK4O,oBAAoBG,IAAI7E,EAAO,QAAQ8E,SAG5EhP,EAAK6P,iBAAmB7H,IAAMhI,EAAK4O,oBAAoBY,QAAQ,QAAQR,SACvEhP,EAAK8P,eAAiB9H,IAAMhI,EAAK4O,oBAAoBmB,MAAM,QAAQf,SAG9DhH,IAAMhI,EAAK4O,oBAAoBoD,OAAOhK,IAAMhI,EAAK4P,aAAc,SAChE5P,EAAK4P,YAAc5H,IAAMhI,EAAK4O,oBAAoBY,QAAQ,OAAOR,UAGrE9N,EAAAvH,KAAA,EACMqG,EAAKsR,wBAAuB,wBAAApQ,EAAAzF,OAAA,GAAAmF,EAAA,IAddrE,EAgBxB,EACA0V,WAAU,SAACxI,GAKP,OAAuB,KAHVzB,IAAMyB,GAGPqI,MAEhB,EAEMI,cAAa,WAAG,IAAA3R,EAAA,YAAAhE,EAAA9G,IAAAoF,MAAA,SAAA4G,IAAA,OAAAhM,IAAAuB,MAAA,SAAA2K,GAAA,cAAAA,EAAArG,KAAAqG,EAAAhI,MAAA,OAEwD,OAA1E4G,EAAKoP,aAAe3H,IAAMzH,EAAKoP,cAAcwC,SAAS,EAAG,SAASnD,SAAQrN,EAAArG,KAAA,EAAAqG,EAAAhI,KAAA,EAIhE4G,EAAK6Q,eAAe7Q,EAAKoP,cAAa,OAAAhO,EAAAhI,KAAA,eAAAgI,EAAArG,KAAA,EAAAqG,EAAAxC,GAAAwC,EAAA,SAG5CwC,QAAQ7H,MAAM,qDAADmD,OAAsDc,EAAKoP,aAAY,KAAAhO,EAAAxC,IAAW,wBAAAwC,EAAAlG,OAAA,GAAAgG,EAAA,iBATjFlF,EAYtB,EACM6V,SAAQ,WAAG,IAAAzR,EAAA,YAAApE,EAAA9G,IAAAoF,MAAA,SAAAiH,IAAA,OAAArM,IAAAuB,MAAA,SAAA+K,GAAA,cAAAA,EAAAzG,KAAAyG,EAAApI,MAAA,OAEwD,OAArEgH,EAAKgP,aAAe3H,IAAMrH,EAAKgP,cAAcZ,IAAI,EAAG,SAASC,SAAQjN,EAAAzG,KAAA,EAAAyG,EAAApI,KAAA,EAI3DgH,EAAKyQ,eAAezQ,EAAKgP,cAAa,OAAA5N,EAAApI,KAAA,eAAAoI,EAAAzG,KAAA,EAAAyG,EAAA5C,GAAA4C,EAAA,SAG5CoC,QAAQ7H,MAAM,qDAADmD,OAAsDkB,EAAKgP,aAAY,KAAA5N,EAAA5C,IAAW,wBAAA4C,EAAAtG,OAAA,GAAAqG,EAAA,iBATtFvF,EAYjB,EACM8V,4BAA2B,WAAG,IAAA7Q,EAAA,YAAAjF,EAAA9G,IAAAoF,MAAA,SAAAwH,IAAA,IAAA2K,EAAAlO,EAAA,OAAArJ,IAAAuB,MAAA,SAAAsL,GAAA,cAAAA,EAAAhH,KAAAgH,EAAA3I,MAAA,OAGI,OAFpCwK,QAAQ7H,MAAM,+BAA8BgG,EAAAhH,KAAA,EAElC0R,GAAYtD,EAAAA,EAAAA,gBAAcpH,EAAA3I,KAAA,EACTqF,MAAMC,IAAI,iBAAgB,OAA3CH,EAAQwD,EAAAjJ,KAGG2T,EAAU9E,UAAYpJ,EAASI,KAAKoT,cAAgB,MAGrE9Q,EAAK0O,uBAAyB7B,EAA0BvP,EAASI,MACjEoD,EAAA3I,KAAA,iBAAA2I,EAAAhH,KAAA,GAAAgH,EAAAnD,GAAAmD,EAAA,SAEA6B,QAAQ7H,MAAM,iCAAgCgG,EAAAnD,IAC9C,yBAAAmD,EAAA7G,OAAA,GAAA4G,EAAA,kBAd4B9F,EAiBpC,EACMgW,mBAAkB,WAAG,IAAA1Q,EAAA,YAAAtF,EAAA9G,IAAAoF,MAAA,SAAAmI,IAAA,IAAAgK,EAAAlO,EAAA,OAAArJ,IAAAuB,MAAA,SAAAmM,GAAA,cAAAA,EAAA7H,KAAA6H,EAAAxJ,MAAA,OAEa,OAFbwJ,EAAA7H,KAAA,EAEb0R,GAAYtD,EAAAA,EAAAA,gBAAcvG,EAAAxJ,KAAA,EACTqF,MAAMC,IAAI,uBAAsB,OAAjDH,EAAQqE,EAAA9J,KAGG2T,EAAU9E,UAAYpJ,EAASI,KAAKoT,cAAgB,MAErEzQ,EAAKyO,cAAgBjC,EAA0BvP,EAASI,MAAeiE,EAAAxJ,KAAA,gBAAAwJ,EAAA7H,KAAA,EAAA6H,EAAAhE,GAAAgE,EAAA,SAEvEgB,QAAQ7H,MAAM,mCAAmC6G,EAAAhE,IAAQ,yBAAAgE,EAAA1H,OAAA,GAAAuH,EAAA,iBAVtCzG,EAa3B,EACMiW,qBAAoB,WAAG,IAAApQ,EAAA,YAAA7F,EAAA9G,IAAAoF,MAAA,SAAA2I,IAAA,IAAAiP,EAAA,OAAAhd,IAAAuB,MAAA,SAAA0M,GAAA,cAAAA,EAAApI,KAAAoI,EAAA/J,MAAA,OAGgB,OAFzCwK,QAAQC,IAAI,gCAENqO,EAAczK,IAAM5F,EAAKkN,UAAU5L,EAAApI,KAAA,EAAAoI,EAAA/J,KAAA,EAI/ByI,EAAKsQ,iBAAiBD,GAAY,OAAA/O,EAAA/J,KAAA,gBAAA+J,EAAApI,KAAA,EAAAoI,EAAAvE,GAAAuE,EAAA,SAExCS,QAAQ7H,MAAM,oCAAmCoH,EAAAvE,IAAQ,yBAAAuE,EAAAjI,OAAA,GAAA+H,EAAA,iBATpCjH,EAY7B,EAEMoW,eAAc,SAACC,EAAWC,GAAS,IAAA9P,EAAA,YAAAxG,EAAA9G,IAAAoF,MAAA,SAAAiJ,IAAA,IAAAkJ,EAAA8F,EAAAC,EAAAC,EAAAC,EAAAnU,EAAAoU,EAAA,OAAAzd,IAAAuB,MAAA,SAAAgN,GAAA,cAAAA,EAAA1I,KAAA0I,EAAArK,MAAA,OAQc,OAPnDoJ,EAAK4F,WAAY,EACjBxE,QAAQC,IAAI,6BAAD3E,OAA8BmT,EAAS,SAAAnT,OAAQoT,IAAW7O,EAAA1I,KAAA,EAE3D0R,GAAYtD,EAAAA,EAAAA,gBACZoJ,EAAe9K,IAAM4K,GACrBG,EAAa/K,IAAM6K,GACnBG,EAAmBF,EAAaK,cAChCF,EAAiBF,EAAWI,cAAanP,EAAArK,KAAA,GAExBqF,MAAMC,IAAI,8BAADQ,OAA+BuT,EAAgB,SAAAvT,OAAQwT,IAAiB,QAAlGnU,EAAQkF,EAAA3K,KAKd8K,QAAQC,IAAI,qBAAsBtF,EAASI,MAG1B8N,EAAU9E,UAAYpJ,EAASI,KAAKoT,aAE/CY,EAAU7E,EAA0BvP,EAASI,MASnD6D,EAAKoN,UAAYiD,EAAI,IAAIC,IAAI,GAAA5T,OAAA2T,EAAIrQ,EAAKoN,WAASiD,EAAKF,IAASjG,KAAI,SAAAsB,GAAI,OAAI+E,KAAKC,UAAUhF,EAAK,MAAItB,KAAI,SAAAsB,GAAI,OAAI+E,KAAKE,MAAMjF,EAAK,IAI7HvK,EAAArK,KAAA,iBAAAqK,EAAA1I,KAAA,GAAA0I,EAAA7E,GAAA6E,EAAA,SAGAG,QAAQ7H,MAAM,6BAA4B0H,EAAA7E,IAC1C4D,EAAK4F,WAAY,EACjB,QAGA,OAHA3E,EAAA1I,KAAA,GAEAyH,EAAK4F,WAAY,EACjB3E,EAAAnI,OAAA,6BAAAmI,EAAAvI,OAAA,GAAAqI,EAAA,wBAzCiCvH,EA2CzC,EAEMkX,mBAAkB,WAAG,IAAAlQ,EAAA,YAAAhH,EAAA9G,IAAAoF,MAAA,SAAA0J,IAAA,IAAAmP,EAAAd,EAAAC,EAAA,OAAApd,IAAAuB,MAAA,SAAAwN,GAAA,cAAAA,EAAAlJ,KAAAkJ,EAAA7K,MAAA,WAEnB4J,EAAKoF,WAAcpF,EAAK8M,QAAO,CAAA7L,EAAA7K,KAAA,eAAA6K,EAAAhL,OAAA,iBAOsC,OALzE+J,EAAKoF,WAAY,EACjBxE,QAAQC,IAAI,8BAA8BI,EAAAlJ,KAAA,EAEhCoY,EAAenQ,EAAK4M,UAAU5M,EAAK4M,UAAU3V,OAAS,GACtDoY,EAAYc,EAAe1L,IAAM0L,EAAatG,gBAAgBE,OAAO,cAAgBtF,MAAQsF,OAAO,cACpGuF,EAAU7K,IAAM4K,GAAW7D,IAAI,EAAG,OAAOzB,OAAO,cAAe9I,EAAA7K,KAAA,GAE/D4J,EAAKoP,eAAeC,EAAWC,GAAQ,QAKjB,IAFPtP,EAAK4M,UAAU3U,MAAM+H,EAAK4M,UAAU3V,OAAS,GAEjDA,OACb+I,EAAK8M,SAAU,EAGf9M,EAAK6M,UAAY,EACpB5L,EAAA7K,KAAA,iBAAA6K,EAAAlJ,KAAA,GAAAkJ,EAAArF,GAAAqF,EAAA,SAEDL,QAAQ7H,MAAM,kCAAiCkI,EAAArF,IAAS,QAEjC,OAFiCqF,EAAAlJ,KAAA,GAExDiI,EAAKoF,WAAY,EAAMnE,EAAA3I,OAAA,6BAAA2I,EAAA/I,OAAA,GAAA8I,EAAA,wBAzBJhI,EA2B3B,EAEMmW,iBAAgB,SAACjJ,GAAM,IAAA5F,EAAA,YAAAtH,EAAA9G,IAAAoF,MAAA,SAAA+J,IAAA,IAAA+O,EAAA3G,EAAA4G,EAAAC,EAAA/U,EAAAoU,EAAA,OAAAzd,IAAAuB,MAAA,SAAA6N,GAAA,cAAAA,EAAAvJ,KAAAuJ,EAAAlL,MAAA,OAcrB,OAbAga,EAAgB,KACpB9P,EAAK8E,WAAY,EACjBxE,QAAQC,IAAI,6BAA4BS,EAAAvJ,KAAA,EAE9B0R,GAAYtD,EAAAA,EAAAA,gBAIZkK,EAAU5L,IAAMyB,GAChBoK,EAAcD,EAAQT,cAI5BtO,EAAAlL,KAAA,EACuBqF,MAAMQ,KAAK,sBAADC,OAAuBoU,IAAc,OAAhE/U,EAAQ+F,EAAAxL,KAIQua,EAAQtG,OAAO,cAOpBN,EAAU9E,UAAYpJ,EAASI,KAAKoT,aAG/CY,EAAU7E,EAA0BvP,EAASI,MAGnD2E,EAAK0M,cAAgB,GAAA9Q,OAAA2T,EAAIvP,EAAK0M,eAAa6C,EAAKF,IAASnO,QAAO,SAAC5O,EAAOoP,EAAO9I,GAAI,OAC3E8I,IAAU9I,EAAKkJ,WAAU,SAAChQ,GAAC,OACvBA,EAAEwK,KAAOhK,EAAMgK,IAAMxK,EAAEyX,iBAAmBjX,EAAMiX,cAAc,GAChE,IAMVvJ,EAAKiQ,gBAAgBrK,GAErB5F,EAAK8E,WAAY,EACjB9D,EAAAlL,KAAA,iBAAAkL,EAAAvJ,KAAA,GAAAuJ,EAAA1F,GAAA0F,EAAA,SAEAV,QAAQ7H,MAAM,4CAADmD,OAA6CkU,EAAa,KAAA9O,EAAA1F,IACvE0E,EAAK8E,WAAY,EACjB,yBAAA9D,EAAApJ,OAAA,GAAAmJ,EAAA,kBAhDqBrI,EAoD7B,EACAuX,gBAAe,SAACrK,GAEZ,IAAMmK,EAAU5L,IAAMyB,GAGhBsK,EAAYH,EAAQpE,QAAQ,QAAQ2D,cACpCa,EAAUJ,EAAQ7D,MAAM,QAAQoD,cAChCc,EAAYjM,MAAQmL,cAGpBe,EAAmBxV,KAAK8R,aAAa7K,WAAU,SAAAvB,GAAG,OACpDA,EAAI2P,YAAcA,GAAa3P,EAAI4P,UAAYA,CAAO,KAEhC,IAAtBE,EAEAxV,KAAK8R,aAAa0D,GAAkBC,UAAYF,EAGhDvV,KAAK8R,aAAarW,KAAK,CAAC4Z,UAAAA,EAAWC,QAAAA,EAASG,UAAWF,GAG/D,EACAG,iBAAgB,WAEZ,IAAMC,EAAgB,SAAC5K,GAAI,OAAKzB,IAAMyB,GAAM6D,OAAO,aAAa,EAG1DgH,EAAeD,EAAc3V,KAAKmR,kBAClC0E,EAAaF,EAAc3V,KAAKoR,gBAqBtC,OAd2BpR,KAAK8R,aAAagE,MAAK,SAAApQ,GAE9C,IAAMqQ,EAAkBJ,EAAcjQ,EAAI2P,WACpCW,EAAgBL,EAAcjQ,EAAI4P,SAKxC,OAAOS,GAAmBH,GAAgBI,GAAiBH,CAC/D,GAMJ,EACAI,uCAAsC,WAUlC,OARsB3M,IAAMtJ,KAAKkQ,oBAIKG,IAAI,EAAG,QAItBC,QAC3B,EAEM4F,gCAA+B,WAAG,IAAAtQ,EAAA,YAAA/H,EAAA9G,IAAAoF,MAAA,SAAAwK,IAAA,IAAAwP,EAAArD,EAAAsD,EAAAC,EAAAC,EAAAC,EAAA,OAAAxf,IAAAuB,MAAA,SAAAiP,GAAA,cAAAA,EAAA3K,KAAA2K,EAAAtM,MAAA,OAC9Bkb,EAAgBlG,EAAwBrK,EAAKsK,oBAC7C4C,EAAMxJ,MACN8M,EAAoBtD,EAAIW,SAAS,GAAI,WAAU4C,EAAAG,EAElCL,GAAa5O,EAAA3K,KAAA,EAAA2Z,EAAAxf,IAAAoF,MAAA,SAAAoa,IAAA,IAAAxL,EAAA0L,EAAA,OAAA1f,IAAAuB,MAAA,SAAAwO,GAAA,cAAAA,EAAAlK,KAAAkK,EAAA7L,MAAA,OAO1B,GAPK8P,EAAIuL,EAAA7e,MACLgf,EAAa1L,EAAK6D,OAAO,cACKhJ,EAAKiM,cAAciE,MAAK,SAAAY,GACxD,IAAMC,EAAcrN,IAAMoN,EAAQhI,gBAAgBE,OAAO,cACnDgI,EAAkBhR,EAAKkM,aAAa2E,GACpCI,EAAUD,GAAmBtN,IAAMsN,GAAmBR,EAC5D,OAAOK,IAAeE,GAAeE,CACzC,IAEkC,CAAF/P,EAAA7L,KAAA,eAAA6L,EAAA7L,KAAA,EAEtB2K,EAAKkR,sBAAsBL,EAAY1L,EAAKuF,UAAS,cAAAxJ,EAAAhM,OAAA,oCAAAgM,EAAA/J,OAAA,GAAAwZ,EAAA,IAAAF,EAAAnd,IAAA,WAAAod,EAAAD,EAAAhf,KAAAkD,KAAA,CAAAgN,EAAAtM,KAAA,gBAAAsM,EAAAnK,cAAAmZ,IAAA,mBAAAhP,EAAA9G,GAAA,CAAA8G,EAAAtM,KAAA,gBAAAsM,EAAAzM,OAAA,oBAAAyM,EAAAtM,KAAA,gBAAAsM,EAAAtM,KAAA,iBAAAsM,EAAA3K,KAAA,GAAA2K,EAAAwP,GAAAxP,EAAA,SAAA8O,EAAArf,EAAAuQ,EAAAwP,IAAA,eAAAxP,EAAA3K,KAAA,GAAAyZ,EAAApd,IAAAsO,EAAApK,OAAA,6BAAAoK,EAAAxK,OAAA,GAAA4J,EAAA,wBAhB/B9I,EAqBxC,EACMiZ,sBAAqB,SAACL,EAAY1L,GAAM,IAAA9E,EAAA,YAAApI,EAAA9G,IAAAoF,MAAA,SAAAkL,IAAA,IAAA6N,EAAA,OAAAne,IAAAuB,MAAA,SAAAsP,GAAA,cAAAA,EAAAhL,KAAAgL,EAAA3M,MAAA,OAGX,OAHW2M,EAAAhL,KAAA,EAGhCsY,EAAU5L,IAAMyB,GAAKnD,EAAA3M,KAAA,EAErBgL,EAAK+N,iBAAiBkB,EAAQ5E,UAAS,OAE7CrK,EAAK6L,aAAa2E,GAAcnN,MAAQmL,cACxC7M,EAAA3M,KAAA,gBAAA2M,EAAAhL,KAAA,EAAAgL,EAAAnH,GAAAmH,EAAA,SAEAnC,QAAQ7H,MAAM,iCAADmD,OAAkC0V,EAAU,KAAA7O,EAAAnH,IAAW,yBAAAmH,EAAA7K,OAAA,GAAAsK,EAAA,iBAV9BxJ,EAa9C,EAGM+U,sBAAqB,WAAG,IAAAlM,EAAA,YAAA7I,EAAA9G,IAAAoF,MAAA,SAAAuL,IAAA,OAAA3Q,IAAAuB,MAAA,SAAA4P,GAAA,cAAAA,EAAAtL,KAAAsL,EAAAjN,MAAA,WAEtByL,EAAKgP,mBAAoB,CAAFxN,EAAAjN,KAAA,eAAAiN,EAAAjN,KAAA,EACjByL,EAAKwP,kCAAiC,OAAO,SAAAtY,GAE/C,OADA6H,QAAQ7H,MAAM,oCAAqCA,IAC5C,CACX,IAAE,OAAAsK,EAAAjN,KAAA,eAEFwK,QAAQC,IAAI,+CAA8C,wBAAAwC,EAAAnL,OAAA,GAAA2K,EAAA,IARpC7J,EAW9B,EAGAmZ,eAAc,SAACC,GAEXjX,KAAK4Q,SAAWtH,IAAM2N,GAAM3G,QAEhC,EAGA4G,YAAW,SAACC,GAERnX,KAAK4Q,SAAWtH,IAAM6N,GAAS7G,QAEnC,EAQM8G,oBAAmB,WAAG,IAAAhQ,EAAA,YAAAvJ,EAAA9G,IAAAoF,MAAA,SAAA6L,IAAA,OAAAjR,IAAAuB,MAAA,SAAAiQ,GAAA,cAAAA,EAAA3L,KAAA2L,EAAAtN,MAAA,OAGxBmM,EAAK6C,WAAY,EAIjB7C,EAAKiQ,kBAGLjQ,EAAKkQ,eAMLlQ,EAAKmQ,sBAILnQ,EAAK6C,WAAY,EACjB,wBAAA1B,EAAAxL,OAAA,GAAAiL,EAAA,IArBwBnK,EAsB5B,EAGAwZ,gBAAe,WAEX,IAAMG,EAAWlO,IAAMtJ,KAAK4Q,UAAUjC,GAAGgC,KAGnC8G,EAAiBD,EAASzG,SAAW,GAAK,EAAI,GAGhDF,EAAkB2G,EAASzG,OAAO0G,GAAgBC,OAAO,GAAGC,YAAY,GAAG7G,QAAQ,UAMjFE,GAHNH,EAAkBA,EAAgB4C,SAAS,GAAI,YAGRpD,IAAI,EAAG,SAG9CrQ,KAAK6Q,gBAAkBA,EAAgBP,SACvCtQ,KAAKgR,eAAiBA,EAAeV,QAIzC,EAEAsH,oBAAmB,WACf5X,KAAKoS,UDpkBV,SAAyBhC,GAI5B,IAJsF,IAAnDyH,EAAa5Z,UAAAnC,OAAA,QAAAsC,IAAAH,UAAA,GAAAA,UAAA,GAAG,EAAG6Z,EAAe7Z,UAAAnC,OAAA,QAAAsC,IAAAH,UAAA,GAAAA,UAAA,GAAG,GAAIuL,EAAQvL,UAAAnC,OAAA,EAAAmC,UAAA,QAAAG,EAEhF2Z,EAAQ,GACRzF,EAAYhJ,IAAM8G,GAAOzB,GAAGnF,GACvB9R,EAAI,EAAGA,EAAqB,GAAhBmgB,EAAsBC,EAAiBpgB,IAAK,CAC7D,IAAIsgB,EAAW1F,EAAUjC,IAAI3Y,EAAIogB,EAAiB,UAAUxH,SAC5DyH,EAAMtc,KAAKuc,EACf,CACA,OAAOD,CACX,CC2jB6BE,EACrB,EAEAX,aAAY,WACR,IACIY,EADEhM,GAAkBI,EAAAA,EAAAA,sBAKpB4L,EADAhM,EAAgBiM,kBACJnY,KAAKmS,yBACVjG,EAAgBkM,cACXpY,KAAKkS,qBAELlS,KAAKiS,sBAWrB,IARA,IAAM6F,EAAkB9X,KAAKgS,oBACvB+F,EAAQ,GACRM,EAA0B,GAAZH,EAAkBJ,EAGhCjH,EAAkBvH,IAAMtJ,KAAK6Q,iBAG1BnZ,EAAI,EAAGA,EAAI2gB,EAAY3gB,IAAK,CACjC,IAAIsgB,EAAWnH,EAAgBR,IAAI3Y,EAAIogB,EAAiB,UACxDC,EAAMtc,KAAKuc,EAAS1H,SACxB,CAGA,OAFAtQ,KAAKoS,UAAY2F,EAEVA,EAAMjc,MACjB,EAEAyb,oBAAmB,WAEf,GAAKvX,KAAKoS,WAAckG,MAAMC,QAAQvY,KAAKoS,YAAwC,IAA1BpS,KAAKoS,UAAUtW,OAAxE,CASA,IAAM6C,EAAQqB,KAAKwY,0BAGbC,EAAiBzY,KAAK0Y,mBAAmB/Z,EAAOqB,KAAKoS,WAGrDuG,EAAuB3Y,KAAK4Y,aAAaH,GAG/CI,EAAmC7Y,KAAK8Y,sBAAsBH,EAAsB3Y,KAAKoS,UAAUtW,QAA5Fid,EAAYF,EAAZE,aAAcC,EAAUH,EAAVG,WAGfC,EAAYjZ,KAAKkZ,8BAA8BH,EAAcC,EAAYhZ,KAAKoS,UAAUtW,QAGxFqd,EAAgB,GAAHpY,OAAA2T,EAAOiE,GAAoBjE,EAAKuE,IAGnDjZ,KAAKsR,uBAAyBtR,KAAKoZ,oBAAoBD,GACvD1T,QAAQC,IAAI,GAvBZ,MAJID,QAAQ7H,MAAM,yCA4BtB,EAEA4a,wBAAuB,WAAG,IAAA/Q,EAAA,KACtB,OAAOzH,KAAKyR,UAAUpL,QAAO,SAAA9E,GAEzB,GAAmC,iBAAxBA,EAAKmN,gBAAgE,iBAA1BnN,EAAK8X,iBAGvD,OAFA5T,QAAQ6T,KAAK,qBAAsB/X,EAAKmN,eAAgBnN,EAAK8X,mBAEtD,EAGX,IAAME,EAAYjQ,IAAM/H,EAAKmN,gBACvB8K,EAAUlQ,IAAM/H,EAAKwN,cACrB0K,EAAgBF,EAAUG,SAASjS,EAAKuJ,iBAAmBwI,EAAQG,QAAQlS,EAAKoJ,iBAGtF,GAAI4I,EACmBF,EAAUG,SAASjS,EAAKoJ,iBAI/C,OAAO4I,CACX,GACJ,EAEAf,mBAAkB,SAAC/Z,EAAOyT,GAEtB,IAAKkG,MAAMC,QAAQnG,IAAmC,IAArBA,EAAUtW,OAGvC,OAFA2J,QAAQ7H,MAAM,oCAEP,GAIX,IAAMgc,EAAgBtQ,IAAM8I,EAAU,IAChCyH,EAAevQ,IAAM8I,EAAUA,EAAUtW,OAAS,IAAIuU,IAAI,GAAI,WAGpE,OAAO1R,EAAM0H,QAAO,SAAA9E,GAChB,IAAMgY,EAAYjQ,IAAM/H,EAAKmN,gBACvB8K,EAAUlQ,IAAM/H,EAAKwN,cAC3B,OAAOwK,EAAUG,SAASG,IAAiBL,EAAQG,QAAQC,EAC/D,IAAGrL,KAAI,SAAAhN,GACH,IAAMgY,EAAYjQ,IAAM/H,EAAKmN,gBACvB8K,EAAUlQ,IAAM/H,EAAKwN,cAKvB+K,EAAY1H,EAAUnL,WAAU,SAAA8S,GAAI,OAAIR,EAAU7I,eAAepH,IAAMyQ,GAAM,MAG9D,IAAfD,GAAoBP,EAAUI,QAAQrQ,IAAM8I,EAAU0H,QACtDA,EAAYzO,KAAK2O,IAAI,EAAGF,IAM5B,IAAIG,EAAe7H,EAAUnL,WAAU,SAAA8S,GAAI,OAAIP,EAAQ9I,eAAepH,IAAMyQ,GAAM1J,IAAI,GAAI,WAAW,KAG/E,IAAlB4J,GAAuBT,EAAQE,SAASpQ,IAAM8I,EAAU6H,MACxDA,MAIkB,IAAlBA,GAAuBT,EAAQlG,OAAOhK,IAAM8I,EAAUA,EAAUtW,OAAS,IAAIuU,IAAI,GAAI,eACrF4J,EAAe7H,EAAUtW,OAAS,GAOtC,IAAIoe,EAAOD,EAAeH,EAAY,EAItC,OAAAtL,EAAAA,EAAA,GACOjN,GAAI,IACP4Y,UAAWL,EAAY,EACvBM,SAAUF,GAElB,GACJ,EAEAtB,aAAY,SAACja,GAAO,IAAAoJ,EAAA,KACZsS,GAAkB,EAmBtB,OAjBA1b,EAAM9E,SAAQ,SAAA0H,GACV,IAAM6O,EAAQ9G,IAAM/H,EAAKmN,gBACnB4L,EAAMlK,EAAMC,IAAI9O,EAAK8X,iBAAkB,WACvCvG,EAAMxJ,IAAMvB,EAAK6I,UAGvBrP,EAAKgZ,YAAchZ,EAAKiZ,aAAe1H,EAAI6G,QAAQvJ,IAAU0C,EAAI4G,SAASY,IAAyB,IAAjB/Y,EAAKkZ,QAGlFJ,GAAoB9Y,EAAKiZ,aAAgC,IAAjBjZ,EAAKkZ,UAAiB3H,EAAI4G,SAAStJ,GAI5E7O,EAAKmZ,cAAe,GAHpBnZ,EAAKmZ,cAAe,EACpBL,GAAkB,EAI1B,IAEO1b,CACX,EAEAma,sBAAqB,SAACL,EAAgBkC,GAClC,IAAI5B,EAAe,IAAIT,MAAMqC,GAAMC,KAAK,MAAMrM,KAAI,kBAAM,IAAIoG,GAAK,IAC7DqE,EAAa,EAUjB,OATAP,EAAe5e,SAAQ,SAAA0H,GACnB,IAAK,IAAI7J,EAAI6J,EAAK4Y,UAAY,EAAGziB,EAAI6J,EAAK4Y,UAAY,EAAI5Y,EAAK6Y,SAAU1iB,IACjEA,GAAK,GAAKA,EAAIijB,IACd5B,EAAarhB,GAAG2Y,IAAI9O,EAAKkZ,SACzBzB,EAAa3N,KAAK2O,IAAIhB,EAAYzX,EAAKkZ,SAGnD,IAEO,CAAC1B,aAAAA,EAAcC,WAAAA,EAC1B,EAEAE,8BAA6B,SAACH,EAAcC,EAAY2B,GACpD,IAAI1B,EAAY,GAEhBD,EAAa3N,KAAK2O,IAAIhB,EAAY,GAClC,IAAK,IAAI6B,EAAM,EAAGA,GAAO7B,EAAY6B,IACjC5B,EAAUxd,KAAIyC,MAAd+a,EAASvE,EAAS1U,KAAK8a,4BAA4B/B,EAAc8B,EAAKF,KAG1E,OAAO1B,CACX,EAEA6B,4BAA2B,SAAC/B,EAAc8B,EAAKF,GAS3C,IARA,IAAI1B,EAAY,GAOZ8B,GAAY,EACPrjB,EAAI,EAAGA,EAAIijB,EAAMjjB,IACjBqhB,EAAarhB,GAAGsjB,IAAIH,IAEA,IAAdE,IAEK,IAARF,EACA5B,EAAUxd,KAAKuE,KAAKib,kBAAkBF,EAAW,EAAGrjB,EAAIqjB,EAAUF,IAElE5B,EAAUxd,KAAKuE,KAAKkb,2BAA2BH,EAAW,EAAGrjB,EAAIqjB,EAAUF,IAE/EE,GAAY,GARZA,GAAyB,IAAdA,EAAkBrjB,EAAIqjB,EAoBzC,OATkB,IAAdA,IAEY,IAARF,EACA5B,EAAUxd,KAAKuE,KAAKib,kBAAkBF,EAAW,EAAGJ,EAAOI,EAAUF,IAErE5B,EAAUxd,KAAKuE,KAAKkb,2BAA2BH,EAAW,EAAGJ,EAAOI,EAAUF,KAI/E5B,CACX,EAEAG,oBAAmB,SAACD,GAChB,OAAKb,MAAMC,QAAQY,GAOZA,EAAcgC,MAAK,SAACvjB,EAAGwjB,GAAC,OAAKxjB,EAAE6iB,QAAUW,EAAEX,SAAW7iB,EAAEuiB,UAAYiB,EAAEjB,SAAS,KANlF1U,QAAQ7H,MAAM,wCAAyCub,GAChD,GAMf,EAEA8B,kBAAiB,SAAC7K,EAAO8J,EAAMW,GAE3B,MAAO,CACHL,aAAa,EACblI,UAAW,cACX+I,SAAU,EACVlB,UAAW/J,EACXgK,SAAUF,EACVO,QAASI,EACTnE,QAAS,CAACxa,KAAM,sBAExB,EAEAgf,2BAA0B,SAAC9K,EAAO8J,EAAMW,GAEpC,MAAO,CACHL,aAAa,EACblI,UAAW,cACX+I,SAAU,EACVlB,UAAW/J,EACXgK,SAAUF,EACVO,QAASI,EACTnE,QAAS,CAACxa,KAAM,cAExB,GAIJsM,QAAS,CACL0K,YAAa,SAACrT,GAEV,OAAOyJ,IAAMzJ,EAAM+Q,UAAUhC,OAAO,SACxC,EACAmF,YAAa,SAAClU,GAEV,OAAOyJ,IAAMzJ,EAAM+Q,UAAUhC,OAAO,gBACxC,EAEA0M,oBAAqB,SAACzb,GAElB,IAAM0b,EAAW5K,IAEb6K,EADMlS,MAAQqF,GAAG4M,GACAzK,QAAQ,OACzB2K,EAAgBD,EAAWnL,IAAI,EAAG,OAClCqL,EAAiBF,EAAW/H,SAAS,EAAG,OAI5C,OAAO5T,EAAMwS,YAAYsJ,SAAQ,SAAAC,GAG7B,IAAIC,EAAmBL,EAAWpI,KAAK0I,SAASF,EAAOtJ,UAAUyJ,MAAM,KAAK,KAAKhL,OAAO+K,SAASF,EAAOtJ,UAAUyJ,MAAM,KAAK,KACzHC,EAAiBH,EAAiBI,QAAQ5L,IAAIuL,EAAOrJ,SAAU,SAC/D2J,EAAsBT,EAAcrI,KAAK0I,SAASF,EAAOtJ,UAAUyJ,MAAM,KAAK,KAAKhL,OAAO+K,SAASF,EAAOtJ,UAAUyJ,MAAM,KAAK,KAC/HI,EAAoBD,EAAoBD,QAAQ5L,IAAIuL,EAAOrJ,SAAU,SACrE6J,EAAuBV,EAAetI,KAAK0I,SAASF,EAAOtJ,UAAUyJ,MAAM,KAAK,KAAKhL,OAAO+K,SAASF,EAAOtJ,UAAUyJ,MAAM,KAAK,KACjIM,EAAqBD,EAAqBH,QAAQ5L,IAAIuL,EAAOrJ,SAAU,SAS3E,MANuB,CAAA/D,EAAAA,EAAA,GACfoN,GAAM,IAAExL,MAAOgM,EAAsB9B,IAAK+B,IAAkB7N,EAAAA,EAAA,GAC5DoN,GAAM,IAAExL,MAAOyL,EAAkBvB,IAAK0B,IAAcxN,EAAAA,EAAA,GACpDoN,GAAM,IAAExL,MAAO8L,EAAqB5B,IAAK6B,KAGzB5N,KAAI,SAAAqN,GAExB,IAAMU,EAAiBzc,EAAMuS,UAAUnL,WAAU,SAAA8S,GAAI,OAAI6B,EAAOxL,MAAMM,eAAepH,IAAMyQ,KAAU6B,EAAOtB,IAAIX,QAAQrQ,IAAMyQ,GAAM,IAChIE,EAAepa,EAAMuS,UAAUnL,WAAU,SAAA8S,GAAI,OAAI6B,EAAOtB,IAAI5J,eAAepH,IAAMyQ,GAAM,KAGrE,IAAlBE,GAAuB2B,EAAOtB,IAAIX,QAAQrQ,IAAMzJ,EAAMuS,UAAUvS,EAAMuS,UAAUtW,OAAS,KACzFme,EAAepa,EAAMuS,UAAUtW,OAAS,EAExCme,GAAgB,EAGpB,IAAME,EAAYmC,EAAiB,EAC7BlC,EAAWH,EAAeqC,EAAiB,EAQjD,OAAInC,GAAaC,EAAW,EAExB5L,EAAAA,EAAA,GAAWoN,GAAM,IAAEzB,UAAAA,EAAWC,SAAAA,IAG3B,IACX,GACJ,IAAG/T,QAAO,SAAAuV,GAAM,OAAc,MAAVA,CAAc,IAC7BT,MAAK,SAACvjB,EAAGwjB,GAAC,OAAKxjB,EAAEuiB,UAAYiB,EAAEjB,SAAS,GACjD,EAgCAoC,mCAAoC,SAAC1c,GAEjC,IAAKA,EAAMuS,WAAwC,IAA3BvS,EAAMuS,UAAUtW,OAIpC,OAHA2J,QAAQC,IAAI,wCAGL,GAGX,IAAM4I,GAAYtD,EAAAA,EAAAA,gBAEZ4I,IADkBtH,EAAAA,EAAAA,sBACHgC,EAAU9E,UACzBmR,EAAO9a,EAAMuS,UAAUtW,OAEvB0gB,EAAY,GACZ1J,EAAMxJ,IAAMzJ,EAAM+Q,UAAUjC,GAAGiF,GAGjC6I,EAAU3J,EAAI/B,SAAW,GAAK+B,EAAIhC,QAAQ,QAAUgC,EAAIhC,QAAQ,QAAQT,IAAI,GAAI,WAGpFoM,EAAUA,EAAQhJ,SAAS,GAAI,WAI/B,IAAK,IAAI/b,EAAI,EAAGA,EAAIijB,EAAMjjB,IACtB8kB,EAAU/gB,KAAK,CACXihB,UAAWD,EAAQ7N,OAAO,WAC1B+N,eAAgBF,EAAQ7N,OAAO,yBAEnC6N,EAAUA,EAAQpM,IAAI,GAAI,UAG9B,OAAOmM,CACX,EAEAI,gBAAiB,SAAC/c,GAEd,IAAMuQ,EAAQ9G,IAAMzJ,EAAMqQ,oBAAoBuD,SAAS,EAAG,QACpD6G,EAAMlK,EAAMC,IAAI,EAAG,SAGnBwM,EAA0Bhd,EAAMgS,cAAciL,QAAO,SAACC,EAAKlN,GAC7D,IAAMmN,EAAY1T,IAAMuG,EAAKnB,gBAAgBuO,UAK7C,OAJKF,EAAIC,KACLD,EAAIC,GAAa,IAErBD,EAAIC,GAAWvhB,KAAKoU,GACbkN,CACX,GAAG,CAAC,GAUJ,OAPsB5lB,OAAOuC,OAAOmjB,GAAyBtO,KAAI,SAAA2O,GAC7D,OAAOA,EAAMJ,QAAO,SAACK,EAAUtN,GAC3B,OAAQsN,GAAYtN,EAAKwL,SAAW8B,EAAS9B,SAAWxL,EAAOsN,CACnE,GAAG,KACP,IAIK9W,QAAO,SAAAwJ,GACJ,IAAMmN,EAAY1T,IAAMuG,EAAKnB,gBAC7B,OAAOsO,EAAUvM,cAAcL,IAAU4M,EAAUtD,SAASY,EAChE,IACCa,MAAK,SAACvjB,EAAGwjB,GAAC,OAAK9R,IAAM1R,EAAE8W,gBAAgB0O,OAAS9T,IAAM8R,EAAE1M,gBAAgB0O,MAAM,GACvF,EAGAC,aAAc,SAACxd,GAYX,IATA,IAAIyd,EAAgBhU,IAAMzJ,EAAMqQ,oBAG1BoK,EAAMgD,EAAcjN,IAAI,EAAG,SAG3B7E,EAAQ,GACV4H,EAAOkK,EAEJlK,EAAKsG,SAASY,IACjB9O,EAAM/P,KAAK2X,EAAK9C,UAChB8C,EAAOA,EAAK/C,IAAI,EAAG,QAGvB,OAAO7E,CACX,EAEA+R,YAAa,SAAC1d,GACV,IAAM2d,GAAWC,EAAAA,EAAAA,GAAW5d,EAAMqQ,oBAC5B+E,GAAgBrG,EAAAA,EAAAA,IAAO4O,EAAU,sBAEvC,OAAIE,EAAAA,EAAAA,GAAQF,GACD,WAAPzc,OAAkBkU,IACX0I,EAAAA,EAAAA,GAAYH,GACZ,eAAPzc,OAAsBkU,IACf2I,EAAAA,EAAAA,GAAWJ,GACX,cAAPzc,OAAqBkU,GAEdA,CAEf,EAEA4I,kBAAmB,SAAChe,GAKhB,OAHcyJ,IAAMzJ,EAAMoR,cAGb6M,OACjB,EAEAC,iBAAkB,SAACle,GAKf,OAHcyJ,IAAMzJ,EAAMoR,cAGbrC,OAAO,OACxB,EAEAoP,YAAa,SAACne,GAKV,OAHcyJ,IAAMzJ,EAAMoR,cAGbgN,MACjB,EACAP,QAAS,SAAC7d,GACN,IAAMqe,EAAQ5U,MACR6U,EAAe7U,IAAMzJ,EAAMqQ,oBAGjC,OAAOgO,EAAM5K,OAAO6K,EAAc,MACtC,EAEAC,YAAa,SAACve,GAeV,IAbA,IAAMoR,EAAe3H,IAAMzJ,EAAMoR,cAE3BoN,EAAsBpN,EAAaH,QAAQ,SAC3CwN,EAAoBrN,EAAaI,MAAM,SAGvCkN,EAAcF,EAAoBvN,QAAQ,QAC1C0N,EAAYF,EAAkBjN,MAAM,QAGpC2B,EAAO,GACTL,EAAM4L,EAEH5L,EAAI+G,SAAS8E,IAAc7L,EAAIW,OAAOkL,EAAW,QACpDxL,EAAKvX,KAAKkX,EAAIrC,UACdqC,EAAMA,EAAItC,IAAI,EAAG,OAGrB,OAAO2C,CACX,gaC5mCRjc,EAAA,kBAAAC,CAAA,MAAAC,EAAAD,EAAA,GAAAE,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAK,gBAAA,SAAAP,EAAAD,EAAAE,GAAAD,EAAAD,GAAAE,EAAAO,KAAA,EAAAC,EAAA,mBAAAC,OAAAA,OAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAjB,EAAAD,EAAAE,GAAA,OAAAC,OAAAK,eAAAP,EAAAD,EAAA,CAAAS,MAAAP,EAAAiB,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAApB,EAAAD,EAAA,KAAAkB,EAAA,aAAAjB,GAAAiB,EAAA,SAAAjB,EAAAD,EAAAE,GAAA,OAAAD,EAAAD,GAAAE,CAAA,WAAAoB,EAAArB,EAAAD,EAAAE,EAAAG,GAAA,IAAAK,EAAAV,GAAAA,EAAAI,qBAAAmB,EAAAvB,EAAAuB,EAAAX,EAAAT,OAAAqB,OAAAd,EAAAN,WAAAU,EAAA,IAAAW,EAAApB,GAAA,WAAAE,EAAAK,EAAA,WAAAH,MAAAiB,EAAAzB,EAAAC,EAAAY,KAAAF,CAAA,UAAAe,EAAA1B,EAAAD,EAAAE,GAAA,WAAA0B,KAAA,SAAAC,IAAA5B,EAAA6B,KAAA9B,EAAAE,GAAA,OAAAD,GAAA,OAAA2B,KAAA,QAAAC,IAAA5B,EAAA,EAAAD,EAAAsB,KAAAA,EAAA,IAAAS,EAAA,iBAAAC,EAAA,iBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,YAAAZ,IAAA,UAAAa,IAAA,UAAAC,IAAA,KAAAC,EAAA,GAAApB,EAAAoB,EAAA1B,GAAA,8BAAA2B,EAAApC,OAAAqC,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAA,MAAAD,GAAAA,IAAAvC,GAAAG,EAAAyB,KAAAW,EAAA7B,KAAA0B,EAAAG,GAAA,IAAAE,EAAAN,EAAAjC,UAAAmB,EAAAnB,UAAAD,OAAAqB,OAAAc,GAAA,SAAAM,EAAA3C,GAAA,0BAAA4C,SAAA,SAAA7C,GAAAkB,EAAAjB,EAAAD,GAAA,SAAAC,GAAA,YAAA6C,QAAA9C,EAAAC,EAAA,gBAAA8C,EAAA9C,EAAAD,GAAA,SAAAgD,EAAA9C,EAAAK,EAAAG,EAAAE,GAAA,IAAAE,EAAAa,EAAA1B,EAAAC,GAAAD,EAAAM,GAAA,aAAAO,EAAAc,KAAA,KAAAZ,EAAAF,EAAAe,IAAAE,EAAAf,EAAAP,MAAA,OAAAsB,GAAA,UAAAkB,EAAAlB,IAAA1B,EAAAyB,KAAAC,EAAA,WAAA/B,EAAAkD,QAAAnB,EAAAoB,SAAAC,MAAA,SAAAnD,GAAA+C,EAAA,OAAA/C,EAAAS,EAAAE,EAAA,aAAAX,GAAA+C,EAAA,QAAA/C,EAAAS,EAAAE,EAAA,IAAAZ,EAAAkD,QAAAnB,GAAAqB,MAAA,SAAAnD,GAAAe,EAAAP,MAAAR,EAAAS,EAAAM,EAAA,aAAAf,GAAA,OAAA+C,EAAA,QAAA/C,EAAAS,EAAAE,EAAA,IAAAA,EAAAE,EAAAe,IAAA,KAAA3B,EAAAK,EAAA,gBAAAE,MAAA,SAAAR,EAAAI,GAAA,SAAAgD,IAAA,WAAArD,GAAA,SAAAA,EAAAE,GAAA8C,EAAA/C,EAAAI,EAAAL,EAAAE,EAAA,WAAAA,EAAAA,EAAAA,EAAAkD,KAAAC,EAAAA,GAAAA,GAAA,aAAA3B,EAAA1B,EAAAE,EAAAG,GAAA,IAAAE,EAAAwB,EAAA,gBAAArB,EAAAE,GAAA,GAAAL,IAAA0B,EAAA,UAAAqB,MAAA,mCAAA/C,IAAA2B,EAAA,cAAAxB,EAAA,MAAAE,EAAA,OAAAH,MAAAR,EAAAsD,MAAA,OAAAlD,EAAAmD,OAAA9C,EAAAL,EAAAwB,IAAAjB,IAAA,KAAAE,EAAAT,EAAAoD,SAAA,GAAA3C,EAAA,KAAAE,EAAA0C,EAAA5C,EAAAT,GAAA,GAAAW,EAAA,IAAAA,IAAAmB,EAAA,gBAAAnB,CAAA,cAAAX,EAAAmD,OAAAnD,EAAAsD,KAAAtD,EAAAuD,MAAAvD,EAAAwB,SAAA,aAAAxB,EAAAmD,OAAA,IAAAjD,IAAAwB,EAAA,MAAAxB,EAAA2B,EAAA7B,EAAAwB,IAAAxB,EAAAwD,kBAAAxD,EAAAwB,IAAA,gBAAAxB,EAAAmD,QAAAnD,EAAAyD,OAAA,SAAAzD,EAAAwB,KAAAtB,EAAA0B,EAAA,IAAAK,EAAAX,EAAA3B,EAAAE,EAAAG,GAAA,cAAAiC,EAAAV,KAAA,IAAArB,EAAAF,EAAAkD,KAAArB,EAAAF,EAAAM,EAAAT,MAAAM,EAAA,gBAAA1B,MAAA6B,EAAAT,IAAA0B,KAAAlD,EAAAkD,KAAA,WAAAjB,EAAAV,OAAArB,EAAA2B,EAAA7B,EAAAmD,OAAA,QAAAnD,EAAAwB,IAAAS,EAAAT,IAAA,YAAA6B,EAAA1D,EAAAE,GAAA,IAAAG,EAAAH,EAAAsD,OAAAjD,EAAAP,EAAAa,SAAAR,GAAA,GAAAE,IAAAN,EAAA,OAAAC,EAAAuD,SAAA,eAAApD,GAAAL,EAAAa,SAAA,SAAAX,EAAAsD,OAAA,SAAAtD,EAAA2B,IAAA5B,EAAAyD,EAAA1D,EAAAE,GAAA,UAAAA,EAAAsD,SAAA,WAAAnD,IAAAH,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAA,IAAAkC,UAAA,oCAAA1D,EAAA,aAAA8B,EAAA,IAAAzB,EAAAiB,EAAApB,EAAAP,EAAAa,SAAAX,EAAA2B,KAAA,aAAAnB,EAAAkB,KAAA,OAAA1B,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAAnB,EAAAmB,IAAA3B,EAAAuD,SAAA,KAAAtB,EAAA,IAAAvB,EAAAF,EAAAmB,IAAA,OAAAjB,EAAAA,EAAA2C,MAAArD,EAAAF,EAAAgE,YAAApD,EAAAH,MAAAP,EAAA+D,KAAAjE,EAAAkE,QAAA,WAAAhE,EAAAsD,SAAAtD,EAAAsD,OAAA,OAAAtD,EAAA2B,IAAA5B,GAAAC,EAAAuD,SAAA,KAAAtB,GAAAvB,GAAAV,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAA,IAAAkC,UAAA,oCAAA7D,EAAAuD,SAAA,KAAAtB,EAAA,UAAAgC,EAAAlE,GAAA,IAAAD,EAAA,CAAAoE,OAAAnE,EAAA,SAAAA,IAAAD,EAAAqE,SAAApE,EAAA,SAAAA,IAAAD,EAAAsE,WAAArE,EAAA,GAAAD,EAAAuE,SAAAtE,EAAA,SAAAuE,WAAAC,KAAAzE,EAAA,UAAA0E,EAAAzE,GAAA,IAAAD,EAAAC,EAAA0E,YAAA,GAAA3E,EAAA4B,KAAA,gBAAA5B,EAAA6B,IAAA5B,EAAA0E,WAAA3E,CAAA,UAAAyB,EAAAxB,GAAA,KAAAuE,WAAA,EAAAJ,OAAA,SAAAnE,EAAA4C,QAAAsB,EAAA,WAAAS,OAAA,YAAAlC,EAAA1C,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAAE,EAAAF,EAAAY,GAAA,GAAAV,EAAA,OAAAA,EAAA4B,KAAA9B,GAAA,sBAAAA,EAAAiE,KAAA,OAAAjE,EAAA,IAAA6E,MAAA7E,EAAA8E,QAAA,KAAAvE,GAAA,EAAAG,EAAA,SAAAuD,IAAA,OAAA1D,EAAAP,EAAA8E,QAAA,GAAAzE,EAAAyB,KAAA9B,EAAAO,GAAA,OAAA0D,EAAAxD,MAAAT,EAAAO,GAAA0D,EAAAV,MAAA,EAAAU,EAAA,OAAAA,EAAAxD,MAAAR,EAAAgE,EAAAV,MAAA,EAAAU,CAAA,SAAAvD,EAAAuD,KAAAvD,CAAA,YAAAqD,UAAAd,EAAAjD,GAAA,2BAAAoC,EAAAhC,UAAAiC,EAAA9B,EAAAoC,EAAA,eAAAlC,MAAA4B,EAAAjB,cAAA,IAAAb,EAAA8B,EAAA,eAAA5B,MAAA2B,EAAAhB,cAAA,IAAAgB,EAAA2C,YAAA7D,EAAAmB,EAAArB,EAAA,qBAAAhB,EAAAgF,oBAAA,SAAA/E,GAAA,IAAAD,EAAA,mBAAAC,GAAAA,EAAAgF,YAAA,QAAAjF,IAAAA,IAAAoC,GAAA,uBAAApC,EAAA+E,aAAA/E,EAAAkF,MAAA,EAAAlF,EAAAmF,KAAA,SAAAlF,GAAA,OAAAE,OAAAiF,eAAAjF,OAAAiF,eAAAnF,EAAAoC,IAAApC,EAAAoF,UAAAhD,EAAAnB,EAAAjB,EAAAe,EAAA,sBAAAf,EAAAG,UAAAD,OAAAqB,OAAAmB,GAAA1C,CAAA,EAAAD,EAAAsF,MAAA,SAAArF,GAAA,OAAAkD,QAAAlD,EAAA,EAAA2C,EAAAG,EAAA3C,WAAAc,EAAA6B,EAAA3C,UAAAU,GAAA,0BAAAd,EAAA+C,cAAAA,EAAA/C,EAAAuF,MAAA,SAAAtF,EAAAC,EAAAG,EAAAE,EAAAG,QAAA,IAAAA,IAAAA,EAAA8E,SAAA,IAAA5E,EAAA,IAAAmC,EAAAzB,EAAArB,EAAAC,EAAAG,EAAAE,GAAAG,GAAA,OAAAV,EAAAgF,oBAAA9E,GAAAU,EAAAA,EAAAqD,OAAAb,MAAA,SAAAnD,GAAA,OAAAA,EAAAsD,KAAAtD,EAAAQ,MAAAG,EAAAqD,MAAA,KAAArB,EAAAD,GAAAzB,EAAAyB,EAAA3B,EAAA,aAAAE,EAAAyB,EAAA/B,GAAA,0BAAAM,EAAAyB,EAAA,qDAAA3C,EAAAyF,KAAA,SAAAxF,GAAA,IAAAD,EAAAG,OAAAF,GAAAC,EAAA,WAAAG,KAAAL,EAAAE,EAAAuE,KAAApE,GAAA,OAAAH,EAAAwF,UAAA,SAAAzB,IAAA,KAAA/D,EAAA4E,QAAA,KAAA7E,EAAAC,EAAAyF,MAAA,GAAA1F,KAAAD,EAAA,OAAAiE,EAAAxD,MAAAR,EAAAgE,EAAAV,MAAA,EAAAU,CAAA,QAAAA,EAAAV,MAAA,EAAAU,CAAA,GAAAjE,EAAA0C,OAAAA,EAAAjB,EAAArB,UAAA,CAAA6E,YAAAxD,EAAAmD,MAAA,SAAA5E,GAAA,QAAA4F,KAAA,OAAA3B,KAAA,OAAAN,KAAA,KAAAC,MAAA3D,EAAA,KAAAsD,MAAA,OAAAE,SAAA,UAAAD,OAAA,YAAA3B,IAAA5B,EAAA,KAAAuE,WAAA3B,QAAA6B,IAAA1E,EAAA,QAAAE,KAAA,WAAAA,EAAA2F,OAAA,IAAAxF,EAAAyB,KAAA,KAAA5B,KAAA2E,OAAA3E,EAAA4F,MAAA,WAAA5F,GAAAD,EAAA,EAAA8F,KAAA,gBAAAxC,MAAA,MAAAtD,EAAA,KAAAuE,WAAA,GAAAG,WAAA,aAAA1E,EAAA2B,KAAA,MAAA3B,EAAA4B,IAAA,YAAAmE,IAAA,EAAAnC,kBAAA,SAAA7D,GAAA,QAAAuD,KAAA,MAAAvD,EAAA,IAAAE,EAAA,cAAA+F,EAAA5F,EAAAE,GAAA,OAAAK,EAAAgB,KAAA,QAAAhB,EAAAiB,IAAA7B,EAAAE,EAAA+D,KAAA5D,EAAAE,IAAAL,EAAAsD,OAAA,OAAAtD,EAAA2B,IAAA5B,KAAAM,CAAA,SAAAA,EAAA,KAAAiE,WAAAM,OAAA,EAAAvE,GAAA,IAAAA,EAAA,KAAAG,EAAA,KAAA8D,WAAAjE,GAAAK,EAAAF,EAAAiE,WAAA,YAAAjE,EAAA0D,OAAA,OAAA6B,EAAA,UAAAvF,EAAA0D,QAAA,KAAAwB,KAAA,KAAA9E,EAAAT,EAAAyB,KAAApB,EAAA,YAAAM,EAAAX,EAAAyB,KAAApB,EAAA,iBAAAI,GAAAE,EAAA,SAAA4E,KAAAlF,EAAA2D,SAAA,OAAA4B,EAAAvF,EAAA2D,UAAA,WAAAuB,KAAAlF,EAAA4D,WAAA,OAAA2B,EAAAvF,EAAA4D,WAAA,SAAAxD,GAAA,QAAA8E,KAAAlF,EAAA2D,SAAA,OAAA4B,EAAAvF,EAAA2D,UAAA,YAAArD,EAAA,UAAAsC,MAAA,kDAAAsC,KAAAlF,EAAA4D,WAAA,OAAA2B,EAAAvF,EAAA4D,WAAA,KAAAR,OAAA,SAAA7D,EAAAD,GAAA,QAAAE,EAAA,KAAAsE,WAAAM,OAAA,EAAA5E,GAAA,IAAAA,EAAA,KAAAK,EAAA,KAAAiE,WAAAtE,GAAA,GAAAK,EAAA6D,QAAA,KAAAwB,MAAAvF,EAAAyB,KAAAvB,EAAA,oBAAAqF,KAAArF,EAAA+D,WAAA,KAAA5D,EAAAH,EAAA,OAAAG,IAAA,UAAAT,GAAA,aAAAA,IAAAS,EAAA0D,QAAApE,GAAAA,GAAAU,EAAA4D,aAAA5D,EAAA,UAAAE,EAAAF,EAAAA,EAAAiE,WAAA,UAAA/D,EAAAgB,KAAA3B,EAAAW,EAAAiB,IAAA7B,EAAAU,GAAA,KAAA8C,OAAA,YAAAS,KAAAvD,EAAA4D,WAAAnC,GAAA,KAAA+D,SAAAtF,EAAA,EAAAsF,SAAA,SAAAjG,EAAAD,GAAA,aAAAC,EAAA2B,KAAA,MAAA3B,EAAA4B,IAAA,gBAAA5B,EAAA2B,MAAA,aAAA3B,EAAA2B,KAAA,KAAAqC,KAAAhE,EAAA4B,IAAA,WAAA5B,EAAA2B,MAAA,KAAAoE,KAAA,KAAAnE,IAAA5B,EAAA4B,IAAA,KAAA2B,OAAA,cAAAS,KAAA,kBAAAhE,EAAA2B,MAAA5B,IAAA,KAAAiE,KAAAjE,GAAAmC,CAAA,EAAAgE,OAAA,SAAAlG,GAAA,QAAAD,EAAA,KAAAwE,WAAAM,OAAA,EAAA9E,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAsE,WAAAxE,GAAA,GAAAE,EAAAoE,aAAArE,EAAA,YAAAiG,SAAAhG,EAAAyE,WAAAzE,EAAAqE,UAAAG,EAAAxE,GAAAiC,CAAA,kBAAAlC,GAAA,QAAAD,EAAA,KAAAwE,WAAAM,OAAA,EAAA9E,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAsE,WAAAxE,GAAA,GAAAE,EAAAkE,SAAAnE,EAAA,KAAAI,EAAAH,EAAAyE,WAAA,aAAAtE,EAAAuB,KAAA,KAAArB,EAAAF,EAAAwB,IAAA6C,EAAAxE,EAAA,QAAAK,CAAA,YAAA+C,MAAA,0BAAA8C,cAAA,SAAApG,EAAAE,EAAAG,GAAA,YAAAoD,SAAA,CAAA5C,SAAA6B,EAAA1C,GAAAgE,WAAA9D,EAAAgE,QAAA7D,GAAA,cAAAmD,SAAA,KAAA3B,IAAA5B,GAAAkC,CAAA,GAAAnC,CAAA,UAAAqG,EAAAC,EAAApD,EAAAqD,EAAAC,EAAAC,EAAAC,EAAA7E,GAAA,QAAA8E,EAAAL,EAAAI,GAAA7E,GAAApB,EAAAkG,EAAAlG,KAAA,OAAAmG,GAAA,YAAAL,EAAAK,EAAA,CAAAD,EAAApD,KAAAL,EAAAzC,GAAA+E,QAAAtC,QAAAzC,GAAA2C,KAAAoD,EAAAC,EAAA,UAAAI,EAAAC,GAAA,sBAAAC,EAAA,KAAAC,EAAAC,UAAA,WAAAzB,SAAA,SAAAtC,EAAAqD,GAAA,IAAAD,EAAAQ,EAAAI,MAAAH,EAAAC,GAAA,SAAAR,EAAA/F,GAAA4F,EAAAC,EAAApD,EAAAqD,EAAAC,EAAAC,EAAA,OAAAhG,EAAA,UAAAgG,EAAAU,GAAAd,EAAAC,EAAApD,EAAAqD,EAAAC,EAAAC,EAAA,QAAAU,EAAA,CAAAX,OAAAY,EAAA,cAAA4Q,EAAAhY,EAAAE,GAAA,IAAAD,EAAAE,OAAAsF,KAAAzF,GAAA,GAAAG,OAAA8X,sBAAA,KAAA1X,EAAAJ,OAAA8X,sBAAAjY,GAAAE,IAAAK,EAAAA,EAAA8O,QAAA,SAAAnP,GAAA,OAAAC,OAAA+X,yBAAAlY,EAAAE,GAAAiB,UAAA,KAAAlB,EAAAwE,KAAAyC,MAAAjH,EAAAM,EAAA,QAAAN,CAAA,UAAAuX,EAAAxX,GAAA,QAAAE,EAAA,EAAAA,EAAA+G,UAAAnC,OAAA5E,IAAA,KAAAD,EAAA,MAAAgH,UAAA/G,GAAA+G,UAAA/G,GAAA,GAAAA,EAAA,EAAA8X,EAAA7X,OAAAF,IAAA,GAAA4C,SAAA,SAAA3C,GAAAiY,EAAAnY,EAAAE,EAAAD,EAAAC,GAAA,IAAAC,OAAAiY,0BAAAjY,OAAAkY,iBAAArY,EAAAG,OAAAiY,0BAAAnY,IAAA+X,EAAA7X,OAAAF,IAAA4C,SAAA,SAAA3C,GAAAC,OAAAK,eAAAR,EAAAE,EAAAC,OAAA+X,yBAAAjY,EAAAC,GAAA,WAAAF,CAAA,UAAAmY,EAAAG,EAAA5R,EAAAjG,GAAA,IAAAC,EAAA,OAAAA,EAAA,SAAAT,EAAAC,GAAA,aAAA+C,EAAAhD,KAAAA,EAAA,OAAAA,EAAA,IAAAD,EAAAC,EAAAU,OAAA4X,aAAA,YAAAvY,EAAA,KAAAU,EAAAV,EAAA8B,KAAA7B,EAAAC,GAAA,wBAAA+C,EAAAvC,GAAA,OAAAA,EAAA,UAAAqD,UAAA,kEAAA7D,EAAAsY,OAAAC,QAAAxY,EAAA,CAAAyY,CAAAhS,EAAA,WAAAA,EAAA,UAAAzD,EAAAvC,GAAAA,EAAA8X,OAAA9X,MAAA4X,EAAAnY,OAAAK,eAAA8X,EAAA5R,EAAA,CAAAjG,MAAAA,EAAAU,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAiX,EAAA5R,GAAAjG,EAAA6X,CAAA,CAQAhG,IAAAA,OAAaC,KACbD,IAAAA,OAAaE,KAEb,IAAMnL,EAAe,WAAH,MAAU,CACxBogB,KAAM,CAAC,EACP9f,MAAO,CAAC,EACR+f,aAAc,CAAC,EACfC,QAAS,CAAC,EACVC,SAAU,CAAC,EACXC,UAAW,GACXC,WAAY,GACZC,IAAK,CAAC,EACNtd,GAAI,EACJvF,KAAM,GACN8Q,YAAa,GACbtK,KAAM,GACNsc,WAAY,GACZC,YAAa,GACbC,WAAY,GACZC,cAAe,GACfC,UAAWC,QACXC,eAAe,EACfC,sBAAsB,EACtBC,oBAAqB,GACrBC,kBAAmB,EACnBC,YAAY,EACZC,eAAe,EACfC,iBAAkB,GAClBC,eAAgB,EAChBC,SAAU,EACVC,KAAM,GACNC,mBAAoBX,QAGpBY,eAAe,EACfC,cAAe,YACfC,oBAAqB,CACjBC,gBAAiB,KACjBC,cAAe,KACfC,iBAAkB,CACd,CACIC,SAAU,KAGlB3nB,KAAM,GACNuU,MAAO,KACPqT,SAAU,KACVC,YAAa,KACb/d,KAAM,KACNxG,KAAM,KACN8Q,YAAa,MAEpB,EAEY0T,GAAe9gB,EAAAA,EAAAA,IAAY,YAAa,CACjDC,MAAOxB,EACPyB,QAAS,CACLlE,MAAK,WAEDzE,OAAO4I,OAAOC,KAAM3B,IACxB,EAKAsiB,eAAc,SAAClC,GACX,IAAMnQ,GAAYtD,EAAAA,EAAAA,gBAClB,GAAIyT,EAAKmC,eAAiBnC,EAAKmC,cAAcN,iBAAkB,CAC3DtgB,KAAKmgB,oBAAsB1B,EAAKmC,cAAc,GAE9C5gB,KAAKmgB,oBAAoBG,iBAAmB,GAK5C,IAAIO,EAAc7gB,KAAKmgB,oBAAoBG,iBAAiB9e,MAAK,SAAAsf,GAAM,YAAwB1iB,IAApB0iB,EAAOP,QAAsB,IACnGM,IACDA,EAAc,CAACN,SAAU,IACzBvgB,KAAKmgB,oBAAoBG,iBAAiB7kB,KAAKolB,IAEnDpC,EAAKmC,cAAgBnC,EAAKmC,cAAcrS,KAAI,SAAAwS,GAAS,OAAAvS,EAAAA,EAAA,GAC9CuS,GAAS,IACZV,cAAe/R,EAAU0S,yBAAyBD,EAAUV,gBAAc,GAGlF,CAEArgB,KAAKye,KAAOA,GAAQ,CAAC,CACzB,EACAwC,gBAAe,SAACtiB,GACZqB,KAAKrB,MAAQA,GAAS,CAAC,CAC3B,EACAuiB,uBAAsB,SAACxC,GACnB1e,KAAK0e,aAAeA,GAAgB,CAAC,CACzC,EACAyC,OAAM,SAACpC,GACH/e,KAAK+e,IAAMA,GAAO,CAAC,CACvB,EACAqC,cAAa,SAAC3C,GACVze,KAAKye,KAAKhd,GAAKgd,EAAKhd,GACpBzB,KAAKye,KAAKviB,KAAOuiB,EAAKviB,KACtB8D,KAAKye,KAAKzR,YAAcyR,EAAKzR,YAC7BhN,KAAKye,KAAK/b,KAAO+b,EAAK/b,KACtB1C,KAAKye,KAAKE,QAAUF,EAAKE,QACzB3e,KAAKye,KAAKG,SAAWH,EAAKG,SAC1B5e,KAAKye,KAAKO,WAAaP,EAAKO,WAC5Bhf,KAAKif,YAAcR,EAAKQ,WAC5B,EACAoC,cAAa,SAAC9f,GACVvB,KAAKkf,WAAa3d,CACtB,EACA+f,iBAAgB,SAAC9iB,GACbwB,KAAKkf,WAAa1gB,CACtB,EACA+iB,UAAS,SAACC,GACNxhB,KAAKye,KAAKE,QAAQljB,KAAK+lB,EAC3B,EACAC,aAAY,SAACC,GACT1hB,KAAKye,KAAKE,QAAU3e,KAAKye,KAAKE,QAAQtY,QAAO,SAAAmb,GAAM,OAAIA,EAAO/f,KAAOigB,CAAQ,GACjF,EACAC,mBAAkB,SAACC,EAAWC,GAAwB,IAAhBC,EAAM7jB,UAAAnC,OAAA,QAAAsC,IAAAH,UAAA,IAAAA,UAAA,GAClC8jB,EAAU/hB,KAAKgiB,SAASxgB,MAAK,SAAA1J,GAAC,OAAIA,EAAE2J,KAAOmgB,CAAS,IACtDG,IACID,EACAC,EAAQE,MAAQF,EAAQE,MAAM5b,QAAO,SAAAoY,GAAI,OAAIA,EAAKhd,KAAOogB,CAAM,IAE/DE,EAAQE,MAAMxmB,KAAK,CAACgG,GAAIogB,EAAQK,YAAY,IAGxD,EAIAC,uBAAsB,WAClBniB,KAAKsf,eAAgB,CACzB,EACA8C,yBAAwB,WACpBpiB,KAAKuf,sBAAuB,CAChC,EAcM8C,iBAAgB,WAAG,IAAAniB,EAAA,YAAArC,EAAA9G,IAAAoF,MAAA,SAAAgE,IAAA,IAAAgC,EAAAmgB,EAAAliB,EAAA,OAAArJ,IAAAuB,MAAA,SAAA+H,GAAA,cAAAA,EAAAzD,KAAAyD,EAAApF,MAAA,OAKpB,OAJKkH,GAAoBM,EAAAA,EAAAA,wBACpB6f,EAAU,CACZC,QAASriB,EAAK2f,eACd2C,QAAStiB,EAAKue,KAAKhd,IACtBpB,EAAAzD,KAAA,EAAAyD,EAAApF,KAAA,EAG0BqF,MAAMQ,KAAK2hB,MAAM,0BAA2BH,GAAQ,OACnD,OADlBliB,EAAQC,EAAA1F,MACD4H,QACTrC,EAAKuhB,aAAavhB,EAAK2f,gBACvB3f,EAAKyhB,mBAAmBzhB,EAAK2f,eAAgB3f,EAAKue,KAAKhd,IAAI,GAC3DvB,EAAKof,eAAgB,EACrBnd,EAAkBS,qBAAqBxC,EAASI,KAAK8B,QAAS,aAE9DpC,EAAKof,eAAgB,EACrBnd,EAAkBS,qBAAqB,yCAA0C,YACpFvC,EAAApF,KAAA,gBAAAoF,EAAAzD,KAAA,EAAAyD,EAAAI,GAAAJ,EAAA,SAEDoF,QAAQ7H,MAAKyC,EAAAI,IACbP,EAAKof,eAAgB,EACrBnd,EAAkBS,qBAAqB,6DAA8D,SAAQ,yBAAAvC,EAAAtD,OAAA,GAAAoD,EAAA,iBArB5FtC,EAuBzB,EACM6kB,eAAc,WAAG,IAAA/hB,EAAA,YAAA9C,EAAA9G,IAAAoF,MAAA,SAAAyE,IAAA,IAAAuB,EAAAmgB,EAAAliB,EAAA,OAAArJ,IAAAuB,MAAA,SAAAuI,GAAA,cAAAA,EAAAjE,KAAAiE,EAAA5F,MAAA,OAMlB,OALKkH,GAAoBM,EAAAA,EAAAA,wBACpB6f,EAAU,CACZC,QAAS5hB,EAAK8e,kBACd+C,QAAS7hB,EAAK8d,KAAKhd,GACnBkhB,UAAWhiB,EAAK8d,KAAK/b,MACxB7B,EAAAjE,KAAA,EAAAiE,EAAA5F,KAAA,EAE0BqF,MAAMQ,KAAK2hB,MAAM,wBAAyBH,GAAQ,OACjD,OADlBliB,EAAQS,EAAAlG,MACD4H,QAET5B,EAAK8d,KAAKG,SAASnjB,KAAK2E,EAASI,KAAKoiB,SACtCjiB,EAAK4e,sBAAuB,EAC5Bpd,EAAkBS,qBAAqBxC,EAASI,KAAK8B,QAAS,aAE9D3B,EAAK4e,sBAAuB,EAC5Bpd,EAAkBS,qBAAqB,qCAAsC,YAChF/B,EAAA5F,KAAA,gBAAA4F,EAAAjE,KAAA,EAAAiE,EAAAJ,GAAAI,EAAA,SAED4E,QAAQ7H,MAAKiD,EAAAJ,IACbE,EAAK4e,sBAAuB,EAC5Bpd,EAAkBS,qBAAqB,0DAA2D,SAAQ,yBAAA/B,EAAA9D,OAAA,GAAA6D,EAAA,iBArB3F/C,EAuBvB,EACMglB,kBAAiB,WAAG,IAAAvhB,EAAA,YAAAzD,EAAA9G,IAAAoF,MAAA,SAAA+F,IAAA,IAAAC,EAAAmgB,EAAAliB,EAAA,OAAArJ,IAAAuB,MAAA,SAAAkK,GAAA,cAAAA,EAAA5F,KAAA4F,EAAAvH,MAAA,OAMrB,OALKkH,GAAoBM,EAAAA,EAAAA,wBACpB6f,EAAU,CACZC,QAASjhB,EAAKme,kBACd+C,QAASlhB,EAAKmd,KAAKhd,GACnBkhB,UAAWrhB,EAAKmd,KAAK/b,MACxBF,EAAA5F,KAAA,EAAA4F,EAAAvH,KAAA,EAG0BqF,MAAMQ,KAAK2hB,MAAM,2BAA4BH,GAAQ,OACpD,OADlBliB,EAAQoC,EAAA7H,MACD4H,QAETjB,EAAKmd,KAAKG,SAAWtd,EAAKmd,KAAKG,SAASvY,QAAO,SAAAuc,GAAO,OAAIA,EAAQnhB,KAAOH,EAAKme,iBAAiB,IAC/Fne,EAAKie,sBAAuB,EAC5Bpd,EAAkBS,qBAAqBxC,EAASI,KAAK8B,QAAS,aAE9DhB,EAAKie,sBAAuB,EAC5Bpd,EAAkBS,qBAAqB,0CAA2C,YACrFJ,EAAAvH,KAAA,gBAAAuH,EAAA5F,KAAA,EAAA4F,EAAA/B,GAAA+B,EAAA,SAEDiD,QAAQ7H,MAAK4E,EAAA/B,IACba,EAAKie,sBAAuB,EAC5Bpd,EAAkBS,qBAAqB,8DAA+D,SAAQ,yBAAAJ,EAAAzF,OAAA,GAAAmF,EAAA,iBAtB5FrE,EAwB1B,EACAilB,oBAAmB,WACf9iB,KAAKigB,eAAiBjgB,KAAKigB,aAC/B,EACM8C,iBAAgB,WAAG,OAAAllB,EAAA9G,IAAAoF,MAAA,SAAA4G,IAAA,OAAAhM,IAAAuB,MAAA,SAAA2K,GAAA,cAAAA,EAAArG,KAAAqG,EAAAhI,MAAA,cAAAgI,EAAAhI,KAAA,EACfqF,MAAMC,IAAI,sBAAsBnG,OAAOwD,QAAO,wBAAAqF,EAAAlG,OAAA,GAAAgG,EAAA,IAD/BlF,EAEzB,EACAmlB,YAAW,SAAChB,GACRhiB,KAAKgiB,SAAWA,CACpB,EACAiB,oBAAmB,SAACC,GAChBljB,KAAKye,KAAK0E,eAAiBD,CAC/B,GAGJ1a,QAAS,CACL4a,eAAc,SAACvjB,GACX,OAAKA,EAAM4e,KAAKE,QAEL9e,EAAM4e,KAAKE,SAClB3e,KAAKgf,WAAanf,EAAM4e,KAAKO,WACtB3T,KAAK2O,IAAIna,EAAM4e,KAAKO,WAAanf,EAAM4e,KAAKE,QAAQ7iB,OAAQ,SAFhE,EADI+D,EAAM4e,KAAKO,UAK1B,EACAqE,aAAY,SAACxjB,GACT,OAAKA,EAAM4e,KAAKE,QAEL9e,EAAM4e,KAAKE,SAClB3e,KAAKif,YAAcpf,EAAM4e,KAAKE,QAAQ7iB,OAC/B+D,EAAM4e,KAAKE,QAAQ7iB,aAFvB,EADI,CAKf,EACAwnB,oBAAmB,SAACzjB,GAChB,GAAIA,EAAM4e,KAAKE,QACX,OAAO9e,EAAM4e,KAAKE,QAAQ7iB,OAAS,GAAK,MAAQ+D,EAAM4e,KAAKE,QAAQ7iB,MAE3E,EACA8kB,cAAa,SAAC/gB,GACV,IAAO4e,EAAQ5e,EAAR4e,KACP,IAAKA,EAAKmC,eAA+C,IAA9BnC,EAAKmC,cAAc9kB,OAC1C,OAAO,KAGX,IAAMwS,GAAYtD,EAAAA,EAAAA,gBACZkT,EAAQ5U,MAAQqF,GAAGL,EAAU9E,UAEnC,OAAOiV,EAAKmC,cAAc9D,QAAO,SAACyG,EAASxC,GACvC,IAAMV,EAAgB/W,IAAMyX,EAAUV,eAAe1R,GAAGL,EAAU9E,UAClE,OAAK+Z,GAAWlY,KAAKmY,IAAInD,EAAgBnC,GAAS7S,KAAKmY,IAAIla,IAAMia,EAAQlD,eAAe1R,GAAGL,EAAU9E,UAAY0U,GACtG6C,EAEJwC,CACX,GAAG,KACP,EACAE,iBAAgB,SAAC5jB,GACb,IAAKA,EAAM4e,KAAKmC,eAAqD,IAApC/gB,EAAM4e,KAAKmC,cAAc9kB,OACtD,MAAO,GAGX,IAAMwS,GAAYtD,EAAAA,EAAAA,gBACZkT,EAAQ5U,MAAQqF,GAAGL,EAAU9E,UAEnC,OAAO3J,EAAM4e,KAAKmC,cACbva,QAAO,SAAA0a,GAAS,OAAIzX,IAAMyX,EAAUV,eAAe1R,GAAGL,EAAU9E,UAAUmQ,QAAQuE,EAAM,IACxF/C,MAAK,SAACvjB,EAAGwjB,GAAC,OAAK9R,IAAM1R,EAAEyoB,eAAe1R,GAAGL,EAAU9E,UAAUka,KAAKpa,IAAM8R,EAAEiF,eAAe1R,GAAGL,EAAU9E,UAAU,IAChH+E,KAAI,SAAAwS,GAAS,OAAAvS,EAAAA,EAAA,GACPuS,GAAS,IACZ4C,UAAWra,IAAMyX,EAAUV,eAAe1R,GAAGL,EAAU9E,UAAUoF,UAAQ,GAErF,EACAgV,iBAAgB,SAAC/jB,GACb,IAAM+gB,EAAgB5gB,KAAK4gB,cAC3B,IAAK/gB,EAAM4e,KAAKmC,eAAqD,IAApC/gB,EAAM4e,KAAKmC,cAAc9kB,OACtD,MAAO,GAGX,IAAMwS,GAAYtD,EAAAA,EAAAA,gBACZkT,EAAQ5U,MAAQqF,GAAGL,EAAU9E,UAEnC,OAAO3J,EAAM4e,KAAKmC,cACbva,QAAO,SAAA0a,GAAS,OACbzX,IAAMyX,EAAUV,eAAe1R,GAAGL,EAAU9E,UAAUmQ,QAAQuE,MAC5D0C,GAAiBG,EAAUV,gBAAkBO,EAAcP,cAAc,IAE9ElF,MAAK,SAACvjB,EAAGwjB,GAAC,OAAK9R,IAAM1R,EAAEyoB,eAAe1R,GAAGL,EAAU9E,UAAUka,KAAKpa,IAAM8R,EAAEiF,eAAe1R,GAAGL,EAAU9E,UAAU,IAChH+E,KAAI,SAAAwS,GAAS,OAAAvS,EAAAA,EAAA,GACPuS,GAAS,IACZ4C,UAAWra,IAAMyX,EAAUV,eAAe1R,GAAGL,EAAU9E,UAAUoF,UAAQ,GAErF,mbCjUR7X,EAAA,kBAAAC,CAAA,MAAAC,EAAAD,EAAA,GAAAE,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAK,gBAAA,SAAAP,EAAAD,EAAAE,GAAAD,EAAAD,GAAAE,EAAAO,KAAA,EAAAC,EAAA,mBAAAC,OAAAA,OAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAjB,EAAAD,EAAAE,GAAA,OAAAC,OAAAK,eAAAP,EAAAD,EAAA,CAAAS,MAAAP,EAAAiB,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAApB,EAAAD,EAAA,KAAAkB,EAAA,aAAAjB,GAAAiB,EAAA,SAAAjB,EAAAD,EAAAE,GAAA,OAAAD,EAAAD,GAAAE,CAAA,WAAAoB,EAAArB,EAAAD,EAAAE,EAAAG,GAAA,IAAAK,EAAAV,GAAAA,EAAAI,qBAAAmB,EAAAvB,EAAAuB,EAAAX,EAAAT,OAAAqB,OAAAd,EAAAN,WAAAU,EAAA,IAAAW,EAAApB,GAAA,WAAAE,EAAAK,EAAA,WAAAH,MAAAiB,EAAAzB,EAAAC,EAAAY,KAAAF,CAAA,UAAAe,EAAA1B,EAAAD,EAAAE,GAAA,WAAA0B,KAAA,SAAAC,IAAA5B,EAAA6B,KAAA9B,EAAAE,GAAA,OAAAD,GAAA,OAAA2B,KAAA,QAAAC,IAAA5B,EAAA,EAAAD,EAAAsB,KAAAA,EAAA,IAAAS,EAAA,iBAAAC,EAAA,iBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,YAAAZ,IAAA,UAAAa,IAAA,UAAAC,IAAA,KAAAC,EAAA,GAAApB,EAAAoB,EAAA1B,GAAA,8BAAA2B,EAAApC,OAAAqC,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAA,MAAAD,GAAAA,IAAAvC,GAAAG,EAAAyB,KAAAW,EAAA7B,KAAA0B,EAAAG,GAAA,IAAAE,EAAAN,EAAAjC,UAAAmB,EAAAnB,UAAAD,OAAAqB,OAAAc,GAAA,SAAAM,EAAA3C,GAAA,0BAAA4C,SAAA,SAAA7C,GAAAkB,EAAAjB,EAAAD,GAAA,SAAAC,GAAA,YAAA6C,QAAA9C,EAAAC,EAAA,gBAAA8C,EAAA9C,EAAAD,GAAA,SAAAgD,EAAA9C,EAAAK,EAAAG,EAAAE,GAAA,IAAAE,EAAAa,EAAA1B,EAAAC,GAAAD,EAAAM,GAAA,aAAAO,EAAAc,KAAA,KAAAZ,EAAAF,EAAAe,IAAAE,EAAAf,EAAAP,MAAA,OAAAsB,GAAA,UAAAkB,EAAAlB,IAAA1B,EAAAyB,KAAAC,EAAA,WAAA/B,EAAAkD,QAAAnB,EAAAoB,SAAAC,MAAA,SAAAnD,GAAA+C,EAAA,OAAA/C,EAAAS,EAAAE,EAAA,aAAAX,GAAA+C,EAAA,QAAA/C,EAAAS,EAAAE,EAAA,IAAAZ,EAAAkD,QAAAnB,GAAAqB,MAAA,SAAAnD,GAAAe,EAAAP,MAAAR,EAAAS,EAAAM,EAAA,aAAAf,GAAA,OAAA+C,EAAA,QAAA/C,EAAAS,EAAAE,EAAA,IAAAA,EAAAE,EAAAe,IAAA,KAAA3B,EAAAK,EAAA,gBAAAE,MAAA,SAAAR,EAAAI,GAAA,SAAAgD,IAAA,WAAArD,GAAA,SAAAA,EAAAE,GAAA8C,EAAA/C,EAAAI,EAAAL,EAAAE,EAAA,WAAAA,EAAAA,EAAAA,EAAAkD,KAAAC,EAAAA,GAAAA,GAAA,aAAA3B,EAAA1B,EAAAE,EAAAG,GAAA,IAAAE,EAAAwB,EAAA,gBAAArB,EAAAE,GAAA,GAAAL,IAAA0B,EAAA,UAAAqB,MAAA,mCAAA/C,IAAA2B,EAAA,cAAAxB,EAAA,MAAAE,EAAA,OAAAH,MAAAR,EAAAsD,MAAA,OAAAlD,EAAAmD,OAAA9C,EAAAL,EAAAwB,IAAAjB,IAAA,KAAAE,EAAAT,EAAAoD,SAAA,GAAA3C,EAAA,KAAAE,EAAA0C,EAAA5C,EAAAT,GAAA,GAAAW,EAAA,IAAAA,IAAAmB,EAAA,gBAAAnB,CAAA,cAAAX,EAAAmD,OAAAnD,EAAAsD,KAAAtD,EAAAuD,MAAAvD,EAAAwB,SAAA,aAAAxB,EAAAmD,OAAA,IAAAjD,IAAAwB,EAAA,MAAAxB,EAAA2B,EAAA7B,EAAAwB,IAAAxB,EAAAwD,kBAAAxD,EAAAwB,IAAA,gBAAAxB,EAAAmD,QAAAnD,EAAAyD,OAAA,SAAAzD,EAAAwB,KAAAtB,EAAA0B,EAAA,IAAAK,EAAAX,EAAA3B,EAAAE,EAAAG,GAAA,cAAAiC,EAAAV,KAAA,IAAArB,EAAAF,EAAAkD,KAAArB,EAAAF,EAAAM,EAAAT,MAAAM,EAAA,gBAAA1B,MAAA6B,EAAAT,IAAA0B,KAAAlD,EAAAkD,KAAA,WAAAjB,EAAAV,OAAArB,EAAA2B,EAAA7B,EAAAmD,OAAA,QAAAnD,EAAAwB,IAAAS,EAAAT,IAAA,YAAA6B,EAAA1D,EAAAE,GAAA,IAAAG,EAAAH,EAAAsD,OAAAjD,EAAAP,EAAAa,SAAAR,GAAA,GAAAE,IAAAN,EAAA,OAAAC,EAAAuD,SAAA,eAAApD,GAAAL,EAAAa,SAAA,SAAAX,EAAAsD,OAAA,SAAAtD,EAAA2B,IAAA5B,EAAAyD,EAAA1D,EAAAE,GAAA,UAAAA,EAAAsD,SAAA,WAAAnD,IAAAH,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAA,IAAAkC,UAAA,oCAAA1D,EAAA,aAAA8B,EAAA,IAAAzB,EAAAiB,EAAApB,EAAAP,EAAAa,SAAAX,EAAA2B,KAAA,aAAAnB,EAAAkB,KAAA,OAAA1B,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAAnB,EAAAmB,IAAA3B,EAAAuD,SAAA,KAAAtB,EAAA,IAAAvB,EAAAF,EAAAmB,IAAA,OAAAjB,EAAAA,EAAA2C,MAAArD,EAAAF,EAAAgE,YAAApD,EAAAH,MAAAP,EAAA+D,KAAAjE,EAAAkE,QAAA,WAAAhE,EAAAsD,SAAAtD,EAAAsD,OAAA,OAAAtD,EAAA2B,IAAA5B,GAAAC,EAAAuD,SAAA,KAAAtB,GAAAvB,GAAAV,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAA,IAAAkC,UAAA,oCAAA7D,EAAAuD,SAAA,KAAAtB,EAAA,UAAAgC,EAAAlE,GAAA,IAAAD,EAAA,CAAAoE,OAAAnE,EAAA,SAAAA,IAAAD,EAAAqE,SAAApE,EAAA,SAAAA,IAAAD,EAAAsE,WAAArE,EAAA,GAAAD,EAAAuE,SAAAtE,EAAA,SAAAuE,WAAAC,KAAAzE,EAAA,UAAA0E,EAAAzE,GAAA,IAAAD,EAAAC,EAAA0E,YAAA,GAAA3E,EAAA4B,KAAA,gBAAA5B,EAAA6B,IAAA5B,EAAA0E,WAAA3E,CAAA,UAAAyB,EAAAxB,GAAA,KAAAuE,WAAA,EAAAJ,OAAA,SAAAnE,EAAA4C,QAAAsB,EAAA,WAAAS,OAAA,YAAAlC,EAAA1C,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAAE,EAAAF,EAAAY,GAAA,GAAAV,EAAA,OAAAA,EAAA4B,KAAA9B,GAAA,sBAAAA,EAAAiE,KAAA,OAAAjE,EAAA,IAAA6E,MAAA7E,EAAA8E,QAAA,KAAAvE,GAAA,EAAAG,EAAA,SAAAuD,IAAA,OAAA1D,EAAAP,EAAA8E,QAAA,GAAAzE,EAAAyB,KAAA9B,EAAAO,GAAA,OAAA0D,EAAAxD,MAAAT,EAAAO,GAAA0D,EAAAV,MAAA,EAAAU,EAAA,OAAAA,EAAAxD,MAAAR,EAAAgE,EAAAV,MAAA,EAAAU,CAAA,SAAAvD,EAAAuD,KAAAvD,CAAA,YAAAqD,UAAAd,EAAAjD,GAAA,2BAAAoC,EAAAhC,UAAAiC,EAAA9B,EAAAoC,EAAA,eAAAlC,MAAA4B,EAAAjB,cAAA,IAAAb,EAAA8B,EAAA,eAAA5B,MAAA2B,EAAAhB,cAAA,IAAAgB,EAAA2C,YAAA7D,EAAAmB,EAAArB,EAAA,qBAAAhB,EAAAgF,oBAAA,SAAA/E,GAAA,IAAAD,EAAA,mBAAAC,GAAAA,EAAAgF,YAAA,QAAAjF,IAAAA,IAAAoC,GAAA,uBAAApC,EAAA+E,aAAA/E,EAAAkF,MAAA,EAAAlF,EAAAmF,KAAA,SAAAlF,GAAA,OAAAE,OAAAiF,eAAAjF,OAAAiF,eAAAnF,EAAAoC,IAAApC,EAAAoF,UAAAhD,EAAAnB,EAAAjB,EAAAe,EAAA,sBAAAf,EAAAG,UAAAD,OAAAqB,OAAAmB,GAAA1C,CAAA,EAAAD,EAAAsF,MAAA,SAAArF,GAAA,OAAAkD,QAAAlD,EAAA,EAAA2C,EAAAG,EAAA3C,WAAAc,EAAA6B,EAAA3C,UAAAU,GAAA,0BAAAd,EAAA+C,cAAAA,EAAA/C,EAAAuF,MAAA,SAAAtF,EAAAC,EAAAG,EAAAE,EAAAG,QAAA,IAAAA,IAAAA,EAAA8E,SAAA,IAAA5E,EAAA,IAAAmC,EAAAzB,EAAArB,EAAAC,EAAAG,EAAAE,GAAAG,GAAA,OAAAV,EAAAgF,oBAAA9E,GAAAU,EAAAA,EAAAqD,OAAAb,MAAA,SAAAnD,GAAA,OAAAA,EAAAsD,KAAAtD,EAAAQ,MAAAG,EAAAqD,MAAA,KAAArB,EAAAD,GAAAzB,EAAAyB,EAAA3B,EAAA,aAAAE,EAAAyB,EAAA/B,GAAA,0BAAAM,EAAAyB,EAAA,qDAAA3C,EAAAyF,KAAA,SAAAxF,GAAA,IAAAD,EAAAG,OAAAF,GAAAC,EAAA,WAAAG,KAAAL,EAAAE,EAAAuE,KAAApE,GAAA,OAAAH,EAAAwF,UAAA,SAAAzB,IAAA,KAAA/D,EAAA4E,QAAA,KAAA7E,EAAAC,EAAAyF,MAAA,GAAA1F,KAAAD,EAAA,OAAAiE,EAAAxD,MAAAR,EAAAgE,EAAAV,MAAA,EAAAU,CAAA,QAAAA,EAAAV,MAAA,EAAAU,CAAA,GAAAjE,EAAA0C,OAAAA,EAAAjB,EAAArB,UAAA,CAAA6E,YAAAxD,EAAAmD,MAAA,SAAA5E,GAAA,QAAA4F,KAAA,OAAA3B,KAAA,OAAAN,KAAA,KAAAC,MAAA3D,EAAA,KAAAsD,MAAA,OAAAE,SAAA,UAAAD,OAAA,YAAA3B,IAAA5B,EAAA,KAAAuE,WAAA3B,QAAA6B,IAAA1E,EAAA,QAAAE,KAAA,WAAAA,EAAA2F,OAAA,IAAAxF,EAAAyB,KAAA,KAAA5B,KAAA2E,OAAA3E,EAAA4F,MAAA,WAAA5F,GAAAD,EAAA,EAAA8F,KAAA,gBAAAxC,MAAA,MAAAtD,EAAA,KAAAuE,WAAA,GAAAG,WAAA,aAAA1E,EAAA2B,KAAA,MAAA3B,EAAA4B,IAAA,YAAAmE,IAAA,EAAAnC,kBAAA,SAAA7D,GAAA,QAAAuD,KAAA,MAAAvD,EAAA,IAAAE,EAAA,cAAA+F,EAAA5F,EAAAE,GAAA,OAAAK,EAAAgB,KAAA,QAAAhB,EAAAiB,IAAA7B,EAAAE,EAAA+D,KAAA5D,EAAAE,IAAAL,EAAAsD,OAAA,OAAAtD,EAAA2B,IAAA5B,KAAAM,CAAA,SAAAA,EAAA,KAAAiE,WAAAM,OAAA,EAAAvE,GAAA,IAAAA,EAAA,KAAAG,EAAA,KAAA8D,WAAAjE,GAAAK,EAAAF,EAAAiE,WAAA,YAAAjE,EAAA0D,OAAA,OAAA6B,EAAA,UAAAvF,EAAA0D,QAAA,KAAAwB,KAAA,KAAA9E,EAAAT,EAAAyB,KAAApB,EAAA,YAAAM,EAAAX,EAAAyB,KAAApB,EAAA,iBAAAI,GAAAE,EAAA,SAAA4E,KAAAlF,EAAA2D,SAAA,OAAA4B,EAAAvF,EAAA2D,UAAA,WAAAuB,KAAAlF,EAAA4D,WAAA,OAAA2B,EAAAvF,EAAA4D,WAAA,SAAAxD,GAAA,QAAA8E,KAAAlF,EAAA2D,SAAA,OAAA4B,EAAAvF,EAAA2D,UAAA,YAAArD,EAAA,UAAAsC,MAAA,kDAAAsC,KAAAlF,EAAA4D,WAAA,OAAA2B,EAAAvF,EAAA4D,WAAA,KAAAR,OAAA,SAAA7D,EAAAD,GAAA,QAAAE,EAAA,KAAAsE,WAAAM,OAAA,EAAA5E,GAAA,IAAAA,EAAA,KAAAK,EAAA,KAAAiE,WAAAtE,GAAA,GAAAK,EAAA6D,QAAA,KAAAwB,MAAAvF,EAAAyB,KAAAvB,EAAA,oBAAAqF,KAAArF,EAAA+D,WAAA,KAAA5D,EAAAH,EAAA,OAAAG,IAAA,UAAAT,GAAA,aAAAA,IAAAS,EAAA0D,QAAApE,GAAAA,GAAAU,EAAA4D,aAAA5D,EAAA,UAAAE,EAAAF,EAAAA,EAAAiE,WAAA,UAAA/D,EAAAgB,KAAA3B,EAAAW,EAAAiB,IAAA7B,EAAAU,GAAA,KAAA8C,OAAA,YAAAS,KAAAvD,EAAA4D,WAAAnC,GAAA,KAAA+D,SAAAtF,EAAA,EAAAsF,SAAA,SAAAjG,EAAAD,GAAA,aAAAC,EAAA2B,KAAA,MAAA3B,EAAA4B,IAAA,gBAAA5B,EAAA2B,MAAA,aAAA3B,EAAA2B,KAAA,KAAAqC,KAAAhE,EAAA4B,IAAA,WAAA5B,EAAA2B,MAAA,KAAAoE,KAAA,KAAAnE,IAAA5B,EAAA4B,IAAA,KAAA2B,OAAA,cAAAS,KAAA,kBAAAhE,EAAA2B,MAAA5B,IAAA,KAAAiE,KAAAjE,GAAAmC,CAAA,EAAAgE,OAAA,SAAAlG,GAAA,QAAAD,EAAA,KAAAwE,WAAAM,OAAA,EAAA9E,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAsE,WAAAxE,GAAA,GAAAE,EAAAoE,aAAArE,EAAA,YAAAiG,SAAAhG,EAAAyE,WAAAzE,EAAAqE,UAAAG,EAAAxE,GAAAiC,CAAA,kBAAAlC,GAAA,QAAAD,EAAA,KAAAwE,WAAAM,OAAA,EAAA9E,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAsE,WAAAxE,GAAA,GAAAE,EAAAkE,SAAAnE,EAAA,KAAAI,EAAAH,EAAAyE,WAAA,aAAAtE,EAAAuB,KAAA,KAAArB,EAAAF,EAAAwB,IAAA6C,EAAAxE,EAAA,QAAAK,CAAA,YAAA+C,MAAA,0BAAA8C,cAAA,SAAApG,EAAAE,EAAAG,GAAA,YAAAoD,SAAA,CAAA5C,SAAA6B,EAAA1C,GAAAgE,WAAA9D,EAAAgE,QAAA7D,GAAA,cAAAmD,SAAA,KAAA3B,IAAA5B,GAAAkC,CAAA,GAAAnC,CAAA,UAAAqG,EAAAC,EAAApD,EAAAqD,EAAAC,EAAAC,EAAAC,EAAA7E,GAAA,QAAA8E,EAAAL,EAAAI,GAAA7E,GAAApB,EAAAkG,EAAAlG,KAAA,OAAAmG,GAAA,YAAAL,EAAAK,EAAA,CAAAD,EAAApD,KAAAL,EAAAzC,GAAA+E,QAAAtC,QAAAzC,GAAA2C,KAAAoD,EAAAC,EAAA,UAAAI,EAAAC,GAAA,sBAAAC,EAAA,KAAAC,EAAAC,UAAA,WAAAzB,SAAA,SAAAtC,EAAAqD,GAAA,IAAAD,EAAAQ,EAAAI,MAAAH,EAAAC,GAAA,SAAAR,EAAA/F,GAAA4F,EAAAC,EAAApD,EAAAqD,EAAAC,EAAAC,EAAA,OAAAhG,EAAA,UAAAgG,EAAAU,GAAAd,EAAAC,EAAApD,EAAAqD,EAAAC,EAAAC,EAAA,QAAAU,EAAA,CAAAX,OAAAY,EAAA,KAWA,IAAMC,EAAe,WAAH,MAAU,CACxBoB,cAAe,yBACfokB,OAAQ,KACRC,wBAAwB,EACxBC,mBAAmB,EACnBC,MAAO,GACPC,oBAAqB,GAErBC,kBAAmB,GACnBC,kBAAmB,GACnBC,kBAAmB,GACnBC,oBAAqB,GACrBC,oBAAqB,GACrBC,oBAAqB,GACrBC,yBAA0B,GAC1BC,qBAAsB,GACtB/mB,IAAK,GACLgnB,UAAW,GACXC,YAAa,GACbC,gBAAiB,GACjBC,YAAa,GACbC,WAAY,GACZC,eAAgB,GAChBC,YAAa,GACbC,iBAAkB,EAClBC,mBAAoB,GACpBC,YAAa,CAAC,EACdC,mBAAoB,CAAC,EACrBC,aAAc,CAAC,EACfC,UAAU,EACVC,UAAU,EACVC,OAAO,EACPC,QAAQ,EAERvS,YAAa,EACbX,SAAU,EACVmT,cAAe,gBACfC,MAAM,EACNC,gBAAgB,EAChBC,qBAAqB,EACxB,EAEYnhB,GAAyB9E,EAAAA,EAAAA,IAAY,sBAAuB,CACrEC,MAAOxB,EACPyB,QAAS,CACLlE,MAAK,WAEDzE,OAAO4I,OAAOC,KA/CE,CACxBP,cAAe,yBACfokB,OAAQ,KACRC,wBAAwB,EACxBC,mBAAmB,EACnBC,MAAO,GACPC,oBAAqB,GAErBC,kBAAmB,GACnBC,kBAAmB,GACnBC,kBAAmB,GACnBC,oBAAqB,GACrBC,oBAAqB,GACrBC,oBAAqB,GACrBC,yBAA0B,GAC1BC,qBAAsB,GACtB/mB,IAAK,GACLgnB,UAAW,GACXC,YAAa,GACbC,gBAAiB,GACjBC,YAAa,GACbC,WAAY,GACZC,eAAgB,GAChBC,YAAa,GACbC,iBAAkB,EAClBC,mBAAoB,GACpBC,YAAa,CAAC,EACdC,mBAAoB,CAAC,EACrBC,aAAc,CAAC,EACfC,UAAU,EACVC,UAAU,EACVC,OAAO,EACPC,QAAQ,EAERvS,YAAa,EACbX,SAAU,EACVmT,cAAe,gBACfC,MAAM,EACNC,gBAAgB,EAChBC,qBAAqB,GASjB,EAEMC,iBAAgB,WAAG,IAAA5lB,EAAA,YAAArC,EAAA9G,IAAAoF,MAAA,SAAAgE,IAAA,IAAAC,EAAA,OAAArJ,IAAAuB,MAAA,SAAA+H,GAAA,cAAAA,EAAAzD,KAAAyD,EAAApF,MAAA,cAAAoF,EAAAzD,KAAA,EAAAyD,EAAApF,KAAA,EAEIqF,MAAMC,IAAI,oBAAmB,OAA9CH,EAAQC,EAAA1F,KACZuF,EAAKT,cAAgBW,EAASI,KAAIH,EAAApF,KAAA,gBAAAoF,EAAAzD,KAAA,EAAAyD,EAAAI,GAAAJ,EAAA,SAElCoF,QAAQ7H,MAAKyC,EAAAI,IAAO,yBAAAJ,EAAAtD,OAAA,GAAAoD,EAAA,iBALHtC,EAOzB,EAGAkoB,UAAS,SAACC,GAAgB,IAAArlB,EAAA,KACtBX,KAAK6jB,OAASmC,EACdhmB,KAAKimB,mBAAmB7rB,MAAK,WACzBuG,EAAKulB,sBACT,IAAE,OAAO,SAAAtoB,GACL6H,QAAQ7H,MAAM,4CAA6CA,EAC/D,GACJ,EAGMqoB,iBAAgB,WAAG,IAAA3kB,EAAA,YAAAzD,EAAA9G,IAAAoF,MAAA,SAAAyE,IAAA,OAAA7J,IAAAuB,MAAA,SAAAuI,GAAA,cAAAA,EAAAjE,KAAAiE,EAAA5F,MAAA,UAChBqG,EAAKuiB,OAAQ,CAAFhjB,EAAA5F,KAAA,QACwC,OAApDwK,QAAQ7H,MAAM,uCAAsCiD,EAAA/F,OAAA,wBAAA+F,EAAA5F,KAAA,GAIlDkrB,EAAAA,EAAAA,YAAU,cAAAtlB,EAAA5F,KAAA,GAGVmrB,EAAAA,EAAAA,iBAAgBC,gCAAgC/kB,EAAKuiB,QAAO,OAGlEviB,EAAKuiB,OAAO0B,UAAS,GACrBjkB,EAAKuiB,OAAO2B,MAAMlkB,EAAKkkB,OAGvBlkB,EAAKuiB,OAAOyC,OAAM,WACdhlB,EAAKuiB,OAAO0C,OAAOnsB,MAAK,WACpBqL,QAAQC,IAAI,gCAChB,IAAE,OAAO,SAAA9H,GACL6H,QAAQ7H,MAAM,kCAAmCA,EAErD,GACJ,IAAE,yBAAAiD,EAAA9D,OAAA,GAAA6D,EAAA,IAvBmB/C,EAwBzB,EAGAqoB,qBAAoB,WACXlmB,KAAK6jB,SAAU7jB,KAAK8jB,wBAKzB9jB,KAAK6jB,OAAO2C,GAAG,aAAcxmB,KAAKymB,kBAClCzmB,KAAK6jB,OAAO2C,GAAG,mBAAoBxmB,KAAK0mB,wBACxC1mB,KAAK6jB,OAAO2C,GAAG,OAAQxmB,KAAK2mB,YAC5B3mB,KAAK6jB,OAAO2C,GAAG,QAASxmB,KAAK4mB,aAC7B5mB,KAAK6jB,OAAO2C,GAAG,QAASxmB,KAAK6mB,aAE7B7mB,KAAK8jB,wBAAyB,EAC9Bre,QAAQC,IAAI,8BAXRD,QAAQC,IAAI,2EAYpB,EAGAohB,qBAAoB,WACX9mB,KAAK6jB,QAAW7jB,KAAK8jB,yBAK1BsC,EAAAA,EAAAA,iBAAgBW,2BAChB/mB,KAAK6jB,OAAOmD,IAAI,aAAchnB,KAAKymB,kBACnCzmB,KAAK6jB,OAAOmD,IAAI,mBAAoBhnB,KAAK0mB,wBACzC1mB,KAAK6jB,OAAOmD,IAAI,OAAQhnB,KAAK2mB,YAC7B3mB,KAAK6jB,OAAOmD,IAAI,QAAShnB,KAAK4mB,aAC9B5mB,KAAK6jB,OAAOmD,IAAI,QAAShnB,KAAK6mB,aAE9B7mB,KAAK8jB,wBAAyB,EAC9Bre,QAAQC,IAAI,8BAZRD,QAAQC,IAAI,2EAapB,EAGAuhB,cAAa,WACJjnB,KAAK6jB,QAIV7jB,KAAK8mB,uBACL9mB,KAAK6jB,OAAOqD,UACZlnB,KAAK6jB,OAAS,KAMdpe,QAAQC,IAAI,0CAXRD,QAAQ7H,MAAM,mCAYtB,EAGAupB,yBAAwB,SAAC/a,GACrB3G,QAAQC,IAAI,kCASZ1F,KAAK0M,aAAaN,EACtB,EAEAgb,cAAa,WACLpnB,KAAK6jB,SACL7jB,KAAK6jB,OAAOwD,QACZrnB,KAAK6jB,OAAO2B,OAAM,GAClBxlB,KAAK6jB,OAAO3Q,YAAY,GAExBlT,KAAK8mB,uBAEb,EAGAL,iBAAgB,WAGZzmB,KAAKkT,YAAclT,KAAK6jB,OAAO3Q,cAC/BlT,KAAKuS,SAAWvS,KAAK6jB,OAAOtR,WACAvS,KAAKkT,YAAclT,KAAKuS,SACpDvS,KAAK0lB,cAAgB,GAAH3kB,OAAMf,KAAKkL,eAAelL,KAAKkT,aAAY,OAAAnS,OAAMf,KAAKkL,eAAelL,KAAKuS,UAKhG,EAEArH,eAAc,SAACoc,GAMX,MADc,CAJAjc,KAAKC,MAAMgc,EAAoB,MAC7Bjc,KAAKC,MAAOgc,EAAoB,KAAQ,IACxCjc,KAAKC,MAAMgc,EAAoB,KAEP/Y,KAAI,SAAAgZ,GAAI,OAAIA,EAAK7b,WAAWC,SAAS,EAAG,IAAI,IACvE6b,KAAK,IACtB,EACAd,uBAAsB,WAAG,IAAAe,EAAA5lB,EAAA,KACrB4D,QAAQC,IAAI,gCAED,QAAX+hB,EAAAznB,KAAK6jB,cAAM,IAAA4D,GAAXA,EAAajB,GAAG,oBAAoB,WAC5B3kB,EAAKgiB,OAAO6D,iBAMiB,IAAzB7lB,EAAKgiB,OAAO4B,UAEZ5jB,EAAKgiB,OAAO0C,MAGxB,GACJ,EACAI,WAAU,WAAG,IAAAgB,EAAA1lB,EAAA,KACTwD,QAAQC,IAAI,oBAED,QAAXiiB,EAAA3nB,KAAK6jB,cAAM,IAAA8D,GAAXA,EAAanB,GAAG,QAAQ,WACpBvkB,EAAKwjB,QAAS,CAClB,GACJ,EACAmB,YAAW,WAAG,IAAAgB,EAAA9kB,EAAA,KACV2C,QAAQC,IAAI,qBAED,QAAXkiB,EAAA5nB,KAAK6jB,cAAM,IAAA+D,GAAXA,EAAapB,GAAG,SAAS,WACrB1jB,EAAK2iB,QAAS,CAClB,GACJ,EACAoB,YAAW,WAAG,IAAAgB,EACVpiB,QAAQC,IAAI,qBAED,QAAXmiB,EAAA7nB,KAAK6jB,cAAM,IAAAgE,GAAXA,EAAarB,GAAG,SAAS,WACrB,IAAM5oB,EAAQoC,KAAK6jB,OAAOjmB,QAC1B6H,QAAQ7H,MAAM,kBAAmBA,EAAMkqB,KAAMlqB,EAAM0E,QACvD,GACJ,EACAylB,SAAQ,WAEJ/nB,KAAK2lB,MAAO,CAChB,EAoBAqC,WAAU,WACFhoB,KAAKwlB,MACLxlB,KAAKioB,SAELjoB,KAAKkoB,MAEb,EAEAA,KAAI,WACIloB,KAAK6jB,SACL7jB,KAAK6jB,OAAO2B,OAAM,GAClBxlB,KAAKwlB,OAAQ,EAErB,EAEAyC,OAAM,WAGEjoB,KAAK6jB,SAQL7jB,KAAK6jB,OAAO2B,OAAM,GAClBxlB,KAAKwlB,OAAQ,EAErB,EACA2C,WAAU,WACN,IAAIC,GAAUC,EAAAA,EAAAA,GAAQ,cAElBroB,KAAKylB,OACL2C,EAAQ7B,OAER6B,EAAQf,OAEhB,EACAiB,KAAI,YACcD,EAAAA,EAAAA,GAAQ,cACdC,MACZ,EACAC,kBAAiB,SAACnc,EAAQK,GACtB,IAAI2b,GAAUC,EAAAA,EAAAA,GAAQ,cAClBG,EAAgBxoB,KAAKP,cAAgB,QAAU2M,EAAS,cAC5Dgc,EAAQK,IAAI,CAAC,IAAOD,EAAe,KAAQ/b,IAC3C2b,EAAQ7B,MACZ,EACAc,MAAK,WACD,IAAIe,GAAUC,EAAAA,EAAAA,GAAQ,cACtBD,EAAQ7C,UAAS,GACjB6C,EAAQf,QACRrnB,KAAKylB,QAAS,CAClB,EACAc,KAAI,WACA,IAAI6B,GAAUC,EAAAA,EAAAA,GAAQ,cAEtBD,EAAQ7B,OACR6B,EAAQ7C,UAAS,GACjBvlB,KAAKylB,QAAS,CAClB,EAEAxqB,KAAI,WACA,IAAImtB,GAAUC,EAAAA,EAAAA,GAAQ,cACtBD,EAAQ7C,UAAS,GACjB6C,EAAQK,IAAIzoB,KAAK8kB,WACrB,EAEA4D,KAAI,WACA,IAAIN,GAAUC,EAAAA,EAAAA,GAAQ,cACtBD,EAAQ7C,UAAS,GACjB6C,EAAQK,IAAIzoB,KAAK+kB,eACrB,EACA4D,WAAU,WACN,IAAIP,GAAUC,EAAAA,EAAAA,GAAQ,cACtBD,EAAQ7C,UAAS,GAEjB6C,EAAQQ,mBACZ,EACAC,oBAAmB,WACf,IAAIT,GAAUC,EAAAA,EAAAA,GAAQ,cACtBD,EAAQ7C,UAAS,GACjBvlB,KAAK8oB,iBAAmBV,EAAQlV,WACpC,EA8CA6V,iBAAgB,SAAC3c,GACb,IAAI4c,EAAUpE,GAEdnf,QAAQC,IAAI,uCAAwC0G,GAGpDwY,EAAkBxY,EAAOxT,MAAQ,YACjC6M,QAAQC,IAAI,iCAAD3E,OAAkC6jB,IAEpB,kBAArBxY,EAAOI,YAEPwc,EAAW5c,EAAO6c,UAClBxjB,QAAQC,IAAI,+BAAgCsjB,KAE5CvjB,QAAQC,IAAI,gBAAiB0G,EAAO8c,cACpCzjB,QAAQC,IAAI,gBAAiB0G,EAAO+c,cACpC1jB,QAAQC,IAAI,UAAW0G,EAAOgd,QAC9B3jB,QAAQC,IAAI,aAAc0G,EAAOid,WAOjCL,EAHiB,GAAHjoB,OAAMqL,EAAO8c,cAAYnoB,OAAGqL,EAAO+c,cAAYpoB,OAAGqL,EAAOgd,OAAM,KAE5Dhd,EAAOid,UAExB5jB,QAAQC,IAAI,qCAAsCsjB,IAUtD,OADAvjB,QAAQC,IAAI,mCAAD3E,OAAoCioB,EAAQ,YAAAjoB,OAAW6jB,IAC3D,CAACoE,SAAAA,EAAUpE,gBAAAA,EACtB,EAGAlY,aAAY,SAACN,GAAQ,IAAAjJ,EAAA,KACjB,IACI,IAAIilB,GAAUC,EAAAA,EAAAA,GAAQ,cACtB5iB,QAAQC,IAAI,kBACZ,IAAM4jB,GAAalD,EAAAA,EAAAA,iBAEnBmD,EAAoCvpB,KAAK+oB,iBAAiB3c,GAAnD4c,EAAQO,EAARP,SAAUpE,EAAe2E,EAAf3E,gBAGbwD,IACAA,EAAQK,IAAI,CAAC,IAAOO,EAAU,KAAQpE,IAEtCwD,EAAQ9B,OAAM,WAIVgD,EAAWE,iBAAkB,EAC7BF,EAAWjD,gCAAgC+B,GAAShuB,MAAK,WAErDguB,EAAQ7B,OAAM,OAAO,SAAA3oB,IACjB6E,EAAAA,EAAAA,wBAAuB8D,8BAA8B,QAAS,8BAAgC3I,GAC9F6H,QAAQ7H,MAAM,8BAA+BA,EACjD,IAGAwqB,EAAQ5C,OAAM,GACdriB,EAAKqiB,OAAQ,CACjB,GACJ,IAER,CAAE,MAAO5nB,IAEL6E,EAAAA,EAAAA,wBAAuB8D,8BAA8B,QAAS,4BAA8B3I,GAC5F6H,QAAQ7H,MAAM,4BAA6BA,EAC/C,CACJ,EA8CA6rB,aAAY,WAAG,IAAA/lB,EAAA,KACX+B,QAAQC,IAAI,kBACR1F,KAAK6jB,QAEL7jB,KAAK6jB,OAAOyC,OAAM,WACd5iB,EAAKmgB,OAAO0C,OAEZ7iB,EAAKmgB,OAAO2B,OAAM,GAClB9hB,EAAK8hB,OAAQ,CACjB,GAER,EASAkE,yBAAwB,SAACtd,GACrBpM,KAAK4lB,gBAAiB,GACtB+D,EAAAA,EAAAA,mBAAkBC,eAClB,IAAIxB,GAAUC,EAAAA,EAAAA,GAAQ,cACtBroB,KAAK2kB,YAAcvY,EACnBpM,KAAK4kB,gBAAkB,gBACvBwD,EAAQK,IAAI,CAAC,IAAOzoB,KAAK2kB,YAAa,KAAQ3kB,KAAK4kB,kBACnDwD,EAAQ7C,UAAS,GACjBvlB,KAAKioB,SACLjoB,KAAKylB,QAAS,CAClB,EACAoE,4BAA2B,SAACzd,GACxBpM,KAAK4lB,gBAAiB,GACtB+D,EAAAA,EAAAA,mBAAkBC,eAClB,IAAIxB,GAAUC,EAAAA,EAAAA,GAAQ,cACtBroB,KAAK2kB,YAAcvY,EACnBpM,KAAK4kB,gBAAkB,wBACvBwD,EAAQK,IAAI,CAAC,IAAOzoB,KAAK2kB,YAAa,KAAQ3kB,KAAK4kB,kBACnDwD,EAAQ7C,UAAS,GACjBvlB,KAAKioB,SACLjoB,KAAKylB,QAAS,CAClB,EACAqE,qBAAoB,SAAC1d,GACjB,IACIpM,KAAK4lB,gBAAiB,GACtB+D,EAAAA,EAAAA,mBAAkBC,eAClB,IAAIxB,GAAUC,EAAAA,EAAAA,GAAQ,cAEtB,IAAKjc,EAAO6c,YAAc7c,EAAOxT,KAE7B,MADA6J,EAAAA,EAAAA,wBAAuB8D,8BAA8B,QAAS,yBACxD,IAAIjM,MAAM,yBAGpB0F,KAAK2kB,YAAcvY,EAAO6c,UAC1BjpB,KAAK4kB,gBAAkBxY,EAAOxT,KAC9BwvB,EAAQK,IAAI,CAAC,IAAOrc,EAAO6c,UAAW,KAAQ7c,EAAOxT,OAErDoH,KAAKioB,SACLjoB,KAAKylB,QAAS,CAClB,CAAE,MAAO7nB,GAGL,MAFA6E,EAAAA,EAAAA,wBAAuB8D,8BAA8B,QAAS,8BAAgC3I,GAC9F6H,QAAQ7H,MAAM,6BAA8BA,GACtCA,CACV,CACJ,EACAmsB,sBAAqB,SAAC3d,GAClBpM,KAAK4lB,gBAAiB,EACtB,IAAIwC,GAAUC,EAAAA,EAAAA,GAAQ,cAEtBroB,KAAK2kB,YADU,2BACevY,EAAS,cACvCpM,KAAK4kB,gBAAkB,wBACvBwD,EAAQK,IAAI,CAAC,IAAOzoB,KAAK2kB,YAAa,KAAQ3kB,KAAK4kB,kBACnD5kB,KAAKioB,SACLjoB,KAAKylB,QAAS,CAClB,EACAuE,sBAAqB,SAAC5d,GAClBpM,KAAK4lB,gBAAiB,GACtB+D,EAAAA,EAAAA,mBAAkBC,eAClB,IAAIxB,GAAUC,EAAAA,EAAAA,GAAQ,cAClB4B,EAAW7d,EAAO8c,aAAe9c,EAAO+c,aAAe/c,EAAOgd,OAAS,IAC3EppB,KAAK2kB,YAAcvY,EAAOid,UAC1BrpB,KAAK4kB,gBAAkBxY,EAAOxT,KAC9BwvB,EAAQK,IAAI,CAAC,IAAOwB,EAAWjqB,KAAK2kB,YAAa,KAAQ3kB,KAAK4kB,kBAC9D5kB,KAAKioB,SACLjoB,KAAKylB,QAAS,CAClB,EAGAyE,wBAAuB,WAEvB,EACAC,mBAAkB,WAElB,EACMllB,oBAAmB,SAACF,EAAYqlB,GAAW,IAAA/lB,EAAA,YAAAxG,EAAA9G,IAAAoF,MAAA,SAAA+F,IAAA,IAAAmoB,EAAAC,EAAA,OAAAvzB,IAAAuB,MAAA,SAAAkK,GAAA,cAAAA,EAAA5F,KAAA4F,EAAAvH,MAAA,OAM7C,GALIovB,GAAe,EAChBD,IACCC,GAAe,GAIdhmB,EAAK5E,cAAe,CAAF+C,EAAAvH,KAAA,QACiC,OAApDwK,QAAQC,IAAI,wCAAwClD,EAAAvH,KAAA,EAC9CoJ,EAAKyhB,mBAAkB,OAE7BzhB,EAAK5E,eAED6qB,EAAWjmB,EAAK5E,cACpB4E,EAAKsgB,YAAc2F,EAAW,OAASvlB,EAAW7I,KAAO,cAGzDmI,EAAKugB,gBAAkB,iCAETyD,EAAAA,EAAAA,GAAQ,cACdI,IAAI,CAAC,IAAOpkB,EAAKsgB,YAAa,KAAQtgB,EAAKugB,kBAC/CyF,GACAhmB,EAAK4jB,SAET5jB,EAAKohB,QAAS,GAEdhgB,QAAQ7H,MAAM,oDAOlB,wBAAA4E,EAAAzF,OAAA,GAAAmF,EAAA,IAjC6CrE,EAkCjD,EACM0sB,kBAAiB,SAACC,GAAO,IAAA3lB,EAAA,YAAAhH,EAAA9G,IAAAoF,MAAA,SAAA4G,IAAA,IAAA4hB,EAAA,OAAA5tB,IAAAuB,MAAA,SAAA2K,GAAA,cAAAA,EAAArG,KAAAqG,EAAAhI,MAAA,OAc3BwK,QAAQC,IAAI,qBAAsB8kB,EAAM5xB,MACxC6M,QAAQC,IAAI,aAAc8kB,EAAMvB,WAChCxjB,QAAQC,IAAI,gBAAiB8kB,EAAMtB,cACnCzjB,QAAQC,IAAI,gBAAiB8kB,EAAMrB,cACnC1jB,QAAQC,IAAI,UAAW8kB,EAAMpB,QAC7B3jB,QAAQC,IAAI,aAAc8kB,EAAMnB,WAE5B1E,EAAc6F,EAAMtB,aAAesB,EAAMrB,aAAeqB,EAAMpB,OAAS,IAAMoB,EAAMnB,WAErEhB,EAAAA,EAAAA,GAAQ,cACdI,IAAI,CAAC,IAAO9D,EAAa,KAAQ6F,EAAM5xB,OAC/CiM,EAAKojB,SACLpjB,EAAK4gB,QAAS,EASlB,yBAAAxiB,EAAAlG,OAAA,GAAAgG,EAAA,IAnC2BlF,EAoC/B,EAGA4sB,2BAA0B,SAACre,GACvBpM,KAAK0qB,eAAiB,aACtB1qB,KAAK2qB,eAAiBve,EAAOid,WAC7BuB,EAAAA,EAAAA,kBAAiBC,eAAiB,WACtC,EACAC,sBAAqB,SAACvpB,EAAM/C,GACxBwB,KAAK+qB,sBACL,IAAMtgB,GAAYC,EAAAA,EAAAA,gBAEdnJ,EAAKypB,gBACLvgB,EAAUwgB,QAAQ1pB,EAAKypB,eAAe9uB,MACtCuO,EAAUygB,cAAc,UAADnqB,OAAWQ,EAAKmB,KAAI,aAAA3B,OAAYqL,OAAO4e,eAAetoB,QACtElE,GACPiM,EAAUwgB,QAAQ1pB,EAAKrF,MACvBuO,EAAU0gB,OAAO,UAADpqB,OAAWQ,EAAKmB,OAChC+H,EAAU2gB,eAAe5sB,EAAQtC,MACjCuO,EAAUygB,cAAc,UAADnqB,OAAWQ,EAAKmB,KAAI,aAAA3B,OAAYvC,EAAQkE,SAE/D+H,EAAUwgB,QAAQ1pB,EAAKrF,MACvBuO,EAAU0gB,OAAO,UAADpqB,OAAWQ,EAAKmB,OAExC,EAEA2oB,aAAY,WAeR,EAEJC,kBAAiB,WACb,IAAMpf,GAAkBI,EAAAA,EAAAA,sBAClBgC,GAAYtD,EAAAA,EAAAA,gBAGlBkB,EAAgBqf,UAAW,EAE3Brf,EAAgBsf,UAAW,EAC3Btf,EAAgBuf,IAAM,EAEtBzrB,KAAKikB,oBAAsB,yBAC3BjkB,KAAI,MAAS,qBACbA,KAAKulB,UAAYjX,EAAUod,QAC/B,EACAC,kBAAiB,WACb,IAAMzf,GAAkBI,EAAAA,EAAAA,sBAGxBJ,EAAgBqf,UAAW,EAE3Brf,EAAgBsf,UAAW,EAE3Btf,EAAgB0f,qBAAsB,EAEtC5rB,KAAKikB,oBAAsB,yBAC3BjkB,KAAI,MAAS,qBACbA,KAAKulB,UAAW,CACpB,EACAsG,qBAAoB,WAChB,IAAM3f,GAAkBI,EAAAA,EAAAA,sBACxBtM,KAAKikB,oBAAsB,wBAC3BjkB,KAAI,MAAS,oBACbkM,EAAgB4f,UAAW,EAC3B5f,EAAgBqf,UAAW,EAC3Brf,EAAgBsf,UAAW,CAC/B,EACA7mB,iBAAgB,SAAClF,GACbO,KAAKP,cAAgBA,CACzB,GAKJ+I,QAAS,CAAC,iGC3vBP,SAASujB,EAAaC,GACzB,IAAM1d,GAAYtD,EAAAA,EAAAA,gBACZkB,GAAkBI,EAAAA,EAAAA,sBAClBL,GAAmBI,EAAAA,EAAAA,uBAEzBH,EAAgBvC,YAAcqiB,EAC9B9f,EAAgB+f,kBAAmB,EACnC/f,EAAgBggB,cAAe,EAG3B5d,EAAUod,UAAYS,OAAOC,WAAa,MAEnClgB,EAAgBqf,SADvBrf,EAAgBuf,IAAM,GAIM,IAAxBvf,EAAgBuf,MAChBvf,EAAgBuf,IAAM,GAG1Bvf,EAAgBmgB,gBAAiB,GAGrCpgB,EAAiB0f,oBAEbzf,EAAgBogB,aAChBpgB,EAAgBogB,YAAa,EAC7BpgB,EAAgBqgB,iBAAkB,EAClCJ,OAAOK,SAASC,UAWhBC,EAAAA,GAAOlG,GAAG,YAAY,SAACmG,GAEfre,EAAUod,UAAYS,OAAOC,WAAa,MAAQlgB,EAAgBqf,SAClErf,EAAgBuf,IAAM,EAEM,IAAxBvf,EAAgBuf,MAChBvf,EAAgBuf,IAAM,GAIqB,KAA3BU,OAAOK,SAASI,SAChB1gB,EAAgB2gB,mBACpCC,uBAAsB,WAClB,IAAMC,EAASvf,SAASwf,eAAe,UACnCD,EACAA,EAAOE,eAAe,CAACC,SAAU,SAEjCf,OAAOgB,SAAS,EAAG,EAE3B,IAEJjhB,EAAgB2gB,mBAAoB,CACxC,IAEJ3gB,EAAgBkhB,aAChBlhB,EAAgBmgB,gBAAiB,EACjCngB,EAAgBmhB,UAAW,GAI3BC,EAAAA,EAAAA,QACI,kBAAMphB,EAAgBkM,aAAa,IACnC,SAACmV,GAEOrhB,EAAgBuf,IADhB8B,EACsB,EAEA,CAE9B,GACA,CAAEC,WAAW,GAGrB,uECnFIC,QAA0B,GAA4B,KAE1DA,EAAwBhyB,KAAK,CAACiyB,EAAOjsB,GAAI,4SAA6S,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,mFAAmF,MAAQ,GAAG,SAAW,yJAAyJ,eAAiB,CAAC,spHAAurH,WAAa,MAEz0I,+ECJIgsB,QAA0B,GAA4B,KAE1DA,EAAwBhyB,KAAK,CAACiyB,EAAOjsB,GAAI,0HAA2H,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,oFAAoF,MAAQ,GAAG,SAAW,yDAAyD,eAAiB,CAAC,gxBAAixB,WAAa,MAElpC,+ECJIgsB,QAA0B,GAA4B,KAE1DA,EAAwBhyB,KAAK,CAACiyB,EAAOjsB,GAAI,4RAA6R,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,kFAAkF,MAAQ,GAAG,SAAW,0GAA0G,eAAiB,CAAC,inMAA4sM,WAAa,MAE9xN,+ECJIgsB,QAA0B,GAA4B,KAE1DA,EAAwBhyB,KAAK,CAACiyB,EAAOjsB,GAAI,0MAA2M,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,yDAAyD,MAAQ,GAAG,SAAW,4EAA4E,eAAiB,CAAC,siZAA6kZ,WAAa,MAEtha,4ECFA,8CCQA,IAAMyK,GAAkBI,EAAAA,EAAAA,woRCRxB,6DC0CwBA,EAAAA,EAAAA,sBAER2f,kBAAmB,EAEnC,IAAI0B,EAAQC,EAYNC,IAPcC,EAAAA,EAAAA,WAAS,iBAAO,CAClC,oEAAqEH,EAAMI,MAAMvqB,QACjF,gEAAiEmqB,EAAMI,MAAMzrB,QAC7E,wEAAyEqrB,EAAMI,MAAMC,QACrF,4DAA6DL,EAAMI,MAAMnwB,MAC1E,IAEsB,iBAAAqwB,KAAAl3B,IAAAoF,MAAG,SAAAgE,IAAA,OAAApJ,IAAAuB,MAAA,SAAA+H,GAAA,cAAAA,EAAAzD,KAAAyD,EAAApF,MAAA,cAAAoF,EAAApF,KAAA,EAClByxB,EAAAA,GAAO5rB,KAAK2hB,MAAM,gBAAe,OACvCiK,EAAAA,GAAOD,SAAS,wBAAApsB,EAAAtD,OAAA,GAAAoD,EAAA,mLACjB,kBAHsB,OAAA8tB,EAAA/vB,MAAA,KAAAD,UAAA,o5CC1DvB,6DCiBA,IAAMiO,GAAkBI,EAAAA,EAAAA,sBAOxBJ,EAAgBgiB,oBAAsB,EACtC,IAAMC,EAAqB,WACzBjiB,EAAgBgiB,oBAAsB/B,OAAOiC,OAC/C,SACAjC,OAAOgB,SAAS,EAAGjhB,EAAgBgiB,i6CC5BnC,0ECqCwB5hB,EAAAA,EAAAA,uBAON,IAAI+hB,MAAOC,sgDC5C7B,0lBCAA,2GCWMhgB,GAAYtD,EAAAA,EAAAA,gBAElB1B,IAAAA,OAAaC,KACbD,IAAAA,OAAaE,KAEb,IAAMmkB,EAAQC,EAIRW,EAAQC,EAEVzjB,GAAO0jB,EAAAA,EAAAA,KAAId,EAAM5iB,KAAO4iB,EAAM5iB,KAAOzB,MAAQqF,GAAGL,EAAU9E,UAAUoF,OAAO,yBAYzE8f,IAVWD,EAAAA,EAAAA,KAAI,OAUPA,EAAAA,EAAAA,KAAI,CAChB,CACE/wB,IAAK,QACLixB,WAAW,EACXxe,MAAO,IAAIke,SAITO,GAAQH,EAAAA,EAAAA,KAAI,CAChBljB,QAAS,CAACsjB,SAAU,aAItBvB,EAAAA,EAAAA,OAAMviB,GAAM,SAAC+jB,GACXP,EAAM,qBAAsB,CAACxjB,KAAM+jB,GACrC,KAEAC,EAAAA,EAAAA,YAAU,WACHpB,EAAM5iB,OACTA,EAAKtT,MAAQ6R,MAAQqF,GAAGL,EAAU9E,UAAUoF,OAAO,wBAEvD,y2CCvDA,iICOM+e,EAAQC,EAQRW,EAAQC,EAEVzjB,GAAO0jB,EAAAA,EAAAA,KAAId,EAAM5iB,OACJ0jB,EAAAA,EAAAA,KAAI,aA+BrBnB,EAAAA,EAAAA,OAAM,CAACviB,IAAO,SAAAikB,GAAe,IAAbF,EAAaG,EAAAD,EAAA,GAAN,GACrBT,EAAM,qBAAsB,CAACxjB,KAAM+jB,GACrC,6+CCnDA,wyXC4SA,IAAMxgB,GAAYtD,EAAAA,EAAAA,gBAEZP,IADgB+H,EAAAA,EAAAA,qBACJ9H,EAAAA,EAAAA,iBACZvI,GAAoBM,EAAAA,EAAAA,wBACpByJ,GAAkBI,EAAAA,EAAAA,sBAExBhD,IAAAA,OAAaC,KACbD,IAAAA,OAAaE,MAEF0lB,EAAAA,EAAAA,MAAUvB,MAArB,IAEIA,EAAQC,EAOLuB,GAASC,EAAAA,EAAAA,sBAATD,MAMDE,EAAe,WACnBF,EAAMG,UAAUvyB,MAClB,EAIIoX,EAAU,GAGRob,IAFcd,EAAAA,EAAAA,KAAI,KACAA,EAAAA,EAAAA,KAAI,OACFA,EAAAA,EAAAA,MAAI,IAGxBe,IAFef,EAAAA,EAAAA,MAAI,IAELA,EAAAA,EAAAA,KAAI,IAClBgB,GAAahB,EAAAA,EAAAA,KAAI,GACjBiB,GAAYjB,EAAAA,EAAAA,KAAI,IAIhBkB,EAAmB,CACvBC,aAAc,GACdC,WAAY,GACZvd,UAAW,CACTc,KAAM,KACNrC,OAAQ,KACR+e,SAAU,MAEZvd,SAAU,GACVwd,aAAc,IACdC,eAAgB,KAChBC,gBAAiB,aACjB/b,UAAW,GACXC,QAAS,GACT+b,OAAQ,CAAC,GAGLC,GAAOC,EAAAA,EAAAA,yWAAQ5hB,CAAC,CAAC,EAAGmhB,IAY1B,SAASU,IACPd,EAAkB93B,OAAQ,CAC5B,CAEA,SAAS64B,EAAmB13B,GAC1Bu3B,EAAKP,aAAeh3B,EAEpB23B,GACF,CAEA,SAASA,IAIP,GAFAb,EAAUj4B,MAAQ,GAEQ,cAAtB04B,EAAKP,aAA8B,CAGrC,IAAIY,EAAY1U,SAASqU,EAAK7d,UAAUc,MAClCqd,EAAc3U,SAASqU,EAAK7d,UAAUvB,QAEZ,OAA5Bof,EAAK7d,UAAUwd,UAAmC,KAAdU,EACtCA,GAAa,GACwB,OAA5BL,EAAK7d,UAAUwd,UAAmC,KAAdU,IAC7CA,EAAY,GAId,IAAME,EAAgBpnB,IAAM6mB,EAAKjc,WAC5Bd,KAAKod,GACLzf,OAAO0f,GACP/Y,OAAO,GACPC,YAAY,GAEX7E,EAAMxJ,MAAQqF,GAAGL,EAAU9E,UAG3BmnB,EAAcrnB,IAAMonB,GAAe/hB,GAAGL,EAAU9E,UAAUkQ,SAAS5G,GAE/C,IAAtB0c,EAAY/3B,OAA0C,IAA3B04B,EAAKN,WAAW/zB,OAE7C4zB,EAAUj4B,MAAQ,8CACa,IAAtB+3B,EAAY/3B,OAAgB04B,EAAKjc,UAGX,IAAtBsb,EAAY/3B,OAAek5B,EAEpCjB,EAAUj4B,MAAQ,oCACa,IAAtB+3B,EAAY/3B,OAAe6R,IAAM6mB,EAAKhc,SAASwF,QAAQrQ,IAAM6mB,EAAKjc,WAAW7D,IAAI,EAAG,UAAUA,IAAI,EAAG,SAG9Gqf,EAAUj4B,MAAQ,uGAAHsJ,OAA2G6vB,GAAmBn5B,MAAK,iEACnH,IAAtB+3B,EAAY/3B,MACrB+V,SAASwf,eAAe,uBAAuB5N,YACtCoQ,EAAY/3B,MAAQg4B,EAAWh4B,OAExC+3B,EAAY/3B,QAZZi4B,EAAUj4B,MAAQ,6BActB,MAAO,GAA0B,aAAtB04B,EAAKP,aAA6B,CAE3C,IAAM9c,EAAMxJ,MAAQqF,GAAGL,EAAU9E,UAI3BmnB,EAAcrnB,IAAM6mB,EAAKjc,WAAWvF,GAAGL,EAAU9E,UAAUkQ,SAAS5G,GAEhD,IAAtB0c,EAAY/3B,OAAgB04B,EAAKjc,UAGJ,IAAtBsb,EAAY/3B,OAAek5B,EAEpCjB,EAAUj4B,MAAQ,oCACa,IAAtB+3B,EAAY/3B,MACrB+V,SAASwf,eAAe,uBAAuB5N,YACtCoQ,EAAY/3B,MAAQg4B,EAAWh4B,OAExC+3B,EAAY/3B,QARZi4B,EAAUj4B,MAAQ,6BAUtB,CAEF,CAEA,SAASo5B,KACmB,cAAtBV,EAAKP,cAAgCJ,EAAY/3B,MAAQ,EAC3D+3B,EAAY/3B,QACmB,aAAtB04B,EAAKP,cAA+BJ,EAAY/3B,MAAQ,EACjE+3B,EAAY/3B,MAAQ,EACW,aAAtB04B,EAAKP,cACdJ,EAAY/3B,OAEhB,CAEA,SAASq5B,GAASC,GAEhBrB,EAAUj4B,MAAQ,GACQ,cAAtB04B,EAAKP,aACmB,IAAtBJ,EAAY/3B,OAA0C,IAA3B04B,EAAKN,WAAW/zB,OAE7C4zB,EAAUj4B,MAAQ,8CACc,IAAtB+3B,EAAY/3B,QAAgB04B,EAAKjc,WAAuB,IAAR6c,IAAcZ,EAAKjc,UAE7Ewb,EAAUj4B,MAAQ,8BACc,IAAtB+3B,EAAY/3B,OAAe6R,IAAM6mB,EAAKjc,WAAWwF,SAASpQ,MAAQ+G,IAAI,EAAG,OAAOS,QAAQ,SAAqB,IAARigB,GAAaznB,IAAM6mB,EAAKjc,WAAWwF,SAASpQ,MAAQ+G,IAAI,EAAG,OAAOS,QAAQ,QAEzL4e,EAAUj4B,MAAQ,uCAElB+3B,EAAY/3B,MAAQs5B,EACS,aAAtBZ,EAAKP,eACY,IAAtBJ,EAAY/3B,OAAgB04B,EAAKjc,UAGJ,IAAtBsb,EAAY/3B,OAAe6R,IAAM6mB,EAAKjc,WAAWwF,SAASpQ,MAAQ+G,IAAI,EAAG,OAAOS,QAAQ,QAEjG4e,EAAUj4B,MAAQ,uCAElB+3B,EAAY/3B,MAAQs5B,EALpBrB,EAAUj4B,MAAQ,8BAQxB,CAGA,IAAMu5B,GAAY,CAAC,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YAG/EC,GAAmB,CACvB,OAAU,KACV,OAAU,IACV,QAAW,KACX,UAAa,IACb,SAAY,KACZ,OAAU,IACV,SAAY,MAIRC,GAAkB,CACtB,OAAU,EACV,OAAU,EACV,QAAW,EACX,UAAa,EACb,SAAY,EACZ,OAAU,EACV,SAAY,GAIRC,IAA+BrD,EAAAA,EAAAA,WAAS,WAO5C,OAL2BqC,EAAKN,WAC3BthB,KAAI,SAAAoE,GAAG,MAAK,CAACA,IAAAA,EAAK9L,MAAOmqB,GAAUI,QAAQze,GAAK,IAChDwI,MAAK,SAACvjB,EAAGwjB,GAAC,OAAKxjB,EAAEiP,MAAQuU,EAAEvU,KAAK,IAChC0H,KAAI,SAAA8iB,GAAS,OAAIJ,GAAiBI,EAAU1e,IAAI,IAE3B6U,KAAK,KACjC,KAGA8F,EAAAA,EAAAA,QAAM,kBAAM6C,EAAKN,UAAU,IAAE,SAACyB,GAEF,IAAtB9B,EAAY/3B,OAAe65B,EAAQx1B,OAAS,IAC9C4zB,EAAUj4B,MAAQ,GAEtB,GAAG,CAAC+1B,WAAW,IAIf,IAAMhiB,GAAQ8M,MAAMiZ,KAAK,CAACz1B,OAAQ,KAAK,SAAC01B,EAAG95B,GAAC,OAAMA,EAAI,GAAGgU,WAAWC,SAAS,EAAG,IAAI,IAGhF8lB,IAAqB3D,EAAAA,EAAAA,WAAS,WAEhC,OAAIqC,EAAK7d,UAAUc,MAAQ+c,EAAK7d,UAAUvB,QAAUof,EAAK7d,UAAUwd,SAC1D,GAAP/uB,OAAUovB,EAAK7d,UAAUc,KAAI,KAAArS,OAAIovB,EAAK7d,UAAUvB,OAAM,KAAAhQ,OAAIovB,EAAK7d,UAAUwd,UAElE,EAEX,IAGM4B,IAAgB5D,EAAAA,EAAAA,WAAS,WAC7B,MAA0B,MAAtBqC,EAAKJ,aACA,CAAC,MACuB,MAAtBI,EAAKJ,aACP,CAAC,MAED,CAAC,KAAM,KAElB,IAGM4B,GAAwB,WAC5B,IAAIC,EAAU,GAAH7wB,OAAMovB,EAAKJ,aAAY,SAAAhvB,OAA8B,MAAtBovB,EAAKJ,aAAuB,GAAK,KACjD,MAAtBI,EAAKJ,aACP6B,EAAU,aACuB,OAAxBzB,EAAKH,gBAAiD,MAAtBG,EAAKJ,eAC9C6B,GAAW,mBAEbzB,EAAKF,gBAAkB2B,CACzB,GAGAtE,EAAAA,EAAAA,QAAM,kBAAM6C,EAAKH,cAAc,IAAE,WAC/B2B,IACF,GAAG,CAACnE,WAAW,KAGfF,EAAAA,EAAAA,QAAM,kBAAM6C,EAAKJ,YAAY,IAAE,SAAC8B,GACd,MAAZA,GAA+B,MAAZA,GAA+B,MAAZA,EACxC1B,EAAKH,eAAiB,KACD,MAAZ6B,IACT1B,EAAKH,eAAiB,MAGxB2B,IACF,GAAG,CAACnE,WAAW,IAGfmE,KAGA,IAAMG,IAA+BhE,EAAAA,EAAAA,WAAS,WAC5C,OAAKqC,EAAKjc,UAIH5K,IAAM6mB,EAAKjc,WAAWtF,OAAO,WAJR,EAO9B,IAEMmjB,IAAqBjE,EAAAA,EAAAA,WAAS,WAClC,OAAKqC,EAAKjc,UACH5K,IAAM6mB,EAAKjc,WAAWtF,OAAO,kBADR,EAE9B,IAEIojB,IAAmBlE,EAAAA,EAAAA,WAAS,WAC9B,OAAKqC,EAAKhc,QACH7K,IAAM6mB,EAAKhc,SAASvF,OAAO,kBADR,EAE5B,IAGMqjB,IAAenE,EAAAA,EAAAA,WAAS,WAC5B,IAAMoE,EAAqB/B,EAAKN,WAAWthB,KAAI,SAAAoE,GAAG,OAAIue,GAAgBve,EAAI,IAG1E,MAAO,CACL,CACEwf,OAAQ,CACNC,SALqBj7B,OAAOuC,OAAOw3B,IAAiB7qB,QAAO,SAAAgsB,GAAM,OAAKH,EAAmBI,SAASD,EAAO,MASjH,IAEMzB,IAAqBnC,EAAAA,EAAAA,KAAI,IAEzB8D,GAA0B,SAAHtE,GAAe,IAAVljB,EAAIkjB,EAAJljB,KAChC2kB,EAAUj4B,MAAQ,GACA6R,IAAMyB,GAExBolB,EAAKjc,UAAYnJ,EAKjBoJ,EAAU7K,IAAMyB,GAAMsF,IAAI,EAAG,UAI7B,IADA,IAAMmiB,EAAelpB,IAAMyB,GAAM4H,MAC1BwB,EAAQxB,QAAU6f,GACvBre,EAAUA,EAAQ9D,IAAI,EAAG,OAIvB8D,EAAQuP,KAAKpa,IAAMyB,GAAMsF,IAAI,EAAG,UAAW,QAAU,IACvD8D,EAAUA,EAAQV,SAASU,EAAQuP,KAAKpa,IAAMyB,GAAMsF,IAAI,EAAG,UAAW,QAAU,EAAG,SAIrF8f,EAAKhc,QAAUA,EAEfyc,GAAmBn5B,MAAQ6R,IAAM6mB,EAAKhc,SAASvF,OAAO,iBAExD,EAGM6jB,GAAwB,SAAHzD,GAAe,IAAVjkB,EAAIikB,EAAJjkB,KAC9BtF,QAAQC,IAAI,kBAAoBqF,GAEhColB,EAAKhc,QAAUpJ,CAIjB,EAEM2nB,GAAM,iBAAAC,KAAA57B,IAAAoF,MAAG,SAAAgE,IAAA,IAAAmiB,EAAA,OAAAvrB,IAAAuB,MAAA,SAAA+H,GAAA,cAAAA,EAAAzD,KAAAyD,EAAApF,MAAA,OAMX,OALF23B,KAA0BvyB,EAAAzD,KAAA,EAGlB0lB,EAAU7X,EAAUooB,eAAe1C,GAEzC9vB,EAAApF,KAAA,EAEuBwP,EAAUqoB,kBAAkBxQ,GAAQ,OAA7CjiB,EAAA1F,KAEdm2B,GAAS,GAlWX3B,EAAMG,UAAUlf,QAmWC/P,EAAApF,KAAA,iBAAAoF,EAAAzD,KAAA,GAAAyD,EAAAI,GAAAJ,EAAA,SAEfoF,QAAQ7H,MAAM,yBAAwByC,EAAAI,IACtCqwB,GAAS,GACLzwB,EAAAI,GAAML,UAAYC,EAAAI,GAAML,SAASI,MACnC2vB,EAAKD,OAAS7vB,EAAAI,GAAML,SAASI,KAC7B2B,EAAkBS,qBAAqButB,EAAKD,OAAQ,QAAS,OAE7DC,EAAKD,OAAS7vB,EAAAI,GAAM6B,SAAW,4BAC/BH,EAAkBS,qBAAqButB,EAAKD,OAAQ,QAAS,MAC9D,yBAAA7vB,EAAAtD,OAAA,GAAAoD,EAAA,iMAEJ,kBAvBW,OAAAwyB,EAAAz0B,MAAA,KAAAD,UAAA,KAoPZ,SAAS80B,KACPvlB,SAASwf,eAAe,0BAA0BgG,QAniBlD77B,OAAO4I,OAAOowB,EAAMR,GAKpBQ,EAAKD,OAAS,CAAC,EAmiBfb,IACAG,EAAY/3B,MAAQ,CAEtB,CAEA,SAASm7B,KACPplB,SAASwf,eAAe,uBAAuBgG,OACjD,CAEA,IAAMC,GAAqB,WACzBzD,EAAY/3B,MAAQ,EACpBs7B,IAEF,EAUMG,IAAmBzE,EAAAA,EAAAA,KAAIngB,EAAU6kB,mBAGvC7F,EAAAA,EAAAA,QAAM,kBAAMhf,EAAU6kB,gBAAgB,IAAE,SAACC,GACvCF,GAAiBz7B,MAAQ27B,CAE3B,IAIA,IAAMC,GAAgB,SAAC1G,GACH,WAAdA,EAAMjvB,MACR+H,QAAQC,IAAI,8BACZ2pB,IACAG,EAAY/3B,MAAQ,EACpByU,EAAgBonB,YAAY,UAADvyB,OAAW4sB,EAAMpsB,KAAKmB,KAAI,YAGzD,EAcA,SAAS6wB,KAEPjlB,EAAUklB,gBAAgBN,GAAiBz7B,MAE7C,QAhBAs3B,EAAAA,EAAAA,YAAU,WACRvhB,SAASimB,iBAAiB,UAAWJ,GACvC,KAEAK,EAAAA,EAAAA,cAAY,WACVlmB,SAASmmB,oBAAoB,UAAWN,GAC1C,6vaCp8BA,GAFoB,61OCEpB,sECgCA,IAAM5oB,GAAYC,EAAAA,EAAAA,gBAIdijB,IAFSuB,EAAAA,EAAAA,MAAUvB,MAEXC,GAINsC,GAASzB,EAAAA,EAAAA,OAETsE,EAAa,WACjBvlB,SAASwf,eAAe,uBAAuBgG,OACjD,EAEMY,EAAkB,iBAAA3F,KAAAl3B,KAAAoF,MAAG,SAAAgE,IAAA,OAAApJ,KAAAuB,MAAA,SAAA+H,GAAA,cAAAA,EAAAzD,KAAAyD,EAAApF,MAAA,cAAAoF,EAAApF,KAAA,EACnBwP,EAAUmpB,mBAAmB,oBAAqBjG,EAAMpsB,KAAKE,IAAG,OACtEsxB,IAAY,wBAAA1yB,EAAAtD,OAAA,GAAAoD,EAAA,qLACb,kBAHuB,OAAA8tB,EAAA/vB,MAAA,KAAAD,UAAA,81TC9CxB,2FCqGAqL,IAAAA,OAAaC,KACbD,IAAAA,OAAaE,KAEb,IAsFIqqB,EACAC,EAvFErpB,GAAYC,EAAAA,EAAAA,gBACZ4D,GAAYtD,EAAAA,EAAAA,gBACZ7I,GAAoBM,EAAAA,EAAAA,wBAEpB+H,GAAO0kB,EAAAA,EAAAA,MAAUvB,MAEjBA,EAAQC,EAMRsC,GAASzB,EAAAA,EAAAA,OAETsF,GAAoBjG,EAAAA,EAAAA,WAAS,WAGjC,IAAMhb,EAAMxJ,MACZ,GAAImB,EAAUupB,iBAAmBvpB,EAAUupB,gBAAgBC,eAAgB,CACzE,IAAMC,EAAoBtf,KAAKE,MAAMrK,EAAUupB,gBAAgBC,gBAG/D,GAFAxuB,QAAQC,IAAI,yBAA0BwuB,GAElC5b,MAAMC,QAAQ2b,EAAkBD,gBAAiB,CACnD,IAAM9d,EAAgB+d,EAAkBD,eACnC1lB,KAAI,SAAA4lB,GACH,IAAMppB,EAAOzB,IAAAA,GAAS6qB,EAASD,EAAkB1qB,UAEjD,OADA/D,QAAQC,IAAI,QAASqF,EAAKW,YACnBX,CACT,IACC1E,QAAO,SAAA0E,GAAI,OAAIA,EAAK4O,QAAQ7G,EAAI,IAChCqI,MAAK,SAACvjB,EAAGwjB,GAAC,OAAKxjB,EAAIwjB,CAAC,IAGzB,OADA3V,QAAQC,IAAI,iBAAkByQ,GACvBA,EAAcra,OAAS,EAAIqa,EAAc,GAAG1B,cAAgB,IACrE,CACF,CACA,OAAO,IACT,IAEM2f,GAAoBtG,EAAAA,EAAAA,WAAS,WACjC,OAAOxkB,IAAMmB,EAAUupB,gBAAgB1hB,WAAWqH,QAAQrQ,MAC5D,IAGM+qB,EAAa,SAACC,EAASC,GAC3B,IAAMC,EAAehnB,SAASwf,eAAesH,GAC7C,GAAKE,EAAL,CAEA,IAAMC,EAAW,IAAIC,kBAAiB,SAACC,GAAkB,IACrBre,EADqBD,EAAAG,GAClCme,GAAa,IAAlC,IAAAte,EAAAnd,MAAAod,EAAAD,EAAAhf,KAAAkD,MAAoC,KAA3Bq6B,EAAQte,EAAA7e,MACO,eAAlBm9B,EAASh8B,MAAoD,SAA3Bg8B,EAASC,gBACxCL,EAAaM,aAAa,SAC7BP,IAGN,CAAC,OAAAp2B,GAAAkY,EAAArf,EAAAmH,EAAA,SAAAkY,EAAApd,GAAA,CACH,IAIA,OAFAw7B,EAASM,QAAQP,EAAc,CAAEQ,YAAY,IAEtCP,CAdkB,CAe3B,EAEMQ,EAA0B,eAAAhH,EAAApwB,GAAA9G,KAAAoF,MAAG,SAAAgE,IAAA,OAAApJ,KAAAuB,MAAA,SAAA+H,GAAA,cAAAA,EAAAzD,KAAAyD,EAAApF,MAAA,cAAAoF,EAAAzD,KAAA,EAAAyD,EAAApF,KAAA,EAEzBwP,EAAUyqB,mBAAkB,EAAM1qB,EAAK2qB,KAAKj5B,KAAMyxB,EAAMpsB,KAAKmB,MAAK,OACxE8K,SAASwf,eAAe,0BAA0B5N,YAClDjd,EAAkBS,qBAAqB,oBAAqB,QAAOvC,EAAApF,KAAA,gBAAAoF,EAAAzD,KAAA,EAAAyD,EAAAI,GAAAJ,EAAA,SAEnE6vB,EAAOz4B,MAAQ,gDACf0K,EAAkBS,qBAAqBstB,EAAOz4B,MAAO,QAAS,KAAM,yBAAA4I,EAAAtD,OAAA,GAAAoD,EAAA,kBAEvE,kBAT+B,OAAA8tB,EAAA/vB,MAAA,KAAAD,UAAA,KAW1Bm3B,EAAuB,eAAApG,EAAAnxB,GAAA9G,KAAAoF,MAAG,SAAAyE,IAAA,OAAA7J,KAAAuB,MAAA,SAAAuI,GAAA,cAAAA,EAAAjE,KAAAiE,EAAA5F,MAAA,cAAA4F,EAAAjE,KAAA,EAAAiE,EAAA5F,KAAA,EAEtBwP,EAAUyqB,mBAAkB,EAAM1qB,EAAK2qB,KAAKj5B,KAAMyxB,EAAMpsB,KAAKmB,MAAK,OACxE8K,SAASwf,eAAe,uBAAuB5N,YAC/Cjd,EAAkBS,qBAAqB,oBAAqB,QAAO/B,EAAA5F,KAAA,gBAAA4F,EAAAjE,KAAA,EAAAiE,EAAAJ,GAAAI,EAAA,SAEnEqvB,EAAOz4B,MAAQ,gDACf0K,EAAkBS,qBAAqBstB,EAAOz4B,MAAO,QAAS,KAAM,yBAAAoJ,EAAA9D,OAAA,GAAA6D,EAAA,kBAEvE,kBAT4B,OAAAouB,EAAA9wB,MAAA,KAAAD,UAAA,YAe7B8wB,EAAAA,EAAAA,WAASlxB,GAAA9G,KAAAoF,MAAC,SAAAiH,IAAA,IAAAiyB,EAAA,OAAAt+B,KAAAuB,MAAA,SAAA+K,GAAA,cAAAA,EAAAzG,KAAAyG,EAAApI,MAAA,OAeR,GAdA44B,EAA4BQ,EAAW,yBAAwBx2B,GAAA9G,KAAAoF,MAAE,SAAA+F,IAAA,OAAAnL,KAAAuB,MAAA,SAAAkK,GAAA,cAAAA,EAAA5F,KAAA4F,EAAAvH,MAAA,cAAAuH,EAAAvH,KAAA,EACzDwP,EAAUyqB,mBAAkB,EAAO1qB,EAAK2qB,KAAKj5B,KAAMyxB,EAAMpsB,KAAKmB,MAAK,wBAAAF,EAAAzF,OAAA,GAAAmF,EAAA,MAG3E4xB,EAAyBO,EAAW,sBAAqBx2B,GAAA9G,KAAAoF,MAAE,SAAA4G,IAAA,OAAAhM,KAAAuB,MAAA,SAAA2K,GAAA,cAAAA,EAAArG,KAAAqG,EAAAhI,MAAA,cAAAgI,EAAAhI,KAAA,EACnDwP,EAAUyqB,mBAAkB,EAAO1qB,EAAK2qB,KAAKj5B,KAAMyxB,EAAMpsB,KAAKmB,MAAK,wBAAAO,EAAAlG,OAAA,GAAAgG,EAAA,QAMrEsyB,EAAO1H,EAAMpsB,KAAK8zB,MAKfC,oBAAsBD,EAAKE,YAAc/qB,EAAK2qB,KAAKj5B,KAAI,CAAAmH,EAAApI,KAAA,eAAAoI,EAAApI,KAAA,EAExDwP,EAAUyqB,mBAAkB,EAAO1qB,EAAK2qB,KAAKj5B,KAAMyxB,EAAMpsB,KAAKmB,MAAK,wBAAAW,EAAAtG,OAAA,GAAAqG,EAAA,OAK7EoyB,EAAAA,EAAAA,kBAAgB,WACV3B,GAA2BA,EAA0B4B,aACrD3B,GAAwBA,EAAuB2B,YACrD,80eC5NA,wOC2FA,IAAMC,GAAYhV,EAAAA,EAAAA,gBACZjW,GAAYC,EAAAA,EAAAA,gBACZ4D,GAAYtD,EAAAA,EAAAA,gBACZ7I,GAAoBM,EAAAA,EAAAA,wBAG1B6G,IAAAA,OAAaqsB,MACbrsB,IAAAA,OAAaE,KACbF,IAAAA,OAAaC,KAEb,IAAIokB,EAAQC,EAgBNgI,IAFenH,EAAAA,EAAAA,KAAIngB,EAAU9E,WAEbilB,EAAAA,EAAAA,KAAI,MAC1BoH,EAAAA,EAAAA,cAAY,WACNvnB,EAAU9E,WACZosB,EAAcn+B,MAAQ6R,IAAAA,IAAUqkB,EAAMmI,mBAAmBnnB,GAAGL,EAAU9E,UAAUoF,SAEpF,KAOqB6f,EAAAA,EAAAA,KAAI,IALzB,IAMMsH,EAAWpI,EAAMqI,UAAU,kBAE7BF,GAAoBrH,EAAAA,EAAAA,KAAI,MACxBwH,GAAcxH,EAAAA,EAAAA,MAAI,GAEtB,SAASyH,IACL1oB,SAASwf,eAAe+I,GAAU3W,WACtC,CAWA,IAaM+W,EAAwB,WAC1BF,EAAYx+B,OAASw+B,EAAYx+B,KACrC,EAMM2+B,EAA0B,SAACtH,GAC7BuH,EAA0B5+B,MAAQq3B,EAClCgH,EAAoBhH,EAAQ/jB,KAE5BurB,EAAwBR,EAE5B,EAEArwB,QAAQC,IAAI,sCAAwC4I,EAAU9E,UAO9D,IAAI6sB,GAA4B5H,EAAAA,EAAAA,KAAI,IAChC8H,GAA6B9H,EAAAA,EAAAA,KAAI,IAM/B6H,EAA0B,SAACR,GACzBO,EAA0B5+B,MAG1B8+B,EAA2B9+B,MART,SAAC++B,EAAU5iB,GACjC,OAAOhF,EAAAA,GAAAA,IAAO4nB,EAAU,yBAA0B,CAAE5iB,aAAAA,GACxD,CAM2C6iB,CAC/B,IAAIntB,IAAJ,CAAUwsB,GAAmBnnB,GAAGL,EAAU9E,UAAUoF,UAIxD2nB,EAA2B9+B,MAAQ,EAE3C,EAAE,SAEai/B,EAAmBC,EAAAC,GAAA,OAAAC,EAAA34B,MAAC,KAADD,UAAA,UAAA44B,UAuCjC,SAvCiC9/B,KAAAoF,MAAlC,SAAAgE,EAAmC61B,EAAWc,GAAQ,IAAA12B,EAAA22B,EAAAC,EAAAz0B,EAAA,OAAAxL,KAAAuB,MAAA,SAAA+H,GAAA,cAAAA,EAAAzD,KAAAyD,EAAApF,MAAA,cAAAoF,EAAAzD,KAAA,EAAAyD,EAAApF,KAAA,EAEvBqF,MAAMQ,KAAK,qCAAsC,CACpEm2B,WAAYjB,EACZkB,cAAeJ,EACfK,2BAA4BZ,EAA2B9+B,QACzD,OAJI2I,EAAQC,EAAA1F,KAMdwH,EAAkBS,qBAAqBxC,EAASI,KAAK8B,QAAS,WAE1DlC,EAASI,KAAK42B,MAEdA,MAAMh3B,EAASI,KAAK42B,QAIhBL,EAAiB32B,EAASI,MAEV,KADhBw2B,EAAevsB,EAAU4sB,SAAS72B,KAAKyG,WAAU,SAAAqwB,GAAE,OAAIA,EAAG71B,KAAOs1B,EAAeE,UAAU,OAE9FxsB,EAAU4sB,SAAS72B,KAAKw2B,GAAcO,gBAAkBR,EAAeS,kBACvE/sB,EAAU4sB,SAAS72B,KAAKw2B,GAAcS,yBAA2BV,EAAeI,4BAE1E50B,EAASkI,EAAUitB,gBAAgBl2B,MAAK,SAAAe,GAAM,OAAIA,EAAOd,KAAOs1B,EAAeS,iBAAiB,OAEpG/sB,EAAU4sB,SAAS72B,KAAKw2B,GAAcW,cAAgBp1B,EAAOrG,QAGlEmE,EAAApF,KAAA,gBAAAoF,EAAAzD,KAAA,EAAAyD,EAAAI,GAAAJ,EAAA,SAEGA,EAAAI,GAAML,WACR+B,EAAkBS,qBAAqBvC,EAAAI,GAAML,SAASI,KAAM,SAC5DiK,EAAUmtB,aAAev3B,EAAAI,GAAML,SAASI,KAAK5C,OAG9C,QAGL4P,SAASwf,eAAe+I,GAAU/C,QAClCtG,EAAAA,GAAOD,SAAQ,yBAAApsB,EAAAtD,OAAA,GAAAoD,EAAA,iBAtCe02B,kLAuCjCA,EAAA34B,MAAA,KAAAD,UAAA,CAED,IAAM45B,EAAc,WAChBrqB,SAASwf,eAAe+I,GAAU/C,QAClCxlB,SAASwf,eAAe,uBAAuBW,EAAMqI,WAAWhD,QAChExlB,SAASwf,eAAe,0BAA0BW,EAAMqI,WAAWhD,QACnEtG,EAAAA,GAAOD,QACX,EAEMqL,GAAqBhK,EAAAA,EAAAA,WAAS,iBAAO,CACvC,sDAA+E,IAAxBH,EAAM4J,gBAC7D,uCAAgE,IAAxB5J,EAAM4J,gBAC9C,qDAA8E,IAAxB5J,EAAM4J,gBAC5D,iDAA0E,IAAxB5J,EAAM4J,gBACxD,sDAA+E,IAAxB5J,EAAM4J,gBAC7D,kDAA2E,IAAxB5J,EAAM4J,gBACzD,mEAA4F,IAAxB5J,EAAM4J,gBAC1E,kDAA2E,IAAxB5J,EAAM4J,gBACzD,+DAAwF,IAAxB5J,EAAM4J,gBACtE,+CAAwE,KAAxB5J,EAAM4J,gBACzD,wyDAjGG/pB,SAASwf,eAAe,0BAA0BW,EAAMqI,WAAW5W,ilBAlB3C4W,mBACP,KADkBc,QAG/Bb,EAAYx+B,OAASw+B,EAAYx+B,MACb,IAAbq/B,EAEPtpB,SAASwf,eAAe,uBAAyBW,EAAMqI,WAAW5W,YAEhD,IAAb0X,GACLJ,EAAoBV,EAAWc,IATZ,IAACd,EAAWc,84DCpJvC,wHCiBMrsB,GAAYC,EAAAA,EAAAA,gBAElBD,EAAUuV,oBAAqB,EAE/B,IAAI2N,EAAQC,EAIRuC,GAAO4H,EAAAA,EAAAA,IAAQ,CACjBhY,KAAM,KAERoQ,EAAKpQ,KAAO4N,EAAMnvB,QAAQw5B,MAC1B,IAAMC,EAAOzJ,EACP0J,GAAczJ,EAAAA,EAAAA,KAAI,MAOxB,SAAS0J,IACHhI,EAAKpQ,OAAS4N,EAAMnvB,QAAQw5B,QAC9BvtB,EAAUqV,SAAW,GAEvBsY,GACF,CAEA,SAASA,IAaP3tB,EAAUuV,oBAAqB,EAC/BvV,EAAUutB,MAAQ7H,EAAKpQ,KACvBkY,EAAK,sBACL33B,MAAMQ,KAAK,uBAAwB,CACjCk3B,MAAO7H,EAAKpQ,KACZiW,UAAWrI,EAAMnvB,QAAQiD,KACxBrH,MAAK,SAAAgG,GACNqK,EAAUqV,SAAW,EACrBra,QAAQC,IAAI,cACZ+E,EAAUuV,oBAAqB,CACjC,IAAE,OACS,SAAApiB,GACL6H,QAAQC,IAAI9H,EACd,GACN,QAtCAmxB,EAAAA,EAAAA,YAAU,WACRmJ,EAAYzgC,MAAM4gC,OACpB,i1QCwCA,IAAMnsB,GAAkBI,EAAAA,EAAAA,sBAClBopB,GAAYhV,EAAAA,EAAAA,gBACZjW,GAAYC,EAAAA,EAAAA,gBACZ4D,GAAYtD,EAAAA,EAAAA,gBAEZ2iB,EAAQC,EAQR0K,IADsB7J,EAAAA,EAAAA,MAAI,GACRngB,EAAUxD,yBAAyB6iB,EAAMnvB,QAAQ85B,gBAAiB,oBACpFb,EAA2BnpB,EAAUxD,yBAAyB6iB,EAAMnvB,QAAQi5B,yBAA0B,4BAAmCnpB,EAAUiqB,sBAEzJ9tB,EAAUqV,SAAW,EACrB,IAAM0Y,GAAe/J,EAAAA,EAAAA,KAAI,GAEzB,SAASgK,IACP9K,EAAMnvB,QAAQw5B,MAAQvtB,EAAUutB,MAChCQ,EAAa/gC,OAAS,CACxB,EAEWsgC,EAAAA,EAAAA,IAAQ,CACjBhY,KAAM,KAGR,SAAS2Y,IACPjuB,EAAUqV,SAAW6N,EAAMnvB,QAAQiD,EACrC,CAMA,IAAMk3B,EAAiB,iBAAA1K,KAAAl3B,KAAAoF,MAAG,SAAAgE,IAAA,OAAApJ,KAAAuB,MAAA,SAAA+H,GAAA,cAAAA,EAAAzD,KAAAyD,EAAApF,MAAA,OAC0D,IAA7DmL,QAAQ,sDAEX,CAAF/F,EAAApF,KAAA,SAEuC,OAFvCoF,EAAAzD,KAAA,EAEZ6N,EAAUmuB,sBAAwBjL,EAAMnvB,QAAQiD,GAAGpB,EAAApF,KAAA,EAC7CqF,MAAK,OAAQ,UAADS,OAAW4sB,EAAMvrB,SAAQ,aAAArB,OAAY4sB,EAAMnvB,QAAQkE,OAChEtI,MAAK,SAACgG,GACmB,MAApBA,EAASmC,QACXkI,EAAUmtB,aAAex3B,EAASI,KAAK8B,QACvCoqB,EAAAA,GAAOD,SACPhiB,EAAUmuB,sBAAwB,IAElCnuB,EAAUmtB,aAAex3B,EAASy4B,WAClCpzB,QAAQ7H,MAAM,yBAA0BwC,EAASy4B,YACjDpuB,EAAUmuB,sBAAwB,EAClClM,EAAAA,GAAOD,SAEX,IAAE,OACK,SAAC7uB,GACN6H,QAAQ7H,MAAM,+BAAgCA,GAC9C6M,EAAUmtB,aAAeh6B,EACzB6M,EAAUmuB,sBAAwB,EAClClM,EAAAA,GAAOD,QACT,IAAE,OAAApsB,EAAApF,KAAA,gBAAAoF,EAAAzD,KAAA,EAAAyD,EAAAI,GAAAJ,EAAA,SAENoF,QAAQ7H,MAAM,+BAA8ByC,EAAAI,IAAS,yBAAAJ,EAAAtD,OAAA,GAAAoD,EAAA,kMAG1D,kBA7BsB,OAAA8tB,EAAA/vB,MAAA,KAAAD,UAAA,igHCjHnB66B,GAAU,CAEdA,OAAiB,OACjBA,WAAoB,GAEP,KAAI,KAASA,IAIX,KAAQC,uBCNvB,MAEA,IAFiC,QAAgB,GAAQ,CAAC,CAAC,YAAY,odCDvE,sDCmCA,IAAM7sB,GAAkBI,EAAAA,EAAAA,sBAClBopB,GAAYhV,EAAAA,EAAAA,gBACZjW,GAAYC,EAAAA,EAAAA,+kCCxCPsZ,MAAM,4CACTgV,EAAAA,EAAAA,oBA8BQ,SA9BDhV,MAAM,4BAA0B,EAEvCgV,EAAAA,EAAAA,oBA2BK,YA1BDA,EAAAA,EAAAA,oBASK,MATDhV,MAAM,+BAA6B,EACnCgV,EAAAA,EAAAA,oBAOM,OAPDhV,MAAM,qBAAmB,EAC1BgV,EAAAA,EAAAA,oBAKM,aAJFA,EAAAA,EAAAA,oBAGM,OAHDhV,MAAM,6BAA4B,iBAQnDgV,EAAAA,EAAAA,oBAEK,MAFDhV,MAAM,mDAAkD,WAI5DgV,EAAAA,EAAAA,oBAEK,MAFDhV,MAAM,mDAAkD,4BAI5DgV,EAAAA,EAAAA,oBAEK,MAFDhV,MAAM,mDAAkD,oBAI5DgV,EAAAA,EAAAA,oBAEK,MAFDhV,MAAM,8DAA6D,gBAEvE,IAGJgV,EAAAA,EAAAA,oBAEQ,SAFDhV,MAAM,qCAAmC,UCjCxD,MAAM,GAAS,CAAC,EAKhB,IAFiC,QAAgB,GAAQ,CAAC,CAAC,gDDFvDiV,EAAAA,EAAAA,oBAoCQ,QApCRC,GAFJC,oDECSnV,MAAM,iCAEbgV,EAAAA,EAAAA,oBA+BK,YA9BHA,EAAAA,EAAAA,oBASK,MATDhV,MAAM,+BAA6B,EACrCgV,EAAAA,EAAAA,oBAOM,OAPDhV,MAAM,qBAAmB,EAC5BgV,EAAAA,EAAAA,oBAKM,aAJJA,EAAAA,EAAAA,oBAGM,OAHDhV,MAAM,+BAA8B,iBAQ/CgV,EAAAA,EAAAA,oBAEK,MAFDhV,MAAM,qDAAoD,iBAI9DgV,EAAAA,EAAAA,oBAEK,MAFDhV,MAAM,qDAAoD,eAI9DgV,EAAAA,EAAAA,oBAEK,MAFDhV,MAAM,qDAAoD,eAI9DgV,EAAAA,EAAAA,oBAEK,MAFDhV,MAAM,gEAA+D,iBAIzEgV,EAAAA,EAAAA,oBAEK,MAFDhV,MAAM,mEAA8D,IC9B5E,MAAM,GAAS,CAAC,EAKhB,IAFiC,QAAgB,GAAQ,CAAC,CAAC,gDDHzDiV,EAAAA,EAAAA,oBAkCQ,QAlCRC,GADFE,+mBEkDA,IAAMC,GAAiBjvB,EAAAA,GAAAA,qBAIjBF,IAFYovB,EAAAA,GAAAA,QAEM7K,EAAAA,EAAAA,MAAI,IACtBtkB,GAAcskB,EAAAA,EAAAA,KAAI,IAElBhlB,GAAaqkB,EAAAA,EAAAA,WAAS,kBAAMuL,EAAehrB,mBAAmB,IAC9DxO,GAAQuwB,EAAAA,EAAAA,UAAS,CACrBmJ,WAAY,OAYRC,EAAsB,WAC1BhsB,SAASwf,eAAe,4BAA4B5N,WACtD,EAOMqa,EAAuB,WAC3BjsB,SAASwf,eAAe,6BAA6B5N,WACvD,EAEMsa,GAAW5L,EAAAA,EAAAA,WAAS,kBAAM,SAAC6L,GAAW,MAAM,CAChD,mCAAoC95B,EAAM05B,aAAeI,EACzD,eAAgBN,EAAervB,wBAA0B2vB,EAC1D,CAAC,ybAzBsB,SAACn0B,GACvB6zB,EAAevtB,qBAAqBtG,GACpCgI,SAASwf,eAAe,iCAAiC5N,WAC3D,onBAwBwBjU,gCACfkuB,EAAenuB,eAAeC,gIAvBf6C,mBACtBqrB,EAAetrB,eAAeC,GADT,IAACA,4WAQA,SAACxI,GACvB6zB,EAAevtB,qBAAqBtG,GACpCgI,SAASwf,eAAe,wBAAwB5N,WAClD,gMAWuB,IAACjU,iQCtFpB,GAAU,CAEd,OAAiB,OACjB,WAAoB,GAEP,KAAI,KAAS,IAIX,KAAQ4tB,OAAvB,MCLA,GAFoB,0NCqBdd,EAAOzJ,yXAEI,SAAChkB,GAChBytB,EAAK,SAAUztB,EACjB,sGC3BI,GAAU,CAEd,OAAiB,OACjB,WAAoB,GAEP,KAAI,KAAS,IAIX,KAAQuuB,OAAvB,MCJA,IAFiC,QAAgB,GAAQ,CAAC,CAAC,YAAY,0xGCDvE,oDCqFA,IAAMM,GAAiBjvB,EAAAA,GAAAA,qBAEjBN,GAAoBgkB,EAAAA,EAAAA,WAAS,kBAAMuL,EAAevvB,iBAAiB,IAEnE8vB,EAAgB,WACpBP,EAAejsB,mBACjB,EAEMmZ,EAAO,WACX8S,EAAertB,WACjB,45EC/FA,kDCuDA,IAAMqtB,GAAiBjvB,EAAAA,GAAAA,qBAEjByvB,EAAmB,SAACrvB,GACxB6uB,EAAehvB,gBAAgBG,EACjC,EAEMd,GAAaokB,EAAAA,EAAAA,WAAS,kBAAMuL,EAAe3vB,UAAU,IAErDI,GAAoBgkB,EAAAA,EAAAA,WAAS,kBAAMuL,EAAevvB,iBAAiB,IACnEE,GAAwB8jB,EAAAA,EAAAA,WAAS,kBAAMuL,EAAervB,qBAAqB,IAE3E8vB,EAAY,SAACxF,GACjB9mB,SAASwf,eAAesH,GAASlV,WACnC,EAEMwa,EAAgB,WACpBP,EAAejsB,oBACfI,SAASwf,eAAe,mBAAmB5N,WAC7C,EAEMmH,EAAO,WACX8S,EAAertB,WACjB,SAEA+iB,EAAAA,EAAAA,YAAU,WACRsK,EAAehvB,iBACjB,u0WCmEA0hB,EAAAA,EAAAA,GAAa,qBAEb,IAAM7f,GAAkBI,EAAAA,EAAAA,sBAClB7B,GAAYC,EAAAA,EAAAA,gBACZgrB,GAAYhV,EAAAA,EAAAA,gBACZqZ,GAAcp6B,EAAAA,EAAAA,kBAEdq6B,EAAkB,SAACC,GACvBxvB,EAAUyV,cAAgBzV,EAAUyV,gBAAkB+Z,EAAgB,KAAOA,CAC/E,EAEMzvB,GAAO0kB,EAAAA,EAAAA,MAAUvB,MAEjBA,EAAQC,EASd8H,EAAUtU,cAAcuM,EAAMlP,MAC9BiX,EAAUrU,cAAcsM,EAAMpsB,MAC9Bm0B,EAAU3W,IAAM4O,EAAM5O,IAEtB,IAAMmb,GAAezL,EAAAA,EAAAA,KAAI,IAEnB3sB,EAAS,WACbi4B,EAAYn+B,QACZm+B,EAAYt7B,kBAAoBkvB,EAAMpsB,KAAKE,GAC3CyK,EAAgBonB,YAAY,UAC9B,SAEAvE,EAAAA,EAAAA,YAAU,WACRtkB,EAAU0vB,eAAexM,EAAMpsB,KAAMosB,EAAM0J,SAAU1J,EAAM+J,iBAC3DjyB,QAAQC,IAAI,uCAAD3E,OAAwC4sB,EAAMpsB,KAAKE,KAE9D24B,KAAK5S,KAAK,gBAADzmB,OAAiB4sB,EAAMpsB,KAAKE,KAChC44B,KAAI,iBAAApM,KAAAl3B,KAAAoF,MAAC,SAAAgE,EAAOm6B,GAAK,IAAAC,EAAA,OAAAxjC,KAAAuB,MAAA,SAAA+H,GAAA,cAAAA,EAAAzD,KAAAyD,EAAApF,MAAA,OAWhB,GAVAwK,QAAQC,IAAI,kCAAmC40B,GAC/CJ,EAAaziC,MAAQ6iC,EAEjBA,EAAMx+B,OAAS,IACXy+B,EAASD,EAAM,GACrB7vB,EAAU+vB,UAAUD,GACpB90B,QAAQC,IAAI,mBAAD3E,OAAoBw5B,EAAOr+B,QAGxCuJ,QAAQC,IAAI+E,EAAU6qB,mBAAoB7qB,EAAU8qB,WAElB,IAA9B2E,EAAaziC,MAAMqE,SAAgB2O,EAAU6qB,qBAAsB7qB,EAAU8qB,UAAS,CAAAl1B,EAAApF,KAAA,gBAAAoF,EAAAzD,KAAA,EAAAyD,EAAApF,KAAA,EAGhFqF,MAAMm6B,IAAI,cAAD15B,OAAe4sB,EAAMpsB,KAAKmB,KAAI,SAAS,CACpD4yB,oBAAoB,EACpBC,UAAW9qB,EAAU8qB,YACrB,OACF9vB,QAAQC,IAAI,iDAAiDrF,EAAApF,KAAA,iBAAAoF,EAAAzD,KAAA,GAAAyD,EAAAI,GAAAJ,EAAA,SAG7DoF,QAAQ7H,MAAM,uBAAsByC,EAAAI,IAAS,yBAAAJ,EAAAtD,OAAA,GAAAoD,EAAA,mMAGlD,gBAAAw2B,GAAA,OAAA1I,EAAA/vB,MAAA,KAAAD,UAAA,EAzBI,IA0BJy8B,SAAQ,SAACvF,GACR1vB,QAAQC,IAAI,2BAA4ByvB,GACxC+E,EAAaziC,MAAMgE,KAAK05B,EAC1B,IACCwF,SAAQ,SAACxF,GAIR,GAHA1vB,QAAQC,IAAI,yBAA0ByvB,GACtC+E,EAAaziC,MAAQyiC,EAAaziC,MAAM4O,QAAO,SAAArO,GAAC,OAAIA,EAAEyJ,KAAO0zB,EAAK1zB,EAAE,IAEhE0zB,EAAK1zB,KAAOgJ,EAAU8vB,OAAO94B,KAC/BgE,QAAQC,IAAI,oCAERw0B,EAAaziC,MAAMqE,OAAS,GAAG,CACjC,IAAM8+B,EAAYV,EAAaziC,MAAM,GACrCgT,EAAU+vB,UAAUI,GACpBn1B,QAAQC,IAAI,uBAAD3E,OAAwB65B,EAAU1+B,MAC/C,CAGEuO,EAAU8vB,OAAO94B,KAAO+I,EAAK2qB,KAAK1zB,IACpCnB,MAAMQ,KAAK,QAADC,OAAS4sB,EAAMpsB,KAAKmB,KAAI,sBAAsB,CACtDyyB,KAAMA,EACN0F,QAAS,gBAAF95B,OAAkB4sB,EAAMpsB,KAAKE,IACpCW,SAAUurB,EAAMpsB,KAAKmB,OACpBtI,MAAK,SAAAgG,GACNqF,QAAQC,IAAI,4CAA6CtF,EAASI,KACpE,IAAE,OAAO,SAAA5C,GACP6H,QAAQ7H,MAAM,sCAAuCA,EACvD,GAEJ,IACCk9B,OAAO,gCAAgC,SAACnO,GACvClnB,QAAQC,IAAI,8CAA+CinB,GAC3DliB,EAAUswB,OAAO,CACfC,SAAUrO,EAAM0I,KAAK2F,SACrB1F,mBAAoB3I,EAAM0I,KAAKC,mBAC/BC,UAAW5I,EAAM0I,KAAKE,WAE1B,IACCuF,OAAO,+BAA+B,SAACnO,GACtClnB,QAAQC,IAAI,6CAA8CinB,GAE1D,IAAM8E,EAAqB9E,EAAMqH,gBAAgBiH,eACjDxwB,EAAUupB,gBAAexlB,GAAAA,GAAA,GACpBme,EAAMqH,iBAAe,IACxB1hB,UAAWmf,IAEbhsB,QAAQC,IAAI,qCAAsC+E,EAAUupB,gBAAgB1hB,UAC9E,IACC1U,OAAM,SAACA,GACN6H,QAAQ7H,MAAM,gCAAiCA,EACjD,GAEN,KAEA43B,EAAAA,EAAAA,kBAAgB,WAEd4E,KAAKc,MAAM,gBAADn6B,OAAiB4sB,EAAMpsB,KAAKE,KAEtCgJ,EAAUyqB,mBAAkB,EAAO1qB,EAAK2qB,KAAKj5B,KAAMyxB,EAAMpsB,KAAKmB,MAE9D+C,QAAQC,IAAI,0CAAD3E,OAA2C4sB,EAAMpsB,KAAKE,KACjEgJ,EAAU7O,OACZ,ouKCrRI,GAAU,CAEd,OAAiB,OACjB,WAAoB,GAEP,KAAI,KAAS,IAIX,KAAQm9B,OAAvB,MCJA,IAFiC,QAAgB,GAAQ,CAAC,CAAC,YAAY","sources":["webpack:///./resources/js/Stores/GoLiveStore.js","webpack:///./resources/js/Stores/RecordingStore.js","webpack:///./resources/js/Utilities/TimeUtils.js","webpack:///./resources/js/Stores/ScheduleStore.js","webpack:///./resources/js/Stores/TeamStore.js","webpack:///./resources/js/Stores/VideoAuxPlayerStore.js","webpack:///./resources/js/Utilities/PageSetup.js","webpack:///./resources/js/Components/Pages/ShowRecordings/RecordingsListBody.vue?1f63","webpack:///./resources/js/Components/Pages/ShowRecordings/RecordingsPaginator.vue?5ade","webpack:///./resources/js/Components/Pages/Shows/Elements/ManageShowEpisode.vue?b40f","webpack:///./resources/js/Pages/Shows/{$id}/Manage.vue?4385","webpack:///./resources/js/Components/Global/Buttons/DashboardButton.vue?3fff","webpack:///./resources/js/Components/Global/Buttons/DashboardButton.vue","webpack:///./resources/js/Components/Global/Modals/Messages.vue?dfe9","webpack:///./resources/js/Components/Global/Modals/Messages.vue","webpack:///./resources/js/Components/Global/Paginators/Pagination.vue?0305","webpack:///./resources/js/Components/Global/Paginators/Pagination.vue","webpack:///./resources/js/Components/Pages/Shows/Layout/ShowFooter.vue?be4d","webpack:///./resources/js/Components/Pages/Shows/Layout/ShowFooter.vue","webpack:///./resources/js/Jetstream/Label.vue","webpack:///./resources/js/Components/Global/Calendar/DateTimePicker.vue?15b5","webpack:///./resources/js/Components/Global/Calendar/DateTimePicker.vue","webpack:///./resources/js/Components/Global/Calendar/DatePicker.vue?300b","webpack:///./resources/js/Components/Global/Calendar/DatePicker.vue","webpack:///./resources/js/Components/Global/Schedule/StepSixCongratulations.vue","webpack:///./resources/js/Components/Global/Schedule/AddShowToSchedule.vue","webpack:///./resources/js/Components/Global/Schedule/AddShowToSchedule.vue?fa06","webpack:///./resources/js/Components/Global/Schedule/ChangeShowSchedule.vue?b054","webpack:///./resources/js/Components/Global/Schedule/ChangeShowSchedule.vue","webpack:///./resources/js/Components/Pages/Shows/Layout/ShowManageHeader.vue?ae3c","webpack:///./resources/js/Components/Pages/Shows/Layout/ShowManageHeader.vue","webpack:///./resources/js/Components/Pages/Shows/Elements/ManageShowEpisodesStatuses.vue?ba1d","webpack:///./resources/js/Components/Pages/Shows/Elements/ManageShowEpisodesStatuses.vue","webpack:///./resources/js/Components/Pages/Shows/Elements/ManageEpisodeEditNote.vue?89fa","webpack:///./resources/js/Components/Pages/Shows/Elements/ManageEpisodeEditNote.vue","webpack:///./resources/js/Components/Pages/Shows/Elements/ManageShowEpisode.vue","webpack:///./resources/js/Components/Pages/Shows/Elements/ManageShowEpisode.vue?e0ad","webpack:///./resources/js/Components/Pages/Shows/Elements/ManageShowEpisode.vue?f7cf","webpack:///./resources/js/Components/Pages/Shows/Elements/ManageShowEpisodesList.vue?8642","webpack:///./resources/js/Components/Pages/Shows/Elements/ManageShowEpisodesList.vue","webpack:///./resources/js/Components/Pages/Shows/Elements/ManageShowCreditsList.vue","webpack:///./resources/js/Components/Pages/Shows/Elements/ManageShowCreditsList.vue?74d6","webpack:///./resources/js/Components/Pages/ShowRecordings/RecordingsListHeader.vue","webpack:///./resources/js/Components/Pages/ShowRecordings/RecordingsListHeader.vue?9c61","webpack:///./resources/js/Components/Pages/ShowRecordings/RecordingsListBody.vue","webpack:///./resources/js/Components/Pages/ShowRecordings/RecordingsListBody.vue?dbfd","webpack:///./resources/js/Components/Pages/ShowRecordings/RecordingsListBody.vue?3094","webpack:///./resources/js/Components/Pages/ShowRecordings/RecordingsPaginator.vue","webpack:///./resources/js/Components/Pages/ShowRecordings/RecordingsPaginator.vue?3ba1","webpack:///./resources/js/Components/Pages/ShowRecordings/RecordingsPaginator.vue?d4cf","webpack:///./resources/js/Components/Pages/ShowRecordings/ShowRecordingsModals.vue?19bd","webpack:///./resources/js/Components/Pages/ShowRecordings/ShowRecordingsModals.vue","webpack:///./resources/js/Components/Pages/ShowRecordings/ShowRecordingsList.vue?0f82","webpack:///./resources/js/Components/Pages/ShowRecordings/ShowRecordingsList.vue","webpack:///./resources/js/Pages/Shows/{$id}/Manage.vue","webpack:///./resources/js/Pages/Shows/{$id}/Manage.vue?8525","webpack:///./resources/js/Pages/Shows/{$id}/Manage.vue?9a3e"],"sourcesContent":["import { defineStore } from 'pinia'\nimport { useNotificationStore } from '@/Stores/NotificationStore'\nimport { useVideoPlayerStore } from '@/Stores/VideoPlayerStore'\nimport { useVideoAuxPlayerStore } from '@/Stores/VideoAuxPlayerStore'\nimport videojs from 'video.js'\n\nconst initialState = () => ({\n    displayEpisodeGoLiveComponent: false,\n    isEpisode: null,\n    episode: null,\n    preSelectedShowId: null,\n    selectedShowId: null,\n    // selectedShow: null, this uses the getter... set it up in the component as a computed property\n    shows: [], // Assuming you might want to store shows here too\n    streamKey: '', // Optional: Store the generated stream key if needed\n    wildcardId: '',\n    isLive: false,\n    isRecording: false,\n    streamInfo: null,\n    rtmpUri: null,\n    destinations: [], // New state for holding destinations\n    isLoadingDestinations: false,\n    loadingDestinationId: null,\n    processingRecordingChange: false,\n    isProcessingDisableAllAutoPushes: false,\n    playerIsReloading: false,\n    pushDestinationFormSubmitProcessing: false,\n    mistServerUri: null,\n    previousStreamStatus: null,\n})\n\nexport const useGoLiveStore = defineStore('goLiveStore', {\n    state: initialState,\n    actions: {\n        reset() {\n            // Reset the store to its original state (clear all data)\n            Object.assign(this, initialState())\n        },\n        async fetchShows() {\n            try {\n                const response = await axios.get('/go-live/shows') // Adjust the URL as needed\n                this.shows = response.data\n            } catch (error) {\n                // console.error('Failed to fetch shows:', error)\n                // Handle error appropriately\n            }\n        },\n\n\n        // temporarily commenting this out\n        async generateStreamKey() {\n            if (!this.selectedShowId) {\n                // console.error('No show selected')\n                throw new Error('No show selected') // Throw an error to be caught by the caller\n            }\n\n            try {\n                const response = await axios.post(`/go-live/shows/${this.selectedShowId}/stream-key`)\n                // console.log('Stream key generated:', response.data)\n                // this.streamKey = response.data.stream_key // Assuming the response includes the stream key\n                // console.log('this new stream key: ' + this.streamKey)\n                // console.log('response data stream key: ' + response.data.stream_key)\n                // Update goLiveStore.selectedShow.mist_stream_wildcard_id with the returned stream key\n                if (this.selectedShowId && response.data.stream_key) {\n                    this.selectedShow.mist_stream_wildcard = response.data\n                    this.selectedShow.mist_stream_wildcard_id = response.data.stream_key\n                }\n                return response.data // Return the response data\n            } catch (error) {\n                // console.error('Error generating stream key:', error.response ? error.response.data : error)\n                throw error // Re-throw the error to be caught by the component\n            }\n        },\n\n        // Other actions...\n        updateAndGetStreamKey() {\n            const show = this.shows.find(show => show.id === this.selectedShowId) || null\n            const streamKey = show?.mist_stream_wildcard?.name || ' < RELOAD THIS PAGE TO GET YOUR STREAM KEY > '\n\n            // Perform the state update\n            this.streamKey = streamKey\n\n            // Return the stream key for immediate use\n            return streamKey\n        },\n\n\n        // async generateStreamKey() {\n        //     if (!this.selectedShowId) {\n        //         console.error(\"No show selected\");\n        //         throw new Error(\"No show selected\");\n        //     }\n        //\n        //     try {\n        //         const response = await axios.post(`/go-live/shows/${this.selectedShowId}/stream-key`);\n        //         console.log(\"Stream key generated:\", response.data);\n        //\n        //         // Find the index of the selected show in the shows array\n        //         const selectedIndex = this.shows.findIndex(show => show.id === this.selectedShowId);\n        //         if (selectedIndex !== -1) {\n        //             // Update the selected show with the new stream key information\n        //             this.shows[selectedIndex].mist_stream_wildcard = response.data;\n        //             this.shows[selectedIndex].mist_stream_wildcard_id = response.data.stream_key;\n        //         }\n        //         return response.data;\n        //     } catch (error) {\n        //         console.error(\"Error generating stream key:\", error.response ? error.response.data : error);\n        //         throw error;\n        //     }\n        // },\n\n\n        // setPreSelectedShowId(id) {\n        //     this.preSelectedShowId = id;\n        //     console.log('preSelectedShowId updated to:', this.preSelectedShowId);\n        // },\n        // Action to update selectedShowId and selectedShow based on selectedShowId\n        setSelectedShowId(showId) {\n            this.selectedShowId = showId\n            this.updateSelectedShow() // Call the method to update selectedShow based on new selectedShowId\n        },\n        // Method to find and update selectedShow based on selectedShowId\n        updateSelectedShow() {\n            this.selectedShow = this.shows.find(show => show.id === this.selectedShowId) || null\n        },\n        goLive() {\n            this.isLive = true\n        },\n        stopLive() {\n            this.isLive = false\n        },\n        async startRecording() {\n            // console.log('1 start recording in Go Live Store')\n            const notificationStore = useNotificationStore()\n            const showSlug = this.selectedShow.slug\n            // console.log(`Starting recording for show ${showSlug}`)\n            this.processingRecordingChange = true\n            try {\n                // console.log('2a post to /mist-stream/start-recording/')\n                const response = await axios.post('/mist-stream/start-recording/'+showSlug, {\n                    stream_name: this.streamKey,\n                })\n                // console.log('5 and we\\'re back in the GoLiveStore')\n                // console.log('Recording started successfully:', response.data)\n                // console.log('Stream Name:', this.streamKey)\n                const {message, status} = response.data\n                // Use the status from the response for the notification\n                notificationStore.setToastNotification(message, status)\n                // Update the recording status\n                this.isRecording = true\n            } catch (error) {\n                // console.error('Error starting push:', error)\n                notificationStore.setToastNotification('Failed to start recording.', 'error')\n                // Handle the error appropriately in your UI\n            } finally {\n                this.processingRecordingChange = false // Stop processing spinner regardless of outcome\n            }\n        },\n        async stopRecording() {\n            const notificationStore = useNotificationStore()\n            const showSlug = this.selectedShow.slug\n            // console.log(`Stopping recording for show ${showSlug}`)\n            this.processingRecordingChange = true\n            // console.log(`Stopping recording for show ${showSlug}`)\n            try {\n                const response = await axios.post('/mist-stream/stop-recording/'+showSlug, {\n                    stream_name: this.streamKey,\n                })\n                // console.log('Recording stopped successfully:', response.data)\n                const {message, status} = response.data\n                notificationStore.setToastNotification(message, status)\n                // Update the recording status\n                this.isRecording = false\n            } catch (error) {\n                // console.error('Error stopping recording:', error)\n                notificationStore.setToastNotification('Failed to stop push.', 'error')\n            } finally {\n                this.processingRecordingChange = false // Stop processing spinner regardless of outcome\n            }\n        },\n        // async fetchStreamInfo(streamName) {\n        //     try {\n        //         // const response = await fetch(`http://mist.nottv.io:8080/json_${encodedStreamName}.js`); // Replace with your URL\n        //         const response = await fetch(`/fetch-stream-info/${streamName}`) // Replace with your URL\n        //         if (!response.ok) throw new Error('Failed to fetch')\n        //         this.streamInfo = await response.json() // Store the data in serverInfo\n        //     } catch (error) {\n        //         console.error('Error fetching server info:', error)\n        //     }\n        // },\n        async fetchStreamInfo() {\n            const notificationStore = useNotificationStore()\n            // console.log('start fetch stream info...')\n            try {\n                if (!this.mistServerUri) {\n                    await this.fetchMistServerUri()\n                }\n                // Then, use the URI in your next request\n                const response = await axios.post('/fetch-stream-info', {\n                    streamName: this.streamKey,\n                    mistServerUri: this.mistServerUri, // Pass it as a string\n                })\n                // console.log('response returned...')\n                // console.log(response.data);\n                this.streamInfo = response.data.streamInfo || []\n                // Assuming a successful response might look like {\"message\": \"Stream is online\", \"status\": \"success\"}\n                let message, status\n\n                // Check if the response contains an error field\n                if (response.data.streamInfo.error) {\n                    message = response.data.streamInfo.error\n                    status = 'error' // Assuming 'error' as a fallback status\n                    // console.log('error returned...')\n                } else if (response.data.message && response.data.success) {\n                    // If it's a success message with a status\n                    message = response.data.message\n                    status = 'info'\n                    // console.log('success returned...')\n\n                } else {\n                    // Fallback for unexpected response structure\n                    message = 'Received unexpected response from server.'\n                    status = 'info' // Default to 'info' or another appropriate fallback status\n                    // console.log('unexpected response returned...')\n                }\n\n                // Use the status from the response for the notification\n                // notificationStore.setToastNotification(message, status)\n            } catch (error) {\n                // console.error(error);\n                notificationStore.setToastNotification('Failed to fetch stream info.', 'error')\n                // console.log('catch error...')\n            }\n        },\n        async fetchRtmpUri() {\n            try {\n                const response = await fetch(`/fetch-rtmp-uri`)\n                if (!response.ok) throw new Error('Failed to fetch')\n\n                // Parse the plain text body of the response\n                // Store the RTMP URI string in a Vue data property or similar\n                this.rtmpUri = await response.text()\n            } catch (error) {\n                // console.error('Error fetching RTMP URI:', error)\n            }\n        },\n        clearStreamInfo() {\n            this.streamInfo = null\n        },\n        toggleDisplayEpisodeGoLiveComponent(episode) {\n            // const videoPlayerAuxStore = useVideoAuxPlayerStore()\n            // videoPlayerAuxStore.reset()\n            this.displayEpisodeGoLiveComponent = !this.displayEpisodeGoLiveComponent\n            this.isEpisode = !!this.displayEpisodeGoLiveComponent\n            this.episode = episode\n            this.selectedShowId = this?.episode?.show_id\n\n        },\n        updateEpisode(episode) {\n            this.episode = episode\n        },\n        async fetchMistServerUri() {\n            const videoAuxPlayerStore = useVideoAuxPlayerStore();\n            let uriResponse = await axios.get('/mist-server/uri')\n            this.mistServerUri = uriResponse.data\n            videoAuxPlayerStore.setMistServerUri(this.mistServerUri)\n        },\n        async reloadPlayer() {\n            const videoAuxPlayerStore = useVideoAuxPlayerStore()\n            const notificationStore = useNotificationStore()\n            this.playerIsReloading = true // Start loading\n            try {\n                // First, fetch the URI\n\n                // let uriResponse = await axios.get('/mist-server/uri');\n                // this.mistServerUri = uriResponse.data; // Accessing the data prop// erty\n                // // Create an object and set the 'name' property\n                const mistStream = {\n                    name: this.streamKey,\n                }\n                // // Now, use this URI in your next request\n                // const response = await axios.post('/fetch-stream-info', {\n                //     streamName: this.streamKey,\n                //     mistServerUri: this.mistServerUri,\n                // });\n                // Now, you can pass the 'mistStream' object to the method\n                await videoAuxPlayerStore.loadMistStreamVideo(mistStream, true).then(\n                    // await this.fetchStreamInfo(),\n                )\n            } catch (error) {\n                // console.error(error);\n                // notificationStore.setGeneralServiceNotification('Failed to reload player', error)\n                notificationStore.setToastNotification('Failed to reload player.', 'error')\n            } finally {\n                this.playerIsReloading = false // Stop loading regardless of outcome\n            }\n\n        },\n        async fetchPushDestinations() {\n            const notificationStore = useNotificationStore()\n            this.isLoadingDestinations = true // Start loading\n            try {\n                const response = await axios.post('/go-live/fetch-push-destinations', {\n                    showId: this.selectedShowId,\n                    streamName: this.streamKey,\n                    backgroundFetch: false,\n                })\n                // console.log(response.data);\n                this.destinations = response.data.destinations || []\n                this.isRecording = response.data.recording || false\n                console.log('response about recording: ' + response.data.recording)\n                // Extract message and status from the response\n                const {message, status} = response.data\n                // Use the status from the response fo\n                // r the notification\n                // notificationStore.setToastNotification(message, status)\n            } catch (error) {\n                // console.error(error);\n                // notificationStore.setGeneralServiceNotification('Failed to reload player', error)\n                notificationStore.setToastNotification('Failed to fetch push destinations.', 'error')\n            } finally {\n                this.isLoadingDestinations = false // Stop loading regardless of outcome\n            }\n        },\n        async backgroundFetchPushDestinations() {\n            // Background Fetch doesn't use Toast Notifications,\n            // Keep the fetch silent in the background.\n\n            this.isLoadingDestinations = true // Start loading\n            try {\n                const response = await axios.post('/go-live/fetch-push-destinations/', {\n                    showId: this.selectedShowId,\n                    streamName: this.streamKey,\n                    backgroundFetch: true,\n                })\n                this.destinations = response.data.destinations || []\n                this.isRecording = response.data.recording || false\n            } catch (error) {\n                // console.error(error);\n                // notificationStore.setGeneralServiceNotification('Error Fetching Push Destinations', error)\n                notificationStore.setToastNotification('Failed to fetch push destinations.', 'error')\n            } finally {\n                this.isLoadingDestinations = false // Stop loading regardless of outcome\n            }\n        },\n        async deleteDestination(destinationId) {\n            // Confirm deletion with the user before proceeding\n            if (confirm(`Are you sure you want to delete the destination with ID: ${destinationId}?`)) {\n                try {\n                    // Perform the delete operation\n                    await axios.delete('/mist-stream-push-destinations/' + destinationId)\n                    // Optionally, remove the item from your local state to update the UI\n                    this.destinations = this.destinations.filter(destination => destination.id !== destinationId)\n                } catch (error) {\n                    notificationStore.setGeneralServiceNotification('Error deleting destination', error)\n                    // console.error(`Error deleting destination with ID: ${destinationId}`, error)\n                }\n            }\n        },\n        async startPush(destinationId, fullPushUri) {\n            const notificationStore = useNotificationStore()\n            this.loadingDestinationId = destinationId\n            // console.log(`Starting push for destination ${destinationId}`)\n            try {\n                const response = await axios.post('/mist-stream/start-push', {\n                    destination_id: destinationId,\n                    full_push_uri: fullPushUri,\n                    stream_name: this.streamKey,\n                })\n                // console.log('Push started successfully:', response.data)\n                // console.log('Destination ID:', destinationId)\n                // console.log('Full Push URI:', fullPushUri)\n                // console.log('Stream Name:', this.streamKey)\n                const {message, status} = response.data\n                // Use the status from the response for the notification\n                notificationStore.setToastNotification(message, status)\n                // Update the component's state to reflect the change\n                const index = this.destinations.findIndex(destination => destination.id === destinationId)\n                if (index !== -1) {\n                    this.destinations[index].push_is_started = 1\n                }\n            } catch (error) {\n                // console.error('Error starting push:', error)\n                notificationStore.setToastNotification('Failed to start push.', 'error')\n                // Handle the error appropriately in your UI\n            } finally {\n                this.loadingDestinationId = null // Stop loading regardless of outcome\n            }\n        },\n        async stopPush(destinationId) {\n            const notificationStore = useNotificationStore()\n            this.loadingDestinationId = destinationId\n            // console.log(`Stopping push for destination ${destinationId}`)\n            try {\n                const response = await axios.post('/mist-stream/stop-push', {destination_id: destinationId})\n                // console.log('Push stopped successfully:', response.data)\n                const {message, status} = response.data\n                notificationStore.setToastNotification(message, status)\n                // Update the component's state to reflect the change\n            } catch (error) {\n                // console.error('Error stopping push:', error)\n                notificationStore.setToastNotification('Failed to stop push.', 'error')\n            } finally {\n                this.loadingDestinationId = null // Stop loading regardless of outcome\n                const index = this.destinations.findIndex(destination => destination.id === destinationId)\n                if (index !== -1) {\n                    this.destinations[index].push_is_started = 0\n                }\n            }\n        },\n        async enableAutoPush(destinationId) {\n            this.loadingDestinationId = destinationId\n            const notificationStore = useNotificationStore()\n            try {\n                const response = await axios.post('/mist-stream/push-auto-add/' + destinationId)\n                // console.log('Auto push enabled successfully:', response.data)\n                const {message, status} = response.data\n                notificationStore.setToastNotification(message, status)\n                const index = this.destinations.findIndex(destination => destination.id === destinationId)\n                if (index !== -1) {\n                    this.destinations[index].has_auto_push = 1\n                }\n            } catch (error) {\n                // console.error('Error enabling auto push:', error)\n                notificationStore.setToastNotification('Failed to enable auto push.', 'error')\n            } finally {\n                this.loadingDestinationId = null // Stop loading regardless of outcome\n            }\n        },\n        async disableAutoPush(destinationId) {\n            const notificationStore = useNotificationStore()\n            this.loadingDestinationId = destinationId\n            try {\n                const response = await axios.post('/mist-stream/push-auto-remove/' + destinationId)\n                // console.log('Auto push removed successfully:', response.data)\n                const {message, status} = response.data\n                notificationStore.setToastNotification(message, status)\n                const index = this.destinations.findIndex(destination => destination.id === destinationId)\n                if (index !== -1) {\n                    this.destinations[index].has_auto_push = 0\n                }\n            } catch (error) {\n                // console.error('Error disabling auto push:', error)\n                notificationStore.setToastNotification('Failed to disable auto push.', 'error')\n            } finally {\n                this.loadingDestinationId = null // Stop loading regardless of outcome\n            }\n        },\n        async disableAllAutoPushes() {\n            const notificationStore = useNotificationStore()\n            this.isProcessingDisableAllAutoPushes = true\n            try {\n                const response = await axios.post('/mist-stream/remove-all-auto-pushes-for-stream', {'streamName': this.streamKey})\n                // console.log('Auto push disabled successfully:', response.data)\n                const {message, status} = response.data\n                notificationStore.setToastNotification(message, status)\n                await this.fetchPushDestinations()\n            } catch (error) {\n                // console.error('Error disabling auto push:', error)\n                notificationStore.setToastNotification('Failed to disable auto push.', 'error')\n            } finally {\n                this.isProcessingDisableAllAutoPushes = false // Stop loading regardless of outcome\n                await this.fetchPushDestinations()\n            }\n        },\n    },\n    getters: {\n        selectedShow: (state) => {\n            const show = state.shows.find(show => show.id === state.selectedShowId) || null\n            state.streamKey = show?.mist_stream_wildcard?.name || 'Fallback value if undefined'\n            state.wildcardId = show?.mist_stream_wildcard?.id || 'Fallback value if undefined'\n            state.isRecording = show?.mist_stream_wildcard?.is_recording || false\n            return show\n        },\n        fullRtmpUri: (state) => {\n            return state.rtmpUri ? state.rtmpUri + 'live/' : ''\n        },\n        fullUrl: (state) => {\n            // Directly construct fullRtmpUri from state\n            const fullRtmpUri = state.rtmpUri ? state.rtmpUri + 'live/' : ''\n\n            // Directly find the show based on selectedShowId to avoid using getters\n            // const show = state.shows.find(show => show.id === state.selectedShowId) || null;\n            // const streamKey = show?.mist_stream_wildcard?.name || 'Fallback value if undefined';\n\n            // Return the concatenated URL\n            return `${fullRtmpUri}${state.streamKey}`\n        },\n        // Example getter that might filter destinations based on some criteria\n        activeDestinations: (state) => {\n            return state.destinations.filter(destination => destination.push_is_started)\n        },\n        sourceName: (state) => {\n            if (state.selectedShow?.mist_stream_wildcard?.name) {\n                return state.selectedShow.mist_stream_wildcard.name\n            } else if (state.episode?.mist_stream_wildcard?.name) {\n                return state.episode.mist_stream_wildcard.name\n            }\n            return null // No source available\n        },\n        streamOffline: (state) => {\n            // Check if the 'error' key exists and if its value is 'Stream is offline'\n            // If streamInfo is null or undefined, it defaults to an empty object {}\n            return (state.streamInfo?.error ?? '') === 'Stream is offline';\n        },\n    },\n\n\n})\n","import { defineStore } from \"pinia\";\nimport axios from \"axios\";\nimport dayjs from \"dayjs\";\nimport utc from 'dayjs/plugin/utc'\nimport timezone from 'dayjs/plugin/timezone'\nimport { useUserStore } from \"@/Stores/UserStore\";\nimport { useVideoPlayerStore } from '@/Stores/VideoPlayerStore';\nimport { useAppSettingStore } from '@/Stores/AppSettingStore';\nimport { useNowPlayingStore } from '@/Stores/NowPlayingStore';\nimport { useShowStore } from '@/Stores/ShowStore';\n\ndayjs.extend(utc)\ndayjs.extend(timezone)\n\nconst initialState = () => ({\n    recordings: [],\n    pagination: {\n        currentPage: 1,\n        lastPage: 1,\n        total: 0,\n    },\n    selectedRecording: null,\n    nowPlayingRecording: null,\n    nowPlayingRecordingId: null,\n    isLoading: false,\n    showCopyMessage: false,\n    copyMessage: '',\n});\n\nexport const useRecordingStore = defineStore('recordingStore', {\n    state: initialState,\n    actions: {\n        async fetchRecordings(page = 1) {\n            this.isLoading = true;\n            const showStore = useShowStore();\n            const showId = showStore.show?.id;\n\n            if (!showId) {\n                console.error(\"No show ID available\");\n                this.isLoading = false;\n                return;\n            }\n\n            try {\n                const response = await axios.get(`/api/recordings`, {\n                    params: {\n                        show_id: showId,\n                        page: page\n                    }\n                });\n                this.recordings = response.data.data;\n                this.pagination = {\n                    currentPage: response.data.current_page,\n                    lastPage: response.data.last_page,\n                    total: response.data.total,\n                };\n            } catch (error) {\n                console.error(\"Failed to fetch recordings:\", error);\n            } finally {\n                this.isLoading = false;\n            }\n        },\n        reset() {\n            Object.assign(this, initialState());\n        },\n        formatDateInUserTimezone(date) {\n            const userStore = useUserStore();\n            return userStore.formatDateInUserTimezone(date);\n        },\n        formatTimeFromDateInUserTimezone(date) {\n            const userStore = useUserStore();\n            return userStore.formatTimeFromDateInUserTimezone(date);\n        },\n        formatDuration(totalMilliseconds) {\n            let seconds = Math.floor(totalMilliseconds / 1000);\n            let minutes = Math.floor(seconds / 60);\n            const hours = Math.floor(minutes / 60);\n            seconds = seconds % 60;\n            minutes = minutes % 60;\n            const paddedHours = hours.toString().padStart(2, '0');\n            const paddedMinutes = minutes.toString().padStart(2, '0');\n            const paddedSeconds = seconds.toString().padStart(2, '0');\n            return `${paddedHours}h ${paddedMinutes}m ${paddedSeconds}s`;\n        },\n        setSelectedRecording(recording) {\n            this.selectedRecording = recording;\n        },\n        clearSelectedRecording() {\n            this.selectedRecording = null;\n        },\n        async openVideo() {\n            // this.selectedRecording = recording;\n            const videoPlayerStore = useVideoPlayerStore();\n            const appSettingStore = useAppSettingStore();\n            const nowPlayingStore = useNowPlayingStore();\n            const showStore = useShowStore();\n            const show = showStore.show;\n\n            const source = {\n                mediaType: 'recording',\n                recording: {\n                    source: this.selectedRecording.stream_name+'.mp4',\n                    sourceType: 'video/mp4',\n                },\n            };\n            try {\n                await videoPlayerStore.loadNewVideo(source);\n                this.nowPlayingRecordingId = this.selectedRecording.id;\n                appSettingStore.toggleOttInfo();\n                nowPlayingStore.setActiveMedia(source.mediaType, {\n                    primaryName: show.name,\n                    secondaryName: `${this.formatDateInUserTimezone(this.selectedRecording.start_time)} ${this.formatTimeFromDateInUserTimezone(recording.start_time)} Recording`,\n                    description: this.selectedRecording.comment || null,\n                    primaryUrl: `shows/${show.slug}`,\n                    image: show.image,\n                });\n            } catch (error) {\n                console.error('Error loading new video:', error);\n            }\n        },\n        downloadRecording() {\n            if (!this.selectedRecording) return;\n\n            const recording = this.selectedRecording;\n            const url = recording.download_url;\n            const downloadLink = document.createElement('a');\n            downloadLink.href = url;\n            document.body.appendChild(downloadLink);\n            downloadLink.click();\n            document.body.removeChild(downloadLink);\n        },\n        shareRecording(shareUrl) {\n            navigator.clipboard.writeText(shareUrl).then(() => {\n                this.copyMessage = 'Video share URL copied!';\n                this.showCopyMessage = true;\n                setTimeout(() => {\n                    this.showCopyMessage = false;\n                }, 1000); // Hide after 1 second\n            });\n        },\n    },\n    getters: {\n        formattedRecordings: (state) => {\n            const userStore = useUserStore();\n            return state.recordings.map(recording => ({\n                ...recording,\n                start_date_local: dayjs.utc(recording.start_dateTime).tz(userStore.timezone).format('ddd DD MMM'),\n                start_time_local: dayjs.utc(recording.start_dateTime).tz(userStore.timezone).format('h:mm a'),\n                end_time_local: dayjs.utc(recording.end_dateTime).tz(userStore.timezone).format('h:mm a'),\n            }));\n        },\n\n    },\n});\n","// utilities/timeUtils.js\nimport dayjs from 'dayjs';\nimport utc from 'dayjs/plugin/utc';\nimport timezone from 'dayjs/plugin/timezone';\n\ndayjs.extend(utc);\ndayjs.extend(timezone);\n\n/**\n * Creates an array of Date objects representing time slots.\n *\n * This function generates a sequence of time slots starting from a specified\n * start time, continuing for a given number of hours, and spaced apart\n * by a specified interval in minutes.\n *\n * @param {Date} start - The start time from which to generate slots, as a Date object.\n * @param {number} [durationHours=4] - The total duration for which to generate slots, in hours.\n * @param {number} [intervalMinutes=30] - The interval between each slot, in minutes.\n * @param {string} timezone - The timezone in which the time slots will be calculated.\n * @returns {Date[]} An array of Date objects, each representing a time slot.\n *\n * Example:\n * If start is `new Date('2024-01-01T08:00:00Z')`, durationHours is 2, and intervalMinutes is 30,\n * the output will be an array of Date objects representing the times:\n * `08:00`, `08:30`, `09:00`, and `09:30`.\n */\nexport function createTimeSlots(start, durationHours = 4, intervalMinutes = 30, timezone) {\n    // console.log(`Creating time slots starting from ${start}, for ${durationHours} hours, every ${intervalMinutes} minutes in timezone ${timezone}.`);\n    let slots = [];\n    let startTime = dayjs(start).tz(timezone);  // Convert start time to the correct time zone\n    for (let i = 0; i < (durationHours * 60) / intervalMinutes; i++) {\n        let slotTime = startTime.add(i * intervalMinutes, 'minute').toDate();  // Generate slots in the correct time zone\n        slots.push(slotTime);  // Keep as Date object\n    }\n    return slots;\n}\n// export function createTimeSlots(start, durationHours = 4, intervalMinutes = 30) {\n//     let slots = [];\n//     let startTime = dayjs(start).tz(userStore.timezone);  // Convert start time to the correct time zone\n//     for (let i = 0; i < (durationHours * 60) / intervalMinutes; i++) {\n//         let slotTime = new Date(start.getTime() + i * intervalMinutes * 60000);\n//         slots.push(slotTime);  // Keep as Date object\n//     }\n//     return slots;\n// }","import { defineStore } from 'pinia'\nimport { useUserStore } from '@/Stores/UserStore'\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\nimport { createTimeSlots } from '@/Utilities/TimeUtils'\nimport {\n    format,\n    isToday,\n    isTomorrow,\n    isYesterday,\n    startOfDay,\n} from 'date-fns'\n\n// Import dayjs and its plugins\nimport dayjs from 'dayjs'\nimport isSameOrAfter from 'dayjs/plugin/isSameOrAfter'\nimport isSameOrBefore from 'dayjs/plugin/isSameOrBefore' // To check if the day is the same\nimport timezone from 'dayjs/plugin/timezone'\nimport utc from 'dayjs/plugin/utc'\nimport weekOfYear from 'dayjs/plugin/weekOfYear' // For week start and end calculations\nimport advancedFormat from 'dayjs/plugin/advancedFormat' // For more complex formatting options\n\n// Extend dayjs with the plugins\ndayjs.extend(timezone)\ndayjs.extend(weekOfYear)\ndayjs.extend(advancedFormat)\ndayjs.extend(utc)\ndayjs.extend(isSameOrAfter)\ndayjs.extend(isSameOrBefore)\n\nfunction convertScheduleToTimezone(scheduleData) {\n    const userStore = useUserStore() // Access the UserStore\n\n    return scheduleData.data.map(item => {\n        // Convert top-level start_time and end_time using UserStore methods\n        // console.log(`Original startTime for ${item.id}: ${item.startTime}`)\n        const startTimeInUserTz = item.start_dateTime ? userStore.formatDateTimeFromUtcToUserTimezone(item.start_dateTime, 'YYYY-MM-DD HH:mm:ss') : null\n        const endTimeInUserTz = item.end_dateTime ? userStore.formatDateTimeFromUtcToUserTimezone(item.end_dateTime, 'YYYY-MM-DD HH:mm:ss') : null\n        // Add debug logging to help trace conversion issues or confirm correct conversions\n        // console.log(`Converted startTime for ${item.id}: ${startTimeInUserTz}`)\n\n        return {\n            ...item,\n            start_dateTime: startTimeInUserTz,\n            end_dateTime: endTimeInUserTz,\n            timezone: userStore.timezone,\n        }\n    })\n}\n\n// Helper function to get dates within the next 6 hours from viewingWindowStart\nfunction getUpcomingContentDates(viewingWindowStart) {\n    let dates = []\n    let start = dayjs(viewingWindowStart) // Ensure viewingWindowStart is a Day.js object\n\n    for (let i = 0; i < 6; i++) {\n        // Add i hours to the start time, each time creating a new Day.js object\n        dates.push(start.add(i, 'hour').toDate()) // Convert to Date if necessary; otherwise keep as Day.js object\n    }\n    // console.log(1)\n    return dates\n\n}\n\nconst getTimeZone = () => {\n    const userStore = useUserStore()\n    // This function should return the timezone of the user.\n    // This could be dynamic based on the user's settings or browser settings.\n    // return Intl.DateTimeFormat().resolvedOptions().timeZone;\n    // console.log(2)\n    return userStore.timezone\n}\n\nconst initialState = () => ({\n    baseTime: dayjs().tz(getTimeZone()),\n    currentHalfHour: dayjs().tz(getTimeZone()).startOf('hour').add(dayjs().minute() >= 30 ? 30 : 0, 'minute'),\n    fourHoursLater: dayjs().tz(getTimeZone()).startOf('hour').add(dayjs().minute() >= 30 ? 30 : 0, 'minute').add(4, 'hour'),\n    viewingWindowStart: dayjs().tz(getTimeZone()).startOf('hour'),\n    currentMonth: dayjs().tz(getTimeZone()).startOf('month'),\n    selectedDay: dayjs().tz(getTimeZone()),\n    currentWeekStart: dayjs().tz(getTimeZone()).startOf('week'),\n    currentWeekEnd: dayjs().tz(getTimeZone()).endOf('week'),\n    nextFourHoursOfContent: [],\n    nextFourHoursOfContentWithPlaceholders: [],\n    // nextFourHoursWithHalfHourIntervals: [],\n    // viewingMode: 'automatic', // or 'userSelected'\n    fiveDaySixHourSchedule: [], // Holds the schedule shows 5 day / 6 hour structured data\n    schedules: [], // this is our new schedules array, storing fetched schedule data\n    isLoading: true, // This flag indicates if data is currently being fetched\n    nextPage: 1, // This keeps track of the next page to fetch for pagination\n    hasMore: true, // This flag indicates if there are more schedules to fetch\n    todaysContent: [],\n    weeklyContent: [],\n    dataFetchLog: [],\n    savingToSchedule: false,\n    slotIntervalMinutes: 30,\n    mediumScreenSlotHours: 4, // 4 hours = 8 slots\n    smallScreenSlotHours: 2, // 2 hours = 4 slots\n    verySmallScreenSlotHours: 1, // 1 hour = 2 slots\n    timeSlots: [],\n    timeBanners: [\n        {id: 1, name: 'Early Morning', startTime: '04:00', duration: 2},\n        {id: 2, name: 'Morning', startTime: '06:00', duration: 6},\n        {id: 3, name: 'Afternoon', startTime: '12:00', duration: 5},\n        {id: 4, name: 'Prime Time', startTime: '17:00', duration: 3},\n        {id: 5, name: 'Late Prime Time', startTime: '20:00', duration: 3},\n        {id: 6, name: 'Late Night', startTime: '23:00', duration: 2}, // Spans midnight to 01:00\n        {id: 7, name: 'Overnight', startTime: '01:00', duration: 3}, // Spans from 01:00 to 04:00\n    ],\n})\n\nexport const useScheduleStore = defineStore('scheduleStore', {\n    state: initialState,\n    actions: {\n        resetAll() {\n            // Reset the store to its original state (clear all data)\n            Object.assign(this, initialState())\n            // console.log(3)\n        },\n        reset() {\n            this.baseTime = dayjs().tz(getTimeZone())\n            this.viewingWindowStart = dayjs().tz(getTimeZone()).startOf('hour')\n            this.currentMonth = dayjs().tz(getTimeZone()).startOf('month')\n            this.selectedDay = dayjs().tz(getTimeZone())\n            // console.log(4)\n        },\n        async setSelectedDay(day) {\n            // Ensure that 'day' is a Day.js object, convert if coming as a native Date or string\n            const selectedDay = dayjs(day)\n\n            // Set the selected day\n            this.selectedDay = selectedDay.toDate() // Convert back to Date if necessary; otherwise keep as Day.js object\n\n            // Explicitly set the viewingWindowStart to 4 AM for the selected day\n            this.viewingWindowStart = selectedDay.startOf('day').add(4, 'hours').toDate()\n\n            // Set the start and end of the week based on the selected day\n            this.currentWeekStart = selectedDay.startOf('week').toDate() // Consider week starting on Sunday\n            this.currentWeekEnd = selectedDay.endOf('week').toDate() // Consider week ending on Saturday\n\n            // Use the updated fetch logic\n            await this.fetchWeekDataIfNeeded()\n            // console.log(5)\n        },\n        setSelectedDayToToday(day) {\n            const now = dayjs()  // Create a Day.js object for the current date and time\n\n            // Set selectedDay to the current date and time\n            this.selectedDay = now.toDate() // Convert back to Date if necessary; otherwise keep as Day.js object\n\n            // Set viewingWindowStart to the start of the current hour using Day.js\n            this.viewingWindowStart = now.startOf('hour').toDate()\n            // console.log(6)\n        },\n        async changeDay(days) {\n            const currentTimeZone = getTimeZone() // or however you obtain the timezone\n            // Extract the time component from the current viewing window start\n            const currentTime = dayjs(this.viewingWindowStart).hour() * 60 + dayjs(this.viewingWindowStart).minute()\n\n            // Create a new day and set it to the start of that day\n            let newDay = dayjs(this.viewingWindowStart).tz(currentTimeZone).add(days, 'day').startOf('day')\n\n            // Set the time back to the original time\n            newDay = newDay.add(currentTime, 'minute')\n\n            // Depending on your application's needs, you may or may not need to convert it back to a JavaScript Date object\n            // If you need a Date object:\n            this.viewingWindowStart = newDay.toDate()\n\n            // If you can use dayjs objects directly (preferred if possible):\n            this.viewingWindowStart = newDay\n\n            // // Check if the week of the new day is already loaded\n            // const weekStart = startOfWeek(newDay, {weekStartsOn: 0});\n            // const weekEnd = endOfWeek(newDay, {weekStartsOn: 0});\n\n            // Use the updated centralized fetch logic without redundant checks\n            await this.fetchWeekDataIfNeeded()\n\n            // // Check for the need to load data for the new week\n            // if (this.needsDataForWeek(weekStart, weekEnd)) {\n            //     await this.loadWeekFromDate(newDay).catch(error => {\n            //         console.error(\"Failed to load data for the new week:\", error);\n            //     });\n            // }\n\n            // // Check for the need to load data for the new week\n            // if (!this.needsDataForWeek()) {\n            //     // Data for the current week has already been loaded; skip fetching\n            //     console.log(\"Data for the current week has already been loaded; skipping redundant fetch.\");\n            //     return;\n            // }\n            //\n            // // Proceed with data fetching if needed\n            // await this.checkAndFetchForUpcomingContent();\n            // console.log(7)\n        },\n        async shiftHours(hours) {\n            // Shift the viewing window by the specified number of hours\n            this.viewingWindowStart = dayjs(this.viewingWindowStart).add(hours, 'hour').toDate()\n\n            // Set the current week start and end based on the new viewing window start\n            this.currentWeekStart = dayjs(this.viewingWindowStart).startOf('week').toDate()\n            this.currentWeekEnd = dayjs(this.viewingWindowStart).endOf('week').toDate()\n\n            // If the day has changed, update selectedDay and the week's range\n            if (!dayjs(this.viewingWindowStart).isSame(dayjs(this.selectedDay), 'day')) {\n                this.selectedDay = dayjs(this.viewingWindowStart).startOf('day').toDate()\n            }\n\n            // Use the updated fetch logic\n            await this.fetchWeekDataIfNeeded()\n            // console.log(8)\n        },\n        isElevenPM(date) {\n            // Convert the date to a Day.js object if it's not already one\n            const time = dayjs(date)\n            // Check if the hour is 23 (11 PM)\n            // console.log(9)\n            return time.hour() === 23\n\n        },\n        // Actions to change the month\n        async subtractMonth() {\n            // Convert currentMonth to a Day.js object if it's not already and subtract one month\n            this.currentMonth = dayjs(this.currentMonth).subtract(1, 'month').toDate()\n\n            try {\n                // Pass the new currentMonth to setSelectedDay\n                await this.setSelectedDay(this.currentMonth)\n                // console.log('Set selected day based on current month:', this.currentMonth)\n            } catch (error) {\n                console.error(`Failed to set selected day based on current month ${this.currentMonth}:`, error)\n            }\n            // console.log(10)\n        },\n        async addMonth() {\n            // Convert currentMonth to a Day.js object if it's not already and add one month\n            this.currentMonth = dayjs(this.currentMonth).add(1, 'month').toDate()\n\n            try {\n                // Pass the new currentMonth to setSelectedDay\n                await this.setSelectedDay(this.currentMonth)\n                // console.log('Set selected day based on current month:', this.currentMonth)\n            } catch (error) {\n                console.error(`Failed to set selected day based on current month ${this.currentMonth}:`, error)\n            }\n            // console.log(11)\n        },\n        async fetchFiveDaySixHourSchedule() {\n            console.error('fetchFiveDaySixHourSchedule')\n            try {\n                const userStore = useUserStore()\n                const response = await axios.get('/api/schedule')\n\n                // Fallback to response timezone if userStore.timezone is not set\n                const timezone = userStore.timezone || response.data.userTimezone || 'UTC' // Additional fallback to 'UTC'\n\n                // Convert the entire schedule, including nested recurrenceDetails, to the user's timezone\n                this.fiveDaySixHourSchedule = convertScheduleToTimezone(response.data, timezone)\n                // console.error('fetchFiveDaySixHourSchedule', response.data)\n            } catch (error) {\n                console.error('Failed to load schedule shows:', error)\n                // Handle the error state as needed, e.g., setting an error state property\n            }\n            // console.log(12)\n        },\n        async fetchTodaysContent() {\n            try {\n                const userStore = useUserStore()\n                const response = await axios.get('/api/schedule/today')\n\n                // Fallback to response timezone if userStore.timezone is not set\n                const timezone = userStore.timezone || response.data.userTimezone || 'UTC' // Additional fallback to 'UTC'\n\n                this.todaysContent = convertScheduleToTimezone(response.data, timezone)\n            } catch (error) {\n                console.error('Failed to fetch today\\'s content:', error)\n            }\n            // console.log(13)\n        },\n        async preloadWeeklyContent() {\n            console.log('preloading weekly content...')\n            // Use the current date to preload content for the current week\n            const currentDate = dayjs(this.baseTime) // Creates a Day.js object representing the current date and time\n\n            try {\n                // Call loadWeekFromDate with the current Day.js date object\n                await this.loadWeekFromDate(currentDate) // loadWeekFromDate uses dayjs\n            } catch (error) {\n                console.error('Failed to preload weekly content:', error)\n            }\n            // console.log(14)\n        },\n        // this is our new fetch schedules method.\n        async fetchSchedules(startDate, endDate) {\n            this.isLoading = true\n            console.log(`Loading schedule between: ${startDate} and ${endDate}`) // Log the date being requested\n            try {\n                const userStore = useUserStore()\n                const dayStartDate = dayjs(startDate)\n                const dayEndDate = dayjs(endDate)\n                const fullISOStartDate = dayStartDate.toISOString()\n                const fullISOEndDate = dayEndDate.toISOString()\n\n                const response = await axios.get(`/api/schedules/range?start=${fullISOStartDate}&end=${fullISOEndDate}`)\n\n                // const formattedStartDate = dayStartDate.format('YYYY-MM-DD') // For potential error messages and logging\n                // const formattedEndDate = dayEndDate.format('YYYY-MM-DD') // For potential error messages and logging\n                // console.log(`Loading schedule between: ${formattedStartDate} and ${formattedEndDate}`) // Log the date being requested\n                console.log('Received response:', response.data) // Log the raw response data\n\n                // Fallback to response timezone if userStore.timezone is not set\n                const timezone = userStore.timezone || response.data.userTimezone\n\n                const newData = convertScheduleToTimezone(response.data, timezone) // Ensure you are accessing the correct data property from the response\n\n                // Merge newData into schedules, avoiding duplicates\n                // this.schedules = [...this.schedules, ...newData].filter((value, index, self) =>\n                //         index === self.findIndex((t) => (\n                //             t.id === value.id && t.startTime === value.startTime\n                //         )),\n                // )\n                // Merge newData into schedules, avoiding duplicates\n                this.schedules = [...new Set([...this.schedules, ...newData].map(item => JSON.stringify(item)))].map(item => JSON.parse(item));\n                // console.log('Updated schedules:', this.schedules); // Log the updated schedules\n\n                // Optionally update fetch logs or perform additional state updates\n                // this.updateFetchLogs(startDate) // this was designed to just log a week fetching at a time.\n\n            } catch (error) {\n                console.error('Failed to fetch schedules:', error)\n                this.isLoading = false\n                // console.log('012')\n            } finally {\n                this.isLoading = false\n                // console.log('Schedule loaded!')\n            }\n        },\n\n        async fetchMoreSchedules() {\n            // Prevent fetching if already loading or if there are no more schedules to fetch\n            if (this.isLoading || !this.hasMore) return;\n\n            this.isLoading = true;\n            console.log('Fetching more schedules...');\n            try {\n                const lastSchedule = this.schedules[this.schedules.length - 1];\n                const startDate = lastSchedule ? dayjs(lastSchedule.start_dateTime).format('YYYY-MM-DD') : dayjs().format('YYYY-MM-DD');\n                const endDate = dayjs(startDate).add(7, 'day').format('YYYY-MM-DD'); // Fetch the next 7 days\n\n                await this.fetchSchedules(startDate, endDate);\n\n                // Check if new schedules were added\n                const newSchedules = this.schedules.slice(this.schedules.length - 1);\n                // If no new schedules are fetched, set hasMore to false\n                if (newSchedules.length === 0) {\n                    this.hasMore = false;\n                } else {\n                    // Increment the next page number for future fetches\n                    this.nextPage += 1;\n                }\n            } catch (error) {\n                console.error('Failed to fetch more schedules:', error);\n            } finally {\n                this.isLoading = false;\n            }\n        },\n\n        async loadWeekFromDate(date) {\n            let formattedDate = null // Declare formattedDate outside of the try block\n            this.isLoading = true\n            console.log('Loading week from date...')\n            try {\n                const userStore = useUserStore()\n                // Ensure the date is in UTC format for the request\n                // console.log('Date before formatted: ' + date)\n                // Convert date to Day.js object and format it in ISO string with UTC\n                const dayDate = dayjs(date)\n                const fullISODate = dayDate.toISOString()\n                // console.log(`Loading week data for date in UTC: ${fullISODate}`)\n\n                // Fetch the week's schedule data\n                // Send the dateTime and timezone as a JSON object in a POST request\n                const response = await axios.post(`/api/schedule/week/${fullISODate}`)\n\n                // const formattedDate = date.toISOString().split('T')[0];\n                // Log and error handling\n                const formattedDate = dayDate.format('YYYY-MM-DD') // For potential error messages and logging\n                // console.log(`Loading week data for date: ${formattedDate}`) // Log the date being requested\n                //\n                // const response = await axios.get(`/api/schedule/week/${formattedDate}`);\n                // console.log('Received response:', response.data) // Log the raw response data\n\n                // Fallback to response timezone if userStore.timezone is not set\n                const timezone = userStore.timezone || response.data.userTimezone\n                // console.log(`Using timezone: ${timezone}`) // Log the timezone being used\n\n                const newData = convertScheduleToTimezone(response.data, timezone) // Ensure you are accessing the correct data property from the response\n\n                // Merge newData into weeklyContent, avoiding duplicates\n                this.weeklyContent = [...this.weeklyContent, ...newData].filter((value, index, self) =>\n                        index === self.findIndex((t) => (\n                            t.id === value.id && t.start_dateTime === value.start_dateTime\n                        )),\n                )\n\n                // console.log('Updated weeklyContent:', this.weeklyContent) // Log the updated weekly content\n\n                // Optionally update fetch logs or perform additional state updates\n                this.updateFetchLogs(date)\n\n                this.isLoading = false\n                // console.log('Week from date loaded!')\n            } catch (error) {\n                console.error(`Failed to load content for week starting ${formattedDate}:`, error)\n                this.isLoading = false\n                // console.log('002')\n            }\n            // console.log(15)\n            // console.log('End of loadWeekFromDate function')\n        },\n        updateFetchLogs(date) {\n            // Convert date to a Day.js object if it's not already one\n            const dayDate = dayjs(date)\n\n            // Use Day.js to calculate the start and end of the week\n            const weekStart = dayDate.startOf('week').toISOString() // Assumes the week starts on Sunday\n            const weekEnd = dayDate.endOf('week').toISOString() // Assumes the week ends on Saturday\n            const fetchTime = dayjs().toISOString() // Current time in ISO format\n\n            // Find existing log entry for the week\n            const existingLogIndex = this.dataFetchLog.findIndex(log =>\n                log.weekStart === weekStart && log.weekEnd === weekEnd)\n\n            if (existingLogIndex !== -1) {\n                // Update the last fetch time if the log already exists\n                this.dataFetchLog[existingLogIndex].lastFetch = fetchTime\n            } else {\n                // Add a new log entry if it does not exist\n                this.dataFetchLog.push({weekStart, weekEnd, lastFetch: fetchTime})\n            }\n            // console.log(16)\n        },\n        needsDataForWeek() {\n            // Helper function to format dates to 'YYYY-MM-DD' for easier comparison\n            const formatISODate = (date) => dayjs(date).format('YYYY-MM-DD')\n\n            // Current week range in 'YYYY-MM-DD' format\n            const weekStartStr = formatISODate(this.currentWeekStart)\n            const weekEndStr = formatISODate(this.currentWeekEnd)\n\n            // Enhanced logging for debugging\n            // console.log(`Current week range: ${weekStartStr} to ${weekEndStr}`)\n            // console.log('Existing data fetch log entries:', this.dataFetchLog)\n\n            // Iterate through the fetch log to check if the current week has been fetched\n            const weekHasBeenFetched = this.dataFetchLog.some(log => {\n                // Convert log dates to 'YYYY-MM-DD' format for comparison\n                const logWeekStartStr = formatISODate(log.weekStart)\n                const logWeekEndStr = formatISODate(log.weekEnd)\n\n                // Log each comparison for insight\n                // console.log(`Comparing to fetched range: ${logWeekStartStr} to ${logWeekEndStr}`)\n\n                return logWeekStartStr <= weekStartStr && logWeekEndStr >= weekEndStr\n            })\n\n            // Log the final determination\n            // console.log(`Week from ${weekStartStr} to ${weekEndStr} has ${weekHasBeenFetched ? '' : 'not '}been fetched.`)\n            // console.log(17)\n            return !weekHasBeenFetched\n        },\n        calculateExtendedEndForUpcomingContent() {\n            // Convert viewingWindowStart to a Day.js object if it's not already one\n            const baseStartTime = dayjs(this.viewingWindowStart)\n\n            // Extend by 6 hours to cover the upcoming content span\n            // Day.js handles date and time addition cleanly, returning a new Day.js object\n            const extendedEndTime = baseStartTime.add(6, 'hour')\n\n            // console.log(18)\n            // Return the extended end time as a Date object, if needed elsewhere as a Date\n            return extendedEndTime.toDate()\n        },\n        // Function to check for and fetch missing upcoming content\n        async checkAndFetchForUpcomingContent() {\n            const upcomingDates = getUpcomingContentDates(this.viewingWindowStart) // Assuming this returns Day.js objects\n            const now = dayjs()\n            const fifteenMinutesAgo = now.subtract(15, 'minutes')\n\n            for (const date of upcomingDates) {\n                const dateString = date.format('YYYY-MM-DD')  // Day.js format for 'YYYY-MM-DD'\n                const contentCoverageAndFreshness = this.weeklyContent.some(content => {\n                    const contentDate = dayjs(content.start_dateTime).format('YYYY-MM-DD')  // Convert and compare as 'YYYY-MM-DD'\n                    const lastFetchedTime = this.dataFetchLog[dateString]\n                    const isFresh = lastFetchedTime && dayjs(lastFetchedTime) > fifteenMinutesAgo\n                    return dateString === contentDate && isFresh\n                })\n\n                if (!contentCoverageAndFreshness) {\n                    // This date needs data fetching\n                    await this.fetchDataAndUpdateLog(dateString, date.toDate()) // Pass as Date if needed, or adjust downstream functions to accept Day.js objects\n                    break // Assuming you fetch data for the week, so no need to check further dates within the same week\n                }\n            }\n            // console.log(19)\n        },\n        async fetchDataAndUpdateLog(dateString, date) {\n            try {\n                // Assuming 'date' is already a Day.js object; if not, convert it\n                const dayDate = dayjs(date)\n\n                await this.loadWeekFromDate(dayDate.toDate())  // Pass as a Date if needed, or adjust 'loadWeekFromDate' to accept Day.js objects\n                // Successfully fetched, so update the log\n                this.dataFetchLog[dateString] = dayjs().toISOString()  // Use Day.js to get the current time in ISO format\n                // console.log('Data fetched successfully for date:', dateString)\n            } catch (error) {\n                console.error(`Failed to fetch data for date ${dateString}:`, error)\n            }\n            // console.log(20)\n        },\n\n        // Updated to use this.currentWeekStart and this.currentWeekEnd directly\n        async fetchWeekDataIfNeeded() {\n            // Assumes this.currentWeekStart and this.currentWeekEnd are already set\n            if (this.needsDataForWeek()) {\n                await this.checkAndFetchForUpcomingContent().catch(error => {\n                    console.error('Failed to load data for the week:', error)\n                    return false // Indicates failure to fetch when an error occurs\n                })\n            } else {\n                console.log('Week data already loaded; no need to fetch.')\n            }\n            // console.log(21)\n        },\n\n        // Function to simply update baseTime with the given time (expected to be a Day.js object or compatible input)\n        updateBaseTime(time) {\n            // Ensure the time is a Day.js object when setting baseTime\n            this.baseTime = dayjs(time).toDate()  // Convert to Date if necessary; consider keeping it as Day.js object if possible\n            // console.log(22)\n        },\n\n        // Function to set baseTime based on a new time input (expected to be a string, Date, etc.)\n        setBaseTime(newTime) {\n            // Convert newTime to a Day.js object and then to Date if necessary\n            this.baseTime = dayjs(newTime).toDate()  // This handles various input formats and ensures consistency\n            // console.log(23)\n        },\n\n\n        /**\n         * This method orchestrates the update of show scheduling data for the next four hours.\n         * It is designed to be triggered when there are changes to the base time or when a manual refresh is needed.\n         * The method handles loading and organizing the scheduling data to be ready for display in the grid.\n         */\n        async updateNextFourHours() {\n            // Set the loading state to true to indicate that data processing is underway.\n            // This can be used to display a loading spinner or disable user interaction temporarily.\n            this.isLoading = true\n\n            // Update the time range for the scheduling grid. This adjusts `currentHalfHour` and `fourHoursLater`\n            // based on the current `baseTime`. These values define the range of time for which shows will be displayed.\n            this.updateTimeRange()\n\n            // Update the time slots\n            this.setTimeSlots()\n\n            // Prepares the shows for the grid display by filtering, calculating grid slots,\n            // resolving conflicts, and optionally filling empty grid slots with placeholders.\n            // This step involves several functions that ensure shows are positioned correctly according to their\n            // start time, duration, and conflicts with other shows.\n            this.prepareShowsForGrid()\n\n            // Reset the loading state to false indicates that the data processing is complete.\n            // This allows the user interface to be interactive again and shows the updated data in the grid.\n            this.isLoading = false\n            // console.log(24)\n        },\n\n\n        updateTimeRange() {\n            // Ensure the baseTime is interpreted correctly in the current user's timezone\n            const baseDate = dayjs(this.baseTime).tz(getTimeZone())\n\n            // Calculate the rounded minutes to either 0 or 30 based on the current time\n            const roundedMinutes = baseDate.minute() < 30 ? 0 : 30\n\n            // Set the current half hour, rounding down to the nearest half-hour mark\n            let currentHalfHour = baseDate.minute(roundedMinutes).second(0).millisecond(0).startOf('minute')\n\n            // Adjust currentHalfHour to start 30 minutes earlier\n            currentHalfHour = currentHalfHour.subtract(30, 'minutes');\n\n            // Calculate four hours later from the current half-hour mark\n            const fourHoursLater = currentHalfHour.add(4, 'hours')\n\n            // Update the store's currentHalfHour and fourHoursLater ensuring they are Date objects if required\n            this.currentHalfHour = currentHalfHour.toDate()\n            this.fourHoursLater = fourHoursLater.toDate()\n            // console.log(25)\n\n            // console.log('Fetching shows between:', currentHalfHour.format('YYYY-MM-DD HH:mm:ss'), 'and', fourHoursLater.format('YYYY-MM-DD HH:mm:ss'))\n        },\n\n        initializeTimeSlots() {\n            this.timeSlots = createTimeSlots()\n        },\n\n        setTimeSlots() {\n            const appSettingStore = useAppSettingStore()\n            let slotHours\n\n            // Determine the number of slot hours based on screen size\n            if (appSettingStore.isVerySmallScreen) {\n                slotHours = this.verySmallScreenSlotHours\n            } else if (appSettingStore.isSmallScreen) {\n                slotHours = this.smallScreenSlotHours\n            } else {\n                slotHours = this.mediumScreenSlotHours\n            }\n\n            const intervalMinutes = this.slotIntervalMinutes\n            const slots = []\n            const totalSlots = (slotHours * 60) / intervalMinutes\n\n            // Ensure state.currentHalfHour is a Day.js object\n            const currentHalfHour = dayjs(this.currentHalfHour)\n\n            // Calculate the time for each slot using Day.js\n            for (let i = 0; i < totalSlots; i++) {\n                let slotTime = currentHalfHour.add(i * intervalMinutes, 'minute')\n                slots.push(slotTime.toDate())  // Convert back to JavaScript Date if necessary\n            }\n            this.timeSlots = slots\n            // console.log(26)\n            return slots.length\n        },\n\n        prepareShowsForGrid() {\n\n            if (!this.timeSlots || !Array.isArray(this.timeSlots) || this.timeSlots.length === 0) {\n                console.error('timeSlots is not properly initialized.')\n                // console.log(27)\n                // Handle this scenario, e.g., by initializing timeSlots, or skipping the update\n                return\n            }\n\n\n            // Step 1: Filter shows within the desired time range\n            const shows = this.filterShowsForTimeRange()\n\n            // Step 2: Calculate initial grid slots for these shows\n            const processedShows = this.calculateGridSlots(shows, this.timeSlots)\n\n            // Step 3: Process shows to set nowPlaying and comingUpNext flags\n            const showsWithStatusFlags = this.processShows(processedShows)\n\n            // Step 4: Update column occupancy and find the maximum row used\n            const {colOccupancy, maxRowUsed} = this.updateColumnOccupancy(showsWithStatusFlags, this.timeSlots.length)\n\n            // Step 5: Fill gaps in the grid with placeholders\n            const gridItems = this.fillGapsAndCreatePlaceholders(colOccupancy, maxRowUsed, this.timeSlots.length)\n\n            // Step 6: Combine processed shows with the placeholders\n            const combinedShows = [...showsWithStatusFlags, ...gridItems]\n\n            // Step 7: Sort and group shows by rows\n            this.nextFourHoursOfContent = this.sortShowsByPosition(combinedShows)\n            console.log(28)\n        },\n\n        filterShowsForTimeRange() {\n            return this.schedules.filter(show => {\n                // Validate show data integrity\n                if (typeof show.start_dateTime !== 'string' || typeof show.duration_minutes !== 'number') {\n                    console.warn('Invalid show data:', show.start_dateTime, show.duration_minutes)\n                    // console.log(29)\n                    return false // Skip this show if it doesn't meet data expectations\n                }\n\n                const showStart = dayjs(show.start_dateTime)\n                const showEnd = dayjs(show.end_dateTime)\n                const isInTimeRange = showStart.isBefore(this.fourHoursLater) && showEnd.isAfter(this.currentHalfHour)\n\n                // Detailed logging for debugging\n                if (isInTimeRange) {\n                    const hasStarted = showStart.isBefore(this.currentHalfHour) ? 'already started' : 'starts within range'\n                    // console.log(`Show: ${show.content.name}, ${hasStarted}, Start: ${showStart.format('HH:mm:ss')}, End: ${showEnd.format('HH:mm:ss')}, Duration: ${show.duration_minutes}`)\n                }\n                // console.log(30)\n                return isInTimeRange\n            })\n        },\n\n        calculateGridSlots(shows, timeSlots) {\n            // Validate the timeSlots array to prevent errors\n            if (!Array.isArray(timeSlots) || timeSlots.length === 0) {\n                console.error('Invalid or empty timeSlots array')\n                // console.log(31)\n                return [] // Exit if no valid time slots to work with\n            }\n\n            // Determine the range of timeSlots\n            const firstTimeSlot = dayjs(timeSlots[0])\n            const lastTimeSlot = dayjs(timeSlots[timeSlots.length - 1]).add(30, 'minutes')\n\n\n            return shows.filter(show => {\n                const showStart = dayjs(show.start_dateTime)\n                const showEnd = dayjs(show.end_dateTime)\n                return showStart.isBefore(lastTimeSlot) && showEnd.isAfter(firstTimeSlot)\n            }).map(show => {\n                const showStart = dayjs(show.start_dateTime)\n                const showEnd = dayjs(show.end_dateTime)\n                // console.log('************************************')\n                // console.log(`Processing show: ${show.content.name}, Start: ${show.startTime}, End: ${show.endTime}`)\n\n                // Find the index of the slot where the show should start\n                let slotIndex = timeSlots.findIndex(slot => showStart.isSameOrBefore(dayjs(slot)))\n\n                // Adjust if the show starts exactly at a slot time or just after the last checked slot time\n                if (slotIndex === -1 || showStart.isAfter(dayjs(timeSlots[slotIndex]))) {\n                    slotIndex = Math.max(0, slotIndex)\n                }\n\n                // console.log(`Comparing show start ${showStart.format()} to timeSlot index ${slotIndex} at ${dayjs(timeSlots[slotIndex]).format()}`)\n\n                // Calculate the end slot index\n                let endSlotIndex = timeSlots.findIndex(slot => showEnd.isSameOrBefore(dayjs(slot).add(30, 'minutes')))\n\n                // If the end slot index points to a slot that starts after the show ends, subtract one\n                if (endSlotIndex !== -1 && showEnd.isBefore(dayjs(timeSlots[endSlotIndex]))) {\n                    endSlotIndex--\n                }\n\n                // Handle cases where the show ends after the last slot\n                if (endSlotIndex === -1 || showEnd.isSame(dayjs(timeSlots[timeSlots.length - 1]).add(30, 'minutes'))) {\n                    endSlotIndex = timeSlots.length - 1\n                }\n\n                // console.log(`Comparing show end ${showEnd.format()} to timeSlot index ${endSlotIndex} at ${endSlotIndex !== -1 ? dayjs(timeSlots[endSlotIndex]).format() : 'out of range'}`)\n\n\n                // Calculate the number of slots the show should span\n                let span = endSlotIndex - slotIndex + 1\n\n                // console.log(`Calculated gridStart: ${slotIndex + 1}, gridSpan: ${span}`)\n                // console.log(32)\n                return {\n                    ...show,\n                    gridStart: slotIndex + 1, // Convert to 1-based index for grid positioning\n                    gridSpan: span,\n                }\n            })\n        },\n\n        processShows(shows) {\n            let comingUpNextSet = false\n\n            shows.forEach(show => {\n                const start = dayjs(show.start_dateTime)\n                const end = start.add(show.duration_minutes, 'minutes')\n                const now = dayjs(this.baseTime)\n\n                // Determine if the show is now playing\n                show.nowPlaying = !show.placeholder && now.isAfter(start) && now.isBefore(end) && show.gridRow === 1\n\n                // Find the first show that starts in gridRow 1 and does not start in the first grid column\n                if (!comingUpNextSet && !show.placeholder && show.gridRow === 1 && now.isBefore(start)) {\n                    show.comingUpNext = true\n                    comingUpNextSet = true  // Ensure only one show gets this flag\n                } else {\n                    show.comingUpNext = false\n                }\n            })\n\n            return shows\n        },\n\n        updateColumnOccupancy(processedShows, cols) {\n            let colOccupancy = new Array(cols).fill(null).map(() => new Set())\n            let maxRowUsed = 0\n            processedShows.forEach(show => {\n                for (let i = show.gridStart - 1; i < show.gridStart - 1 + show.gridSpan; i++) {\n                    if (i >= 0 && i < cols) {\n                        colOccupancy[i].add(show.gridRow)\n                        maxRowUsed = Math.max(maxRowUsed, show.gridRow)\n                    }\n                }\n            })\n            // console.log(34)\n            return {colOccupancy, maxRowUsed}\n        },\n\n        fillGapsAndCreatePlaceholders(colOccupancy, maxRowUsed, cols) {\n            let gridItems = []\n            // Ensure at least one row is processed even if no shows are present\n            maxRowUsed = Math.max(maxRowUsed, 1)\n            for (let row = 1; row <= maxRowUsed; row++) {\n                gridItems.push(...this.findAndFillGapsForSingleRow(colOccupancy, row, cols))\n            }\n            // console.log(35)\n            return gridItems\n        },\n\n        findAndFillGapsForSingleRow(colOccupancy, row, cols) {\n            let gridItems = []\n\n            // Skip processing for even-numbered rows\n            // if (row % 2 === 0) {\n            //     return gridItems;\n            // }\n\n            let gapStart = -1\n            for (let i = 0; i < cols; i++) {\n                if (!colOccupancy[i].has(row)) {\n                    gapStart = gapStart === -1 ? i : gapStart\n                } else if (gapStart !== -1) {\n                    // Use different placeholders based on the row number\n                    if (row === 1) {\n                        gridItems.push(this.createPlaceholder(gapStart + 1, i - gapStart, row))\n                    } else {\n                        gridItems.push(this.createBlankSpotPlaceholder(gapStart + 1, i - gapStart, row))\n                    }\n                    gapStart = -1\n                }\n            }\n            if (gapStart !== -1) {\n                // Again, differentiate between the first row and other rows\n                if (row === 1) {\n                    gridItems.push(this.createPlaceholder(gapStart + 1, cols - gapStart, row))\n                } else {\n                    gridItems.push(this.createBlankSpotPlaceholder(gapStart + 1, cols - gapStart, row))\n                }\n            }\n            // console.log(36)\n            return gridItems\n        },\n\n        sortShowsByPosition(combinedShows) {\n            if (!Array.isArray(combinedShows)) {\n                console.error('Expected an array of shows, received:', combinedShows)\n                return [] // Return an empty array if not an array to prevent errors\n            }\n\n            // console.log(37)\n            // Sort shows directly by row and then by start position within each row\n            return combinedShows.sort((a, b) => a.gridRow - b.gridRow || a.gridStart - b.gridStart)\n        },\n\n        createPlaceholder(start, span, row) {\n            // console.log(38)\n            return {\n                placeholder: true,\n                startTime: 'placeholder',\n                priority: 0,\n                gridStart: start,\n                gridSpan: span,\n                gridRow: row,\n                content: {name: 'Nothing scheduled.'},\n            }\n        },\n\n        createBlankSpotPlaceholder(start, span, row) {\n            // console.log(39)\n            return {\n                placeholder: true,\n                startTime: 'placeholder',\n                priority: 0,\n                gridStart: start,\n                gridSpan: span,\n                gridRow: row,\n                content: {name: 'Blank Spot'}, // Ensure it is differentiated from normal placeholders\n            }\n        },\n\n    },\n\n    getters: {\n        currentTime: (state) => {\n            // console.log('getter', 40)\n            return dayjs(state.baseTime).format('h:mm A')\n        },\n        currentDate: (state) => {\n            // console.log('getter', 40)\n            return dayjs(state.baseTime).format('MMMM DD, YYYY')\n        },\n        // Prepare banners with grid positions based on current time slots\n        preparedTimeBanners: (state) => {\n            // console.log('getter', 41)\n            const timeZone = getTimeZone() // Ensure this is defined\n            let now = dayjs().tz(timeZone)\n            let todayStart = now.startOf('day')\n            let tomorrowStart = todayStart.add(1, 'day')\n            let yesterdayStart = todayStart.subtract(1, 'day');\n\n            // console.log('Current Time Slots:', state.timeSlots.map(slot => dayjs(slot).format('HH:mm')))\n\n            return state.timeBanners.flatMap(banner => {\n                // console.log('getter', 42)\n                // Create banner times for today and tomorrow to handle overnight spans\n                let bannerTodayStart = todayStart.hour(parseInt(banner.startTime.split(':')[0])).minute(parseInt(banner.startTime.split(':')[1]))\n                let bannerTodayEnd = bannerTodayStart.clone().add(banner.duration, 'hours')\n                let bannerTomorrowStart = tomorrowStart.hour(parseInt(banner.startTime.split(':')[0])).minute(parseInt(banner.startTime.split(':')[1]))\n                let bannerTomorrowEnd = bannerTomorrowStart.clone().add(banner.duration, 'hours')\n                let bannerYesterdayStart = yesterdayStart.hour(parseInt(banner.startTime.split(':')[0])).minute(parseInt(banner.startTime.split(':')[1]));\n                let bannerYesterdayEnd = bannerYesterdayStart.clone().add(banner.duration, 'hours');\n\n                // Create an array of potential banners for today and tomorrow\n                let potentialBanners = [\n                    {...banner, start: bannerYesterdayStart, end: bannerYesterdayEnd},\n                    {...banner, start: bannerTodayStart, end: bannerTodayEnd},\n                    {...banner, start: bannerTomorrowStart, end: bannerTomorrowEnd},\n                ]\n\n                return potentialBanners.map(banner => {\n                    // console.log('getter', 43)\n                    const startSlotIndex = state.timeSlots.findIndex(slot => banner.start.isSameOrBefore(dayjs(slot)) && banner.end.isAfter(dayjs(slot)))\n                    let endSlotIndex = state.timeSlots.findIndex(slot => banner.end.isSameOrBefore(dayjs(slot)))\n\n                    // Adjust the end index to be inclusive of the end time\n                    if (endSlotIndex === -1 || banner.end.isAfter(dayjs(state.timeSlots[state.timeSlots.length - 1]))) {\n                        endSlotIndex = state.timeSlots.length - 1\n                    } else {\n                        endSlotIndex -= 1\n                    }\n\n                    const gridStart = startSlotIndex + 1\n                    const gridSpan = endSlotIndex - startSlotIndex + 1\n\n                    // console.log(`Processing Banner: ${banner.name}`)\n                    // console.log(`StartTime: ${banner.start.format('HH:mm')}, EndTime: ${banner.end.format('HH:mm')}`)\n                    // console.log(`StartSlotIndex: ${startSlotIndex}, EndSlotIndex: ${endSlotIndex}`)\n                    // console.log(`Calculated gridStart: ${gridStart}, gridSpan: ${gridSpan}`)\n\n                    // Ensure the banner should be displayed within the current time slots\n                    if (gridStart && gridSpan > 0) {\n                        // console.log('getter', 44)\n                        return {...banner, gridStart, gridSpan}\n                    }\n                    // console.log('getter', 45)\n                    return null\n                })\n            }).filter(banner => banner != null) // Filter out banners that don't fit within the current time slots\n                .sort((a, b) => a.gridStart - b.gridStart) // Sort by gridStart, with the lowest number first\n        },\n\n\n        // setTimeSlots: (state) => {\n        //     const appSettingStore = useAppSettingStore()\n        //     let slotHours\n        //\n        //     // Determine the number of slot hours based on screen size\n        //     if (appSettingStore.isVerySmallScreen) {\n        //         slotHours = state.verySmallScreenSlotHours\n        //     } else if (appSettingStore.isSmallScreen) {\n        //         slotHours = state.smallScreenSlotHours\n        //     } else {\n        //         slotHours = state.mediumScreenSlotHours\n        //     }\n        //\n        //     const intervalMinutes = state.slotIntervalMinutes\n        //     const slots = []\n        //     const totalSlots = (slotHours * 60) / intervalMinutes\n        //\n        //     // Ensure state.currentHalfHour is a Day.js object\n        //     const currentHalfHour = dayjs(state.currentHalfHour)\n        //\n        //     // Calculate the time for each slot using Day.js\n        //     for (let i = 0; i < totalSlots; i++) {\n        //         let slotTime = currentHalfHour.add(i * intervalMinutes, 'minute')\n        //         slots.push(slotTime.toDate())  // Convert back to JavaScript Date if necessary\n        //     }\n        //     state.timeSlots = slots\n        //     return slots.length\n        // },\n\n        nextFourHoursWithHalfHourIntervals: (state) => {\n            // Check if timeSlots is not null, undefined, or empty before accessing length\n            if (!state.timeSlots || state.timeSlots.length === 0) {\n                console.log('timeSlots is null or has no elements')\n                // console.log('getter', 46)\n                // Handle this scenario appropriately, such as returning an empty array or a default value\n                return []\n            }\n\n            const userStore = useUserStore() // Access the user store\n            const appSettingStore = useAppSettingStore() // Access the settings store\n            const userTimezone = userStore.timezone // Get the user's timezone\n            const cols = state.timeSlots.length\n\n            const intervals = []\n            const now = dayjs(state.baseTime).tz(userTimezone) // Get the current time in the user's timezone\n\n            // Determine if the current minute is less than 30 to start at the top of the hour or at the half-hour\n            let current = now.minute() < 30 ? now.startOf('hour') : now.startOf('hour').add(30, 'minutes')\n\n            // Adjust current to start 30 minutes before the calculated time\n            current = current.subtract(30, 'minutes');\n\n            // Generate intervals for the next 4 hours, each 30 minutes apart\n            // Adjust the loop count based on the number of columns/ intervals needed\n            for (let i = 0; i < cols; i++) { // Adjust the number of intervals based on the screen size\n                intervals.push({\n                    formatted: current.format('hh:mm A'), // Formatted time for display\n                    dateTimeString: current.format('YYYY-MM-DD HH:mm:ss'), // Y-m-d H:m:s format for comparisons\n                })\n                current = current.add(30, 'minute') // Move to the next 30-minute interval\n            }\n            // console.log('getter', 47)\n            return intervals\n        },\n\n        upcomingContent: (state) => {\n            // Since viewingWindowStart is now a Day.js object, use Day.js methods directly\n            const start = dayjs(state.viewingWindowStart).subtract(1, 'hour') // 1 hour earlier\n            const end = start.add(7, 'hours') // 6 hours later from the start\n\n            // Group shows by start time using Day.js\n            const showsGroupedByStartTime = state.weeklyContent.reduce((acc, item) => {\n                const itemStart = dayjs(item.start_dateTime).valueOf() // Use .valueOf() to get the timestamp\n                if (!acc[itemStart]) {\n                    acc[itemStart] = []\n                }\n                acc[itemStart].push(item)\n                return acc\n            }, {})\n\n            // Select the show with the lowest priority for each start time\n            const selectedShows = Object.values(showsGroupedByStartTime).map(group => {\n                return group.reduce((selected, item) => {\n                    return !selected || item.priority < selected.priority ? item : selected\n                }, null)\n            })\n            // console.log('getter', 48)\n            // Filter shows that fall within the next 6-hour window and sort them\n            return selectedShows\n                .filter(item => {\n                    const itemStart = dayjs(item.start_dateTime)\n                    return itemStart.isSameOrAfter(start) && itemStart.isBefore(end)\n                })\n                .sort((a, b) => dayjs(a.start_dateTime).unix() - dayjs(b.start_dateTime).unix()) // Sorting by Unix timestamp\n        },\n\n\n        nextSixHours: (state) => {\n            // Assuming state.viewingWindowStart is already a Day.js object.\n            // If it's still a native Date, convert it first:\n            let adjustedStart = dayjs(state.viewingWindowStart)\n\n            // Add 6 hours to the adjusted start time\n            const end = adjustedStart.add(6, 'hours')\n\n            // Generate each hour of the interval between adjustedStart and end\n            const hours = []\n            let hour = adjustedStart\n\n            while (hour.isBefore(end)) {\n                hours.push(hour.toDate()) // Convert back to Date if necessary; otherwise, just use `hour` if you can use Day.js objects directly\n                hour = hour.add(1, 'hour')\n            }\n            // console.log('getter', 49)\n            return hours\n        },\n\n        dateMessage: (state) => {\n            const startDay = startOfDay(state.viewingWindowStart)\n            const formattedDate = format(startDay, 'EEEE MMMM do, yyyy')\n            // console.log('getter', 50)\n            if (isToday(startDay)) {\n                return `Today - ${formattedDate}`\n            } else if (isYesterday(startDay)) {\n                return `Yesterday - ${formattedDate}`\n            } else if (isTomorrow(startDay)) {\n                return `Tomorrow - ${formattedDate}`\n            } else {\n                return formattedDate\n            }\n        },\n\n        currentMonthIndex: (state) => {\n            // Ensure state.currentMonth is converted to a Day.js object\n            const month = dayjs(state.currentMonth)\n            // console.log('getter', 51)\n            // Day.js months are 0-indexed just like JavaScript Date, returns the month (0-11)\n            return month.month()\n        },\n\n        currentMonthName: (state) => {\n            // Ensure state.currentMonth is converted to a Day.js object\n            const month = dayjs(state.currentMonth)\n            // console.log('getter', 52)\n            // Returns the full name of the month, e.g., 'January', 'February', etc.\n            return month.format('MMMM')\n        },\n\n        currentYear: (state) => {\n            // Ensure state.currentMonth is converted to a Day.js object\n            const month = dayjs(state.currentMonth)\n            // console.log('getter', 53)\n            // Returns the year\n            return month.year()\n        },\n        isToday: (state) => {\n            const today = dayjs()  // Gets today's date as a Day.js object\n            const viewingStart = dayjs(state.viewingWindowStart)  // Convert to Day.js object if not already\n            // console.log('getter', 54)\n            // Compare if both dates are the same calendar day\n            return today.isSame(viewingStart, 'day')\n        },\n\n        daysInMonth: (state) => {\n            // Assuming state.currentMonth is a Day.js object; if it's a Date, convert it:\n            const currentMonth = dayjs(state.currentMonth)\n\n            const startOfCurrentMonth = currentMonth.startOf('month')\n            const endOfCurrentMonth = currentMonth.endOf('month')\n\n            // Adjust these to ensure the grid starts on Sunday and ends on Saturday\n            const startOfGrid = startOfCurrentMonth.startOf('week')  // Assumes the week starts on Sunday by default\n            const endOfGrid = endOfCurrentMonth.endOf('week')        // Assumes the week ends on Saturday by default\n\n            // Generate the days for the calendar grid\n            const days = []\n            let day = startOfGrid\n\n            while (day.isBefore(endOfGrid) || day.isSame(endOfGrid, 'day')) {\n                days.push(day.toDate()) // Collect days as Date objects; remove toDate() if you can use Day.js objects directly\n                day = day.add(1, 'day')\n            }\n            // console.log('getter', 55)\n            return days\n        },\n\n    },\n})\n","import { defineStore } from 'pinia'\nimport { router } from '@inertiajs/vue3'\nimport dayjs from 'dayjs'\nimport utc from 'dayjs-plugin-utc'\nimport timezone from 'dayjs/plugin/timezone'\nimport { useUserStore } from '@/Stores/UserStore'\nimport { useNotificationStore } from '@/Stores/NotificationStore'\nimport { ref } from 'vue'\n\ndayjs.extend(utc)\ndayjs.extend(timezone)\n\nconst initialState = () => ({\n    team: {},\n    shows: {},\n    contributors: {},\n    members: {},\n    managers: {},\n    teamOwner: [],\n    teamLeader: [],\n    can: {},\n    id: 0,\n    name: '',\n    description: '',\n    slug: '',\n    totalSpots: '',\n    memberSpots: '',\n    activeShow: [],\n    activeEpisode: [],\n    showModal: Boolean,\n    confirmDialog: false,\n    confirmManagerDialog: false,\n    selectedManagerName: '',\n    selectedManagerId: 0,\n    addManager: false,\n    removeManager: false,\n    deleteMemberName: '',\n    deleteMemberId: 0,\n    noteEdit: 0,\n    note: '',\n    saveNoteProcessing: Boolean,\n    // on the show episode manage page\n    // turn on the go live div\n    goLiveDisplay: false,\n    openComponent: 'teamShows',\n    nextBroadcastLoaded: {\n        scheduleIndexId: null,\n        broadcastDate: null,\n        broadcastDetails: [\n            {\n                zoomLink: '',\n            },\n        ],\n        type: '',\n        image: null,\n        category: null,\n        subCategory: null,\n        slug: null,\n        name: null,\n        description: null,\n    },\n})\n\nexport const useTeamStore = defineStore('teamStore', {\n    state: initialState,\n    actions: {\n        reset() {\n            // Reset the store to its original state (clear all data)\n            Object.assign(this, initialState())\n        },\n        // async fill() {\n        //     let r = await import('@/Json/team.json');\n        //     this.$state = r.default;\n        // },\n        initializeTeam(team) {\n            const userStore = useUserStore()\n            if (team.nextBroadcast && team.nextBroadcast.broadcastDetails) {\n                this.nextBroadcastLoaded = team.nextBroadcast[0]\n                // Ensure broadcastDetails is an array and has the zoomLink object\n                this.nextBroadcastLoaded.broadcastDetails = []\n                // if (!Array.isArray(this.nextBroadcastLoaded.broadcastDetails)) {\n                //     this.nextBroadcastLoaded.broadcastDetails = []\n                // }\n\n                let zoomLinkObj = this.nextBroadcastLoaded.broadcastDetails.find(detail => detail.zoomLink !== undefined)\n                if (!zoomLinkObj) {\n                    zoomLinkObj = {zoomLink: ''}\n                    this.nextBroadcastLoaded.broadcastDetails.push(zoomLinkObj)\n                }\n                team.nextBroadcast = team.nextBroadcast.map(broadcast => ({\n                    ...broadcast,\n                    broadcastDate: userStore.convertUtcToUserTimezone(broadcast.broadcastDate),\n\n                }))\n            }\n\n            this.team = team || {}\n        },\n        initializeShows(shows) {\n            this.shows = shows || {}\n        },\n        initializeContributors(contributors) {\n            this.contributors = contributors || {}\n        },\n        setCan(can) {\n            this.can = can || {}\n        },\n        setActiveTeam(team) {\n            this.team.id = team.id\n            this.team.name = team.name\n            this.team.description = team.description\n            this.team.slug = team.slug\n            this.team.members = team.members\n            this.team.managers = team.managers\n            this.team.totalSpots = team.totalSpots\n            this.memberSpots = team.memberSpots\n        },\n        setActiveShow(show) {\n            this.activeShow = show\n        },\n        setActiveEpisode(episode) {\n            this.activeShow = episode\n        },\n        addMember(member) {\n            this.team.members.push(member)\n        },\n        removeMember(memberId) {\n            this.team.members = this.team.members.filter(member => member.id !== memberId)\n        },\n        updateCreatorTeams(creatorId, teamId, remove = false) {\n            const creator = this.creators.find(c => c.id === creatorId)\n            if (creator) {\n                if (remove) {\n                    creator.teams = creator.teams.filter(team => team.id !== teamId)\n                } else {\n                    creator.teams.push({id: teamId, is_manager: false}) // Add the new team to the creator's teams\n                }\n            }\n        },\n        // getCreators() {\n        //     router.reload({ only: ['creators'] })\n        // },\n        deleteTeamMemberCancel() {\n            this.confirmDialog = false\n        },\n        confirmTeamManagerCancel() {\n            this.confirmManagerDialog = false\n        },\n        // loadTeamMembers(members){\n        //     this.members = members;\n        // }\n        // deleteTeamMember() {\n        //     router.visit(route('teams.removeTeamMember'), {\n        //         method: 'post',\n        //         data: {\n        //             user_id: this.deleteMemberId,\n        //             team_id: this.id,\n        //             team_slug: this.slug,\n        //         },\n        //     })\n        // },\n        async deleteTeamMember() {\n            const notificationStore = useNotificationStore()\n            const payload = {\n                user_id: this.deleteMemberId,\n                team_id: this.team.id,\n            }\n\n            try {\n                const response = await axios.post(route('teams.removeTeamMember'), payload)\n                if (response.status === 200) {\n                    this.removeMember(this.deleteMemberId)\n                    this.updateCreatorTeams(this.deleteMemberId, this.team.id, true) // Remove the team from the creator's teams\n                    this.confirmDialog = false\n                    notificationStore.setToastNotification(response.data.message, 'success')\n                } else {\n                    this.confirmDialog = false\n                    notificationStore.setToastNotification('Failed to remove member from the team.', 'warning')\n                }\n            } catch (error) {\n                console.error(error)\n                this.confirmDialog = false\n                notificationStore.setToastNotification('An error occurred while removing the member from the team.', 'error')\n            }\n        },\n        async addTeamManager() {\n            const notificationStore = useNotificationStore()\n            const payload = {\n                user_id: this.selectedManagerId,\n                team_id: this.team.id,\n                team_slug: this.team.slug,\n            }\n            try {\n                const response = await axios.post(route('teams.addTeamManager'), payload)\n                if (response.status === 200) {\n                    // Add any additional logic if needed, e.g., updating team data in the store\n                    this.team.managers.push(response.data.manager);\n                    this.confirmManagerDialog = false\n                    notificationStore.setToastNotification(response.data.message, 'success')\n                } else {\n                    this.confirmManagerDialog = false\n                    notificationStore.setToastNotification('Failed to add manager to the team.', 'warning')\n                }\n            } catch (error) {\n                console.error(error)\n                this.confirmManagerDialog = false\n                notificationStore.setToastNotification('An error occurred while adding the manager to the team.', 'error')\n            }\n        },\n        async removeTeamManager() {\n            const notificationStore = useNotificationStore()\n            const payload = {\n                user_id: this.selectedManagerId,\n                team_id: this.team.id,\n                team_slug: this.team.slug,\n            }\n\n            try {\n                const response = await axios.post(route('teams.removeTeamManager'), payload)\n                if (response.status === 200) {\n                    // Remove the manager from the team.managers array\n                    this.team.managers = this.team.managers.filter(manager => manager.id !== this.selectedManagerId)\n                    this.confirmManagerDialog = false\n                    notificationStore.setToastNotification(response.data.message, 'success')\n                } else {\n                    this.confirmManagerDialog = false\n                    notificationStore.setToastNotification('Failed to remove manager from the team.', 'warning')\n                }\n            } catch (error) {\n                console.error(error)\n                this.confirmManagerDialog = false\n                notificationStore.setToastNotification('An error occurred while removing the manager from the team.', 'error')\n            }\n        },\n        toggleGoLiveDisplay() {\n            this.goLiveDisplay = !this.goLiveDisplay\n        },\n        async fetchTeamMembers() {\n            await axios.get('/team/team-members').then().error()\n        },\n        setCreators(creators) {\n            this.creators = creators\n        },\n        updatePublicMessage(html) {\n            this.team.public_message = html\n        },\n    },\n\n    getters: {\n        spotsRemaining(state) {\n            if (!state.team.members) {\n                return state.team.totalSpots // Assume no members if state.members is not defined\n            } else if (state.team.members) {\n                this.totalSpots = state.team.totalSpots\n                return Math.max(state.team.totalSpots - state.team.members.length, 0)\n            }\n        },\n        membersCount(state) {\n            if (!state.team.members) {\n                return 0 // Assume no members if state.members is not defined\n            } else if (state.team.members) {\n                this.memberSpots = state.team.members.length\n                return state.team.members.length\n            }\n        },\n        membersCountDisplay(state) {\n            if (state.team.members) {\n                return state.team.members.length > 99 ? '99+' : state.team.members.length\n            }\n        },\n        nextBroadcast(state) {\n            const {team} = state\n            if (!team.nextBroadcast || team.nextBroadcast.length === 0) {\n                return null\n            }\n\n            const userStore = useUserStore()\n            const today = dayjs().tz(userStore.timezone)\n\n            return team.nextBroadcast.reduce((closest, broadcast) => {\n                const broadcastDate = dayjs(broadcast.broadcastDate).tz(userStore.timezone)\n                if (!closest || Math.abs(broadcastDate - today) < Math.abs(dayjs(closest.broadcastDate).tz(userStore.timezone) - today)) {\n                    return broadcast\n                }\n                return closest\n            }, null)\n        },\n        sortedBroadcasts(state) {\n            if (!state.team.nextBroadcast || state.team.nextBroadcast.length === 0) {\n                return []\n            }\n\n            const userStore = useUserStore()\n            const today = dayjs().tz(userStore.timezone)\n\n            return state.team.nextBroadcast\n                .filter(broadcast => dayjs(broadcast.broadcastDate).tz(userStore.timezone).isAfter(today))\n                .sort((a, b) => dayjs(a.broadcastDate).tz(userStore.timezone).diff(dayjs(b.broadcastDate).tz(userStore.timezone)))\n                .map(broadcast => ({\n                    ...broadcast,\n                    localDate: dayjs(broadcast.broadcastDate).tz(userStore.timezone).format(),\n                }))\n        },\n        futureBroadcasts(state) {\n            const nextBroadcast = this.nextBroadcast\n            if (!state.team.nextBroadcast || state.team.nextBroadcast.length === 0) {\n                return []\n            }\n\n            const userStore = useUserStore()\n            const today = dayjs().tz(userStore.timezone)\n\n            return state.team.nextBroadcast\n                .filter(broadcast =>\n                    dayjs(broadcast.broadcastDate).tz(userStore.timezone).isAfter(today) &&\n                    (!nextBroadcast || broadcast.broadcastDate !== nextBroadcast.broadcastDate),\n                )\n                .sort((a, b) => dayjs(a.broadcastDate).tz(userStore.timezone).diff(dayjs(b.broadcastDate).tz(userStore.timezone)))\n                .map(broadcast => ({\n                    ...broadcast,\n                    localDate: dayjs(broadcast.broadcastDate).tz(userStore.timezone).format(),\n                }))\n        },\n    },\n})\n\n\n// Another option for declaring specific data to return:\n// let data = r.default;\n//\n// import('@/Json/team.json').then(r => {\n// this.$patch({\n//     name: data.name,\n//     spots: data.spots,\n//     members: data.members\n// });\n// });\n","import { defineStore } from 'pinia'\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\nimport { useStreamStore } from '@/Stores/StreamStore'\nimport { useUserStore } from '@/Stores/UserStore'\nimport { useChannelStore } from '@/Stores/ChannelStore'\nimport { useShowStore } from '@/Stores/ShowStore'\nimport { useAudioStore } from '@/Stores/AudioStore'\nimport videojs from 'video.js'\nimport { usePage } from '@inertiajs/vue3'\nimport { nextTick } from 'vue'\nimport { useNotificationStore } from '@/Stores/NotificationStore'\n\nconst initialState = () => ({\n    mistServerUri: 'https://mist.nottv.io/', // tec21: 2024-02-09, if we don't start with the address here changing channels is really slow and buggy. Address for the MistServer listed in the Admin Settings saved in AppSetting\n    player: null, // Video.js player instance\n    eventListenersAttached: false, // Track if listeners are attached\n    videoPlayerLoaded: false,\n    class: '',\n    videoContainerClass: '',\n    // ottClass: 'OttClose',\n    videoSourceIdSrc1: '',\n    videoSourceIdSrc2: '',\n    videoSourceIdSrc3: '',\n    videoSourceTypeSrc1: '',\n    videoSourceTypeSrc2: '',\n    videoSourceTypeSrc3: '',\n    firstPlayVideoSourceType: '',\n    firstPlayVideoSource: '',\n    key: '',\n    videoName: '',\n    videoSource: '',\n    videoSourceType: '',\n    videoPoster: '',\n    nextSource: '',\n    previousSource: '',\n    currentView: '',\n    currentChannelId: 0,\n    currentChannelName: '',\n    currentShow: {},\n    currentShowEpisode: {},\n    currentVideo: {},\n    hasVideo: false,\n    controls: true,\n    muted: true,\n    paused: true,\n    // videoCurrentTime: '',\n    currentTime: 0, // Current playback time in seconds\n    duration: 0, // Total video duration in seconds\n    formattedTime: '00:00 / 00:00', // Formatted time string\n    blue: false, // DO NOT REMOVE\n    videoIsYoutube: false,\n    videoUploadComplete: false,\n})\n\nexport const useVideoAuxPlayerStore = defineStore('videoAuxPlayerStore', {\n    state: initialState,\n    actions: {\n        reset() {\n            // Reset the store to its original state (clear all data)\n            Object.assign(this, initialState())\n        },\n\n        async getMistServerUri() {\n            try {\n                let response = await axios.get('/mist-server/uri')\n                this.mistServerUri = response.data\n            } catch (error) {\n                console.error(error)\n            }\n        },\n\n        // Initialize or update the player instance\n        setPlayer(playerInstance) {\n            this.player = playerInstance\n            this.initializePlayer().then(() => {\n                this.attachEventListeners() // Attach event listeners after initialization\n            }).catch(error => {\n                console.error('Error during video player initialization:', error)\n            })\n        },\n\n        // Initialize the player with necessary settings and start playback\n        async initializePlayer() {\n            if (!this.player) {\n                console.error('Video.js player is not initialized.')\n                return\n            }\n\n            await nextTick() // Ensure Vue's DOM updates are processed\n\n            // Perform any necessary audio context and node setup\n            await useAudioStore().ensureAudioContextAndNodesReady(this.player)\n\n            // Apply initial player settings\n            this.player.controls(false)\n            this.player.muted(this.muted)\n\n            // Attempt to start playback\n            this.player.ready(() => {\n                this.player.play().then(() => {\n                    console.log('Playback started successfully')\n                }).catch(error => {\n                    console.error('Error trying to play the video:', error)\n                    // Handle the error (e.g., showing a user-friendly message)\n                })\n            })\n        },\n\n        // Attach event listeners to the player\n        attachEventListeners() {\n            if (!this.player || this.eventListenersAttached) {\n                console.log('Event listeners are already attached or video player is not initialized.')\n                return\n            }\n\n            this.player.on('timeupdate', this.handleTimeUpdate)\n            this.player.on('fullscreenchange', this.handleFullscreenChange)\n            this.player.on('play', this.handlePlay)\n            this.player.on('pause', this.handlePause)\n            this.player.on('error', this.handleError)\n\n            this.eventListenersAttached = true\n            console.log('Event listeners attached.')\n        },\n\n        // Detach event listeners from the player\n        detachEventListeners() {\n            if (!this.player || !this.eventListenersAttached) {\n                console.log('Event listeners are already detached or video player is not initialized.')\n                return\n            }\n\n            useAudioStore().stopAudioLevelMonitoring()\n            this.player.off('timeupdate', this.handleTimeUpdate)\n            this.player.off('fullscreenchange', this.handleFullscreenChange)\n            this.player.off('play', this.handlePlay)\n            this.player.off('pause', this.handlePause)\n            this.player.off('error', this.handleError)\n\n            this.eventListenersAttached = false\n            console.log('Event listeners detached.')\n        },\n\n        // Dispose of the player and perform cleanup\n        disposePlayer() {\n            if (!this.player) {\n                console.error('Video player is not initialized.')\n                return\n            }\n            this.detachEventListeners() // Detach event listeners if attached\n            this.player.dispose() // Dispose of the player instance\n            this.player = null // Reset the player state\n\n            // Optionally, stop audio level monitoring if linked to the player lifecycle\n            // const audioStore = useAudioStore();\n            // audioStore.stopAudioLevelMonitoring();\n\n            console.log('Video player disposed and cleaned up.')\n        },\n\n        // New method to prepare for a new video source\n        prepareForNewVideoSource(source) {\n            console.log('Preparing for new video source')\n\n            // Example: Clear any existing channel or video-specific state\n            // useChannelStore().clearChannel()\n\n            // Reset or cleanup any existing video playback, if necessary\n            // this.resetPlayback();\n\n            // Load and play the new video source\n            this.loadNewVideo(source)\n        },\n\n        resetPlayback() {\n            if (this.player) {\n                this.player.pause()\n                this.player.muted(true)\n                this.player.currentTime(0) // Optionally reset the time\n                // Further cleanup logic here, if necessary\n                this.detachEventListeners() // Detach event listeners if attached\n            }\n        },\n\n        // Event handlers\n        handleTimeUpdate() {\n            // console.log('Handling timeupdate...');\n            // Implement your logic\n            this.currentTime = this.player.currentTime()\n            this.duration = this.player.duration()\n            const progressPercentage = (this.currentTime / this.duration) * 100\n            this.formattedTime = `${this.formatDuration(this.currentTime)} / ${this.formatDuration(this.duration)}`\n\n            // Update UI elements or emit events as needed\n            // Note: Direct manipulation of the DOM or component refs from the store is not recommended\n\n        },\n        // for the handleTimeUpdate eventHandler\n        formatDuration(durationInSeconds) {\n            const hours = Math.floor(durationInSeconds / 3600)\n            const minutes = Math.floor((durationInSeconds % 3600) / 60)\n            const seconds = Math.floor(durationInSeconds % 60)\n\n            const parts = [hours, minutes, seconds].map(part => part.toString().padStart(2, '0'))\n            return parts.join(':')\n        },\n        handleFullscreenChange() {\n            console.log('Handling fullscreenchange...')\n            // Implement your logic\n            this.player?.on('fullscreenchange', () => {\n                if (this.player.isFullscreen()) {\n                    // Video is entering fullscreen mode\n                    // You can add custom behavior for entering fullscreen here if needed\n                } else {\n                    // Video is exiting fullscreen mode\n                    // Check if the video was playing before entering fullscreen\n                    if (this.player.paused() === false) {\n                        // Resume playback after exiting fullscreen\n                        this.player.play()\n                    }\n                }\n            })\n        },\n        handlePlay() {\n            console.log('Handling play...')\n            // Implement your logic\n            this.player?.on('play', () => {\n                this.paused = false\n            })\n        },\n        handlePause() {\n            console.log('Handling pause...')\n            // Implement your logic\n            this.player?.on('pause', () => {\n                this.paused = true\n            })\n        },\n        handleError() {\n            console.log('Handling error...')\n            // Implement your logic\n            this.player?.on('error', function () {\n                const error = this.player.error()\n                console.error('Video.js Error:', error.code, error.message)\n            })\n        },\n        makeBlue() {\n            // for testing. DO NOT REMOVE.\n            this.blue = true\n        },\n        // Apparently this loadFirstPlay isn't being used...\n        // loadFirstPlay() {\n        //     const {props} = usePage()\n        //     let videoJs = videojs('aux-player')\n        //     const type = props.firstPlayVideoSourceType\n        //     const src = props.firstPlayVideoSource\n        //     videoJs.ready(() => {\n        //         videoJs.src({src, type})\n        //         videoJs.play().then(() => {\n        //             console.log('Playback started successfully')\n        //         }).catch(error => {\n        //             console.error('Error trying to play the video:', error)\n        //             // Handle the error (e.g., showing a user-friendly message)\n        //         })\n        //     })\n        //     console.log(type)\n        //     console.log(src)\n        // },\n        // Toggle mute state\n        toggleMute() {\n            if (this.muted) {\n                this.unMute()\n            } else {\n                this.mute()\n            }\n        },\n        // Mute the video\n        mute() {\n            if (this.player) {\n                this.player.muted(true)\n                this.muted = true\n            }\n        },\n        // Unmute the video\n        unMute() {\n            // const audioStore = useAudioStore()\n\n            if (this.player) {\n                // Prepare audio setup for when it's unmuted\n                // audioStore.userInteractionForAudio()\n\n                // Optionally, if fadeInAudioFromMuted is a gradual process,\n                // ensure this.player.muted(false) is called within that function.\n                // audioStore.fadeInAudioFromMuted()\n\n                this.player.muted(false)\n                this.muted = false\n            }\n        },\n        togglePlay() {\n            let videoJs = videojs('aux-player')\n\n            if (this.paused) {\n                videoJs.play()\n            } else {\n                videoJs.pause()\n            }\n        },\n        load() {\n            let videoJs = videojs('aux-player')\n            videoJs.load()\n        },\n        loadNewLiveSource(source, sourceType) {\n            let videoJs = videojs('aux-player')\n            let fullSourceUrl = this.mistServerUri + '/hls/' + source + '/index.m3u8'\n            videoJs.src({'src': fullSourceUrl, 'type': sourceType});\n            videoJs.play()\n        },\n        pause() {\n            let videoJs = videojs('aux-player')\n            videoJs.controls(false)\n            videoJs.pause()\n            this.paused = true\n        },\n        play() {\n            let videoJs = videojs('aux-player')\n\n            videoJs.play()\n            videoJs.controls(false)\n            this.paused = false\n        },\n        // next not built yet\n        next() {\n            let videoJs = videojs('aux-player')\n            videoJs.controls(false)\n            videoJs.src(this.nextSource)\n        },\n        // back not built yet\n        back() {\n            let videoJs = videojs('aux-player')\n            videoJs.controls(false)\n            videoJs.src(this.previousSource)\n        },\n        fullscreen() {\n            let videoJs = videojs('aux-player')\n            videoJs.controls(false)\n            // videoJs.fullscreen(this.previousSource)\n            videoJs.requestFullscreen()\n        },\n        getVideoCurrentTime() {\n            let videoJs = videojs('aux-player')\n            videoJs.controls(false)\n            this.videoCurrentTime = videoJs.currentTime\n        },\n\n\n        // This playNewVideo was created to access the audioContext\n        // which our audio compressor uses. This is new as of 2/2/2024\n        // ~ tec21\n\n        // playNewVideo(source) {\n        //     useChannelStore().clearChannel() // Reset or clear channel store\n        //     const videoJs = videojs('aux-player')\n        //     let videoSrc, videoSourceType\n        //     // Determine the source type and construct the source URL if necessary\n        //     if (source.mediaType === 'externalVideo') {\n        //         videoSrc = source.video_url // Direct URL to the video\n        //         videoSourceType = source.type // MIME type, e.g., 'video/youtube', 'video/mp4'\n        //     } else {\n        //         // Construct file path for internal videos\n        //         videoSrc = `${source.cdn_endpoint}${source.cloud_folder}${source.folder}/${source.file_name}`\n        //         videoSourceType = source.type // MIME type, typically 'video/mp4' for file-based sources\n        //     }\n        //     this.resumeAudioContextIfNeeded()\n        //     videoJs.src({src: videoSrc, type: videoSourceType})\n        //     videoJs.muted(false)\n        // },\n\n        // getSourceDetails(source) {\n        //     let videoSrc = source.video_url; // Directly access the video URL\n        //\n        //     // Default to 'video/mp4' if type is falsy ('', null, undefined, etc.)\n        //     let videoSourceType = source.type || 'video/mp4'\n        //\n        //     // Determine the mediaType and construct the source URL if necessary\n        //     if (source.mediaType === 'externalVideo') {\n        //         videoSrc = source.video_url // Direct URL to the video\n        //     } else {\n        //         // Internal video: construct the path, ensuring the file name is encoded\n        //         let encodedFileName = encodeURIComponent(source.file_name);\n        //         console.log(encodedFileName)\n        //         videoSrc = `${source.cdn_endpoint}${source.cloud_folder}${source.folder}/${encodedFileName}`\n        //     }\n        //     // Logic to determine videoSrc and videoSourceType\n        //     console.log(`Video Source: ${videoSrc}, Type: ${videoSourceType}`);\n        //     return { videoSrc, videoSourceType } // Return as an object\n        // },\n\n\n        getSourceDetails(source) {\n            let videoSrc, videoSourceType\n\n            console.log('getSourceDetails called with source:', source);\n\n            // Default to 'video/mp4' if type is not specified or is empty\n            videoSourceType = source.type || 'video/mp4'\n            console.log(`Determined Video Source Type: ${videoSourceType}`);\n\n            if (source.mediaType === 'externalVideo') {\n                // For external videos, use the URL as provided without encoding\n                videoSrc = source.video_url\n                console.log('Using external video source:', videoSrc);\n            } else {\n                console.log('CDN Endpoint:', source.cdn_endpoint);\n                console.log('Cloud Folder:', source.cloud_folder);\n                console.log('Folder:', source.folder);\n                console.log('File Name:', source.file_name);\n                // For internal videos, construct the URL from its components\n                // Here, we assume the cdn_endpoint, cloud_folder, and folder are correctly formatted\n                // and do not require encoding. Only the file_name might need encoding.\n                const basePath = `${source.cdn_endpoint}${source.cloud_folder}${source.folder}/`\n                // const encodedFileName = encodeURIComponent(source.file_name);\n                const fileName = source.file_name\n                videoSrc = basePath + fileName\n                console.log('Constructed internal video source:', videoSrc);\n                // If your server or CDN is configured to handle spaces in URLs without %20 encoding\n                // or if the original working URLs did not use standard URL encoding,\n                // you might adjust the encoding strategy here.\n                // For example, to replace spaces with %20 but leave other characters as-is:\n                // const fileNameForUrl = source.file_name.replace(/ /g, '%20');\n                // videoSrc = basePath + fileNameForUrl;\n            }\n\n            console.log(`Final Constructed Video Source: ${videoSrc}, Type: ${videoSourceType}`);\n            return {videoSrc, videoSourceType}\n        },\n\n\n        loadNewVideo(source) {\n            try {\n                let videoJs = videojs('aux-player');\n                console.log('LOAD NEW VIDEO');\n                const audioStore = useAudioStore();\n                // Correctly destructure the returned object to get videoSrc and videoSourceType\n                const {videoSrc, videoSourceType} = this.getSourceDetails(source);\n\n                // Example: Stopping and cleaning up the current video and audio setup\n                if (videoJs) {\n                    videoJs.src({'src': videoSrc, 'type': videoSourceType});\n\n                    videoJs.ready(() => {\n                        // ensureAudioContextAndNodesReady does the following:\n                        // 1. Resumes AudioContext if suspended.\n                        // 2. (Re)connects MediaElementSource from the video element to AudioContext.\n                        audioStore.deferAudioSetup = false;\n                        audioStore.ensureAudioContextAndNodesReady(videoJs).then(() => {\n                            // Only attempt to play the video after ensuring the AudioContext is ready\n                            videoJs.play().catch(error => {\n                                useNotificationStore().setGeneralServiceNotification('Error', 'Playback initiation error: ' + error)\n                                console.error('Playback initiation error: ', error);\n                            });\n\n                            // Consider toggling mute based on the user's preference or previous state\n                            videoJs.muted(false);\n                            this.muted = false;\n                        });\n                    });\n                }\n            } catch (error) {\n                // Log the error or perform any other error handling\n                useNotificationStore().setGeneralServiceNotification('Error', 'Error loading new video: ' + error)\n                console.error('Error loading new video: ', error);\n            }\n        },\n\n        // loadNewVideo(source) {\n        //     console.log('LOAD NEW VIDEO TTTTTTTTTTTTTTTTTTTTTTTTTS');\n        //     console.log('LOAD NEW VIDEO initiated with source:', source);\n        //     const audioStore = useAudioStore();\n        //     this.unMute();\n        //     // Destructure the returned object to get videoSrc and videoSourceType\n        //     const { videoSrc, videoSourceType } = this.getSourceDetails(source);\n        //     console.log(`Video source details received: Src - ${videoSrc}, Type - ${videoSourceType}`);\n        //\n        //     // Ensure you're using the same player instance (`videoJs` in this context) for consistency\n        //     let videoJs = videojs('aux-player'); // Ensure this ID matches your video player element\n        //     console.log('Video.js player instance created or retrieved.');\n        //\n        //     // Stop and clean up the current video and audio setup if necessary\n        //     videoJs.ready(() => {\n        //         console.log('Video.js player is ready.');\n        //         videoJs.src({ 'src': videoSrc, 'type': videoSourceType });\n        //         console.log(`Video source set: ${videoSrc} of type ${videoSourceType}`);\n        //\n        //         // Ensure AudioContext and nodes are ready\n        //         audioStore.ensureAudioContextAndNodesReady(videoJs).then(() => {\n        //             console.log('Audio context and nodes are ready. Attempting to play video.');\n        //\n        //             videoJs.play().then(() => {\n        //                 console.log('Video playback started successfully.');\n        //             }).catch(error => {\n        //                 console.error('Playback initiation error:', error);\n        //             });\n        //             // Attempt to play the video after ensuring the AudioContext is ready\n        //             // videoJs.play().catch(error => {\n        //             //     console.error('Playback initiation error:', error);\n        //             // });\n        //\n        //             // Apply the unMute logic from loadMistStreamVideo to ensure audio is correctly configured\n        //             this.unMute();\n        //             console.log('Audio unmuted.');\n        //             this.paused = false;\n        //             console.log('Paused flag set to false.');\n        //         }).catch(error => {\n        //             console.error('Error ensuring audio context and nodes are ready:', error);\n        //         });\n        //     });\n        // },\n\n        playNewVideo() {\n            console.log('PLAY NEW VIDEO')\n            if (this.player) {\n                // Wait for the video to be ready before playing\n                this.player.ready(() => {\n                    this.player.play()\n                    // Assuming you want to unmute here; check if this aligns with user interaction policies\n                    this.player.muted(false)\n                    this.muted = false\n                })\n            }\n        },\n\n\n// load video from different types of sources:\n// Url\n// YouTube\n// EmbedCode\n// Mist\n// File\n        loadNewSourceFromYouTube(source) {\n            this.videoIsYoutube = true\n            useChannelStore().clearChannel()\n            let videoJs = videojs('aux-player')\n            this.videoSource = source\n            this.videoSourceType = 'video/youtube'\n            videoJs.src({'src': this.videoSource, 'type': this.videoSourceType})\n            videoJs.controls(false)\n            this.unMute()\n            this.paused = false\n        },\n        loadNewLiveSourceFromRumble(source) {\n            this.videoIsYoutube = true\n            useChannelStore().clearChannel()\n            let videoJs = videojs('aux-player')\n            this.videoSource = source\n            this.videoSourceType = 'application/x-mpegURL'\n            videoJs.src({'src': this.videoSource, 'type': this.videoSourceType})\n            videoJs.controls(false)\n            this.unMute()\n            this.paused = false\n        },\n        loadNewSourceFromUrl(source) {\n            try {\n                this.videoIsYoutube = false;\n                useChannelStore().clearChannel();\n                let videoJs = videojs('aux-player');\n\n                if (!source.video_url || !source.type) {\n                    useNotificationStore().setGeneralServiceNotification('Error', 'Invalid video source.')\n                    throw new Error(\"Invalid video source.\");\n                }\n\n                this.videoSource = source.video_url;\n                this.videoSourceType = source.type;\n                videoJs.src({'src': source.video_url, 'type': source.type});\n\n                this.unMute();\n                this.paused = false;\n            } catch (error) {\n                useNotificationStore().setGeneralServiceNotification('Error', 'Failed to load new source: ' + error)\n                console.error(\"Failed to load new source:\", error);\n                throw error; // Re-throw the error to be caught by the caller\n            }\n        },\n        loadNewSourceFromMist(source) {\n            this.videoIsYoutube = false\n            let videoJs = videojs('aux-player')\n            let filePath = 'https://mist.not.tv/hls/'\n            this.videoSource = filePath + source + '/index.m3u8'\n            this.videoSourceType = 'application/x-mpegURL'\n            videoJs.src({'src': this.videoSource, 'type': this.videoSourceType})\n            this.unMute()\n            this.paused = false\n        },\n        loadNewSourceFromFile(source) {\n            this.videoIsYoutube = false\n            useChannelStore().clearChannel()\n            let videoJs = videojs('aux-player')\n            let filePath = source.cdn_endpoint + source.cloud_folder + source.folder + '/'\n            this.videoSource = source.file_name\n            this.videoSourceType = source.type\n            videoJs.src({'src': filePath + this.videoSource, 'type': this.videoSourceType})\n            this.unMute()\n            this.paused = false\n        },\n\n        // The new load video functions (2024-02-09 tec21 and ChatGPT)\n        loadExternalSourceVideo() {\n\n        },\n        loadPlaylistVideos() {\n\n        },\n        async loadMistStreamVideo(mistStream, stayMuted) {\n            let shouldUnmute = true\n            if(stayMuted) {\n                shouldUnmute = false\n            };\n            // console.log('Loading Mist Stream Video for:', mistStream.name); // Log which Mist Stream is being loaded\n            // This mistServerUri comes from appSettings\n            if (!this.mistServerUri) {\n                console.log('Mist Server URI not set, fetching...') // Log fetching attempt\n                await this.getMistServerUri()\n            }\n            if (this.mistServerUri) {\n                // console.log('Mist Server URI:', this.mistServerUri); // Log the URI to confirm it's fetched\n                let basePath = this.mistServerUri\n                this.videoSource = basePath + 'hls/' + mistStream.name + '/index.m3u8'\n                // console.log('Video Source Set To:', this.videoSource); // Log the final video source\n\n                this.videoSourceType = 'application/vnd.apple.mpegURL'\n                // console.log('Setting player source to:', this.videoSource, 'of type:', this.videoSourceType); // Log the source setting\n                let videoJs = videojs('aux-player')\n                videoJs.src({'src': this.videoSource, 'type': this.videoSourceType})\n                if (shouldUnmute) {\n                    this.unMute()\n                }\n                this.paused = false\n            } else {\n                console.error('Mist Server URI is still not set after fetching.')\n            }\n            // let basePath = this.mistServerUri\n            // this.videoSource = basePath + 'hls/' + mistStream.name + '/index.m3u8'\n            // this.videoSourceType = \"application/vnd.apple.mpegURL\"\n            // this.player.src({'src': this.videoSource, 'type': this.videoSourceType})\n            // this.unMute()\n            // this.paused = false\n        },\n        async loadVideoFromFile(video) {\n            // console.log('Loading Mist Stream Video for:', mistStream.name); // Log which Mist Stream is being loaded\n            // This mistServerUri comes from appSettings\n            // if (!this.mistServerUri) {\n            //     console.log('Mist Server URI not set, fetching...') // Log fetching attempt\n            //     await this.getMistServerUri()\n            // }\n            // if (this.mistServerUri) {\n                // console.log('Mist Server URI:', this.mistServerUri); // Log the URI to confirm it's fetched\n                // let basePath = this.mistServerUri\n                // this.videoSource = basePath + 'hls/' + video.name + '/index.m3u8'\n                // console.log('Video Source Set To:', this.videoSource); // Log the final video source\n\n            // this.videoSourceType = 'video/mp4'\n            console.log('Video Source Type:', video.type);\n            console.log('Video URL:', video.video_url);\n            console.log('CDN Endpoint:', video.cdn_endpoint);\n            console.log('Cloud Folder:', video.cloud_folder);\n            console.log('Folder:', video.folder);\n            console.log('File Name:', video.file_name);\n\n            let videoSource = video.cdn_endpoint + video.cloud_folder + video.folder + '/' + video.file_name\n                // console.log('Setting player source to:', this.videoSource, 'of type:', this.videoSourceType); // Log the source setting\n                let videoJs = videojs('aux-player')\n                videoJs.src({'src': videoSource, 'type': video.type})\n                this.unMute()\n                this.paused = false\n            // } else {\n            //     console.error('Mist Server URI is still not set after fetching.')\n            // }\n            // let basePath = this.mistServerUri\n            // this.videoSource = basePath + 'hls/' + mistStream.name + '/index.m3u8'\n            // this.videoSourceType = \"application/vnd.apple.mpegURL\"\n            // this.player.src({'src': this.videoSource, 'type': this.videoSourceType})\n            // this.unMute()\n            // this.paused = false\n        },\n\n\n        setNowPlayingInfoVideoFile(source) {\n            this.nowPlayingType = 'Video File'\n            this.nowPlayingName = source.file_name\n            useStreamStore().currentChannel = 'On Demand'\n        },\n        setNowPlayingInfoShow(show, episode) {\n            this.clearNowPlayingInfo()\n            const showStore = useShowStore()\n\n            if (show.firstPlayVideo) {\n                showStore.setName(show.firstPlayVideo.name)\n                showStore.setEpisodeUrl(`/shows/${show.slug}/episode/${source.firstPlayVideo.slug}`)\n            } else if (episode) {\n                showStore.setName(show.name)\n                showStore.setUrl(`/shows/${show.slug}`)\n                showStore.setEpisodeName(episode.name)\n                showStore.setEpisodeUrl(`/shows/${show.slug}/episode/${episode.slug}`)\n            } else {\n                showStore.setName(show.name)\n                showStore.setUrl(`/shows/${show.slug}`)\n            }\n        },\n// change video size/position and page layout\n        makeVideoPiP() {\n            // const appSettingStore = useAppSettingStore();\n            // const userStore = useUserStore();\n            //\n            // if (userStore.isMobile) {\n            //     let videoJs = videojs('aux-player')\n            //     videoJs.controls(false)\n            //     if(this.fullPage) {\n            //         this.class = 'pipVideoClassFullPage'\n            //         this.videoContainerClass = 'pipVideoContainerFullPage'\n            //     } else {\n            //         this.class = 'pipVideoClassTopRight'\n            //         this.videoContainerClass = 'pipVideoContainerTopRight'\n            //     }\n            //     appSettingStore.togglePipChatMode()\n            // }\n        },\n        makeVideoFullPage() {\n            const appSettingStore = useAppSettingStore()\n            const userStore = useUserStore()\n\n            // this.fullPage = true; // to be deleted and replaced by appSettingStore.fullPage\n            appSettingStore.fullPage = true\n            // userStore.hidePage = true // to be deleted and replaced by appSettingStore.hidePage\n            appSettingStore.hidePage = true\n            appSettingStore.ott = 0\n\n            this.videoContainerClass = 'fullPageVideoContainer'\n            this.class = 'fullPageVideoClass'\n            this.controls = !userStore.isMobile\n        },\n        makeVideoTopRight() {\n            const appSettingStore = useAppSettingStore()\n\n            // this.fullPage = false // to be deleted and replaced by appSettingStore.fullPage\n            appSettingStore.fullPage = false\n            // userStore.hidePage = false // to be deleted and replaced by appSettingStore.hidePage\n            appSettingStore.hidePage = false\n            // this.currentPageIsStream = false // to be deleted and replaced by appSettingStore.currentPageIsStream\n            appSettingStore.currentPageIsStream = false\n\n            this.videoContainerClass = 'topRightVideoContainer'\n            this.class = 'topRightVideoClass'\n            this.controls = false\n        },\n        makeVideoWelcomePage() {\n            const appSettingStore = useAppSettingStore()\n            this.videoContainerClass = 'welcomeVideoContainer'\n            this.class = 'welcomeVideoClass'\n            appSettingStore.loggedIn = false\n            appSettingStore.fullPage = true\n            appSettingStore.hidePage = false\n        },\n        setMistServerUri(mistServerUri) {\n            this.mistServerUri = mistServerUri\n        }\n\n\n    },\n\n    getters: {},\n})\n","import { onBeforeMount, onMounted, watch } from 'vue'\nimport { useUserStore } from \"@/Stores/UserStore\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useVideoPlayerStore } from \"@/Stores/VideoPlayerStore\"\nimport { router } from '@inertiajs/vue3'\n\nexport function usePageSetup(pageName) {\n    const userStore = useUserStore()\n    const appSettingStore = useAppSettingStore()\n    const videoPlayerStore = useVideoPlayerStore()\n\n    appSettingStore.currentPage = pageName\n    appSettingStore.showFlashMessage = true\n    appSettingStore.pageIsHidden = false\n\n// PageSetup utility\n    if (userStore.isMobile || window.innerWidth < 1024) {\n        appSettingStore.ott = 0; // Close all panels on mobile devices\n    } else if (appSettingStore.fullPage) {\n        appSettingStore.ott = 0; // Default to closed in fullPage mode\n    } else {\n        if (appSettingStore.ott === 0) {\n            appSettingStore.ott = 4\n        }\n        // appSettingStore.ott = 4; // Open OttChat by default on larger screens\n        appSettingStore.showOttButtons = true;\n    }\n\n    videoPlayerStore.makeVideoTopRight()\n\n    if (appSettingStore.pageReload) {\n        appSettingStore.pageReload = false\n        appSettingStore.pageWasReloaded = true\n        window.location.reload();\n    }\n    // Check if the URL contains query strings\n\n\n    // Only scroll into view if there are no query strings\n\n        // const topDiv = document.getElementById(\"topDiv\")\n        // if (topDiv) {\n        //     topDiv.scrollIntoView()\n        // }\n        router.on('navigate', (event) => {\n            // Ensure OTT panels do not open automatically on mobile devices\n            if (userStore.isMobile || window.innerWidth < 1024 || appSettingStore.fullPage) {\n                appSettingStore.ott = 0; // Close all panels on mobile devices\n            } else {\n                if (appSettingStore.ott === 0) {\n                    appSettingStore.ott = 4\n                }\n                // appSettingStore.ott = 0; // Default to closed on larger screens\n            }\n            const hasQueryStrings = window.location.search !== '';\n            if (!hasQueryStrings || appSettingStore.shouldScrollToTop) {\n                requestAnimationFrame(() => {\n                    const topDiv = document.getElementById(\"topDiv\");\n                    if (topDiv) {\n                        topDiv.scrollIntoView({behavior: 'auto'});\n                    } else {\n                        window.scrollTo(0, 0);\n                    }\n                });\n            }\n            appSettingStore.shouldScrollToTop = false;\n        })\n    // Only update if we're not already on this page to avoid overwriting with the current URL\n    appSettingStore.setPrevUrl()\n    appSettingStore.showOttButtons = true\n    appSettingStore.noLayout = false\n\n    // router.reload()\n\n    watch(\n        () => appSettingStore.isSmallScreen,\n        (newValue) => {\n            if (newValue) {\n                appSettingStore.ott = 0;\n            } else {\n                appSettingStore.ott = 4;\n            }\n        },\n        { immediate: true } // This option ensures the watch executes immediately with the current value\n    );\n\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".copy-message{background-color:#000000bf;border-radius:10px;bottom:20%;color:#fff;font-size:1.5rem;left:50%;padding:20px;position:fixed;transform:translateX(-50%);z-index:100}.copy-message,.fade-enter-active,.fade-leave-active{transition:opacity .5s ease}.fade-enter-from,.fade-leave-to{opacity:0}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/Components/Pages/ShowRecordings/RecordingsListBody.vue\"],\"names\":[],\"mappings\":\"AA+FA,cAKE,0BAAqC,CAGrC,kBAAmB,CANnB,UAAW,CAIX,UAAY,CAGZ,gBAAiB,CANjB,QAAS,CAIT,YAAa,CANb,cAAe,CAGf,0BAA2B,CAM3B,WAEF,CAEA,oDAHE,2BAKF,CAEA,gCACE,SACF\",\"sourcesContent\":[\"<template>\\n  <tbody class=\\\"bg-white divide-y divide-gray-200\\\">\\n  <tr v-for=\\\"recording in recordings\\\" :key=\\\"recording.id\\\"\\n      @mouseover=\\\"state.hoveredRow = recording.id\\\"\\n      @mouseleave=\\\"state.hoveredRow = null\\\"\\n      @click=\\\"selectRecording(recording)\\\"\\n      :class=\\\"rowClass(recording.id)\\\">\\n\\n    <td class=\\\"px-6 py-4 whitespace-nowrap\\\">\\n      <div>{{ recording.start_date_local }}</div>\\n      <div v-if=\\\"recording.comment\\\" class=\\\"text-xs uppercase text-orange-700 font-semibold break-words\\\">\\n        <span :class=\\\"{ 'text-indigo-600': recording.comment !== 'automated recording' }\\\">{{ recording.comment }}</span>\\n      </div>\\n    </td>\\n    <td class=\\\"px-6 py-4 whitespace-nowrap\\\">\\n      {{ recording.start_time_local }}\\n    </td>\\n    <td class=\\\"px-6 py-4 whitespace-nowrap\\\">\\n      {{ recording.end_time_local }}\\n    </td>\\n    <td class=\\\"px-6 py-4 whitespace-nowrap\\\">\\n      {{ formatDuration(recording.total_milliseconds_recorded) }}\\n    </td>\\n    <td class=\\\"px-6 py-4 whitespace-nowrap\\\"></td>\\n    <td class=\\\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium space-x-1\\\">\\n      <button @click.stop=\\\"shareRecording(recording.share_url)\\\"\\n              class=\\\"btn btn-xs bg-orange-200 hover:bg-orange-300 text-black\\\">\\n        <font-awesome-icon icon=\\\"fa-share\\\" class=\\\"\\\"/> Share\\n      </button>\\n      <button @click.stop=\\\"confirmAddToEpisode\\\"\\n              class=\\\"btn btn-xs\\\">Add To Episode</button>\\n      <button @click.stop=\\\"confirmDownload(recording)\\\"\\n              class=\\\"btn btn-xs btn-info\\\">Download</button>\\n      <div @click.stop=\\\"confirmSaveToPremium\\\" class=\\\"btn btn-xs\\\">Save to Premium Storage</div>\\n    </td>\\n  </tr>\\n\\n  <transition name=\\\"fade\\\">\\n    <div v-if=\\\"showCopyMessage\\\" class=\\\"copy-message\\\">\\n      {{ copyMessage }}\\n    </div>\\n  </transition>\\n  </tbody>\\n</template>\\n\\n<script setup>\\nimport { computed, reactive, ref } from 'vue'\\nimport { useRecordingStore } from '@/Stores/RecordingStore';\\nimport { useClipboard } from '@vueuse/core';\\n\\nconst recordingStore = useRecordingStore();\\n\\nconst shareClip = useClipboard();\\n\\nconst showCopyMessage = ref(false);\\nconst copyMessage = ref('');\\n\\nconst recordings = computed(() => recordingStore.formattedRecordings);\\nconst state = reactive({\\n  hoveredRow: null,\\n});\\n\\nconst selectRecording = (recording) => {\\n  recordingStore.setSelectedRecording(recording);\\n  document.getElementById('confirmRecordingPlaybackModal').showModal();\\n};\\n\\nconst shareRecording = (shareUrl) => {\\n  recordingStore.shareRecording(shareUrl);\\n};\\n\\nconst confirmAddToEpisode = () => {\\n  document.getElementById('confirmAddToEpisodeModal').showModal();\\n};\\n\\nconst confirmDownload = (recording) => {\\n  recordingStore.setSelectedRecording(recording);\\n  document.getElementById('confirmDownloadModal').showModal();\\n};\\n\\nconst confirmSaveToPremium = () => {\\n  document.getElementById('confirmSaveToPremiumModal').showModal();\\n};\\n\\nconst rowClass = computed(() => (recordingId) => ({\\n  'hover:bg-blue-100 cursor-pointer': state.hoveredRow === recordingId,\\n  'bg-green-100': recordingStore.nowPlayingRecordingId === recordingId,\\n}));\\n\\nconst formatDuration = (totalMilliseconds) => {\\n  return recordingStore.formatDuration(totalMilliseconds);\\n};\\n</script>\\n\\n<style>\\n.copy-message {\\n  position: fixed;\\n  bottom: 20%;\\n  left: 50%;\\n  transform: translateX(-50%);\\n  background-color: rgba(0, 0, 0, 0.75);\\n  color: white;\\n  padding: 20px;\\n  border-radius: 10px;\\n  font-size: 1.5rem;\\n  z-index: 100;\\n  transition: opacity 0.5s ease;\\n}\\n\\n.fade-enter-active, .fade-leave-active {\\n  transition: opacity 0.5s ease;\\n}\\n\\n.fade-enter-from, .fade-leave-to {\\n  opacity: 0;\\n}\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".join[data-v-fd48cf10]{display:flex;gap:4px;justify-content:center}.btn-active[data-v-fd48cf10]{background-color:coral}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/Components/Pages/ShowRecordings/RecordingsPaginator.vue\"],\"names\":[],\"mappings\":\"AAkCA,uBACE,YAAa,CAEb,OAAQ,CADR,sBAEF,CACA,6BACE,sBACF\",\"sourcesContent\":[\"<template>\\n  <div v-if=\\\"totalPages > 1\\\" class=\\\"join\\\">\\n    <button\\n        v-for=\\\"page in totalPages\\\"\\n        :key=\\\"page\\\"\\n        :class=\\\"['join-item', 'btn', { 'btn-active': currentPage === page }]\\\"\\n        @click=\\\"goToPage(page)\\\"\\n    >\\n      {{ page }}\\n    </button>\\n  </div>\\n</template>\\n\\n<script setup>\\n\\nconst props = defineProps({\\n  totalPages: {\\n    type: Number,\\n    required: true,\\n  },\\n  currentPage: {\\n    type: Number,\\n    required: true,\\n  },\\n});\\n\\nconst emit = defineEmits(['update']);\\n\\nconst goToPage = (page) => {\\n  emit('update', page);\\n};\\n</script>\\n\\n<style scoped>\\n.join {\\n  display: flex;\\n  justify-content: center;\\n  gap: 4px;\\n}\\n.btn-active {\\n  background-color: #ff7f50; /* Example active color */\\n}\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".grid[data-v-6990a9f5]{display:grid;grid-template-columns:1fr}@media (min-width:768px){.grid[data-v-6990a9f5]{grid-template-columns:4rem 1fr 1fr 1fr 1fr}}.min-w-16[data-v-6990a9f5]{min-width:4rem}.max-w-16[data-v-6990a9f5]{max-width:4rem}.max-h-16[data-v-6990a9f5]{max-height:4rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/Components/Pages/Shows/Elements/ManageShowEpisode.vue\"],\"names\":[],\"mappings\":\"AAqJA,uBACE,YAAa,CACb,yBACF,CAEA,yBACE,uBACE,0CACF,CACF,CAEA,2BACE,cACF,CAEA,2BACE,cACF,CAEA,2BACE,eACF\",\"sourcesContent\":[\"<template>\\n  <div v-if=\\\"showStore.episodeIsBeingDeleted !== episode.id\\\" class=\\\"bg-gray-50 grid grid-cols-1 md:grid-cols-5 gap-4 p-4 mb-4 rounded-lg shadow\\\">\\n    <div class=\\\"flex items-center text-sm w-16\\\">\\n      <div v-if=\\\"!episode.episodeNumber\\\">{{ episode.id }}</div>\\n      <div v-else>{{ episode.episodeNumber }}</div>\\n    </div>\\n    <div @click=\\\"router.visit(`/shows/${showSlug}/episode/${episode.slug}/manage`)\\\" class=\\\"hover:cursor-pointer flex items-center space-x-2\\\">\\n      <SingleImage :image=\\\"episode.image\\\" :alt=\\\"episode.name\\\" class=\\\"rounded-xl min-w-16 w-16 h-16 object-cover\\\" />\\n      <span class=\\\"hover:text-blue-600 font-semibold dark:text-blue-400 dark:hover:text-blue-200\\\">\\n        {{ episode.name }}\\n      </span>\\n    </div>\\n    <div class=\\\"light:text-gray-600 dark:text-gray-100 text-sm flex justify-center items-center\\\">\\n      <span v-if=\\\"!episode.notes\\\" v-show=\\\"showStore.noteEdit !== episode.id\\\" class=\\\"italic\\\" @click=\\\"editNote\\\">Click here to add/edit a note.</span>\\n      <span v-if=\\\"episode.notes\\\" v-show=\\\"showStore.noteEdit !== episode.id\\\" :key=\\\"componentKey\\\" @click=\\\"editNote\\\">{{ episode.notes }}</span>\\n      <div v-if=\\\"showStore.noteEdit === episode.id\\\">\\n        <EpisodeNoteEdit :episode=\\\"episode\\\" @saveNoteProcessing=\\\"reloadNote\\\" />\\n        <div v-if=\\\"showStore.saveNoteProcessing\\\">Saving...</div>\\n      </div>\\n    </div>\\n    <div class=\\\"text-right\\\">\\n      <div class=\\\"dropdown dropdown-left\\\">\\n        <ManageShowEpisodeStatuses\\n            :episodeStatus=\\\"episode.episodeStatus\\\"\\n            :episodeStatusId=\\\"episode.episodeStatusId\\\"\\n            :episodeStatuses=\\\"episodeStatuses\\\"\\n            :episodeId=\\\"episode.id\\\"\\n            :episodeUlid=\\\"episode.ulid\\\"\\n            :episodeName=\\\"episode.name\\\"\\n            :episodeSlug=\\\"episode.slug\\\"\\n            :showSlug=\\\"showSlug\\\"\\n            :showName=\\\"showName\\\"\\n            :scheduledDateTime=\\\"episode.scheduledReleaseDateTime\\\"\\n        />\\n      </div>\\n      <div v-if=\\\"episode.episodeStatusId === 6\\\">\\n        Scheduled for: <br />\\n        {{ scheduledReleaseDateTime }}\\n      </div>\\n      <div v-if=\\\"episode.episodeStatusId === 7\\\">\\n        Released on: <br/>\\n        {{ releaseDateTime }}\\n      </div>\\n    </div>\\n    <div class=\\\"flex flex-row justify-end items-center\\\">\\n      <button\\n          v-if=\\\"teamStore.can.editShow\\\"\\n          @click=\\\"appSettingStore.btnRedirect(`/shows/${showSlug}/episode/${episode.slug}/edit`)\\\"\\n          class=\\\"px-2 py-2 text-white font-semibold bg-blue-500 hover:bg-blue-600 rounded-lg mr-2 w-16 h-10\\\"\\n      >\\n        Edit\\n      </button>\\n      <button\\n          v-if=\\\"teamStore.can.manageShow && !episode.isPublished\\\"\\n          @click=\\\"deleteShowEpisode\\\"\\n          class=\\\"px-2 py-2 text-white font-semibold bg-red-500 hover:bg-red-600 rounded-lg w-10 h-10\\\"\\n      >\\n        <font-awesome-icon icon=\\\"fa-trash-can\\\" />\\n      </button>\\n    </div>\\n  </div>\\n  <div v-else class=\\\"w-full text-center p-4\\\">\\n    <span class=\\\"loading loading-infinity loading-lg\\\"></span>\\n    <span class=\\\"ml-3\\\">The episode is being deleted...</span>\\n  </div>\\n</template>\\n\\n<script setup>\\nimport { router } from '@inertiajs/vue3';\\nimport { useForm } from \\\"@inertiajs/vue3\\\";\\nimport { ref } from \\\"vue\\\";\\nimport { useAppSettingStore } from \\\"@/Stores/AppSettingStore\\\";\\nimport { useTeamStore } from \\\"@/Stores/TeamStore\\\";\\nimport { useShowStore } from \\\"@/Stores/ShowStore\\\";\\nimport { useUserStore } from \\\"@/Stores/UserStore\\\";\\nimport { FontAwesomeIcon } from \\\"@fortawesome/vue-fontawesome\\\";\\nimport ManageShowEpisodeStatuses from \\\"@/Components/Pages/Shows/Elements/ManageShowEpisodesStatuses\\\";\\nimport EpisodeNoteEdit from \\\"@/Components/Pages/Shows/Elements/ManageEpisodeEditNote\\\";\\nimport SingleImage from '@/Components/Global/Multimedia/SingleImage.vue';\\n\\nconst appSettingStore = useAppSettingStore();\\nconst teamStore = useTeamStore();\\nconst showStore = useShowStore();\\nconst userStore = useUserStore();\\n\\nconst props = defineProps({\\n  episode: Object,\\n  episodeStatuses: Object,\\n  showSlug: String,\\n  showName: String,\\n});\\n\\nconst showEpisodeStatuses = ref(false);\\nconst releaseDateTime = userStore.formatDateInUserTimezone(props.episode.releaseDateTime, 'ddd DD MMM YYYY');\\nconst scheduledReleaseDateTime = userStore.formatDateInUserTimezone(props.episode.scheduledReleaseDateTime, 'ddd DD MMM YYYY, hh:mm A' + ' ' + userStore.timezoneAbbreviation);\\n\\nshowStore.noteEdit = 0;\\nconst componentKey = ref(0);\\n\\nfunction reloadNote() {\\n  props.episode.notes = showStore.notes;\\n  componentKey.value += 1;\\n}\\n\\nlet form = useForm({\\n  note: '',\\n});\\n\\nfunction editNote() {\\n  showStore.noteEdit = props.episode.id;\\n}\\n\\nfunction openEpisodeStatuses() {\\n  document.getElementById('episodeStatuses').showModal();\\n}\\n\\nconst deleteShowEpisode = async () => {\\n  const confirmation = confirm('Are you sure you want to delete this show episode?');\\n\\n  if (confirmation) {\\n    try {\\n      showStore.episodeIsBeingDeleted = props.episode.id;\\n      await axios.delete(`/shows/${props.showSlug}/episode/${props.episode.slug}`)\\n          .then((response) => {\\n            if (response.status === 200) {\\n              showStore.errorMessage = response.data.message;\\n              router.reload();\\n              showStore.episodeIsBeingDeleted = 0;\\n            } else {\\n              showStore.errorMessage = response.statusText;\\n              console.error('Delete request failed:', response.statusText);\\n              showStore.episodeIsBeingDeleted = 0;\\n              router.reload();\\n            }\\n          })\\n          .catch((error) => {\\n            console.error('Error deleting show episode:', error);\\n            showStore.errorMessage = error;\\n            showStore.episodeIsBeingDeleted = 0;\\n            router.reload();\\n          });\\n    } catch (error) {\\n      console.error('Error deleting show episode:', error);\\n    }\\n  }\\n};\\n</script>\\n\\n<style scoped>\\n.grid {\\n  display: grid;\\n  grid-template-columns: 1fr;\\n}\\n\\n@media (min-width: 768px) {\\n  .grid {\\n    grid-template-columns: 4rem 1fr 1fr 1fr 1fr;\\n  }\\n}\\n\\n.min-w-16 {\\n  min-width: 4rem;\\n}\\n\\n.max-w-16 {\\n  max-width: 4rem;\\n}\\n\\n.max-h-16 {\\n  max-height: 4rem;\\n}\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"@keyframes wave-bg-699d87b0{0%,to{background-color:#dbeafe}50%{background-color:#bfdbfe}}.wave-background[data-v-699d87b0]{animation:wave-bg-699d87b0 5s ease-in-out infinite;background-color:#dbeafe}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/Pages/Shows/{$id}/Manage.vue\"],\"names\":[],\"mappings\":\"AA8RA,4BACE,MACE,wBACF,CACA,IACE,wBACF,CACF,CAEA,kCACE,kDAA0C,CAC1C,wBACF\",\"sourcesContent\":[\"<template>\\n\\n  <Head :title=\\\"`Manage Show: ${props.show.name}`\\\"/>\\n\\n  <div id=\\\"topDiv\\\" class=\\\"place-self-center flex flex-col\\\">\\n    <div class=\\\"min-h-screen bg-white text-black dark:bg-gray-900 dark:text-gray-50 rounded px-5\\\">\\n\\n      <Message v-if=\\\"appSettingStore.showFlashMessage\\\" :flash=\\\"$page.props.flash\\\"/>\\n      <div class=\\\"alert alert-error mt-4 mx-3\\\"\\n           v-if=\\\"showStore.errorMessage\\\">\\n        <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" class=\\\"stroke-current shrink-0 h-6 w-6\\\" fill=\\\"none\\\" viewBox=\\\"0 0 24 24\\\">\\n          <path stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" stroke-width=\\\"2\\\"\\n                d=\\\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\\\"/>\\n        </svg>\\n        <span>{{ showStore.errorMessage }}</span>\\n        <button class=\\\"text-xs ml-12\\\" @click=\\\"showStore.errorMessage = ''\\\"> Close</button>\\n      </div>\\n\\n      <header class=\\\"bg-gradient-to-r from-blue-100 via-white to-transparent p-4 text-black font-bold rounded-lg\\\">\\n        <!--            <header class=\\\"wave-background p-4 text-black font-bold rounded-lg\\\">-->\\n\\n        <div class=\\\"flex justify-between mb-3 pt-6\\\">\\n          <div class=\\\"font-bold mb-4 text-black align-bottom text-lg\\\">MANAGE SHOW</div>\\n\\n          <div class=\\\"flex flex-col\\\">\\n            <div class=\\\"flex flex-row w-full justify-end mb-2\\\">\\n              <button\\n                  @click=\\\"appSettingStore.btnRedirect(`/teams/${team.slug}/manage`)\\\"\\n                  class=\\\"px-4 py-2 mr-2 mb-2 h-fit text-white font-semibold bg-orange-500 hover:bg-orange-600 rounded-lg\\\"\\n              >Back to<br/>\\n                Manage Team\\n              </button>\\n            </div>\\n            <div class=\\\"flex flex-wrap-reverse justify-end\\\">\\n              <button\\n                  v-if=\\\"can.goLive\\\"\\n                  @click=\\\"goLive\\\"\\n                  class=\\\"px-4 py-2 mr-2 mb-2 h-fit text-white font-semibold bg-red-500 hover:bg-red-600 rounded-lg\\\"\\n              >Go Live\\n              </button>\\n              <button\\n                  v-if=\\\"teamStore.can.editShow\\\"\\n                  @click=\\\"appSettingStore.btnRedirect(`/shows/${show.slug}/edit`)\\\"\\n                  class=\\\"px-4 py-2 mb-2 h-fit text-white font-semibold bg-blue-500 hover:bg-blue-600 rounded-lg\\\"\\n              >Edit Show\\n              </button>\\n\\n              <DashboardButton class=\\\"mb-2\\\"/>\\n\\n            </div>\\n          </div>\\n\\n        </div>\\n\\n        <ShowManageHeader\\n            :show=\\\"props.show\\\"\\n            :team=\\\"props.team\\\"\\n            :can=\\\"can\\\"\\n        />\\n\\n        <div class=\\\"flex justify-end mt-6\\\">\\n\\n\\n        </div>\\n      </header>\\n\\n      <div class=\\\"my-6 text-gray-100\\\">\\n        <span class=\\\"uppercase text-xs font-semibold text-black\\\">SHOW NOTES: </span>\\n        <span class=\\\"text-black light:text-black dark:text-white\\\">{{ props.show.notes }}</span>\\n      </div>\\n\\n\\n      <div class=\\\"flex flex-col\\\">\\n        <div class=\\\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\\\">\\n          <div class=\\\"py-2 align-middle inline-block w-full sm:px-6 lg:px-8 space-y-4\\\">\\n\\n            <div @click=\\\"toggleComponent('showEpisodes')\\\"\\n                 :class=\\\"{'rounded-t-lg': showStore.openComponent === 'showEpisodes', 'rounded-lg': showStore.openComponent !== 'showEpisodes'}\\\"\\n                 class=\\\"accordion-header p-2 font-bold transition duration-300 ease-in-out transform focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 overflow-hidden shadow-lg bg-blue-100 hover:bg-blue-300 dark:hover:bg-blue-900 text-black hover:text-blue-900 dark:text-blue-100 dark:hover:text-white\\\">\\n              <font-awesome-icon icon=\\\"fa-play-circle\\\" class=\\\"\\\"/>\\n              Episodes\\n            </div>\\n            <div v-if=\\\"showStore.openComponent === 'showEpisodes'\\\">\\n              <div class=\\\"mt-4 mb-12 pb-6 shadow overflow-auto border-b border-gray-200 sm:rounded-lg\\\">\\n                <ManageShowEpisodesList />\\n              </div>\\n            </div>\\n\\n            <div @click=\\\"toggleComponent('showCredits')\\\"\\n                 :class=\\\"{'rounded-t-lg': showStore.openComponent === 'showCredits', 'rounded-lg': showStore.openComponent !== 'showCredits'}\\\"\\n                 class=\\\"accordion-header p-2 font-bold transition duration-300 ease-in-out transform focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 overflow-auto shadow-lg bg-blue-100 hover:bg-blue-300 dark:hover:bg-blue-900 text-black hover:text-blue-900 dark:text-blue-100 dark:hover:text-white\\\">\\n              <font-awesome-icon icon=\\\"fa-clipboard-list\\\" class=\\\"\\\"/>\\n              Credits and Assignments\\n            </div>\\n            <div v-if=\\\"showStore.openComponent === 'showCredits'\\\">\\n              <div class=\\\"mt-4 mb-12 pb-6 shadow overflow-auto border-b border-gray-200 sm:rounded-lg\\\">\\n                <div class=\\\"border-1 border-t mb-3 bg-blue-100 py-1 px-2 text-xs font-semibold text-red-800\\\">\\n                  In development. Not currently working.\\n                </div>\\n                <Link\\n                    :href=\\\"`#`\\\"\\n                    v-if=\\\"teamStore.can.createAssignment\\\">\\n                  <button\\n                      class=\\\"bg-green-500 hover:bg-green-600 text-white ml-2 my-2 px-4 py-2 rounded disabled:bg-gray-400 h-max w-max\\\"\\n                      disabled\\n                  >Create Assignment\\n                  </button>\\n                </Link>\\n\\n                <ShowCreditsList/>\\n              </div>\\n            </div>\\n\\n            <div @click=\\\"toggleComponent('showRecordings')\\\"\\n                 :class=\\\"{'rounded-t-lg': showStore.openComponent === 'showRecordings', 'rounded-lg': showStore.openComponent !== 'showRecordings'}\\\"\\n                 class=\\\"accordion-header p-2 font-bold transition duration-300 ease-in-out transform focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 overflow-auto shadow-lg bg-blue-100 hover:bg-blue-300 dark:hover:bg-blue-900 text-black hover:text-blue-900 dark:text-blue-100 dark:hover:text-white\\\">\\n              <font-awesome-icon icon=\\\"fa-circle\\\" class=\\\"text-red-700\\\"/>\\n              Recordings\\n            </div>\\n            <div v-if=\\\"showStore.openComponent === 'showRecordings'\\\">\\n              <div class=\\\"mt-4 mb-12 pb-6 shadow overflow-auto border-b border-gray-200 sm:rounded-lg\\\">\\n                <ShowRecordingsList :showRecordings=\\\"show.recordings\\\" :showName=\\\"show.name\\\" :showSlug=\\\"show.slug\\\"\\n                                :showImage=\\\"show.image\\\"/>\\n\\n                <!--            </div>-->\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <ShowFooter :team=\\\"team\\\" :show=\\\"show\\\"/>\\n    </div>\\n  </div>\\n\\n</template>\\n\\n<script setup>\\nimport { onBeforeUnmount, onMounted, onUnmounted, ref } from 'vue'\\nimport { usePage } from '@inertiajs/vue3'\\nimport { usePageSetup } from '@/Utilities/PageSetup'\\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\\nimport { useShowStore } from '@/Stores/ShowStore'\\nimport { useTeamStore } from '@/Stores/TeamStore'\\nimport { useGoLiveStore } from '@/Stores/GoLiveStore'\\nimport ShowManageHeader from '@/Components/Pages/Shows/Layout/ShowManageHeader'\\nimport ShowFooter from '@/Components/Pages/Shows/Layout/ShowFooter'\\nimport ManageShowEpisodesList from '@/Components/Pages/Shows/Elements/ManageShowEpisodesList'\\nimport ShowCreditsList from '@/Components/Pages/Shows/Elements/ManageShowCreditsList'\\nimport Message from '@/Components/Global/Modals/Messages'\\nimport DashboardButton from '@/Components/Global/Buttons/DashboardButton.vue'\\nimport ShowRecordingsList from '@/Components/Pages/ShowRecordings/ShowRecordingsList.vue'\\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome'\\n\\nusePageSetup('shows/slug/manage')\\n\\nconst appSettingStore = useAppSettingStore()\\nconst showStore = useShowStore()\\nconst teamStore = useTeamStore()\\nconst goLiveStore = useGoLiveStore()\\n\\nconst toggleComponent = (componentName) => {\\n  showStore.openComponent = showStore.openComponent === componentName ? null : componentName\\n}\\n\\nconst page = usePage().props\\n\\nconst props = defineProps({\\n  show: Object,\\n  team: Object,\\n  episodes: Object,\\n  episodeStatuses: Object,\\n  // filters: Object,\\n  can: Object,\\n})\\n\\nteamStore.setActiveTeam(props.team)\\nteamStore.setActiveShow(props.show)\\nteamStore.can = props.can\\n\\nconst currentUsers = ref([]);\\n\\nconst goLive = () => {\\n  goLiveStore.reset()\\n  goLiveStore.preSelectedShowId = props.show.id\\n  appSettingStore.btnRedirect(`/golive`)\\n}\\n\\nonMounted(() => {\\n  showStore.initializeShow(props.show, props.episodes, props.episodeStatuses)\\n  console.log(`Subscribing to channel creator.show.${props.show.id}`)\\n\\n  Echo.join(`creator.show.${props.show.id}`)\\n      .here(async (users) => {\\n        console.log('Users currently in the channel:', users)\\n        currentUsers.value = users;\\n        // Elect the leader (first user in the list)\\n        if (users.length > 0) {\\n          const leader = users[0];\\n          showStore.setLeader(leader);\\n          console.log(`Leader elected: ${leader.name}`);\\n        }\\n\\n        console.log(showStore.isUpdatingSchedule, showStore.updatedBy)\\n        // Check if the user is the only one in the channel\\n        if (currentUsers.value.length === 1 && showStore.isUpdatingSchedule && showStore.updatedBy) {\\n          try {\\n            // Reset the isUpdatingSchedule and updatedBy fields\\n            await axios.put(`/api/shows/${props.show.slug}/meta`, {\\n              isUpdatingSchedule: false,\\n              updatedBy: showStore.updatedBy,\\n            });\\n            console.log('isUpdatingSchedule and updatedBy fields reset');\\n\\n          } catch (error) {\\n            console.error('Error updating meta:', error);\\n          }\\n        }\\n      })\\n      .joining((user) => {\\n        console.log('User joined the channel:', user)\\n        currentUsers.value.push(user);\\n      })\\n      .leaving((user) => {\\n        console.log('User left the channel:', user)\\n        currentUsers.value = currentUsers.value.filter(u => u.id !== user.id);\\n\\n        if (user.id === showStore.leader.id) {\\n          console.log('Leader left, electing new leader');\\n          // Elect a new leader if the current leader leaves\\n          if (currentUsers.value.length > 0) {\\n            const newLeader = currentUsers.value[0];\\n            showStore.setLeader(newLeader);\\n            console.log(`New leader elected: ${newLeader.name}`);\\n          }\\n        }\\n        // If current user is still the leader, run the command\\n        if (showStore.leader.id === page.user.id) {\\n          axios.post(`/api/${props.show.slug}/user-left-channel`, {\\n            user: user,\\n            channel: `creator.show.${props.show.id}`,\\n            showSlug: props.show.slug, // Pass the show slug\\n          }).then(response => {\\n            console.log('Successfully posted to user-left-channel:', response.data);\\n          }).catch(error => {\\n            console.error('Error posting to user-left-channel:', error);\\n          });\\n        }\\n      })\\n      .listen('.CreatorContentStatusUpdated', (event) => {\\n        console.log('CreatorContentStatusUpdated event received:', event)\\n        showStore.$patch({\\n          isSaving: event.meta.isSaving,\\n          isUpdatingSchedule: event.meta.isUpdatingSchedule,\\n          updatedBy: event.meta.updatedBy,\\n        })\\n      })\\n      .listen('.ShowScheduleDetailsUpdated', (event) => {\\n        console.log('ShowScheduleDetailsUpdated event received:', event);\\n        // Assuming `start_DateTime` needs to be transformed into `startTime`\\n        const formattedStartTime = event.scheduleDetails.start_DateTime\\n        showStore.scheduleDetails = {\\n          ...event.scheduleDetails,\\n          startTime: formattedStartTime\\n        };\\n        console.log('Updated scheduleDetails.startTime:', showStore.scheduleDetails.startTime);\\n      })\\n      .error((error) => {\\n        console.error('Error subscribing to channel:', error);\\n      });\\n\\n})\\n\\nonBeforeUnmount(() => {\\n  // Echo.leave(`creator.show.${props.show.id}`);\\n  Echo.leave(`creator.show.${props.show.id}`)\\n\\n  showStore.setUpdatingStatus(false, page.user.name, props.show.slug)\\n\\n  console.log(`Unsubscribed from channel creator.show.${props.show.id}`)\\n  showStore.reset()\\n})\\n\\n</script>\\n\\n\\n<style scoped>\\n@keyframes wave-bg {\\n  0%, 100% {\\n    background-color: #dbeafe; /* Original color */\\n  }\\n  50% {\\n    background-color: #bfdbfe; /* Slightly lighter color */\\n  }\\n}\\n\\n.wave-background {\\n  animation: wave-bg 5s infinite ease-in-out;\\n  background-color: #dbeafe; /* Starting color */\\n}\\n\\n\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import script from \"./DashboardButton.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./DashboardButton.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n    <button\n        @click=\"appSettingStore.btnRedirect('/dashboard')\"\n        class=\"bg-black hover:bg-gray-800 text-white font-semibold ml-2 mt-2 px-4 py-2 rounded-lg disabled:bg-gray-400 h-max w-max\"\n    >Dashboard\n    </button>\n  </div>\n</template>\n\n<script setup>\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\n\nconst appSettingStore = useAppSettingStore()\n\n</script>\n","import script from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"mx-4 my-4\">\n    <div class=\"alert alert-info mt-4\"\n         v-if=\"props.flash.message\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" class=\"stroke-current shrink-0 w-6 h-6\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n      </svg>\n      <span>{{ props.flash.message }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-success mt-4 mx-3\"\n         v-if=\"props.flash.success\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.success }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-warning mt-4 mx-3\"\n         v-if=\"props.flash.warning\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"/>\n      </svg>\n      <span>{{ props.flash.warning }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-error mt-4 mx-3\"\n         v-if=\"props.flash.error\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.error }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n  </div>\n\n</template>\n\n<script setup>\nimport { router } from '@inertiajs/vue3'\nimport { computed } from \"vue\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\n\nconst appSettingStore = useAppSettingStore()\n\nappSettingStore.showFlashMessage = true\n\nlet props = defineProps({\n  flash: Object,\n\n})\n\nconst messageType = computed(() => ({\n  'text-green-700 bg-green-100 dark:bg-green-200 dark:text-green-800': props.flash.success,\n  'text-blue-700 bg-blue-100 dark:bg-blue-200 dark:text-blue-800': props.flash.message,\n  'text-orange-700 bg-orange-100 dark:bg-orange-200 dark:text-orange-800': props.flash.warning,\n  'text-red-700 bg-red-100 dark:bg-red-200 dark:text-red-800': props.flash.error,\n}))\n\nconst clearFlashMessage = async () => {\n  await router.post(route('flash.clear'));\n  router.reload();\n};\n</script>\n","import script from \"./Pagination.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Pagination.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div v-if=\"data.last_page > 1\" class=\"flex flex-wrap justify-center my-4 space-x-4 space-y-2\">\n    <div></div>\n    <Component v-if=\"data && data.links\"\n        :is=\"link.url ? 'Link' : 'span'\"\n        v-for=\"(link, key) in data.links\"\n        :key=\"key\"\n        :href=\"link.url\"\n        @click.prevent=\"saveScrollPosition\"\n        v-html=\"link.label\"\n        class=\"px-4 py-3 text-sm leading-4 h-fit\"\n        :class=\"{ 'text-white bg-orange-400 hover:bg-orange-400 dark:bg-orange-400 dark:hover:bg-orange-400': link.active,\n                      'rounded mt-2 mr-0.5 text-gray-300 dark:text-gray-700': ! link.url,\n                      'rounded bg-gray-200 hover:bg-gray-300 dark:bg-gray-800 dark:hover:bg-gray-600 text-gray-800 dark:text-gray-50 focus:text-indigo-500 hover:shadow': link.url }\"\n    />\n  </div>\n</template>\n\n\n<script setup>\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\n\nconst appSettingStore = useAppSettingStore()\n\ndefineProps({\n  data: Object,\n})\n\n\nappSettingStore.savedScrollPosition = 0\nconst saveScrollPosition = () => {\n  appSettingStore.savedScrollPosition = window.scrollY\n}\nwindow.scrollTo(0, appSettingStore.savedScrollPosition)\n\n</script>\n\n\n<!--class=\"px-1 text-gray-800 dark:text-gray-50 dark:hover:text-blue-400 hover:text-blue-400\"-->\n<!--:class=\"{ 'text-gray-300 dark:text-gray-700 dark:hover:text-gray-700 hover:text-gray-300': ! link.url, 'font-bold' : link.active }\"-->\n","import script from \"./ShowFooter.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ShowFooter.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n\n  <div class=\"flex flex-row flex-wrap-reverse justify-between mt-64 mb-4\">\n    <div>\n      <span class=\"text-xs uppercase font-semibold\">Show ID: </span>\n      <span class=\"text-xs\">{{ show.ulid }}</span>\n    </div>\n\n    <div class=\"flex flex-wrap justify-end text-right\">\n\n\n      <!-- Paginator -->\n      <!--                            <Pagination :links=\"`#`\" class=\"mt-6\"/>-->\n      <div class=\"text-gray-200 ml-2 uppercase\">\n        {{ show.name }}&nbsp;\n      </div>\n      <div>\n        ©\n        <!--                    If there is a copyright year display it... we need to remove the &copy; and replace it with whichever creative commons icon it needs -->\n        <span v-if=\"show.last_release_year > 0\">{{ show.first_release_year }}-{{ show.last_release_year }}</span>\n        <span v-if=\"!show.last_release_year && show.first_release_year\">{{ show.first_release_year }}</span>\n        <span class=\"text-xs font-semibold text-gray-500\"\n              v-if=\"!show.last_release_year && !show.first_release_year && show.copyrightYear\">{{\n            show.copyrightYear\n          }}</span>\n        <span class=\"text-xs font-semibold text-gray-500\"\n              v-if=\"show.creative_commons?.id === 7\">&nbsp;&copy;&nbsp;</span>\n        <!--                    If there is no copyright year then it's probably public domain... so we'll just display the creative commons name-->\n        <span v-if=\"show.creative_commons?.name\"\n              class=\"text-xs font-semibold text-gray-500\">&nbsp;&bull;&nbsp;{{ show.creative_commons?.name }}&nbsp;&bull;&nbsp;</span>\n\n\n      </div>\n    </div>\n\n  </div>\n\n</template>\n\n<script setup>\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\n\nconst appSettingStore = useAppSettingStore()\n\ndefineProps({\n  team: Object,\n  show: Object,\n})\n\nlet currentYear = new Date().getFullYear()\n\n</script>\n","import script from \"./Label.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Label.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./DateTimePicker.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./DateTimePicker.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n    <DatePicker v-model=\"date\" mode=\"dateTime\" :attributes='attrs' :rules=\"rules\"/>\n\n  </div>\n</template>\n\n<script setup>\nimport { ref, defineProps, defineEmits, watch, onMounted } from 'vue'\nimport { DatePicker } from 'v-calendar'\nimport 'v-calendar/style.css'\nimport { useUserStore } from '@/Stores/UserStore'\nimport dayjs from 'dayjs'\nimport utc from 'dayjs/plugin/utc'\nimport timezone from 'dayjs/plugin/timezone'\n\nconst userStore = useUserStore()\n\ndayjs.extend(utc)\ndayjs.extend(timezone)\n\nconst props = defineProps({\n  date: null,\n});\n\nconst emits = defineEmits(['date-time-selected']);\n\nlet date = ref(props.date ? props.date : dayjs().tz(userStore.timezone).format('YYYY-MM-DDTHH:mm:ssZ'));\n\nconst calendar = ref(null);\n\n// Customize time picker options to show only :00 and :30 minutes\nconst timePickerOptions = {\n  step: 30, // Step in minutes, to show :00 and :30\n  round: 30, // Round to nearest step\n  start: '00:00', // Start time\n  end: '23:30', // End time\n};\n\nconst attrs = ref([\n  {\n    key: 'today',\n    highlight: true,\n    dates: new Date(),\n  },\n])\n\nconst rules = ref({\n  minutes: {interval: 30},\n})\n\n// Watch for changes in selected dateTime emit it\nwatch(date, (newDate) => {\n  emits('date-time-selected', {date: newDate});\n});\n\nonMounted(() => {\n  if (!props.date) {\n    date.value = dayjs().tz(userStore.timezone).format('YYYY-MM-DDTHH:mm:ssZ');\n  }\n});\n</script>\n","import script from \"./DatePicker.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./DatePicker.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n    <DatePicker v-model=\"date\" mode=\"date\" view=\"weekly\" :disabled-dates=\"disabledDays\" expanded/>\n\n  </div>\n</template>\n\n<script setup>\nimport { ref, defineProps, defineEmits, watch, computed } from 'vue'\nimport { DatePicker } from 'v-calendar'\nimport 'v-calendar/style.css'\n\nconst props = defineProps({\n  date: null,\n  disabledDays: {\n    type: Array,\n    default: () => [], // Default to an empty array if not provided\n  },\n});\n\nconst emits = defineEmits();\n\nlet date = ref(props.date);\nconst calendar = ref(null);\n//\n// // Compute allowedDayNumbers only if allowedDays is provided and not empty\n// const allowedDayNumbers = computed(() => {\n//   if (props.disabledDays.length > 0) {\n//     const dayMap = { 'Sunday': 0, 'Monday': 1, 'Tuesday': 2, 'Wednesday': 3, 'Thursday': 4, 'Friday': 5, 'Saturday': 6 };\n//     return props.disabledDays.map(day => dayMap[day]);\n//   }\n//   return null; // Return null to indicate no restrictions\n// });\n//\n// // Compute dateAttributes based on whether allowedDayNumbers is null\n// const dateAttributes = computed(() => {\n//   if (allowedDayNumbers.value !== null) {\n//     return [\n//       {\n//         key: 'disabled',\n//         dates: date => !allowedDayNumbers.value.includes(date.getDay()),\n//       },\n//       {\n//         key: 'tomorrow',\n//         highlight: true,\n//         dates: new Date(new Date().setDate(new Date().getDate() + 1)),\n//       },\n//     ];\n//   }\n//   // Return an empty array or any default attributes when no allowedDays are provided\n//   return [];\n// });\n\n// Watch for changes in selected dateTime emit it\nwatch([date], ([newDate]) => {\n  emits('date-time-selected', {date: newDate});\n});\n</script>\n","import script from \"./StepSixCongratulations.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./StepSixCongratulations.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <dialog id=\"addShowToScheduleModal\" class=\"modal text-black\">\n    <div class=\"modal-box w-11/12 max-w-5xl text-black bg-white dark:bg-gray-800 dark:text-white\">\n      <button v-if=\"currentStep === 6\"\n              @click.prevent=\"closeModal\"\n              :disabled=\"currentStep !== totalSteps\"\n              class=\"btn justify-end\">Close\n      </button>\n\n      <div class=\"flex flex-row justify-between\">\n        <div>\n          <h2 v-if=\"currentStep !== 6\" class=\"font-bold text-xl\">\n            <slot name=\"form-title\">Default Form Title</slot>\n            <span class=\"font-medium\">({{ selectedTimezone }})</span>\n          </h2>\n        </div>\n        <div>\n          <button v-if=\"currentStep <= 5\"\n                  class=\"btn\"\n                  @click.prevent=\"closeModalAndReset\">Cancel\n          </button>\n        </div>\n      </div>\n\n      <div>\n        <h4 v-if=\"currentStep !== 6\" class=\"font-medium text-lg\">\n          <slot name=\"form-description\">Default Form Description</slot>\n        </h4>\n      </div>\n\n      <div class=\"flex flex-col space-y-2 px-12 mt-6\">\n        <form @submit.prevent=\"submit\">\n\n          <div v-if=\"currentStep === 0\" class=\"mt-6\">\n            <!-- Step 0 content -->\n            <!-- Part 1: Confirm Timezone -->\n\n            <div v-if=\"!timezoneConfirmed\">\n              <div class=\"mb-2 pb-6 text-primary text-center\">Confirm Timezone</div>\n              <div class=\"flex flex-row justify-center\">\n                <select id=\"timezone-select\" v-model=\"selectedTimezone\" @change=\"updateTimezone\"\n                        class=\"ml-2 rounded-lg select select-bordered bg-white dark:bg-gray-800 dark:text-white\">\n                  <option v-for=\"timezone in userStore.timezones\" :key=\"timezone\" :value=\"timezone\">{{\n                      timezone\n                    }}\n                  </option>\n                </select>\n              </div>\n              <div class=\"flex flex-row justify-center pt-6\">\n                <button @click.prevent=\"confirmTimezone\" class=\"btn btn-primary\">Confirm Timezone</button>\n              </div>\n            </div>\n\n\n            <!-- Part 2: Choose Schedule Type -->\n            <div v-else>\n              <div class=\"mb-2 text-primary text-center\">Choose Schedule Type</div>\n              <div class=\"flex justify-center space-x-4 mt-4\">\n                <button @click.prevent=\"selectScheduleType('one-time')\"\n                        class=\"btn btn-primary h-40 w-60 bg-indigo-500 hover:bg-indigo-700 text-white rounded-lg flex flex-col p-4\">\n                  <span class=\"text-lg\">One-time Event</span>\n                </button>\n                <button @click.prevent=\"selectScheduleType('recurring')\"\n                        class=\"btn btn-primary h-40 w-60 bg-indigo-500 hover:bg-indigo-700 text-white rounded-lg flex flex-col p-4\">\n                  <span class=\"text-lg\">Recurring Show</span>\n                </button>\n              </div>\n              <div @click.prevent=\"timezoneConfirmed = false\" class=\"mt-4 btn btn-sm\">< change timezone</div>\n            </div>\n\n\n          </div>\n\n\n          <div v-if=\"form.scheduleType === 'one-time'\" class=\"py-6\">\n            <!-- Steps Header for one-time shows -->\n            <ul v-if=\"currentStep <= 5 && currentStep !== 0\" class=\"steps w-full\">\n              <li @click.prevent=\"goToStep(1)\" class=\"step cursor-pointer\"\n                  :class=\"{ 'step-primary': currentStep >= 1 && currentStep !== 6}\">\n                <div>&nbsp;</div>\n                <div :class=\"{ 'text-primary': currentStep === 1 }\">Choose Start Day/Time</div>\n                <div :class=\"{ 'text-primary': currentStep === 1 }\">{{ formattedStartDate }}&nbsp;</div>\n                <div :class=\"{ 'text-primary': currentStep === 1 }\">{{ formattedStartTimeForOneTime }}&nbsp;</div>\n              </li>\n              <li @click.prevent=\"goToStep(2)\" class=\"step cursor-pointer\"\n                  :class=\"{ 'step-primary': currentStep >= 2 }\">\n                <div>&nbsp;</div>\n                <div :class=\"{ 'text-primary': currentStep === 2 }\">Set Duration</div>\n                <div :class=\"{ 'text-primary': currentStep === 2 }\"> {{ form.durationDisplay }}&nbsp;</div>\n                <div>&nbsp;</div>\n              </li>\n            </ul>\n\n            <div class=\"mt-6 pt-6\">\n\n              <div v-if=\"currentStep === 1\" class=\"flex flex-row justify-center\">\n                <!-- Step 1 content -->\n                <div class=\"flex flex-col\">\n                  <div class=\"mb-2\">1. Choose start date and time.</div>\n                  <DateTimePicker :date=\"form.startDate\" @date-time-selected=\"handleStartDateSelected\"/>\n                </div>\n              </div>\n            </div>\n\n            <div v-if=\"currentStep === 2\" class=\"flex flex-row justify-center\">\n              <!-- Step 3 content -->\n              <div class=\"flex flex-col\">\n                <div class=\"mb-2\">3. Choose duration (maximum 3 hours)</div>\n                <div class=\"flex items-center gap-2\">\n                  <select v-model=\"form.durationHour\"\n                          class=\"select select-bordered bg-white dark:bg-gray-800 dark:text-white\">\n                    <option value=\"0\">0 hours</option>\n                    <option value=\"1\">1 hour</option>\n                    <option value=\"2\">2 hours</option>\n                    <option value=\"3\">3 hours</option>\n                  </select>\n                  <select v-model=\"form.durationMinute\"\n                          class=\"select select-bordered bg-white dark:bg-gray-800 dark:text-white\">\n                    <option v-for=\"option in minuteOptions\" :key=\"option\" :value=\"option\">{{ option }} minutes</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n\n          </div>\n\n          <div v-if=\"form.scheduleType === 'recurring'\" class=\"py-6\">\n            <!-- Steps Header for recurring shows -->\n            <ul v-if=\"currentStep <= 5 && currentStep !== 0\" class=\"steps w-full\">\n              <li @click.prevent=\"goToStep(1)\" class=\"step cursor-pointer\"\n                  :class=\"{ 'step-primary': currentStep >= 1 && currentStep !== 6}\">\n                <div>&nbsp;</div>\n                <div :class=\"{ 'text-primary': currentStep === 1 }\">Choose Days</div>\n                <div :class=\"{ 'text-primary': currentStep === 1 }\">{{ abbreviatedDaysOfWeekOrdered }}&nbsp;</div>\n              </li>\n              <li @click.prevent=\"goToStep(2)\" class=\"step cursor-pointer\"\n                  :class=\"{ 'step-primary': currentStep >= 2 }\">\n                <div>&nbsp;</div>\n                <div :class=\"{ 'text-primary': currentStep === 2 }\">Start time</div>\n                <div :class=\"{ 'text-primary': currentStep === 2 }\">{{ formattedStartTime }}&nbsp;</div>\n              </li>\n              <li @click.prevent=\"goToStep(3)\" class=\"step cursor-pointer\"\n                  :class=\"{ 'step-primary': currentStep >= 3 }\">\n                <div>&nbsp;</div>\n                <div :class=\"{ 'text-primary': currentStep === 3 }\">Duration</div>\n                <div :class=\"{ 'text-primary': currentStep === 3 }\"> {{ form.durationDisplay }}&nbsp;</div>\n              </li>\n              <li @click.prevent=\"goToStep(4)\" class=\"step cursor-pointer\"\n                  :class=\"{ 'step-primary': currentStep >= 4 }\">\n                <div>&nbsp;</div>\n                <div :class=\"{ 'text-primary': currentStep === 4 }\">Start date</div>\n                <div :class=\"{ 'text-primary': currentStep === 4 }\">{{ formattedStartDate }}&nbsp;</div>\n              </li>\n              <li @click.prevent=\"goToStep(5)\" class=\"step cursor-pointer\"\n                  :class=\"{ 'step-primary': currentStep >= 5 }\">\n                <div>&nbsp;</div>\n                <div :class=\"{ 'text-primary': currentStep === 5 }\">End date</div>\n                <div :class=\"{ 'text-primary': currentStep === 5 }\">{{ formattedEndDate }}&nbsp;</div>\n              </li>\n            </ul>\n\n\n            <div class=\"mt-6 pt-6\">\n\n              <div v-if=\"currentStep === 1\">\n                <!-- Step 1 content -->\n                <div class=\"mb-2\">1. Choose days of the week.</div>\n                <label v-for=\"day in ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\"\n                       :key=\"day\"\n                       class=\"ml-4 cursor-pointer\">\n                  <input type=\"checkbox\" v-model=\"form.daysOfWeek\" :value=\"day\" class=\"cursor-pointer checkbox\"> <span\n                    class=\"pl-1\">{{ day }}</span>\n                </label>\n              </div>\n              <div v-if=\"currentStep === 2\">\n                <!-- Step 2 content -->\n                <div class=\"mb-2\">2. Choose start time</div>\n                <div class=\"flex items-center gap-2 text-black bg-white dark:bg-gray-800 dark:text-white\">\n                  <!-- Hour selection -->\n                  <select v-model=\"form.startTime.hour\"\n                          class=\"form-select select select-bordered text-black bg-white dark:bg-gray-800 dark:text-white\">\n                    <option v-for=\"hour in hours\" :key=\"hour\" :value=\"hour\">{{ hour }}</option>\n                  </select>\n\n                  <!-- Minute selection -->\n                  <select v-model=\"form.startTime.minute\"\n                          class=\"form-select select select-bordered  text-black bg-white dark:bg-gray-800 dark:text-white\">\n                    <option value=\"00\">00</option>\n                    <option value=\"30\">30</option>\n                  </select>\n\n                  <!-- AM/PM selection -->\n                  <select v-model=\"form.startTime.meridian\"\n                          class=\"form-select select select-bordered text-black bg-white dark:bg-gray-800 dark:text-white \">\n                    <option value=\"AM\">AM</option>\n                    <option value=\"PM\">PM</option>\n                  </select>\n                </div>\n              </div>\n              <div v-if=\"currentStep === 3\">\n                <!-- Step 3 content -->\n                <div class=\"mb-2\">3. Choose duration (maximum 3 hours)</div>\n                <div class=\"flex items-center gap-2\">\n                  <select v-model=\"form.durationHour\"\n                          class=\"select select-bordered text-black bg-white dark:bg-gray-800 dark:text-white\">\n                    <option value=\"0\">0 hours</option>\n                    <option value=\"1\">1 hour</option>\n                    <option value=\"2\">2 hours</option>\n                    <option value=\"3\">3 hours</option>\n                  </select>\n                  <select v-model=\"form.durationMinute\"\n                          class=\"select select-bordered text-black bg-white dark:bg-gray-800 dark:text-white\">\n                    <option v-for=\"option in minuteOptions\" :key=\"option\" :value=\"option\">{{ option }} minutes</option>\n                  </select>\n                </div>\n              </div>\n              <div v-if=\"currentStep === 4\">\n                <!-- Step 4 content -->\n                <div class=\"mb-2\">4. Choose start date (tomorrow or later)</div>\n                <DatePicker :date=\"form.startDate\" :disabledDays=\"disabledDays\"\n                            @date-time-selected=\"handleStartDateSelected\"/>\n              </div>\n              <div v-if=\"currentStep === 5\">\n                <!-- Step 5 content -->\n                <div class=\"mb-2\">5. Choose end date (cannot be longer than 3 months, so 3 months is pre-set)</div>\n                <DatePicker :date=\"form.endDate\" :disabledDays=\"disabledDays\"\n                            @date-time-selected=\"handleEndDateSelected\"/>\n              </div>\n            </div>\n          </div>\n\n          <StepSixCongratulations v-if=\"currentStep === 6 && Object.keys(form.errors).length === 0\" class=\"p-4\">\n            <template #header>Congratulations!</template>\n            <template #subHeader>You've successfully scheduled your show on notTV!</template>\n          </StepSixCongratulations>\n\n          <div v-if=\"currentStep === 6 && Object.keys(form.errors).length > 0\" class=\"p-4 text-red-700 w-full\">\n            <ul>\n              <li v-for=\"(errorMessages, key) in form.errors\" :key=\"key\">\n                <span v-if=\"Array.isArray(errorMessages)\">{{ key }}:</span>\n                <ul v-if=\"Array.isArray(errorMessages)\">\n                  <li v-for=\"(message, index) in errorMessages\" :key=\"index\">{{ message }}</li>\n                </ul>\n                <span v-else>{{ errorMessages }}</span>\n              </li>\n            </ul>\n          </div>\n\n\n          <div class=\"flex flex-row justify-between mt-12\">\n            <button v-if=\"(currentStep <= 5 && currentStep !== 0) || (currentStep === 6 && form.errors.length > 0)\"\n                    @click.prevent=\"goToPreviousStep\"\n                    :disabled=\"currentStep === 0\"\n                    class=\"btn\">Back\n            </button>\n            <div></div>\n            <div v-if=\"stepError\" class=\"px-3 text-red-700\" v-html=\"stepError\"/>\n            <div></div>\n            <button v-if=\"currentStep <=5 && currentStep !== 0\"\n                    @click.prevent=\"goToNextStep\"\n                    :disabled=\"currentStep === totalSteps\"\n                    class=\"btn btn-primary text-white\">Next\n            </button>\n            <button v-if=\"currentStep === 6\"\n                    @click.prevent=\"closeModal\"\n                    :disabled=\"currentStep !== totalSteps\"\n                    class=\"btn justify-self-end\">Close\n            </button>\n          </div>\n\n\n        </form>\n      </div>\n    </div>\n  </dialog>\n\n  <dialog id=\"confirmAddShowModal\" class=\"modal\">\n    <div class=\"modal-box text-center bg-white dark:bg-gray-800 dark:text-white\">\n      <h3 class=\"font-bold text-lg\">Are you sure you want to add your show to the schedule?</h3>\n      <div class=\"modal-action flex flex-row justify-center\">\n        <button class=\"btn btn-success text-white px-6\" @click.prvent=\"submit\">Yes!</button>\n        <button class=\"btn\" @click.prvent=\"closeConfirmAddShowModal\">Go back</button>\n      </div>\n    </div>\n  </dialog>\n\n</template>\n<script setup>\nimport { computed, getCurrentInstance, onMounted, onUnmounted, reactive, ref, watch } from 'vue'\nimport { usePage } from '@inertiajs/vue3'\nimport dayjs from 'dayjs'\nimport utc from 'dayjs/plugin/utc' // Required for UTC support\nimport timezone from 'dayjs/plugin/timezone' // Required for timezone support\nimport { useUserStore } from '@/Stores/UserStore'\nimport { useScheduleStore } from '@/Stores/ScheduleStore'\nimport { useShowStore } from '@/Stores/ShowStore'\nimport { useNotificationStore } from '@/Stores/NotificationStore'\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\nimport DateTimePicker from '@/Components/Global/Calendar/DateTimePicker.vue'\nimport DatePicker from '@/Components/Global/Calendar/DatePicker.vue'\nimport StepSixCongratulations from '@/Components/Global/Schedule/StepSixCongratulations.vue'\n\nimport Label from '@/Jetstream/Label.vue'\nimport Button from '@/Jetstream/Button.vue'\n\nconst userStore = useUserStore()\nconst scheduleStore = useScheduleStore()\nconst showStore = useShowStore()\nconst notificationStore = useNotificationStore()\nconst appSettingStore = useAppSettingStore()\n\ndayjs.extend(utc)\ndayjs.extend(timezone)\n\nlet page = usePage().props\n\nlet props = defineProps({\n  id: String,\n  show: Object,\n  // errors: Object,\n})\n\n// Access the global properties\nconst {proxy} = getCurrentInstance()\n\nconst startConfetti = () => {\n  proxy.$confetti.start()\n}\n\nconst stopConfetti = () => {\n  proxy.$confetti.stop()\n}\n\n// const errors = ref(props.errors);\n\nlet endDate = ''\nconst formEndDate = ref('')\nconst selectedEndDate = ref(null)\nconst timezoneConfirmed = ref(false)\nconst modalVisible = ref(false)\n\nconst currentStep = ref(0)\nconst totalSteps = ref(6)\nconst stepError = ref('') // To store the error message for the current step\n\n\n// Define the initial form state\nconst initialFormState = {\n  scheduleType: '', // 'one-time' or 'recurring'\n  daysOfWeek: [],\n  startTime: {\n    hour: '12',\n    minute: '00',\n    meridian: 'AM',\n  },\n  duration: '',\n  durationHour: '0', // Initialize as '0' to represent the default selection\n  durationMinute: '30', // Default to '30' minutes for '0' hours\n  durationDisplay: '30 minutes', // Default display text\n  startDate: '',\n  endDate: '',\n  errors: {},\n}\n\nconst form = reactive({...initialFormState}) // on modal load, reset form.\n\n// Function to reset the form\nconst resetForm = () => {\n  Object.assign(form, initialFormState)\n}\n\n// Function to clear errors\nconst clearErrors = () => {\n  form.errors = {}\n}\n\nfunction confirmTimezone() {\n  timezoneConfirmed.value = true\n}\n\nfunction selectScheduleType(type) {\n  form.scheduleType = type\n  // Proceed to the next step based on the selection\n  goToNextStep()\n}\n\nfunction goToNextStep() {\n  // Clear any existing error message\n  stepError.value = ''\n\n  if (form.scheduleType === 'recurring') {\n\n    // Combine startDate and startTime into a single dayjs object\n    let startHour = parseInt(form.startTime.hour)\n    const startMinute = parseInt(form.startTime.minute)\n\n    if (form.startTime.meridian === 'PM' && startHour !== 12) {\n      startHour += 12\n    } else if (form.startTime.meridian === 'AM' && startHour === 12) {\n      startHour = 0\n    }\n\n    // Combine form.startDate and form.startTime\n    const startDateTime = dayjs(form.startDate)\n        .hour(startHour)\n        .minute(startMinute)\n        .second(0)\n        .millisecond(0)\n\n    const now = dayjs().tz(userStore.timezone)\n    // const sixHoursFromNow = now.add(6, 'hour')\n\n    const isInThePast = dayjs(startDateTime).tz(userStore.timezone).isBefore(now)\n\n    if (currentStep.value === 1 && form.daysOfWeek.length === 0) {\n      // If no days are selected and the current step is 1, set an error message\n      stepError.value = 'Please select at least one day of the week.'\n    } else if (currentStep.value === 4 && !form.startDate) {\n      // If no start date is selected and the current step is 4, set an error message\n      stepError.value = 'Please select a start date.'\n    } else if (currentStep.value === 4 && isInThePast) {\n      // If the start date is within the next 6 hours when the current step is 4, set an error message\n      stepError.value = 'Start date must be in the future.'\n    } else if (currentStep.value === 5 && dayjs(form.endDate).isAfter(dayjs(form.startDate).add(3, 'months').add(1, 'week'))) {\n      // Allow the end date to be up to one week beyond exactly three months from the start date\n      // const latestEndDate = dayjs(form.startDate).add(3, 'months').add(1, 'week').format('ddd MMM D YYYY')\n      stepError.value = `End date must be within 3 months and 1 week of the start date. <\\/br>The latest possible end date is ${provisionalEndDate.value}. <\\/br>This limitation is for the Beta Version of notTV only.`\n    } else if (currentStep.value === 5) {\n      document.getElementById('confirmAddShowModal').showModal()\n    } else if (currentStep.value < totalSteps.value) {\n      // Proceed to the next step if there are no errors\n      currentStep.value++\n    }\n  } else if (form.scheduleType === 'one-time') {\n\n    const now = dayjs().tz(userStore.timezone)\n    // const sixHoursFromNow = now.add(6, 'hour')\n\n    // const isBeforeSixHours = dayjs(form.startDate).isBefore(sixHoursFromNow)\n    const isInThePast = dayjs(form.startDate).tz(userStore.timezone).isBefore(now)\n\n    if (currentStep.value === 1 && !form.startDate) {\n      // If no start date is selected and the current step is 1, set an error message\n      stepError.value = 'Please select a start date.'\n    } else if (currentStep.value === 1 && isInThePast) {\n      // If the start date is today or earlier when the current step is 1, set an error message\n      stepError.value = 'Start date must be in the future.'\n    } else if (currentStep.value === 2) {\n      document.getElementById('confirmAddShowModal').showModal()\n    } else if (currentStep.value < totalSteps.value) {\n      // Proceed to the next step if there are no errors\n      currentStep.value++\n    }\n  }\n\n}\n\nfunction goToPreviousStep() {\n  if (form.scheduleType === 'recurring' && currentStep.value > 0) {\n    currentStep.value--\n  } else if (form.scheduleType === 'one-time' && currentStep.value > 2) {\n    currentStep.value = 2\n  } else if (form.scheduleType === 'one-time') {\n    currentStep.value--\n  }\n}\n\nfunction goToStep(num) {\n  // Clear any existing error message\n  stepError.value = ''\n  if (form.scheduleType === 'recurring') {\n    if (currentStep.value === 1 && form.daysOfWeek.length === 0) {\n      // If no days are selected and the current step is 1, set an error message\n      stepError.value = 'Please select at least one day of the week.'\n    } else if ((currentStep.value === 4 && !form.startDate) || (num === 5 && !form.startDate)) {\n      // If no start date is selected and the current step is 4, set an error message\n      stepError.value = 'Please select a start date.'\n    } else if ((currentStep.value === 4 && dayjs(form.startDate).isBefore(dayjs().add(1, 'day').startOf('day'))) || (num === 5 && dayjs(form.startDate).isBefore(dayjs().add(1, 'day').startOf('day')))) {\n      // If the start date is today or earlier when the current step is 4, set an error message\n      stepError.value = 'Start date must be later than today.'\n    } else\n      currentStep.value = num\n  } else if (form.scheduleType === 'one-time') {\n    if (currentStep.value === 1 && !form.startDate) {\n      // If no start date is selected and the current step is 1, set an error message\n      stepError.value = 'Please select a start date.'\n    } else if (currentStep.value === 1 && dayjs(form.startDate).isBefore(dayjs().add(1, 'day').startOf('day'))) {\n      // If the start date is today or earlier when the current step is 1, set an error message\n      stepError.value = 'Start date must be later than today.'\n    } else\n      currentStep.value = num\n  }\n\n}\n\n// Define the order of days\nconst daysOrder = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n\n// Mapping full day names to their abbreviations\nconst dayAbbreviations = {\n  'Sunday': 'Su',\n  'Monday': 'M',\n  'Tuesday': 'Tu',\n  'Wednesday': 'W',\n  'Thursday': 'Th',\n  'Friday': 'F',\n  'Saturday': 'Sa',\n}\n\n// Define the mapping from day names to their numerical values (0 = Sunday, 6 = Saturday)\nconst dayNameToNumber = {\n  'Sunday': 1,\n  'Monday': 2,\n  'Tuesday': 3,\n  'Wednesday': 4,\n  'Thursday': 5,\n  'Friday': 6,\n  'Saturday': 7,\n}\n\n// Computed property to get the abbreviated days of the week in the correct order\nconst abbreviatedDaysOfWeekOrdered = computed(() => {\n  // Sort the selected days based on their index in daysOrder\n  const sortedSelectedDays = form.daysOfWeek\n      .map(day => ({day, index: daysOrder.indexOf(day)}))\n      .sort((a, b) => a.index - b.index)\n      .map(sortedDay => dayAbbreviations[sortedDay.day]) // Map to abbreviations\n\n  return sortedSelectedDays.join(', ')\n})\n\n// Watch for changes in the selected days of the week\nwatch(() => form.daysOfWeek, (newDays) => {\n  // If currently on the first step and at least one day is selected, clear the error message\n  if (currentStep.value === 1 && newDays.length > 0) {\n    stepError.value = ''\n  }\n}, {immediate: true})\n\n\n// Generate hours (1-12 for AM/PM format)\nconst hours = Array.from({length: 12}, (_, i) => (i + 1).toString().padStart(2, '0'))\n\n// A computed property to format the time for display\nlet formattedStartTime = computed(() => {\n  // Only format the time if all parts have been selected\n  if (form.startTime.hour && form.startTime.minute && form.startTime.meridian) {\n    return `${form.startTime.hour}:${form.startTime.minute} ${form.startTime.meridian}`\n  } else {\n    return '' // Default message\n  }\n})\n\n// Compute the available minute options based on the selected hour\nconst minuteOptions = computed(() => {\n  if (form.durationHour === '0') {\n    return ['30'] // Only '30' minutes if '0 hours' is selected\n  } else if (form.durationHour === '3') {\n    return ['00'] // Only '00' minutes if '3 hours' is selected\n  } else {\n    return ['00', '30'] // Both '00' and '30' minutes options available otherwise\n  }\n})\n\n// Function to update the duration display text based on current selections\nconst updateDurationDisplay = () => {\n  let display = `${form.durationHour} hour${form.durationHour === '1' ? '' : 's'}`\n  if (form.durationHour === '0') {\n    display = '30 minutes' // Display '30 minutes' for '0 hours' selection\n  } else if (form.durationMinute === '30' && form.durationHour !== '0') {\n    display += ' and 30 minutes' // Append 'and 30 minutes' for selections other than '0 hours'\n  }\n  form.durationDisplay = display // Update the display text in the form state\n}\n\n// Watch the durationMinute for changes to update the display accordingly\nwatch(() => form.durationMinute, () => {\n  updateDurationDisplay()\n}, {immediate: true})\n\n// Automatically adjust the minute selection when the hour changes\nwatch(() => form.durationHour, (newHour) => {\n  if (newHour === '1' || newHour === '2' || newHour === '3') {\n    form.durationMinute = '00' // Force to '00' if '3 hours' is selected\n  } else if (newHour === '0') {\n    form.durationMinute = '30' // Force to '30' if '0 hours' is selected\n  }\n  // Update the duration display based on the new selections\n  updateDurationDisplay()\n}, {immediate: true})\n\n// Initialize the display text based on the default selections\nupdateDurationDisplay()\n\n// Assuming form.startDate is in 'YYYY-MM-DD' format or a Date object\nconst formattedStartTimeForOneTime = computed(() => {\n  if (!form.startDate) return ''\n  // Directly parse and format the date in local time without converting timezones\n  // console.log('formattedStartTimeForOneTime time in: ' + form.startDate)\n  // console.log('formattedStartTimeForOneTime time out: ' + timeIn)\n  return dayjs(form.startDate).format('hh:mm A') // This should match the local time equivalent of the input\n\n\n})\n\nconst formattedStartDate = computed(() => {\n  if (!form.startDate) return ''\n  return dayjs(form.startDate).format('ddd MMM D YYYY') // Formats to \"Wed Feb 21 2024\"\n})\n\nlet formattedEndDate = computed(() => {\n  if (!form.endDate) return ''\n  return dayjs(form.endDate).format('ddd MMM D YYYY') // Formats to \"Wed Feb 21 2024\"\n})\n\n// Compute the disabled days based on the selected days of the week\nconst disabledDays = computed(() => {\n  const selectedDayNumbers = form.daysOfWeek.map(day => dayNameToNumber[day])\n  const disabledDayNumbers = Object.values(dayNameToNumber).filter(dayNum => !selectedDayNumbers.includes(dayNum))\n  // Return the structure expected by the DatePicker component for disabling days\n  return [\n    {\n      repeat: {\n        weekdays: disabledDayNumbers,\n      },\n    },\n  ]\n})\n\nconst provisionalEndDate = ref('')\n// Handle date selection from DatePicker\nconst handleStartDateSelected = ({date}) => {\n  stepError.value = '' // Clear any existing error messages\n  const dayjsDate = dayjs(date)\n  // form.startDate = dayjsDate.tz(userStore.canadianTimezone, true).format(); // Update the start date\n  form.startDate = date // Update the start date\n  // console.log('handleStartDate form.startDate: ' + form.startDate)\n  // console.log('handleStartDate raw date: ' + date)\n\n  // Calculate a rough endDate 3 months from the startDate\n  endDate = dayjs(date).add(3, 'months')\n\n  // If endDate's weekday differs from startDate's, adjust to the next occurrence of the same weekday\n  const startWeekday = dayjs(date).day()\n  while (endDate.day() !== startWeekday) {\n    endDate = endDate.add(1, 'day')\n  }\n\n  // If the endDate is more than a week away from being exactly 3 months, adjust by subtracting days to get closer to the 3-month mark\n  if (endDate.diff(dayjs(date).add(3, 'months'), 'week') > 1) {\n    endDate = endDate.subtract(endDate.diff(dayjs(date).add(3, 'months'), 'days') % 7, 'days')\n\n  }\n\n  form.endDate = endDate\n  // console.log('handleStartDate form.endDate: ' + form.endDate)\n  provisionalEndDate.value = dayjs(form.endDate).format('ddd MMM D YYYY') // Update the endDate in the form\n  // console.log('provisionalEndDate: ' + provisionalEndDate.value)\n}\n\n// Handles end date selection\nconst handleEndDateSelected = ({date}) => {\n  console.log('handleEndDate: ' + date)\n  // form.endDate = dayjs(date).tz(userStore.timezone) // Directly set the end date from the selection\n  form.endDate = date // Directly set the end date from the selection\n  // console.log('handleEndDate form.endDate: ' + form.endDate)\n  // console.log('NEW handleEndDate form.endDate: ' + selectedEndDate.value)\n  // You might want to add validation or adjustment logic here as well\n}\n\nconst submit = async () => {\n  closeConfirmAddShowModal()\n\n  try {\n    const payload = showStore.preparePayload(form)\n    // console.log('==================================================')\n    // console.log('PAYLOAD:', payload)\n\n    const response = await showStore.addShowToSchedule(payload)\n    // console.log('Success:', response)\n    goToStep(6)\n    startConfetti()\n  } catch (error) {\n    console.error('Error submitting form:', error)\n    goToStep(6)\n    if (error.response && error.response.data) {\n      form.errors = error.response.data\n      notificationStore.setToastNotification(form.errors, 'error', 10000)\n    } else {\n      form.errors = error.message || 'An unknown error occurred'\n      notificationStore.setToastNotification(form.errors, 'error', 10000)\n    }\n  }\n}\n\n// async function submit() {\n//   closeConfirmAddShowModal()\n//   let formattedDuration = ''\n//\n//   console.log('==================================================')\n//\n//   // If we reach here, user confirmed. Proceed with submission.\n//   if (form.scheduleType === 'one-time') {\n//\n//     // 1. Start date/time\n//       // Parse the startDate as a Day.js object\n//       console.log('SUBMIT start date in: ' + form.startDate)\n//       // form.startDate = dayjs(form.startDate).tz(userStore.canadianTimezone, true).format()\n//       // console.log('SUBMIT start date out: ' + form.startDate)\n//       let startDate = dayjs(form.startDate).tz(userStore.canadianTimezone, true);\n//       form.startDate = startDate.format()\n//       console.log('SUBMIT start date formatted: ' + form.startDate);\n//\n//     // 2. Duration\n//       // Ensure duration hours and minutes are treated as numbers\n//       let durationHours = Number(form.durationHour);\n//       let durationMinutes = Number(form.durationMinute);\n//\n//       form.duration = (durationHours * 60) + durationMinutes;\n//\n//     // 3. End date/time\n//\n//       // Adjust the endDate by setting the correct hour and minute, then adding the duration\n//       endDate = startDate\n//           .add(durationHours, 'hour')\n//           .add(durationMinutes, 'minute');\n//\n//       // If you need to adjust for a specific timezone without changing the local time\n//         // Note: The true flag in tz() might not be necessary depending on your exact needs for timezone handling\n//         form.endDate = dayjs(endDate).tz(userStore.canadianTimezone, true).format();\n//         console.log('SUBMIT end date out: ' + form.endDate);\n//\n//\n//     // 4. Other values are null\n//       form.startTime = null // not used for one-time\n//       form.daysOfWeek = null // not used for one-time\n//\n//\n//   }\n//\n//\n//   if (form.scheduleType === 'recurring') {\n//\n//\n//     // 1. Start date in, add start time\n//       console.log('SUBMIT startDate in: ' + form.startDate);\n//\n//       // Assuming form.startTime.hour, form.startTime.minute are in correct format and form.startTime.meridian is either 'AM' or 'PM'\n//       let hour = parseInt(form.startTime.hour) % 12;// Convert to 12-hour format\n//       if (form.startTime.meridian === 'PM') hour += 12; // Convert PM to 24-hour format\n//\n//       // Parse the startDate and set the time\n//       let startDate = dayjs(form.startDate).hour(hour).minute(form.startTime.minute);\n//       form.startDate = dayjs(startDate).tz(userStore.canadianTimezone, true).format()\n//     console.log('whats the start date? ' + form.startDate)\n//       let newEndTime = dayjs(form.startDate).add(form.durationHour, 'hours').add(form.durationMinute, 'minutes')\n//     form.endTime = newEndTime.format('HH:mm:ss')\n//     console.log('NEW END TIME: ' + form.endTime);\n//     // Extract the date part of form.endDate\n//     let endDateOnly = dayjs(form.endDate).format('YYYY-MM-DD');\n// // Combine endDateOnly with form.endTime to update the form.endDate\n//     form.endDate = dayjs(endDateOnly + ' ' + form.endTime).format('YYYY-MM-DD HH:mm:ss');\n//\n//     let newFormattedEndDateTime = dayjs(form.endDate).tz(userStore.canadianTimezone, true).format()\n//     console.log('NEW END DATETIME: ' + newFormattedEndDateTime);\n//       form.endDate = newFormattedEndDateTime\n//     console.log('CONFIRM END DATETIME: ' + form.endDate);\n//     // Calculating endDate based on startDate and the duration\n//     // let endDate = startDate.add(totalDurationMinutes, 'minute');\n//\n//     // Setting form.endDate and logging\n//     // let endDate = form.endDate.format()\n//     // form.endDate = endDate.format();\n//\n//\n//     // 2. Start time (HH:MM:SS)\n//       // formattedStartTime = startDate.format('HH:mm:ss');\n//       form.startTime = startDate.format('HH:mm:ss'); // Use the desired format\n//       console.log('SUBMIT start time formatted in dayjs: ' + form.startTime);\n//\n//     // 3. Duration\n//       console.log('SUBMIT duration minute in: ' + form.durationMinute);\n//       console.log('SUBMIT duration hour in: ' + form.durationHour);\n//\n//     // Correctly calculating total duration in minutes\n//     let totalDurationMinutes = (parseInt(form.durationHour) * 60) + parseInt(form.durationMinute);\n//     console.log('SUBMIT formatted duration in minutes: ' + totalDurationMinutes);\n//\n//       // // Calculate total duration in minutes\n//       formattedDuration = (Number(form.durationHour) * 60) + Number(form.durationMinute);\n//       form.duration = formattedDuration\n//\n//\n//       // console.log('SUBMIT formatted duration in minutes: ' + form.duration);\n//\n//     // 4. End date, add end time (end date with HH:MM:SS = start time + duration)\n//     //   // Ensure the initial timestamp is correctly parsed as a Day.js date object\n//     //       if (!selectedEndDate) {\n//     //         form.endDate = startDate.add(totalDurationMinutes, 'minutes')\n//     //         console.log('no selected end date')\n//     //       } else {\n//     //         form.endDate = dayjs(selectedEndDate.value).add(totalDurationMinutes, 'minutes')\n//     //         console.log('Selected end date!')\n//     //       }\n//\n//     // Log the original values to ensure they're what you expect\n//     // console.log('Original duration hour:', form.durationHour);\n//     // console.log('Original duration minute:', form.durationMinute);\n//     //       const durationHours = parseInt(form.durationHour, 10);\n//     //       const durationMinutes = parseInt(form.durationMinute, 10);\n//     // // Log the parsed values to confirm they've been correctly interpreted\n//     // console.log('Parsed duration hour (as integer):', durationHours);\n//     // console.log('Parsed duration minute (as integer):', durationMinutes);\n//     //\n//     //       form.endDate = dayjs(form.endDate)\n//     //           .add(durationHours, 'hours')\n//     //           .add(durationMinutes, 'minutes')\n//     //           .format()\n//     //       // form.duration = totalDurationMinutes\n//     //       console.log('SUBMIT end date in: ' + form.endDate);\n//\n//           //\n//           // let endDate = dayjs(form.endDate).hour(hour).minute(form.startTime.minute);\n//           // console.log('SUBMIT end date formatted in dayjs: ' + endDate);\n//\n//       // Convert hour and minute from form.startTime to numbers\n//       //     let newHour = Number(form.startTime.hour) % 12;\n//       //     if (form.startTime.meridian === 'PM') newHour += 12; // Adjust for 24-hour format if PM\n//\n//       // Ensure duration hours and minutes are treated as numbers\n//       //     let durationHours = Number(form.durationHour);\n//       //     let durationMinutes = Number(form.durationMinute);\n//\n//       // Adjust the endDate by setting the correct hour and minute, then adding the duration\n//       //     let endDate = dayjs(endDate)\n//       //         .add(totalDurationMinutes, 'minutes')\n//     //\n//     // endDate.value = dayjs(endDate.value)\n//     //     .add(totalDurationMinutes, 'minutes')\n//     //\n//     // console.log('NEW end date WITH MINUTES ADDED: ' + endDate.value);\n//\n//               // .add(durationMinutes, 'minute');\n//\n//       // If you need to adjust for a specific timezone without changing the local time\n//       // Note: The true flag in tz() might not be necessary depending on your exact needs for timezone handling\n//     // Adding duration directly to startDate to avoid confusion and ensure accuracy\n//\n//     //\n//     // form.endDate = dayjs(endDate.value).format();\n//     //       console.log('NEW ADJUSTED == form.endDate: ' + form.endDate);\n//\n//\n//     // 5. Days of week\n//\n//\n//\n//   }\n//\n//   // Prepare the payload for the API based on the schedule type\n//   const handleAddShow = async () => {\n//     const payload = {\n//       contentType: 'show',\n//       contentId: props.show.id,\n//       scheduleType: form.scheduleType,\n//       startTime: form.startTime,\n//       duration: form.duration,\n//       // startDate: form.startDate,\n//       startDate: form.startDate,\n//       endDate: form.endDate,\n//       daysOfWeek: form.scheduleType === 'recurring' ? form.daysOfWeek : [],\n//       timezone: userStore.canadianTimezone,\n//       // Include other relevant form data here\n//     }\n//\n//     console.log('==================================================')\n//     console.log('PAYLOAD: Content Type: ' + payload.contentType)\n//     console.log('PAYLOAD: Content ID: ' + payload.contentId)\n//     console.log('PAYLOAD: Formatted Start Date: ' + payload.startDate)\n//     console.log('PAYLOAD: Formatted Start Time: ' + payload.startTime)\n//     console.log('PAYLOAD: Formatted Duration in minutes: ' + payload.duration)\n//     console.log('PAYLOAD: Formatted End Date: ' + payload.endDate)\n//     console.log('PAYLOAD: Formatted Days of Week: ' + payload.daysOfWeek)\n//     console.log('PAYLOAD: User Timezone: ' + userStore.canadianTimezone)\n//\n//     // Adjust the start and end time based on the selected time and meridian\n//     // const adjustedStartTime = dayjs(`${form.startDate} ${payload.startTime}`, 'YYYY-MM-DD hh:mm A').toISOString()\n//     // const durationInMinutes = parseInt(form.durationHour) * 60 + parseInt(form.durationMinute)\n//     // const adjustedEndTime = dayjs(adjustedStartTime).add(durationInMinutes, 'minute').toISOString()\n//\n//     try {\n//       // Replace '/api/schedule' with your actual API endpoint\n//       const response = await axios.post('/api/schedule/addToSchedule', payload);\n//\n//       // Handle success - process response.data as needed\n//       console.log('Success:', response.data);\n//       goToStep(6);\n//       startConfetti();\n//       scheduleStore.savingToSchedule = true\n//     } catch (error) {\n//       // Handle errors\n//       console.error('Error submitting form:', error);\n//       goToStep(6); // Navigate to the error display step\n//       // Populate `form.errors` with the error details for display\n//       // Axios wraps the response error in `error.response`\n//       if (error.response && error.response.data) {\n//         form.errors.value = error.response.data;\n//       } else {\n//         form.errors.value = error.message || 'An unknown error occurred';\n//       }\n//     }\n//   }\n// }\n\nfunction closeModal() {\n  document.getElementById('addShowToScheduleModal').close()\n  // Reset the form fields to their initial values\n  resetForm()\n  // Clear all validation errors\n  clearErrors()\n  stopConfetti()\n  currentStep.value = 0\n  // router.visit(`/shows/${props.show.slug}/manage`)\n}\n\nfunction closeConfirmAddShowModal() {\n  document.getElementById('confirmAddShowModal').close()\n}\n\nconst closeModalAndReset = () => {\n  currentStep.value = 0\n  closeModal()\n  // router.visit(`/shows/${props.show.slug}/manage`)\n}\n\n// Watcher for currentStep to display Confetti\n// watch(currentStep, (newVal) => {\n//   if (newVal === 6) {\n//     startConfetti()\n//   }\n// })\n\n// Initialize selectedTimezone with the current value from userStore\nconst selectedTimezone = ref(userStore.canadianTimezone)\n\n// Watch for changes in userStore's timezone and update selectedTimezone accordingly\nwatch(() => userStore.canadianTimezone, (newTimezone) => {\n  selectedTimezone.value = newTimezone\n  // dayjs.tz.setDefault(userStore.timezone);\n})\n\n\n// Function to handle the keydown event\nconst handleKeydown = (event) => {\n  if (event.key === 'Escape') {\n    console.log('ESC pressed, modal is open')\n    stopConfetti()\n    currentStep.value = 0\n    appSettingStore.btnRedirect(`/shows/${props.show.slug}/manage`)\n\n  }\n}\n\nonMounted(() => {\n  document.addEventListener('keydown', handleKeydown)\n})\n\nonUnmounted(() => {\n  document.removeEventListener('keydown', handleKeydown)\n})\n\n// onMounted(async () => {\n//   timezones.value = await getTimeZones(); // Fetch the list of timezones\n// });\n\nfunction updateTimezone() {\n  // Update the timezone in your store\n  userStore.setUserTimezone(selectedTimezone.value)\n  // Optionally, send the updated timezone to your backend here\n}\n\n</script>\n","import script from \"./AddShowToSchedule.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AddShowToSchedule.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./ChangeShowSchedule.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChangeShowSchedule.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <dialog id=\"changeScheduleModal\" class=\"modal\">\n    <div class=\"modal-box w-11/12 max-w-5xl text-black bg-white dark:bg-gray-800 dark:text-white\">\n\n      <div class=\"flex flex-row justify-center text-center\">\n        <div>\n          <h2 class=\"font-bold text-xl\">\n            Change Show Schedule\n          </h2>\n          <div class=\"my-6 font-medium\">\n            We are developing this feature. Check back soon.\n            <!--            <slot name=\"form-description\">Default Form Description</slot>-->\n          </div>\n          <div class=\"mb-6\">\n            For now you can <button @click.prevent=\"removeFromSchedule\" class=\"text-blue-700 hover:text-blue-500\">remove the show</button> from the schedule and re-add it again.\n          </div>\n          <div class=\"mt-4 mb-2 text-left\"></div>\n          <StepSixCongratulations/>\n          <div v-if=\"errors\" class=\"mb-6 text-red-700\">\n            <div>{{ errors }}</div>\n            <div>Please let Travis know.</div>\n          </div>\n          <div class=\"flex flex-row justify-center\">\n            <button @click.prevent=\"closeModal\" class=\"btn\">Okay</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </dialog>\n</template>\n\n<script setup>\nimport { onMounted, ref } from 'vue'\nimport { usePage } from '@inertiajs/vue3'\nimport { useShowStore } from '@/Stores/ShowStore'\nimport StepSixCongratulations from '@/Components/Global/Schedule/StepSixCongratulations.vue'\n\nconst showStore = useShowStore()\n\nconst page = usePage().props\n\nlet props = defineProps({\n  show: Object\n})\n\nconst errors = ref()\n\nconst closeModal = () => {\n  document.getElementById('changeScheduleModal').close()\n}\n\nconst removeFromSchedule = async () => {\n  await showStore.removeFromSchedule('App\\\\Models\\\\Show', props.show.id)\n  closeModal()\n};\n\n\n</script>\n","import script from \"./ShowManageHeader.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ShowManageHeader.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n      <div class=\"flex flex-row items-start\">\n        <!--                <img :src=\"'/storage/images/' + show.poster\" alt=\"\" class=\"w-20 mr-2 justify-left\">-->\n        <Link :href=\"`/shows/${show.slug}`\" class=\"uppercase\">\n          <div class=\"h-80\">\n            <SingleImage :image=\"show.image\" alt=\"'show poster'\" class=\"w-60 object-contain mr-2 justify-left\"/>\n          </div>\n        </Link>\n        <div class=\"flex flex-col pl-4\">\n          <Link :href=\"`/shows/${show.slug}`\" class=\"uppercase\"><span class=\"hover:text-blue-600 mb-3 inline-flex items-center text-3xl font-semibold relative\">{{ show.name }}</span></Link>\n            <div><span class=\"text-xs  font-semibold uppercase\">Team: </span>\n              <Link :href=\"`/teams/${team.slug}/manage`\" class=\"text-blue-500 hover:text-blue-600 ml-2 uppercase font-bold\"> {{\n                  team.name\n                }}\n              </Link>\n            </div>\n            <div><span class=\"text-xs font-semibold mr-2 uppercase\">Show Runner: </span><span\n                class=\"font-medium font-bold\"> {{ show.showRunner.name }} </span></div>\n            <div class=\"pt-4\"><span class=\"text-xs font-semibold mr-2 uppercase\">Category: </span><span\n                class=\"font-medium text-orange-800\"> {{ show?.category?.name }} </span></div>\n            <div><span class=\"text-xs font-semibold mr-2 uppercase\">Sub-category: </span><span\n                class=\"font-medium text-orange-800\"> {{ show?.subCategory?.name }} </span></div>\n\n          <div class=\"mt-12 w-full h-full flex flex-col\">\n            <div class=\"flex-grow\"></div>\n            <div v-if=\"showStore.isScheduled && showStore.scheduleDetails\">\n              <div v-if=\"nextBroadcastDate\">\n                The next broadcast date is <strong>{{ userStore.formatDateTimeFromUtcToUserTimezone(nextBroadcastDate) }}&nbsp;{{ userStore.timezoneAbbreviation }}</strong>. <ConvertDateTimeToTimeAgo :dateTime=\"nextBroadcastDate\" :class=\"`text-yellow-500`\" />\n              </div>\n              <div v-else-if=\"isFutureBroadcast\">\n                The next broadcast date is <strong>{{ userStore.formatDateTimeFromUtcToUserTimezone(showStore.scheduleDetails.startTime) }}&nbsp;{{ userStore.timezoneAbbreviation }}</strong>. <ConvertDateTimeToTimeAgo :dateTime=\"showStore.scheduleDetails.startTime\" :class=\"`text-yellow-500`\" />\n              </div>\n              <div>\n                Your show is currently scheduled as <strong>{{ showStore.scheduleDetails.type }}</strong>.\n                <div v-if=\"showStore.scheduleDetails.type === 'one-time'\">\n                  It will start on <strong>{{ userStore.formatDateTimeFromUtcToUserTimezone(showStore.scheduleDetails.startTime) }}&nbsp;{{ userStore.timezoneAbbreviation }}</strong> and last for <strong>{{ showStore.scheduleDetails.durationMinutes }} minutes</strong>.\n                </div>\n                <div v-else>\n                  <template v-if=\"Array.isArray(showStore.scheduleDetails.daysOfWeek)\">\n                    It recurs on <strong>{{ showStore.scheduleDetails.daysOfWeek.join(', ') }}</strong>\n                  </template>\n                  <template v-else>\n                    It recurs on <strong>{{ showStore.scheduleDetails.daysOfWeek }}</strong>\n                  </template>\n                  starting at <strong>{{ userStore.formatTimeFromDateInUserTimezone(showStore.scheduleDetails.startTime) }}&nbsp;{{ userStore.timezoneAbbreviation }}</strong> with each occurrence lasting <strong>{{ showStore.scheduleDetails.durationMinutes }} minutes</strong>.\n                </div>\n              </div>\n            </div>\n\n            <div v-if=\"can.editShow\">\n            <button v-if=\"!showStore.isScheduled\" @click=\"openAddShowToScheduleModal\"\n                    :disabled=\"showStore.loadingUpdatingStatus || showStore.isUpdatingSchedule || showStore.isSaving\"\n                    class=\"btn btn-lg bg-green-500 hover:bg-green-700 border-green-500 text-white drop-shadow-lg py-2 flex flex-col disabled:text-white\">\n              <span v-if=\"showStore.loadingUpdatingStatus\" class=\"loading loading-dots text-white\"></span>\n              <span v-else-if=\"!showStore.isUpdatingSchedule && !showStore.isSaving\" class=\"\">Add Show To Schedule</span>\n              <span v-else>The schedule is being updated...</span>\n            </button>\n            <button v-if=\"showStore.isScheduled\" @click=\"openChangeScheduleModal\"\n                    :disabled=\"showStore.loadingUpdatingStatus || showStore.isUpdatingSchedule || showStore.isSaving\"\n                    class=\"btn btn-lg bg-indigo-500 hover:bg-indigo-700 border-indigo-500 text-white drop-shadow-lg py-2 flex flex-col\">\n              <span v-if=\"showStore.loadingUpdatingStatus\" class=\"loading loading-dots text-white\"></span>\n              <span v-else-if=\"!showStore.isUpdatingSchedule && !showStore.isSaving\">Change Schedule</span>\n              <span v-else>The schedule is being updated...</span>\n            </button>\n              <div v-if=\"showStore.isUpdatingSchedule\" class=\"mt-4 text-red-600\">\n                <span>{{ showStore.updatedBy }} is currently updating the schedule...</span>\n              </div>\n            </div>\n          </div>\n        </div>\n\n      </div>\n\n    <AddShowToSchedule :show=\"show\">\n      <template #form-title>\n        Add your show to the schedule\n      </template>\n      <template #form-description>\n        NOTE: You may want to schedule episodes individually.\n      </template>\n      <template #button-label>\n        Add\n      </template>\n    </AddShowToSchedule>\n\n    <ChangeSchedule :show=\"show\"/>\n\n  </div>\n</template>\n\n<script setup>\nimport { computed, onBeforeUnmount, onMounted, ref } from 'vue'\nimport { usePage } from '@inertiajs/vue3'\nimport { useShowStore } from \"@/Stores/ShowStore\"\nimport { useUserStore } from \"@/Stores/UserStore\"\nimport { useNotificationStore } from \"@/Stores/NotificationStore\"\nimport SingleImage from \"@/Components/Global/Multimedia/SingleImage\"\nimport Button from '@/Jetstream/Button.vue'\nimport AddShowToSchedule from '@/Components/Global/Schedule/AddShowToSchedule.vue'\nimport ChangeSchedule from '@/Components/Global/Schedule/ChangeShowSchedule.vue'\nimport dayjs from 'dayjs'\nimport utc from 'dayjs/plugin/utc';\nimport timezone from 'dayjs/plugin/timezone';\nimport ConvertDateTimeToTimeAgo from '@/Components/Global/DateTime/ConvertDateTimeToTimeAgo.vue'\n\ndayjs.extend(utc);\ndayjs.extend(timezone);\n\nconst showStore = useShowStore()\nconst userStore = useUserStore()\nconst notificationStore = useNotificationStore()\n\nconst page = usePage().props\n\nconst props = defineProps({\n  show: Object,\n  team: Object,\n  can: Object,\n})\n\nconst errors = ref();\n\nconst nextBroadcastDate = computed(() => {\n  // console.log('showStore.scheduleDetails:', showStore.scheduleDetails);\n\n  const now = dayjs();\n  if (showStore.scheduleDetails && showStore.scheduleDetails.broadcastDates) {\n    const broadcastDatesObj = JSON.parse(showStore.scheduleDetails.broadcastDates);\n    console.log('Parsed broadcastDates:', broadcastDatesObj);\n\n    if (Array.isArray(broadcastDatesObj.broadcastDates)) {\n      const upcomingDates = broadcastDatesObj.broadcastDates\n          .map(dateStr => {\n            const date = dayjs.tz(dateStr, broadcastDatesObj.timezone);\n            console.log('date:', date.toString());\n            return date;\n          })\n          .filter(date => date.isAfter(now))\n          .sort((a, b) => a - b);\n\n      console.log('upcomingDates:', upcomingDates);\n      return upcomingDates.length > 0 ? upcomingDates[0].toISOString() : null;\n    }\n  }\n  return null;\n});\n\nconst isFutureBroadcast = computed(() => {\n  return dayjs(showStore.scheduleDetails.startTime).isAfter(dayjs());\n});\n\n// Function to set up MutationObserver for a modal\nconst watchModal = (modalId, onClose) => {\n  const modalElement = document.getElementById(modalId);\n  if (!modalElement) return;\n\n  const observer = new MutationObserver((mutationsList) => {\n    for (let mutation of mutationsList) {\n      if (mutation.type === 'attributes' && mutation.attributeName === 'open') {\n        if (!modalElement.hasAttribute('open')) {\n          onClose();\n        }\n      }\n    }\n  });\n\n  observer.observe(modalElement, { attributes: true });\n\n  return observer;\n};\n\nconst openAddShowToScheduleModal = async () => {\n  try {\n    await showStore.setUpdatingStatus(true, page.user.name, props.show.slug);\n    document.getElementById('addShowToScheduleModal').showModal();\n    notificationStore.setToastNotification('Show meta loaded.', 'info')\n  } catch (error) {\n    errors.value = 'Failed to set saving state. Please try again.';\n    notificationStore.setToastNotification(errors.value, 'error', 10000)\n  }\n};\n\nconst openChangeScheduleModal = async () => {\n  try {\n    await showStore.setUpdatingStatus(true, page.user.name, props.show.slug);\n    document.getElementById('changeScheduleModal').showModal();\n    notificationStore.setToastNotification('Show meta loaded.', 'info')\n  } catch (error) {\n    errors.value = 'Failed to set saving state. Please try again.';\n    notificationStore.setToastNotification(errors.value, 'error', 10000)\n  }\n};\n\n// Declare observers so they can be cleaned up on unmount\nlet addShowToScheduleObserver;\nlet changeScheduleObserver;\n\nonMounted(async () => {\n  addShowToScheduleObserver = watchModal('addShowToScheduleModal', async () => {\n    await showStore.setUpdatingStatus(false, page.user.name, props.show.slug);\n  });\n\n  changeScheduleObserver = watchModal('changeScheduleModal', async () => {\n    await showStore.setUpdatingStatus(false, page.user.name, props.show.slug);\n  });\n\n  // Check the flag in meta on page load\n  // console.log('show.meta:', props.show.meta);\n\n  const meta = props.show.meta\n  // console.log('isUpdatingSchedule:', meta.isUpdatingSchedule);\n  // console.log('updatedBy:', meta.updatedBy);\n  // console.log('current user:', page.user.name);\n\n  if (meta.isUpdatingSchedule && meta.updatedBy === page.user.name) {\n    // console.log('Resetting isUpdatingSchedule and updatedBy');\n    await showStore.setUpdatingStatus(false, page.user.name, props.show.slug);\n  }\n});\n\n// Store observers to disconnect them later\nonBeforeUnmount(() => {\n  if (addShowToScheduleObserver) addShowToScheduleObserver.disconnect();\n  if (changeScheduleObserver) changeScheduleObserver.disconnect();\n});\n</script>\n","import script from \"./ManageShowEpisodesStatuses.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ManageShowEpisodesStatuses.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <div>\n        <div v-if=\"!userStore.isAdmin\">\n            <button v-if=\"teamStore.can.editShow && props.episodeStatusId !== 9 && props.episodeStatusId !== 10\" :class=\"episodeStatusClass\" @click=\"openEpisodeStatuses()\">{{ episodeStatus }}</button>\n            <div v-if=\"!teamStore.can.editShow || props.episodeStatusId === 9 || props.episodeStatusId === 10\" class=\"cursor-not-allowed\" :class=\"episodeStatusClass\">{{ episodeStatus }}</div>\n        </div>\n        <div v-else>\n            <button class=\"h-fit py-1\" :class=\"episodeStatusClass\" @click=\"openEpisodeStatuses()\">{{ episodeStatus }}</button>\n        </div>\n\n        <dialog :id=\"dialogId\" class=\"modal\">\n            <div class=\"modal-box h-fit bg-white text-black\">\n                <div v-if=\"props.episodeStatusId === 7\">\n                    <h3 class=\"text-center mb-2\">Episode is Published</h3>\n                    <p class=\"text-center mb-2\">\n                        Please contact the notTV Team if you need to change the episode status. This is because the episode is already promoted and distributed.\n                    </p>\n                    <p class=\"text-center\">\n                        Email <a class=\"text-blue-600 hover:text-blue-500\" :href=\"`mailto:hello@not.tv?subject=Need%20Help%20With%20Published%20Episode%20ID:%20${props.episodeUlid}&body=Episode%20ID:%20${props.episodeUlid}%0AEpisode%20Name:%20${props.episodeName}%0AShow%20Name:%20${props.showName}`\">hello@not.tv</a> for assistance\n                    </p>\n                    <p v-if=\"userStore.isAdmin\" class=\"text-center mt-2\">\n                        <button @click=\"openAdminChangeStatusModal()\" class=\"btn btn-wide my-2 text-white bg-orange-600 hover:bg-orange-500\">Change Status (admin only)</button>\n                    </p>\n                </div>\n                <div v-else>\n                    <div v-if=\"!setDateTime\">\n                        <h2 class=\"text-center mb-2\">Change the Episode Status:</h2>\n                        <div v-for=\"(status, key)  in episodeStatuses\" :key=\"key\" class=\"text-center\">\n                            <div class=\"btn btn-wide my-1\" @click=\"checkEpisodeStatus(episodeId, status.id)\">{{ status.name }}</div>\n                        </div>\n                    </div>\n                    <div v-if=\"setDateTime\">\n                        <h3 class=\"text-center mb-2\">Set the Scheduled Release Date and Time:</h3>\n                        <div class=\"text-center\">\n                            <DateTimePicker :date=\"convertedDate\" @date-time-selected=\"handleScheduledDateTime\" />\n                            <button class=\"btn my-2\" @click=\"changeEpisodeStatus(episodeId, 6)\">Schedule it!</button>\n                            <button class=\"btn ml-2 my-2\" @click=\"cancelScheduleEpisode\">Cancel</button>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n\n            <form method=\"dialog\" class=\"modal-backdrop\">\n                <button>close</button>\n            </form>\n        </dialog>\n\n        <dialog :id=\"`confirmPublishModal.${episodeId}`\" class=\"modal\">\n            <div class=\"modal-box\">\n                <h3 class=\"text-center font-bold text-lg\">Are you sure you want to publish?</h3>\n                <p class=\"text-center py-4\">This action cannot be undone. When you publish an episode it registers it on the blockchain and promotes it on the network.</p>\n                <div class=\"modal-action\">\n                    <form method=\"dialog\">\n                            <button @click=\"changeEpisodeStatus(episodeId, 7)\" class=\"btn text-white bg-green-600 hover:bg-green-500 mr-2\">Yes! Publish Now!</button>\n                            <button class=\"btn text-white bg-orange-600 hover:bg-orange-500\">No, cancel</button>\n                    </form>\n                </div>\n            </div>\n        </dialog>\n\n        <dialog :id=\"`adminChangeStatusModal.${episodeId}`\" class=\"modal\">\n            <div class=\"modal-box bg-gray-100 text-black\">\n                <h3 class=\"text-center font-bold text-lg\">Change Status (Admin Only)</h3>\n                <p class=\"text-center py-4\">This is the Admin Override to change the episode status. If the episode is already published and you un-publish it the episode will be reverted to \"Review\" and become inaccessible to the public.</p>\n                <div class=\"w-full flex justify-center mt-2 pb-4\">\n                    <form method=\"dialog\">\n                        <button @click=\"changeEpisodeStatus(episodeId, 5)\" class=\"btn text-white bg-blue-600 hover:bg-blue-500 mr-2\">Un-publish</button>\n                        <button @click=\"changeEpisodeStatus(episodeId, 9)\" class=\"btn text-white bg-orange-600 hover:bg-orange-500 mr-2\">Freeze</button>\n                        <button @click=\"changeEpisodeStatus(episodeId, 10)\" class=\"btn text-white bg-red-600 hover:bg-red-500\">Restrict</button>\n                    </form>\n                </div>\n                <p class=\"text-center py-4\"><span class=\"font-semibold\">Please Note:</span> Un-publishing will have an adverse affect on the promotional links already used.</p>\n                <p class=\"text-center py-4\"><span class=\"italic\">Press ESC to close or <button @click=\"closeModals\" class=\"text-blue-600 hover:text-blue-500\">click here</button> to close.</span></p>\n            </div>\n        </dialog>\n\n    </div>\n\n</template>\n\n<script setup>\nimport { router } from '@inertiajs/vue3'\nimport { computed, ref, watch, watchEffect } from 'vue'\nimport { format } from \"date-fns\"\nimport { useTeamStore } from \"@/Stores/TeamStore\"\nimport { useShowStore } from \"@/Stores/ShowStore\"\nimport { useUserStore } from \"@/Stores/UserStore\"\nimport { useNotificationStore } from \"@/Stores/NotificationStore\"\nimport DateTimePicker from \"@/Components/Global/Calendar/DateTimePicker\"\nimport DateTimePickerSelect from \"@/Components/Global/Calendar/DateTimePickerSelect\"\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport timezone from 'dayjs/plugin/timezone';\nimport utc from 'dayjs/plugin/utc'; // Required for timezone support\n\nconst teamStore = useTeamStore()\nconst showStore = useShowStore()\nconst userStore = useUserStore()\nconst notificationStore = useNotificationStore()\n\n// Extend Day.js with the plugins\ndayjs.extend(relativeTime);\ndayjs.extend(timezone);\ndayjs.extend(utc);\n\nlet props = defineProps({\n    episodeId: '',\n    episodeUlid: '',\n    episodeName: '',\n    episodeSlug: '',\n    episodeStatus: '',\n    episodeStatusId: '',\n    episodeStatuses: Object,\n    showName: '',\n    showSlug: '',\n    scheduledDateTime: String,\n})\n\n// Ref for reactive timezone\nconst userTimezone = ref(userStore.timezone);\n\nconst convertedDate = ref('');\nwatchEffect(() => {\n  if (userStore.timezone) {\n    convertedDate.value = dayjs.utc(props.scheduledDateTime).tz(userStore.timezone).format();\n  }\n})\n\nconst convertTimeToUserTimezone = (date, timezone) => {\n  // Convert the date to the provided timezone using Day.js\n  return dayjs.tz(date, timezone);\n};\n\nconst errorMessage = ref('');\nconst dialogId = props.episodeId+'episodeStatuses'\n\nlet scheduledDateTime = ref(null)\nlet setDateTime = ref(false)\n\nfunction openEpisodeStatuses() {\n    document.getElementById(dialogId).showModal()\n}\n\n// function checkEpisodeStatus(episodeId, newStatusId) {\n//     setDateTime = true;\n//     if (newStatusId === 6 && scheduledDateTime === null) {\n//         // open a model to set scheduled dateTime\n//\n//         router.reload()\n//     }\n// }\n\nconst checkEpisodeStatus = (episodeId, statusId) => {\n    if (statusId === 6) {\n        // update the modal to set scheduled dateTime\n        setDateTime.value = !setDateTime.value;\n    } else if (statusId === 7) {\n        // open modal to confirm they want to publish.\n        document.getElementById('confirmPublishModal.' + props.episodeId).showModal()\n    }\n    else if (statusId !== 6) {\n        changeEpisodeStatus(episodeId, statusId)\n    }\n};\n\nconst cancelScheduleEpisode = () => {\n    setDateTime.value = !setDateTime.value;\n};\n\nconst openAdminChangeStatusModal = () => {\n    document.getElementById('adminChangeStatusModal.'+props.episodeId).showModal()\n}\n\nconst handleScheduledDateTime = (newDate) => {\n    selectedScheduledDateTime.value = newDate;\n    scheduledDateTime = newDate.date;\n    // console.log(scheduledDateTime)\n    updateScheduledDateTime(scheduledDateTime)\n    // console.log(formattedScheduledDateTime)\n}\n\nconsole.log('we already have the user timezone: ' + userStore.timezone)\n\n// const getUserTimezone = () => {\n//     // Use the Intl object to get the user's timezone\n//     userTimezone.value = Intl.DateTimeFormat().resolvedOptions().timeZone;\n// };\n\nlet selectedScheduledDateTime = ref('');\nlet formattedScheduledDateTime = ref(''); // This will display the formatted date and time\n\nconst convertToTimeZone = (dateTime, userTimezone) => {\n    return format(dateTime, 'yyyy-MM-dd HH:mm:ssXXX', { userTimezone });\n};\n\nconst updateScheduledDateTime = (scheduledDateTime) => {\n    if (selectedScheduledDateTime.value) {\n        // Convert the selected date and time to the desired time zone\n        // const timeZone = 'UTC'; // Change this to your desired time zone\n        formattedScheduledDateTime.value = convertToTimeZone(\n            new dayjs(scheduledDateTime).tz(userStore.timezone).format()\n        );\n        // console.log('updated ScheduleDateTime to timezone: ' + formattedScheduledDateTime.value)\n    } else {\n        formattedScheduledDateTime.value = '';\n    }\n};\n\nasync function changeEpisodeStatus(episodeId, statusId) {\n    try {\n        const response = await axios.post('/shows/episode/changeEpisodeStatus', {\n            episode_id: episodeId,\n            new_status_id: statusId,\n            scheduled_release_dateTime: formattedScheduledDateTime.value\n        });\n        // Handle success response as needed\n        notificationStore.setToastNotification(response.data.message, 'success')\n        // Check if the response contains an \"alert\" message\n        if (response.data.alert) {\n            // Display the alert message\n            alert(response.data.alert);\n        } else\n        {\n          // Update the showStore.episodes with the new data\n          const updatedEpisode = response.data;\n          const episodeIndex = showStore.episodes.data.findIndex(ep => ep.id === updatedEpisode.episode_id);\n          if (episodeIndex !== -1) {\n            showStore.episodes.data[episodeIndex].episodeStatusId = updatedEpisode.episode_status_id;\n            showStore.episodes.data[episodeIndex].scheduledReleaseDateTime = updatedEpisode.scheduled_release_dateTime;\n            // Update episodeStatus using episodeStatuses array from the store\n            const status = showStore.episodeStatuses.find(status => status.id === updatedEpisode.episode_status_id);\n            if (status) {\n              showStore.episodes.data[episodeIndex].episodeStatus = status.name;\n            }\n          }\n        }\n    } catch (error) {\n        if (error.response) {\n          notificationStore.setToastNotification(error.response.data, 'error')\n          showStore.errorMessage = error.response.data.error\n        } else {\n            // console.error(error);\n        }\n    }\n    // return response\n    document.getElementById(dialogId).close()\n    router.reload()\n}\n\nconst closeModals = () => {\n    document.getElementById(dialogId).close()\n    document.getElementById('confirmPublishModal.'+props.episodeId).close()\n    document.getElementById('adminChangeStatusModal.'+props.episodeId).close()\n    router.reload()\n}\n\nconst episodeStatusClass = computed(() => ({\n    'btn m-1 w-fit font-semibold text-xl text-orange-400': props.episodeStatusId===1,\n    'btn m-1 w-fit text-xl text-green-400': props.episodeStatusId===2,\n    'btn m-1 w-fit font-semibold text-xl text-green-600': props.episodeStatusId===3,\n    'btn m-1 w-fit font-bold text-xl text-green-600': props.episodeStatusId===4,\n    'btn m-1 w-fit font-semibold text-xl text-purple-700': props.episodeStatusId===5,\n    'btn m-1 w-fit font-italic text-xl text-pink-500': props.episodeStatusId===6,\n    'btn m-1 w-fit font-bold text-xl light:text-black dark:text-white': props.episodeStatusId===7,\n    'btn m-1 w-fit font-medium text-xl text-gray-500': props.episodeStatusId===8,\n    'btn m-1 w-fit font-semibold font-italic text-xl text-red-700': props.episodeStatusId===9,\n    'btn m-1 w-fit font-bold text-xl text-red-800': props.episodeStatusId===10,\n}))\n\n</script>\n","import script from \"./ManageEpisodeEditNote.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ManageEpisodeEditNote.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n    <form @submit.prevent=\"\">\n      <input\n          class=\"bg-white text-black p-1 w-3/4\"\n          placeholder=\"Write a note...\"\n          type=\"text\"\n          ref=\"episodeNote\"\n          v-model=\"form.note\"\n          @keyup.enter=\"saveNote\"\n          @focusout=\"closeNote\">\n    </form>\n  </div>\n\n</template>\n\n<script setup>\nimport { onMounted, ref } from \"vue\"\nimport note from \"lodash/seq\"\nimport { useShowStore } from \"@/Stores/ShowStore\"\nimport { useForm } from \"@inertiajs/vue3\"\n\nconst showStore = useShowStore()\n\nshowStore.saveNoteProcessing = false\n\nlet props = defineProps({\n  episode: Object,\n});\n\nlet form = useForm({\n  note: '',\n});\nform.note = props.episode.notes;\nconst emit = defineEmits(['saveNoteProcessing'])\nconst episodeNote = ref(null);\n\n// Focus the input element when the component is mounted\nonMounted(() => {\n  episodeNote.value.focus();\n});\n\nfunction closeNote() {\n  if (form.note === props.episode.notes) {\n    showStore.noteEdit = 0;\n  }\n  saveNote()\n}\n\nfunction saveNote() {\n\n  // axios.post('/shows/notes', {\n  //     notes: form.note,\n  //     showId: props.show.id,\n  // })\n  //     teamStore.noteEdit = 0;\n  //     updateNote++;\n  //     props.show.note = 'update';\n\n// Why does this not work? We are not\n// getting a response.\n//\n  showStore.saveNoteProcessing = true;\n  showStore.notes = form.note;\n  emit('saveNoteProcessing');\n  axios.post('/shows/episode/notes', {\n    notes: form.note,\n    episodeId: props.episode.id,\n  }).then(response => {\n    showStore.noteEdit = 0;\n    console.log('note saved');\n    showStore.saveNoteProcessing = false;\n  })\n      .catch(error => {\n        console.log(error);\n      })\n}\n\n</script>\n","<template>\n  <div v-if=\"showStore.episodeIsBeingDeleted !== episode.id\" class=\"bg-gray-50 grid grid-cols-1 md:grid-cols-5 gap-4 p-4 mb-4 rounded-lg shadow\">\n    <div class=\"flex items-center text-sm w-16\">\n      <div v-if=\"!episode.episodeNumber\">{{ episode.id }}</div>\n      <div v-else>{{ episode.episodeNumber }}</div>\n    </div>\n    <div @click=\"router.visit(`/shows/${showSlug}/episode/${episode.slug}/manage`)\" class=\"hover:cursor-pointer flex items-center space-x-2\">\n      <SingleImage :image=\"episode.image\" :alt=\"episode.name\" class=\"rounded-xl min-w-16 w-16 h-16 object-cover\" />\n      <span class=\"hover:text-blue-600 font-semibold dark:text-blue-400 dark:hover:text-blue-200\">\n        {{ episode.name }}\n      </span>\n    </div>\n    <div class=\"light:text-gray-600 dark:text-gray-100 text-sm flex justify-center items-center\">\n      <span v-if=\"!episode.notes\" v-show=\"showStore.noteEdit !== episode.id\" class=\"italic\" @click=\"editNote\">Click here to add/edit a note.</span>\n      <span v-if=\"episode.notes\" v-show=\"showStore.noteEdit !== episode.id\" :key=\"componentKey\" @click=\"editNote\">{{ episode.notes }}</span>\n      <div v-if=\"showStore.noteEdit === episode.id\">\n        <EpisodeNoteEdit :episode=\"episode\" @saveNoteProcessing=\"reloadNote\" />\n        <div v-if=\"showStore.saveNoteProcessing\">Saving...</div>\n      </div>\n    </div>\n    <div class=\"text-right\">\n      <div class=\"dropdown dropdown-left\">\n        <ManageShowEpisodeStatuses\n            :episodeStatus=\"episode.episodeStatus\"\n            :episodeStatusId=\"episode.episodeStatusId\"\n            :episodeStatuses=\"episodeStatuses\"\n            :episodeId=\"episode.id\"\n            :episodeUlid=\"episode.ulid\"\n            :episodeName=\"episode.name\"\n            :episodeSlug=\"episode.slug\"\n            :showSlug=\"showSlug\"\n            :showName=\"showName\"\n            :scheduledDateTime=\"episode.scheduledReleaseDateTime\"\n        />\n      </div>\n      <div v-if=\"episode.episodeStatusId === 6\">\n        Scheduled for: <br />\n        {{ scheduledReleaseDateTime }}\n      </div>\n      <div v-if=\"episode.episodeStatusId === 7\">\n        Released on: <br/>\n        {{ releaseDateTime }}\n      </div>\n    </div>\n    <div class=\"flex flex-row justify-end items-center\">\n      <button\n          v-if=\"teamStore.can.editShow\"\n          @click=\"appSettingStore.btnRedirect(`/shows/${showSlug}/episode/${episode.slug}/edit`)\"\n          class=\"px-2 py-2 text-white font-semibold bg-blue-500 hover:bg-blue-600 rounded-lg mr-2 w-16 h-10\"\n      >\n        Edit\n      </button>\n      <button\n          v-if=\"teamStore.can.manageShow && !episode.isPublished\"\n          @click=\"deleteShowEpisode\"\n          class=\"px-2 py-2 text-white font-semibold bg-red-500 hover:bg-red-600 rounded-lg w-10 h-10\"\n      >\n        <font-awesome-icon icon=\"fa-trash-can\" />\n      </button>\n    </div>\n  </div>\n  <div v-else class=\"w-full text-center p-4\">\n    <span class=\"loading loading-infinity loading-lg\"></span>\n    <span class=\"ml-3\">The episode is being deleted...</span>\n  </div>\n</template>\n\n<script setup>\nimport { router } from '@inertiajs/vue3';\nimport { useForm } from \"@inertiajs/vue3\";\nimport { ref } from \"vue\";\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\";\nimport { useTeamStore } from \"@/Stores/TeamStore\";\nimport { useShowStore } from \"@/Stores/ShowStore\";\nimport { useUserStore } from \"@/Stores/UserStore\";\nimport { FontAwesomeIcon } from \"@fortawesome/vue-fontawesome\";\nimport ManageShowEpisodeStatuses from \"@/Components/Pages/Shows/Elements/ManageShowEpisodesStatuses\";\nimport EpisodeNoteEdit from \"@/Components/Pages/Shows/Elements/ManageEpisodeEditNote\";\nimport SingleImage from '@/Components/Global/Multimedia/SingleImage.vue';\n\nconst appSettingStore = useAppSettingStore();\nconst teamStore = useTeamStore();\nconst showStore = useShowStore();\nconst userStore = useUserStore();\n\nconst props = defineProps({\n  episode: Object,\n  episodeStatuses: Object,\n  showSlug: String,\n  showName: String,\n});\n\nconst showEpisodeStatuses = ref(false);\nconst releaseDateTime = userStore.formatDateInUserTimezone(props.episode.releaseDateTime, 'ddd DD MMM YYYY');\nconst scheduledReleaseDateTime = userStore.formatDateInUserTimezone(props.episode.scheduledReleaseDateTime, 'ddd DD MMM YYYY, hh:mm A' + ' ' + userStore.timezoneAbbreviation);\n\nshowStore.noteEdit = 0;\nconst componentKey = ref(0);\n\nfunction reloadNote() {\n  props.episode.notes = showStore.notes;\n  componentKey.value += 1;\n}\n\nlet form = useForm({\n  note: '',\n});\n\nfunction editNote() {\n  showStore.noteEdit = props.episode.id;\n}\n\nfunction openEpisodeStatuses() {\n  document.getElementById('episodeStatuses').showModal();\n}\n\nconst deleteShowEpisode = async () => {\n  const confirmation = confirm('Are you sure you want to delete this show episode?');\n\n  if (confirmation) {\n    try {\n      showStore.episodeIsBeingDeleted = props.episode.id;\n      await axios.delete(`/shows/${props.showSlug}/episode/${props.episode.slug}`)\n          .then((response) => {\n            if (response.status === 200) {\n              showStore.errorMessage = response.data.message;\n              router.reload();\n              showStore.episodeIsBeingDeleted = 0;\n            } else {\n              showStore.errorMessage = response.statusText;\n              console.error('Delete request failed:', response.statusText);\n              showStore.episodeIsBeingDeleted = 0;\n              router.reload();\n            }\n          })\n          .catch((error) => {\n            console.error('Error deleting show episode:', error);\n            showStore.errorMessage = error;\n            showStore.episodeIsBeingDeleted = 0;\n            router.reload();\n          });\n    } catch (error) {\n      console.error('Error deleting show episode:', error);\n    }\n  }\n};\n</script>\n\n<style scoped>\n.grid {\n  display: grid;\n  grid-template-columns: 1fr;\n}\n\n@media (min-width: 768px) {\n  .grid {\n    grid-template-columns: 4rem 1fr 1fr 1fr 1fr;\n  }\n}\n\n.min-w-16 {\n  min-width: 4rem;\n}\n\n.max-w-16 {\n  max-width: 4rem;\n}\n\n.max-h-16 {\n  max-height: 4rem;\n}\n</style>\n","import api from \"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-10.use[1]!../../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-10.use[2]!../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./ManageShowEpisode.vue?vue&type=style&index=0&id=6990a9f5&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./ManageShowEpisode.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ManageShowEpisode.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ManageShowEpisode.vue?vue&type=style&index=0&id=6990a9f5&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-6990a9f5\"]])\n\nexport default __exports__","import script from \"./ManageShowEpisodesList.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ManageShowEpisodesList.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n    <button\n        v-if=\"teamStore.can.createEpisode\"\n        @click=\"appSettingStore.btnRedirect(`/showEpisodes/${showStore.show.slug}/episode/create`)\"\n        class=\"ml-6 my-4 px-4 py-2 text-white font-semibold bg-green-500 hover:bg-green-600 rounded-lg disabled:bg-gray-400\"\n    >\n      Create Episode\n    </button>\n  </div>\n  <div class=\"overflow-x-auto\">\n    <div class=\"min-w-full divide-y divide-gray-200 grid grid-cols-1 md:grid-cols-5\">\n      <div class=\"font-medium p-4 text-left w-16\">Ep.#</div>\n      <div class=\"font-medium p-4 text-left\"></div>\n      <div class=\"font-medium p-4 text-center\"></div>\n      <div class=\"font-medium p-4 text-right\"></div>\n      <div class=\"font-medium p-4 text-right\"></div>\n    </div>\n    <div class=\"divide-y divide-gray-200\">\n      <ManageShowEpisode\n          v-for=\"episode in showStore.episodes.data\"\n          :key=\"episode.id\"\n          :episode=\"episode\"\n          :showSlug=\"showStore.show.slug\"\n          :showName=\"showStore.show.name\"\n          :episodeStatuses=\"showStore.episodeStatuses\"\n      />\n    </div>\n  </div>\n  <!-- Paginator -->\n  <Pagination :data=\"showStore.episodes\" />\n</template>\n\n<script setup>\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\";\nimport { useTeamStore } from \"@/Stores/TeamStore\";\nimport { useShowStore } from \"@/Stores/ShowStore\";\nimport ManageShowEpisode from \"@/Components/Pages/Shows/Elements/ManageShowEpisode\";\nimport Pagination from \"@/Components/Global/Paginators/Pagination\";\n\nconst appSettingStore = useAppSettingStore();\nconst teamStore = useTeamStore();\nconst showStore = useShowStore();\n</script>\n","<template>\n\n    <table class=\"min-w-full divide-y divide-gray-200\">\n        <thead class=\"divide-y divide-gray-200\">\n        <!--                                <tr v-for=\"episode in episodes.data\" :key=\"episode.id\">-->\n        <tr>\n            <td class=\"px-6 py-4 whitespace-nowrap\">\n                <div class=\"flex items-center\">\n                    <div>\n                        <div class=\"text-sm font-medium pl-14\">\n                            <!--                                                    <Link :href=\"`/admin/users/${episode.id}`\" class=\"text-indigo-600 hover:text-indigo-900\">{{ episode.name }}</Link>-->\n                            Name\n                        </div>\n                    </div>\n                </div>\n            </td>\n\n            <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n                Role\n            </td>\n\n            <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n                Completed Assignments\n            </td>\n\n            <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n                Total Credits\n            </td>\n\n            <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-right\">\n                Status\n            </td>\n        </tr>\n        </thead>\n        <tbody class=\"bg-white divide-y divide-gray-200\">\n        <!--  INSERT CREDITS HERE  -->\n        </tbody>\n\n    </table>\n\n</template>\n\n<script setup>\n\n\n</script>\n","import { render } from \"./ManageShowCreditsList.vue?vue&type=template&id=65646f00\"\nconst script = {}\n\nimport exportComponent from \"../../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <thead class=\"divide-y divide-gray-200\">\n  <!--                                <tr v-for=\"episode in episodes.data\" :key=\"episode.id\">-->\n  <tr>\n    <td class=\"px-6 py-4 whitespace-nowrap\">\n      <div class=\"flex items-center\">\n        <div>\n          <div class=\"text-sm font-semibold pl-14\">\n            <!--                                                    <Link :href=\"`/admin/users/${episode.id}`\" class=\"text-indigo-600 hover:text-indigo-900\">{{ episode.name }}</Link>-->\n            Date\n          </div>\n        </div>\n      </div>\n    </td>\n\n    <td class=\"px-6 py-4 whitespace-nowrap text-sm font-semibold\">\n      Start Time\n    </td>\n\n    <td class=\"px-6 py-4 whitespace-nowrap text-sm font-semibold\">\n      End Time\n    </td>\n\n    <td class=\"px-6 py-4 whitespace-nowrap text-sm font-semibold\">\n      Duration\n    </td>\n\n    <td class=\"px-6 py-4 whitespace-nowrap text-sm font-semibold text-right\">\n      Expires in\n    </td>\n\n    <td class=\"px-6 py-4 whitespace-nowrap text-sm font-semibold text-right\">\n\n    </td>\n  </tr>\n  </thead>\n</template>\n<script setup>\n</script>","import { render } from \"./RecordingsListHeader.vue?vue&type=template&id=33b556a6\"\nconst script = {}\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <tbody class=\"bg-white divide-y divide-gray-200\">\n  <tr v-for=\"recording in recordings\" :key=\"recording.id\"\n      @mouseover=\"state.hoveredRow = recording.id\"\n      @mouseleave=\"state.hoveredRow = null\"\n      @click=\"selectRecording(recording)\"\n      :class=\"rowClass(recording.id)\">\n\n    <td class=\"px-6 py-4 whitespace-nowrap\">\n      <div>{{ recording.start_date_local }}</div>\n      <div v-if=\"recording.comment\" class=\"text-xs uppercase text-orange-700 font-semibold break-words\">\n        <span :class=\"{ 'text-indigo-600': recording.comment !== 'automated recording' }\">{{ recording.comment }}</span>\n      </div>\n    </td>\n    <td class=\"px-6 py-4 whitespace-nowrap\">\n      {{ recording.start_time_local }}\n    </td>\n    <td class=\"px-6 py-4 whitespace-nowrap\">\n      {{ recording.end_time_local }}\n    </td>\n    <td class=\"px-6 py-4 whitespace-nowrap\">\n      {{ formatDuration(recording.total_milliseconds_recorded) }}\n    </td>\n    <td class=\"px-6 py-4 whitespace-nowrap\"></td>\n    <td class=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium space-x-1\">\n      <button @click.stop=\"shareRecording(recording.share_url)\"\n              class=\"btn btn-xs bg-orange-200 hover:bg-orange-300 text-black\">\n        <font-awesome-icon icon=\"fa-share\" class=\"\"/> Share\n      </button>\n      <button @click.stop=\"confirmAddToEpisode\"\n              class=\"btn btn-xs\">Add To Episode</button>\n      <button @click.stop=\"confirmDownload(recording)\"\n              class=\"btn btn-xs btn-info\">Download</button>\n      <div @click.stop=\"confirmSaveToPremium\" class=\"btn btn-xs\">Save to Premium Storage</div>\n    </td>\n  </tr>\n\n  <transition name=\"fade\">\n    <div v-if=\"showCopyMessage\" class=\"copy-message\">\n      {{ copyMessage }}\n    </div>\n  </transition>\n  </tbody>\n</template>\n\n<script setup>\nimport { computed, reactive, ref } from 'vue'\nimport { useRecordingStore } from '@/Stores/RecordingStore';\nimport { useClipboard } from '@vueuse/core';\n\nconst recordingStore = useRecordingStore();\n\nconst shareClip = useClipboard();\n\nconst showCopyMessage = ref(false);\nconst copyMessage = ref('');\n\nconst recordings = computed(() => recordingStore.formattedRecordings);\nconst state = reactive({\n  hoveredRow: null,\n});\n\nconst selectRecording = (recording) => {\n  recordingStore.setSelectedRecording(recording);\n  document.getElementById('confirmRecordingPlaybackModal').showModal();\n};\n\nconst shareRecording = (shareUrl) => {\n  recordingStore.shareRecording(shareUrl);\n};\n\nconst confirmAddToEpisode = () => {\n  document.getElementById('confirmAddToEpisodeModal').showModal();\n};\n\nconst confirmDownload = (recording) => {\n  recordingStore.setSelectedRecording(recording);\n  document.getElementById('confirmDownloadModal').showModal();\n};\n\nconst confirmSaveToPremium = () => {\n  document.getElementById('confirmSaveToPremiumModal').showModal();\n};\n\nconst rowClass = computed(() => (recordingId) => ({\n  'hover:bg-blue-100 cursor-pointer': state.hoveredRow === recordingId,\n  'bg-green-100': recordingStore.nowPlayingRecordingId === recordingId,\n}));\n\nconst formatDuration = (totalMilliseconds) => {\n  return recordingStore.formatDuration(totalMilliseconds);\n};\n</script>\n\n<style>\n.copy-message {\n  position: fixed;\n  bottom: 20%;\n  left: 50%;\n  transform: translateX(-50%);\n  background-color: rgba(0, 0, 0, 0.75);\n  color: white;\n  padding: 20px;\n  border-radius: 10px;\n  font-size: 1.5rem;\n  z-index: 100;\n  transition: opacity 0.5s ease;\n}\n\n.fade-enter-active, .fade-leave-active {\n  transition: opacity 0.5s ease;\n}\n\n.fade-enter-from, .fade-leave-to {\n  opacity: 0;\n}\n</style>\n","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-10.use[1]!../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-10.use[2]!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./RecordingsListBody.vue?vue&type=style&index=0&id=56bab934&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./RecordingsListBody.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./RecordingsListBody.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./RecordingsListBody.vue?vue&type=style&index=0&id=56bab934&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div v-if=\"totalPages > 1\" class=\"join\">\n    <button\n        v-for=\"page in totalPages\"\n        :key=\"page\"\n        :class=\"['join-item', 'btn', { 'btn-active': currentPage === page }]\"\n        @click=\"goToPage(page)\"\n    >\n      {{ page }}\n    </button>\n  </div>\n</template>\n\n<script setup>\n\nconst props = defineProps({\n  totalPages: {\n    type: Number,\n    required: true,\n  },\n  currentPage: {\n    type: Number,\n    required: true,\n  },\n});\n\nconst emit = defineEmits(['update']);\n\nconst goToPage = (page) => {\n  emit('update', page);\n};\n</script>\n\n<style scoped>\n.join {\n  display: flex;\n  justify-content: center;\n  gap: 4px;\n}\n.btn-active {\n  background-color: #ff7f50; /* Example active color */\n}\n</style>\n","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-10.use[1]!../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-10.use[2]!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./RecordingsPaginator.vue?vue&type=style&index=0&id=fd48cf10&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./RecordingsPaginator.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./RecordingsPaginator.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./RecordingsPaginator.vue?vue&type=style&index=0&id=fd48cf10&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-fd48cf10\"]])\n\nexport default __exports__","import script from \"./ShowRecordingsModals.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ShowRecordingsModals.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n    <dialog id=\"confirmRecordingPlaybackModal\" class=\"modal\">\n      <div class=\"modal-box w-full items-center text-center text-black bg-white dark:bg-gray-800 dark:text-white\">\n        <form method=\"dialog\">\n          <button class=\"btn btn-sm btn-circle btn-ghost absolute right-2 top-2\">✕</button>\n        </form>\n        <h3 class=\"font-bold text-lg\"></h3>\n        <p class=\"py-4 text-xl mt-4\">Would you like to play the recording<br/> from\n          <span class=\"font-semibold\">{{ selectedRecording?.start_date_local }}</span>?</p>\n        <p class=\"my-2 text-left\" v-if=\"selectedRecording && selectedRecording.path\"><span\n            class=\"font-semibold\">Path: </span>{{ selectedRecording.path }}</p>\n        <p class=\"my-2 text-left\" v-if=\"selectedRecording && selectedRecording.comment\">\n          <span class=\"font-semibold\">Comment: </span>\n          <span>{{ selectedRecording.comment }}</span>\n        </p>\n        <button class=\"mt-4 btn\" @click=\"play\">Play</button>\n      </div>\n\n      <form method=\"dialog\" class=\"modal-backdrop\">\n        <button>close</button>\n      </form>\n    </dialog>\n\n    <dialog id=\"confirmAddToEpisodeModal\" class=\"modal\">\n      <div class=\"modal-box text-center text-black bg-white dark:bg-gray-800 dark:text-white\">\n        <form method=\"dialog\">\n          <button class=\"btn btn-sm btn-circle btn-ghost absolute right-2 top-2\">✕</button>\n        </form>\n        <h3 class=\"font-bold text-lg pt-8\">Add Recording To Episode</h3>\n        <p class=\"py-4\">We are working on this feature!</p>\n        <div class=\"modal-action\">\n          <form method=\"dialog\">\n            <button class=\"btn\">Okay</button>\n          </form>\n        </div>\n      </div>\n    </dialog>\n\n    <dialog id=\"confirmDownloadModal\" class=\"modal\">\n      <div class=\"modal-box text-center text-black bg-white dark:bg-gray-800 dark:text-white\">\n        <form method=\"dialog\">\n          <button class=\"btn btn-sm btn-circle btn-ghost absolute right-2 top-2\">✕</button>\n        </form>\n        <h3 class=\"font-bold text-lg pt-8\">Confirm Download</h3>\n        <p class=\"py-4\">Are you sure you want to download the recording?</p>\n        <div class=\"modal-action\">\n          <form method=\"dialog\" class=\"w-full flex justify-center\">\n            <button @click=\"beginDownload\" class=\"btn btn-info w-20\">Yes</button>\n          </form>\n        </div>\n      </div>\n    </dialog>\n\n    <dialog id=\"downloadStarted\" class=\"modal\">\n      <div class=\"modal-box text-center text-black bg-white dark:bg-gray-800 dark:text-white\">\n        <form method=\"dialog\">\n          <button class=\"btn btn-sm btn-circle btn-ghost absolute right-2 top-2\">✕</button>\n        </form>\n        <h3 class=\"font-bold text-lg pt-8\">Download Started</h3>\n        <p class=\"py-4\">Your recording is now downloading!</p>\n        <div class=\"modal-action\">\n          <form method=\"dialog\" class=\"w-full flex justify-center\">\n            <button class=\"btn\">Okay</button>\n          </form>\n        </div>\n      </div>\n    </dialog>\n\n    <dialog id=\"confirmSaveToPremiumModal\" class=\"modal\">\n      <div class=\"modal-box text-center text-black bg-white dark:bg-gray-800 dark:text-white\">\n        <form method=\"dialog\">\n          <button class=\"btn btn-sm btn-circle btn-ghost absolute right-2 top-2\">✕</button>\n        </form>\n        <h3 class=\"font-bold text-lg pt-8\">Save To Premium Storage</h3>\n        <p class=\"py-4\">We are working on this feature!</p>\n        <div class=\"modal-action\">\n          <form method=\"dialog\">\n            <button class=\"btn\">Okay</button>\n          </form>\n        </div>\n      </div>\n    </dialog>\n  </div>\n</template>\n\n<script setup>\nimport { computed } from 'vue';\nimport { useRecordingStore } from '@/Stores/RecordingStore';\n\nconst recordingStore = useRecordingStore();\n\nconst selectedRecording = computed(() => recordingStore.selectedRecording);\n\nconst beginDownload = () => {\n  recordingStore.downloadRecording();\n};\n\nconst play = () => {\n  recordingStore.openVideo();\n};\n</script>\n","import script from \"./ShowRecordingsList.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ShowRecordingsList.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n    <div class=\"w-full bg-yellow-200 px-2 py-1\">\n      <span class=\"font-semibold uppercase\">⚠️ NOTICE: </span> The first time you playback a recording it will take a long time to load. This only happens the first time!\n    </div>\n    <table class=\"min-w-full divide-y divide-gray-200\">\n      <RecordingsListHeader />\n      <RecordingsListBody @open-modal=\"openModal\" />\n    </table>\n    <div class=\"flex flex-row flex-wrap w-full justify-center\">\n      <RecordingsPaginator\n          :totalPages=\"pagination.lastPage\"\n          :currentPage=\"pagination.currentPage\"\n          @update=\"handlePageChange\"\n      />\n    </div>\n    <div class=\"flex flex-col w-full justify-center mt-2\">\n      <div v-if=\"recordingStore.selectedRecording\">\n        <div class=\"flex\">\n          <span class=\"font-bold w-48\">Path:</span>\n          <span>{{ recordingStore.selectedRecording.path }}</span>\n        </div>\n        <div class=\"flex\">\n          <span class=\"font-bold w-48\">Share URL:</span>\n          <span>{{ recordingStore.selectedRecording.share_url }}</span>\n        </div>\n        <div class=\"flex\">\n          <span class=\"font-bold w-48\">Download URL:</span>\n          <span>{{ recordingStore.selectedRecording.download_url }}</span>\n        </div>\n        <div class=\"flex\">\n          <span class=\"font-bold w-48\">Playback Stream Name:</span>\n          <span>{{ recordingStore.selectedRecording.playback_stream_name }}</span>\n        </div>\n        <div class=\"flex\">\n          <span class=\"font-bold w-48\">Input:</span>\n          <input class=\"w-full\"></input>\n        </div>\n      </div>\n      <div v-else>\n        <span>No recording selected.</span>\n      </div>\n    </div>\n    <ShowRecordingsModals\n        :selectedRecording=\"selectedRecording\"\n        :nowPlayingRecordingId=\"nowPlayingRecordingId\"\n        @beginDownload=\"beginDownload\"\n        @play=\"play\"\n    />\n  </div>\n</template>\n\n<script setup>\nimport { computed, onMounted } from 'vue';\nimport { useRecordingStore } from '@/Stores/RecordingStore';\nimport RecordingsListHeader from '@/Components/Pages/ShowRecordings/RecordingsListHeader.vue';\nimport RecordingsListBody from '@/Components/Pages/ShowRecordings/RecordingsListBody.vue';\nimport RecordingsPaginator from '@/Components/Pages/ShowRecordings/RecordingsPaginator.vue';\nimport ShowRecordingsModals from '@/Components/Pages/ShowRecordings/ShowRecordingsModals.vue';\n\nconst recordingStore = useRecordingStore();\n\nconst handlePageChange = (page) => {\n  recordingStore.fetchRecordings(page);\n};\n\nconst pagination = computed(() => recordingStore.pagination);\n\nconst selectedRecording = computed(() => recordingStore.selectedRecording);\nconst nowPlayingRecordingId = computed(() => recordingStore.nowPlayingRecordingId);\n\nconst openModal = (modalId) => {\n  document.getElementById(modalId).showModal();\n};\n\nconst beginDownload = () => {\n  recordingStore.downloadRecording();\n  document.getElementById('downloadStarted').showModal();\n};\n\nconst play = () => {\n  recordingStore.openVideo();\n};\n\nonMounted(() => {\n  recordingStore.fetchRecordings();\n});\n</script>\n","<template>\n\n  <Head :title=\"`Manage Show: ${props.show.name}`\"/>\n\n  <div id=\"topDiv\" class=\"place-self-center flex flex-col\">\n    <div class=\"min-h-screen bg-white text-black dark:bg-gray-900 dark:text-gray-50 rounded px-5\">\n\n      <Message v-if=\"appSettingStore.showFlashMessage\" :flash=\"$page.props.flash\"/>\n      <div class=\"alert alert-error mt-4 mx-3\"\n           v-if=\"showStore.errorMessage\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n        </svg>\n        <span>{{ showStore.errorMessage }}</span>\n        <button class=\"text-xs ml-12\" @click=\"showStore.errorMessage = ''\"> Close</button>\n      </div>\n\n      <header class=\"bg-gradient-to-r from-blue-100 via-white to-transparent p-4 text-black font-bold rounded-lg\">\n        <!--            <header class=\"wave-background p-4 text-black font-bold rounded-lg\">-->\n\n        <div class=\"flex justify-between mb-3 pt-6\">\n          <div class=\"font-bold mb-4 text-black align-bottom text-lg\">MANAGE SHOW</div>\n\n          <div class=\"flex flex-col\">\n            <div class=\"flex flex-row w-full justify-end mb-2\">\n              <button\n                  @click=\"appSettingStore.btnRedirect(`/teams/${team.slug}/manage`)\"\n                  class=\"px-4 py-2 mr-2 mb-2 h-fit text-white font-semibold bg-orange-500 hover:bg-orange-600 rounded-lg\"\n              >Back to<br/>\n                Manage Team\n              </button>\n            </div>\n            <div class=\"flex flex-wrap-reverse justify-end\">\n              <button\n                  v-if=\"can.goLive\"\n                  @click=\"goLive\"\n                  class=\"px-4 py-2 mr-2 mb-2 h-fit text-white font-semibold bg-red-500 hover:bg-red-600 rounded-lg\"\n              >Go Live\n              </button>\n              <button\n                  v-if=\"teamStore.can.editShow\"\n                  @click=\"appSettingStore.btnRedirect(`/shows/${show.slug}/edit`)\"\n                  class=\"px-4 py-2 mb-2 h-fit text-white font-semibold bg-blue-500 hover:bg-blue-600 rounded-lg\"\n              >Edit Show\n              </button>\n\n              <DashboardButton class=\"mb-2\"/>\n\n            </div>\n          </div>\n\n        </div>\n\n        <ShowManageHeader\n            :show=\"props.show\"\n            :team=\"props.team\"\n            :can=\"can\"\n        />\n\n        <div class=\"flex justify-end mt-6\">\n\n\n        </div>\n      </header>\n\n      <div class=\"my-6 text-gray-100\">\n        <span class=\"uppercase text-xs font-semibold text-black\">SHOW NOTES: </span>\n        <span class=\"text-black light:text-black dark:text-white\">{{ props.show.notes }}</span>\n      </div>\n\n\n      <div class=\"flex flex-col\">\n        <div class=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\n          <div class=\"py-2 align-middle inline-block w-full sm:px-6 lg:px-8 space-y-4\">\n\n            <div @click=\"toggleComponent('showEpisodes')\"\n                 :class=\"{'rounded-t-lg': showStore.openComponent === 'showEpisodes', 'rounded-lg': showStore.openComponent !== 'showEpisodes'}\"\n                 class=\"accordion-header p-2 font-bold transition duration-300 ease-in-out transform focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 overflow-hidden shadow-lg bg-blue-100 hover:bg-blue-300 dark:hover:bg-blue-900 text-black hover:text-blue-900 dark:text-blue-100 dark:hover:text-white\">\n              <font-awesome-icon icon=\"fa-play-circle\" class=\"\"/>\n              Episodes\n            </div>\n            <div v-if=\"showStore.openComponent === 'showEpisodes'\">\n              <div class=\"mt-4 mb-12 pb-6 shadow overflow-auto border-b border-gray-200 sm:rounded-lg\">\n                <ManageShowEpisodesList />\n              </div>\n            </div>\n\n            <div @click=\"toggleComponent('showCredits')\"\n                 :class=\"{'rounded-t-lg': showStore.openComponent === 'showCredits', 'rounded-lg': showStore.openComponent !== 'showCredits'}\"\n                 class=\"accordion-header p-2 font-bold transition duration-300 ease-in-out transform focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 overflow-auto shadow-lg bg-blue-100 hover:bg-blue-300 dark:hover:bg-blue-900 text-black hover:text-blue-900 dark:text-blue-100 dark:hover:text-white\">\n              <font-awesome-icon icon=\"fa-clipboard-list\" class=\"\"/>\n              Credits and Assignments\n            </div>\n            <div v-if=\"showStore.openComponent === 'showCredits'\">\n              <div class=\"mt-4 mb-12 pb-6 shadow overflow-auto border-b border-gray-200 sm:rounded-lg\">\n                <div class=\"border-1 border-t mb-3 bg-blue-100 py-1 px-2 text-xs font-semibold text-red-800\">\n                  In development. Not currently working.\n                </div>\n                <Link\n                    :href=\"`#`\"\n                    v-if=\"teamStore.can.createAssignment\">\n                  <button\n                      class=\"bg-green-500 hover:bg-green-600 text-white ml-2 my-2 px-4 py-2 rounded disabled:bg-gray-400 h-max w-max\"\n                      disabled\n                  >Create Assignment\n                  </button>\n                </Link>\n\n                <ShowCreditsList/>\n              </div>\n            </div>\n\n            <div @click=\"toggleComponent('showRecordings')\"\n                 :class=\"{'rounded-t-lg': showStore.openComponent === 'showRecordings', 'rounded-lg': showStore.openComponent !== 'showRecordings'}\"\n                 class=\"accordion-header p-2 font-bold transition duration-300 ease-in-out transform focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 overflow-auto shadow-lg bg-blue-100 hover:bg-blue-300 dark:hover:bg-blue-900 text-black hover:text-blue-900 dark:text-blue-100 dark:hover:text-white\">\n              <font-awesome-icon icon=\"fa-circle\" class=\"text-red-700\"/>\n              Recordings\n            </div>\n            <div v-if=\"showStore.openComponent === 'showRecordings'\">\n              <div class=\"mt-4 mb-12 pb-6 shadow overflow-auto border-b border-gray-200 sm:rounded-lg\">\n                <ShowRecordingsList :showRecordings=\"show.recordings\" :showName=\"show.name\" :showSlug=\"show.slug\"\n                                :showImage=\"show.image\"/>\n\n                <!--            </div>-->\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <ShowFooter :team=\"team\" :show=\"show\"/>\n    </div>\n  </div>\n\n</template>\n\n<script setup>\nimport { onBeforeUnmount, onMounted, onUnmounted, ref } from 'vue'\nimport { usePage } from '@inertiajs/vue3'\nimport { usePageSetup } from '@/Utilities/PageSetup'\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\nimport { useShowStore } from '@/Stores/ShowStore'\nimport { useTeamStore } from '@/Stores/TeamStore'\nimport { useGoLiveStore } from '@/Stores/GoLiveStore'\nimport ShowManageHeader from '@/Components/Pages/Shows/Layout/ShowManageHeader'\nimport ShowFooter from '@/Components/Pages/Shows/Layout/ShowFooter'\nimport ManageShowEpisodesList from '@/Components/Pages/Shows/Elements/ManageShowEpisodesList'\nimport ShowCreditsList from '@/Components/Pages/Shows/Elements/ManageShowCreditsList'\nimport Message from '@/Components/Global/Modals/Messages'\nimport DashboardButton from '@/Components/Global/Buttons/DashboardButton.vue'\nimport ShowRecordingsList from '@/Components/Pages/ShowRecordings/ShowRecordingsList.vue'\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome'\n\nusePageSetup('shows/slug/manage')\n\nconst appSettingStore = useAppSettingStore()\nconst showStore = useShowStore()\nconst teamStore = useTeamStore()\nconst goLiveStore = useGoLiveStore()\n\nconst toggleComponent = (componentName) => {\n  showStore.openComponent = showStore.openComponent === componentName ? null : componentName\n}\n\nconst page = usePage().props\n\nconst props = defineProps({\n  show: Object,\n  team: Object,\n  episodes: Object,\n  episodeStatuses: Object,\n  // filters: Object,\n  can: Object,\n})\n\nteamStore.setActiveTeam(props.team)\nteamStore.setActiveShow(props.show)\nteamStore.can = props.can\n\nconst currentUsers = ref([]);\n\nconst goLive = () => {\n  goLiveStore.reset()\n  goLiveStore.preSelectedShowId = props.show.id\n  appSettingStore.btnRedirect(`/golive`)\n}\n\nonMounted(() => {\n  showStore.initializeShow(props.show, props.episodes, props.episodeStatuses)\n  console.log(`Subscribing to channel creator.show.${props.show.id}`)\n\n  Echo.join(`creator.show.${props.show.id}`)\n      .here(async (users) => {\n        console.log('Users currently in the channel:', users)\n        currentUsers.value = users;\n        // Elect the leader (first user in the list)\n        if (users.length > 0) {\n          const leader = users[0];\n          showStore.setLeader(leader);\n          console.log(`Leader elected: ${leader.name}`);\n        }\n\n        console.log(showStore.isUpdatingSchedule, showStore.updatedBy)\n        // Check if the user is the only one in the channel\n        if (currentUsers.value.length === 1 && showStore.isUpdatingSchedule && showStore.updatedBy) {\n          try {\n            // Reset the isUpdatingSchedule and updatedBy fields\n            await axios.put(`/api/shows/${props.show.slug}/meta`, {\n              isUpdatingSchedule: false,\n              updatedBy: showStore.updatedBy,\n            });\n            console.log('isUpdatingSchedule and updatedBy fields reset');\n\n          } catch (error) {\n            console.error('Error updating meta:', error);\n          }\n        }\n      })\n      .joining((user) => {\n        console.log('User joined the channel:', user)\n        currentUsers.value.push(user);\n      })\n      .leaving((user) => {\n        console.log('User left the channel:', user)\n        currentUsers.value = currentUsers.value.filter(u => u.id !== user.id);\n\n        if (user.id === showStore.leader.id) {\n          console.log('Leader left, electing new leader');\n          // Elect a new leader if the current leader leaves\n          if (currentUsers.value.length > 0) {\n            const newLeader = currentUsers.value[0];\n            showStore.setLeader(newLeader);\n            console.log(`New leader elected: ${newLeader.name}`);\n          }\n        }\n        // If current user is still the leader, run the command\n        if (showStore.leader.id === page.user.id) {\n          axios.post(`/api/${props.show.slug}/user-left-channel`, {\n            user: user,\n            channel: `creator.show.${props.show.id}`,\n            showSlug: props.show.slug, // Pass the show slug\n          }).then(response => {\n            console.log('Successfully posted to user-left-channel:', response.data);\n          }).catch(error => {\n            console.error('Error posting to user-left-channel:', error);\n          });\n        }\n      })\n      .listen('.CreatorContentStatusUpdated', (event) => {\n        console.log('CreatorContentStatusUpdated event received:', event)\n        showStore.$patch({\n          isSaving: event.meta.isSaving,\n          isUpdatingSchedule: event.meta.isUpdatingSchedule,\n          updatedBy: event.meta.updatedBy,\n        })\n      })\n      .listen('.ShowScheduleDetailsUpdated', (event) => {\n        console.log('ShowScheduleDetailsUpdated event received:', event);\n        // Assuming `start_DateTime` needs to be transformed into `startTime`\n        const formattedStartTime = event.scheduleDetails.start_DateTime\n        showStore.scheduleDetails = {\n          ...event.scheduleDetails,\n          startTime: formattedStartTime\n        };\n        console.log('Updated scheduleDetails.startTime:', showStore.scheduleDetails.startTime);\n      })\n      .error((error) => {\n        console.error('Error subscribing to channel:', error);\n      });\n\n})\n\nonBeforeUnmount(() => {\n  // Echo.leave(`creator.show.${props.show.id}`);\n  Echo.leave(`creator.show.${props.show.id}`)\n\n  showStore.setUpdatingStatus(false, page.user.name, props.show.slug)\n\n  console.log(`Unsubscribed from channel creator.show.${props.show.id}`)\n  showStore.reset()\n})\n\n</script>\n\n\n<style scoped>\n@keyframes wave-bg {\n  0%, 100% {\n    background-color: #dbeafe; /* Original color */\n  }\n  50% {\n    background-color: #bfdbfe; /* Slightly lighter color */\n  }\n}\n\n.wave-background {\n  animation: wave-bg 5s infinite ease-in-out;\n  background-color: #dbeafe; /* Starting color */\n}\n\n\n</style>\n","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-10.use[1]!../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-10.use[2]!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./Manage.vue?vue&type=style&index=0&id=699d87b0&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./Manage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Manage.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Manage.vue?vue&type=style&index=0&id=699d87b0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-699d87b0\"]])\n\nexport default __exports__"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","initialState","displayEpisodeGoLiveComponent","isEpisode","episode","preSelectedShowId","selectedShowId","shows","streamKey","wildcardId","isLive","isRecording","streamInfo","rtmpUri","destinations","isLoadingDestinations","loadingDestinationId","processingRecordingChange","isProcessingDisableAllAutoPushes","playerIsReloading","pushDestinationFormSubmitProcessing","mistServerUri","previousStreamStatus","useGoLiveStore","defineStore","state","actions","assign","this","fetchShows","_this","_callee","response","_context","axios","get","data","t0","generateStreamKey","_this2","_callee2","_context2","post","concat","stream_key","selectedShow","mist_stream_wildcard","mist_stream_wildcard_id","updateAndGetStreamKey","_show$mist_stream_wil","_this3","show","find","id","setSelectedShowId","showId","updateSelectedShow","_this4","goLive","stopLive","startRecording","_this5","_callee3","notificationStore","showSlug","_response$data","message","status","_context3","useNotificationStore","slug","stream_name","setToastNotification","stopRecording","_this6","_callee4","_response$data2","_context4","fetchStreamInfo","_this7","_callee5","_context5","fetchMistServerUri","streamName","success","fetchRtmpUri","_this8","_callee6","_context6","fetch","ok","text","clearStreamInfo","toggleDisplayEpisodeGoLiveComponent","_this$episode","show_id","updateEpisode","_this9","_callee7","videoAuxPlayerStore","uriResponse","_context7","useVideoAuxPlayerStore","setMistServerUri","reloadPlayer","_this10","_callee8","mistStream","_context8","loadMistStreamVideo","fetchPushDestinations","_this11","_callee9","_response$data3","_context9","backgroundFetch","recording","console","log","backgroundFetchPushDestinations","_this12","_callee10","_context10","deleteDestination","destinationId","_this13","_callee11","_context11","confirm","filter","destination","setGeneralServiceNotification","startPush","fullPushUri","_this14","_callee12","_response$data4","index","_context12","destination_id","full_push_uri","findIndex","push_is_started","stopPush","_this15","_callee13","_response$data5","_context13","enableAutoPush","_this16","_callee14","_response$data6","_context14","has_auto_push","disableAutoPush","_this17","_callee15","_response$data7","_context15","disableAllAutoPushes","_this18","_callee16","_response$data8","_context16","getters","_show$mist_stream_wil2","_show$mist_stream_wil3","_show$mist_stream_wil4","is_recording","fullRtmpUri","fullUrl","activeDestinations","sourceName","_state$selectedShow","_state$episode","streamOffline","_state$streamInfo$err","_state$streamInfo","dayjs","utc","timezone","recordings","pagination","currentPage","lastPage","total","selectedRecording","nowPlayingRecording","nowPlayingRecordingId","isLoading","showCopyMessage","copyMessage","useRecordingStore","fetchRecordings","_arguments","_showStore$show","page","showStore","useShowStore","params","current_page","last_page","formatDateInUserTimezone","date","useUserStore","formatTimeFromDateInUserTimezone","formatDuration","totalMilliseconds","seconds","Math","floor","minutes","hours","paddedHours","toString","padStart","paddedMinutes","paddedSeconds","setSelectedRecording","clearSelectedRecording","openVideo","videoPlayerStore","appSettingStore","nowPlayingStore","source","useVideoPlayerStore","useAppSettingStore","useNowPlayingStore","mediaType","sourceType","loadNewVideo","toggleOttInfo","setActiveMedia","primaryName","secondaryName","start_time","description","comment","primaryUrl","image","downloadRecording","url","download_url","downloadLink","document","createElement","href","body","appendChild","click","removeChild","shareRecording","shareUrl","navigator","clipboard","writeText","setTimeout","formattedRecordings","userStore","map","_objectSpread","start_date_local","start_dateTime","tz","format","start_time_local","end_time_local","end_dateTime","ownKeys","getOwnPropertySymbols","getOwnPropertyDescriptor","_defineProperty","getOwnPropertyDescriptors","defineProperties","obj","toPrimitive","String","Number","_toPrimitive","convertScheduleToTimezone","scheduleData","item","startTimeInUserTz","formatDateTimeFromUtcToUserTimezone","endTimeInUserTz","getUpcomingContentDates","viewingWindowStart","dates","start","add","toDate","weekOfYear","advancedFormat","isSameOrAfter","isSameOrBefore","getTimeZone","baseTime","currentHalfHour","startOf","minute","fourHoursLater","currentMonth","selectedDay","currentWeekStart","currentWeekEnd","endOf","nextFourHoursOfContent","nextFourHoursOfContentWithPlaceholders","fiveDaySixHourSchedule","schedules","nextPage","hasMore","todaysContent","weeklyContent","dataFetchLog","savingToSchedule","slotIntervalMinutes","mediumScreenSlotHours","smallScreenSlotHours","verySmallScreenSlotHours","timeSlots","timeBanners","startTime","duration","useScheduleStore","resetAll","setSelectedDay","day","fetchWeekDataIfNeeded","setSelectedDayToToday","now","changeDay","days","currentTimeZone","currentTime","newDay","hour","shiftHours","isSame","isElevenPM","subtractMonth","subtract","addMonth","fetchFiveDaySixHourSchedule","userTimezone","fetchTodaysContent","preloadWeeklyContent","currentDate","loadWeekFromDate","fetchSchedules","startDate","endDate","dayStartDate","dayEndDate","fullISOStartDate","fullISOEndDate","newData","toISOString","_toConsumableArray","Set","JSON","stringify","parse","fetchMoreSchedules","lastSchedule","formattedDate","dayDate","fullISODate","updateFetchLogs","weekStart","weekEnd","fetchTime","existingLogIndex","lastFetch","needsDataForWeek","formatISODate","weekStartStr","weekEndStr","some","logWeekStartStr","logWeekEndStr","calculateExtendedEndForUpcomingContent","checkAndFetchForUpcomingContent","upcomingDates","fifteenMinutesAgo","_iterator","_step","_loop","_createForOfIteratorHelper","dateString","content","contentDate","lastFetchedTime","isFresh","fetchDataAndUpdateLog","t1","updateBaseTime","time","setBaseTime","newTime","updateNextFourHours","updateTimeRange","setTimeSlots","prepareShowsForGrid","baseDate","roundedMinutes","second","millisecond","initializeTimeSlots","durationHours","intervalMinutes","slots","slotTime","createTimeSlots","slotHours","isVerySmallScreen","isSmallScreen","totalSlots","Array","isArray","filterShowsForTimeRange","processedShows","calculateGridSlots","showsWithStatusFlags","processShows","_this$updateColumnOcc","updateColumnOccupancy","colOccupancy","maxRowUsed","gridItems","fillGapsAndCreatePlaceholders","combinedShows","sortShowsByPosition","duration_minutes","warn","showStart","showEnd","isInTimeRange","isBefore","isAfter","firstTimeSlot","lastTimeSlot","slotIndex","slot","max","endSlotIndex","span","gridStart","gridSpan","comingUpNextSet","end","nowPlaying","placeholder","gridRow","comingUpNext","cols","fill","row","findAndFillGapsForSingleRow","gapStart","has","createPlaceholder","createBlankSpotPlaceholder","sort","b","priority","preparedTimeBanners","timeZone","todayStart","tomorrowStart","yesterdayStart","flatMap","banner","bannerTodayStart","parseInt","split","bannerTodayEnd","clone","bannerTomorrowStart","bannerTomorrowEnd","bannerYesterdayStart","bannerYesterdayEnd","startSlotIndex","nextFourHoursWithHalfHourIntervals","intervals","current","formatted","dateTimeString","upcomingContent","showsGroupedByStartTime","reduce","acc","itemStart","valueOf","group","selected","unix","nextSixHours","adjustedStart","dateMessage","startDay","startOfDay","isToday","isYesterday","isTomorrow","currentMonthIndex","month","currentMonthName","currentYear","year","today","viewingStart","daysInMonth","startOfCurrentMonth","endOfCurrentMonth","startOfGrid","endOfGrid","team","contributors","members","managers","teamOwner","teamLeader","can","totalSpots","memberSpots","activeShow","activeEpisode","showModal","Boolean","confirmDialog","confirmManagerDialog","selectedManagerName","selectedManagerId","addManager","removeManager","deleteMemberName","deleteMemberId","noteEdit","note","saveNoteProcessing","goLiveDisplay","openComponent","nextBroadcastLoaded","scheduleIndexId","broadcastDate","broadcastDetails","zoomLink","category","subCategory","useTeamStore","initializeTeam","nextBroadcast","zoomLinkObj","detail","broadcast","convertUtcToUserTimezone","initializeShows","initializeContributors","setCan","setActiveTeam","setActiveShow","setActiveEpisode","addMember","member","removeMember","memberId","updateCreatorTeams","creatorId","teamId","remove","creator","creators","teams","is_manager","deleteTeamMemberCancel","confirmTeamManagerCancel","deleteTeamMember","payload","user_id","team_id","route","addTeamManager","team_slug","manager","removeTeamManager","toggleGoLiveDisplay","fetchTeamMembers","setCreators","updatePublicMessage","html","public_message","spotsRemaining","membersCount","membersCountDisplay","closest","abs","sortedBroadcasts","diff","localDate","futureBroadcasts","player","eventListenersAttached","videoPlayerLoaded","class","videoContainerClass","videoSourceIdSrc1","videoSourceIdSrc2","videoSourceIdSrc3","videoSourceTypeSrc1","videoSourceTypeSrc2","videoSourceTypeSrc3","firstPlayVideoSourceType","firstPlayVideoSource","videoName","videoSource","videoSourceType","videoPoster","nextSource","previousSource","currentView","currentChannelId","currentChannelName","currentShow","currentShowEpisode","currentVideo","hasVideo","controls","muted","paused","formattedTime","blue","videoIsYoutube","videoUploadComplete","getMistServerUri","setPlayer","playerInstance","initializePlayer","attachEventListeners","nextTick","useAudioStore","ensureAudioContextAndNodesReady","ready","play","on","handleTimeUpdate","handleFullscreenChange","handlePlay","handlePause","handleError","detachEventListeners","stopAudioLevelMonitoring","off","disposePlayer","dispose","prepareForNewVideoSource","resetPlayback","pause","durationInSeconds","part","join","_this$player","isFullscreen","_this$player2","_this$player3","_this$player4","code","makeBlue","toggleMute","unMute","mute","togglePlay","videoJs","videojs","load","loadNewLiveSource","fullSourceUrl","src","back","fullscreen","requestFullscreen","getVideoCurrentTime","videoCurrentTime","getSourceDetails","videoSrc","video_url","cdn_endpoint","cloud_folder","folder","file_name","audioStore","_this$getSourceDetail","deferAudioSetup","playNewVideo","loadNewSourceFromYouTube","useChannelStore","clearChannel","loadNewLiveSourceFromRumble","loadNewSourceFromUrl","loadNewSourceFromMist","loadNewSourceFromFile","filePath","loadExternalSourceVideo","loadPlaylistVideos","stayMuted","shouldUnmute","basePath","loadVideoFromFile","video","setNowPlayingInfoVideoFile","nowPlayingType","nowPlayingName","useStreamStore","currentChannel","setNowPlayingInfoShow","clearNowPlayingInfo","firstPlayVideo","setName","setEpisodeUrl","setUrl","setEpisodeName","makeVideoPiP","makeVideoFullPage","fullPage","hidePage","ott","isMobile","makeVideoTopRight","currentPageIsStream","makeVideoWelcomePage","loggedIn","usePageSetup","pageName","showFlashMessage","pageIsHidden","window","innerWidth","showOttButtons","pageReload","pageWasReloaded","location","reload","router","event","search","shouldScrollToTop","requestAnimationFrame","topDiv","getElementById","scrollIntoView","behavior","scrollTo","setPrevUrl","noLayout","watch","newValue","immediate","___CSS_LOADER_EXPORT___","module","props","__props","clearFlashMessage","computed","flash","warning","_ref","savedScrollPosition","saveScrollPosition","scrollY","Date","getFullYear","emits","__emit","ref","attrs","highlight","rules","interval","newDate","onMounted","_ref2","_slicedToArray","usePage","proxy","getCurrentInstance","stopConfetti","$confetti","timezoneConfirmed","currentStep","totalSteps","stepError","initialFormState","scheduleType","daysOfWeek","meridian","durationHour","durationMinute","durationDisplay","errors","form","reactive","confirmTimezone","selectScheduleType","goToNextStep","startHour","startMinute","startDateTime","isInThePast","provisionalEndDate","goToPreviousStep","goToStep","num","daysOrder","dayAbbreviations","dayNameToNumber","abbreviatedDaysOfWeekOrdered","indexOf","sortedDay","newDays","from","_","formattedStartTime","minuteOptions","updateDurationDisplay","display","newHour","formattedStartTimeForOneTime","formattedStartDate","formattedEndDate","disabledDays","selectedDayNumbers","repeat","weekdays","dayNum","includes","handleStartDateSelected","startWeekday","handleEndDateSelected","submit","_ref3","closeConfirmAddShowModal","preparePayload","addShowToSchedule","closeModal","close","closeModalAndReset","selectedTimezone","canadianTimezone","newTimezone","handleKeydown","btnRedirect","updateTimezone","setUserTimezone","addEventListener","onUnmounted","removeEventListener","removeFromSchedule","addShowToScheduleObserver","changeScheduleObserver","nextBroadcastDate","scheduleDetails","broadcastDates","broadcastDatesObj","dateStr","isFutureBroadcast","watchModal","modalId","onClose","modalElement","observer","MutationObserver","mutationsList","mutation","attributeName","hasAttribute","observe","attributes","openAddShowToScheduleModal","setUpdatingStatus","user","openChangeScheduleModal","meta","isUpdatingSchedule","updatedBy","onBeforeUnmount","disconnect","teamStore","relativeTime","convertedDate","watchEffect","scheduledDateTime","dialogId","episodeId","setDateTime","openEpisodeStatuses","cancelScheduleEpisode","handleScheduledDateTime","selectedScheduledDateTime","updateScheduledDateTime","formattedScheduledDateTime","dateTime","convertToTimeZone","changeEpisodeStatus","_x","_x2","_changeEpisodeStatus","statusId","updatedEpisode","episodeIndex","episode_id","new_status_id","scheduled_release_dateTime","alert","episodes","ep","episodeStatusId","episode_status_id","scheduledReleaseDateTime","episodeStatuses","episodeStatus","errorMessage","closeModals","episodeStatusClass","useForm","notes","emit","episodeNote","closeNote","saveNote","focus","releaseDateTime","timezoneAbbreviation","componentKey","reloadNote","editNote","deleteShowEpisode","episodeIsBeingDeleted","statusText","options","locals","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_4","_hoisted_3","recordingStore","useClipboard","hoveredRow","confirmAddToEpisode","confirmSaveToPremium","rowClass","recordingId","beginDownload","handlePageChange","openModal","goLiveStore","toggleComponent","componentName","currentUsers","initializeShow","Echo","here","users","leader","setLeader","put","joining","leaving","newLeader","channel","listen","$patch","isSaving","start_DateTime","leave"],"sourceRoot":""}
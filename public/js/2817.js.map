{"version":3,"file":"js/2817.js","mappings":";uUACA,gjNACO,IAAIA,GAAeC,UAAAA,IAAY,YAAa,CAC/CC,MAAO,iBAAO,CACVC,GAAI,EACJC,KAAM,GACNC,YAAa,EACbC,gBAAiB,EACjBC,qBAAsB,GACtBC,eAAgB,GAChBC,YAAa,GACbC,WAAY,GACZC,SAAU,CAAC,GACXC,SAAU,GACVC,QAAS,UACTC,cAAe,GACfC,SAAU,EACVC,KAAM,GACNC,mBAAoBC,QAEvB,EAEDC,QAAS,CACCC,KAAI,WAAG,IAtBrB,EAsBqB,cAtBrB,EAsBqB,8GACK,oCAA0B,OAApCC,EAAI,EAAH,KACL,EAAKC,OAASD,EAAC,QAAS,0CAxBpC,gLAyBQ,GAGJE,QAAS,CACL,0hCCzBR,mGCmDA,SAASC,IACLC,OAAOC,QAAQF,MACnB,kpECrDA,oHCSA,SAASG,EAAWC,GAChB,IAAIC,EAAWD,EAAEE,OAGbC,EAAMF,EAASG,MACfC,EAAQJ,EAASK,eACjBC,EAAMN,EAASO,aAGnBP,EAASG,MAAQD,EAAIM,UAAU,EAAGJ,GAAS,KAAOF,EAAIM,UAAUF,GAGhEN,EAASK,eAAiBL,EAASO,aAAeH,EAAQ,CAC9D,y3ICtBA,yGC6TIK,GAAmBC,EAAAA,EAAAA,KACnBC,GAAYC,EAAAA,EAAAA,KACZC,GAAY1C,EAAAA,EAAAA,KACZ2C,GAAYC,EAAAA,EAAAA,KAEhBN,EAAiBO,YAAc,YAE/BC,EAAAA,EAAAA,gBAAc,WACVH,EAAUI,mBAAqB,CACnC,KAEAC,EAAAA,EAAAA,YAAU,WACNV,EAAiBW,oBACoB,IAAjCN,EAAUI,qBACVG,SAASC,eAAe,UAAUC,iBAClCT,EAAUI,qBAElB,IASA,IAAMM,EAAWC,IACbC,IACAC,IACAC,IACAC,KAcJ,SAASC,IACLC,QAAQC,IAAI,sBACZD,QAAQC,IAAI,mBAAoBR,EACpC,CAEA,SAASS,GAAoBC,EAAOC,GAChC,GAAID,EAIA,OAHAH,QAAQC,IAAI,2BACZD,QAAQC,IAAIE,QACZH,QAAQC,IAAIG,GAIhBC,EAAAA,QAAAA,OAAe,CACXC,KAAM,CAAC,WAGf,CAEA1B,EAAU2B,cAAcC,EAAMC,MAC9B7B,EAAU8B,cAAcF,EAAMG,MAC9B7B,EAAU5B,cAAgBsD,EAAMI,OAEhC,IAAIC,IAAOC,EAAAA,EAAAA,IAAQ,CACfvE,GAAIiE,EAAMO,QAAQxE,GAClBC,KAAMgE,EAAMO,QAAQvE,KACpBwE,eAAgBR,EAAMO,QAAQC,eAC9BnE,YAAa2D,EAAMO,QAAQlE,YAC3BoE,MAAOT,EAAMO,QAAQE,MACrBC,QAASV,EAAMO,QAAQG,QACvBC,gBAAiBX,EAAMO,QAAQI,gBAC/BC,eAAgBZ,EAAMO,QAAQK,eAC9BC,sBAAuBb,EAAMO,QAAQM,wBAGrCC,GAAS,WACTT,GAAKU,IAAIC,MAAM,sBAAuBhB,EAAMO,QAAQU,MACxD","sources":["webpack:///./resources/js/Stores/ShowStore.js","webpack:///./resources/js/Components/ShowEpisodes/Edit/ShowEpisodeEditHeader.vue?a7b9","webpack:///./resources/js/Components/ShowEpisodes/Edit/ShowEpisodeEditHeader.vue","webpack:///./resources/js/Components/TabbableTextarea.vue?5ddb","webpack:///./resources/js/Components/TabbableTextarea.vue","webpack:///./resources/js/Pages/Shows/{$id}/Episodes/{$id}/Edit.vue?6515","webpack:///./resources/js/Pages/Shows/{$id}/Episodes/{$id}/Edit.vue"],"sourcesContent":["import { defineStore } from \"pinia\";\n\nexport let useShowStore = defineStore('showStore', {\n    state: () => ({\n        id: 0,\n        name: '',\n        category_id: 0,\n        category_sub_id: 0,\n        category_description: '',\n        sub_categories: [],\n        description: '',\n        posterName: [],\n        posterId: [0],\n        episodes: [],\n        team_id: 'team id',\n        episodePoster: '',\n        noteEdit: 0,\n        note: '',\n        saveNoteProcessing: Boolean,\n\n    }),\n\n    actions: {\n        async fill() {\n            let r = await import('@/Json/show.json');\n            this.$state = r.default;\n        }\n    },\n\n    getters: {\n        //\n    }\n});\n","import script from \"./ShowEpisodeEditHeader.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ShowEpisodeEditHeader.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n\n    <div class=\"flex justify-between mb-6\">\n        <div>\n            <div class=\"font-bold mb-4 text-red-700\">EDIT EPISODE</div>\n            <h1 class=\"text-3xl\">\n                <Link :href=\"`/shows/${show.slug}/episode/${episode.slug}`\" class=\"text-red-700 font-bold uppercase\">{{ episode.name }}</Link>\n            </h1>\n        </div>\n        <div>\n            <button\n                @click=\"back\"\n                class=\"px-4 py-2 text-white bg-orange-600 hover:bg-orange-500 rounded-lg\"\n            >Cancel\n            </button>\n\n        </div>\n    </div>\n\n\n    <div class=\"space-y-1\">\n        <div class=\"mb-6\"><span class=\"text-xs uppercase font-semibold\">Episode #: </span>\n            <span v-if=\"episode.episode_number\" class=\"font-bold uppercase\">{{ episode.episode_number }}</span>\n            <span v-if=\"!episode.episode_number\" class=\"font-bold uppercase\">{{ episode.id }}</span>\n        </div>\n        <div class=\"\"><span class=\"text-xs uppercase font-semibold\">Show: </span>\n            <Link :href=\"`/shows/${show.slug}/manage`\">\n                <span class=\"font-bold uppercase text-blue-300 hover:text-blue-500\">{{ show.name }}</span>\n            </Link>\n        </div>\n        <div class=\"\"><span class=\"text-xs uppercase font-semibold\">Category: </span>\n                <span class=\"font-bold uppercase\">{{ show.showCategoryName }}</span>\n            <span class=\"text-xs\"> (change the category on the\n                <Link :href=\"`/shows/${show.slug}/edit`\" class=\"text-blue-300 hover:text-blue-500\">show edit page</Link>)</span>\n        </div>\n        <div class=\"\"><span class=\"text-xs uppercase font-semibold\">Sub-category: </span>\n                <span class=\"font-bold uppercase\">{{ show.subCategoryName }}</span>\n        </div>\n        <div class=\"\"><span class=\"text-xs uppercase font-semibold\">Team: </span>\n            <Link :href=\"`/teams/${team.slug}/manage`\">\n            <span class=\"font-bold uppercase text-blue-300 hover:text-blue-500\">{{ team.name }}</span>\n            </Link>\n        </div>\n\n    </div>\n\n\n</template>\n\n<script setup>\ndefineProps({\n    show: Object,\n    team: Object,\n    episode: Object,\n})\n\nfunction back() {\n    window.history.back()\n}\n\n</script>\n","import script from \"./TabbableTextarea.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TabbableTextarea.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <textarea\n        @keydown.tab.prevent=\"onTabPress\"\n        @keyup=\"emit('update:modelValue', $event.target.value)\"\n        v-text=\"modelValue\" />\n</template>\n\n<script setup>\ndefineProps ({\n    modelValue: String\n});\n\nlet emit = defineEmits(['update:modelValue']);\n\nfunction onTabPress(e) {\n    let textarea = e.target;\n\n    // get caret position/selection\n    let val = textarea.value,\n        start = textarea.selectionStart,\n        end = textarea.selectionEnd;\n\n    // set textarea value to: text before caret + tab + text after caret\n    textarea.value = val.substring(0, start) + \"\\t\" + val.substring(end);\n\n    // put caret at right position again\n    textarea.selectionStart = textarea.selectionEnd = start + 1;\n}\n\n</script>\n","import script from \"./Edit.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Edit.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n\n    <Head :title=\"`Edit Episode: ${props.episode.name}`\"/>\n\n    <div id=\"topDiv\"></div>\n    <div class=\"place-self-center flex flex-col gap-y-3\">\n        <div class=\"bg-dark text-light p-5 mb-10\">\n\n            <header>\n                <div class=\"p-4 mb-4 text-sm text-green-700 bg-green-100 rounded-lg dark:bg-green-200 dark:text-green-800\"\n                role=\"alert\"\n                v-if=\"props.message\">\n                <span class=\"font-medium\">\n                                    {{ props.message }}\n                                </span>\n                </div>\n\n                <ShowEpisodeEditHeader :show=\"props.show\" :team=\"props.team\" :episode=\"props.episode\"/>\n\n            </header>\n\n\n            <div class=\"flex flex-col\">\n                <div class=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\n                    <div class=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\n                        <div class=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\n\n\n                            <div v-if=\"form.errors.name\" v-text=\"form.errors.name\"\n                                 class=\"bg-red-600 p-2 w-full text-white font-semibold mt-1\"></div>\n                            <div v-if=\"form.errors.description\" v-text=\"form.errors.description\"\n                                 class=\"bg-red-600 p-2 w-full text-white font-semibold mt-1\"></div>\n                            <div v-if=\"form.errors.episode_number\" v-text=\"form.errors.episode_number\"\n                                 class=\"bg-red-600 p-2 w-full text-white font-semibold mt-1\"></div>\n                            <div v-if=\"form.errors.notes\" v-text=\"form.errors.notes\"\n                                 class=\"bg-red-600 p-2 w-full text-white font-semibold mt-1\"></div>\n                            <div v-if=\"form.errors.video_file_url\" v-text=\"form.errors.video_file_url\"\n                                 class=\"bg-red-600 p-2 w-full text-white font-semibold mt-1\"></div>\n                            <div v-if=\"form.errors.video_file_embed_code\" v-text=\"form.errors.video_file_embed_code\"\n                                 class=\"bg-red-600 p-2 w-full text-white font-semibold mt-1\"></div>\n\n\n\n                            <form @submit.prevent=\"submit\">\n<!--                                <div class=\"flex justify-end mr-2 mb-6\">-->\n<!--                                    <button-->\n<!--                                        @click=\"submit\"-->\n<!--                                        class=\"bg-blue-600 hover:bg-blue-500 text-white rounded py-2 px-4\"-->\n<!--                                        :disabled=\"form.processing\"-->\n<!--                                    >-->\n<!--                                        Save-->\n<!--                                    </button>-->\n<!--                                </div>-->\n\n\n\n\n\n<!-- Begin grid 2-col -->\n                            <div class=\"grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 space-x-6 p-6\">\n\n<!--Left Column-->\n                                <div>\n\n\n                                    <div>\n                                        <label class=\"block mb-2 uppercase font-bold text-xs text-light text-red-700\"\n                                               for=\"name\"\n                                        >\n                                            Change Episode Poster\n                                        </label>\n                                        <div class=\"max-full mx-auto mt-2 mb-6 bg-gray-200 p-6 text-dark\">\n\n                                            <h2 class=\"text-xl font-semibold text-gray-800\">Upload Poster</h2>\n\n                                            <ul class=\"pb-4 text-gray-800\">\n                                                <li>Max File Size: <span class=\"text-orange-400\">10MB</span></li>\n                                                <li>File Types accepted: <span class=\"text-orange-400\">jpg, jpeg, png</span></li>\n                                            </ul>\n\n                                            <div class=\"flex space-y-3\">\n                                                <div class=\"mb-6\">\n                                                    <img :src=\"'/storage/images/' + props.poster\"\n                                                         :key=\"poster\" />\n                                                </div>\n                                            </div>\n\n                                            <file-pond\n                                                name=\"poster\"\n                                                ref=\"pond\"\n                                                label-idle=\"Click to choose image, or drag here...\"\n                                                @init=\"filepondInitialized\"\n                                                server=\"/showEpisodesUploadPoster\"\n                                                accepted-file-types=\"image/jpg, image/jpeg, image/png\"\n                                                @processfile=\"handleProcessedFile\"\n                                                max-file-size=\"10MB\"\n                                            />\n                                        </div>\n\n                                    </div>\n\n                                    <label class=\"block mb-2 uppercase font-bold text-xs text-light text-red-700\"\n                                           for=\"name\"\n                                    >\n                                        Episode Video\n                                    </label>\n\n                                    <div class=\"flex justify-center w-full bg-black py-0\">\n                                        <!--                                <img :src=\"'/storage/images/' + props.episode.poster\" alt=\"\" class=\"w-1/2 mx-2\">-->\n\n                                        <!--                TEST VIDEO EMBED FROM RUMBLE             -->\n                                        <!--                <iframe class=\"rumble\" width=\"640\" height=\"360\" src=\"https://rumble.com/embed/v1nf3s7/?pub=4\" frameborder=\"0\" allowfullscreen></iframe>-->\n\n                                        <div\n                                            class=\"flex justify-center shadow overflow-hidden border-b border-gray-200 w-full bg-black text-light text-2xl sm:rounded-lg p-5\">\n\n                                            <img v-if=\"!props.episode.video_file_url && !props.episode.video_file_embed_code && props.episode.poster\" :src=\"'/storage/images/' + props.episode.poster\" alt=\"\" class=\"w-1/2 mx-2\">\n                                            <img v-if=\"!props.episode.video_file_url && !props.episode.video_file_embed_code && !props.episode.poster\" :src=\"`/storage/images/EBU_Colorbars.svg.png`\" alt=\"\" class=\"w-1/2 mx-2\">\n\n                                            <iframe v-if=\"props.episode.video_file_url && !props.episode.video_file_embed_code\"\n                                                    class=\"rumble\" width=\"640\" height=\"360\" :src=\"`${props.episode.video_file_url}`\" frameborder=\"0\" allowfullscreen>\n                                            </iframe>\n                                            <div v-if=\"!props.episode.video_file_url && props.episode.video_file_embed_code\" v-html=\"props.episode.video_file_embed_code\">\n                                            </div>\n                                            <div v-if=\"props.episode.video_file_url && props.episode.video_file_embed_code\" v-html=\"props.episode.video_file_embed_code\">\n                                            </div>\n                                        </div>\n\n                                    </div>\n\n\n\n\n\n                                </div>\n\n\n<!--Right Column-->\n                                <div class=\"xl:col-span-2\">\n\n                                    <div class=\"mb-6\">\n                                        <label class=\"block mb-2 uppercase font-bold text-xs text-light text-red-700\"\n                                               for=\"name\"\n                                        >\n                                            Episode Notes (only the team members see the notes)\n                                        </label>\n\n                                        <input v-model=\"form.notes\"\n                                               class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                                               type=\"text\"\n                                               name=\"notes\"\n                                               id=\"notes\"\n                                               required\n                                        >\n                                        <div v-if=\"form.errors.notes\" v-text=\"form.errors.notes\"\n                                             class=\"text-xs text-red-600 mt-1\"></div>\n                                    </div>\n\n\n                                    <div class=\"mb-6\">\n                                        <label class=\"block mb-2 uppercase font-bold text-xs text-light text-red-700\"\n                                               for=\"name\"\n                                        >\n                                            Episode Name\n                                        </label>\n\n                                        <input v-model=\"form.name\"\n                                               class=\"border border-gray-400 text-gray-800 p-2 w-1/2 rounded-lg\"\n                                               type=\"text\"\n                                               name=\"name\"\n                                               id=\"name\"\n                                               required\n                                        >\n                                        <div v-if=\"form.errors.name\" v-text=\"form.errors.name\"\n                                             class=\"text-xs text-red-600 mt-1\"></div>\n                                    </div>\n\n                                    <div class=\"mb-6\">\n                                        <label class=\"block mb-2 uppercase font-bold text-xs text-light text-red-700\"\n                                               for=\"episode_number\"\n                                        >\n                                            Episode Number\n                                        </label>\n\n                                        <input v-model=\"form.episode_number\"\n                                               class=\"border border-gray-400 text-gray-800 p-2 w-1/2 rounded-lg\"\n                                               type=\"text\"\n                                               name=\"episode_number\"\n                                               id=\"episode_number\"\n                                        >\n                                        <div v-if=\"form.errors.episode_number\" v-text=\"form.errors.episode_number\"\n                                             class=\"text-xs text-red-600 mt-1\"></div>\n                                    </div>\n\n\n\n                                    <div class=\"mb-6 w-full\">\n                                        <label class=\"block mb-2 uppercase font-bold text-xs text-light text-red-700\"\n                                               for=\"description\"\n                                        >\n                                            Description\n                                        </label>\n                                        <TabbableTextarea v-model=\"form.description\"\n                                                          class=\"border border-gray-400 text-gray-800 p-2 w-full rounded-lg\"\n                                                          name=\"description\"\n                                                          id=\"description\"\n                                                          rows=\"10\" cols=\"30\"\n                                                          required\n                                        />\n                                        <div v-if=\"form.errors.description\" v-text=\"form.errors.description\"\n                                             class=\"text-xs text-red-600 mt-1\"></div>\n                                    </div>\n\n\n                                    <div class=\"block mt-12 mb-2 uppercase font-bold text-xs text-light text-red-700\">\n                                        Notes about video embedding:\n                                    </div>\n                                    <ul class=\"list-decimal pb-2 ml-2 mb-4 border-b\">\n                                        <li>\n                                            The system will use the embed code if both URL and Embed code are provided.\n                                        </li>\n                                        <li>\n                                            We have not enabled the use of Facebook videos for security purposes.\n                                        </li>\n                                    </ul>\n\n                                    <div class=\"mb-6\">\n                                        <label class=\"block mb-2 uppercase font-bold text-xs text-light text-red-700\"\n                                               for=\"video_file_url\"\n                                        >\n                                            Episode Video URL (if hosted externally)\n                                        </label>\n\n                                        <input v-model=\"form.video_file_url\"\n                                               class=\"border border-gray-400 text-gray-800 p-2 w-full rounded-lg\"\n                                               type=\"text\"\n                                               name=\"video_file_url\"\n                                               id=\"video_file_url\"\n                                        >\n                                        <div v-if=\"form.errors.video_file_url\" v-text=\"form.errors.video_file_url\"\n                                             class=\"text-xs text-red-600 mt-1\"></div>\n                                    </div>\n\n                                    <div class=\"mb-6\">\n                                        <label class=\"block mb-2 uppercase font-bold text-xs text-light text-red-700\"\n                                               for=\"video_file_embed_code\"\n                                        >\n                                            Episode Video Embed Code (if hosted externally)\n                                        </label>\n\n                                        <TabbableTextarea v-model=\"form.video_file_embed_code\"\n                                                          class=\"border border-gray-400 text-gray-800 p-2 w-full rounded-lg\"\n                                                          type=\"text\"\n                                                          name=\"video_file_embed_code\"\n                                                          id=\"video_file_embed_code\"\n                                                          rows=\"10\" cols=\"30\"\n                                        />\n                                        <div v-if=\"form.errors.video_file_embed_code\" v-text=\"form.errors.video_file_embed_code\"\n                                             class=\"text-xs text-red-600 mt-1\"></div>\n                                    </div>\n\n\n                                    <div class=\"mb-6\">\n                                        <label class=\"block mb-2 uppercase font-bold text-xs text-light text-red-700\"\n                                               for=\"video_file_embed_code\"\n                                        >\n                                            Add a video that has been uploaded to not.tv\n                                        </label>\n                                        <span class=\"italic\">This feature is coming soon.</span>\n                                    </div>\n\n\n\n                                </div>\n<!-- End Right Column -->\n                            </div>\n<!-- End grid 2-col -->\n\n                                <div class=\"flex justify-end mb-6\">\n                                    <button\n                                        @click=\"submit\"\n                                        class=\"bg-blue-600 hover:bg-blue-500 text-white rounded py-2 px-4\"\n                                        :disabled=\"form.processing\"\n                                    >\n                                        Save\n                                    </button>\n                                </div>\n\n                            </form>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n\n\n        </div>\n    </div>\n\n</template>\n\n<script setup>\nimport {onBeforeMount, onMounted} from \"vue\"\nimport {useForm} from \"@inertiajs/inertia-vue3\"\nimport TabbableTextarea from \"@/Components/TabbableTextarea\"\nimport ShowEpisodeEditHeader from \"@/Components/ShowEpisodes/Edit/ShowEpisodeEditHeader\"\n\nimport { Inertia } from \"@inertiajs/inertia\"\nimport { useVideoPlayerStore } from \"@/Stores/VideoPlayerStore.js\"\nimport { useTeamStore } from \"@/Stores/TeamStore.js\"\nimport { useShowStore } from \"@/Stores/ShowStore.js\"\n\nimport vueFilePond, { setOptions } from 'vue-filepond'\nimport FilePondPluginFileValidateType from \"filepond-plugin-file-validate-type\"\nimport FilePondPluginFileValidateSize from \"filepond-plugin-file-validate-size\"\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\"\nimport FilePondPluginFileMetadata from \"filepond-plugin-file-metadata\"\nimport 'filepond/dist/filepond.min.css'\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.min.css'\nimport {useUserStore} from \"@/Stores/UserStore\";\n\nlet videoPlayerStore = useVideoPlayerStore()\nlet teamStore = useTeamStore()\nlet showStore = useShowStore()\nlet userStore = useUserStore()\n\nvideoPlayerStore.currentPage = 'episodes'\n\nonBeforeMount(() => {\n    userStore.scrollToTopCounter = 0;\n})\n\nonMounted(() => {\n    videoPlayerStore.makeVideoTopRight();\n    if (userStore.scrollToTopCounter === 0 ) {\n        document.getElementById(\"topDiv\").scrollIntoView()\n        userStore.scrollToTopCounter ++;\n    }\n});\n\nlet props = defineProps({\n    episode: Object,\n    show: Object,\n    team: Object,\n    poster: String,\n});\n\nconst FilePond = vueFilePond(\n    FilePondPluginFileValidateType,\n    FilePondPluginFileValidateSize,\n    FilePondPluginImagePreview,\n    FilePondPluginFileMetadata\n);\n\n////////\n// tec21: this isn't working...\n// I wasn't able to set metadata\n// or get metadata back from filepond.\n//\n// FilePond.setOptions = ({\n//     fileMetadataObject: {\n//         episode_id: '1',\n//     },\n// });\n\nfunction filepondInitialized() {\n    console.log(\"Filepond is ready!\");\n    console.log('Filepond object:', FilePond);\n}\n\nfunction handleProcessedFile(error, file) {\n    if (error) {\n        console.log(\"Filepond processed file\");\n        console.log(error);\n        console.log(file);\n        return;\n    }\n\n    Inertia.reload({\n        only: ['poster'],\n    });\n\n}\n\nteamStore.setActiveTeam(props.team);\nteamStore.setActiveShow(props.show);\nshowStore.episodePoster = props.poster;\n\nlet form = useForm({\n    id: props.episode.id,\n    name: props.episode.name,\n    episode_number: props.episode.episode_number,\n    description: props.episode.description,\n    notes: props.episode.notes,\n    show_id: props.episode.show_id,\n    video_thumbnail: props.episode.video_thumbnail,\n    video_file_url: props.episode.video_file_url,\n    video_file_embed_code: props.episode.video_file_embed_code,\n});\n\nlet submit = () => {\n    form.put(route('showEpisodes.update', props.episode.slug));\n};\n\n\n</script>\n"],"names":["useShowStore","defineStore","state","id","name","category_id","category_sub_id","category_description","sub_categories","description","posterName","posterId","episodes","team_id","episodePoster","noteEdit","note","saveNoteProcessing","Boolean","actions","fill","r","$state","getters","back","window","history","onTabPress","e","textarea","target","val","value","start","selectionStart","end","selectionEnd","substring","videoPlayerStore","useVideoPlayerStore","teamStore","useTeamStore","showStore","userStore","useUserStore","currentPage","onBeforeMount","scrollToTopCounter","onMounted","makeVideoTopRight","document","getElementById","scrollIntoView","FilePond","vueFilePond","FilePondPluginFileValidateType","FilePondPluginFileValidateSize","FilePondPluginImagePreview","FilePondPluginFileMetadata","filepondInitialized","console","log","handleProcessedFile","error","file","Inertia","only","setActiveTeam","props","team","setActiveShow","show","poster","form","useForm","episode","episode_number","notes","show_id","video_thumbnail","video_file_url","video_file_embed_code","submit","put","route","slug"],"sourceRoot":""}
{"version":3,"file":"js/9041.js","mappings":"iKAEMA,EAAe,WAAH,MAAU,CACxBC,aAAc,UACdC,aAAc,GACdC,iBAAkB,GAClBC,qBAAsB,GACtBC,UAAW,GACXC,mBAAoB,KACvB,EAEYC,GAAuBC,EAAAA,EAAAA,IAAY,oBAAqB,CACjEC,MAAOT,EACPU,QAAS,CACLC,MAAK,WAEDC,OAAOC,OAAOC,KAdE,CACxBb,aAAc,UACdC,aAAc,GACdC,iBAAkB,GAClBC,qBAAsB,GACtBC,UAAW,GACXC,mBAAoB,MAShB,EACAS,gBAAe,SAACC,GACZF,KAAKb,aAAee,CACxB,EACAC,wBAAuB,WACnBH,KAAKR,mBAAqB,IAC9B,EACAY,sBAAqB,SAACC,GAClB,IAAMC,EAAWN,KAAKT,UAAUgB,MAAK,SAAAC,GAAC,OAAIA,EAAEH,eAAiBA,CAAY,IACrEC,IACAN,KAAKR,mBAAqBc,EAASG,GAE3C,GAKJC,QAAS,CAELC,yBAA0B,SAAChB,GACvB,OAAOA,EAAMN,iBAAiBuB,QAAO,SAAAC,GAAQ,OAAIA,EAASC,cAAgBnB,EAAMH,kBAAkB,GACtG,EACAuB,iBAAkB,SAACpB,GACf,OAAOA,EAAMJ,UAAUgB,MAAK,SAAAC,GAAC,OAAIA,EAAEC,KAAOd,EAAMH,kBAAkB,GACtE,I","sources":["webpack://nottvbeta/./resources/js/Stores/NewsDistrictStore.js"],"sourcesContent":["import { defineStore } from 'pinia'\n\nconst initialState = () => ({\n    districtType: 'federal', // Default to Federal\n    districtName: '',\n    federalDistricts: [],\n    subnationalDistricts: [],\n    provinces: [],\n    selectedProvinceId: null, // ID of the selected province\n})\n\nexport const useNewsDistrictStore = defineStore('newsDistrictStore', {\n    state: initialState,\n    actions: {\n        reset() {\n            // Reset the store to its original state (clear all data)\n            Object.assign(this, initialState())\n        },\n        setDistrictType(type) {\n            this.districtType = type;\n        },\n        clearSelectedProvinceId() {\n            this.selectedProvinceId = null\n        },\n        setSelectedProvinceId(abbreviation) {\n            const province = this.provinces.find(p => p.abbreviation === abbreviation);\n            if (province) {\n                this.selectedProvinceId = province.id; // Assuming each province object has an 'id' field\n            }\n        }\n\n\n    },\n\n    getters: {\n        // Filtered federal districts based on the selected province\n        filteredFederalDistricts: (state) => {\n            return state.federalDistricts.filter(district => district.province_id === state.selectedProvinceId);\n        },\n        selectedProvince: (state) => {\n            return state.provinces.find(p => p.id === state.selectedProvinceId);\n        }\n    },\n\n})\n\n"],"names":["initialState","districtType","districtName","federalDistricts","subnationalDistricts","provinces","selectedProvinceId","useNewsDistrictStore","defineStore","state","actions","reset","Object","assign","this","setDistrictType","type","clearSelectedProvinceId","setSelectedProvinceId","abbreviation","province","find","p","id","getters","filteredFederalDistricts","filter","district","province_id","selectedProvince"],"sourceRoot":""}
{"version":3,"file":"js/557.js","mappings":"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","sources":["webpack:///./resources/js/Stores/AdminStore.js","webpack:///./resources/js/Utilities/PageSetup.js","webpack:///./resources/js/Components/Pages/Admin/Settings/FirstPlayVideoSourceSelector.vue?550b","webpack:///./resources/js/Pages/Admin/Settings.vue?f21e","webpack:///./resources/js/Components/Global/Modals/Messages.vue?dfe9","webpack:///./resources/js/Components/Global/Modals/Messages.vue","webpack:///./resources/js/Components/Global/Modals/PopUpModal.vue?0d51","webpack:///./resources/js/Components/Global/Modals/PopUpModal.vue","webpack:///./resources/js/Components/Global/TextEditor/TabbableTextarea.vue?4db8","webpack:///./resources/js/Components/Global/TextEditor/TabbableTextarea.vue","webpack:///./resources/js/Jetstream/ValidationErrors.vue?5fdc","webpack:///./resources/js/Jetstream/ValidationErrors.vue","webpack:///./resources/js/Components/Pages/Admin/ServerTime.vue?93d0","webpack:///./resources/js/Components/Pages/Admin/ServerTime.vue","webpack:///./resources/js/Components/Pages/Admin/Settings/FirstPlayVideoSourceSelector.vue","webpack:///./resources/js/Components/Pages/Admin/Settings/FirstPlayVideoSourceSelector.vue?5318","webpack:///./resources/js/Components/Pages/Admin/Settings/FirstPlayVideoSourceSelector.vue?3d1f","webpack:///./resources/js/Components/Pages/Admin/Settings/SubscriptionSettings.vue?31ac","webpack:///./resources/js/Components/Pages/Admin/Settings/SubscriptionSettings.vue","webpack:///./resources/js/Pages/Admin/Settings.vue","webpack:///./resources/js/Pages/Admin/Settings.vue?e639","webpack:///./resources/js/Pages/Admin/Settings.vue?277d","webpack:///./resources/js/Pages/Admin/Settings/Elements/UploadNewsData.vue?226d","webpack:///./resources/js/Pages/Admin/Settings/Elements/UploadNewsData.vue"],"sourcesContent":["import { defineStore } from 'pinia'\nimport { useNotificationStore } from '@/Stores/NotificationStore'\nimport { useVideoPlayerStore } from '@/Stores/VideoPlayerStore'\n\nconst initialState = () => ({\n    channels: [], // For Admin Channels page\n    items: [], // for Admin Channels DynamicModal... ExternalSource, ChannelPlaylist, MistStream\n    activeItemId: null,\n    selectedChannel: null, // The currently active item\n    currentType: '', // 'externalSource', 'channelPlaylist', 'mistStream'\n    searchTerm: '',\n    type: '',\n    modalHeader: '',\n    currentPage: 1,\n    itemsPerPage: 10,\n    currentChannelsPage: 1,\n    itemsPerChannelsPage: 7,\n    sourceSelector: {\n        source: null,\n        sourceType: null\n    },\n    firstPlaySettings: {\n        useCustomVideo: false,\n        customVideoSource: '',\n        customVideoSourceType: '',\n    },\n    validationErrors: {},\n    checkSendProcessing: false,\n    activeStreams: [],\n    fetchingActiveStreams: false,\n    settingsForm: {\n        subscriptionSettings: {\n            monthly: {\n                price: '',\n                api_id: ''\n            },\n            yearly: {\n                price: '',\n                api_id: ''\n            }\n        },\n    }\n})\n\nexport const useAdminStore = defineStore('adminStore', {\n    state: initialState,\n    actions: {\n        reset() {\n            // Reset the store to its original state (clear all data)\n            Object.assign(this, initialState())\n        },\n\n        loadChannels(channels) {\n            this.channels = channels\n        },\n        setCheckSendProcessing() {\n          this.checkSendProcessing = true\n        },\n        unsetCheckSendProcessing() {\n            this.checkSendProcessing = false\n        },\n        async fetchChannels() {\n            await axios.get('/api/channels_list')\n                .then(response => {\n                    this.channels = response.data\n                })\n                .catch(error => {\n                    console.log(error)\n                })\n        },\n        async toggleChannelActiveStatus(channelId) {\n            const notificationStore = useNotificationStore();\n            try {\n                const response = await axios.post('/admin/channels/' + channelId + '/toggleChannelActive');\n                // Extract message and status from the response\n                const { message, status } = response.data;\n                // Use the status from the response for the notification\n                notificationStore.setToastNotification(message, status);\n            } catch (error) {\n                console.error(error);\n                notificationStore.setToastNotification('Failed to toggle channel status.', 'error');\n            }\n        },\n        async addChannel(name) {\n            const notificationStore = useNotificationStore();\n            try {\n                const response = await axios.post('/admin/channels/add', {'name': name});\n\n                if (response.data.success) {\n                    // Operation was a success\n                    await this.fetchChannels();\n                    notificationStore.setToastNotification(response.data.message, 'success');\n                } else {\n                    // Handle logical errors even when the HTTP response was OK\n                    // Assuming 'status' and 'message' are part of the error response\n                    const { message, status } = response.data;\n                    let errorMessage = 'Failed to add channel due to a server error.';\n\n                    if (status === 'error' && message && message.fallbackMessages) {\n                        // Construct a more detailed error message based on validation feedback\n                        const validationMessages = Object.values(message.fallbackMessages)\n                            .map(msgs => msgs.join(' ')) // Join messages if there are multiple for one field\n                            .join('; '); // Separate field messages with semicolons\n\n                        errorMessage = validationMessages || errorMessage;\n                    }\n\n                    notificationStore.setToastNotification(errorMessage, 'error');\n                }\n            } catch (error) {\n                console.error(error);\n                notificationStore.setToastNotification('Failed to add channel due to a network or server error.', 'error');\n            }\n        },\n        async updateChannel(channelId, newName) {\n            const notificationStore = useNotificationStore();\n            try {\n                const response = await axios.post(`/admin/channels/${channelId}`, {'name': newName});\n\n                if (response.data.success) {\n                    // Operation was a success\n                    await this.fetchChannels();\n                    notificationStore.setToastNotification(response.data.message, 'success');\n                } else {\n                    // Handle logical errors even when the HTTP response was OK\n                    // Assuming 'status' and 'message' are part of the error response\n                    const { message, status } = response.data;\n                    let errorMessage = 'Failed to add channel due to a server error.';\n\n                    if (status === 'error' && message && message.fallbackMessages) {\n                        // Construct a more detailed error message based on validation feedback\n                        const validationMessages = Object.values(message.fallbackMessages)\n                            .map(msgs => msgs.join(' ')) // Join messages if there are multiple for one field\n                            .join('; '); // Separate field messages with semicolons\n\n                        errorMessage = validationMessages || errorMessage;\n                    }\n\n                    notificationStore.setToastNotification(errorMessage, 'error');\n                }\n            } catch (error) {\n                console.error(error);\n                notificationStore.setToastNotification('Failed to add channel due to a network or server error.', 'error');\n            }\n        },\n        setSelectedChannel(item) {\n            this.selectedChannel = item\n        },\n        setCurrentType(type) {\n            this.currentType = type\n            this.modalHeader = type + ' list'\n        },\n        clearSelectedChannelAndItems() {\n            this.selectedChannel = null\n            this.items = []\n            this.activeItemId = null\n            this.currentType = ''\n            this.modalHeader = ''\n            this.currentPage = 1\n            this.itemsPerPage = 10\n            this.searchTerm = ''\n        },\n        // async searchItems(type, searchTerm = '') {\n        //     this.currentType = type;\n        //     this.searchTerm = searchTerm;\n        //     // Assuming you have a function to perform the fetch; adjust accordingly\n        //     const response = await fetch(`/admin/channels/search/${type}?search=${searchTerm}`);\n        //     const data = await response.json();\n        //     this.items = data.items;\n        // },\n        async fetchItems(type) {\n            this.currentType = type\n            if (this.currentType === 'mistStream') {\n                // retrieve all mistStreams paginated.\n                // Can Vue search through the items?\n                const response = await fetch(`/mistStreams`)\n                this.items = await response.json()\n                if (this.selectedChannel.mist_stream_id) {\n                    this.activeItemId = this.selectedChannel.mist_stream_id\n                }\n            } else if (this.currentType === 'externalSource') {\n                // retrieve all externalSources\n                const response = await fetch(`/externalSources`)\n                this.items = await response.json()\n                if (this.selectedChannel.channel_external_source_id) {\n                    this.activeItemId = this.selectedChannel.channel_external_source_id\n                }\n            } else if (this.currentType === 'channelPlaylist') {\n                // retrieve all channelPlaylists\n                const response = await fetch(`/channelPlaylists`)\n                this.items = await response.json()\n                if (this.selectedChannel.channel_playlist_id) {\n                    this.activeItemId = this.selectedChannel.channel_playlist_id\n                }\n            }\n            // Assuming you have a function to perform the fetch; adjust accordingly\n            // const response = await fetch(`/admin/channels/search/${type}?search=${searchTerm}`);\n            // const data = await response.json();\n            // this.items = data.items;\n        },\n        async updateActiveItemId(id) {\n            this.activeItemId = id\n            if (this.currentType === 'mistStream') {\n                await this.setMistStream(this.selectedChannel, id)\n            } else if (this.currentType === 'channelPlaylist') {\n                await this.setChannelPlaylist(this.selectedChannel, id)\n            } else if (this.currentType === 'externalSource') {\n                await this.setExternalSource(this.selectedChannel, id)\n            }\n        },\n        // Add more actions as needed\n        // this next one should probably go in AdminChannelStore\n        async setPlaybackPriorityType(channel, priorityType) {\n            const dataToSend = {setPriorityType: priorityType}\n            try {\n                const response = await axios.post(`/admin/channels/${channel.id}/setPlaybackPriorityType`, dataToSend)\n                if (response.data.success) {\n                    this.fetchChannels()\n                    // Find the index of the updated channel in the channels array\n                    const index = this.channels.findIndex(c => c.id === channel.id)\n                    if (index !== -1) {\n                        // Update the channel in the channels array with the updated data\n                        this.channels[index] = response.data.channel\n                    }\n                }\n            } catch (error) {\n                console.error(error)\n            }\n        },\n        async setMistStream(channel, mistStreamId) {\n            const dataToSend = {mistStreamId: mistStreamId}\n            try {\n                const response = await axios.post(`/admin/channels/${channel.id}/setMistStream`, dataToSend)\n                if (response.data.success) {\n                    this.fetchChannels()\n                    // Find the index of the updated channel in the channels array\n                    const index = this.channels.findIndex(c => c.id === channel.id)\n                    if (index !== -1) {\n                        // Update the channel in the channels array with the updated data\n                        this.channels[index] = response.data.channel\n                    }\n                }\n            } catch (error) {\n                console.error(error)\n            }\n        },\n        async setChannelPlaylist(channel, channelPlaylistId) {\n            const dataToSend = {channelPlaylistId: channelPlaylistId}\n            try {\n                const response = await axios.post(`/admin/channels/${channel.id}/setChannelPlaylist`, dataToSend)\n                if (response.data.success) {\n                    this.fetchChannels()\n                    // Find the index of the updated channel in the channels array\n                    const index = this.channels.findIndex(c => c.id === channel.id)\n                    if (index !== -1) {\n                        // Update the channel in the channels array with the updated data\n                        this.channels[index] = response.data.channel\n                    }\n                }\n            } catch (error) {\n                console.error(error)\n            }\n        },\n        async setExternalSource(channel, externalSourceId) {\n            const dataToSend = {mistStreamId: externalSourceId}\n            try {\n                const response = await axios.post(`/admin/channels/${channel.id}/setExternalSource`, dataToSend)\n                if (response.data.success) {\n                    this.fetchChannels()\n                    // Find the index of the updated channel in the channels array\n                    const index = this.channels.findIndex(c => c.id === channel.id)\n                    if (index !== -1) {\n                        // Update the channel in the channels array with the updated data\n                        this.channels[index] = response.data.channel\n                    }\n                }\n            } catch (error) {\n                console.error(error)\n            }\n        },\n        nextPage() {\n            const totalModalPages = Math.ceil(this.items.length / this.itemsPerPage)\n            if (this.currentPage < totalModalPages) this.currentPage++\n        },\n        prevPage() {\n            if (this.currentPage > 1) this.currentPage--\n        },\n        setPage(page) {\n            this.currentPage = page\n        },\n        nextChannelsPage() {\n            const totalModalPages = Math.ceil(this.channels.length / this.itemsPerChannelsPage)\n            if (this.currentChannelsPage < totalModalPages) this.currentChannelsPage++\n        },\n        prevChannelsPage() {\n            if (this.currentChannelsPage > 1) this.currentChannelsPage--\n        },\n        setChannelsPage(page) {\n            this.currentChannelsPage = page\n        },\n        ////// FIRST PLAY SETTINGS\n        /////////////////////////// admin/update-first-play-settings\n        async fetchFirstPlaySettings() {\n            const notificationStore = useNotificationStore();\n            try {\n                const response = await axios.post(`/admin/fetch-first-play-settings`);\n                if (response.data.success) {\n                    // Operation was a success\n                    this.firstPlaySettings = response.data.firstPlaySettings\n                    notificationStore.setToastNotification(response.data.message, 'success', 1500);\n                } else {\n                    // Handle logical errors even when the HTTP response was OK\n                    // Assuming 'status' and 'message' are part of the error response\n                    const { message, status } = response.data;\n                    let errorMessage = 'Failed to fetch First Play Settings due to a server error.';\n\n                    if (status === 'error' && message && message.fallbackMessages) {\n                        // Construct a more detailed error message based on validation feedback\n                        const validationMessages = Object.values(message.fallbackMessages)\n                            .map(msgs => msgs.join(' ')) // Join messages if there are multiple for one field\n                            .join('; '); // Separate field messages with semicolons\n\n                        errorMessage = validationMessages || errorMessage;\n                    }\n\n                    notificationStore.setToastNotification(errorMessage, 'error');\n                }\n            } catch (error) {\n                console.error(error);\n                notificationStore.setToastNotification('Failed to fetch First Play Settings due to a network or server error.', 'error');\n            }\n        },\n        async updateFirstPlaySettings() {\n            const notificationStore = useNotificationStore();\n\n            try {\n                const response = await axios.patch('/admin/update-first-play-settings', this.firstPlaySettings);\n\n                if (response.data.success) {\n                    // Operation was a success\n                    this.firstPlaySettings = response.data.firstPlaySettings;\n                    this.validationErrors = {}; // Clear any existing validation errors\n                    notificationStore.setToastNotification(response.data.message, 'success', 1500);\n                }\n                else if (!response.data.success) {\n                    // This block might not be necessary if your server correctly uses HTTP status codes for errors\n                    this.validationErrors = response.data.errors || {};\n                    notificationStore.setToastNotification(response.data.message, 'error');\n                     // Exit early since we've handled the error case\n                }\n            } catch (error) {\n                // Properly handle the error response\n                if (error.response && error.response.data) {\n                    // Server responded with a non-2xx status code\n                    console.log(\"Error response data:\", error.response.data);\n                    this.validationErrors = error.response.data.errors || {};\n                    const errorMessage = error.response.data.message || 'Failed to save First Play Settings due to a network or server error.';\n                    notificationStore.setToastNotification(errorMessage, 'error');\n                } else {\n                    // The request was made but no response was received or other errors occurred\n                    notificationStore.setToastNotification('Failed to save First Play Settings due to a network or server error.', 'error');\n                }\n            }\n        },\n        handleErrors(data) {\n            const notificationStore = useNotificationStore();\n            let errorMessage = 'Failed to save First Play Settings due to a server error.';\n\n            if (data.status === 'error') {\n                if (data.errors) {\n                    // Directly use the validation errors from the server response\n                    this.validationErrors = data.errors;\n                    errorMessage = \"Please check your input.\";\n                } else if (data.message) {\n                    // Use the message provided by the server as the error message\n                    errorMessage = data.message;\n                }\n\n                notificationStore.setToastNotification(errorMessage, 'error');\n            }\n        },\n        async fetchActiveStreams() {\n            const notificationStore = useNotificationStore();\n            this.fetchingActiveStreams = true\n            try {\n                const response = await axios.post(`/admin/fetch-active-streams`);\n                if (response.data.success) {\n                    // Operation was a success\n                    this.activeStreams = response.data.activeStreams\n                    notificationStore.setToastNotification(response.data.message, 'success', 1500);\n                    this.fetchingActiveStreams = false\n                } else {\n                    // Handle logical errors even when the HTTP response was OK\n                    // Assuming 'status' and 'message' are part of the error response\n                    const { message, status } = response.data;\n                    let errorMessage = 'Failed to fetch active streams due to a server error.';\n\n                    if (status === 'error' && message && message.fallbackMessages) {\n                        // Construct a more detailed error message based on validation feedback\n                        const validationMessages = Object.values(message.fallbackMessages)\n                            .map(msgs => msgs.join(' ')) // Join messages if there are multiple for one field\n                            .join('; '); // Separate field messages with semicolons\n\n                        errorMessage = validationMessages || errorMessage;\n                    }\n\n                    notificationStore.setToastNotification(errorMessage, 'error');\n                    this.fetchingActiveStreams = false\n                }\n            } catch (error) {\n                console.error(error);\n                notificationStore.setToastNotification('Failed to fetch Active Streams due to a network or server error.', 'error');\n                this.fetchingActiveStreams = false\n            }\n        },\n        async setActiveStreamAsFirstPlay(activeStream) {\n            const videoPlayerStore = useVideoPlayerStore();\n            if (activeStream === 'test') {\n                this.firstPlaySettings.customVideoSource = videoPlayerStore.mistServerUri + 'hls/test/index.m3u8'\n                this.firstPlaySettings.customVideoSourceType = 'application/x-mpegURL'\n                this.firstPlaySettings.customVideoName = 'Test Stream'\n                this.firstPlaySettings.customMediaType = 'firstPlay'\n            } else {\n                // axios.post save firstPlaySettings and broadcast an event.\n                // this.\n                // showName, streamName, streamMimeType\n                this.firstPlaySettings.customVideoSource = videoPlayerStore.mistServerUri + 'hls/' + activeStream.streamName + '/index.m3u8'\n                this.firstPlaySettings.customVideoSourceType = activeStream.streamMimeType\n                this.firstPlaySettings.customVideoName = activeStream.showName\n                this.firstPlaySettings.customMediaType = 'firstPlay'\n            }\n            await this.updateFirstPlaySettings()\n            // broadcast\n            // source\n            // mediaType\n            // type\n            // name\n\n        }\n    },\n\n    // Getters (if needed)\n    getters: {\n        filteredItems: (state) => state.items, // Placeholder, adjust if you need actual filtering\n        currentItem: (state) => state.items.find((item) => item.id === state.activeItem),\n        // setHeader: (state) => state.modalHeader = state.currentType + ' list',\n        paginatedItems: (state) => {\n            const start = (state.currentPage - 1) * state.itemsPerPage\n            const end = start + state.itemsPerPage\n            return state.items.slice(start, end)\n        },\n        paginatedChannels: (state) => {\n            const start = (state.currentChannelsPage - 1) * state.itemsPerChannelsPage\n            const end = start + state.itemsPerChannelsPage\n            return state.channels.slice(start, end)\n        },\n        totalModalPages(state) {\n            return Math.ceil(state.items.length / state.itemsPerPage)\n        },\n        totalChannelsPages(state) {\n            return Math.ceil(state.channels.length / state.itemsPerChannelsPage)\n        },\n        // Getter to count active channels\n        activeChannelsCount: (state) => {\n            // Use Array.prototype.filter to keep only items with 'active' true,\n            // then use the length property to get the count\n            return state.channels.filter(channel => channel.active).length;\n        },\n    },\n})\n","import { onBeforeMount, onMounted } from 'vue'\nimport { useUserStore } from \"@/Stores/UserStore\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useVideoPlayerStore } from \"@/Stores/VideoPlayerStore\"\nimport { router } from '@inertiajs/vue3'\n\nexport function usePageSetup(pageName) {\n    const userStore = useUserStore()\n    const appSettingStore = useAppSettingStore()\n    const videoPlayerStore = useVideoPlayerStore()\n\n    appSettingStore.currentPage = pageName\n    appSettingStore.showFlashMessage = true\n    appSettingStore.pageIsHidden = false\n\n    if (userStore.isMobile || window.innerWidth < 1024 || appSettingStore.fullPage) {\n        appSettingStore.ott = 0;\n    } else {\n        appSettingStore.ott = 1;\n        appSettingStore.showOttButtons = true;\n    }\n\n    videoPlayerStore.makeVideoTopRight()\n\n    if (appSettingStore.pageReload) {\n        appSettingStore.pageReload = false\n        appSettingStore.pageWasReloaded = true\n        window.location.reload();\n    }\n    // Check if the URL contains query strings\n\n\n    // Only scroll into view if there are no query strings\n\n        // const topDiv = document.getElementById(\"topDiv\")\n        // if (topDiv) {\n        //     topDiv.scrollIntoView()\n        // }\n        router.on('navigate', (event) => {\n            if (userStore.isMobile || window.innerWidth < 1024 || appSettingStore.fullPage) {\n                appSettingStore.ott = 0;\n            } else {\n                appSettingStore.ott = 1;\n            }\n            const hasQueryStrings = window.location.search !== '';\n            if (!hasQueryStrings || appSettingStore.shouldScrollToTop) {\n                requestAnimationFrame(() => {\n                    const topDiv = document.getElementById(\"topDiv\");\n                    if (topDiv) {\n                        topDiv.scrollIntoView({behavior: 'auto'});\n                    } else {\n                        window.scrollTo(0, 0);\n                    }\n                });\n            }\n            appSettingStore.shouldScrollToTop = false;\n        })\n    // Only update if we're not already on this page to avoid overwriting with the current URL\n    appSettingStore.setPrevUrl()\n    appSettingStore.showOttButtons = true\n    appSettingStore.noLayout = false\n\n    // router.reload()\n\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".stream-image .w-40{transition:transform .3s ease-in-out}.stream-image:hover .w-40{transform:scale(1.05)}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/Components/Pages/Admin/Settings/FirstPlayVideoSourceSelector.vue\"],\"names\":[],\"mappings\":\"AAqMA,oBACE,oCACF,CAEA,0BACE,qBACF\",\"sourcesContent\":[\"<template>\\n  <div>\\n    <form class=\\\"px-4 pb-4\\\" @submit.prevent=\\\"submit\\\">\\n      <h2 class=\\\"text-2xl font-bold mb-4\\\">First Play Video Source</h2>\\n      <button @click.prevent=\\\"clearFirstPlayCacheData\\\"\\n              class=\\\"btn btn-warning btn-sm mb-4\\\">\\n        Clear First Play Data Cache\\n      </button>\\n      <!-- Toggle -->\\n      <div class=\\\"form-control mt-4\\\">\\n        <label class=\\\"label cursor-pointer flex justify-start items-center space-x-3 mb-2\\\">\\n          <span class=\\\"label-text\\\">Use Custom First Play Video</span>\\n          <input type=\\\"checkbox\\\" ref=\\\"useCustomVideoCheckbox\\\" class=\\\"toggle toggle-primary bg-white dark:bg-gray-800 dark:text-white\\\"\\n                 v-model=\\\"adminStore.firstPlaySettings.useCustomVideo\\\" @click=\\\"blurCheckbox\\\"/>\\n        </label>\\n        <!-- Display error for useCustomVideo if exists -->\\n        <div v-if=\\\"adminStore.validationErrors['useCustomVideo']\\\" class=\\\"text-xs text-red-600 mt-1\\\">\\n          {{ adminStore.validationErrors['useCustomVideo'][0] }}\\n        </div>\\n      </div>\\n\\n      <!-- Custom Video Inputs -->\\n      <div v-if=\\\"adminStore?.firstPlaySettings?.useCustomVideo\\\" class=\\\"space-y-3\\\">\\n\\n        <div class=\\\"space-y-3\\\">\\n          <!-- First Play Video Source -->\\n          <div class=\\\"mb-6\\\" v-if=\\\"adminStore.firstPlaySettings\\\">\\n            <label for=\\\"customVideoSource\\\"\\n                   class=\\\"block mb-2 uppercase font-bold text-xs text-gray-700 dark:text-gray-300\\\">\\n              First Play Video Source\\n            </label>\\n            <input v-model=\\\"adminStore.firstPlaySettings.customVideoSource\\\" class=\\\"input input-bordered w-full bg-white dark:bg-gray-800 dark:text-white\\\"\\n                   id=\\\"first_play_video_source\\\">\\n            <!-- Display error for videoSource if exists -->\\n            <div v-if=\\\"adminStore.validationErrors['customVideoSource']\\\" class=\\\"text-xs text-red-600 mt-1 bg-white dark:bg-gray-800 dark:text-white\\\">\\n              {{ adminStore.validationErrors['customVideoSource'][0] }}\\n            </div>\\n            <span class=\\\"text-xs\\\">e.g., https://mist.nottv.io/hls/test/index.m3u8</span>\\n          </div>\\n\\n          <!-- First Play Video Source Type -->\\n          <div class=\\\"mb-6\\\" v-if=\\\"adminStore.firstPlaySettings\\\">\\n            <label for=\\\"customVideoSourceType\\\"\\n                   class=\\\"block mb-2 uppercase font-bold text-xs text-gray-700 dark:text-gray-300\\\">\\n              First Play Video Source Type\\n            </label>\\n            <input v-model=\\\"adminStore.firstPlaySettings.customVideoSourceType\\\" class=\\\"input input-bordered w-full bg-white dark:bg-gray-800 dark:text-white\\\"\\n                   id=\\\"first_play_video_source_type\\\">\\n            <!-- Display error for videoSourceType if exists -->\\n            <div v-if=\\\"adminStore.validationErrors['customVideoSourceType']\\\" class=\\\"text-xs text-red-600 mt-1\\\">\\n              {{ adminStore.validationErrors['customVideoSourceType'][0] }}\\n            </div>\\n            <span class=\\\"text-xs\\\">e.g., video/mp4 or application/x-mpegURL</span>\\n          </div>\\n\\n          <!-- First Play Video Name -->\\n          <div class=\\\"mb-6\\\" v-if=\\\"adminStore.firstPlaySettings\\\">\\n            <label for=\\\"customVideoName\\\"\\n                   class=\\\"block mb-2 uppercase font-bold text-xs text-gray-700 dark:text-gray-300\\\">\\n              First Play Video Name\\n            </label>\\n            <input v-model=\\\"adminStore.firstPlaySettings.customVideoName\\\" class=\\\"input input-bordered w-full bg-white dark:bg-gray-800 dark:text-white\\\"\\n                   id=\\\"first_play_video_name\\\">\\n            <!-- Display error for videoName if exists -->\\n            <div v-if=\\\"adminStore.validationErrors['customVideoName']\\\" class=\\\"text-xs text-red-600 mt-1\\\">\\n              {{ adminStore.validationErrors['customVideoName'][0] }}\\n            </div>\\n          </div>\\n        </div>\\n\\n\\n\\n        <div  class=\\\"space-y-3 pt-6 mb-12\\\">\\n          <div class=\\\"test-stream\\\">\\n            <label for=\\\"customVideoName\\\"\\n                   class=\\\"block mb-2 uppercase font-bold text-xs text-gray-700 dark:text-gray-300\\\">\\n              Test Stream\\n            </label>\\n            <div class=\\\"mb-2 text-xs\\\">Note: Requires a stream with the name 'test'</div>\\n            <div @click.prevent=\\\"adminStore.setActiveStreamAsFirstPlay('test')\\\"\\n                 class=\\\"stream-image w-40 gap-2 break-words hover:cursor-pointer hover:text-blue-500 relative group\\\">\\n              <img src=\\\"/storage/images/EBU_Colorbars.svg.png\\\" alt=\\\"\\\" :class=\\\"`skeleton w-40 h-40 object-cover rounded-xl`\\\"/>\\n              <!-- Overlay div for dimming effect -->\\n              <div class=\\\"absolute inset-0 bg-black bg-opacity-0 transition-opacity duration-300 rounded-xl group-hover:bg-opacity-50 pl-1\\\"></div>\\n              <div class=\\\"absolute inset-0 flex items-center justify-center opacity-50 group-hover:opacity-100 pl-1\\\">\\n                <span class=\\\"text-white text-xl font-bold\\\">Test Bars and Music</span>\\n              </div>\\n            </div>\\n\\n          </div>\\n\\n          <div v-if=\\\"adminStore.fetchingActiveStreams\\\" class=\\\"flex w-full pt-6 justify-center items-center gap-4\\\">\\n            <span class=\\\"loading loading-spinner loading-lg text-info\\\"></span>\\n            Loading Active Streams ...\\n          </div>\\n\\n          <div v-else class=\\\"active-streams pt-4\\\">\\n            <label for=\\\"customVideoName\\\"\\n                   class=\\\"block mb-2 uppercase font-bold text-xs text-gray-700 dark:text-gray-300\\\">\\n              Active Streams\\n            </label>\\n            <div class=\\\"flex flex-row flex-wrap gap-3\\\">\\n              <div v-for=\\\"activeStream in adminStore.activeStreams\\\"\\n                   :key=\\\"activeStream.showId\\\"\\n                   @click.prevent=\\\"adminStore.setActiveStreamAsFirstPlay(activeStream)\\\"\\n                   class=\\\"stream-image w-40 break-words hover:cursor-pointer hover:text-blue-500 relative group\\\">\\n                <SingleImage :image=\\\"activeStream.showImage\\\" :alt=\\\"`show image`\\\" :class=\\\"`w-40 h-40 object-cover rounded-xl`\\\"/>\\n                <!-- Overlay div for dimming effect -->\\n                <div class=\\\"absolute inset-0 bg-black bg-opacity-0 transition-opacity duration-300 rounded-xl group-hover:bg-opacity-50\\\"></div>\\n                <div class=\\\"absolute inset-0 flex items-center justify-center opacity-50 group-hover:opacity-100 pl-1\\\">\\n                  <span class=\\\"text-white text-xl font-bold\\\">{{ activeStream.showName }}</span>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n\\n        </div>\\n\\n      </div>\\n\\n      <!-- Channel Dropdown -->\\n      <div v-else class=\\\"\\\">\\n        <div class=\\\"channel-selector\\\" v-if=\\\"adminStore.firstPlaySettings\\\">\\n          <label for=\\\"channelId\\\" class=\\\"label block mb-2 uppercase font-bold text-xs text-gray-700 dark:text-gray-300\\\">Select\\n            Channel</label>\\n          <select v-model=\\\"adminStore.firstPlaySettings.channelId\\\" class=\\\"select select-bordered w-full bg-white dark:bg-gray-800 dark:text-white\\\"\\n                  id=\\\"channel_id\\\">\\n            <option disabled value=\\\"\\\">Select a channel</option>\\n            <option v-for=\\\"channel in channelStore.activeChannels\\\" :key=\\\"channel.id\\\" :value=\\\"channel.id\\\" class=\\\" bg-white dark:bg-gray-800 dark:text-white\\\">{{\\n                channel.name\\n              }}\\n            </option>\\n          </select>\\n          <!-- Display error for channelId if exists -->\\n          <div v-if=\\\"adminStore.validationErrors['channelId']\\\" class=\\\"text-xs text-red-600 mt-1\\\">\\n            {{ adminStore.validationErrors['channelId'][0] }}\\n          </div>\\n        </div>\\n      </div>\\n\\n    </form>\\n\\n\\n  </div>\\n</template>\\n<script setup>\\nimport { ref, onMounted, watch } from 'vue'\\n// import { useForm } from '@inertiajs/vue3'\\nimport { useNotificationStore } from '@/Stores/NotificationStore'\\nimport { useAdminStore } from '@/Stores/AdminStore'\\nimport { useChannelStore } from '@/Stores/ChannelStore'\\nimport { router } from '@inertiajs/vue3'\\nimport SingleImage from '@/Components/Global/Multimedia/SingleImage.vue'\\n\\nconst notificationStore = useNotificationStore()\\nconst adminStore = useAdminStore()\\nconst channelStore = useChannelStore()\\n\\n// let form = useForm({\\n//   useCustomVideo: Boolean,\\n//   customVideoSource: '',\\n//   customVideoSourceType: '',\\n//   customVideoName: '',\\n//   channelId: '',\\n// })\\n\\nonMounted(async () => {\\n  await channelStore.getChannels()\\n  await adminStore.fetchFirstPlaySettings()\\n})\\n\\nconst useCustomVideoCheckbox = ref(null)\\n\\nconst blurCheckbox = () => {\\n  if (useCustomVideoCheckbox.value) {\\n    useCustomVideoCheckbox.value.blur()\\n  }\\n}\\n\\nconst selectedChannelId = ref('')\\n\\nlet clearFirstPlayCacheData = () => {\\n  router.post(route('admin.clear-first-play-data-cache'))\\n  const topDiv = document.getElementById('topDiv')\\n  topDiv.scrollIntoView()\\n}\\n\\n// Watch for changes in audio level\\nwatch(() => adminStore?.firstPlaySettings?.useCustomVideo, newCustomVideoSetting => {\\n  if (newCustomVideoSetting) {\\n    adminStore.fetchActiveStreams()\\n    console.log('fetch active streams')\\n  }\\n}, {immediate: true})\\n\\n</script>\\n<style>\\n.stream-image .w-40 {\\n  transition: transform 0.3s ease-in-out;\\n}\\n\\n.stream-image:hover .w-40 {\\n  transform: scale(1.05); /* Scales up the image to 105% of its original size on hover */\\n}\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".copied-message[data-v-844ea7ee]{margin-left:8px}.admin-container[data-v-844ea7ee]{display:flex}.sticky-sidebar[data-v-844ea7ee]{background-color:#f7fafc;flex-basis:200px;height:100vh;padding:20px;position:-webkit-sticky;position:sticky;top:0}.action-button[data-v-844ea7ee]{background-color:#4a5568;border:none;border-radius:4px;color:#fff;cursor:pointer;margin-bottom:10px;padding:10px;text-align:left;width:100%}.action-button[data-v-844ea7ee]:hover{background-color:#2d3748}.action-button.save-notes[data-v-844ea7ee]{background-color:#1d4ed8}.action-button.save-notes[data-v-844ea7ee]:hover{background-color:#1e40af}.main-actions[data-v-844ea7ee]{flex-grow:1;padding:20px}@media (max-width:768px){.admin-container[data-v-844ea7ee]{flex-direction:column}.sticky-sidebar[data-v-844ea7ee]{height:auto;position:relative}}.actions-group[data-v-844ea7ee]{margin-bottom:20px}.group-title[data-v-844ea7ee]{color:#4a5568;font-size:1.25rem;margin-bottom:10px}.action-button[data-v-844ea7ee]{display:block;margin-bottom:8px}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/Pages/Admin/Settings.vue\"],\"names\":[],\"mappings\":\"AAo8BA,iCACE,eAEF,CAEA,kCACE,YACF,CAEA,iCAME,wBAAyB,CALzB,gBAAiB,CAGjB,YAAa,CACb,YAAa,CAHb,uBAAgB,CAAhB,eAAgB,CAChB,KAIF,CAEA,gCAKE,wBAAyB,CAGzB,WAAY,CACZ,iBAAkB,CAHlB,UAAY,CAIZ,cAAe,CANf,kBAAmB,CADnB,YAAa,CAIb,eAAgB,CALhB,UASF,CAEA,sCACE,wBACF,CAEA,2CACE,wBACF,CAEA,iDACE,wBACF,CAEA,+BACE,WAAY,CACZ,YACF,CAGA,yBACE,kCACE,qBACF,CAEA,iCAEE,WAAY,CADZ,iBAEF,CACF,CAEA,gCACE,kBACF,CAEA,8BAEE,aAAc,CACd,iBAAkB,CAFlB,kBAGF,CAEA,gCACE,aAAc,CACd,iBAEF\",\"sourcesContent\":[\"<template>\\n\\n  <Head :title=\\\"`Administrative Settings`\\\"/>\\n\\n  <div id=\\\"topDiv\\\" class=\\\"place-self-center flex flex-col gap-y-3\\\">\\n    <div\\n        class=\\\"w-fit lg:w-3/4 left-0 right-0 mx-auto bg-white dark:bg-gray-800 rounded text-black dark:text-gray-50 mt-6 p-5\\\">\\n\\n      <Message v-if=\\\"appSettingStore.showFlashMessage\\\" :flash=\\\"$page.props.flash\\\"/>\\n\\n      <header>\\n        <div class=\\\"flex justify-between mb-3\\\">\\n          <div class=\\\"mb-4\\\">\\n            <h1 class=\\\"text-3xl font-semibold\\\">Administrative Settings</h1>\\n          </div>\\n          <div>\\n            <div>\\n              <button\\n                  @click=\\\"appSettingStore.btnRedirect('/dashboard')\\\"\\n                  class=\\\"bg-black hover:bg-gray-800 text-white font-semibold ml-2 mt-2 px-4 py-2 rounded disabled:bg-gray-400 h-max w-max\\\"\\n              >Dashboard\\n              </button>\\n            </div>\\n          </div>\\n        </div>\\n      </header>\\n\\n      <ServerTime/>\\n\\n\\n      <div class=\\\"admin-container\\\">\\n        <div class=\\\"sticky-sidebar\\\">\\n          <button @click=\\\"appSettingStore.btnRedirect('/admin/channels')\\\"\\n                  class=\\\"action-button\\\"\\n                  :class=\\\"disabledButtonClasses\\\"\\n                  :disabled=\\\"secureNotesOpen || firstPlaySettingsOpen\\\">Channels</button>\\n\\n          <button @click=\\\"appSettingStore.btnRedirect('/admin/schedule')\\\"\\n                  class=\\\"action-button\\\"\\n                  :class=\\\"disabledButtonClasses\\\"\\n                  :disabled=\\\"secureNotesOpen || firstPlaySettingsOpen\\\">Schedule</button>\\n\\n          <button @click=\\\"appSettingStore.btnRedirect('/invite_codes')\\\"\\n                  class=\\\"action-button\\\"\\n                  :class=\\\"disabledButtonClasses\\\"\\n                  :disabled=\\\"secureNotesOpen || firstPlaySettingsOpen\\\">Invite Codes</button>\\n\\n          <button v-if=\\\"!secureNotesOpen\\\"\\n                  @click=\\\"openSecureNotes\\\"\\n                  class=\\\"action-button\\\"\\n                  :class=\\\"disabledButtonClasses\\\"\\n                  :disabled=\\\"firstPlaySettingsOpen\\\">Secure Notes</button>\\n\\n          <button v-if=\\\"secureNotesOpen\\\"\\n                  @click=\\\"saveSecureNotes\\\"\\n                  class=\\\"action-button save-notes\\\"\\n                  :disabled=\\\"firstPlaySettingsOpen\\\">Save Notes</button>\\n\\n          <button v-if=\\\"!firstPlaySettingsOpen\\\"\\n                  @click=\\\"openFirstPlaySettings\\\"\\n                  class=\\\"action-button\\\"\\n                  :class=\\\"disabledButtonClasses\\\"\\n                  :disabled=\\\"secureNotesOpen\\\">First Play Settings</button>\\n\\n          <button v-if=\\\"firstPlaySettingsOpen\\\"\\n                  @click=\\\"updateFirstPlaySettings\\\"\\n                  class=\\\"action-button save-notes\\\"\\n                  :disabled=\\\"secureNotesOpen\\\">Save First Play</button>\\n\\n          <!-- Add the Schedule button here -->\\n        </div>\\n        <div v-if=\\\"!secureNotesOpen && !firstPlaySettingsOpen\\\" class=\\\"main-actions\\\">\\n          <div class=\\\"actions-group\\\">\\n            <h3 class=\\\"group-title\\\">Content Management</h3>\\n            <button @click=\\\"appSettingStore.btnRedirect(`/admin/episodes`)\\\" class=\\\"action-button\\\">All Episodes</button>\\n            <button @click=\\\"appSettingStore.btnRedirect(`/admin/shows`)\\\" class=\\\"action-button\\\">All Shows</button>\\n            <button @click=\\\"appSettingStore.btnRedirect(`/admin/movies`)\\\" class=\\\"action-button\\\">All Movies</button>\\n            <button @click=\\\"appSettingStore.btnRedirect(`/admin/images`)\\\" class=\\\"action-button\\\">Images</button>\\n            <button @click=\\\"appSettingStore.btnRedirect(`/videoupload`)\\\" class=\\\"action-button\\\">Video Upload</button>\\n            <button @click=\\\"appSettingStore.btnRedirect(`/movie/create`)\\\" class=\\\"action-button\\\">Add a Movie</button>\\n          </div>\\n\\n          <div class=\\\"actions-group\\\">\\n            <h3 class=\\\"group-title\\\">User & Team Management</h3>\\n            <button @click=\\\"appSettingStore.btnRedirect(`/users`)\\\" class=\\\"action-button\\\">All Users</button>\\n            <button @click=\\\"appSettingStore.btnRedirect(`/admin/teams`)\\\" class=\\\"action-button\\\">All Teams</button>\\n          </div>\\n\\n          <div class=\\\"actions-group\\\">\\n            <h3 class=\\\"group-title\\\">System & Backup</h3>\\n            <button @click=\\\"backupMistServerConfig\\\" class=\\\"action-button\\\">Backup MistServer Config</button>\\n            <button @click=\\\"restoreMistServerConfig\\\" class=\\\"action-button\\\">Restore MistServer Config</button>\\n            <button @click=\\\"restoreAllStreams\\\" class=\\\"action-button\\\">Restore All MistStreams</button>\\n            <button @click=\\\"getEpisodesFromEmbedCodes\\\" class=\\\"action-button\\\" :disabled=\\\"!getAllEpisodesButtonActive\\\">Get\\n              All Episode Videos From Embed Codes\\n            </button>\\n          </div>\\n\\n          <div class=\\\"actions-group\\\">\\n            <h3 class=\\\"group-title\\\">MistServer Management</h3>\\n            <button @click=\\\"appSettingStore.btnRedirect(`/admin/mistServerApi`)\\\" class=\\\"action-button\\\">MistServer API\\n              Test Page\\n            </button>\\n            <a :href=\\\"mistServerUriForManagementInterface.replace(/\\\\/$/, '') + ':4242'\\\" target=\\\"_blank\\\"\\n               class=\\\"action-button\\\">MistServer Management Interface</a>\\n          </div>\\n        </div>\\n        <div v-if=\\\"secureNotesOpen && !firstPlaySettingsOpen\\\" class=\\\"main-actions\\\">\\n\\n          <TabbableTextarea v-if=\\\"!secureNotesSaving\\\" :modelValue=\\\"secureNotes\\\" @update:modelValue=\\\"updateSecureNotes\\\" :placeholder=\\\"'Secure notes here'\\\"\\n                            class=\\\"w-full h-64\\\"/>\\n          <label class=\\\"text-xs ml-2 mb-1 text-gray-700\\\">Only you see these notes.</label>\\n          <div v-if=\\\"secureNotesSaving\\\"><span class=\\\"loading loading-bars loading-md\\\"></span> Saving...</div>\\n        </div>\\n        <div v-if=\\\"!secureNotesOpen && firstPlaySettingsOpen\\\" class=\\\"main-actions\\\">\\n            <FirstPlayVideoSourceSelector />\\n          <div v-if=\\\"firstPlaySettingsSaving\\\"><span class=\\\"loading loading-bars loading-md\\\"></span> Saving...</div>\\n        </div>\\n      </div>\\n\\n      <div>\\n        <form @submit.prevent=\\\"submit\\\">\\n          <div class=\\\"mb-6\\\">\\n            <label class=\\\"block mb-2 uppercase font-bold text-xs text-gray-700 dark:text-gray-300\\\"\\n                   for=\\\"default_country\\\"\\n            >\\n              COUNTRY\\n            </label>\\n            <div class=\\\"text-xs mb-2\\\">This should probably be baked into the code somewhere. Content, and especially\\n              News Stories, uploaded and managed to this instance of notTV is specific to this country. The system has a\\n              list of provinces, cities and postal codes based on the country. This system is designed to only manage\\n              one country. Eventually, each notTV country will be able to share their content and News Stories, with\\n              each other.\\n            </div>\\n\\n            <select disabled id=\\\"default_country\\\" v-model=\\\"form.default_country\\\"\\n                    class=\\\"disabled:bg-gray-100 cursor-not-allowed\\\">\\n              <option v-for=\\\"country in countries\\\" :key=\\\"country.id\\\" :value=\\\"country.id\\\">{{ country.name }}</option>\\n            </select>\\n\\n            <div v-if=\\\"form.errors.default_country\\\" v-text=\\\"form.errors.default_country\\\"\\n                 class=\\\"text-xs text-red-600 mt-1\\\"></div>\\n          </div>\\n          <div class=\\\"mb-6\\\">\\n            <label class=\\\"block mb-2 uppercase font-bold text-xs text-gray-700 dark:text-gray-300\\\"\\n                   for=\\\"cdn_endpoint\\\"\\n            >\\n              CDN ENDPOINT\\n            </label>\\n\\n            <input v-model=\\\"form.cdn_endpoint\\\"\\n                   class=\\\"border border-gray-400 p-2 w-full rounded-lg text-black\\\"\\n                   type=\\\"text\\\"\\n                   name=\\\"cdn_endpoint\\\"\\n                   id=\\\"cdn_endpoint\\\"\\n            >\\n            <div v-if=\\\"form.errors.cdn_endpoint\\\" v-text=\\\"form.errors.cdn_endpoint\\\"\\n                 class=\\\"text-xs text-red-600 mt-1\\\"></div>\\n          </div>\\n          <div class=\\\"mb-6\\\">\\n            <label class=\\\"block mb-2 uppercase font-bold text-xs text-gray-700 dark:text-gray-300\\\"\\n                   for=\\\"cloud_folder\\\"\\n            >\\n              CLOUD FOLDER\\n            </label>\\n\\n            <div class=\\\"flex flex-row\\\">\\n              <span class=\\\"pt-2 mr-2\\\">/ </span>\\n              <input v-model=\\\"form.cloud_folder\\\"\\n                     class=\\\"border border-gray-400 p-2 w-full rounded-lg text-black\\\"\\n                     type=\\\"text\\\"\\n                     name=\\\"cloud_folder\\\"\\n                     id=\\\"cloud_folder\\\"\\n              >\\n            </div>\\n            <span\\n                class=\\\"text-xs\\\">NOTE: The forward slash is already entered in the backend. Just type the folder name.</span>\\n\\n            <div v-if=\\\"form.errors.cloud_folder\\\" v-text=\\\"form.errors.cloud_folder\\\"\\n                 class=\\\"text-xs text-red-600 mt-1\\\"></div>\\n          </div>\\n\\n          <div class=\\\"mb-6\\\">\\n            <label class=\\\"block mb-2 uppercase font-bold text-xs text-gray-700 dark:text-gray-300\\\"\\n                   for=\\\"cloud_folder\\\"\\n            >\\n              CLOUD PRIVATE FOLDER\\n            </label>\\n\\n            <div class=\\\"flex flex-row\\\">\\n              <span class=\\\"pt-2 mr-2\\\">/ </span>\\n              <input v-model=\\\"form.cloud_private_folder\\\"\\n                     class=\\\"border border-gray-400 p-2 w-full rounded-lg text-black\\\"\\n                     type=\\\"text\\\"\\n                     name=\\\"cloud_private_folder\\\"\\n                     id=\\\"cloud_private_folder\\\"\\n              >\\n            </div>\\n            <span\\n                class=\\\"text-xs\\\">NOTE: The forward slash is already entered in the backend. Just type the folder name.</span>\\n            <br />\\n            <span class=\\\"text-xs\\\">EXTRA NOTE: This folder is where creator video uploads get stored from the Video Upload Page.</span>\\n\\n            <div v-if=\\\"form.errors.cloud_private_folder\\\" v-text=\\\"form.errors.cloud_private_folder\\\"\\n                 class=\\\"text-xs text-red-600 mt-1\\\"></div>\\n          </div>\\n\\n          <UploadNewsData />\\n\\n          <div class=\\\"mb-6\\\">\\n            <label class=\\\"block mb-2 uppercase font-bold text-xs text-gray-700 dark:text-gray-300\\\"\\n                   for=\\\"mist_server_uri\\\"\\n            >\\n              MIST SERVER URI\\n            </label>\\n            <div class=\\\"text-xs mb-2\\\">This is the primary mist server. Right now we don't have a load balancer. This URI\\n              is used for playback. The .env holds the settings for connecting to the MistServer API.\\n            </div>\\n\\n            <div class=\\\"flex flex-row\\\">\\n              <input v-model=\\\"form.mist_server_uri\\\"\\n                     class=\\\"border border-gray-400 p-2 w-full rounded-lg text-black\\\"\\n                     type=\\\"text\\\"\\n                     name=\\\"mist_server_uri\\\"\\n                     id=\\\"mist_server_uri\\\"\\n              >\\n            </div>\\n            <div class=\\\"text-xs mb-2\\\">e.g., https://mist.nottv.io/ or http://localhost:8080/</div>\\n\\n            <div v-if=\\\"form.errors.mist_server_uri\\\" v-text=\\\"form.errors.mist_server_uri\\\"\\n                 class=\\\"text-xs text-red-600 mt-1\\\"></div>\\n          </div>\\n\\n          <div class=\\\"mb-6\\\">\\n            <label class=\\\"block mb-2 uppercase font-bold text-xs text-gray-700 dark:text-gray-300\\\"\\n                   for=\\\"mist_server_rtmp_uri\\\"\\n            >\\n              MIST SERVER RTMP URI\\n            </label>\\n            <div class=\\\"text-xs mb-2\\\">This is the address users will push their streams to.</div>\\n\\n            <div class=\\\"flex flex-row\\\">\\n              <input v-model=\\\"form.mist_server_rtmp_uri\\\"\\n                     class=\\\"border border-gray-400 p-2 w-full rounded-lg text-black\\\"\\n                     type=\\\"text\\\"\\n                     name=\\\"mist_server_rtmp_uri\\\"\\n                     id=\\\"mist_server_rtmp_uri\\\"\\n              >\\n            </div>\\n            <div class=\\\"text-xs mb-2\\\">e.g., rtmp://stream.not.tv/ or rtmp://localhost/</div>\\n\\n            <div v-if=\\\"form.errors.mist_server_rtmp_uri\\\" v-text=\\\"form.errors.mist_server_rtmp_uri\\\"\\n                 class=\\\"text-xs text-red-600 mt-1\\\"></div>\\n          </div>\\n\\n          <div class=\\\"mb-6\\\">\\n            <label class=\\\"block mb-2 uppercase font-bold text-xs text-gray-700 dark:text-gray-300\\\"\\n                   for=\\\"mist_server_automated_recording_folder\\\"\\n            >\\n              MIST SERVER RECORDING FOLDER - AUTOMATED RECORDINGS\\n            </label>\\n            <div class=\\\"text-xs mb-2\\\"></div>\\n\\n            <div class=\\\"flex flex-row\\\">\\n              <span class=\\\"pt-2 mr-2\\\">/ </span>\\n              <input v-model=\\\"form.mist_server_automated_recording_folder\\\"\\n                     class=\\\"border border-gray-400 p-2 w-full rounded-lg text-black\\\"\\n                     type=\\\"text\\\"\\n                     name=\\\"mist_server_automated_recording_folder\\\"\\n                     id=\\\"mist_server_automated_recording_folder\\\"\\n              >\\n            </div>\\n            <span\\n                class=\\\"text-xs\\\">NOTE: The forward slash is already entered in the backend. Just type the folder name.</span>\\n\\n            <div v-if=\\\"form.errors.mist_server_automated_recording_folder\\\" v-text=\\\"form.errors.mist_server_automated_recording_folder\\\"\\n                 class=\\\"text-xs text-red-600 mt-1\\\"></div>\\n          </div>\\n\\n          <div class=\\\"mb-6\\\">\\n            <label class=\\\"block mb-2 uppercase font-bold text-xs text-gray-700 dark:text-gray-300\\\"\\n                   for=\\\"mist_server_user_recording_folder\\\"\\n            >\\n              MIST SERVER RECORDING FOLDER - USER RECORDINGS\\n            </label>\\n            <div class=\\\"text-xs mb-2\\\"></div>\\n\\n            <div class=\\\"flex flex-row\\\">\\n              <span class=\\\"pt-2 mr-2\\\">/ </span>\\n              <input v-model=\\\"form.mist_server_user_recording_folder\\\"\\n                     class=\\\"border border-gray-400 p-2 w-full rounded-lg text-black\\\"\\n                     type=\\\"text\\\"\\n                     name=\\\"mist_server_user_recording_folder\\\"\\n                     id=\\\"mist_server_user_recording_folder\\\"\\n              >\\n            </div>\\n            <span\\n                class=\\\"text-xs\\\">NOTE: The forward slash is already entered in the backend. Just type the folder name.</span>\\n            <br />\\n            <span\\n                class=\\\"text-xs\\\">SECOND NOTE: Recordings are saved in this PATH/$user->id/filename.ext</span>\\n\\n            <div v-if=\\\"form.errors.mist_server_user_recording_folder\\\" v-text=\\\"form.errors.mist_server_user_recording_folder\\\"\\n                 class=\\\"text-xs text-red-600 mt-1\\\"></div>\\n          </div>\\n\\n          <div class=\\\"mb-6\\\">\\n            <label class=\\\"block mb-2 uppercase font-bold text-xs text-gray-700 dark:text-gray-300\\\"\\n                   for=\\\"public_stats_url\\\"\\n            >\\n              PUBLIC STATS URL\\n            </label>\\n            <div class=\\\"text-xs mb-2\\\">The public dashboard of our grafana analytics. Note: https://not.tv/stats will redirect to this page.</div>\\n\\n            <div class=\\\"flex flex-row\\\">\\n              <input v-model=\\\"form.public_stats_url\\\"\\n                     class=\\\"border border-gray-400 p-2 w-full rounded-lg text-black\\\"\\n                     type=\\\"text\\\"\\n                     name=\\\"public_stats_url\\\"\\n                     id=\\\"public_stats_url\\\"\\n              >\\n            </div>\\n            <div class=\\\"text-xs mb-2\\\">e.g., https://stats.not.tv</div>\\n\\n            <div v-if=\\\"form.errors.public_stats_url\\\" v-text=\\\"form.errors.public_stats_url\\\"\\n                 class=\\\"text-xs text-red-600 mt-1\\\"></div>\\n          </div>\\n\\n          <SubscriptionSettings :errors=\\\"form.errors\\\"/>\\n\\n          <div class=\\\"mb-6 border-t-2 pt-4\\\">\\n\\n\\n\\n          </div>\\n\\n\\n          <!--          <div class=\\\"mb-6\\\">-->\\n          <!--            <label class=\\\"block mb-2 uppercase font-bold text-xs text-gray-700 dark:text-gray-300\\\"-->\\n          <!--                   for=\\\"mist_server_ip\\\"-->\\n          <!--            >-->\\n          <!--              MIST SERVER IP ADDRESS-->\\n          <!--            </label>-->\\n          <!--            <div class=\\\"text-xs mb-2\\\">This is used as part of the hash for Mist Stream Access Control.</div>-->\\n\\n          <!--            <div class=\\\"flex flex-row\\\">-->\\n          <!--              <input v-model=\\\"form.mist_server_ip\\\"-->\\n          <!--                     class=\\\"border border-gray-400 p-2 w-full rounded-lg text-black\\\"-->\\n          <!--                     type=\\\"text\\\"-->\\n          <!--                     name=\\\"mist_server_ip\\\"-->\\n          <!--                     id=\\\"mist_server_ip\\\"-->\\n          <!--              >-->\\n          <!--            </div>-->\\n          <!--            <div v-if=\\\"form.errors.mist_server_ip\\\" v-text=\\\"form.errors.mist_server_ip\\\"-->\\n          <!--                 class=\\\"text-xs text-red-600 mt-1\\\"></div>-->\\n          <!--          </div>-->\\n          <!--          <div class=\\\"mb-6\\\">-->\\n          <!--            <label class=\\\"block mb-2 uppercase font-bold text-xs text-gray-700 dark:text-gray-300\\\"-->\\n          <!--                   for=\\\"mist_server_api_url\\\"-->\\n          <!--            >-->\\n          <!--              MIST SERVER API URL-->\\n          <!--            </label>-->\\n\\n          <!--            <div class=\\\"flex flex-row\\\">-->\\n          <!--              <input v-model=\\\"form.mist_server_api_url\\\"-->\\n          <!--                     class=\\\"border border-gray-400 p-2 w-full rounded-lg text-black\\\"-->\\n          <!--                     type=\\\"text\\\"-->\\n          <!--                     name=\\\"mist_server_api_url\\\"-->\\n          <!--                     id=\\\"mist_server_api_url\\\"-->\\n          <!--              >-->\\n          <!--            </div>-->\\n          <!--            <div class=\\\"text-xs mb-2\\\">e.g., https://mist.nottv.io/api</div>-->\\n\\n          <!--            <div v-if=\\\"form.errors.mist_server_api_url\\\" v-text=\\\"form.errors.mist_server_api_url\\\"-->\\n          <!--                 class=\\\"text-xs text-red-600 mt-1\\\"></div>-->\\n          <!--          </div>-->\\n          <!--          <div class=\\\"mb-6\\\">-->\\n          <!--            <label class=\\\"block mb-2 uppercase font-bold text-xs text-gray-700 dark:text-gray-300\\\"-->\\n          <!--                   for=\\\"mist_server_username\\\"-->\\n          <!--            >-->\\n          <!--              MIST SERVER USERNAME-->\\n          <!--            </label>-->\\n\\n          <!--            <div class=\\\"flex flex-row\\\">-->\\n          <!--              <input v-model=\\\"form.mist_server_username\\\"-->\\n          <!--                     class=\\\"border border-gray-400 p-2 w-full rounded-lg text-black\\\"-->\\n          <!--                     type=\\\"text\\\"-->\\n          <!--                     name=\\\"mist_server_username\\\"-->\\n          <!--                     id=\\\"mist_server_username\\\"-->\\n          <!--              >-->\\n          <!--            </div>-->\\n          <!--            <div v-if=\\\"form.errors.mist_server_username\\\" v-text=\\\"form.errors.mist_server_username\\\"-->\\n          <!--                 class=\\\"text-xs text-red-600 mt-1\\\"></div>-->\\n          <!--          </div>-->\\n          <!--          <div class=\\\"mb-6\\\">-->\\n          <!--            <label class=\\\"block mb-2 uppercase font-bold text-xs text-gray-700 dark:text-gray-300\\\"-->\\n          <!--                   for=\\\"mist_server_password\\\"-->\\n          <!--            >-->\\n          <!--              MIST SERVER PASSWORD-->\\n          <!--            </label>-->\\n\\n          <!--            <div class=\\\"flex flex-row\\\">-->\\n          <!--              <input v-model=\\\"form.mist_server_password\\\"-->\\n          <!--                     class=\\\"border border-gray-400 p-2 w-full rounded-lg text-black\\\"-->\\n          <!--                     type=\\\"password\\\"-->\\n          <!--                     name=\\\"mist_server_password\\\"-->\\n          <!--                     id=\\\"mist_server_password\\\"-->\\n          <!--              >-->\\n          <!--            </div>-->\\n          <!--            <div v-if=\\\"form.errors.mist_server_password\\\" v-text=\\\"form.errors.mist_server_password\\\"-->\\n          <!--                 class=\\\"text-xs text-red-600 mt-1\\\"></div>-->\\n          <!--          </div>-->\\n\\n          <!--          <div class=\\\"mb-6\\\">-->\\n          <!--            <label class=\\\"block mb-2 uppercase font-bold text-xs text-gray-700 dark:text-gray-300\\\"-->\\n          <!--                   for=\\\"mist_server_password\\\"-->\\n          <!--            >-->\\n          <!--              MIST ACCESS CONTROL SECRET-->\\n          <!--            </label>-->\\n          <!--            <div class=\\\"text-xs mb-2\\\">A string used to create the access control urls for playing streams and videos from the mist server.</div>-->\\n          <!--            <div class=\\\"flex flex-row\\\">-->\\n          <!--              <input v-model=\\\"form.mist_access_control_secret\\\"-->\\n          <!--                     class=\\\"border border-gray-400 p-2 w-full rounded-lg text-black\\\"-->\\n          <!--                     type=\\\"text\\\"-->\\n          <!--                     name=\\\"mist_access_control_secret\\\"-->\\n          <!--                     id=\\\"mist_access_control_secret\\\"-->\\n          <!--              >-->\\n          <!--            </div>-->\\n          <!--            <div v-if=\\\"form.errors.mist_access_control_secret\\\" v-text=\\\"form.errors.mist_access_control_secret\\\"-->\\n          <!--                 class=\\\"text-xs text-red-600 mt-1\\\"></div>-->\\n          <!--          </div>-->\\n\\n          <div class=\\\"flex justify-end my-6 mr-6\\\">\\n            <JetValidationErrors class=\\\"mr-4\\\"/>\\n            <button\\n                @click.prevent=\\\"submit\\\"\\n                class=\\\"bg-blue-600 hover:bg-blue-500 text-white rounded py-2 px-4\\\"\\n                :disabled=\\\"form.processing\\\"\\n            >\\n              Save\\n            </button>\\n          </div>\\n\\n        </form>\\n\\n        <div class=\\\"card w-full mx-6 bg-neutral text-neutral-content\\\">\\n          <div class=\\\"card-body items-center text-center\\\">\\n            <h2 class=\\\"card-title\\\">Pushing to Production!</h2>\\n            <div class=\\\"mockup-code break-words\\\">\\n              <div class=\\\"commands\\\">\\n                <div v-for=\\\"command in commands\\\" :key=\\\"command.text\\\" class=\\\"command\\\">\\n                  <pre data-prefix=\\\"$\\\"><code>{{ command.text }}\\n                                    <button @click=\\\"copyCommand(command)\\\">\\n                    <font-awesome-icon icon=\\\"fa-clipboard\\\" class=\\\"ml-2 text-blue-500 hover:text-blue-700 hover:cursor-pointer\\\"/>\\n                  </button>\\n                  <span v-if=\\\"command.copied\\\" class=\\\"copied-message\\\">Copied!</span>\\n                  </code></pre>\\n                </div>\\n              </div>\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n<!--              <pre data-prefix=\\\"$\\\"><code>git checkout staging-->\\n<!--                <button @click=\\\"copyCommand('git checkout staging')\\\"><font-awesome-icon icon=\\\"fa-clipboard\\\" class=\\\"text-blue-500 hover:text-blue-700 hover:cursor-pointer\\\"/>-->\\n<!--                </button></code></pre>-->\\n<!--              <pre data-prefix=\\\"$\\\"><code>rm -rf public/js/*-->\\n<!--                <button @click=\\\"copyCommand('rm -rf public/js/*')\\\"><font-awesome-icon icon=\\\"fa-clipboard\\\" class=\\\"text-blue-500 hover:text-blue-700 hover:cursor-pointer\\\"/>-->\\n<!--                </button></code></pre>-->\\n<!--              <pre data-prefix=\\\"$\\\"><code>rm -rf public/css/*-->\\n<!--                <button @click=\\\"copyCommand('rm -rf public/css/*')\\\"><font-awesome-icon icon=\\\"fa-clipboard\\\" class=\\\"text-blue-500 hover:text-blue-700 hover:cursor-pointer\\\"/>-->\\n<!--                </button></code></pre>-->\\n<!--              <pre data-prefix=\\\"$\\\"><code>git merge development-->\\n<!--                <button @click=\\\"copyCommand('git merge development')\\\"><font-awesome-icon icon=\\\"fa-clipboard\\\" class=\\\"text-blue-500 hover:text-blue-700 hover:cursor-pointer\\\"/>-->\\n<!--                </button></code></pre>-->\\n<!--              <pre data-prefix=\\\"$\\\"><code>npm run production-->\\n<!--                <button @click=\\\"copyCommand('npm run production')\\\"><font-awesome-icon icon=\\\"fa-clipboard\\\" class=\\\"text-blue-500 hover:text-blue-700 hover:cursor-pointer\\\"/>-->\\n<!--                </button></code></pre>-->\\n<!--              <pre data-prefix=\\\"$\\\"><code>git add .-->\\n<!--                <button @click=\\\"copyCommand('git add .')\\\"><font-awesome-icon icon=\\\"fa-clipboard\\\" class=\\\"text-blue-500 hover:text-blue-700 hover:cursor-pointer\\\"/>-->\\n<!--                </button></code></pre>-->\\n<!--              <pre data-prefix=\\\"$\\\"><code>git commit -m \\\"merge development build production\\\"-->\\n<!--                <button @click=\\\"copyCommand('git commit -m \\\\'merge development build production\\\\'')\\\"><font-awesome-icon icon=\\\"fa-clipboard\\\" class=\\\"text-blue-500 hover:text-blue-700 hover:cursor-pointer\\\"/>-->\\n<!--                </button></code></pre>-->\\n<!--              <pre data-prefix=\\\"$\\\"><code>git push origin-->\\n<!--                <button @click=\\\"copyCommand('git push origin')\\\"><font-awesome-icon icon=\\\"fa-clipboard\\\" class=\\\"text-blue-500 hover:text-blue-700 hover:cursor-pointer\\\"/>-->\\n<!--                </button></code></pre>-->\\n<!--              <pre data-prefix=\\\"$\\\"><code>git checkout development-->\\n<!--                <button @click=\\\"copyCommand('git checkout development')\\\"><font-awesome-icon icon=\\\"fa-clipboard\\\" class=\\\"text-blue-500 hover:text-blue-700 hover:cursor-pointer\\\"/>-->\\n<!--                </button></code></pre>-->\\n<!--              -->\\n\\n\\n              <div role=\\\"alert\\\" class=\\\"mt-5 alert alert-info\\\">\\n                <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" fill=\\\"none\\\" viewBox=\\\"0 0 24 24\\\"\\n                     class=\\\"stroke-current shrink-0 w-6 h-6\\\">\\n                  <path stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" stroke-width=\\\"2\\\"\\n                        d=\\\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\\\"></path>\\n                </svg>\\n                <span>You may have to clear the cache on Cloudflare if you don't see all of the changes.</span>\\n              </div>\\n            </div>\\n\\n          </div>\\n        </div>\\n\\n        <div class=\\\"mt-8 w-full\\\">\\n          <h2 class=\\\"ml-4 mb-3\\\">Tasks To Do:</h2>\\n          <div class=\\\"mb-4\\\">\\n            <ol class=\\\"list-decimal pl-5 space-y-2\\\">\\n              <li class=\\\"bg-amber-800 text-white p-2 rounded-md shadow\\\">\\n                <input type=\\\"checkbox\\\" class=\\\"mr-2 checkbox checkbox-lg\\\"/>\\n                <span>Change Max Video Upload Size. Convert Bytes to KB, MB, GB, TB.</span>\\n                <ul class=\\\"list-disc pl-4 mt-1 text-sm\\\">\\n                  <li>Update Video Uploader with the size.</li>\\n                </ul>\\n              </li>\\n              <li class=\\\"bg-amber-800 text-white p-2 rounded-md shadow\\\"><input type=\\\"checkbox\\\"\\n                                                                               class=\\\"mr-2 checkbox checkbox-lg\\\"/>Content\\n                licenses\\n              </li>\\n              <li class=\\\"bg-amber-800 text-white p-2 rounded-md shadow\\\"><input type=\\\"checkbox\\\"\\n                                                                               class=\\\"mr-2 checkbox checkbox-lg\\\"/>Episode\\n                Statuses\\n              </li>\\n              <li class=\\\"bg-amber-800 text-white p-2 rounded-md shadow\\\"><input type=\\\"checkbox\\\"\\n                                                                               class=\\\"mr-2 checkbox checkbox-lg\\\"/>Show\\n                Statuses\\n              </li>\\n              <li class=\\\"bg-amber-800 text-white p-2 rounded-md shadow\\\">\\n                <input type=\\\"checkbox\\\" checked class=\\\"mr-2 checkbox checkbox-lg\\\"/>\\n                <span>Channels. Display list of channels. Click channel name to go to the channel playlist edit page.</span>\\n                <div class=\\\"mt-2 text-sm\\\">\\n                  <p>Grid style, 1 column mobile, 2 column tablet, 3 column lg, 4 column xl.</p>\\n                  <p>Rows: Times (next 24 hours) - can scroll up to 72 hours ahead or 72 hours back.</p>\\n                  <p>Columns: Days (next 7 days).</p>\\n                  <p>Need new Pages folder: Channels/Index, Channels/Create, Channels/Edit, ch/channelId (e.g.,\\n                    ch/01).</p>\\n                </div>\\n              </li>\\n            </ol>\\n          </div>\\n        </div>\\n\\n\\n\\n\\n          <div class=\\\"card w-full mx-6 bg-neutral text-neutral-content\\\">\\n              <div class=\\\"card-body items-center text-center\\\">\\n                  <div class=\\\"mockup-code break-words\\\">\\n                      <h1 class=\\\"pb-4\\\">First Time Setup from Clone</h1>\\n                      <pre data-prefix=\\\"$\\\"><code>unzip README.zip</code></pre>\\n\\n                      <h2 class=\\\"pt-4 pb-2\\\">Step-by-Step Instructions:</h2>\\n\\n                      <p class=\\\"py-3 text-left\\\">Recommend: Ubuntu 22.04 or Mac. If using Windows install WSL2, Docker Desktop and Ubuntu 22.04</p>\\n\\n                      <h3 class=\\\"my-3 text-left\\\">1. Install PHP 8.1</h3>\\n                      <pre data-prefix=\\\"1.1\\\"><code>sudo apt update</code></pre>\\n                      <pre data-prefix=\\\"1.2\\\"><code>sudo apt install software-properties-common ca-certificates lsb-release apt-transport-https -y</code></pre>\\n                      <pre data-prefix=\\\"1.3\\\"><code>sudo add-apt-repository ppa:ondrej/php</code></pre>\\n                      <p class=\\\"py-3 text-left\\\">NOTE: if Apache2 gets installed at this point then remove it to use Laravel Sail without conflicting ports.</p>\\n                      <pre data-prefix=\\\"1.4\\\"><code>sudo apt update</code></pre>\\n                      <pre data-prefix=\\\"1.5\\\"><code>sudo apt install php8.1 php8.1-cli php8.1-common php8.1-curl php8.1-xml php8.1-mbstring php8.1-zip</code></pre>\\n                      <pre data-prefix=\\\"1.6\\\"><code>php -v</code></pre>\\n\\n                      <h3 class=\\\"my-3 text-left\\\">2. Install Node.js and npm</h3>\\n                      <pre data-prefix=\\\"2.1\\\"><code>curl -fsSL https://deb.nodesource.com/setup_16.x | sudo -E bash -</code></pre>\\n                      <pre data-prefix=\\\"2.2\\\"><code>sudo apt-get install -y nodejs</code></pre>\\n                      <pre data-prefix=\\\"2.3\\\"><code>node -v</code></pre>\\n                      <pre data-prefix=\\\"2.4\\\"><code>npm -v</code></pre>\\n\\n                      <h3 class=\\\"my-3 text-left\\\">3. Install Composer and move it to a global command</h3>\\n                      <pre data-prefix=\\\"3.1\\\"><code>php -r \\\"copy('https://getcomposer.org/installer', 'composer-setup.php');\\\"</code></pre>\\n                      <pre data-prefix=\\\"3.2\\\"><code>php -r \\\"if (hash_file('SHA384', 'composer-setup.php') === '$(php -r \\\"echo trim(file_get_contents('https://composer.github.io/installer.sig'));\\\")') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;\\\"</code></pre>\\n                      <pre data-prefix=\\\"3.3\\\"><code>php composer-setup.php</code></pre>\\n                      <pre data-prefix=\\\"3.4\\\"><code>php -r \\\"unlink('composer-setup.php');\\\"</code></pre>\\n                      <pre data-prefix=\\\"3.5\\\"><code>sudo mv composer.phar /usr/local/bin/composer</code></pre>\\n                      <pre data-prefix=\\\"3.6\\\"><code>composer --version</code></pre>\\n\\n                      <h3 class=\\\"my-3 text-left\\\">4. Add Laravel Sail to your bash profile</h3>\\n                      <pre data-prefix=\\\"4.1\\\"><code>echo \\\"alias sail='[ -f sail ] && bash sail || bash vendor/bin/sail'\\\" >> ~/.bashrc</code></pre>\\n                      <pre data-prefix=\\\"4.2\\\"><code>source ~/.bashrc</code></pre>\\n\\n                      <h3 class=\\\"my-3 text-left\\\">5. Create an SSH key to access GitHub repo</h3>\\n                      <pre data-prefix=\\\"5.1\\\"><code>ssh-keygen -t rsa -b 4096 -C \\\"your.email@example.com\\\" -f /path/to/your_custom_filename</code></pre>\\n                      <pre data-prefix=\\\"5.2\\\"><code>eval \\\"$(ssh-agent -s)\\\"</code></pre>\\n                      <pre data-prefix=\\\"5.3\\\"><code>ssh-add ~/.ssh/id_rsa</code></pre>\\n                      <pre data-prefix=\\\"5.4\\\"><code>cat ~/.ssh/id_rsa.pub</code></pre>\\n                      <pre data-prefix=\\\"5.5\\\"><code># Copy the output and add it to your GitHub account under SSH keys</code></pre>\\n\\n                      <h3 class=\\\"my-3 text-left\\\">6. Clone repo</h3>\\n                      <pre data-prefix=\\\"6.1\\\"><code>git clone [repository URL]</code></pre>\\n                      <pre data-prefix=\\\"6.2\\\"><code>cd [repository-directory]</code></pre>\\n                      <pre data-prefix=\\\"6.3\\\"><code>git checkout development && git pull origin development</code></pre>\\n                      <pre data-prefix=\\\"6.4\\\"><code>git config --global user.name \\\"Your Name\\\"</code></pre>\\n                      <pre data-prefix=\\\"6.5\\\"><code>git config --global user.email \\\"your.email@example.com\\\"</code></pre>\\n\\n                      <h3 class=\\\"my-3 text-left\\\">7. Create the required database</h3>\\n                      <p class=\\\"mt-3 text-left\\\">NOTE: Laravel sail comes pre-configured with a database.</p>\\n                      <p class=\\\"mb-3 text-left\\\">database = nottvbeta, username = sail, password = password</p>\\n                      <pre data-prefix=\\\"7.1\\\"><code>mysql -u root -p</code></pre>\\n                      <pre data-prefix=\\\"7.2\\\"><code>CREATE DATABASE your_database_name;</code></pre>\\n\\n                      <h3 class=\\\"my-3 text-left\\\">8. Getting things ready</h3>\\n                      <pre data-prefix=\\\"8.1\\\"><code>Copy .env.example to .env</code></pre>\\n                      <pre data-prefix=\\\"8.2\\\"><code>cp .env.example .env</code></pre>\\n\\n                      <p class=\\\"my-3 text-left\\\">Ensure there is no APP_KEY in .env and run:</p>\\n                      <pre data-prefix=\\\"9.\\\"><code>sail artisan key:generate</code></pre>\\n\\n                      <h3 class=\\\"my-3 text-left\\\">10. Create the cache directories:</h3>\\n                      <p class=\\\"mt-3 text-left\\\">Ensure the correct folder/file permissions:</p>\\n                      <p class=\\\"mb-3 text-left\\\">sudo chown -R $USER:www-data storage && sudo chmod -R 775 storage</p>\\n                      <pre data-prefix=\\\"10.1\\\"><code>mkdir -p storage/framework/cache/data</code></pre>\\n                      <pre data-prefix=\\\"10.2\\\"><code>mkdir -p storage/framework/views</code></pre>\\n                      <pre data-prefix=\\\"10.3\\\"><code>mkdir -p storage/framework/sessions</code></pre>\\n\\n                      <h3 class=\\\"my-3 text-left\\\">Final steps:</h3>\\n                      <pre data-prefix=\\\"11.\\\"><code>Run: sail php artisan optimize:clear</code></pre>\\n                      <pre data-prefix=\\\"12.\\\"><code>Run: composer install</code></pre>\\n                      <pre data-prefix=\\\"13.\\\"><code>Run: composer update</code></pre>\\n                      <pre data-prefix=\\\"14.\\\"><code>Run: npm install</code></pre>\\n                      <pre data-prefix=\\\"15.\\\"><code>Run: sail up</code></pre>\\n                      <pre data-prefix=\\\"16.\\\"><code>Run: sail php artisan migrate</code></pre>\\n                      <pre data-prefix=\\\"17.1\\\"><code>Run This: sail php artisan db:seed (for testing)</code></pre>\\n                      <pre data-prefix=\\\"17.2\\\"><code>Or Run That: sail php artisan db:seed --class=FirstRunSeeder (seed the database without test data)</code></pre>\\n                      <pre data-prefix=\\\"18.\\\"><code>Run: sail php artisan slugs:update</code></pre>\\n                      <pre data-prefix=\\\"19.\\\"><code>Run: sail php artisan app:set-first-run-settings</code></pre>\\n\\n                      <h2 class=\\\"pt-8 pb-2\\\">If you have Composer, PHP 8.1, and Node.js installed:</h2>\\n                      <pre data-prefix=\\\"$\\\"><code>composer update</code></pre>\\n                      <pre data-prefix=\\\"$\\\"><code>sail up</code></pre>\\n                      <pre data-prefix=\\\"$\\\"><code>npx mix watch</code></pre>\\n                      <pre data-prefix=\\\"$\\\"><code>sail php artisan horizon</code></pre>\\n\\n                      <h2 class=\\\"py-4\\\">.env Settings</h2>\\n                      <pre data-prefix=\\\"\\\"><code>MISTSERVER_HOST=http://mistserver/api2</code></pre>\\n                      <pre data-prefix=\\\"\\\"><code>MISTSERVER_USERNAME=nottvadmin</code></pre>\\n                      <pre data-prefix=\\\"\\\"><code>MISTSERVER_PASSWORD=123</code></pre>\\n\\n                      <h2 class=\\\"py-4\\\">Admin Settings</h2>\\n                      <pre data-prefix=\\\"\\\"><code>MISTSERVER URI: http://localhost:8080/</code></pre>\\n                      <pre data-prefix=\\\"\\\"><code>MISTSERVER RTMP URI: rtmp://localhost/</code></pre>\\n\\n                      <h2 class=\\\"py-4\\\">Use These Tools:</h2>\\n                      <pre data-prefix=\\\"\\\"><code>http://localhost:4242 (MistServer)</code></pre>\\n                      <pre data-prefix=\\\"\\\"><code>http://localhost:8025 (Mailhog)</code></pre>\\n                      <pre data-prefix=\\\"\\\"><code>http://localhost/horizon (Horizon Job Queue)</code></pre>\\n                  </div>\\n              </div>\\n          </div>\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n      </div>\\n\\n    </div>\\n  </div>\\n  <PopUpModal id=\\\"AdminSettingsPopUpModal\\\">\\n    <template #header>\\n      {{ popUpModalTitle }}\\n    </template>\\n    <template #main>\\n      {{ popUpModalMessage }}\\n    </template>\\n  </PopUpModal>\\n</template>\\n\\n<script setup>\\nimport { router } from '@inertiajs/vue3'\\nimport { computed, nextTick, onMounted, onUnmounted, reactive, ref } from 'vue'\\nimport { useForm } from '@inertiajs/vue3'\\nimport { useClipboard } from '@vueuse/core'\\nimport { usePageSetup } from '@/Utilities/PageSetup'\\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\\nimport { useAdminStore } from '@/Stores/AdminStore'\\nimport JetValidationErrors from '@/Jetstream/ValidationErrors'\\nimport ServerTime from '@/Components/Pages/Admin/ServerTime'\\nimport Message from '@/Components/Global/Modals/Messages'\\nimport PopUpModal from '@/Components/Global/Modals/PopUpModal.vue'\\nimport TabbableTextarea from '@/Components/Global/TextEditor/TabbableTextarea.vue'\\nimport FirstPlayVideoSourceSelector from '@/Components/Pages/Admin/Settings/FirstPlayVideoSourceSelector.vue'\\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome'\\nimport UploadNewsData from '@/Pages/Admin/Settings/Elements/UploadNewsData.vue'\\nimport SubscriptionSettings from '@/Components/Pages/Admin/Settings/SubscriptionSettings.vue'\\n\\nusePageSetup('admin.settings')\\n\\nconst appSettingStore = useAppSettingStore()\\nconst adminStore = useAdminStore()\\n\\nconst { copy } = useClipboard()\\n\\nconst commands = reactive([\\n  { text: 'git checkout staging', copied: false },\\n  { text: 'rm -rf public/js/*', copied: false },\\n  { text: 'rm -rf public/css/*', copied: false },\\n  { text: 'git merge development', copied: false },\\n  { text: 'npm run production', copied: false },\\n  { text: 'git add .', copied: false },\\n  { text: 'git commit -m \\\"merge development build production\\\"', copied: false },\\n  { text: 'git push origin', copied: false },\\n  { text: 'git checkout development', copied: false },\\n]);\\n\\nfunction copyCommand(command) {\\n  copy(command.text);\\n  command.copied = true;\\n  setTimeout(() => {\\n    command.copied = false;\\n  }, 10000); // Hide the message after 10 second\\n}\\n\\nlet props = defineProps({\\n  id: Number,\\n  countries: Object,\\n  default_country: Number,\\n  cdn_endpoint: String,\\n  cloud_folder: String,\\n  cloud_private_folder: String,\\n  first_play_video_source: String,\\n  first_play_video_source_type: String,\\n  first_play_video_name: String,\\n  first_play_channel_id: Number,\\n  // mist_server_ip: String,\\n  mist_server_uri: String,\\n  mist_server_rtmp_uri: String,\\n  mist_server_automated_recording_folder: String,\\n  mist_server_user_recording_folder: String,\\n  public_stats_url: String,\\n  subscription_settings: Object,\\n  // mist_server_api_url: String,\\n  // mist_server_username: String,\\n  // mist_server_password: String,\\n  // mist_access_control_secret: String,\\n  messageType: String,\\n  currentSection: String,\\n})\\n\\nlet form = useForm({\\n  id: props.id,\\n  default_country: props.default_country,\\n  cdn_endpoint: props.cdn_endpoint,\\n  cloud_folder: props.cloud_folder,\\n  cloud_private_folder: props.cloud_private_folder,\\n  first_play_video_source: props.first_play_video_source,\\n  first_play_video_source_type: props.first_play_video_source_type,\\n  first_play_video_name: props.first_play_video_name,\\n  first_play_channel_id: props.first_play_channel_id,\\n  // mist_server_ip: props.mist_server_ip,\\n  mist_server_uri: props.mist_server_uri,\\n  mist_server_rtmp_uri: props.mist_server_rtmp_uri,\\n  mist_server_automated_recording_folder: props.mist_server_automated_recording_folder,\\n  mist_server_user_recording_folder: props.mist_server_user_recording_folder,\\n  public_stats_url: props.public_stats_url,\\n  subscription_settings: props.subscription_settings,\\n  // mist_server_api_url: props.mist_server_api_url,\\n  // mist_server_username: props.mist_server_username,\\n  // mist_server_password: props.mist_server_password,\\n  // mist_access_control_secret: props.mist_access_control_secret,\\n})\\n\\nconst countries = ref([])\\n\\nconst popUpModalTitle = ref('')\\nconst popUpModalMessage = ref('')\\n\\n// const topDiv = document.getElementById(\\\"topDiv\\\")\\n\\nonMounted(() => {\\n  countries.value = props.countries\\n  secureNotes.value = ''\\n  if (props.subscription_settings) {\\n    adminStore.settingsForm.subscriptionSettings = props.subscription_settings\\n  }\\n  if(props.currentSection === 'firstPlaySettings'){\\n    openFirstPlaySettings()\\n  }\\n})\\n\\nonUnmounted(() => {\\n  secureNotes.value = ''\\n})\\n\\nconst disabledButtonClasses = computed(() => ({\\n  'disabled:opacity-50 disabled:cursor-not-allowed': secureNotesOpen.value || firstPlaySettingsOpen.value,\\n}));\\n\\nconst firstPlaySettingsOpen = ref(false)\\nconst firstPlaySettingsSaving = ref(false)\\n\\nconst openFirstPlaySettings = () => {\\n  firstPlaySettingsOpen.value = true\\n  secureNotesOpen.value = false\\n}\\n\\nconst updateFirstPlaySettings = async () => {\\n  await adminStore.updateFirstPlaySettings();\\n\\n  // Check if there are any validation errors after the update attempt\\n  if (Object.keys(adminStore.validationErrors).length === 0) {\\n    // If there are no validation errors, it's safe to close the settings\\n    firstPlaySettingsOpen.value = false;\\n  }\\n  // If there are errors, the function ends without setting firstPlaySettingsOpen.value to false,\\n  // so the settings remain open for the user to see and correct the errors.\\n};\\n\\nconst secureNotesOpen = ref(false)\\nconst secureNotes = ref('')\\nconst secureNotesSaving = ref(false)\\n\\nconst openSecureNotes = async () => {\\n  secureNotesOpen.value = true\\n  firstPlaySettingsOpen.value = false\\n  // Fetch the encrypted notes from the server\\n  try {\\n    const response = await axios.get('/admin/secure-notes');\\n    secureNotes.value = response.data.content; // Assuming the server sends back decrypted data\\n  } catch (error) {\\n    console.error(\\\"Failed to fetch secure notes:\\\", error);\\n    // Handle error (e.g., show a message to the user)\\n  }\\n}\\n\\nconst updateSecureNotes = (modelValue) => {\\n  secureNotes.value = modelValue\\n}\\n\\nconst saveSecureNotes = async () => {\\n  try {\\n    secureNotesSaving.value = true\\n    await axios.put('/admin/secure-notes', { content: secureNotes.value });\\n    secureNotesOpen.value = false\\n    secureNotesSaving.value = false\\n  } catch (error) {\\n    console.error(\\\"Failed to save secure notes:\\\", \\\"An error occurred while saving the notes.\\\"); // Log a generic message\\n    // Optionally log the detailed error server-side, ensuring sensitive information is not exposed\\n    // Inform the user in a generic manner\\n    secureNotesOpen.value = false\\n    secureNotesSaving.value = false\\n    alert(\\\"We encountered an issue saving your notes. Please try again.\\\");\\n  }\\n}\\n\\nlet submit = () => {\\n  form.subscription_settings = adminStore.settingsForm.subscriptionSettings\\n  form.patch(route('admin.settings'))\\n  const topDiv = document.getElementById('topDiv')\\n  topDiv.scrollIntoView()\\n}\\n\\nlet getAllEpisodesButtonActive = ref(false)\\n\\nfunction getEpisodesFromEmbedCodes() {\\n  router.post('getVideosFromEmbedCodes')\\n  getAllEpisodesButtonActive = false\\n}\\n\\nconst backupMistServerConfig = async () => {\\n  // Optional: use confirm dialog to ensure the user wants to proceed with the backup\\n  if (confirm('Are you sure you want to backup the current Mist Server Config?')) {\\n    try {\\n      // Post request to initiate config backup\\n      const response = await axios.post('/mist-server/config-backup')\\n      console.log('Config backup successful:', response.data)\\n      popUpModalTitle.value = 'Backup MistServer Config Success'\\n      popUpModalMessage.value = response.data.message\\n      document.getElementById('AdminSettingsPopUpModal').showModal()\\n    } catch (error) {\\n      console.error('Error backing up config:', error)\\n      // Extract a more user-friendly message from the error object\\n      let errorMessage = \\\"An unexpected error occurred. Please try again later.\\\";\\n      if (error.response && error.response.data && error.response.data.message) {\\n        // Use the custom error message from the server if available\\n        errorMessage = error.response.data.message;\\n      } else if (error.message) {\\n        // Use a generic error message or the message from the error object\\n        errorMessage = error.message;\\n      }\\n      // Handle error, maybe notify the user that backup failed\\n      popUpModalTitle.value = 'Backup MistServer Config Error'\\n      popUpModalMessage.value = errorMessage\\n      document.getElementById('AdminSettingsPopUpModal').showModal()\\n    }\\n  } else {\\n    console.log('Config backup cancelled.')\\n  }\\n}\\n\\n\\nconst restoreMistServerConfig = async () => {\\n  // Use confirm dialog result to decide whether to proceed\\n  if (confirm('Are you sure you want to restore the Mist Server Config to the last saved version?')) {\\n    try {\\n      // Assuming there's a separate API endpoint or function for restoration\\n      const response = await axios.post('/mist-server/config-restore') // Adjust URL/path as necessary\\n      console.log('Config restoration successful:', response.data)\\n      popUpModalTitle.value = 'Restore MistServer Config Success'\\n      popUpModalMessage.value = response.data.message\\n      document.getElementById('AdminSettingsPopUpModal').showModal()\\n      // Handle success response\\n    } catch (error) {\\n      console.error('Error restoring config:', error)\\n      popUpModalTitle.value = 'Restore MistServer Config Error'\\n      popUpModalMessage.value = error\\n      document.getElementById('AdminSettingsPopUpModal').showModal()\\n      // Handle error\\n    }\\n  } else {\\n    console.log('Config restoration cancelled.')\\n  }\\n}\\n\\nasync function restoreAllStreams() {\\n  try {\\n    const response = await axios.post('/admin/mist-stream/restore-all-streams')\\n    // Handle success response\\n    console.log(response.data) // Log or handle the response data\\n    popUpModalTitle.value = 'Streams restored successfully.'\\n    popUpModalMessage.value = response.data.message\\n    document.getElementById('AdminSettingsPopUpModal').showModal()\\n  } catch (error) {\\n    console.error(error) // Log or handle error\\n    popUpModalTitle.value = 'Failed to restore streams.'\\n    popUpModalMessage.value = error\\n    document.getElementById('AdminSettingsPopUpModal').showModal()\\n  }\\n}\\n\\n\\n// Sample URL\\nconst mistServerUri = props.mist_server_uri ?? ''\\n\\n// Function to remove 's' from 'https'\\nfunction convertToHttp(url) {\\n  return url.replace('https://', 'http://')\\n}\\n\\n// Convert the URL and store it\\nconst mistServerUriForManagementInterface = ref(convertToHttp(mistServerUri))\\n\\n\\n</script>\\n<style scoped>\\n\\n.copied-message {\\n  margin-left: 8px; /* Adjust as needed */\\n  /* Add any additional styling here */\\n}\\n\\n.admin-container {\\n  display: flex;\\n}\\n\\n.sticky-sidebar {\\n  flex-basis: 200px;\\n  position: sticky;\\n  top: 0; /* Adjust based on header/nav height */\\n  height: 100vh;\\n  padding: 20px;\\n  background-color: #f7fafc;\\n}\\n\\n.action-button {\\n  display: block;\\n  width: 100%;\\n  padding: 10px;\\n  margin-bottom: 10px;\\n  background-color: #4a5568; /* Tailwind gray-700 */\\n  color: white;\\n  text-align: left;\\n  border: none;\\n  border-radius: 4px;\\n  cursor: pointer;\\n}\\n\\n.action-button:hover {\\n  background-color: #2d3748; /* Tailwind gray-800 */\\n}\\n\\n.action-button.save-notes {\\n  background-color: #1D4ED8; /* Tailwind blue-700 */\\n}\\n\\n.action-button.save-notes:hover {\\n  background-color: #1E40AF; /* Tailwind blue-800 */\\n}\\n\\n.main-actions {\\n  flex-grow: 1;\\n  padding: 20px;\\n}\\n\\n/* Responsive adjustments */\\n@media (max-width: 768px) {\\n  .admin-container {\\n    flex-direction: column;\\n  }\\n\\n  .sticky-sidebar {\\n    position: relative;\\n    height: auto;\\n  }\\n}\\n\\n.actions-group {\\n  margin-bottom: 20px;\\n}\\n\\n.group-title {\\n  margin-bottom: 10px;\\n  color: #4a5568; /* Tailwind gray-700 */\\n  font-size: 1.25rem; /* Tailwind text-lg */\\n}\\n\\n.action-button {\\n  display: block;\\n  margin-bottom: 8px; /* Adjust spacing between buttons */\\n  /* Other styles remain the same */\\n}\\n\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import script from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"mx-4 my-4\">\n    <div class=\"alert alert-info mt-4\"\n         v-if=\"props.flash.message\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" class=\"stroke-current shrink-0 w-6 h-6\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n      </svg>\n      <span>{{ props.flash.message }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-success mt-4 mx-3\"\n         v-if=\"props.flash.success\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.success }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-warning mt-4 mx-3\"\n         v-if=\"props.flash.warning\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"/>\n      </svg>\n      <span>{{ props.flash.warning }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-error mt-4 mx-3\"\n         v-if=\"props.flash.error\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.error }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n  </div>\n\n</template>\n\n<script setup>\nimport { router } from '@inertiajs/vue3'\nimport { computed } from \"vue\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\n\nconst appSettingStore = useAppSettingStore()\n\nappSettingStore.showFlashMessage = true\n\nlet props = defineProps({\n  flash: Object,\n\n})\n\nconst messageType = computed(() => ({\n  'text-green-700 bg-green-100 dark:bg-green-200 dark:text-green-800': props.flash.success,\n  'text-blue-700 bg-blue-100 dark:bg-blue-200 dark:text-blue-800': props.flash.message,\n  'text-orange-700 bg-orange-100 dark:bg-orange-200 dark:text-orange-800': props.flash.warning,\n  'text-red-700 bg-red-100 dark:bg-red-200 dark:text-red-800': props.flash.error,\n}))\n\nconst clearFlashMessage = async () => {\n  await router.post(route('flash.clear'));\n  router.reload();\n};\n</script>\n","import script from \"./PopUpModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./PopUpModal.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n    <dialog :id=\"id\" class=\"modal\">\n      <div class=\"modal-box text-center my-auto border-2 border-secondary\" data-theme=\"dark\">\n        <h2 class=\"font-bold text-3xl text-secondary\">\n          <slot name=\"header\"></slot>\n        </h2>\n        <p class=\"py-4 text-xl\">\n          <slot name=\"main\"></slot>\n        </p>\n        <div class=\"modal-action justify-center w-full\">\n          <form method=\"dialog\">\n            <!-- if there is a button in form, it will close the modal -->\n            <button @click=\"notificationStore.showPopUpModal = false\" class=\"btn btn-secondary\">Okay</button>\n          </form>\n        </div>\n      </div>\n    </dialog>\n  </div>\n</template>\n<script setup>\nimport { useNotificationStore } from \"@/Stores/NotificationStore\"\n\nconst notificationStore = useNotificationStore()\n\ndefineProps({\n  id: String,\n})\n</script>\n","import script from \"./TabbableTextarea.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TabbableTextarea.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n<!--    <textarea-->\n<!--        @keydown.tab.prevent=\"onTabPress\"-->\n<!--        @keyup=\"emit('update:modelValue', $event.target.value)\"-->\n<!--        v-text=\"modelValue\"-->\n<!--        :placeholder=\"placeholder\" />-->\n  <textarea\n      @keydown.tab.prevent=\"onTabPress\"\n      @input=\"onInput\"\n      :value=\"modelValue\"\n      :placeholder=\"placeholder\"\n      class=\"textarea textarea-bordered text-black bg-white dark:bg-gray-800 dark:text-white\"\n  />\n</template>\n\n<script setup>\ndefineProps({\n  modelValue: String,\n  placeholder: String\n});\n\nconst emit = defineEmits(['update:modelValue']);\n// let emit = defineEmits(['update:modelValue']);\n\nconst onInput = (event) => {\n  emit('update:modelValue', event.target.value);\n};\n\nfunction onTabPress(e) {\n  let textarea = e.target;\n\n  // get caret position/selection\n  let val = textarea.value,\n      start = textarea.selectionStart,\n      end = textarea.selectionEnd;\n\n  // set textarea value to: text before caret + tab + text after caret\n  textarea.value = val.substring(0, start) + \"\\t\" + val.substring(end);\n\n  // put caret at right position again\n  textarea.selectionStart = textarea.selectionEnd = start + 1;\n}\n\n</script>\n","import script from \"./ValidationErrors.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ValidationErrors.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { computed } from 'vue';\nimport { usePage } from '@inertiajs/vue3';\n\nconst errors = computed(() => usePage().props.errors);\nconst hasErrors = computed(() => Object.keys(errors.value).length > 0);\n</script>\n\n<template>\n    <div v-if=\"hasErrors\">\n        <div class=\"font-medium text-red-600\">\n            Whoops! Something went wrong.\n        </div>\n\n        <ul class=\"mt-3 list-disc list-inside text-sm text-red-600\">\n            <li v-for=\"(error, key) in errors\" :key=\"key\">\n                {{ error }}\n            </li>\n        </ul>\n    </div>\n</template>\n","import script from \"./ServerTime.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ServerTime.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n    <p class=\"mb-2\">\n      Server Time: {{ serverTime }}\n    </p>\n    <p class=\"mb-2\">\n      Local Time: {{ localTime }}\n    </p>\n    <p class=\"mb-2\">\n      User's Timezone: {{ userTimezone }}\n    </p>\n  </div>\n</template>\n\n<script setup>\nimport { onMounted, ref } from \"vue\"\n\nlet serverTime = ref('')\nlet localTime = ref('')\n\nconst updateLocalTime = () => {\n  const userLocalDate = new Date()\n  localTime.value = userLocalDate.toLocaleString() // Format as desired\n};\n\nasync function fetchServerTime() {\n  try {\n    const response = await axios.get('/admin/server-time') // Replace with your actual API endpoint\n    // Assuming your server returns the time as a string\n    serverTime.value = response.data.serverTime\n    console.log(serverTime.value)\n  } catch (error) {\n    console.error('Error fetching server time', error)\n  }\n}\n\nonMounted(() => {\n  fetchServerTime()\n  updateLocalTime()\n  getUserTimezone()\n})\n\nconst userTimezone = ref('')\n\nconst getUserTimezone = () => {\n  // Use the Intl object to get the user's timezone\n  userTimezone.value = Intl.DateTimeFormat().resolvedOptions().timeZone\n};\n\n</script>\n","<template>\n  <div>\n    <form class=\"px-4 pb-4\" @submit.prevent=\"submit\">\n      <h2 class=\"text-2xl font-bold mb-4\">First Play Video Source</h2>\n      <button @click.prevent=\"clearFirstPlayCacheData\"\n              class=\"btn btn-warning btn-sm mb-4\">\n        Clear First Play Data Cache\n      </button>\n      <!-- Toggle -->\n      <div class=\"form-control mt-4\">\n        <label class=\"label cursor-pointer flex justify-start items-center space-x-3 mb-2\">\n          <span class=\"label-text\">Use Custom First Play Video</span>\n          <input type=\"checkbox\" ref=\"useCustomVideoCheckbox\" class=\"toggle toggle-primary bg-white dark:bg-gray-800 dark:text-white\"\n                 v-model=\"adminStore.firstPlaySettings.useCustomVideo\" @click=\"blurCheckbox\"/>\n        </label>\n        <!-- Display error for useCustomVideo if exists -->\n        <div v-if=\"adminStore.validationErrors['useCustomVideo']\" class=\"text-xs text-red-600 mt-1\">\n          {{ adminStore.validationErrors['useCustomVideo'][0] }}\n        </div>\n      </div>\n\n      <!-- Custom Video Inputs -->\n      <div v-if=\"adminStore?.firstPlaySettings?.useCustomVideo\" class=\"space-y-3\">\n\n        <div class=\"space-y-3\">\n          <!-- First Play Video Source -->\n          <div class=\"mb-6\" v-if=\"adminStore.firstPlaySettings\">\n            <label for=\"customVideoSource\"\n                   class=\"block mb-2 uppercase font-bold text-xs text-gray-700 dark:text-gray-300\">\n              First Play Video Source\n            </label>\n            <input v-model=\"adminStore.firstPlaySettings.customVideoSource\" class=\"input input-bordered w-full bg-white dark:bg-gray-800 dark:text-white\"\n                   id=\"first_play_video_source\">\n            <!-- Display error for videoSource if exists -->\n            <div v-if=\"adminStore.validationErrors['customVideoSource']\" class=\"text-xs text-red-600 mt-1 bg-white dark:bg-gray-800 dark:text-white\">\n              {{ adminStore.validationErrors['customVideoSource'][0] }}\n            </div>\n            <span class=\"text-xs\">e.g., https://mist.nottv.io/hls/test/index.m3u8</span>\n          </div>\n\n          <!-- First Play Video Source Type -->\n          <div class=\"mb-6\" v-if=\"adminStore.firstPlaySettings\">\n            <label for=\"customVideoSourceType\"\n                   class=\"block mb-2 uppercase font-bold text-xs text-gray-700 dark:text-gray-300\">\n              First Play Video Source Type\n            </label>\n            <input v-model=\"adminStore.firstPlaySettings.customVideoSourceType\" class=\"input input-bordered w-full bg-white dark:bg-gray-800 dark:text-white\"\n                   id=\"first_play_video_source_type\">\n            <!-- Display error for videoSourceType if exists -->\n            <div v-if=\"adminStore.validationErrors['customVideoSourceType']\" class=\"text-xs text-red-600 mt-1\">\n              {{ adminStore.validationErrors['customVideoSourceType'][0] }}\n            </div>\n            <span class=\"text-xs\">e.g., video/mp4 or application/x-mpegURL</span>\n          </div>\n\n          <!-- First Play Video Name -->\n          <div class=\"mb-6\" v-if=\"adminStore.firstPlaySettings\">\n            <label for=\"customVideoName\"\n                   class=\"block mb-2 uppercase font-bold text-xs text-gray-700 dark:text-gray-300\">\n              First Play Video Name\n            </label>\n            <input v-model=\"adminStore.firstPlaySettings.customVideoName\" class=\"input input-bordered w-full bg-white dark:bg-gray-800 dark:text-white\"\n                   id=\"first_play_video_name\">\n            <!-- Display error for videoName if exists -->\n            <div v-if=\"adminStore.validationErrors['customVideoName']\" class=\"text-xs text-red-600 mt-1\">\n              {{ adminStore.validationErrors['customVideoName'][0] }}\n            </div>\n          </div>\n        </div>\n\n\n\n        <div  class=\"space-y-3 pt-6 mb-12\">\n          <div class=\"test-stream\">\n            <label for=\"customVideoName\"\n                   class=\"block mb-2 uppercase font-bold text-xs text-gray-700 dark:text-gray-300\">\n              Test Stream\n            </label>\n            <div class=\"mb-2 text-xs\">Note: Requires a stream with the name 'test'</div>\n            <div @click.prevent=\"adminStore.setActiveStreamAsFirstPlay('test')\"\n                 class=\"stream-image w-40 gap-2 break-words hover:cursor-pointer hover:text-blue-500 relative group\">\n              <img src=\"/storage/images/EBU_Colorbars.svg.png\" alt=\"\" :class=\"`skeleton w-40 h-40 object-cover rounded-xl`\"/>\n              <!-- Overlay div for dimming effect -->\n              <div class=\"absolute inset-0 bg-black bg-opacity-0 transition-opacity duration-300 rounded-xl group-hover:bg-opacity-50 pl-1\"></div>\n              <div class=\"absolute inset-0 flex items-center justify-center opacity-50 group-hover:opacity-100 pl-1\">\n                <span class=\"text-white text-xl font-bold\">Test Bars and Music</span>\n              </div>\n            </div>\n\n          </div>\n\n          <div v-if=\"adminStore.fetchingActiveStreams\" class=\"flex w-full pt-6 justify-center items-center gap-4\">\n            <span class=\"loading loading-spinner loading-lg text-info\"></span>\n            Loading Active Streams ...\n          </div>\n\n          <div v-else class=\"active-streams pt-4\">\n            <label for=\"customVideoName\"\n                   class=\"block mb-2 uppercase font-bold text-xs text-gray-700 dark:text-gray-300\">\n              Active Streams\n            </label>\n            <div class=\"flex flex-row flex-wrap gap-3\">\n              <div v-for=\"activeStream in adminStore.activeStreams\"\n                   :key=\"activeStream.showId\"\n                   @click.prevent=\"adminStore.setActiveStreamAsFirstPlay(activeStream)\"\n                   class=\"stream-image w-40 break-words hover:cursor-pointer hover:text-blue-500 relative group\">\n                <SingleImage :image=\"activeStream.showImage\" :alt=\"`show image`\" :class=\"`w-40 h-40 object-cover rounded-xl`\"/>\n                <!-- Overlay div for dimming effect -->\n                <div class=\"absolute inset-0 bg-black bg-opacity-0 transition-opacity duration-300 rounded-xl group-hover:bg-opacity-50\"></div>\n                <div class=\"absolute inset-0 flex items-center justify-center opacity-50 group-hover:opacity-100 pl-1\">\n                  <span class=\"text-white text-xl font-bold\">{{ activeStream.showName }}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n\n        </div>\n\n      </div>\n\n      <!-- Channel Dropdown -->\n      <div v-else class=\"\">\n        <div class=\"channel-selector\" v-if=\"adminStore.firstPlaySettings\">\n          <label for=\"channelId\" class=\"label block mb-2 uppercase font-bold text-xs text-gray-700 dark:text-gray-300\">Select\n            Channel</label>\n          <select v-model=\"adminStore.firstPlaySettings.channelId\" class=\"select select-bordered w-full bg-white dark:bg-gray-800 dark:text-white\"\n                  id=\"channel_id\">\n            <option disabled value=\"\">Select a channel</option>\n            <option v-for=\"channel in channelStore.activeChannels\" :key=\"channel.id\" :value=\"channel.id\" class=\" bg-white dark:bg-gray-800 dark:text-white\">{{\n                channel.name\n              }}\n            </option>\n          </select>\n          <!-- Display error for channelId if exists -->\n          <div v-if=\"adminStore.validationErrors['channelId']\" class=\"text-xs text-red-600 mt-1\">\n            {{ adminStore.validationErrors['channelId'][0] }}\n          </div>\n        </div>\n      </div>\n\n    </form>\n\n\n  </div>\n</template>\n<script setup>\nimport { ref, onMounted, watch } from 'vue'\n// import { useForm } from '@inertiajs/vue3'\nimport { useNotificationStore } from '@/Stores/NotificationStore'\nimport { useAdminStore } from '@/Stores/AdminStore'\nimport { useChannelStore } from '@/Stores/ChannelStore'\nimport { router } from '@inertiajs/vue3'\nimport SingleImage from '@/Components/Global/Multimedia/SingleImage.vue'\n\nconst notificationStore = useNotificationStore()\nconst adminStore = useAdminStore()\nconst channelStore = useChannelStore()\n\n// let form = useForm({\n//   useCustomVideo: Boolean,\n//   customVideoSource: '',\n//   customVideoSourceType: '',\n//   customVideoName: '',\n//   channelId: '',\n// })\n\nonMounted(async () => {\n  await channelStore.getChannels()\n  await adminStore.fetchFirstPlaySettings()\n})\n\nconst useCustomVideoCheckbox = ref(null)\n\nconst blurCheckbox = () => {\n  if (useCustomVideoCheckbox.value) {\n    useCustomVideoCheckbox.value.blur()\n  }\n}\n\nconst selectedChannelId = ref('')\n\nlet clearFirstPlayCacheData = () => {\n  router.post(route('admin.clear-first-play-data-cache'))\n  const topDiv = document.getElementById('topDiv')\n  topDiv.scrollIntoView()\n}\n\n// Watch for changes in audio level\nwatch(() => adminStore?.firstPlaySettings?.useCustomVideo, newCustomVideoSetting => {\n  if (newCustomVideoSetting) {\n    adminStore.fetchActiveStreams()\n    console.log('fetch active streams')\n  }\n}, {immediate: true})\n\n</script>\n<style>\n.stream-image .w-40 {\n  transition: transform 0.3s ease-in-out;\n}\n\n.stream-image:hover .w-40 {\n  transform: scale(1.05); /* Scales up the image to 105% of its original size on hover */\n}\n</style>\n","import api from \"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-10.use[1]!../../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-10.use[2]!../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./FirstPlayVideoSourceSelector.vue?vue&type=style&index=0&id=9657dd46&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./FirstPlayVideoSourceSelector.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./FirstPlayVideoSourceSelector.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./FirstPlayVideoSourceSelector.vue?vue&type=style&index=0&id=9657dd46&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./SubscriptionSettings.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./SubscriptionSettings.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"mb-6\">\n    <label class=\"block mb-2 uppercase font-bold text-xs text-gray-700 dark:text-gray-300\"\n           for=\"subscription_settings\">\n      SUBSCRIPTION SETTINGS\n    </label>\n\n    <!-- Monthly Subscription Settings -->\n    <div class=\"mb-4\">\n      <h2 class=\"font-bold text-sm text-gray-700 dark:text-gray-300\">Premium Subscription - Monthly</h2>\n      <div class=\"flex flex-row mb-2\">\n        <label for=\"monthly_price\" class=\"w-1/4 text-gray-700 dark:text-gray-300\">Price ($):</label>\n        <input v-model=\"adminStore.settingsForm.subscriptionSettings.monthly.price\"\n               class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n               type=\"text\"\n               name=\"monthly_price\"\n               id=\"monthly_price\">\n      </div>\n      <div class=\"flex flex-row mb-2\">\n        <label for=\"monthly_api_id\" class=\"w-1/4 text-gray-700 dark:text-gray-300\">API ID:</label>\n        <input v-model=\"adminStore.settingsForm.subscriptionSettings.monthly.api_id\"\n               class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n               type=\"text\"\n               name=\"monthly_api_id\"\n               id=\"monthly_api_id\">\n      </div>\n    </div>\n\n    <!-- Yearly Subscription Settings -->\n    <div class=\"mb-4\">\n      <h2 class=\"font-bold text-sm text-gray-700 dark:text-gray-300\">Premium Subscription - Yearly</h2>\n      <div class=\"flex flex-row mb-2\">\n        <label for=\"yearly_price\" class=\"w-1/4 text-gray-700 dark:text-gray-300\">Price ($):</label>\n        <input v-model=\"adminStore.settingsForm.subscriptionSettings.yearly.price\"\n               class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n               type=\"text\"\n               name=\"yearly_price\"\n               id=\"yearly_price\">\n      </div>\n      <div class=\"flex flex-row mb-2\">\n        <label for=\"yearly_api_id\" class=\"w-1/4 text-gray-700 dark:text-gray-300\">API ID:</label>\n        <input v-model=\"adminStore.settingsForm.subscriptionSettings.yearly.api_id\"\n               class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n               type=\"text\"\n               name=\"yearly_api_id\"\n               id=\"yearly_api_id\">\n      </div>\n    </div>\n\n    <div v-if=\"errors.subscription_settings\" v-text=\"errors.subscription_settings\"\n         class=\"text-xs text-red-600 mt-1\"></div>\n  </div>\n</template>\n<script setup>\nimport { useAdminStore } from '@/Stores/AdminStore'\n\nconst adminStore = useAdminStore()\n\nconst props = defineProps({\n  errors: Object,\n})\n</script>","<template>\n\n  <Head :title=\"`Administrative Settings`\"/>\n\n  <div id=\"topDiv\" class=\"place-self-center flex flex-col gap-y-3\">\n    <div\n        class=\"w-fit lg:w-3/4 left-0 right-0 mx-auto bg-white dark:bg-gray-800 rounded text-black dark:text-gray-50 mt-6 p-5\">\n\n      <Message v-if=\"appSettingStore.showFlashMessage\" :flash=\"$page.props.flash\"/>\n\n      <header>\n        <div class=\"flex justify-between mb-3\">\n          <div class=\"mb-4\">\n            <h1 class=\"text-3xl font-semibold\">Administrative Settings</h1>\n          </div>\n          <div>\n            <div>\n              <button\n                  @click=\"appSettingStore.btnRedirect('/dashboard')\"\n                  class=\"bg-black hover:bg-gray-800 text-white font-semibold ml-2 mt-2 px-4 py-2 rounded disabled:bg-gray-400 h-max w-max\"\n              >Dashboard\n              </button>\n            </div>\n          </div>\n        </div>\n      </header>\n\n      <ServerTime/>\n\n\n      <div class=\"admin-container\">\n        <div class=\"sticky-sidebar\">\n          <button @click=\"appSettingStore.btnRedirect('/admin/channels')\"\n                  class=\"action-button\"\n                  :class=\"disabledButtonClasses\"\n                  :disabled=\"secureNotesOpen || firstPlaySettingsOpen\">Channels</button>\n\n          <button @click=\"appSettingStore.btnRedirect('/admin/schedule')\"\n                  class=\"action-button\"\n                  :class=\"disabledButtonClasses\"\n                  :disabled=\"secureNotesOpen || firstPlaySettingsOpen\">Schedule</button>\n\n          <button @click=\"appSettingStore.btnRedirect('/invite_codes')\"\n                  class=\"action-button\"\n                  :class=\"disabledButtonClasses\"\n                  :disabled=\"secureNotesOpen || firstPlaySettingsOpen\">Invite Codes</button>\n\n          <button v-if=\"!secureNotesOpen\"\n                  @click=\"openSecureNotes\"\n                  class=\"action-button\"\n                  :class=\"disabledButtonClasses\"\n                  :disabled=\"firstPlaySettingsOpen\">Secure Notes</button>\n\n          <button v-if=\"secureNotesOpen\"\n                  @click=\"saveSecureNotes\"\n                  class=\"action-button save-notes\"\n                  :disabled=\"firstPlaySettingsOpen\">Save Notes</button>\n\n          <button v-if=\"!firstPlaySettingsOpen\"\n                  @click=\"openFirstPlaySettings\"\n                  class=\"action-button\"\n                  :class=\"disabledButtonClasses\"\n                  :disabled=\"secureNotesOpen\">First Play Settings</button>\n\n          <button v-if=\"firstPlaySettingsOpen\"\n                  @click=\"updateFirstPlaySettings\"\n                  class=\"action-button save-notes\"\n                  :disabled=\"secureNotesOpen\">Save First Play</button>\n\n          <!-- Add the Schedule button here -->\n        </div>\n        <div v-if=\"!secureNotesOpen && !firstPlaySettingsOpen\" class=\"main-actions\">\n          <div class=\"actions-group\">\n            <h3 class=\"group-title\">Content Management</h3>\n            <button @click=\"appSettingStore.btnRedirect(`/admin/episodes`)\" class=\"action-button\">All Episodes</button>\n            <button @click=\"appSettingStore.btnRedirect(`/admin/shows`)\" class=\"action-button\">All Shows</button>\n            <button @click=\"appSettingStore.btnRedirect(`/admin/movies`)\" class=\"action-button\">All Movies</button>\n            <button @click=\"appSettingStore.btnRedirect(`/admin/images`)\" class=\"action-button\">Images</button>\n            <button @click=\"appSettingStore.btnRedirect(`/videoupload`)\" class=\"action-button\">Video Upload</button>\n            <button @click=\"appSettingStore.btnRedirect(`/movie/create`)\" class=\"action-button\">Add a Movie</button>\n          </div>\n\n          <div class=\"actions-group\">\n            <h3 class=\"group-title\">User & Team Management</h3>\n            <button @click=\"appSettingStore.btnRedirect(`/users`)\" class=\"action-button\">All Users</button>\n            <button @click=\"appSettingStore.btnRedirect(`/admin/teams`)\" class=\"action-button\">All Teams</button>\n          </div>\n\n          <div class=\"actions-group\">\n            <h3 class=\"group-title\">System & Backup</h3>\n            <button @click=\"backupMistServerConfig\" class=\"action-button\">Backup MistServer Config</button>\n            <button @click=\"restoreMistServerConfig\" class=\"action-button\">Restore MistServer Config</button>\n            <button @click=\"restoreAllStreams\" class=\"action-button\">Restore All MistStreams</button>\n            <button @click=\"getEpisodesFromEmbedCodes\" class=\"action-button\" :disabled=\"!getAllEpisodesButtonActive\">Get\n              All Episode Videos From Embed Codes\n            </button>\n          </div>\n\n          <div class=\"actions-group\">\n            <h3 class=\"group-title\">MistServer Management</h3>\n            <button @click=\"appSettingStore.btnRedirect(`/admin/mistServerApi`)\" class=\"action-button\">MistServer API\n              Test Page\n            </button>\n            <a :href=\"mistServerUriForManagementInterface.replace(/\\/$/, '') + ':4242'\" target=\"_blank\"\n               class=\"action-button\">MistServer Management Interface</a>\n          </div>\n        </div>\n        <div v-if=\"secureNotesOpen && !firstPlaySettingsOpen\" class=\"main-actions\">\n\n          <TabbableTextarea v-if=\"!secureNotesSaving\" :modelValue=\"secureNotes\" @update:modelValue=\"updateSecureNotes\" :placeholder=\"'Secure notes here'\"\n                            class=\"w-full h-64\"/>\n          <label class=\"text-xs ml-2 mb-1 text-gray-700\">Only you see these notes.</label>\n          <div v-if=\"secureNotesSaving\"><span class=\"loading loading-bars loading-md\"></span> Saving...</div>\n        </div>\n        <div v-if=\"!secureNotesOpen && firstPlaySettingsOpen\" class=\"main-actions\">\n            <FirstPlayVideoSourceSelector />\n          <div v-if=\"firstPlaySettingsSaving\"><span class=\"loading loading-bars loading-md\"></span> Saving...</div>\n        </div>\n      </div>\n\n      <div>\n        <form @submit.prevent=\"submit\">\n          <div class=\"mb-6\">\n            <label class=\"block mb-2 uppercase font-bold text-xs text-gray-700 dark:text-gray-300\"\n                   for=\"default_country\"\n            >\n              COUNTRY\n            </label>\n            <div class=\"text-xs mb-2\">This should probably be baked into the code somewhere. Content, and especially\n              News Stories, uploaded and managed to this instance of notTV is specific to this country. The system has a\n              list of provinces, cities and postal codes based on the country. This system is designed to only manage\n              one country. Eventually, each notTV country will be able to share their content and News Stories, with\n              each other.\n            </div>\n\n            <select disabled id=\"default_country\" v-model=\"form.default_country\"\n                    class=\"disabled:bg-gray-100 cursor-not-allowed\">\n              <option v-for=\"country in countries\" :key=\"country.id\" :value=\"country.id\">{{ country.name }}</option>\n            </select>\n\n            <div v-if=\"form.errors.default_country\" v-text=\"form.errors.default_country\"\n                 class=\"text-xs text-red-600 mt-1\"></div>\n          </div>\n          <div class=\"mb-6\">\n            <label class=\"block mb-2 uppercase font-bold text-xs text-gray-700 dark:text-gray-300\"\n                   for=\"cdn_endpoint\"\n            >\n              CDN ENDPOINT\n            </label>\n\n            <input v-model=\"form.cdn_endpoint\"\n                   class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                   type=\"text\"\n                   name=\"cdn_endpoint\"\n                   id=\"cdn_endpoint\"\n            >\n            <div v-if=\"form.errors.cdn_endpoint\" v-text=\"form.errors.cdn_endpoint\"\n                 class=\"text-xs text-red-600 mt-1\"></div>\n          </div>\n          <div class=\"mb-6\">\n            <label class=\"block mb-2 uppercase font-bold text-xs text-gray-700 dark:text-gray-300\"\n                   for=\"cloud_folder\"\n            >\n              CLOUD FOLDER\n            </label>\n\n            <div class=\"flex flex-row\">\n              <span class=\"pt-2 mr-2\">/ </span>\n              <input v-model=\"form.cloud_folder\"\n                     class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                     type=\"text\"\n                     name=\"cloud_folder\"\n                     id=\"cloud_folder\"\n              >\n            </div>\n            <span\n                class=\"text-xs\">NOTE: The forward slash is already entered in the backend. Just type the folder name.</span>\n\n            <div v-if=\"form.errors.cloud_folder\" v-text=\"form.errors.cloud_folder\"\n                 class=\"text-xs text-red-600 mt-1\"></div>\n          </div>\n\n          <div class=\"mb-6\">\n            <label class=\"block mb-2 uppercase font-bold text-xs text-gray-700 dark:text-gray-300\"\n                   for=\"cloud_folder\"\n            >\n              CLOUD PRIVATE FOLDER\n            </label>\n\n            <div class=\"flex flex-row\">\n              <span class=\"pt-2 mr-2\">/ </span>\n              <input v-model=\"form.cloud_private_folder\"\n                     class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                     type=\"text\"\n                     name=\"cloud_private_folder\"\n                     id=\"cloud_private_folder\"\n              >\n            </div>\n            <span\n                class=\"text-xs\">NOTE: The forward slash is already entered in the backend. Just type the folder name.</span>\n            <br />\n            <span class=\"text-xs\">EXTRA NOTE: This folder is where creator video uploads get stored from the Video Upload Page.</span>\n\n            <div v-if=\"form.errors.cloud_private_folder\" v-text=\"form.errors.cloud_private_folder\"\n                 class=\"text-xs text-red-600 mt-1\"></div>\n          </div>\n\n          <UploadNewsData />\n\n          <div class=\"mb-6\">\n            <label class=\"block mb-2 uppercase font-bold text-xs text-gray-700 dark:text-gray-300\"\n                   for=\"mist_server_uri\"\n            >\n              MIST SERVER URI\n            </label>\n            <div class=\"text-xs mb-2\">This is the primary mist server. Right now we don't have a load balancer. This URI\n              is used for playback. The .env holds the settings for connecting to the MistServer API.\n            </div>\n\n            <div class=\"flex flex-row\">\n              <input v-model=\"form.mist_server_uri\"\n                     class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                     type=\"text\"\n                     name=\"mist_server_uri\"\n                     id=\"mist_server_uri\"\n              >\n            </div>\n            <div class=\"text-xs mb-2\">e.g., https://mist.nottv.io/ or http://localhost:8080/</div>\n\n            <div v-if=\"form.errors.mist_server_uri\" v-text=\"form.errors.mist_server_uri\"\n                 class=\"text-xs text-red-600 mt-1\"></div>\n          </div>\n\n          <div class=\"mb-6\">\n            <label class=\"block mb-2 uppercase font-bold text-xs text-gray-700 dark:text-gray-300\"\n                   for=\"mist_server_rtmp_uri\"\n            >\n              MIST SERVER RTMP URI\n            </label>\n            <div class=\"text-xs mb-2\">This is the address users will push their streams to.</div>\n\n            <div class=\"flex flex-row\">\n              <input v-model=\"form.mist_server_rtmp_uri\"\n                     class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                     type=\"text\"\n                     name=\"mist_server_rtmp_uri\"\n                     id=\"mist_server_rtmp_uri\"\n              >\n            </div>\n            <div class=\"text-xs mb-2\">e.g., rtmp://stream.not.tv/ or rtmp://localhost/</div>\n\n            <div v-if=\"form.errors.mist_server_rtmp_uri\" v-text=\"form.errors.mist_server_rtmp_uri\"\n                 class=\"text-xs text-red-600 mt-1\"></div>\n          </div>\n\n          <div class=\"mb-6\">\n            <label class=\"block mb-2 uppercase font-bold text-xs text-gray-700 dark:text-gray-300\"\n                   for=\"mist_server_automated_recording_folder\"\n            >\n              MIST SERVER RECORDING FOLDER - AUTOMATED RECORDINGS\n            </label>\n            <div class=\"text-xs mb-2\"></div>\n\n            <div class=\"flex flex-row\">\n              <span class=\"pt-2 mr-2\">/ </span>\n              <input v-model=\"form.mist_server_automated_recording_folder\"\n                     class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                     type=\"text\"\n                     name=\"mist_server_automated_recording_folder\"\n                     id=\"mist_server_automated_recording_folder\"\n              >\n            </div>\n            <span\n                class=\"text-xs\">NOTE: The forward slash is already entered in the backend. Just type the folder name.</span>\n\n            <div v-if=\"form.errors.mist_server_automated_recording_folder\" v-text=\"form.errors.mist_server_automated_recording_folder\"\n                 class=\"text-xs text-red-600 mt-1\"></div>\n          </div>\n\n          <div class=\"mb-6\">\n            <label class=\"block mb-2 uppercase font-bold text-xs text-gray-700 dark:text-gray-300\"\n                   for=\"mist_server_user_recording_folder\"\n            >\n              MIST SERVER RECORDING FOLDER - USER RECORDINGS\n            </label>\n            <div class=\"text-xs mb-2\"></div>\n\n            <div class=\"flex flex-row\">\n              <span class=\"pt-2 mr-2\">/ </span>\n              <input v-model=\"form.mist_server_user_recording_folder\"\n                     class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                     type=\"text\"\n                     name=\"mist_server_user_recording_folder\"\n                     id=\"mist_server_user_recording_folder\"\n              >\n            </div>\n            <span\n                class=\"text-xs\">NOTE: The forward slash is already entered in the backend. Just type the folder name.</span>\n            <br />\n            <span\n                class=\"text-xs\">SECOND NOTE: Recordings are saved in this PATH/$user->id/filename.ext</span>\n\n            <div v-if=\"form.errors.mist_server_user_recording_folder\" v-text=\"form.errors.mist_server_user_recording_folder\"\n                 class=\"text-xs text-red-600 mt-1\"></div>\n          </div>\n\n          <div class=\"mb-6\">\n            <label class=\"block mb-2 uppercase font-bold text-xs text-gray-700 dark:text-gray-300\"\n                   for=\"public_stats_url\"\n            >\n              PUBLIC STATS URL\n            </label>\n            <div class=\"text-xs mb-2\">The public dashboard of our grafana analytics. Note: https://not.tv/stats will redirect to this page.</div>\n\n            <div class=\"flex flex-row\">\n              <input v-model=\"form.public_stats_url\"\n                     class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                     type=\"text\"\n                     name=\"public_stats_url\"\n                     id=\"public_stats_url\"\n              >\n            </div>\n            <div class=\"text-xs mb-2\">e.g., https://stats.not.tv</div>\n\n            <div v-if=\"form.errors.public_stats_url\" v-text=\"form.errors.public_stats_url\"\n                 class=\"text-xs text-red-600 mt-1\"></div>\n          </div>\n\n          <SubscriptionSettings :errors=\"form.errors\"/>\n\n          <div class=\"mb-6 border-t-2 pt-4\">\n\n\n\n          </div>\n\n\n          <!--          <div class=\"mb-6\">-->\n          <!--            <label class=\"block mb-2 uppercase font-bold text-xs text-gray-700 dark:text-gray-300\"-->\n          <!--                   for=\"mist_server_ip\"-->\n          <!--            >-->\n          <!--              MIST SERVER IP ADDRESS-->\n          <!--            </label>-->\n          <!--            <div class=\"text-xs mb-2\">This is used as part of the hash for Mist Stream Access Control.</div>-->\n\n          <!--            <div class=\"flex flex-row\">-->\n          <!--              <input v-model=\"form.mist_server_ip\"-->\n          <!--                     class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"-->\n          <!--                     type=\"text\"-->\n          <!--                     name=\"mist_server_ip\"-->\n          <!--                     id=\"mist_server_ip\"-->\n          <!--              >-->\n          <!--            </div>-->\n          <!--            <div v-if=\"form.errors.mist_server_ip\" v-text=\"form.errors.mist_server_ip\"-->\n          <!--                 class=\"text-xs text-red-600 mt-1\"></div>-->\n          <!--          </div>-->\n          <!--          <div class=\"mb-6\">-->\n          <!--            <label class=\"block mb-2 uppercase font-bold text-xs text-gray-700 dark:text-gray-300\"-->\n          <!--                   for=\"mist_server_api_url\"-->\n          <!--            >-->\n          <!--              MIST SERVER API URL-->\n          <!--            </label>-->\n\n          <!--            <div class=\"flex flex-row\">-->\n          <!--              <input v-model=\"form.mist_server_api_url\"-->\n          <!--                     class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"-->\n          <!--                     type=\"text\"-->\n          <!--                     name=\"mist_server_api_url\"-->\n          <!--                     id=\"mist_server_api_url\"-->\n          <!--              >-->\n          <!--            </div>-->\n          <!--            <div class=\"text-xs mb-2\">e.g., https://mist.nottv.io/api</div>-->\n\n          <!--            <div v-if=\"form.errors.mist_server_api_url\" v-text=\"form.errors.mist_server_api_url\"-->\n          <!--                 class=\"text-xs text-red-600 mt-1\"></div>-->\n          <!--          </div>-->\n          <!--          <div class=\"mb-6\">-->\n          <!--            <label class=\"block mb-2 uppercase font-bold text-xs text-gray-700 dark:text-gray-300\"-->\n          <!--                   for=\"mist_server_username\"-->\n          <!--            >-->\n          <!--              MIST SERVER USERNAME-->\n          <!--            </label>-->\n\n          <!--            <div class=\"flex flex-row\">-->\n          <!--              <input v-model=\"form.mist_server_username\"-->\n          <!--                     class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"-->\n          <!--                     type=\"text\"-->\n          <!--                     name=\"mist_server_username\"-->\n          <!--                     id=\"mist_server_username\"-->\n          <!--              >-->\n          <!--            </div>-->\n          <!--            <div v-if=\"form.errors.mist_server_username\" v-text=\"form.errors.mist_server_username\"-->\n          <!--                 class=\"text-xs text-red-600 mt-1\"></div>-->\n          <!--          </div>-->\n          <!--          <div class=\"mb-6\">-->\n          <!--            <label class=\"block mb-2 uppercase font-bold text-xs text-gray-700 dark:text-gray-300\"-->\n          <!--                   for=\"mist_server_password\"-->\n          <!--            >-->\n          <!--              MIST SERVER PASSWORD-->\n          <!--            </label>-->\n\n          <!--            <div class=\"flex flex-row\">-->\n          <!--              <input v-model=\"form.mist_server_password\"-->\n          <!--                     class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"-->\n          <!--                     type=\"password\"-->\n          <!--                     name=\"mist_server_password\"-->\n          <!--                     id=\"mist_server_password\"-->\n          <!--              >-->\n          <!--            </div>-->\n          <!--            <div v-if=\"form.errors.mist_server_password\" v-text=\"form.errors.mist_server_password\"-->\n          <!--                 class=\"text-xs text-red-600 mt-1\"></div>-->\n          <!--          </div>-->\n\n          <!--          <div class=\"mb-6\">-->\n          <!--            <label class=\"block mb-2 uppercase font-bold text-xs text-gray-700 dark:text-gray-300\"-->\n          <!--                   for=\"mist_server_password\"-->\n          <!--            >-->\n          <!--              MIST ACCESS CONTROL SECRET-->\n          <!--            </label>-->\n          <!--            <div class=\"text-xs mb-2\">A string used to create the access control urls for playing streams and videos from the mist server.</div>-->\n          <!--            <div class=\"flex flex-row\">-->\n          <!--              <input v-model=\"form.mist_access_control_secret\"-->\n          <!--                     class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"-->\n          <!--                     type=\"text\"-->\n          <!--                     name=\"mist_access_control_secret\"-->\n          <!--                     id=\"mist_access_control_secret\"-->\n          <!--              >-->\n          <!--            </div>-->\n          <!--            <div v-if=\"form.errors.mist_access_control_secret\" v-text=\"form.errors.mist_access_control_secret\"-->\n          <!--                 class=\"text-xs text-red-600 mt-1\"></div>-->\n          <!--          </div>-->\n\n          <div class=\"flex justify-end my-6 mr-6\">\n            <JetValidationErrors class=\"mr-4\"/>\n            <button\n                @click.prevent=\"submit\"\n                class=\"bg-blue-600 hover:bg-blue-500 text-white rounded py-2 px-4\"\n                :disabled=\"form.processing\"\n            >\n              Save\n            </button>\n          </div>\n\n        </form>\n\n        <div class=\"card w-full mx-6 bg-neutral text-neutral-content\">\n          <div class=\"card-body items-center text-center\">\n            <h2 class=\"card-title\">Pushing to Production!</h2>\n            <div class=\"mockup-code break-words\">\n              <div class=\"commands\">\n                <div v-for=\"command in commands\" :key=\"command.text\" class=\"command\">\n                  <pre data-prefix=\"$\"><code>{{ command.text }}\n                                    <button @click=\"copyCommand(command)\">\n                    <font-awesome-icon icon=\"fa-clipboard\" class=\"ml-2 text-blue-500 hover:text-blue-700 hover:cursor-pointer\"/>\n                  </button>\n                  <span v-if=\"command.copied\" class=\"copied-message\">Copied!</span>\n                  </code></pre>\n                </div>\n              </div>\n\n\n\n\n\n\n\n\n\n\n\n<!--              <pre data-prefix=\"$\"><code>git checkout staging-->\n<!--                <button @click=\"copyCommand('git checkout staging')\"><font-awesome-icon icon=\"fa-clipboard\" class=\"text-blue-500 hover:text-blue-700 hover:cursor-pointer\"/>-->\n<!--                </button></code></pre>-->\n<!--              <pre data-prefix=\"$\"><code>rm -rf public/js/*-->\n<!--                <button @click=\"copyCommand('rm -rf public/js/*')\"><font-awesome-icon icon=\"fa-clipboard\" class=\"text-blue-500 hover:text-blue-700 hover:cursor-pointer\"/>-->\n<!--                </button></code></pre>-->\n<!--              <pre data-prefix=\"$\"><code>rm -rf public/css/*-->\n<!--                <button @click=\"copyCommand('rm -rf public/css/*')\"><font-awesome-icon icon=\"fa-clipboard\" class=\"text-blue-500 hover:text-blue-700 hover:cursor-pointer\"/>-->\n<!--                </button></code></pre>-->\n<!--              <pre data-prefix=\"$\"><code>git merge development-->\n<!--                <button @click=\"copyCommand('git merge development')\"><font-awesome-icon icon=\"fa-clipboard\" class=\"text-blue-500 hover:text-blue-700 hover:cursor-pointer\"/>-->\n<!--                </button></code></pre>-->\n<!--              <pre data-prefix=\"$\"><code>npm run production-->\n<!--                <button @click=\"copyCommand('npm run production')\"><font-awesome-icon icon=\"fa-clipboard\" class=\"text-blue-500 hover:text-blue-700 hover:cursor-pointer\"/>-->\n<!--                </button></code></pre>-->\n<!--              <pre data-prefix=\"$\"><code>git add .-->\n<!--                <button @click=\"copyCommand('git add .')\"><font-awesome-icon icon=\"fa-clipboard\" class=\"text-blue-500 hover:text-blue-700 hover:cursor-pointer\"/>-->\n<!--                </button></code></pre>-->\n<!--              <pre data-prefix=\"$\"><code>git commit -m \"merge development build production\"-->\n<!--                <button @click=\"copyCommand('git commit -m \\'merge development build production\\'')\"><font-awesome-icon icon=\"fa-clipboard\" class=\"text-blue-500 hover:text-blue-700 hover:cursor-pointer\"/>-->\n<!--                </button></code></pre>-->\n<!--              <pre data-prefix=\"$\"><code>git push origin-->\n<!--                <button @click=\"copyCommand('git push origin')\"><font-awesome-icon icon=\"fa-clipboard\" class=\"text-blue-500 hover:text-blue-700 hover:cursor-pointer\"/>-->\n<!--                </button></code></pre>-->\n<!--              <pre data-prefix=\"$\"><code>git checkout development-->\n<!--                <button @click=\"copyCommand('git checkout development')\"><font-awesome-icon icon=\"fa-clipboard\" class=\"text-blue-500 hover:text-blue-700 hover:cursor-pointer\"/>-->\n<!--                </button></code></pre>-->\n<!--              -->\n\n\n              <div role=\"alert\" class=\"mt-5 alert alert-info\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\"\n                     class=\"stroke-current shrink-0 w-6 h-6\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                        d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n                </svg>\n                <span>You may have to clear the cache on Cloudflare if you don't see all of the changes.</span>\n              </div>\n            </div>\n\n          </div>\n        </div>\n\n        <div class=\"mt-8 w-full\">\n          <h2 class=\"ml-4 mb-3\">Tasks To Do:</h2>\n          <div class=\"mb-4\">\n            <ol class=\"list-decimal pl-5 space-y-2\">\n              <li class=\"bg-amber-800 text-white p-2 rounded-md shadow\">\n                <input type=\"checkbox\" class=\"mr-2 checkbox checkbox-lg\"/>\n                <span>Change Max Video Upload Size. Convert Bytes to KB, MB, GB, TB.</span>\n                <ul class=\"list-disc pl-4 mt-1 text-sm\">\n                  <li>Update Video Uploader with the size.</li>\n                </ul>\n              </li>\n              <li class=\"bg-amber-800 text-white p-2 rounded-md shadow\"><input type=\"checkbox\"\n                                                                               class=\"mr-2 checkbox checkbox-lg\"/>Content\n                licenses\n              </li>\n              <li class=\"bg-amber-800 text-white p-2 rounded-md shadow\"><input type=\"checkbox\"\n                                                                               class=\"mr-2 checkbox checkbox-lg\"/>Episode\n                Statuses\n              </li>\n              <li class=\"bg-amber-800 text-white p-2 rounded-md shadow\"><input type=\"checkbox\"\n                                                                               class=\"mr-2 checkbox checkbox-lg\"/>Show\n                Statuses\n              </li>\n              <li class=\"bg-amber-800 text-white p-2 rounded-md shadow\">\n                <input type=\"checkbox\" checked class=\"mr-2 checkbox checkbox-lg\"/>\n                <span>Channels. Display list of channels. Click channel name to go to the channel playlist edit page.</span>\n                <div class=\"mt-2 text-sm\">\n                  <p>Grid style, 1 column mobile, 2 column tablet, 3 column lg, 4 column xl.</p>\n                  <p>Rows: Times (next 24 hours) - can scroll up to 72 hours ahead or 72 hours back.</p>\n                  <p>Columns: Days (next 7 days).</p>\n                  <p>Need new Pages folder: Channels/Index, Channels/Create, Channels/Edit, ch/channelId (e.g.,\n                    ch/01).</p>\n                </div>\n              </li>\n            </ol>\n          </div>\n        </div>\n\n\n\n\n          <div class=\"card w-full mx-6 bg-neutral text-neutral-content\">\n              <div class=\"card-body items-center text-center\">\n                  <div class=\"mockup-code break-words\">\n                      <h1 class=\"pb-4\">First Time Setup from Clone</h1>\n                      <pre data-prefix=\"$\"><code>unzip README.zip</code></pre>\n\n                      <h2 class=\"pt-4 pb-2\">Step-by-Step Instructions:</h2>\n\n                      <p class=\"py-3 text-left\">Recommend: Ubuntu 22.04 or Mac. If using Windows install WSL2, Docker Desktop and Ubuntu 22.04</p>\n\n                      <h3 class=\"my-3 text-left\">1. Install PHP 8.1</h3>\n                      <pre data-prefix=\"1.1\"><code>sudo apt update</code></pre>\n                      <pre data-prefix=\"1.2\"><code>sudo apt install software-properties-common ca-certificates lsb-release apt-transport-https -y</code></pre>\n                      <pre data-prefix=\"1.3\"><code>sudo add-apt-repository ppa:ondrej/php</code></pre>\n                      <p class=\"py-3 text-left\">NOTE: if Apache2 gets installed at this point then remove it to use Laravel Sail without conflicting ports.</p>\n                      <pre data-prefix=\"1.4\"><code>sudo apt update</code></pre>\n                      <pre data-prefix=\"1.5\"><code>sudo apt install php8.1 php8.1-cli php8.1-common php8.1-curl php8.1-xml php8.1-mbstring php8.1-zip</code></pre>\n                      <pre data-prefix=\"1.6\"><code>php -v</code></pre>\n\n                      <h3 class=\"my-3 text-left\">2. Install Node.js and npm</h3>\n                      <pre data-prefix=\"2.1\"><code>curl -fsSL https://deb.nodesource.com/setup_16.x | sudo -E bash -</code></pre>\n                      <pre data-prefix=\"2.2\"><code>sudo apt-get install -y nodejs</code></pre>\n                      <pre data-prefix=\"2.3\"><code>node -v</code></pre>\n                      <pre data-prefix=\"2.4\"><code>npm -v</code></pre>\n\n                      <h3 class=\"my-3 text-left\">3. Install Composer and move it to a global command</h3>\n                      <pre data-prefix=\"3.1\"><code>php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\"</code></pre>\n                      <pre data-prefix=\"3.2\"><code>php -r \"if (hash_file('SHA384', 'composer-setup.php') === '$(php -r \"echo trim(file_get_contents('https://composer.github.io/installer.sig'));\")') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;\"</code></pre>\n                      <pre data-prefix=\"3.3\"><code>php composer-setup.php</code></pre>\n                      <pre data-prefix=\"3.4\"><code>php -r \"unlink('composer-setup.php');\"</code></pre>\n                      <pre data-prefix=\"3.5\"><code>sudo mv composer.phar /usr/local/bin/composer</code></pre>\n                      <pre data-prefix=\"3.6\"><code>composer --version</code></pre>\n\n                      <h3 class=\"my-3 text-left\">4. Add Laravel Sail to your bash profile</h3>\n                      <pre data-prefix=\"4.1\"><code>echo \"alias sail='[ -f sail ] && bash sail || bash vendor/bin/sail'\" >> ~/.bashrc</code></pre>\n                      <pre data-prefix=\"4.2\"><code>source ~/.bashrc</code></pre>\n\n                      <h3 class=\"my-3 text-left\">5. Create an SSH key to access GitHub repo</h3>\n                      <pre data-prefix=\"5.1\"><code>ssh-keygen -t rsa -b 4096 -C \"your.email@example.com\" -f /path/to/your_custom_filename</code></pre>\n                      <pre data-prefix=\"5.2\"><code>eval \"$(ssh-agent -s)\"</code></pre>\n                      <pre data-prefix=\"5.3\"><code>ssh-add ~/.ssh/id_rsa</code></pre>\n                      <pre data-prefix=\"5.4\"><code>cat ~/.ssh/id_rsa.pub</code></pre>\n                      <pre data-prefix=\"5.5\"><code># Copy the output and add it to your GitHub account under SSH keys</code></pre>\n\n                      <h3 class=\"my-3 text-left\">6. Clone repo</h3>\n                      <pre data-prefix=\"6.1\"><code>git clone [repository URL]</code></pre>\n                      <pre data-prefix=\"6.2\"><code>cd [repository-directory]</code></pre>\n                      <pre data-prefix=\"6.3\"><code>git checkout development && git pull origin development</code></pre>\n                      <pre data-prefix=\"6.4\"><code>git config --global user.name \"Your Name\"</code></pre>\n                      <pre data-prefix=\"6.5\"><code>git config --global user.email \"your.email@example.com\"</code></pre>\n\n                      <h3 class=\"my-3 text-left\">7. Create the required database</h3>\n                      <p class=\"mt-3 text-left\">NOTE: Laravel sail comes pre-configured with a database.</p>\n                      <p class=\"mb-3 text-left\">database = nottvbeta, username = sail, password = password</p>\n                      <pre data-prefix=\"7.1\"><code>mysql -u root -p</code></pre>\n                      <pre data-prefix=\"7.2\"><code>CREATE DATABASE your_database_name;</code></pre>\n\n                      <h3 class=\"my-3 text-left\">8. Getting things ready</h3>\n                      <pre data-prefix=\"8.1\"><code>Copy .env.example to .env</code></pre>\n                      <pre data-prefix=\"8.2\"><code>cp .env.example .env</code></pre>\n\n                      <p class=\"my-3 text-left\">Ensure there is no APP_KEY in .env and run:</p>\n                      <pre data-prefix=\"9.\"><code>sail artisan key:generate</code></pre>\n\n                      <h3 class=\"my-3 text-left\">10. Create the cache directories:</h3>\n                      <p class=\"mt-3 text-left\">Ensure the correct folder/file permissions:</p>\n                      <p class=\"mb-3 text-left\">sudo chown -R $USER:www-data storage && sudo chmod -R 775 storage</p>\n                      <pre data-prefix=\"10.1\"><code>mkdir -p storage/framework/cache/data</code></pre>\n                      <pre data-prefix=\"10.2\"><code>mkdir -p storage/framework/views</code></pre>\n                      <pre data-prefix=\"10.3\"><code>mkdir -p storage/framework/sessions</code></pre>\n\n                      <h3 class=\"my-3 text-left\">Final steps:</h3>\n                      <pre data-prefix=\"11.\"><code>Run: sail php artisan optimize:clear</code></pre>\n                      <pre data-prefix=\"12.\"><code>Run: composer install</code></pre>\n                      <pre data-prefix=\"13.\"><code>Run: composer update</code></pre>\n                      <pre data-prefix=\"14.\"><code>Run: npm install</code></pre>\n                      <pre data-prefix=\"15.\"><code>Run: sail up</code></pre>\n                      <pre data-prefix=\"16.\"><code>Run: sail php artisan migrate</code></pre>\n                      <pre data-prefix=\"17.1\"><code>Run This: sail php artisan db:seed (for testing)</code></pre>\n                      <pre data-prefix=\"17.2\"><code>Or Run That: sail php artisan db:seed --class=FirstRunSeeder (seed the database without test data)</code></pre>\n                      <pre data-prefix=\"18.\"><code>Run: sail php artisan slugs:update</code></pre>\n                      <pre data-prefix=\"19.\"><code>Run: sail php artisan app:set-first-run-settings</code></pre>\n\n                      <h2 class=\"pt-8 pb-2\">If you have Composer, PHP 8.1, and Node.js installed:</h2>\n                      <pre data-prefix=\"$\"><code>composer update</code></pre>\n                      <pre data-prefix=\"$\"><code>sail up</code></pre>\n                      <pre data-prefix=\"$\"><code>npx mix watch</code></pre>\n                      <pre data-prefix=\"$\"><code>sail php artisan horizon</code></pre>\n\n                      <h2 class=\"py-4\">.env Settings</h2>\n                      <pre data-prefix=\"\"><code>MISTSERVER_HOST=http://mistserver/api2</code></pre>\n                      <pre data-prefix=\"\"><code>MISTSERVER_USERNAME=nottvadmin</code></pre>\n                      <pre data-prefix=\"\"><code>MISTSERVER_PASSWORD=123</code></pre>\n\n                      <h2 class=\"py-4\">Admin Settings</h2>\n                      <pre data-prefix=\"\"><code>MISTSERVER URI: http://localhost:8080/</code></pre>\n                      <pre data-prefix=\"\"><code>MISTSERVER RTMP URI: rtmp://localhost/</code></pre>\n\n                      <h2 class=\"py-4\">Use These Tools:</h2>\n                      <pre data-prefix=\"\"><code>http://localhost:4242 (MistServer)</code></pre>\n                      <pre data-prefix=\"\"><code>http://localhost:8025 (Mailhog)</code></pre>\n                      <pre data-prefix=\"\"><code>http://localhost/horizon (Horizon Job Queue)</code></pre>\n                  </div>\n              </div>\n          </div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n      </div>\n\n    </div>\n  </div>\n  <PopUpModal id=\"AdminSettingsPopUpModal\">\n    <template #header>\n      {{ popUpModalTitle }}\n    </template>\n    <template #main>\n      {{ popUpModalMessage }}\n    </template>\n  </PopUpModal>\n</template>\n\n<script setup>\nimport { router } from '@inertiajs/vue3'\nimport { computed, nextTick, onMounted, onUnmounted, reactive, ref } from 'vue'\nimport { useForm } from '@inertiajs/vue3'\nimport { useClipboard } from '@vueuse/core'\nimport { usePageSetup } from '@/Utilities/PageSetup'\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\nimport { useAdminStore } from '@/Stores/AdminStore'\nimport JetValidationErrors from '@/Jetstream/ValidationErrors'\nimport ServerTime from '@/Components/Pages/Admin/ServerTime'\nimport Message from '@/Components/Global/Modals/Messages'\nimport PopUpModal from '@/Components/Global/Modals/PopUpModal.vue'\nimport TabbableTextarea from '@/Components/Global/TextEditor/TabbableTextarea.vue'\nimport FirstPlayVideoSourceSelector from '@/Components/Pages/Admin/Settings/FirstPlayVideoSourceSelector.vue'\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome'\nimport UploadNewsData from '@/Pages/Admin/Settings/Elements/UploadNewsData.vue'\nimport SubscriptionSettings from '@/Components/Pages/Admin/Settings/SubscriptionSettings.vue'\n\nusePageSetup('admin.settings')\n\nconst appSettingStore = useAppSettingStore()\nconst adminStore = useAdminStore()\n\nconst { copy } = useClipboard()\n\nconst commands = reactive([\n  { text: 'git checkout staging', copied: false },\n  { text: 'rm -rf public/js/*', copied: false },\n  { text: 'rm -rf public/css/*', copied: false },\n  { text: 'git merge development', copied: false },\n  { text: 'npm run production', copied: false },\n  { text: 'git add .', copied: false },\n  { text: 'git commit -m \"merge development build production\"', copied: false },\n  { text: 'git push origin', copied: false },\n  { text: 'git checkout development', copied: false },\n]);\n\nfunction copyCommand(command) {\n  copy(command.text);\n  command.copied = true;\n  setTimeout(() => {\n    command.copied = false;\n  }, 10000); // Hide the message after 10 second\n}\n\nlet props = defineProps({\n  id: Number,\n  countries: Object,\n  default_country: Number,\n  cdn_endpoint: String,\n  cloud_folder: String,\n  cloud_private_folder: String,\n  first_play_video_source: String,\n  first_play_video_source_type: String,\n  first_play_video_name: String,\n  first_play_channel_id: Number,\n  // mist_server_ip: String,\n  mist_server_uri: String,\n  mist_server_rtmp_uri: String,\n  mist_server_automated_recording_folder: String,\n  mist_server_user_recording_folder: String,\n  public_stats_url: String,\n  subscription_settings: Object,\n  // mist_server_api_url: String,\n  // mist_server_username: String,\n  // mist_server_password: String,\n  // mist_access_control_secret: String,\n  messageType: String,\n  currentSection: String,\n})\n\nlet form = useForm({\n  id: props.id,\n  default_country: props.default_country,\n  cdn_endpoint: props.cdn_endpoint,\n  cloud_folder: props.cloud_folder,\n  cloud_private_folder: props.cloud_private_folder,\n  first_play_video_source: props.first_play_video_source,\n  first_play_video_source_type: props.first_play_video_source_type,\n  first_play_video_name: props.first_play_video_name,\n  first_play_channel_id: props.first_play_channel_id,\n  // mist_server_ip: props.mist_server_ip,\n  mist_server_uri: props.mist_server_uri,\n  mist_server_rtmp_uri: props.mist_server_rtmp_uri,\n  mist_server_automated_recording_folder: props.mist_server_automated_recording_folder,\n  mist_server_user_recording_folder: props.mist_server_user_recording_folder,\n  public_stats_url: props.public_stats_url,\n  subscription_settings: props.subscription_settings,\n  // mist_server_api_url: props.mist_server_api_url,\n  // mist_server_username: props.mist_server_username,\n  // mist_server_password: props.mist_server_password,\n  // mist_access_control_secret: props.mist_access_control_secret,\n})\n\nconst countries = ref([])\n\nconst popUpModalTitle = ref('')\nconst popUpModalMessage = ref('')\n\n// const topDiv = document.getElementById(\"topDiv\")\n\nonMounted(() => {\n  countries.value = props.countries\n  secureNotes.value = ''\n  if (props.subscription_settings) {\n    adminStore.settingsForm.subscriptionSettings = props.subscription_settings\n  }\n  if(props.currentSection === 'firstPlaySettings'){\n    openFirstPlaySettings()\n  }\n})\n\nonUnmounted(() => {\n  secureNotes.value = ''\n})\n\nconst disabledButtonClasses = computed(() => ({\n  'disabled:opacity-50 disabled:cursor-not-allowed': secureNotesOpen.value || firstPlaySettingsOpen.value,\n}));\n\nconst firstPlaySettingsOpen = ref(false)\nconst firstPlaySettingsSaving = ref(false)\n\nconst openFirstPlaySettings = () => {\n  firstPlaySettingsOpen.value = true\n  secureNotesOpen.value = false\n}\n\nconst updateFirstPlaySettings = async () => {\n  await adminStore.updateFirstPlaySettings();\n\n  // Check if there are any validation errors after the update attempt\n  if (Object.keys(adminStore.validationErrors).length === 0) {\n    // If there are no validation errors, it's safe to close the settings\n    firstPlaySettingsOpen.value = false;\n  }\n  // If there are errors, the function ends without setting firstPlaySettingsOpen.value to false,\n  // so the settings remain open for the user to see and correct the errors.\n};\n\nconst secureNotesOpen = ref(false)\nconst secureNotes = ref('')\nconst secureNotesSaving = ref(false)\n\nconst openSecureNotes = async () => {\n  secureNotesOpen.value = true\n  firstPlaySettingsOpen.value = false\n  // Fetch the encrypted notes from the server\n  try {\n    const response = await axios.get('/admin/secure-notes');\n    secureNotes.value = response.data.content; // Assuming the server sends back decrypted data\n  } catch (error) {\n    console.error(\"Failed to fetch secure notes:\", error);\n    // Handle error (e.g., show a message to the user)\n  }\n}\n\nconst updateSecureNotes = (modelValue) => {\n  secureNotes.value = modelValue\n}\n\nconst saveSecureNotes = async () => {\n  try {\n    secureNotesSaving.value = true\n    await axios.put('/admin/secure-notes', { content: secureNotes.value });\n    secureNotesOpen.value = false\n    secureNotesSaving.value = false\n  } catch (error) {\n    console.error(\"Failed to save secure notes:\", \"An error occurred while saving the notes.\"); // Log a generic message\n    // Optionally log the detailed error server-side, ensuring sensitive information is not exposed\n    // Inform the user in a generic manner\n    secureNotesOpen.value = false\n    secureNotesSaving.value = false\n    alert(\"We encountered an issue saving your notes. Please try again.\");\n  }\n}\n\nlet submit = () => {\n  form.subscription_settings = adminStore.settingsForm.subscriptionSettings\n  form.patch(route('admin.settings'))\n  const topDiv = document.getElementById('topDiv')\n  topDiv.scrollIntoView()\n}\n\nlet getAllEpisodesButtonActive = ref(false)\n\nfunction getEpisodesFromEmbedCodes() {\n  router.post('getVideosFromEmbedCodes')\n  getAllEpisodesButtonActive = false\n}\n\nconst backupMistServerConfig = async () => {\n  // Optional: use confirm dialog to ensure the user wants to proceed with the backup\n  if (confirm('Are you sure you want to backup the current Mist Server Config?')) {\n    try {\n      // Post request to initiate config backup\n      const response = await axios.post('/mist-server/config-backup')\n      console.log('Config backup successful:', response.data)\n      popUpModalTitle.value = 'Backup MistServer Config Success'\n      popUpModalMessage.value = response.data.message\n      document.getElementById('AdminSettingsPopUpModal').showModal()\n    } catch (error) {\n      console.error('Error backing up config:', error)\n      // Extract a more user-friendly message from the error object\n      let errorMessage = \"An unexpected error occurred. Please try again later.\";\n      if (error.response && error.response.data && error.response.data.message) {\n        // Use the custom error message from the server if available\n        errorMessage = error.response.data.message;\n      } else if (error.message) {\n        // Use a generic error message or the message from the error object\n        errorMessage = error.message;\n      }\n      // Handle error, maybe notify the user that backup failed\n      popUpModalTitle.value = 'Backup MistServer Config Error'\n      popUpModalMessage.value = errorMessage\n      document.getElementById('AdminSettingsPopUpModal').showModal()\n    }\n  } else {\n    console.log('Config backup cancelled.')\n  }\n}\n\n\nconst restoreMistServerConfig = async () => {\n  // Use confirm dialog result to decide whether to proceed\n  if (confirm('Are you sure you want to restore the Mist Server Config to the last saved version?')) {\n    try {\n      // Assuming there's a separate API endpoint or function for restoration\n      const response = await axios.post('/mist-server/config-restore') // Adjust URL/path as necessary\n      console.log('Config restoration successful:', response.data)\n      popUpModalTitle.value = 'Restore MistServer Config Success'\n      popUpModalMessage.value = response.data.message\n      document.getElementById('AdminSettingsPopUpModal').showModal()\n      // Handle success response\n    } catch (error) {\n      console.error('Error restoring config:', error)\n      popUpModalTitle.value = 'Restore MistServer Config Error'\n      popUpModalMessage.value = error\n      document.getElementById('AdminSettingsPopUpModal').showModal()\n      // Handle error\n    }\n  } else {\n    console.log('Config restoration cancelled.')\n  }\n}\n\nasync function restoreAllStreams() {\n  try {\n    const response = await axios.post('/admin/mist-stream/restore-all-streams')\n    // Handle success response\n    console.log(response.data) // Log or handle the response data\n    popUpModalTitle.value = 'Streams restored successfully.'\n    popUpModalMessage.value = response.data.message\n    document.getElementById('AdminSettingsPopUpModal').showModal()\n  } catch (error) {\n    console.error(error) // Log or handle error\n    popUpModalTitle.value = 'Failed to restore streams.'\n    popUpModalMessage.value = error\n    document.getElementById('AdminSettingsPopUpModal').showModal()\n  }\n}\n\n\n// Sample URL\nconst mistServerUri = props.mist_server_uri ?? ''\n\n// Function to remove 's' from 'https'\nfunction convertToHttp(url) {\n  return url.replace('https://', 'http://')\n}\n\n// Convert the URL and store it\nconst mistServerUriForManagementInterface = ref(convertToHttp(mistServerUri))\n\n\n</script>\n<style scoped>\n\n.copied-message {\n  margin-left: 8px; /* Adjust as needed */\n  /* Add any additional styling here */\n}\n\n.admin-container {\n  display: flex;\n}\n\n.sticky-sidebar {\n  flex-basis: 200px;\n  position: sticky;\n  top: 0; /* Adjust based on header/nav height */\n  height: 100vh;\n  padding: 20px;\n  background-color: #f7fafc;\n}\n\n.action-button {\n  display: block;\n  width: 100%;\n  padding: 10px;\n  margin-bottom: 10px;\n  background-color: #4a5568; /* Tailwind gray-700 */\n  color: white;\n  text-align: left;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.action-button:hover {\n  background-color: #2d3748; /* Tailwind gray-800 */\n}\n\n.action-button.save-notes {\n  background-color: #1D4ED8; /* Tailwind blue-700 */\n}\n\n.action-button.save-notes:hover {\n  background-color: #1E40AF; /* Tailwind blue-800 */\n}\n\n.main-actions {\n  flex-grow: 1;\n  padding: 20px;\n}\n\n/* Responsive adjustments */\n@media (max-width: 768px) {\n  .admin-container {\n    flex-direction: column;\n  }\n\n  .sticky-sidebar {\n    position: relative;\n    height: auto;\n  }\n}\n\n.actions-group {\n  margin-bottom: 20px;\n}\n\n.group-title {\n  margin-bottom: 10px;\n  color: #4a5568; /* Tailwind gray-700 */\n  font-size: 1.25rem; /* Tailwind text-lg */\n}\n\n.action-button {\n  display: block;\n  margin-bottom: 8px; /* Adjust spacing between buttons */\n  /* Other styles remain the same */\n}\n\n</style>\n","import api from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-10.use[1]!../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-10.use[2]!../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./Settings.vue?vue&type=style&index=0&id=844ea7ee&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./Settings.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Settings.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Settings.vue?vue&type=style&index=0&id=844ea7ee&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-844ea7ee\"]])\n\nexport default __exports__","import script from \"./UploadNewsData.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./UploadNewsData.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","  <!-- resources/js/Pages/Admin/UploadNewsData.vue -->\n  <template>\n    <div class=\"container mb-6 rounded-lg bg-gray-100 p-4\">\n      <h2 class=\"mb-4\">Upload Data for News Cities, Provinces, Districts</h2>\n      <form @submit.prevent=\"uploadFile\">\n        <div class=\"flex flex-col form-group gap-2 mb-4 w-fit\">\n          <label class=\"block uppercase font-bold text-xs text-gray-700 dark:text-gray-300\">Select Model</label>\n          <select id=\"model\" v-model=\"selectedModel\" class=\"form-select block w-full\" required @change=\"updateColumns\">\n            <option value=\"\" disabled>Select a model</option>\n            <option value=\"NewsCity\">News Cities</option>\n            <option value=\"NewsProvince\">News Provinces</option>\n            <option value=\"NewsFederalElectoralDistrict\">News Federal Electoral Districts</option>\n            <option value=\"NewsSubnationalElectoralDistrict\">News Subnational Electoral Districts</option>\n          </select>\n        </div>\n        <div v-if=\"selectedModel\" class=\"mb-4\">\n          <h3 class=\"mb-2 font-bold text-xs text-gray-700 dark:text-gray-300\">CSV Format Requirements</h3>\n          <p v-if=\"selectedModel === 'NewsCity'\" class=\"text-xs text-gray-700 dark:text-gray-300\">\n            name, slug, description, type, province_id, country_id, population, area, latitude, longitude, economic_indicators, cultural_significance, city_mayor, tourism_attractions, city_website, year_incorporated, airport_code, time_zone, gmt_offset, gmt_offset_dst, dst_observed\n          </p>\n          <!-- Add similar descriptions for other models if needed -->\n        </div>\n        <div v-if=\"selectedModel\" class=\"mb-4\">\n          <h3 class=\"mb-2 font-bold text-xs text-gray-700 dark:text-gray-300\">Select Columns to Update</h3>\n          <div v-for=\"(label, column) in columns[selectedModel]\" :key=\"column\" class=\"flex items-center gap-2 space-y-2\">\n            <input type=\"checkbox\" :id=\"column\" v-model=\"selectedColumns\" :value=\"column\" />\n            <label :for=\"column\" class=\"text-xs text-gray-700 dark:text-gray-300\">{{ label }}</label>\n          </div>\n        </div>\n        <div class=\"flex flex-col form-group gap-2 mb-4 w-fit\">\n          <label class=\"block uppercase font-bold text-xs text-gray-700 dark:text-gray-300\">Upload CSV File</label>\n          <input type=\"file\" id=\"dataFile\" @change=\"handleFileUpload\" accept=\".csv\" required />\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary\" :disabled=\"isUploading\">Upload</button>\n      </form>\n    </div>\n  </template>\n\n  <script setup>\n  import { reactive, ref } from 'vue'\n  import axios from 'axios';\n\n  const isUploading = ref(false);\n  const file = ref(null);\n  const selectedModel = ref('');\n  const selectedColumns = ref([]);\n\n  const columns = reactive({\n    NewsCity: {\n      name: 'Name',\n      slug: 'Slug',\n      description: 'Description',\n      type: 'Type',\n      province_id: 'Province ID',\n      country_id: 'Country ID',\n      population: 'Population',\n      area: 'Area',\n      latitude: 'Latitude',\n      longitude: 'Longitude',\n      economic_indicators: 'Economic Indicators',\n      cultural_significance: 'Cultural Significance',\n      city_mayor: 'City Mayor',\n      tourism_attractions: 'Tourism Attractions',\n      city_website: 'City Website',\n      year_incorporated: 'Year Incorporated',\n      airport_code: 'Airport Code',\n      time_zone: 'Time Zone',\n      gmt_offset: 'GMT Offset',\n      gmt_offset_dst: 'GMT Offset DST',\n      dst_observed: 'DST Observed'\n    },\n    // Add columns for other models if needed\n  });\n\n  const handleFileUpload = (event) => {\n    file.value = event.target.files[0];\n  };\n\n  const updateColumns = () => {\n    selectedColumns.value = [];\n  };\n\n  const uploadFile = async () => {\n    if (!file.value || !selectedModel.value) return;\n\n    isUploading.value = true;\n\n    const formData = new FormData();\n    formData.append('dataFile', file.value);\n    formData.append('model', selectedModel.value);\n    formData.append('columns', JSON.stringify(selectedColumns.value));\n\n    try {\n      await axios.post('/admin/upload-news-data', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n      alert('File uploaded successfully!');\n    } catch (error) {\n      console.error('Error uploading file:', error);\n      alert('There was an error uploading the file.');\n    } finally {\n      isUploading.value = false;\n      file.value = null;\n      selectedModel.value = '';\n      selectedColumns.value = [];\n    }\n  };\n  </script>\n"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","initialState","channels","items","activeItemId","selectedChannel","currentType","searchTerm","modalHeader","currentPage","itemsPerPage","currentChannelsPage","itemsPerChannelsPage","sourceSelector","source","sourceType","firstPlaySettings","useCustomVideo","customVideoSource","customVideoSourceType","validationErrors","checkSendProcessing","activeStreams","fetchingActiveStreams","settingsForm","subscriptionSettings","monthly","price","api_id","yearly","useAdminStore","defineStore","state","actions","assign","this","loadChannels","setCheckSendProcessing","unsetCheckSendProcessing","fetchChannels","_this","_callee","_context","axios","get","response","data","console","log","toggleChannelActiveStatus","channelId","_callee2","notificationStore","_response$data","message","status","_context2","useNotificationStore","post","setToastNotification","t0","addChannel","_this2","_callee3","_response$data2","errorMessage","validationMessages","_context3","success","fallbackMessages","map","msgs","join","updateChannel","newName","_this3","_callee4","_response$data3","_context4","concat","setSelectedChannel","item","setCurrentType","clearSelectedChannelAndItems","fetchItems","_this4","_callee5","_response","_response2","_context5","fetch","json","mist_stream_id","channel_external_source_id","channel_playlist_id","updateActiveItemId","id","_this5","_callee6","_context6","setMistStream","setChannelPlaylist","setExternalSource","setPlaybackPriorityType","channel","priorityType","_this6","_callee7","dataToSend","index","_context7","setPriorityType","findIndex","mistStreamId","_this7","_callee8","_context8","channelPlaylistId","_this8","_callee9","_context9","externalSourceId","_this9","_callee10","_context10","nextPage","totalModalPages","Math","ceil","prevPage","setPage","page","nextChannelsPage","prevChannelsPage","setChannelsPage","fetchFirstPlaySettings","_this10","_callee11","_response$data4","_context11","updateFirstPlaySettings","_this11","_callee12","_context12","patch","errors","handleErrors","fetchActiveStreams","_this12","_callee13","_response$data5","_context13","setActiveStreamAsFirstPlay","activeStream","_this13","_callee14","videoPlayerStore","_context14","useVideoPlayerStore","mistServerUri","customVideoName","customMediaType","streamName","streamMimeType","showName","getters","filteredItems","currentItem","find","activeItem","paginatedItems","start","end","paginatedChannels","totalChannelsPages","activeChannelsCount","filter","active","usePageSetup","pageName","userStore","useUserStore","appSettingStore","useAppSettingStore","showFlashMessage","pageIsHidden","isMobile","window","innerWidth","fullPage","ott","showOttButtons","makeVideoTopRight","pageReload","pageWasReloaded","location","reload","router","on","event","search","shouldScrollToTop","requestAnimationFrame","topDiv","document","getElementById","scrollIntoView","behavior","scrollTo","setPrevUrl","noLayout","___CSS_LOADER_EXPORT___","module","props","__props","clearFlashMessage","computed","flash","warning","_ref","route","emit","onInput","target","onTabPress","textarea","val","selectionStart","selectionEnd","substring","usePage","hasErrors","serverTime","ref","localTime","_fetchServerTime","onMounted","userLocalDate","fetchServerTime","Date","toLocaleString","getUserTimezone","userTimezone","Intl","DateTimeFormat","resolvedOptions","timeZone","adminStore","channelStore","useChannelStore","getChannels","useCustomVideoCheckbox","blurCheckbox","blur","clearFirstPlayCacheData","watch","_adminStore$firstPlay","newCustomVideoSetting","immediate","options","locals","copy","useClipboard","commands","reactive","text","copied","form","useForm","default_country","cdn_endpoint","cloud_folder","cloud_private_folder","first_play_video_source","first_play_video_source_type","first_play_video_name","first_play_channel_id","mist_server_uri","mist_server_rtmp_uri","mist_server_automated_recording_folder","mist_server_user_recording_folder","public_stats_url","subscription_settings","countries","popUpModalTitle","popUpModalMessage","secureNotes","currentSection","openFirstPlaySettings","onUnmounted","disabledButtonClasses","secureNotesOpen","firstPlaySettingsOpen","firstPlaySettingsSaving","secureNotesSaving","openSecureNotes","_ref2","content","updateSecureNotes","modelValue","saveSecureNotes","_ref3","put","alert","submit","getAllEpisodesButtonActive","getEpisodesFromEmbedCodes","backupMistServerConfig","_ref4","confirm","showModal","restoreMistServerConfig","_ref5","restoreAllStreams","_restoreAllStreams","_props$mist_server_ur","mistServerUriForManagementInterface","replace","command","setTimeout","isUploading","file","selectedModel","selectedColumns","columns","NewsCity","slug","description","province_id","country_id","population","area","latitude","longitude","economic_indicators","cultural_significance","city_mayor","tourism_attractions","city_website","year_incorporated","airport_code","time_zone","gmt_offset","gmt_offset_dst","dst_observed","handleFileUpload","files","updateColumns","uploadFile","formData","FormData","append","JSON","stringify","headers"],"sourceRoot":""}
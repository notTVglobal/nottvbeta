{"version":3,"file":"js/5340.js","mappings":";gbACAA,EAAA,kBAAAC,CAAA,MAAAC,EAAAD,EAAA,GAAAE,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAK,gBAAA,SAAAP,EAAAD,EAAAE,GAAAD,EAAAD,GAAAE,EAAAO,KAAA,EAAAC,EAAA,mBAAAC,OAAAA,OAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAjB,EAAAD,EAAAE,GAAA,OAAAC,OAAAK,eAAAP,EAAAD,EAAA,CAAAS,MAAAP,EAAAiB,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAApB,EAAAD,EAAA,KAAAkB,EAAA,aAAAjB,GAAAiB,EAAA,SAAAjB,EAAAD,EAAAE,GAAA,OAAAD,EAAAD,GAAAE,CAAA,WAAAoB,EAAArB,EAAAD,EAAAE,EAAAG,GAAA,IAAAK,EAAAV,GAAAA,EAAAI,qBAAAmB,EAAAvB,EAAAuB,EAAAX,EAAAT,OAAAqB,OAAAd,EAAAN,WAAAU,EAAA,IAAAW,EAAApB,GAAA,WAAAE,EAAAK,EAAA,WAAAH,MAAAiB,EAAAzB,EAAAC,EAAAY,KAAAF,CAAA,UAAAe,EAAA1B,EAAAD,EAAAE,GAAA,WAAA0B,KAAA,SAAAC,IAAA5B,EAAA6B,KAAA9B,EAAAE,GAAA,OAAAD,GAAA,OAAA2B,KAAA,QAAAC,IAAA5B,EAAA,EAAAD,EAAAsB,KAAAA,EAAA,IAAAS,EAAA,iBAAAC,EAAA,iBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,YAAAZ,IAAA,UAAAa,IAAA,UAAAC,IAAA,KAAAC,EAAA,GAAApB,EAAAoB,EAAA1B,GAAA,8BAAA2B,EAAApC,OAAAqC,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAA,MAAAD,GAAAA,IAAAvC,GAAAG,EAAAyB,KAAAW,EAAA7B,KAAA0B,EAAAG,GAAA,IAAAE,EAAAN,EAAAjC,UAAAmB,EAAAnB,UAAAD,OAAAqB,OAAAc,GAAA,SAAAM,EAAA3C,GAAA,0BAAA4C,SAAA,SAAA7C,GAAAkB,EAAAjB,EAAAD,GAAA,SAAAC,GAAA,YAAA6C,QAAA9C,EAAAC,EAAA,gBAAA8C,EAAA9C,EAAAD,GAAA,SAAAgD,EAAA9C,EAAAK,EAAAG,EAAAE,GAAA,IAAAE,EAAAa,EAAA1B,EAAAC,GAAAD,EAAAM,GAAA,aAAAO,EAAAc,KAAA,KAAAZ,EAAAF,EAAAe,IAAAE,EAAAf,EAAAP,MAAA,OAAAsB,GAAA,UAAAkB,EAAAlB,IAAA1B,EAAAyB,KAAAC,EAAA,WAAA/B,EAAAkD,QAAAnB,EAAAoB,SAAAC,MAAA,SAAAnD,GAAA+C,EAAA,OAAA/C,EAAAS,EAAAE,EAAA,aAAAX,GAAA+C,EAAA,QAAA/C,EAAAS,EAAAE,EAAA,IAAAZ,EAAAkD,QAAAnB,GAAAqB,MAAA,SAAAnD,GAAAe,EAAAP,MAAAR,EAAAS,EAAAM,EAAA,aAAAf,GAAA,OAAA+C,EAAA,QAAA/C,EAAAS,EAAAE,EAAA,IAAAA,EAAAE,EAAAe,IAAA,KAAA3B,EAAAK,EAAA,gBAAAE,MAAA,SAAAR,EAAAI,GAAA,SAAAgD,IAAA,WAAArD,GAAA,SAAAA,EAAAE,GAAA8C,EAAA/C,EAAAI,EAAAL,EAAAE,EAAA,WAAAA,EAAAA,EAAAA,EAAAkD,KAAAC,EAAAA,GAAAA,GAAA,aAAA3B,EAAA1B,EAAAE,EAAAG,GAAA,IAAAE,EAAAwB,EAAA,gBAAArB,EAAAE,GAAA,GAAAL,IAAA0B,EAAA,UAAAqB,MAAA,mCAAA/C,IAAA2B,EAAA,cAAAxB,EAAA,MAAAE,EAAA,OAAAH,MAAAR,EAAAsD,MAAA,OAAAlD,EAAAmD,OAAA9C,EAAAL,EAAAwB,IAAAjB,IAAA,KAAAE,EAAAT,EAAAoD,SAAA,GAAA3C,EAAA,KAAAE,EAAA0C,EAAA5C,EAAAT,GAAA,GAAAW,EAAA,IAAAA,IAAAmB,EAAA,gBAAAnB,CAAA,cAAAX,EAAAmD,OAAAnD,EAAAsD,KAAAtD,EAAAuD,MAAAvD,EAAAwB,SAAA,aAAAxB,EAAAmD,OAAA,IAAAjD,IAAAwB,EAAA,MAAAxB,EAAA2B,EAAA7B,EAAAwB,IAAAxB,EAAAwD,kBAAAxD,EAAAwB,IAAA,gBAAAxB,EAAAmD,QAAAnD,EAAAyD,OAAA,SAAAzD,EAAAwB,KAAAtB,EAAA0B,EAAA,IAAAK,EAAAX,EAAA3B,EAAAE,EAAAG,GAAA,cAAAiC,EAAAV,KAAA,IAAArB,EAAAF,EAAAkD,KAAArB,EAAAF,EAAAM,EAAAT,MAAAM,EAAA,gBAAA1B,MAAA6B,EAAAT,IAAA0B,KAAAlD,EAAAkD,KAAA,WAAAjB,EAAAV,OAAArB,EAAA2B,EAAA7B,EAAAmD,OAAA,QAAAnD,EAAAwB,IAAAS,EAAAT,IAAA,YAAA6B,EAAA1D,EAAAE,GAAA,IAAAG,EAAAH,EAAAsD,OAAAjD,EAAAP,EAAAa,SAAAR,GAAA,GAAAE,IAAAN,EAAA,OAAAC,EAAAuD,SAAA,eAAApD,GAAAL,EAAAa,SAAA,SAAAX,EAAAsD,OAAA,SAAAtD,EAAA2B,IAAA5B,EAAAyD,EAAA1D,EAAAE,GAAA,UAAAA,EAAAsD,SAAA,WAAAnD,IAAAH,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAA,IAAAkC,UAAA,oCAAA1D,EAAA,aAAA8B,EAAA,IAAAzB,EAAAiB,EAAApB,EAAAP,EAAAa,SAAAX,EAAA2B,KAAA,aAAAnB,EAAAkB,KAAA,OAAA1B,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAAnB,EAAAmB,IAAA3B,EAAAuD,SAAA,KAAAtB,EAAA,IAAAvB,EAAAF,EAAAmB,IAAA,OAAAjB,EAAAA,EAAA2C,MAAArD,EAAAF,EAAAgE,YAAApD,EAAAH,MAAAP,EAAA+D,KAAAjE,EAAAkE,QAAA,WAAAhE,EAAAsD,SAAAtD,EAAAsD,OAAA,OAAAtD,EAAA2B,IAAA5B,GAAAC,EAAAuD,SAAA,KAAAtB,GAAAvB,GAAAV,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAA,IAAAkC,UAAA,oCAAA7D,EAAAuD,SAAA,KAAAtB,EAAA,UAAAgC,EAAAlE,GAAA,IAAAD,EAAA,CAAAoE,OAAAnE,EAAA,SAAAA,IAAAD,EAAAqE,SAAApE,EAAA,SAAAA,IAAAD,EAAAsE,WAAArE,EAAA,GAAAD,EAAAuE,SAAAtE,EAAA,SAAAuE,WAAAC,KAAAzE,EAAA,UAAA0E,EAAAzE,GAAA,IAAAD,EAAAC,EAAA0E,YAAA,GAAA3E,EAAA4B,KAAA,gBAAA5B,EAAA6B,IAAA5B,EAAA0E,WAAA3E,CAAA,UAAAyB,EAAAxB,GAAA,KAAAuE,WAAA,EAAAJ,OAAA,SAAAnE,EAAA4C,QAAAsB,EAAA,WAAAS,OAAA,YAAAlC,EAAA1C,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAAE,EAAAF,EAAAY,GAAA,GAAAV,EAAA,OAAAA,EAAA4B,KAAA9B,GAAA,sBAAAA,EAAAiE,KAAA,OAAAjE,EAAA,IAAA6E,MAAA7E,EAAA8E,QAAA,KAAAvE,GAAA,EAAAG,EAAA,SAAAuD,IAAA,OAAA1D,EAAAP,EAAA8E,QAAA,GAAAzE,EAAAyB,KAAA9B,EAAAO,GAAA,OAAA0D,EAAAxD,MAAAT,EAAAO,GAAA0D,EAAAV,MAAA,EAAAU,EAAA,OAAAA,EAAAxD,MAAAR,EAAAgE,EAAAV,MAAA,EAAAU,CAAA,SAAAvD,EAAAuD,KAAAvD,CAAA,YAAAqD,UAAAd,EAAAjD,GAAA,2BAAAoC,EAAAhC,UAAAiC,EAAA9B,EAAAoC,EAAA,eAAAlC,MAAA4B,EAAAjB,cAAA,IAAAb,EAAA8B,EAAA,eAAA5B,MAAA2B,EAAAhB,cAAA,IAAAgB,EAAA2C,YAAA7D,EAAAmB,EAAArB,EAAA,qBAAAhB,EAAAgF,oBAAA,SAAA/E,GAAA,IAAAD,EAAA,mBAAAC,GAAAA,EAAAgF,YAAA,QAAAjF,IAAAA,IAAAoC,GAAA,uBAAApC,EAAA+E,aAAA/E,EAAAkF,MAAA,EAAAlF,EAAAmF,KAAA,SAAAlF,GAAA,OAAAE,OAAAiF,eAAAjF,OAAAiF,eAAAnF,EAAAoC,IAAApC,EAAAoF,UAAAhD,EAAAnB,EAAAjB,EAAAe,EAAA,sBAAAf,EAAAG,UAAAD,OAAAqB,OAAAmB,GAAA1C,CAAA,EAAAD,EAAAsF,MAAA,SAAArF,GAAA,OAAAkD,QAAAlD,EAAA,EAAA2C,EAAAG,EAAA3C,WAAAc,EAAA6B,EAAA3C,UAAAU,GAAA,0BAAAd,EAAA+C,cAAAA,EAAA/C,EAAAuF,MAAA,SAAAtF,EAAAC,EAAAG,EAAAE,EAAAG,QAAA,IAAAA,IAAAA,EAAA8E,SAAA,IAAA5E,EAAA,IAAAmC,EAAAzB,EAAArB,EAAAC,EAAAG,EAAAE,GAAAG,GAAA,OAAAV,EAAAgF,oBAAA9E,GAAAU,EAAAA,EAAAqD,OAAAb,MAAA,SAAAnD,GAAA,OAAAA,EAAAsD,KAAAtD,EAAAQ,MAAAG,EAAAqD,MAAA,KAAArB,EAAAD,GAAAzB,EAAAyB,EAAA3B,EAAA,aAAAE,EAAAyB,EAAA/B,GAAA,0BAAAM,EAAAyB,EAAA,qDAAA3C,EAAAyF,KAAA,SAAAxF,GAAA,IAAAD,EAAAG,OAAAF,GAAAC,EAAA,WAAAG,KAAAL,EAAAE,EAAAuE,KAAApE,GAAA,OAAAH,EAAAwF,UAAA,SAAAzB,IAAA,KAAA/D,EAAA4E,QAAA,KAAA7E,EAAAC,EAAAyF,MAAA,GAAA1F,KAAAD,EAAA,OAAAiE,EAAAxD,MAAAR,EAAAgE,EAAAV,MAAA,EAAAU,CAAA,QAAAA,EAAAV,MAAA,EAAAU,CAAA,GAAAjE,EAAA0C,OAAAA,EAAAjB,EAAArB,UAAA,CAAA6E,YAAAxD,EAAAmD,MAAA,SAAA5E,GAAA,QAAA4F,KAAA,OAAA3B,KAAA,OAAAN,KAAA,KAAAC,MAAA3D,EAAA,KAAAsD,MAAA,OAAAE,SAAA,UAAAD,OAAA,YAAA3B,IAAA5B,EAAA,KAAAuE,WAAA3B,QAAA6B,IAAA1E,EAAA,QAAAE,KAAA,WAAAA,EAAA2F,OAAA,IAAAxF,EAAAyB,KAAA,KAAA5B,KAAA2E,OAAA3E,EAAA4F,MAAA,WAAA5F,GAAAD,EAAA,EAAA8F,KAAA,gBAAAxC,MAAA,MAAAtD,EAAA,KAAAuE,WAAA,GAAAG,WAAA,aAAA1E,EAAA2B,KAAA,MAAA3B,EAAA4B,IAAA,YAAAmE,IAAA,EAAAnC,kBAAA,SAAA7D,GAAA,QAAAuD,KAAA,MAAAvD,EAAA,IAAAE,EAAA,cAAA+F,EAAA5F,EAAAE,GAAA,OAAAK,EAAAgB,KAAA,QAAAhB,EAAAiB,IAAA7B,EAAAE,EAAA+D,KAAA5D,EAAAE,IAAAL,EAAAsD,OAAA,OAAAtD,EAAA2B,IAAA5B,KAAAM,CAAA,SAAAA,EAAA,KAAAiE,WAAAM,OAAA,EAAAvE,GAAA,IAAAA,EAAA,KAAAG,EAAA,KAAA8D,WAAAjE,GAAAK,EAAAF,EAAAiE,WAAA,YAAAjE,EAAA0D,OAAA,OAAA6B,EAAA,UAAAvF,EAAA0D,QAAA,KAAAwB,KAAA,KAAA9E,EAAAT,EAAAyB,KAAApB,EAAA,YAAAM,EAAAX,EAAAyB,KAAApB,EAAA,iBAAAI,GAAAE,EAAA,SAAA4E,KAAAlF,EAAA2D,SAAA,OAAA4B,EAAAvF,EAAA2D,UAAA,WAAAuB,KAAAlF,EAAA4D,WAAA,OAAA2B,EAAAvF,EAAA4D,WAAA,SAAAxD,GAAA,QAAA8E,KAAAlF,EAAA2D,SAAA,OAAA4B,EAAAvF,EAAA2D,UAAA,YAAArD,EAAA,UAAAsC,MAAA,kDAAAsC,KAAAlF,EAAA4D,WAAA,OAAA2B,EAAAvF,EAAA4D,WAAA,KAAAR,OAAA,SAAA7D,EAAAD,GAAA,QAAAE,EAAA,KAAAsE,WAAAM,OAAA,EAAA5E,GAAA,IAAAA,EAAA,KAAAK,EAAA,KAAAiE,WAAAtE,GAAA,GAAAK,EAAA6D,QAAA,KAAAwB,MAAAvF,EAAAyB,KAAAvB,EAAA,oBAAAqF,KAAArF,EAAA+D,WAAA,KAAA5D,EAAAH,EAAA,OAAAG,IAAA,UAAAT,GAAA,aAAAA,IAAAS,EAAA0D,QAAApE,GAAAA,GAAAU,EAAA4D,aAAA5D,EAAA,UAAAE,EAAAF,EAAAA,EAAAiE,WAAA,UAAA/D,EAAAgB,KAAA3B,EAAAW,EAAAiB,IAAA7B,EAAAU,GAAA,KAAA8C,OAAA,YAAAS,KAAAvD,EAAA4D,WAAAnC,GAAA,KAAA+D,SAAAtF,EAAA,EAAAsF,SAAA,SAAAjG,EAAAD,GAAA,aAAAC,EAAA2B,KAAA,MAAA3B,EAAA4B,IAAA,gBAAA5B,EAAA2B,MAAA,aAAA3B,EAAA2B,KAAA,KAAAqC,KAAAhE,EAAA4B,IAAA,WAAA5B,EAAA2B,MAAA,KAAAoE,KAAA,KAAAnE,IAAA5B,EAAA4B,IAAA,KAAA2B,OAAA,cAAAS,KAAA,kBAAAhE,EAAA2B,MAAA5B,IAAA,KAAAiE,KAAAjE,GAAAmC,CAAA,EAAAgE,OAAA,SAAAlG,GAAA,QAAAD,EAAA,KAAAwE,WAAAM,OAAA,EAAA9E,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAsE,WAAAxE,GAAA,GAAAE,EAAAoE,aAAArE,EAAA,YAAAiG,SAAAhG,EAAAyE,WAAAzE,EAAAqE,UAAAG,EAAAxE,GAAAiC,CAAA,kBAAAlC,GAAA,QAAAD,EAAA,KAAAwE,WAAAM,OAAA,EAAA9E,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAsE,WAAAxE,GAAA,GAAAE,EAAAkE,SAAAnE,EAAA,KAAAI,EAAAH,EAAAyE,WAAA,aAAAtE,EAAAuB,KAAA,KAAArB,EAAAF,EAAAwB,IAAA6C,EAAAxE,EAAA,QAAAK,CAAA,YAAA+C,MAAA,0BAAA8C,cAAA,SAAApG,EAAAE,EAAAG,GAAA,YAAAoD,SAAA,CAAA5C,SAAA6B,EAAA1C,GAAAgE,WAAA9D,EAAAgE,QAAA7D,GAAA,cAAAmD,SAAA,KAAA3B,IAAA5B,GAAAkC,CAAA,GAAAnC,CAAA,UAAAqG,EAAAC,EAAApD,EAAAqD,EAAAC,EAAAC,EAAAC,EAAA7E,GAAA,QAAA8E,EAAAL,EAAAI,GAAA7E,GAAApB,EAAAkG,EAAAlG,KAAA,OAAAmG,GAAA,YAAAL,EAAAK,EAAA,CAAAD,EAAApD,KAAAL,EAAAzC,GAAA+E,QAAAtC,QAAAzC,GAAA2C,KAAAoD,EAAAC,EAAA,UAAAI,EAAAC,GAAA,sBAAAC,EAAA,KAAAC,EAAAC,UAAA,WAAAzB,SAAA,SAAAtC,EAAAqD,GAAA,IAAAD,EAAAQ,EAAAI,MAAAH,EAAAC,GAAA,SAAAR,EAAA/F,GAAA4F,EAAAC,EAAApD,EAAAqD,EAAAC,EAAAC,EAAA,OAAAhG,EAAA,UAAAgG,EAAAU,GAAAd,EAAAC,EAAApD,EAAAqD,EAAAC,EAAAC,EAAA,QAAAU,EAAA,CAAAX,OAAAY,EAAA,KAKA,IAAMC,EAAe,WAAH,MAAU,CACxBC,+BAA+B,EAC/BC,UAAW,KACXC,QAAS,KACTC,kBAAmB,KACnBC,eAAgB,KAEhBC,MAAO,GACPC,UAAW,GACXC,WAAY,GACZC,QAAQ,EACRC,aAAa,EACbC,WAAY,KACZC,QAAS,KACTC,aAAc,GACdC,uBAAuB,EACvBC,qBAAsB,KACtBC,2BAA2B,EAC3BC,kCAAkC,EAClCC,mBAAmB,EACnBC,qCAAqC,EACrCC,cAAe,KACfC,qBAAsB,KACzB,EAEYC,GAAiBC,EAAAA,EAAAA,IAAY,cAAe,CACrDC,MAAOxB,EACPyB,QAAS,CACLlE,MAAK,WAEDzE,OAAO4I,OAAOC,KA9BE,CACxB1B,+BAA+B,EAC/BC,UAAW,KACXC,QAAS,KACTC,kBAAmB,KACnBC,eAAgB,KAEhBC,MAAO,GACPC,UAAW,GACXC,WAAY,GACZC,QAAQ,EACRC,aAAa,EACbC,WAAY,KACZC,QAAS,KACTC,aAAc,GACdC,uBAAuB,EACvBC,qBAAsB,KACtBC,2BAA2B,EAC3BC,kCAAkC,EAClCC,mBAAmB,EACnBC,qCAAqC,EACrCC,cAAe,KACfC,qBAAsB,MASlB,EACMO,WAAU,WAAG,IAAAC,EAAA,YAAArC,EAAA9G,IAAAoF,MAAA,SAAAgE,IAAA,IAAAC,EAAA,OAAArJ,IAAAuB,MAAA,SAAA+H,GAAA,cAAAA,EAAAzD,KAAAyD,EAAApF,MAAA,cAAAoF,EAAAzD,KAAA,EAAAyD,EAAApF,KAAA,EAEYqF,MAAMC,IAAI,kBAAiB,OAA5CH,EAAQC,EAAA1F,KACduF,EAAKvB,MAAQyB,EAASI,KAAIH,EAAApF,KAAA,eAAAoF,EAAAzD,KAAA,EAAAyD,EAAAI,GAAAJ,EAAA,iCAAAA,EAAAtD,OAAA,GAAAoD,EAAA,iBAHftC,EAQnB,EAIM6C,kBAAiB,WAAG,IAAAC,EAAA,YAAA9C,EAAA9G,IAAAoF,MAAA,SAAAyE,IAAA,IAAAR,EAAA,OAAArJ,IAAAuB,MAAA,SAAAuI,GAAA,cAAAA,EAAAjE,KAAAiE,EAAA5F,MAAA,UACjB0F,EAAKjC,eAAgB,CAAFmC,EAAA5F,KAAA,cAEd,IAAIX,MAAM,oBAAmB,cAAAuG,EAAAjE,KAAA,EAAAiE,EAAA5F,KAAA,EAIZqF,MAAMQ,KAAK,kBAADC,OAAmBJ,EAAKjC,eAAc,gBAAc,OASpF,OATK0B,EAAQS,EAAAlG,KAGdqG,QAAQC,IAAI,wBAA0BN,EAAK/B,WAGvC+B,EAAKjC,gBAAkB0B,EAASI,KAAKU,aACrCP,EAAKQ,aAAaC,qBAAuBhB,EAASI,KAClDG,EAAKQ,aAAaE,wBAA0BjB,EAASI,KAAKU,YAC7DL,EAAA/F,OAAA,SACMsF,EAASI,MAAI,cAAAK,EAAAjE,KAAA,GAAAiE,EAAAJ,GAAAI,EAAA,SAAAA,EAAAJ,GAAA,yBAAAI,EAAA9D,OAAA,GAAA6D,EAAA,kBAjBF/C,EAsB1B,EAGAyD,sBAAqB,WAAG,IAAAC,EAAAC,EAAA,KACdC,EAAOzB,KAAKrB,MAAM+C,MAAK,SAAAD,GAAI,OAAIA,EAAKE,KAAOH,EAAK9C,cAAc,KAAK,KACnEE,GAAY6C,SAA0B,QAAtBF,EAAJE,EAAML,4BAAoB,IAAAG,OAAA,EAA1BA,EAA4BrF,OAAQ,gDAMtD,OAHA8D,KAAKpB,UAAYA,EAGVA,CACX,EAiCAgD,kBAAiB,SAACC,GACd7B,KAAKtB,eAAiBmD,EACtB7B,KAAK8B,oBACT,EAEAA,mBAAkB,WAAG,IAAAC,EAAA,KACjB/B,KAAKmB,aAAenB,KAAKrB,MAAM+C,MAAK,SAAAD,GAAI,OAAIA,EAAKE,KAAOI,EAAKrD,cAAc,KAAK,IACpF,EACAsD,OAAM,WACFhC,KAAKlB,QAAS,CAClB,EACAmD,SAAQ,WACJjC,KAAKlB,QAAS,CAClB,EACMoD,eAAc,WAAG,IAAAC,EAAA,YAAAtE,EAAA9G,IAAAoF,MAAA,SAAAiG,IAAA,IAAAC,EAAAC,EAAAlC,EAAAmC,EAAAC,EAAAC,EAAA,OAAA1L,IAAAuB,MAAA,SAAAoK,GAAA,cAAAA,EAAA9F,KAAA8F,EAAAzH,MAAA,OAIkB,OAH/BoH,GAAoBM,EAAAA,EAAAA,wBACpBL,EAAWH,EAAKhB,aAAayB,KACnC5B,QAAQC,IAAI,+BAADF,OAAgCuB,IAC3CH,EAAK9C,2BAA4B,EAAIqD,EAAA9F,KAAA,EAAA8F,EAAAzH,KAAA,EAEVqF,MAAMQ,KAAK,gCAAgCwB,EAAU,CACxEO,YAAaV,EAAKvD,YACpB,OAFIwB,EAAQsC,EAAA/H,KAId4H,EAC0BnC,EAASI,KAA5BgC,EAAOD,EAAPC,QAASC,EAAMF,EAANE,OAEhBJ,EAAkBS,qBAAqBN,EAASC,GAEhDN,EAAKpD,aAAc,EAAI2D,EAAAzH,KAAA,iBAAAyH,EAAA9F,KAAA,GAAA8F,EAAAjC,GAAAiC,EAAA,SAGvBL,EAAkBS,qBAAqB,6BAA8B,SACrE,QAEuC,OAFvCJ,EAAA9F,KAAA,GAEAuF,EAAK9C,2BAA4B,EAAMqD,EAAAvF,OAAA,6BAAAuF,EAAA3F,OAAA,GAAAqF,EAAA,wBArBxBvE,EAuBvB,EACMkF,cAAa,WAAG,IAAAC,EAAA,YAAAnF,EAAA9G,IAAAoF,MAAA,SAAA8G,IAAA,IAAAZ,EAAAC,EAAAlC,EAAA8C,EAAAV,EAAAC,EAAA,OAAA1L,IAAAuB,MAAA,SAAA6K,GAAA,cAAAA,EAAAvG,KAAAuG,EAAAlI,MAAA,OAKlB,OAJMoH,GAAoBM,EAAAA,EAAAA,wBACpBL,EAAWU,EAAK7B,aAAayB,KACnC5B,QAAQC,IAAI,+BAADF,OAAgCuB,IAC3CU,EAAK3D,2BAA4B,EACjC8D,EAAAvG,KAAA,EAAAuG,EAAAlI,KAAA,EAE2BqF,MAAMQ,KAAK,+BAA+BwB,EAAU,CACvEO,YAAaG,EAAKpE,YACpB,OAFIwB,EAAQ+C,EAAAxI,KAGduI,EAC0B9C,EAASI,KAA5BgC,EAAOU,EAAPV,QAASC,EAAMS,EAANT,OAChBJ,EAAkBS,qBAAqBN,EAASC,GAEhDO,EAAKjE,aAAc,EAAKoE,EAAAlI,KAAA,iBAAAkI,EAAAvG,KAAA,GAAAuG,EAAA1C,GAAA0C,EAAA,SAGxBd,EAAkBS,qBAAqB,uBAAwB,SAAQ,QAEhC,OAFgCK,EAAAvG,KAAA,GAEvEoG,EAAK3D,2BAA4B,EAAM8D,EAAAhG,OAAA,6BAAAgG,EAAApG,OAAA,GAAAkG,EAAA,wBAnBzBpF,EAqBtB,EAWMuF,gBAAe,WAAG,IAAAC,EAAA,YAAAxF,EAAA9G,IAAAoF,MAAA,SAAAmH,IAAA,IAAAjB,EAAAjC,EAAA,OAAArJ,IAAAuB,MAAA,SAAAiL,GAAA,cAAAA,EAAA3G,KAAA2G,EAAAtI,MAAA,OAEpB,GADMoH,GAAoBM,EAAAA,EAAAA,wBAC1BY,EAAA3G,KAAA,EAESyG,EAAK5D,cAAe,CAAF8D,EAAAtI,KAAA,eAAAsI,EAAAtI,KAAA,EACboI,EAAKG,qBAAoB,cAAAD,EAAAtI,KAAA,EAGZqF,MAAMQ,KAAK,qBAAsB,CACpD2C,WAAYJ,EAAKzE,UACjBa,cAAe4D,EAAK5D,gBACtB,OAHIW,EAAQmD,EAAA5I,KAMd0I,EAAKrE,WAAaoB,EAASI,KAAKxB,YAAc,GAK1CoB,EAASI,KAAKxB,WAAWpB,OACfwC,EAASI,KAAKxB,WAAWpB,MAC1B,SAEFwC,EAASI,KAAKgC,SAAWpC,EAASI,KAAKkD,SAEpCtD,EAASI,KAAKgC,QACf,SAKC,4CACD,QAKbe,EAAAtI,KAAA,iBAAAsI,EAAA3G,KAAA,GAAA2G,EAAA9C,GAAA8C,EAAA,SAGAlB,EAAkBS,qBAAqB,+BAAgC,SACvE,yBAAAS,EAAAxG,OAAA,GAAAuG,EAAA,kBAzCgBzF,EA2CxB,EACM8F,aAAY,WAAG,IAAAC,EAAA,YAAA/F,EAAA9G,IAAAoF,MAAA,SAAA0H,IAAA,IAAAzD,EAAA,OAAArJ,IAAAuB,MAAA,SAAAwL,GAAA,cAAAA,EAAAlH,KAAAkH,EAAA7I,MAAA,cAAA6I,EAAAlH,KAAA,EAAAkH,EAAA7I,KAAA,EAEU8I,MAAM,mBAAkB,OAAjC,IAAR3D,EAAQ0D,EAAAnJ,MACAqJ,GAAI,CAAFF,EAAA7I,KAAA,cAAQ,IAAIX,MAAM,mBAAkB,cAAAwJ,EAAA7I,KAAA,EAI/BmF,EAAS6D,OAAM,OAApCL,EAAK3E,QAAO6E,EAAAnJ,KAAAmJ,EAAA7I,KAAG,GAAH,cAAA6I,EAAAlH,KAAG,GAAHkH,EAAArD,GAAAqD,EAAA,kCAAAA,EAAA/G,OAAA,GAAA8G,EAAA,kBAPChG,EAWrB,EACAqG,gBAAe,WACXlE,KAAKhB,WAAa,IACtB,EACAmF,oCAAmC,SAAC3F,GAAS,IAAA4F,EAGzCpE,KAAK1B,+BAAiC0B,KAAK1B,8BAC3C0B,KAAKzB,YAAcyB,KAAK1B,8BACxB0B,KAAKxB,QAAUA,EACfwB,KAAKtB,eAAiBsB,YAAa,QAAToE,EAAJpE,KAAMxB,eAAO,IAAA4F,OAAA,EAAbA,EAAeC,OAEzC,EACAC,cAAa,SAAC9F,GACVwB,KAAKxB,QAAUA,CACnB,EACMgF,mBAAkB,WAAG,IAAAe,EAAA,YAAA1G,EAAA9G,IAAAoF,MAAA,SAAAqI,IAAA,IAAAC,EAAAC,EAAA,OAAA3N,IAAAuB,MAAA,SAAAqM,GAAA,cAAAA,EAAA/H,KAAA+H,EAAA1J,MAAA,OAC6B,OAA9CwJ,GAAsBG,EAAAA,EAAAA,0BAAwBD,EAAA1J,KAAA,EAC5BqF,MAAMC,IAAI,oBAAmB,OAAjDmE,EAAWC,EAAAhK,KACf4J,EAAK9E,cAAgBiF,EAAYlE,KACjCiE,EAAoBI,iBAAiBN,EAAK9E,eAAc,wBAAAkF,EAAA5H,OAAA,GAAAyH,EAAA,IAJjC3G,EAK3B,EACMiH,aAAY,WAAG,IAAAC,EAAA,YAAAlH,EAAA9G,IAAAoF,MAAA,SAAA6I,IAAA,IAAAP,EAAAQ,EAAA,OAAAlO,IAAAuB,MAAA,SAAA4M,GAAA,cAAAA,EAAAtI,KAAAsI,EAAAjK,MAAA,OAiBb,OAhBEwJ,GAAsBG,EAAAA,EAAAA,0BAC5BG,EAAKxF,mBAAoB,EAAK2F,EAAAtI,KAAA,EAOpBqI,EAAa,CACf/I,KAAM6I,EAAKnG,WAOfsG,EAAAjK,KAAA,EACMwJ,EAAoBU,oBAAoBF,GAAY,GAAM7K,OAE/D,OAAA8K,EAAAjK,KAAA,gBAAAiK,EAAAtI,KAAA,EAAAsI,EAAAzE,GAAAyE,EAAA,SAID7C,kBAAkBS,qBAAqB,2BAA4B,SAAQ,QAE5C,OAF4CoC,EAAAtI,KAAA,GAE3EmI,EAAKxF,mBAAoB,EAAM2F,EAAA/H,OAAA,6BAAA+H,EAAAnI,OAAA,GAAAiI,EAAA,uBA1BlBnH,EA6BrB,EACMuH,sBAAqB,WAAG,IAAAC,EAAA,YAAAxH,EAAA9G,IAAAoF,MAAA,SAAAmJ,IAAA,IAAAjD,EAAAjC,EAAAmF,EAAA,OAAAxO,IAAAuB,MAAA,SAAAkN,GAAA,cAAAA,EAAA5I,KAAA4I,EAAAvK,MAAA,OAEQ,OAD5BoH,GAAoBM,EAAAA,EAAAA,wBAC1B0C,EAAKlG,uBAAwB,EAAKqG,EAAA5I,KAAA,EAAA4I,EAAAvK,KAAA,EAEPqF,MAAMQ,KAAK,mCAAoC,CAClEe,OAAQwD,EAAK3G,eACb+E,WAAY4B,EAAKzG,UACjB6G,iBAAiB,IACnB,OAJIrF,EAAQoF,EAAA7K,KAMd0K,EAAKnG,aAAekB,EAASI,KAAKtB,cAAgB,GAClDmG,EAAKtG,YAAcqB,EAASI,KAAKkF,YAAa,EAC9C1E,QAAQC,IAAI,6BAA+Bb,EAASI,KAAKkF,WACzDH,EAC0BnF,EAASI,KAArB+E,EAAP/C,QAAe+C,EAAN9C,OAGhB+C,EAAAvK,KAAA,iBAAAuK,EAAA5I,KAAA,GAAA4I,EAAA/E,GAAA+E,EAAA,SAIAnD,EAAkBS,qBAAqB,qCAAsC,SAAQ,QAElD,OAFkD0C,EAAA5I,KAAA,GAErFyI,EAAKlG,uBAAwB,EAAMqG,EAAArI,OAAA,6BAAAqI,EAAAzI,OAAA,GAAAuI,EAAA,wBAvBbzH,EAyB9B,EACM8H,gCAA+B,WAAG,IAAAC,EAAA,YAAA/H,EAAA9G,IAAAoF,MAAA,SAAA0J,IAAA,IAAAzF,EAAA,OAAArJ,IAAAuB,MAAA,SAAAwN,GAAA,cAAAA,EAAAlJ,KAAAkJ,EAAA7K,MAAA,OAIF,OAAlC2K,EAAKzG,uBAAwB,EAAK2G,EAAAlJ,KAAA,EAAAkJ,EAAA7K,KAAA,EAEPqF,MAAMQ,KAAK,oCAAqC,CACnEe,OAAQ+D,EAAKlH,eACb+E,WAAYmC,EAAKhH,UACjB6G,iBAAiB,IACnB,OAJIrF,EAAQ0F,EAAAnL,KAKdiL,EAAK1G,aAAekB,EAASI,KAAKtB,cAAgB,GAClD0G,EAAK7G,YAAcqB,EAASI,KAAKkF,YAAa,EAAKI,EAAA7K,KAAA,gBAAA6K,EAAAlJ,KAAA,EAAAkJ,EAAArF,GAAAqF,EAAA,SAInDzD,kBAAkBS,qBAAqB,qCAAsC,SAAQ,QAElD,OAFkDgD,EAAAlJ,KAAA,GAErFgJ,EAAKzG,uBAAwB,EAAM2G,EAAA3I,OAAA,6BAAA2I,EAAA/I,OAAA,GAAA8I,EAAA,uBAlBHhI,EAoBxC,EACMkI,kBAAiB,SAACC,GAAe,IAAAC,EAAA,YAAApI,EAAA9G,IAAAoF,MAAA,SAAA+J,IAAA,OAAAnP,IAAAuB,MAAA,SAAA6N,GAAA,cAAAA,EAAAvJ,KAAAuJ,EAAAlL,MAAA,WAE/BmL,QAAQ,4DAADrF,OAA6DiF,EAAa,MAAM,CAAFG,EAAAlL,KAAA,gBAAAkL,EAAAvJ,KAAA,EAAAuJ,EAAAlL,KAAA,EAG3EqF,MAAK,OAAQ,kCAAoC0F,GAAc,OAErEC,EAAK/G,aAAe+G,EAAK/G,aAAamH,QAAO,SAAAC,GAAW,OAAIA,EAAY3E,KAAOqE,CAAa,IAACG,EAAAlL,KAAA,gBAAAkL,EAAAvJ,KAAA,EAAAuJ,EAAA1F,GAAA0F,EAAA,SAE7F9D,kBAAkBkE,8BAA8B,6BAA4BJ,EAAA1F,IAC5E,yBAAA0F,EAAApJ,OAAA,GAAAmJ,EAAA,iBAV2BrI,EAavC,EACM2I,UAAS,SAACR,EAAeS,GAAa,IAAAC,EAAA,YAAA7I,EAAA9G,IAAAoF,MAAA,SAAAwK,IAAA,IAAAtE,EAAAjC,EAAAwG,EAAApE,EAAAC,EAAAoE,EAAA,OAAA9P,IAAAuB,MAAA,SAAAwO,GAAA,cAAAA,EAAAlK,KAAAkK,EAAA7L,MAAA,OAGxC,OAFMoH,GAAoBM,EAAAA,EAAAA,wBAC1B+D,EAAKtH,qBAAuB4G,EAC5Bc,EAAAlK,KAAA,EAAAkK,EAAA7L,KAAA,EAE2BqF,MAAMQ,KAAK,0BAA2B,CACzDiG,eAAgBf,EAChBgB,cAAeP,EACf5D,YAAa6D,EAAK9H,YACpB,OAJIwB,EAAQ0G,EAAAnM,KAQdiM,EAC0BxG,EAASI,KAA5BgC,EAAOoE,EAAPpE,QAASC,EAAMmE,EAANnE,OAEhBJ,EAAkBS,qBAAqBN,EAASC,IAGjC,KADToE,EAAQH,EAAKxH,aAAa+H,WAAU,SAAAX,GAAW,OAAIA,EAAY3E,KAAOqE,CAAa,OAErFU,EAAKxH,aAAa2H,GAAOK,gBAAkB,GAC9CJ,EAAA7L,KAAA,iBAAA6L,EAAAlK,KAAA,GAAAkK,EAAArG,GAAAqG,EAAA,SAGDzE,EAAkBS,qBAAqB,wBAAyB,SAChE,QAEiC,OAFjCgE,EAAAlK,KAAA,GAEA8J,EAAKtH,qBAAuB,KAAK0H,EAAA3J,OAAA,6BAAA2J,EAAA/J,OAAA,GAAA4J,EAAA,wBA3BG9I,EA6B5C,EACMsJ,SAAQ,SAACnB,GAAe,IAAAoB,EAAA,YAAAvJ,EAAA9G,IAAAoF,MAAA,SAAAkL,IAAA,IAAAhF,EAAAjC,EAAAkH,EAAA9E,EAAAC,EAAAoE,EAAA,OAAA9P,IAAAuB,MAAA,SAAAiP,GAAA,cAAAA,EAAA3K,KAAA2K,EAAAtM,MAAA,OAG1B,OAFMoH,GAAoBM,EAAAA,EAAAA,wBAC1ByE,EAAKhI,qBAAuB4G,EAC5BuB,EAAA3K,KAAA,EAAA2K,EAAAtM,KAAA,EAE2BqF,MAAMQ,KAAK,yBAA0B,CAACiG,eAAgBf,IAAe,OAAtF5F,EAAQmH,EAAA5M,KACd2M,EAC0BlH,EAASI,KAA5BgC,EAAO8E,EAAP9E,QAASC,EAAM6E,EAAN7E,OAChBJ,EAAkBS,qBAAqBN,EAASC,GAChD8E,EAAAtM,KAAA,iBAAAsM,EAAA3K,KAAA,GAAA2K,EAAA9G,GAAA8G,EAAA,SAGAlF,EAAkBS,qBAAqB,uBAAwB,SAAQ,QAMtE,OANsEyE,EAAA3K,KAAA,GAEvEwK,EAAKhI,qBAAuB,MAEb,KADTyH,EAAQO,EAAKlI,aAAa+H,WAAU,SAAAX,GAAW,OAAIA,EAAY3E,KAAOqE,CAAa,OAErFoB,EAAKlI,aAAa2H,GAAOK,gBAAkB,GAC9CK,EAAApK,OAAA,6BAAAoK,EAAAxK,OAAA,GAAAsK,EAAA,wBAlBqBxJ,EAoB9B,EACM2J,eAAc,SAACxB,GAAe,IAAAyB,EAAA,YAAA5J,EAAA9G,IAAAoF,MAAA,SAAAuL,IAAA,IAAArF,EAAAjC,EAAAuH,EAAAnF,EAAAC,EAAAoE,EAAA,OAAA9P,IAAAuB,MAAA,SAAAsP,GAAA,cAAAA,EAAAhL,KAAAgL,EAAA3M,MAAA,OAEgB,OADhDwM,EAAKrI,qBAAuB4G,EACtB3D,GAAoBM,EAAAA,EAAAA,wBAAsBiF,EAAAhL,KAAA,EAAAgL,EAAA3M,KAAA,EAErBqF,MAAMQ,KAAK,8BAAgCkF,GAAc,OAA1E5F,EAAQwH,EAAAjN,KACdgN,EAC0BvH,EAASI,KAA5BgC,EAAOmF,EAAPnF,QAASC,EAAMkF,EAANlF,OAChBJ,EAAkBS,qBAAqBN,EAASC,IAEjC,KADToE,EAAQY,EAAKvI,aAAa+H,WAAU,SAAAX,GAAW,OAAIA,EAAY3E,KAAOqE,CAAa,OAErFyB,EAAKvI,aAAa2H,GAAOgB,cAAgB,GAC5CD,EAAA3M,KAAA,iBAAA2M,EAAAhL,KAAA,GAAAgL,EAAAnH,GAAAmH,EAAA,SAGDvF,EAAkBS,qBAAqB,8BAA+B,SAAQ,QAE7C,OAF6C8E,EAAAhL,KAAA,GAE9E6K,EAAKrI,qBAAuB,KAAKwI,EAAAzK,OAAA,6BAAAyK,EAAA7K,OAAA,GAAA2K,EAAA,wBAhBL7J,EAkBpC,EACMiK,gBAAe,SAAC9B,GAAe,IAAA+B,EAAA,YAAAlK,EAAA9G,IAAAoF,MAAA,SAAA6L,IAAA,IAAA3F,EAAAjC,EAAA6H,EAAAzF,EAAAC,EAAAoE,EAAA,OAAA9P,IAAAuB,MAAA,SAAA4P,GAAA,cAAAA,EAAAtL,KAAAsL,EAAAjN,MAAA,OAEQ,OADnCoH,GAAoBM,EAAAA,EAAAA,wBAC1BoF,EAAK3I,qBAAuB4G,EAAakC,EAAAtL,KAAA,EAAAsL,EAAAjN,KAAA,EAEdqF,MAAMQ,KAAK,iCAAmCkF,GAAc,OAA7E5F,EAAQ8H,EAAAvN,KACdsN,EAC0B7H,EAASI,KAA5BgC,EAAOyF,EAAPzF,QAASC,EAAMwF,EAANxF,OAChBJ,EAAkBS,qBAAqBN,EAASC,IAEjC,KADToE,EAAQkB,EAAK7I,aAAa+H,WAAU,SAAAX,GAAW,OAAIA,EAAY3E,KAAOqE,CAAa,OAErF+B,EAAK7I,aAAa2H,GAAOgB,cAAgB,GAC5CK,EAAAjN,KAAA,iBAAAiN,EAAAtL,KAAA,GAAAsL,EAAAzH,GAAAyH,EAAA,SAGD7F,EAAkBS,qBAAqB,+BAAgC,SAAQ,QAE9C,OAF8CoF,EAAAtL,KAAA,GAE/EmL,EAAK3I,qBAAuB,KAAK8I,EAAA/K,OAAA,6BAAA+K,EAAAnL,OAAA,GAAAiL,EAAA,wBAhBJnK,EAkBrC,EACMsK,qBAAoB,WAAG,IAAAC,EAAA,YAAAvK,EAAA9G,IAAAoF,MAAA,SAAAkM,IAAA,IAAAhG,EAAAjC,EAAAkI,EAAA9F,EAAAC,EAAA,OAAA1L,IAAAuB,MAAA,SAAAiQ,GAAA,cAAAA,EAAA3L,KAAA2L,EAAAtN,MAAA,OAEmB,OADtCoH,GAAoBM,EAAAA,EAAAA,wBAC1ByF,EAAK9I,kCAAmC,EAAIiJ,EAAA3L,KAAA,EAAA2L,EAAAtN,KAAA,EAEjBqF,MAAMQ,KAAK,iDAAkD,CAAC,WAAcsH,EAAKxJ,YAAW,OAG5D,OAHjDwB,EAAQmI,EAAA5N,KACd2N,EAC0BlI,EAASI,KAA5BgC,EAAO8F,EAAP9F,QAASC,EAAM6F,EAAN7F,OAChBJ,EAAkBS,qBAAqBN,EAASC,GAAO8F,EAAAtN,KAAA,GACjDmN,EAAKhD,wBAAuB,QAAAmD,EAAAtN,KAAA,iBAAAsN,EAAA3L,KAAA,GAAA2L,EAAA9H,GAAA8H,EAAA,SAGlClG,EAAkBS,qBAAqB,+BAAgC,SAAQ,QAEjC,OAFiCyF,EAAA3L,KAAA,GAE/EwL,EAAK9I,kCAAmC,EAAMiJ,EAAAtN,KAAA,GACxCmN,EAAKhD,wBAAuB,eAAAmD,EAAApL,OAAA,6BAAAoL,EAAAxL,OAAA,GAAAsL,EAAA,wBAdbxK,EAgB7B,GAEJ2K,QAAS,CACLrH,aAAc,SAACtB,GAAU,IAAA4I,EAAAC,EAAAC,EACflH,EAAO5B,EAAMlB,MAAM+C,MAAK,SAAAD,GAAI,OAAIA,EAAKE,KAAO9B,EAAMnB,cAAc,KAAK,KAI3E,OAHAmB,EAAMjB,WAAY6C,SAA0B,QAAtBgH,EAAJhH,EAAML,4BAAoB,IAAAqH,OAAA,EAA1BA,EAA4BvM,OAAQ,8BACtD2D,EAAMhB,YAAa4C,SAA0B,QAAtBiH,EAAJjH,EAAML,4BAAoB,IAAAsH,OAAA,EAA1BA,EAA4B/G,KAAM,8BACrD9B,EAAMd,aAAc0C,SAA0B,QAAtBkH,EAAJlH,EAAML,4BAAoB,IAAAuH,OAAA,EAA1BA,EAA4BC,gBAAgB,EACzDnH,CACX,EACAoH,YAAa,SAAChJ,GACV,OAAOA,EAAMZ,QAAUY,EAAMZ,QAAU,QAAU,EACrD,EACA6J,QAAS,SAACjJ,GAEN,IAAMgJ,EAAchJ,EAAMZ,QAAUY,EAAMZ,QAAU,QAAU,GAO9D,MAAO,GAAP8B,OAAU8H,GAAW9H,OAAGlB,EAAMjB,UAClC,EAEAmK,mBAAoB,SAAClJ,GACjB,OAAOA,EAAMX,aAAamH,QAAO,SAAAC,GAAW,OAAIA,EAAYY,eAAe,GAC/E,EACA8B,WAAY,SAACnJ,GAAU,IAAAoJ,EAAAC,EACnB,OAAsB,QAAtBD,EAAIpJ,EAAMsB,oBAAY,IAAA8H,GAAsB,QAAtBA,EAAlBA,EAAoB7H,4BAAoB,IAAA6H,GAAxCA,EAA0C/M,KACnC2D,EAAMsB,aAAaC,qBAAqBlF,KAC3B,QAAjBgN,EAAIrJ,EAAMrB,eAAO,IAAA0K,GAAsB,QAAtBA,EAAbA,EAAe9H,4BAAoB,IAAA8H,GAAnCA,EAAqChN,KACrC2D,EAAMrB,QAAQ4C,qBAAqBlF,KAEvC,IACX,EACAiN,cAAe,SAACtJ,GAAU,IAAAuJ,EAAAC,EAGtB,MAA2C,uBAAZ,QAAxBD,EAAiB,QAAjBC,EAACxJ,EAAMb,kBAAU,IAAAqK,OAAA,EAAhBA,EAAkBzL,aAAK,IAAAwL,EAAAA,EAAI,GACvC,mbCnfRrS,EAAA,kBAAAC,CAAA,MAAAC,EAAAD,EAAA,GAAAE,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAK,gBAAA,SAAAP,EAAAD,EAAAE,GAAAD,EAAAD,GAAAE,EAAAO,KAAA,EAAAC,EAAA,mBAAAC,OAAAA,OAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAjB,EAAAD,EAAAE,GAAA,OAAAC,OAAAK,eAAAP,EAAAD,EAAA,CAAAS,MAAAP,EAAAiB,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAApB,EAAAD,EAAA,KAAAkB,EAAA,aAAAjB,GAAAiB,EAAA,SAAAjB,EAAAD,EAAAE,GAAA,OAAAD,EAAAD,GAAAE,CAAA,WAAAoB,EAAArB,EAAAD,EAAAE,EAAAG,GAAA,IAAAK,EAAAV,GAAAA,EAAAI,qBAAAmB,EAAAvB,EAAAuB,EAAAX,EAAAT,OAAAqB,OAAAd,EAAAN,WAAAU,EAAA,IAAAW,EAAApB,GAAA,WAAAE,EAAAK,EAAA,WAAAH,MAAAiB,EAAAzB,EAAAC,EAAAY,KAAAF,CAAA,UAAAe,EAAA1B,EAAAD,EAAAE,GAAA,WAAA0B,KAAA,SAAAC,IAAA5B,EAAA6B,KAAA9B,EAAAE,GAAA,OAAAD,GAAA,OAAA2B,KAAA,QAAAC,IAAA5B,EAAA,EAAAD,EAAAsB,KAAAA,EAAA,IAAAS,EAAA,iBAAAC,EAAA,iBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,YAAAZ,IAAA,UAAAa,IAAA,UAAAC,IAAA,KAAAC,EAAA,GAAApB,EAAAoB,EAAA1B,GAAA,8BAAA2B,EAAApC,OAAAqC,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAA,MAAAD,GAAAA,IAAAvC,GAAAG,EAAAyB,KAAAW,EAAA7B,KAAA0B,EAAAG,GAAA,IAAAE,EAAAN,EAAAjC,UAAAmB,EAAAnB,UAAAD,OAAAqB,OAAAc,GAAA,SAAAM,EAAA3C,GAAA,0BAAA4C,SAAA,SAAA7C,GAAAkB,EAAAjB,EAAAD,GAAA,SAAAC,GAAA,YAAA6C,QAAA9C,EAAAC,EAAA,gBAAA8C,EAAA9C,EAAAD,GAAA,SAAAgD,EAAA9C,EAAAK,EAAAG,EAAAE,GAAA,IAAAE,EAAAa,EAAA1B,EAAAC,GAAAD,EAAAM,GAAA,aAAAO,EAAAc,KAAA,KAAAZ,EAAAF,EAAAe,IAAAE,EAAAf,EAAAP,MAAA,OAAAsB,GAAA,UAAAkB,EAAAlB,IAAA1B,EAAAyB,KAAAC,EAAA,WAAA/B,EAAAkD,QAAAnB,EAAAoB,SAAAC,MAAA,SAAAnD,GAAA+C,EAAA,OAAA/C,EAAAS,EAAAE,EAAA,aAAAX,GAAA+C,EAAA,QAAA/C,EAAAS,EAAAE,EAAA,IAAAZ,EAAAkD,QAAAnB,GAAAqB,MAAA,SAAAnD,GAAAe,EAAAP,MAAAR,EAAAS,EAAAM,EAAA,aAAAf,GAAA,OAAA+C,EAAA,QAAA/C,EAAAS,EAAAE,EAAA,IAAAA,EAAAE,EAAAe,IAAA,KAAA3B,EAAAK,EAAA,gBAAAE,MAAA,SAAAR,EAAAI,GAAA,SAAAgD,IAAA,WAAArD,GAAA,SAAAA,EAAAE,GAAA8C,EAAA/C,EAAAI,EAAAL,EAAAE,EAAA,WAAAA,EAAAA,EAAAA,EAAAkD,KAAAC,EAAAA,GAAAA,GAAA,aAAA3B,EAAA1B,EAAAE,EAAAG,GAAA,IAAAE,EAAAwB,EAAA,gBAAArB,EAAAE,GAAA,GAAAL,IAAA0B,EAAA,UAAAqB,MAAA,mCAAA/C,IAAA2B,EAAA,cAAAxB,EAAA,MAAAE,EAAA,OAAAH,MAAAR,EAAAsD,MAAA,OAAAlD,EAAAmD,OAAA9C,EAAAL,EAAAwB,IAAAjB,IAAA,KAAAE,EAAAT,EAAAoD,SAAA,GAAA3C,EAAA,KAAAE,EAAA0C,EAAA5C,EAAAT,GAAA,GAAAW,EAAA,IAAAA,IAAAmB,EAAA,gBAAAnB,CAAA,cAAAX,EAAAmD,OAAAnD,EAAAsD,KAAAtD,EAAAuD,MAAAvD,EAAAwB,SAAA,aAAAxB,EAAAmD,OAAA,IAAAjD,IAAAwB,EAAA,MAAAxB,EAAA2B,EAAA7B,EAAAwB,IAAAxB,EAAAwD,kBAAAxD,EAAAwB,IAAA,gBAAAxB,EAAAmD,QAAAnD,EAAAyD,OAAA,SAAAzD,EAAAwB,KAAAtB,EAAA0B,EAAA,IAAAK,EAAAX,EAAA3B,EAAAE,EAAAG,GAAA,cAAAiC,EAAAV,KAAA,IAAArB,EAAAF,EAAAkD,KAAArB,EAAAF,EAAAM,EAAAT,MAAAM,EAAA,gBAAA1B,MAAA6B,EAAAT,IAAA0B,KAAAlD,EAAAkD,KAAA,WAAAjB,EAAAV,OAAArB,EAAA2B,EAAA7B,EAAAmD,OAAA,QAAAnD,EAAAwB,IAAAS,EAAAT,IAAA,YAAA6B,EAAA1D,EAAAE,GAAA,IAAAG,EAAAH,EAAAsD,OAAAjD,EAAAP,EAAAa,SAAAR,GAAA,GAAAE,IAAAN,EAAA,OAAAC,EAAAuD,SAAA,eAAApD,GAAAL,EAAAa,SAAA,SAAAX,EAAAsD,OAAA,SAAAtD,EAAA2B,IAAA5B,EAAAyD,EAAA1D,EAAAE,GAAA,UAAAA,EAAAsD,SAAA,WAAAnD,IAAAH,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAA,IAAAkC,UAAA,oCAAA1D,EAAA,aAAA8B,EAAA,IAAAzB,EAAAiB,EAAApB,EAAAP,EAAAa,SAAAX,EAAA2B,KAAA,aAAAnB,EAAAkB,KAAA,OAAA1B,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAAnB,EAAAmB,IAAA3B,EAAAuD,SAAA,KAAAtB,EAAA,IAAAvB,EAAAF,EAAAmB,IAAA,OAAAjB,EAAAA,EAAA2C,MAAArD,EAAAF,EAAAgE,YAAApD,EAAAH,MAAAP,EAAA+D,KAAAjE,EAAAkE,QAAA,WAAAhE,EAAAsD,SAAAtD,EAAAsD,OAAA,OAAAtD,EAAA2B,IAAA5B,GAAAC,EAAAuD,SAAA,KAAAtB,GAAAvB,GAAAV,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAA,IAAAkC,UAAA,oCAAA7D,EAAAuD,SAAA,KAAAtB,EAAA,UAAAgC,EAAAlE,GAAA,IAAAD,EAAA,CAAAoE,OAAAnE,EAAA,SAAAA,IAAAD,EAAAqE,SAAApE,EAAA,SAAAA,IAAAD,EAAAsE,WAAArE,EAAA,GAAAD,EAAAuE,SAAAtE,EAAA,SAAAuE,WAAAC,KAAAzE,EAAA,UAAA0E,EAAAzE,GAAA,IAAAD,EAAAC,EAAA0E,YAAA,GAAA3E,EAAA4B,KAAA,gBAAA5B,EAAA6B,IAAA5B,EAAA0E,WAAA3E,CAAA,UAAAyB,EAAAxB,GAAA,KAAAuE,WAAA,EAAAJ,OAAA,SAAAnE,EAAA4C,QAAAsB,EAAA,WAAAS,OAAA,YAAAlC,EAAA1C,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAAE,EAAAF,EAAAY,GAAA,GAAAV,EAAA,OAAAA,EAAA4B,KAAA9B,GAAA,sBAAAA,EAAAiE,KAAA,OAAAjE,EAAA,IAAA6E,MAAA7E,EAAA8E,QAAA,KAAAvE,GAAA,EAAAG,EAAA,SAAAuD,IAAA,OAAA1D,EAAAP,EAAA8E,QAAA,GAAAzE,EAAAyB,KAAA9B,EAAAO,GAAA,OAAA0D,EAAAxD,MAAAT,EAAAO,GAAA0D,EAAAV,MAAA,EAAAU,EAAA,OAAAA,EAAAxD,MAAAR,EAAAgE,EAAAV,MAAA,EAAAU,CAAA,SAAAvD,EAAAuD,KAAAvD,CAAA,YAAAqD,UAAAd,EAAAjD,GAAA,2BAAAoC,EAAAhC,UAAAiC,EAAA9B,EAAAoC,EAAA,eAAAlC,MAAA4B,EAAAjB,cAAA,IAAAb,EAAA8B,EAAA,eAAA5B,MAAA2B,EAAAhB,cAAA,IAAAgB,EAAA2C,YAAA7D,EAAAmB,EAAArB,EAAA,qBAAAhB,EAAAgF,oBAAA,SAAA/E,GAAA,IAAAD,EAAA,mBAAAC,GAAAA,EAAAgF,YAAA,QAAAjF,IAAAA,IAAAoC,GAAA,uBAAApC,EAAA+E,aAAA/E,EAAAkF,MAAA,EAAAlF,EAAAmF,KAAA,SAAAlF,GAAA,OAAAE,OAAAiF,eAAAjF,OAAAiF,eAAAnF,EAAAoC,IAAApC,EAAAoF,UAAAhD,EAAAnB,EAAAjB,EAAAe,EAAA,sBAAAf,EAAAG,UAAAD,OAAAqB,OAAAmB,GAAA1C,CAAA,EAAAD,EAAAsF,MAAA,SAAArF,GAAA,OAAAkD,QAAAlD,EAAA,EAAA2C,EAAAG,EAAA3C,WAAAc,EAAA6B,EAAA3C,UAAAU,GAAA,0BAAAd,EAAA+C,cAAAA,EAAA/C,EAAAuF,MAAA,SAAAtF,EAAAC,EAAAG,EAAAE,EAAAG,QAAA,IAAAA,IAAAA,EAAA8E,SAAA,IAAA5E,EAAA,IAAAmC,EAAAzB,EAAArB,EAAAC,EAAAG,EAAAE,GAAAG,GAAA,OAAAV,EAAAgF,oBAAA9E,GAAAU,EAAAA,EAAAqD,OAAAb,MAAA,SAAAnD,GAAA,OAAAA,EAAAsD,KAAAtD,EAAAQ,MAAAG,EAAAqD,MAAA,KAAArB,EAAAD,GAAAzB,EAAAyB,EAAA3B,EAAA,aAAAE,EAAAyB,EAAA/B,GAAA,0BAAAM,EAAAyB,EAAA,qDAAA3C,EAAAyF,KAAA,SAAAxF,GAAA,IAAAD,EAAAG,OAAAF,GAAAC,EAAA,WAAAG,KAAAL,EAAAE,EAAAuE,KAAApE,GAAA,OAAAH,EAAAwF,UAAA,SAAAzB,IAAA,KAAA/D,EAAA4E,QAAA,KAAA7E,EAAAC,EAAAyF,MAAA,GAAA1F,KAAAD,EAAA,OAAAiE,EAAAxD,MAAAR,EAAAgE,EAAAV,MAAA,EAAAU,CAAA,QAAAA,EAAAV,MAAA,EAAAU,CAAA,GAAAjE,EAAA0C,OAAAA,EAAAjB,EAAArB,UAAA,CAAA6E,YAAAxD,EAAAmD,MAAA,SAAA5E,GAAA,QAAA4F,KAAA,OAAA3B,KAAA,OAAAN,KAAA,KAAAC,MAAA3D,EAAA,KAAAsD,MAAA,OAAAE,SAAA,UAAAD,OAAA,YAAA3B,IAAA5B,EAAA,KAAAuE,WAAA3B,QAAA6B,IAAA1E,EAAA,QAAAE,KAAA,WAAAA,EAAA2F,OAAA,IAAAxF,EAAAyB,KAAA,KAAA5B,KAAA2E,OAAA3E,EAAA4F,MAAA,WAAA5F,GAAAD,EAAA,EAAA8F,KAAA,gBAAAxC,MAAA,MAAAtD,EAAA,KAAAuE,WAAA,GAAAG,WAAA,aAAA1E,EAAA2B,KAAA,MAAA3B,EAAA4B,IAAA,YAAAmE,IAAA,EAAAnC,kBAAA,SAAA7D,GAAA,QAAAuD,KAAA,MAAAvD,EAAA,IAAAE,EAAA,cAAA+F,EAAA5F,EAAAE,GAAA,OAAAK,EAAAgB,KAAA,QAAAhB,EAAAiB,IAAA7B,EAAAE,EAAA+D,KAAA5D,EAAAE,IAAAL,EAAAsD,OAAA,OAAAtD,EAAA2B,IAAA5B,KAAAM,CAAA,SAAAA,EAAA,KAAAiE,WAAAM,OAAA,EAAAvE,GAAA,IAAAA,EAAA,KAAAG,EAAA,KAAA8D,WAAAjE,GAAAK,EAAAF,EAAAiE,WAAA,YAAAjE,EAAA0D,OAAA,OAAA6B,EAAA,UAAAvF,EAAA0D,QAAA,KAAAwB,KAAA,KAAA9E,EAAAT,EAAAyB,KAAApB,EAAA,YAAAM,EAAAX,EAAAyB,KAAApB,EAAA,iBAAAI,GAAAE,EAAA,SAAA4E,KAAAlF,EAAA2D,SAAA,OAAA4B,EAAAvF,EAAA2D,UAAA,WAAAuB,KAAAlF,EAAA4D,WAAA,OAAA2B,EAAAvF,EAAA4D,WAAA,SAAAxD,GAAA,QAAA8E,KAAAlF,EAAA2D,SAAA,OAAA4B,EAAAvF,EAAA2D,UAAA,YAAArD,EAAA,UAAAsC,MAAA,kDAAAsC,KAAAlF,EAAA4D,WAAA,OAAA2B,EAAAvF,EAAA4D,WAAA,KAAAR,OAAA,SAAA7D,EAAAD,GAAA,QAAAE,EAAA,KAAAsE,WAAAM,OAAA,EAAA5E,GAAA,IAAAA,EAAA,KAAAK,EAAA,KAAAiE,WAAAtE,GAAA,GAAAK,EAAA6D,QAAA,KAAAwB,MAAAvF,EAAAyB,KAAAvB,EAAA,oBAAAqF,KAAArF,EAAA+D,WAAA,KAAA5D,EAAAH,EAAA,OAAAG,IAAA,UAAAT,GAAA,aAAAA,IAAAS,EAAA0D,QAAApE,GAAAA,GAAAU,EAAA4D,aAAA5D,EAAA,UAAAE,EAAAF,EAAAA,EAAAiE,WAAA,UAAA/D,EAAAgB,KAAA3B,EAAAW,EAAAiB,IAAA7B,EAAAU,GAAA,KAAA8C,OAAA,YAAAS,KAAAvD,EAAA4D,WAAAnC,GAAA,KAAA+D,SAAAtF,EAAA,EAAAsF,SAAA,SAAAjG,EAAAD,GAAA,aAAAC,EAAA2B,KAAA,MAAA3B,EAAA4B,IAAA,gBAAA5B,EAAA2B,MAAA,aAAA3B,EAAA2B,KAAA,KAAAqC,KAAAhE,EAAA4B,IAAA,WAAA5B,EAAA2B,MAAA,KAAAoE,KAAA,KAAAnE,IAAA5B,EAAA4B,IAAA,KAAA2B,OAAA,cAAAS,KAAA,kBAAAhE,EAAA2B,MAAA5B,IAAA,KAAAiE,KAAAjE,GAAAmC,CAAA,EAAAgE,OAAA,SAAAlG,GAAA,QAAAD,EAAA,KAAAwE,WAAAM,OAAA,EAAA9E,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAsE,WAAAxE,GAAA,GAAAE,EAAAoE,aAAArE,EAAA,YAAAiG,SAAAhG,EAAAyE,WAAAzE,EAAAqE,UAAAG,EAAAxE,GAAAiC,CAAA,kBAAAlC,GAAA,QAAAD,EAAA,KAAAwE,WAAAM,OAAA,EAAA9E,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAsE,WAAAxE,GAAA,GAAAE,EAAAkE,SAAAnE,EAAA,KAAAI,EAAAH,EAAAyE,WAAA,aAAAtE,EAAAuB,KAAA,KAAArB,EAAAF,EAAAwB,IAAA6C,EAAAxE,EAAA,QAAAK,CAAA,YAAA+C,MAAA,0BAAA8C,cAAA,SAAApG,EAAAE,EAAAG,GAAA,YAAAoD,SAAA,CAAA5C,SAAA6B,EAAA1C,GAAAgE,WAAA9D,EAAAgE,QAAA7D,GAAA,cAAAmD,SAAA,KAAA3B,IAAA5B,GAAAkC,CAAA,GAAAnC,CAAA,UAAAqG,EAAAC,EAAApD,EAAAqD,EAAAC,EAAAC,EAAAC,EAAA7E,GAAA,QAAA8E,EAAAL,EAAAI,GAAA7E,GAAApB,EAAAkG,EAAAlG,KAAA,OAAAmG,GAAA,YAAAL,EAAAK,EAAA,CAAAD,EAAApD,KAAAL,EAAAzC,GAAA+E,QAAAtC,QAAAzC,GAAA2C,KAAAoD,EAAAC,EAAA,UAAAI,EAAAC,GAAA,sBAAAC,EAAA,KAAAC,EAAAC,UAAA,WAAAzB,SAAA,SAAAtC,EAAAqD,GAAA,IAAAD,EAAAQ,EAAAI,MAAAH,EAAAC,GAAA,SAAAR,EAAA/F,GAAA4F,EAAAC,EAAApD,EAAAqD,EAAAC,EAAAC,EAAA,OAAAhG,EAAA,UAAAgG,EAAAU,GAAAd,EAAAC,EAAApD,EAAAqD,EAAAC,EAAAC,EAAA,QAAAU,EAAA,CAAAX,OAAAY,EAAA,KAWA,IAAMC,EAAe,WAAH,MAAU,CACxBoB,cAAe,yBACf6J,OAAQ,KACRC,wBAAwB,EACxBC,mBAAmB,EACnBC,MAAO,GACPC,oBAAqB,GAErBC,kBAAmB,GACnBC,kBAAmB,GACnBC,kBAAmB,GACnBC,oBAAqB,GACrBC,oBAAqB,GACrBC,oBAAqB,GACrBC,yBAA0B,GAC1BC,qBAAsB,GACtBxM,IAAK,GACLyM,UAAW,GACXC,YAAa,GACbC,gBAAiB,GACjBC,YAAa,GACbC,WAAY,GACZC,eAAgB,GAChBC,YAAa,GACbC,iBAAkB,EAClBC,mBAAoB,GACpBC,YAAa,CAAC,EACdC,mBAAoB,CAAC,EACrBC,aAAc,CAAC,EACfC,UAAU,EACVC,UAAU,EACVC,OAAO,EACPC,QAAQ,EAERC,YAAa,EACbC,SAAU,EACVC,cAAe,gBACfC,MAAM,EACNC,gBAAgB,EAChBC,qBAAqB,EACxB,EAEY5G,GAAyBhF,EAAAA,EAAAA,IAAY,sBAAuB,CACrEC,MAAOxB,EACPyB,QAAS,CACLlE,MAAK,WAEDzE,OAAO4I,OAAOC,KA/CE,CACxBP,cAAe,yBACf6J,OAAQ,KACRC,wBAAwB,EACxBC,mBAAmB,EACnBC,MAAO,GACPC,oBAAqB,GAErBC,kBAAmB,GACnBC,kBAAmB,GACnBC,kBAAmB,GACnBC,oBAAqB,GACrBC,oBAAqB,GACrBC,oBAAqB,GACrBC,yBAA0B,GAC1BC,qBAAsB,GACtBxM,IAAK,GACLyM,UAAW,GACXC,YAAa,GACbC,gBAAiB,GACjBC,YAAa,GACbC,WAAY,GACZC,eAAgB,GAChBC,YAAa,GACbC,iBAAkB,EAClBC,mBAAoB,GACpBC,YAAa,CAAC,EACdC,mBAAoB,CAAC,EACrBC,aAAc,CAAC,EACfC,UAAU,EACVC,UAAU,EACVC,OAAO,EACPC,QAAQ,EAERC,YAAa,EACbC,SAAU,EACVC,cAAe,gBACfC,MAAM,EACNC,gBAAgB,EAChBC,qBAAqB,GASjB,EAEMC,iBAAgB,WAAG,IAAAvL,EAAA,YAAArC,EAAA9G,IAAAoF,MAAA,SAAAgE,IAAA,IAAAC,EAAA,OAAArJ,IAAAuB,MAAA,SAAA+H,GAAA,cAAAA,EAAAzD,KAAAyD,EAAApF,MAAA,cAAAoF,EAAAzD,KAAA,EAAAyD,EAAApF,KAAA,EAEIqF,MAAMC,IAAI,oBAAmB,OAA9CH,EAAQC,EAAA1F,KACZuF,EAAKT,cAAgBW,EAASI,KAAIH,EAAApF,KAAA,gBAAAoF,EAAAzD,KAAA,EAAAyD,EAAAI,GAAAJ,EAAA,SAElCW,QAAQpD,MAAKyC,EAAAI,IAAO,yBAAAJ,EAAAtD,OAAA,GAAAoD,EAAA,iBALHtC,EAOzB,EAGA6N,UAAS,SAACC,GAAgB,IAAAhL,EAAA,KACtBX,KAAKsJ,OAASqC,EACd3L,KAAK4L,mBAAmBxR,MAAK,WACzBuG,EAAKkL,sBACT,IAAE,OAAO,SAAAjO,GACLoD,QAAQpD,MAAM,4CAA6CA,EAC/D,GACJ,EAGMgO,iBAAgB,WAAG,IAAApK,EAAA,YAAA3D,EAAA9G,IAAAoF,MAAA,SAAAyE,IAAA,OAAA7J,IAAAuB,MAAA,SAAAuI,GAAA,cAAAA,EAAAjE,KAAAiE,EAAA5F,MAAA,UAChBuG,EAAK8H,OAAQ,CAAFzI,EAAA5F,KAAA,QACwC,OAApD+F,QAAQpD,MAAM,uCAAsCiD,EAAA/F,OAAA,wBAAA+F,EAAA5F,KAAA,GAIlD6Q,EAAAA,EAAAA,YAAU,cAAAjL,EAAA5F,KAAA,GAGV8Q,EAAAA,EAAAA,iBAAgBC,gCAAgCxK,EAAK8H,QAAO,OAGlE9H,EAAK8H,OAAO0B,UAAS,GACrBxJ,EAAK8H,OAAO2B,MAAMzJ,EAAKyJ,OAGvBzJ,EAAK8H,OAAO2C,OAAM,WACdzK,EAAK8H,OAAO4C,OAAO9R,MAAK,WACpB4G,QAAQC,IAAI,gCAChB,IAAE,OAAO,SAAArD,GACLoD,QAAQpD,MAAM,kCAAmCA,EAErD,GACJ,IAAE,yBAAAiD,EAAA9D,OAAA,GAAA6D,EAAA,IAvBmB/C,EAwBzB,EAGAgO,qBAAoB,WACX7L,KAAKsJ,SAAUtJ,KAAKuJ,wBAKzBvJ,KAAKsJ,OAAO6C,GAAG,aAAcnM,KAAKoM,kBAClCpM,KAAKsJ,OAAO6C,GAAG,mBAAoBnM,KAAKqM,wBACxCrM,KAAKsJ,OAAO6C,GAAG,OAAQnM,KAAKsM,YAC5BtM,KAAKsJ,OAAO6C,GAAG,QAASnM,KAAKuM,aAC7BvM,KAAKsJ,OAAO6C,GAAG,QAASnM,KAAKwM,aAE7BxM,KAAKuJ,wBAAyB,EAC9BvI,QAAQC,IAAI,8BAXRD,QAAQC,IAAI,2EAYpB,EAGAwL,qBAAoB,WACXzM,KAAKsJ,QAAWtJ,KAAKuJ,yBAK1BwC,EAAAA,EAAAA,iBAAgBW,2BAChB1M,KAAKsJ,OAAOqD,IAAI,aAAc3M,KAAKoM,kBACnCpM,KAAKsJ,OAAOqD,IAAI,mBAAoB3M,KAAKqM,wBACzCrM,KAAKsJ,OAAOqD,IAAI,OAAQ3M,KAAKsM,YAC7BtM,KAAKsJ,OAAOqD,IAAI,QAAS3M,KAAKuM,aAC9BvM,KAAKsJ,OAAOqD,IAAI,QAAS3M,KAAKwM,aAE9BxM,KAAKuJ,wBAAyB,EAC9BvI,QAAQC,IAAI,8BAZRD,QAAQC,IAAI,2EAapB,EAGA2L,cAAa,WACJ5M,KAAKsJ,QAIVtJ,KAAKyM,uBACLzM,KAAKsJ,OAAOuD,UACZ7M,KAAKsJ,OAAS,KAMdtI,QAAQC,IAAI,0CAXRD,QAAQpD,MAAM,mCAYtB,EAGAkP,yBAAwB,SAACC,GACrB/L,QAAQC,IAAI,kCASZjB,KAAKgN,aAAaD,EACtB,EAEAE,cAAa,WACLjN,KAAKsJ,SACLtJ,KAAKsJ,OAAO4D,QACZlN,KAAKsJ,OAAO2B,OAAM,GAClBjL,KAAKsJ,OAAO6B,YAAY,GAExBnL,KAAKyM,uBAEb,EAGAL,iBAAgB,WAGZpM,KAAKmL,YAAcnL,KAAKsJ,OAAO6B,cAC/BnL,KAAKoL,SAAWpL,KAAKsJ,OAAO8B,WACApL,KAAKmL,YAAcnL,KAAKoL,SACpDpL,KAAKqL,cAAgB,GAAHtK,OAAMf,KAAKmN,eAAenN,KAAKmL,aAAY,OAAApK,OAAMf,KAAKmN,eAAenN,KAAKoL,UAKhG,EAEA+B,eAAc,SAACC,GAMX,MADc,CAJAC,KAAKC,MAAMF,EAAoB,MAC7BC,KAAKC,MAAOF,EAAoB,KAAQ,IACxCC,KAAKC,MAAMF,EAAoB,KAEPG,KAAI,SAAAC,GAAI,OAAIA,EAAKC,WAAWC,SAAS,EAAG,IAAI,IACvEC,KAAK,IACtB,EACAtB,uBAAsB,WAAG,IAAAuB,EAAA7L,EAAA,KACrBf,QAAQC,IAAI,gCAED,QAAX2M,EAAA5N,KAAKsJ,cAAM,IAAAsE,GAAXA,EAAazB,GAAG,oBAAoB,WAC5BpK,EAAKuH,OAAOuE,iBAMiB,IAAzB9L,EAAKuH,OAAO4B,UAEZnJ,EAAKuH,OAAO4C,MAGxB,GACJ,EACAI,WAAU,WAAG,IAAAwB,EAAA3L,EAAA,KACTnB,QAAQC,IAAI,oBAED,QAAX6M,EAAA9N,KAAKsJ,cAAM,IAAAwE,GAAXA,EAAa3B,GAAG,QAAQ,WACpBhK,EAAK+I,QAAS,CAClB,GACJ,EACAqB,YAAW,WAAG,IAAAwB,EAAA/K,EAAA,KACVhC,QAAQC,IAAI,qBAED,QAAX8M,EAAA/N,KAAKsJ,cAAM,IAAAyE,GAAXA,EAAa5B,GAAG,SAAS,WACrBnJ,EAAKkI,QAAS,CAClB,GACJ,EACAsB,YAAW,WAAG,IAAAwB,EACVhN,QAAQC,IAAI,qBAED,QAAX+M,EAAAhO,KAAKsJ,cAAM,IAAA0E,GAAXA,EAAa7B,GAAG,SAAS,WACrB,IAAMvO,EAAQoC,KAAKsJ,OAAO1L,QAC1BoD,QAAQpD,MAAM,kBAAmBA,EAAMqQ,KAAMrQ,EAAM4E,QACvD,GACJ,EACA0L,SAAQ,WAEJlO,KAAKsL,MAAO,CAChB,EAoBA6C,WAAU,WACFnO,KAAKiL,MACLjL,KAAKoO,SAELpO,KAAKqO,MAEb,EAEAA,KAAI,WACIrO,KAAKsJ,SACLtJ,KAAKsJ,OAAO2B,OAAM,GAClBjL,KAAKiL,OAAQ,EAErB,EAEAmD,OAAM,WAGEpO,KAAKsJ,SAQLtJ,KAAKsJ,OAAO2B,OAAM,GAClBjL,KAAKiL,OAAQ,EAErB,EACAqD,WAAU,WACN,IAAIC,GAAUC,EAAAA,EAAAA,GAAQ,cAElBxO,KAAKkL,OACLqD,EAAQrC,OAERqC,EAAQrB,OAEhB,EACAuB,KAAI,YACcD,EAAAA,EAAAA,GAAQ,cACdC,MACZ,EACAC,kBAAiB,SAAC3B,EAAQ4B,GACtB,IAAIJ,GAAUC,EAAAA,EAAAA,GAAQ,cAClBI,EAAgB5O,KAAKP,cAAgB,QAAUsN,EAAS,cAC5DwB,EAAQM,IAAI,CAAC,IAAOD,EAAe,KAAQD,IAC3CJ,EAAQrC,MACZ,EACAgB,MAAK,WACD,IAAIqB,GAAUC,EAAAA,EAAAA,GAAQ,cACtBD,EAAQvD,UAAS,GACjBuD,EAAQrB,QACRlN,KAAKkL,QAAS,CAClB,EACAgB,KAAI,WACA,IAAIqC,GAAUC,EAAAA,EAAAA,GAAQ,cAEtBD,EAAQrC,OACRqC,EAAQvD,UAAS,GACjBhL,KAAKkL,QAAS,CAClB,EAEAjQ,KAAI,WACA,IAAIsT,GAAUC,EAAAA,EAAAA,GAAQ,cACtBD,EAAQvD,UAAS,GACjBuD,EAAQM,IAAI7O,KAAKuK,WACrB,EAEAuE,KAAI,WACA,IAAIP,GAAUC,EAAAA,EAAAA,GAAQ,cACtBD,EAAQvD,UAAS,GACjBuD,EAAQM,IAAI7O,KAAKwK,eACrB,EACAuE,WAAU,WACN,IAAIR,GAAUC,EAAAA,EAAAA,GAAQ,cACtBD,EAAQvD,UAAS,GAEjBuD,EAAQS,mBACZ,EACAC,oBAAmB,WACf,IAAIV,GAAUC,EAAAA,EAAAA,GAAQ,cACtBD,EAAQvD,UAAS,GACjBhL,KAAKkP,iBAAmBX,EAAQpD,WACpC,EA8CAgE,iBAAgB,SAACpC,GACb,IAAIqC,EAAU/E,GAEdrJ,QAAQC,IAAI,uCAAwC8L,GAGpD1C,EAAkB0C,EAAOnU,MAAQ,YACjCoI,QAAQC,IAAI,iCAADF,OAAkCsJ,IAEpB,kBAArB0C,EAAOsC,YAEPD,EAAWrC,EAAOuC,UAClBtO,QAAQC,IAAI,+BAAgCmO,KAE5CpO,QAAQC,IAAI,gBAAiB8L,EAAOwC,cACpCvO,QAAQC,IAAI,gBAAiB8L,EAAOyC,cACpCxO,QAAQC,IAAI,UAAW8L,EAAO0C,QAC9BzO,QAAQC,IAAI,aAAc8L,EAAO2C,WAOjCN,EAHiB,GAAHrO,OAAMgM,EAAOwC,cAAYxO,OAAGgM,EAAOyC,cAAYzO,OAAGgM,EAAO0C,OAAM,KAE5D1C,EAAO2C,UAExB1O,QAAQC,IAAI,qCAAsCmO,IAUtD,OADApO,QAAQC,IAAI,mCAADF,OAAoCqO,EAAQ,YAAArO,OAAWsJ,IAC3D,CAAC+E,SAAAA,EAAU/E,gBAAAA,EACtB,EAGA2C,aAAY,SAACD,GAAQ,IAAA1J,EAAA,KACjB,IACI,IAAIkL,GAAUC,EAAAA,EAAAA,GAAQ,cACtBxN,QAAQC,IAAI,kBACZ,IAAM0O,GAAa5D,EAAAA,EAAAA,iBAEnB6D,EAAoC5P,KAAKmP,iBAAiBpC,GAAnDqC,EAAQQ,EAARR,SAAU/E,EAAeuF,EAAfvF,gBAGbkE,IACAA,EAAQM,IAAI,CAAC,IAAOO,EAAU,KAAQ/E,IAEtCkE,EAAQtC,OAAM,WAIV0D,EAAWE,iBAAkB,EAC7BF,EAAW3D,gCAAgCuC,GAASnU,MAAK,WAErDmU,EAAQrC,OAAM,OAAO,SAAAtO,IACjB+E,EAAAA,EAAAA,wBAAuB4D,8BAA8B,QAAS,8BAAgC3I,GAC9FoD,QAAQpD,MAAM,8BAA+BA,EACjD,IAGA2Q,EAAQtD,OAAM,GACd5H,EAAK4H,OAAQ,CACjB,GACJ,IAER,CAAE,MAAOrN,IAEL+E,EAAAA,EAAAA,wBAAuB4D,8BAA8B,QAAS,4BAA8B3I,GAC5FoD,QAAQpD,MAAM,4BAA6BA,EAC/C,CACJ,EA8CAkS,aAAY,WAAG,IAAAlM,EAAA,KACX5C,QAAQC,IAAI,kBACRjB,KAAKsJ,QAELtJ,KAAKsJ,OAAO2C,OAAM,WACdrI,EAAK0F,OAAO4C,OAEZtI,EAAK0F,OAAO2B,OAAM,GAClBrH,EAAKqH,OAAQ,CACjB,GAER,EASA8E,yBAAwB,SAAChD,GACrB/M,KAAKuL,gBAAiB,GACtByE,EAAAA,EAAAA,mBAAkBC,eAClB,IAAI1B,GAAUC,EAAAA,EAAAA,GAAQ,cACtBxO,KAAKoK,YAAc2C,EACnB/M,KAAKqK,gBAAkB,gBACvBkE,EAAQM,IAAI,CAAC,IAAO7O,KAAKoK,YAAa,KAAQpK,KAAKqK,kBACnDkE,EAAQvD,UAAS,GACjBhL,KAAKoO,SACLpO,KAAKkL,QAAS,CAClB,EACAgF,4BAA2B,SAACnD,GACxB/M,KAAKuL,gBAAiB,GACtByE,EAAAA,EAAAA,mBAAkBC,eAClB,IAAI1B,GAAUC,EAAAA,EAAAA,GAAQ,cACtBxO,KAAKoK,YAAc2C,EACnB/M,KAAKqK,gBAAkB,wBACvBkE,EAAQM,IAAI,CAAC,IAAO7O,KAAKoK,YAAa,KAAQpK,KAAKqK,kBACnDkE,EAAQvD,UAAS,GACjBhL,KAAKoO,SACLpO,KAAKkL,QAAS,CAClB,EACAiF,qBAAoB,SAACpD,GACjB,IACI/M,KAAKuL,gBAAiB,GACtByE,EAAAA,EAAAA,mBAAkBC,eAClB,IAAI1B,GAAUC,EAAAA,EAAAA,GAAQ,cAEtB,IAAKzB,EAAOuC,YAAcvC,EAAOnU,KAE7B,MADA+J,EAAAA,EAAAA,wBAAuB4D,8BAA8B,QAAS,yBACxD,IAAIjM,MAAM,yBAGpB0F,KAAKoK,YAAc2C,EAAOuC,UAC1BtP,KAAKqK,gBAAkB0C,EAAOnU,KAC9B2V,EAAQM,IAAI,CAAC,IAAO9B,EAAOuC,UAAW,KAAQvC,EAAOnU,OAErDoH,KAAKoO,SACLpO,KAAKkL,QAAS,CAClB,CAAE,MAAOtN,GAGL,MAFA+E,EAAAA,EAAAA,wBAAuB4D,8BAA8B,QAAS,8BAAgC3I,GAC9FoD,QAAQpD,MAAM,6BAA8BA,GACtCA,CACV,CACJ,EACAwS,sBAAqB,SAACrD,GAClB/M,KAAKuL,gBAAiB,EACtB,IAAIgD,GAAUC,EAAAA,EAAAA,GAAQ,cAEtBxO,KAAKoK,YADU,2BACe2C,EAAS,cACvC/M,KAAKqK,gBAAkB,wBACvBkE,EAAQM,IAAI,CAAC,IAAO7O,KAAKoK,YAAa,KAAQpK,KAAKqK,kBACnDrK,KAAKoO,SACLpO,KAAKkL,QAAS,CAClB,EACAmF,sBAAqB,SAACtD,GAClB/M,KAAKuL,gBAAiB,GACtByE,EAAAA,EAAAA,mBAAkBC,eAClB,IAAI1B,GAAUC,EAAAA,EAAAA,GAAQ,cAClB8B,EAAWvD,EAAOwC,aAAexC,EAAOyC,aAAezC,EAAO0C,OAAS,IAC3EzP,KAAKoK,YAAc2C,EAAO2C,UAC1B1P,KAAKqK,gBAAkB0C,EAAOnU,KAC9B2V,EAAQM,IAAI,CAAC,IAAOyB,EAAWtQ,KAAKoK,YAAa,KAAQpK,KAAKqK,kBAC9DrK,KAAKoO,SACLpO,KAAKkL,QAAS,CAClB,EAGAqF,wBAAuB,WAEvB,EACAC,mBAAkB,WAElB,EACMrL,oBAAmB,SAACF,EAAYwL,GAAW,IAAAlM,EAAA,YAAA1G,EAAA9G,IAAAoF,MAAA,SAAAiG,IAAA,IAAAsO,EAAAC,EAAA,OAAA5Z,IAAAuB,MAAA,SAAAoK,GAAA,cAAAA,EAAA9F,KAAA8F,EAAAzH,MAAA,OAM7C,GALIyV,GAAe,EAChBD,IACCC,GAAe,GAIdnM,EAAK9E,cAAe,CAAFiD,EAAAzH,KAAA,QACiC,OAApD+F,QAAQC,IAAI,wCAAwCyB,EAAAzH,KAAA,EAC9CsJ,EAAKkH,mBAAkB,OAE7BlH,EAAK9E,eAEDkR,EAAWpM,EAAK9E,cACpB8E,EAAK6F,YAAcuG,EAAW,OAAS1L,EAAW/I,KAAO,cAGzDqI,EAAK8F,gBAAkB,iCAETmE,EAAAA,EAAAA,GAAQ,cACdK,IAAI,CAAC,IAAOtK,EAAK6F,YAAa,KAAQ7F,EAAK8F,kBAC/CqG,GACAnM,EAAK6J,SAET7J,EAAK2G,QAAS,GAEdlK,QAAQpD,MAAM,oDAOlB,wBAAA8E,EAAA3F,OAAA,GAAAqF,EAAA,IAjC6CvE,EAkCjD,EACM+S,kBAAiB,SAACC,GAAO,IAAA9L,EAAA,YAAAlH,EAAA9G,IAAAoF,MAAA,SAAA8G,IAAA,IAAAmH,EAAA,OAAArT,IAAAuB,MAAA,SAAA6K,GAAA,cAAAA,EAAAvG,KAAAuG,EAAAlI,MAAA,OAc3B+F,QAAQC,IAAI,qBAAsB4P,EAAMjY,MACxCoI,QAAQC,IAAI,aAAc4P,EAAMvB,WAChCtO,QAAQC,IAAI,gBAAiB4P,EAAMtB,cACnCvO,QAAQC,IAAI,gBAAiB4P,EAAMrB,cACnCxO,QAAQC,IAAI,UAAW4P,EAAMpB,QAC7BzO,QAAQC,IAAI,aAAc4P,EAAMnB,WAE5BtF,EAAcyG,EAAMtB,aAAesB,EAAMrB,aAAeqB,EAAMpB,OAAS,IAAMoB,EAAMnB,WAErElB,EAAAA,EAAAA,GAAQ,cACdK,IAAI,CAAC,IAAOzE,EAAa,KAAQyG,EAAMjY,OAC/CmM,EAAKqJ,SACLrJ,EAAKmG,QAAS,EASlB,yBAAA/H,EAAApG,OAAA,GAAAkG,EAAA,IAnC2BpF,EAoC/B,EAGAiT,2BAA0B,SAAC/D,GACvB/M,KAAK+Q,eAAiB,aACtB/Q,KAAKgR,eAAiBjE,EAAO2C,WAC7BuB,EAAAA,EAAAA,kBAAiBC,eAAiB,WACtC,EACAC,sBAAqB,SAAC1P,EAAMjD,GACxBwB,KAAKoR,sBACL,IAAMC,GAAYC,EAAAA,EAAAA,gBAEd7P,EAAK8P,gBACLF,EAAUG,QAAQ/P,EAAK8P,eAAerV,MACtCmV,EAAUI,cAAc,UAAD1Q,OAAWU,EAAKmB,KAAI,aAAA7B,OAAYgM,OAAOwE,eAAe3O,QACtEpE,GACP6S,EAAUG,QAAQ/P,EAAKvF,MACvBmV,EAAUK,OAAO,UAAD3Q,OAAWU,EAAKmB,OAChCyO,EAAUM,eAAenT,EAAQtC,MACjCmV,EAAUI,cAAc,UAAD1Q,OAAWU,EAAKmB,KAAI,aAAA7B,OAAYvC,EAAQoE,SAE/DyO,EAAUG,QAAQ/P,EAAKvF,MACvBmV,EAAUK,OAAO,UAAD3Q,OAAWU,EAAKmB,OAExC,EAEAgP,aAAY,WAeR,EAEJC,kBAAiB,WACb,IAAMC,GAAkBC,EAAAA,EAAAA,sBAClBC,GAAYC,EAAAA,EAAAA,gBAGlBH,EAAgBI,UAAW,EAE3BJ,EAAgBK,UAAW,EAC3BL,EAAgBM,IAAM,EAEtBpS,KAAK0J,oBAAsB,yBAC3B1J,KAAI,MAAS,qBACbA,KAAKgL,UAAYgH,EAAUK,QAC/B,EACAC,kBAAiB,WACb,IAAMR,GAAkBC,EAAAA,EAAAA,sBAGxBD,EAAgBI,UAAW,EAE3BJ,EAAgBK,UAAW,EAE3BL,EAAgBS,qBAAsB,EAEtCvS,KAAK0J,oBAAsB,yBAC3B1J,KAAI,MAAS,qBACbA,KAAKgL,UAAW,CACpB,EACAwH,qBAAoB,WAChB,IAAMV,GAAkBC,EAAAA,EAAAA,sBACxB/R,KAAK0J,oBAAsB,wBAC3B1J,KAAI,MAAS,oBACb8R,EAAgBW,UAAW,EAC3BX,EAAgBI,UAAW,EAC3BJ,EAAgBK,UAAW,CAC/B,EACAtN,iBAAgB,SAACpF,GACbO,KAAKP,cAAgBA,CACzB,GAKJ+I,QAAS,CAAC,8FC3vBP,SAASkK,EAAaC,GACzB,IAAMX,GAAYC,EAAAA,EAAAA,gBACZH,GAAkBC,EAAAA,EAAAA,sBAClBa,GAAmBC,EAAAA,EAAAA,uBAEzBf,EAAgBgB,YAAcH,EAC9Bb,EAAgBiB,kBAAmB,EACnCjB,EAAgBkB,cAAe,EAE3BhB,EAAUK,UAAYY,OAAOC,WAAa,MAAQpB,EAAgBI,SAClEJ,EAAgBM,IAAM,GAEtBN,EAAgBM,IAAM,EACtBN,EAAgBqB,gBAAiB,GAGrCP,EAAiBN,oBAEbR,EAAgBsB,aAChBtB,EAAgBsB,YAAa,EAC7BH,OAAOI,SAASC,QAAO,IAWvBC,EAAAA,QAAQpH,GAAG,YAAY,SAACqH,GAChBxB,EAAUK,UAAYY,OAAOC,WAAa,MAAQpB,EAAgBI,SAClEJ,EAAgBM,IAAM,EAEtBN,EAAgBM,IAAM,EAEyB,KAA3Ba,OAAOI,SAASI,SAChB3B,EAAgB4B,mBACpCC,uBAAsB,WAClB,IAAMC,EAASC,SAASC,eAAe,UACnCF,EACAA,EAAOG,eAAe,CAACC,SAAU,SAEjCf,OAAOgB,SAAS,EAAG,EAE3B,IAEJnC,EAAgB4B,mBAAoB,CACxC,IAEJ5B,EAAgBoC,aAChBpC,EAAgBqB,gBAAiB,EACjCrB,EAAgBqC,UAAW,CAI/B,uEC5DIC,QAA0B,GAA4B,KAE1DA,EAAwB3Y,KAAK,CAAC4Y,EAAO1S,GAAI,GAAI,GAAG,CAAC,QAAU,EAAE,QAAU,GAAG,MAAQ,GAAG,SAAW,GAAG,WAAa,MAEhH,+ECJIyS,QAA0B,GAA4B,KAE1DA,EAAwB3Y,KAAK,CAAC4Y,EAAO1S,GAAI,uIAAwI,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,mEAAmE,MAAQ,GAAG,SAAW,6DAA6D,eAAiB,CAAC,woeAAwqe,WAAa,MAEzif,iGCFA,4DCUA,IAAMmQ,GAAkBC,EAAAA,EAAAA,sBAClBC,GAAYC,EAAAA,EAAAA,gBAEdqC,EAAQC,EAIZ,SAASzF,IACP,GAAIgD,EAAgB0C,QACdF,EAAMG,IACRlB,EAAAA,QAAQmB,MAAMJ,EAAMG,KAEpBlB,EAAAA,QAAQmB,MAAM5C,EAAgB0C,cAGhC,GAAIF,EAAMG,IACRlB,EAAAA,QAAQmB,MAAMJ,EAAMG,SACf,CAEL,IAAID,EAAUxC,EAAU2C,UAAY,aAAe,IACnDpB,EAAAA,QAAQmB,MAAMF,EAChB,CAEJ,ihRCjCA,6DC0CwBzC,EAAAA,EAAAA,sBAERgB,kBAAmB,EAEnC,IAAIuB,EAAQC,EAYNK,IAPcC,EAAAA,EAAAA,WAAS,iBAAO,CAClC,oEAAqEP,EAAMQ,MAAMpR,QACjF,gEAAiE4Q,EAAMQ,MAAMtS,QAC7E,wEAAyE8R,EAAMQ,MAAMC,QACrF,4DAA6DT,EAAMQ,MAAMlX,MAC1E,IAEsB,iBAAAoX,KAAAje,IAAAoF,MAAG,SAAAgE,IAAA,OAAApJ,IAAAuB,MAAA,SAAA+H,GAAA,cAAAA,EAAAzD,KAAAyD,EAAApF,MAAA,cAAAoF,EAAApF,KAAA,EAClBsY,EAAAA,QAAQzS,KAAKmU,MAAM,gBAAe,OACxC1B,EAAAA,QAAQD,SAAS,wBAAAjT,EAAAtD,OAAA,GAAAoD,EAAA,mLAClB,kBAHsB,OAAA6U,EAAA9W,MAAA,KAAAD,UAAA,2gDCjDjBiX,GAASC,EAAAA,EAAAA,MAAI,GAEbC,EAAQ,WACZF,EAAOzd,OAAQ,EACf4d,EAAK,SACP,EAEMA,EAAOC,2cClBTC,EAAU,CAEdA,OAAiB,OACjBA,WAAoB,GAEP,IAAI,IAASA,GAIX,IAAQC,OAAvB,MCLA,EAFoB,w0VC0RpB9C,EAAAA,EAAAA,GAAa,0BAEb,IAAMZ,GAAkBC,EAAAA,EAAAA,sBAClB0D,GAAc9V,EAAAA,EAAAA,kBAChBwB,GAAegU,EAAAA,EAAAA,KAAI,MAEjBO,GAAOC,EAAAA,EAAAA,MAWP7M,IALoBqM,EAAAA,EAAAA,MAAI,IACJA,EAAAA,EAAAA,MAAI,IACFA,EAAAA,EAAAA,MAAI,IACjBS,EAAAA,EAAAA,OAARC,MAESV,EAAAA,EAAAA,KAAI,KACdlW,GAAUkW,EAAAA,EAAAA,KAAI,IACdvW,GAAYuW,EAAAA,EAAAA,KAAI,IAChBW,EAASJ,EAAKpB,MAAM7c,MAAMqe,OAE1BC,EAAe,iBAAAf,KAAAje,IAAAoF,MAAG,SAAAgE,IAAA,OAAApJ,IAAAuB,MAAA,SAAA+H,GAAA,cAAAA,EAAAzD,KAAAyD,EAAApF,MAAA,cAAAoF,EAAApF,KAAA,EAChBwa,EAAYxV,aAAa7F,KAC3B+G,GAAe0T,EAAAA,EAAAA,WAAS,kBAAMY,EAAYtU,YAAY,KACzD,wBAAAd,EAAAtD,OAAA,GAAAoD,EAAA,mLACF,kBAJoB,OAAA6U,EAAA9W,MAAA,KAAAD,UAAA,KAKrB8X,KAGAC,EAAAA,EAAAA,cAAY,WACe,IAAAC,EAAAC,EAAAC,EAAAC,EAQiCC,EAR1D,GAAIZ,EAAYxW,QAQd,GAPAA,EAAQxH,MAAQge,EAAYxW,QAAU,QAElCwW,EAAYlX,WAAgC,QAAvB0X,EAAIR,EAAYjX,eAAO,IAAAyX,GAAsB,QAAtBA,EAAnBA,EAAqB7U,4BAAoB,IAAA6U,GAAzCA,EAA2C/Z,KACtE0C,EAAUnH,MAAQge,EAAYjX,QAAQ4C,qBAAqBlF,MACjDuZ,EAAYlX,WAAqC,QAA5B2X,EAAIT,EAAYtU,oBAAY,IAAA+U,GAAsB,QAAtBA,EAAxBA,EAA0B9U,4BAAoB,IAAA8U,GAA9CA,EAAgDha,OACnF0C,EAAUnH,MAAQge,EAAYtU,aAAaC,qBAAqBlF,MAE9DuZ,EAAYlX,WAAgC,QAAvB4X,EAAIV,EAAYjX,eAAO,IAAA2X,GAAnBA,EAAqBvT,KAChDkG,EAAQrR,MAAQ,GAAHsJ,OAAM+U,EAAM,WAAA/U,OAA4B,QAA5BsV,EAAUlV,EAAa1J,aAAK,IAAA4e,OAAA,EAAlBA,EAAoBzT,KAAI,aAAA7B,OAAY0U,EAAYjX,QAAQoE,WACtF,IAAK6S,EAAYlX,WAA+B,QAAtB6X,EAAIjV,EAAa1J,aAAK,IAAA2e,GAAlBA,EAAoBxT,KAAM,KAAA0T,EAC7DxN,EAAQrR,MAAQ,GAAHsJ,OAAM+U,EAAM,WAAA/U,OAA4B,QAA5BuV,EAAUnV,EAAa1J,aAAK,IAAA6e,OAAA,EAAlBA,EAAoB1T,KACzD,CAEJ,IAGA,IAkBM2T,GAAmBpB,EAAAA,EAAAA,KAAI,MACvBqB,IAAmBrB,EAAAA,EAAAA,KAAI,MAEvBsB,GAAa,WACjBF,EAAiB9e,MAAQ,KACzB+e,GAAiB/e,MAAQ,IAC3B,EAEMif,GAAW,SAACC,EAAUC,GAC1BL,EAAiB9e,MAAQkf,EACzBH,GAAiB/e,MAAQmf,CAC3B,20OCzWI,GAAU,CAEd,OAAiB,OACjB,WAAoB,GAEP,IAAI,KAAS,IAIX,KAAQpB,OCNvB,MAEA,IAFiC,cAAgB,GAAQ,CAAC,CAAC,YAAY","sources":["webpack:///./resources/js/Stores/GoLiveStore.js","webpack:///./resources/js/Stores/VideoAuxPlayerStore.js","webpack:///./resources/js/Utilities/PageSetup.js","webpack:///./resources/js/Components/Global/Images/ImageLightboxModal.vue?575c","webpack:///./resources/js/Pages/Training/HowToPushToFacebook.vue?0a6f","webpack:///./resources/js/Components/Global/Buttons/BackButton.vue?5e87","webpack:///./resources/js/Components/Global/Buttons/BackButton.vue","webpack:///./resources/js/Components/Global/Modals/Messages.vue?dfe9","webpack:///./resources/js/Components/Global/Modals/Messages.vue","webpack:///./resources/js/Components/Global/Images/ImageLightboxModal.vue","webpack:///./resources/js/Components/Global/Images/ImageLightboxModal.vue?51bd","webpack:///./resources/js/Components/Global/Images/ImageLightboxModal.vue?3ae9","webpack:///./resources/js/Pages/Training/HowToPushToFacebook.vue","webpack:///./resources/js/Pages/Training/HowToPushToFacebook.vue?dd0c","webpack:///./resources/js/Pages/Training/HowToPushToFacebook.vue?2050"],"sourcesContent":["import { defineStore } from 'pinia'\nimport { useNotificationStore } from '@/Stores/NotificationStore'\nimport { useVideoPlayerStore } from '@/Stores/VideoPlayerStore'\nimport { useVideoAuxPlayerStore } from '@/Stores/VideoAuxPlayerStore'\nimport videojs from 'video.js'\n\nconst initialState = () => ({\n    displayEpisodeGoLiveComponent: false,\n    isEpisode: null,\n    episode: null,\n    preSelectedShowId: null,\n    selectedShowId: null,\n    // selectedShow: null, this uses the getter... set it up in the component as a computed property\n    shows: [], // Assuming you might want to store shows here too\n    streamKey: '', // Optional: Store the generated stream key if needed\n    wildcardId: '',\n    isLive: false,\n    isRecording: false,\n    streamInfo: null,\n    rtmpUri: null,\n    destinations: [], // New state for holding destinations\n    isLoadingDestinations: false,\n    loadingDestinationId: null,\n    processingRecordingChange: false,\n    isProcessingDisableAllAutoPushes: false,\n    playerIsReloading: false,\n    pushDestinationFormSubmitProcessing: false,\n    mistServerUri: null,\n    previousStreamStatus: null,\n})\n\nexport const useGoLiveStore = defineStore('goLiveStore', {\n    state: initialState,\n    actions: {\n        reset() {\n            // Reset the store to its original state (clear all data)\n            Object.assign(this, initialState())\n        },\n        async fetchShows() {\n            try {\n                const response = await axios.get('/go-live/shows') // Adjust the URL as needed\n                this.shows = response.data\n            } catch (error) {\n                // console.error('Failed to fetch shows:', error)\n                // Handle error appropriately\n            }\n        },\n\n\n        // temporarily commenting this out\n        async generateStreamKey() {\n            if (!this.selectedShowId) {\n                // console.error('No show selected')\n                throw new Error('No show selected') // Throw an error to be caught by the caller\n            }\n\n            try {\n                const response = await axios.post(`/go-live/shows/${this.selectedShowId}/stream-key`)\n                // console.log('Stream key generated:', response.data)\n                // this.streamKey = response.data.stream_key // Assuming the response includes the stream key\n                console.log('this new stream key: ' + this.streamKey)\n                // console.log('response data stream key: ' + response.data.stream_key)\n                // Update goLiveStore.selectedShow.mist_stream_wildcard_id with the returned stream key\n                if (this.selectedShowId && response.data.stream_key) {\n                    this.selectedShow.mist_stream_wildcard = response.data\n                    this.selectedShow.mist_stream_wildcard_id = response.data.stream_key\n                }\n                return response.data // Return the response data\n            } catch (error) {\n                // console.error('Error generating stream key:', error.response ? error.response.data : error)\n                throw error // Re-throw the error to be caught by the component\n            }\n        },\n\n        // Other actions...\n        updateAndGetStreamKey() {\n            const show = this.shows.find(show => show.id === this.selectedShowId) || null\n            const streamKey = show?.mist_stream_wildcard?.name || ' < RELOAD THIS PAGE TO GET YOUR STREAM KEY > '\n\n            // Perform the state update\n            this.streamKey = streamKey\n\n            // Return the stream key for immediate use\n            return streamKey\n        },\n\n\n        // async generateStreamKey() {\n        //     if (!this.selectedShowId) {\n        //         console.error(\"No show selected\");\n        //         throw new Error(\"No show selected\");\n        //     }\n        //\n        //     try {\n        //         const response = await axios.post(`/go-live/shows/${this.selectedShowId}/stream-key`);\n        //         console.log(\"Stream key generated:\", response.data);\n        //\n        //         // Find the index of the selected show in the shows array\n        //         const selectedIndex = this.shows.findIndex(show => show.id === this.selectedShowId);\n        //         if (selectedIndex !== -1) {\n        //             // Update the selected show with the new stream key information\n        //             this.shows[selectedIndex].mist_stream_wildcard = response.data;\n        //             this.shows[selectedIndex].mist_stream_wildcard_id = response.data.stream_key;\n        //         }\n        //         return response.data;\n        //     } catch (error) {\n        //         console.error(\"Error generating stream key:\", error.response ? error.response.data : error);\n        //         throw error;\n        //     }\n        // },\n\n\n        // setPreSelectedShowId(id) {\n        //     this.preSelectedShowId = id;\n        //     console.log('preSelectedShowId updated to:', this.preSelectedShowId);\n        // },\n        // Action to update selectedShowId and selectedShow based on selectedShowId\n        setSelectedShowId(showId) {\n            this.selectedShowId = showId\n            this.updateSelectedShow() // Call the method to update selectedShow based on new selectedShowId\n        },\n        // Method to find and update selectedShow based on selectedShowId\n        updateSelectedShow() {\n            this.selectedShow = this.shows.find(show => show.id === this.selectedShowId) || null\n        },\n        goLive() {\n            this.isLive = true\n        },\n        stopLive() {\n            this.isLive = false\n        },\n        async startRecording() {\n            const notificationStore = useNotificationStore()\n            const showSlug = this.selectedShow.slug\n            console.log(`Starting recording for show ${showSlug}`)\n            this.processingRecordingChange = true\n            try {\n                const response = await axios.post('/mist-stream/start-recording/'+showSlug, {\n                    stream_name: this.streamKey,\n                })\n                // console.log('Recording started successfully:', response.data)\n                // console.log('Stream Name:', this.streamKey)\n                const {message, status} = response.data\n                // Use the status from the response for the notification\n                notificationStore.setToastNotification(message, status)\n                // Update the recording status\n                this.isRecording = true\n            } catch (error) {\n                // console.error('Error starting push:', error)\n                notificationStore.setToastNotification('Failed to start recording.', 'error')\n                // Handle the error appropriately in your UI\n            } finally {\n                this.processingRecordingChange = false // Stop processing spinner regardless of outcome\n            }\n        },\n        async stopRecording() {\n            const notificationStore = useNotificationStore()\n            const showSlug = this.selectedShow.slug\n            console.log(`Stopping recording for show ${showSlug}`)\n            this.processingRecordingChange = true\n            // console.log(`Stopping recording for show ${showSlug}`)\n            try {\n                const response = await axios.post('/mist-stream/stop-recording/'+showSlug, {\n                    stream_name: this.streamKey,\n                })\n                // console.log('Recording stopped successfully:', response.data)\n                const {message, status} = response.data\n                notificationStore.setToastNotification(message, status)\n                // Update the recording status\n                this.isRecording = false\n            } catch (error) {\n                // console.error('Error stopping recording:', error)\n                notificationStore.setToastNotification('Failed to stop push.', 'error')\n            } finally {\n                this.processingRecordingChange = false // Stop processing spinner regardless of outcome\n            }\n        },\n        // async fetchStreamInfo(streamName) {\n        //     try {\n        //         // const response = await fetch(`http://mist.nottv.io:8080/json_${encodedStreamName}.js`); // Replace with your URL\n        //         const response = await fetch(`/fetch-stream-info/${streamName}`) // Replace with your URL\n        //         if (!response.ok) throw new Error('Failed to fetch')\n        //         this.streamInfo = await response.json() // Store the data in serverInfo\n        //     } catch (error) {\n        //         console.error('Error fetching server info:', error)\n        //     }\n        // },\n        async fetchStreamInfo() {\n            const notificationStore = useNotificationStore()\n            // console.log('start fetch stream info...')\n            try {\n                if (!this.mistServerUri) {\n                    await this.fetchMistServerUri()\n                }\n                // Then, use the URI in your next request\n                const response = await axios.post('/fetch-stream-info', {\n                    streamName: this.streamKey,\n                    mistServerUri: this.mistServerUri, // Pass it as a string\n                })\n                // console.log('response returned...')\n                // console.log(response.data);\n                this.streamInfo = response.data.streamInfo || []\n                // Assuming a successful response might look like {\"message\": \"Stream is online\", \"status\": \"success\"}\n                let message, status\n\n                // Check if the response contains an error field\n                if (response.data.streamInfo.error) {\n                    message = response.data.streamInfo.error\n                    status = 'error' // Assuming 'error' as a fallback status\n                    // console.log('error returned...')\n                } else if (response.data.message && response.data.success) {\n                    // If it's a success message with a status\n                    message = response.data.message\n                    status = 'info'\n                    // console.log('success returned...')\n\n                } else {\n                    // Fallback for unexpected response structure\n                    message = 'Received unexpected response from server.'\n                    status = 'info' // Default to 'info' or another appropriate fallback status\n                    // console.log('unexpected response returned...')\n                }\n\n                // Use the status from the response for the notification\n                // notificationStore.setToastNotification(message, status)\n            } catch (error) {\n                // console.error(error);\n                notificationStore.setToastNotification('Failed to fetch stream info.', 'error')\n                // console.log('catch error...')\n            }\n        },\n        async fetchRtmpUri() {\n            try {\n                const response = await fetch(`/fetch-rtmp-uri`)\n                if (!response.ok) throw new Error('Failed to fetch')\n\n                // Parse the plain text body of the response\n                // Store the RTMP URI string in a Vue data property or similar\n                this.rtmpUri = await response.text()\n            } catch (error) {\n                // console.error('Error fetching RTMP URI:', error)\n            }\n        },\n        clearStreamInfo() {\n            this.streamInfo = null\n        },\n        toggleDisplayEpisodeGoLiveComponent(episode) {\n            // const videoPlayerAuxStore = useVideoAuxPlayerStore()\n            // videoPlayerAuxStore.reset()\n            this.displayEpisodeGoLiveComponent = !this.displayEpisodeGoLiveComponent\n            this.isEpisode = !!this.displayEpisodeGoLiveComponent\n            this.episode = episode\n            this.selectedShowId = this?.episode?.show_id\n\n        },\n        updateEpisode(episode) {\n            this.episode = episode\n        },\n        async fetchMistServerUri() {\n            const videoAuxPlayerStore = useVideoAuxPlayerStore();\n            let uriResponse = await axios.get('/mist-server/uri')\n            this.mistServerUri = uriResponse.data\n            videoAuxPlayerStore.setMistServerUri(this.mistServerUri)\n        },\n        async reloadPlayer() {\n            const videoAuxPlayerStore = useVideoAuxPlayerStore()\n            this.playerIsReloading = true // Start loading\n            try {\n                // First, fetch the URI\n\n                // let uriResponse = await axios.get('/mist-server/uri');\n                // this.mistServerUri = uriResponse.data; // Accessing the data prop// erty\n                // // Create an object and set the 'name' property\n                const mistStream = {\n                    name: this.streamKey,\n                }\n                // // Now, use this URI in your next request\n                // const response = await axios.post('/fetch-stream-info', {\n                //     streamName: this.streamKey,\n                //     mistServerUri: this.mistServerUri,\n                // });\n                // Now, you can pass the 'mistStream' object to the method\n                await videoAuxPlayerStore.loadMistStreamVideo(mistStream, true).then(\n                    // await this.fetchStreamInfo(),\n                )\n            } catch (error) {\n                // console.error(error);\n                // notificationStore.setGeneralServiceNotification('Failed to reload player', error)\n                notificationStore.setToastNotification('Failed to reload player.', 'error')\n            } finally {\n                this.playerIsReloading = false // Stop loading regardless of outcome\n            }\n\n        },\n        async fetchPushDestinations() {\n            const notificationStore = useNotificationStore()\n            this.isLoadingDestinations = true // Start loading\n            try {\n                const response = await axios.post('/go-live/fetch-push-destinations', {\n                    showId: this.selectedShowId,\n                    streamName: this.streamKey,\n                    backgroundFetch: false,\n                })\n                // console.log(response.data);\n                this.destinations = response.data.destinations || []\n                this.isRecording = response.data.recording || false\n                console.log('response about recording: ' + response.data.recording)\n                // Extract message and status from the response\n                const {message, status} = response.data\n                // Use the status from the response fo\n                // r the notification\n                // notificationStore.setToastNotification(message, status)\n            } catch (error) {\n                // console.error(error);\n                // notificationStore.setGeneralServiceNotification('Failed to reload player', error)\n                notificationStore.setToastNotification('Failed to fetch push destinations.', 'error')\n            } finally {\n                this.isLoadingDestinations = false // Stop loading regardless of outcome\n            }\n        },\n        async backgroundFetchPushDestinations() {\n            // Background Fetch doesn't use Toast Notifications,\n            // Keep the fetch silent in the background.\n\n            this.isLoadingDestinations = true // Start loading\n            try {\n                const response = await axios.post('/go-live/fetch-push-destinations/', {\n                    showId: this.selectedShowId,\n                    streamName: this.streamKey,\n                    backgroundFetch: true,\n                })\n                this.destinations = response.data.destinations || []\n                this.isRecording = response.data.recording || false\n            } catch (error) {\n                // console.error(error);\n                // notificationStore.setGeneralServiceNotification('Error Fetching Push Destinations', error)\n                notificationStore.setToastNotification('Failed to fetch push destinations.', 'error')\n            } finally {\n                this.isLoadingDestinations = false // Stop loading regardless of outcome\n            }\n        },\n        async deleteDestination(destinationId) {\n            // Confirm deletion with the user before proceeding\n            if (confirm(`Are you sure you want to delete the destination with ID: ${destinationId}?`)) {\n                try {\n                    // Perform the delete operation\n                    await axios.delete('/mist-stream-push-destinations/' + destinationId)\n                    // Optionally, remove the item from your local state to update the UI\n                    this.destinations = this.destinations.filter(destination => destination.id !== destinationId)\n                } catch (error) {\n                    notificationStore.setGeneralServiceNotification('Error deleting destination', error)\n                    // console.error(`Error deleting destination with ID: ${destinationId}`, error)\n                }\n            }\n        },\n        async startPush(destinationId, fullPushUri) {\n            const notificationStore = useNotificationStore()\n            this.loadingDestinationId = destinationId\n            // console.log(`Starting push for destination ${destinationId}`)\n            try {\n                const response = await axios.post('/mist-stream/start-push', {\n                    destination_id: destinationId,\n                    full_push_uri: fullPushUri,\n                    stream_name: this.streamKey,\n                })\n                // console.log('Push started successfully:', response.data)\n                // console.log('Destination ID:', destinationId)\n                // console.log('Full Push URI:', fullPushUri)\n                // console.log('Stream Name:', this.streamKey)\n                const {message, status} = response.data\n                // Use the status from the response for the notification\n                notificationStore.setToastNotification(message, status)\n                // Update the component's state to reflect the change\n                const index = this.destinations.findIndex(destination => destination.id === destinationId)\n                if (index !== -1) {\n                    this.destinations[index].push_is_started = 1\n                }\n            } catch (error) {\n                // console.error('Error starting push:', error)\n                notificationStore.setToastNotification('Failed to start push.', 'error')\n                // Handle the error appropriately in your UI\n            } finally {\n                this.loadingDestinationId = null // Stop loading regardless of outcome\n            }\n        },\n        async stopPush(destinationId) {\n            const notificationStore = useNotificationStore()\n            this.loadingDestinationId = destinationId\n            // console.log(`Stopping push for destination ${destinationId}`)\n            try {\n                const response = await axios.post('/mist-stream/stop-push', {destination_id: destinationId})\n                // console.log('Push stopped successfully:', response.data)\n                const {message, status} = response.data\n                notificationStore.setToastNotification(message, status)\n                // Update the component's state to reflect the change\n            } catch (error) {\n                // console.error('Error stopping push:', error)\n                notificationStore.setToastNotification('Failed to stop push.', 'error')\n            } finally {\n                this.loadingDestinationId = null // Stop loading regardless of outcome\n                const index = this.destinations.findIndex(destination => destination.id === destinationId)\n                if (index !== -1) {\n                    this.destinations[index].push_is_started = 0\n                }\n            }\n        },\n        async enableAutoPush(destinationId) {\n            this.loadingDestinationId = destinationId\n            const notificationStore = useNotificationStore()\n            try {\n                const response = await axios.post('/mist-stream/push-auto-add/' + destinationId)\n                // console.log('Auto push enabled successfully:', response.data)\n                const {message, status} = response.data\n                notificationStore.setToastNotification(message, status)\n                const index = this.destinations.findIndex(destination => destination.id === destinationId)\n                if (index !== -1) {\n                    this.destinations[index].has_auto_push = 1\n                }\n            } catch (error) {\n                // console.error('Error enabling auto push:', error)\n                notificationStore.setToastNotification('Failed to enable auto push.', 'error')\n            } finally {\n                this.loadingDestinationId = null // Stop loading regardless of outcome\n            }\n        },\n        async disableAutoPush(destinationId) {\n            const notificationStore = useNotificationStore()\n            this.loadingDestinationId = destinationId\n            try {\n                const response = await axios.post('/mist-stream/push-auto-remove/' + destinationId)\n                // console.log('Auto push removed successfully:', response.data)\n                const {message, status} = response.data\n                notificationStore.setToastNotification(message, status)\n                const index = this.destinations.findIndex(destination => destination.id === destinationId)\n                if (index !== -1) {\n                    this.destinations[index].has_auto_push = 0\n                }\n            } catch (error) {\n                // console.error('Error disabling auto push:', error)\n                notificationStore.setToastNotification('Failed to disable auto push.', 'error')\n            } finally {\n                this.loadingDestinationId = null // Stop loading regardless of outcome\n            }\n        },\n        async disableAllAutoPushes() {\n            const notificationStore = useNotificationStore()\n            this.isProcessingDisableAllAutoPushes = true\n            try {\n                const response = await axios.post('/mist-stream/remove-all-auto-pushes-for-stream', {'streamName': this.streamKey})\n                // console.log('Auto push disabled successfully:', response.data)\n                const {message, status} = response.data\n                notificationStore.setToastNotification(message, status)\n                await this.fetchPushDestinations()\n            } catch (error) {\n                // console.error('Error disabling auto push:', error)\n                notificationStore.setToastNotification('Failed to disable auto push.', 'error')\n            } finally {\n                this.isProcessingDisableAllAutoPushes = false // Stop loading regardless of outcome\n                await this.fetchPushDestinations()\n            }\n        },\n    },\n    getters: {\n        selectedShow: (state) => {\n            const show = state.shows.find(show => show.id === state.selectedShowId) || null\n            state.streamKey = show?.mist_stream_wildcard?.name || 'Fallback value if undefined'\n            state.wildcardId = show?.mist_stream_wildcard?.id || 'Fallback value if undefined'\n            state.isRecording = show?.mist_stream_wildcard?.is_recording || false\n            return show\n        },\n        fullRtmpUri: (state) => {\n            return state.rtmpUri ? state.rtmpUri + 'live/' : ''\n        },\n        fullUrl: (state) => {\n            // Directly construct fullRtmpUri from state\n            const fullRtmpUri = state.rtmpUri ? state.rtmpUri + 'live/' : ''\n\n            // Directly find the show based on selectedShowId to avoid using getters\n            // const show = state.shows.find(show => show.id === state.selectedShowId) || null;\n            // const streamKey = show?.mist_stream_wildcard?.name || 'Fallback value if undefined';\n\n            // Return the concatenated URL\n            return `${fullRtmpUri}${state.streamKey}`\n        },\n        // Example getter that might filter destinations based on some criteria\n        activeDestinations: (state) => {\n            return state.destinations.filter(destination => destination.push_is_started)\n        },\n        sourceName: (state) => {\n            if (state.selectedShow?.mist_stream_wildcard?.name) {\n                return state.selectedShow.mist_stream_wildcard.name\n            } else if (state.episode?.mist_stream_wildcard?.name) {\n                return state.episode.mist_stream_wildcard.name\n            }\n            return null // No source available\n        },\n        streamOffline: (state) => {\n            // Check if the 'error' key exists and if its value is 'Stream is offline'\n            // If streamInfo is null or undefined, it defaults to an empty object {}\n            return (state.streamInfo?.error ?? '') === 'Stream is offline';\n        },\n    },\n\n\n})\n","import { defineStore } from 'pinia'\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\nimport { useStreamStore } from '@/Stores/StreamStore'\nimport { useUserStore } from '@/Stores/UserStore'\nimport { useChannelStore } from '@/Stores/ChannelStore'\nimport { useShowStore } from '@/Stores/ShowStore'\nimport { useAudioStore } from '@/Stores/AudioStore'\nimport videojs from 'video.js'\nimport { usePage } from '@inertiajs/inertia-vue3'\nimport { nextTick } from 'vue'\nimport { useNotificationStore } from '@/Stores/NotificationStore'\n\nconst initialState = () => ({\n    mistServerUri: 'https://mist.nottv.io/', // tec21: 2024-02-09, if we don't start with the address here changing channels is really slow and buggy. Address for the MistServer listed in the Admin Settings saved in AppSetting\n    player: null, // Video.js player instance\n    eventListenersAttached: false, // Track if listeners are attached\n    videoPlayerLoaded: false,\n    class: '',\n    videoContainerClass: '',\n    // ottClass: 'OttClose',\n    videoSourceIdSrc1: '',\n    videoSourceIdSrc2: '',\n    videoSourceIdSrc3: '',\n    videoSourceTypeSrc1: '',\n    videoSourceTypeSrc2: '',\n    videoSourceTypeSrc3: '',\n    firstPlayVideoSourceType: '',\n    firstPlayVideoSource: '',\n    key: '',\n    videoName: '',\n    videoSource: '',\n    videoSourceType: '',\n    videoPoster: '',\n    nextSource: '',\n    previousSource: '',\n    currentView: '',\n    currentChannelId: 0,\n    currentChannelName: '',\n    currentShow: {},\n    currentShowEpisode: {},\n    currentVideo: {},\n    hasVideo: false,\n    controls: true,\n    muted: true,\n    paused: true,\n    // videoCurrentTime: '',\n    currentTime: 0, // Current playback time in seconds\n    duration: 0, // Total video duration in seconds\n    formattedTime: '00:00 / 00:00', // Formatted time string\n    blue: false, // DO NOT REMOVE\n    videoIsYoutube: false,\n    videoUploadComplete: false,\n})\n\nexport const useVideoAuxPlayerStore = defineStore('videoAuxPlayerStore', {\n    state: initialState,\n    actions: {\n        reset() {\n            // Reset the store to its original state (clear all data)\n            Object.assign(this, initialState())\n        },\n\n        async getMistServerUri() {\n            try {\n                let response = await axios.get('/mist-server/uri')\n                this.mistServerUri = response.data\n            } catch (error) {\n                console.error(error)\n            }\n        },\n\n        // Initialize or update the player instance\n        setPlayer(playerInstance) {\n            this.player = playerInstance\n            this.initializePlayer().then(() => {\n                this.attachEventListeners() // Attach event listeners after initialization\n            }).catch(error => {\n                console.error('Error during video player initialization:', error)\n            })\n        },\n\n        // Initialize the player with necessary settings and start playback\n        async initializePlayer() {\n            if (!this.player) {\n                console.error('Video.js player is not initialized.')\n                return\n            }\n\n            await nextTick() // Ensure Vue's DOM updates are processed\n\n            // Perform any necessary audio context and node setup\n            await useAudioStore().ensureAudioContextAndNodesReady(this.player)\n\n            // Apply initial player settings\n            this.player.controls(false)\n            this.player.muted(this.muted)\n\n            // Attempt to start playback\n            this.player.ready(() => {\n                this.player.play().then(() => {\n                    console.log('Playback started successfully')\n                }).catch(error => {\n                    console.error('Error trying to play the video:', error)\n                    // Handle the error (e.g., showing a user-friendly message)\n                })\n            })\n        },\n\n        // Attach event listeners to the player\n        attachEventListeners() {\n            if (!this.player || this.eventListenersAttached) {\n                console.log('Event listeners are already attached or video player is not initialized.')\n                return\n            }\n\n            this.player.on('timeupdate', this.handleTimeUpdate)\n            this.player.on('fullscreenchange', this.handleFullscreenChange)\n            this.player.on('play', this.handlePlay)\n            this.player.on('pause', this.handlePause)\n            this.player.on('error', this.handleError)\n\n            this.eventListenersAttached = true\n            console.log('Event listeners attached.')\n        },\n\n        // Detach event listeners from the player\n        detachEventListeners() {\n            if (!this.player || !this.eventListenersAttached) {\n                console.log('Event listeners are already detached or video player is not initialized.')\n                return\n            }\n\n            useAudioStore().stopAudioLevelMonitoring()\n            this.player.off('timeupdate', this.handleTimeUpdate)\n            this.player.off('fullscreenchange', this.handleFullscreenChange)\n            this.player.off('play', this.handlePlay)\n            this.player.off('pause', this.handlePause)\n            this.player.off('error', this.handleError)\n\n            this.eventListenersAttached = false\n            console.log('Event listeners detached.')\n        },\n\n        // Dispose of the player and perform cleanup\n        disposePlayer() {\n            if (!this.player) {\n                console.error('Video player is not initialized.')\n                return\n            }\n            this.detachEventListeners() // Detach event listeners if attached\n            this.player.dispose() // Dispose of the player instance\n            this.player = null // Reset the player state\n\n            // Optionally, stop audio level monitoring if linked to the player lifecycle\n            // const audioStore = useAudioStore();\n            // audioStore.stopAudioLevelMonitoring();\n\n            console.log('Video player disposed and cleaned up.')\n        },\n\n        // New method to prepare for a new video source\n        prepareForNewVideoSource(source) {\n            console.log('Preparing for new video source')\n\n            // Example: Clear any existing channel or video-specific state\n            // useChannelStore().clearChannel()\n\n            // Reset or cleanup any existing video playback, if necessary\n            // this.resetPlayback();\n\n            // Load and play the new video source\n            this.loadNewVideo(source)\n        },\n\n        resetPlayback() {\n            if (this.player) {\n                this.player.pause()\n                this.player.muted(true)\n                this.player.currentTime(0) // Optionally reset the time\n                // Further cleanup logic here, if necessary\n                this.detachEventListeners() // Detach event listeners if attached\n            }\n        },\n\n        // Event handlers\n        handleTimeUpdate() {\n            // console.log('Handling timeupdate...');\n            // Implement your logic\n            this.currentTime = this.player.currentTime()\n            this.duration = this.player.duration()\n            const progressPercentage = (this.currentTime / this.duration) * 100\n            this.formattedTime = `${this.formatDuration(this.currentTime)} / ${this.formatDuration(this.duration)}`\n\n            // Update UI elements or emit events as needed\n            // Note: Direct manipulation of the DOM or component refs from the store is not recommended\n\n        },\n        // for the handleTimeUpdate eventHandler\n        formatDuration(durationInSeconds) {\n            const hours = Math.floor(durationInSeconds / 3600)\n            const minutes = Math.floor((durationInSeconds % 3600) / 60)\n            const seconds = Math.floor(durationInSeconds % 60)\n\n            const parts = [hours, minutes, seconds].map(part => part.toString().padStart(2, '0'))\n            return parts.join(':')\n        },\n        handleFullscreenChange() {\n            console.log('Handling fullscreenchange...')\n            // Implement your logic\n            this.player?.on('fullscreenchange', () => {\n                if (this.player.isFullscreen()) {\n                    // Video is entering fullscreen mode\n                    // You can add custom behavior for entering fullscreen here if needed\n                } else {\n                    // Video is exiting fullscreen mode\n                    // Check if the video was playing before entering fullscreen\n                    if (this.player.paused() === false) {\n                        // Resume playback after exiting fullscreen\n                        this.player.play()\n                    }\n                }\n            })\n        },\n        handlePlay() {\n            console.log('Handling play...')\n            // Implement your logic\n            this.player?.on('play', () => {\n                this.paused = false\n            })\n        },\n        handlePause() {\n            console.log('Handling pause...')\n            // Implement your logic\n            this.player?.on('pause', () => {\n                this.paused = true\n            })\n        },\n        handleError() {\n            console.log('Handling error...')\n            // Implement your logic\n            this.player?.on('error', function () {\n                const error = this.player.error()\n                console.error('Video.js Error:', error.code, error.message)\n            })\n        },\n        makeBlue() {\n            // for testing. DO NOT REMOVE.\n            this.blue = true\n        },\n        // Apparently this loadFirstPlay isn't being used...\n        // loadFirstPlay() {\n        //     const {props} = usePage()\n        //     let videoJs = videojs('aux-player')\n        //     const type = props.firstPlayVideoSourceType\n        //     const src = props.firstPlayVideoSource\n        //     videoJs.ready(() => {\n        //         videoJs.src({src, type})\n        //         videoJs.play().then(() => {\n        //             console.log('Playback started successfully')\n        //         }).catch(error => {\n        //             console.error('Error trying to play the video:', error)\n        //             // Handle the error (e.g., showing a user-friendly message)\n        //         })\n        //     })\n        //     console.log(type)\n        //     console.log(src)\n        // },\n        // Toggle mute state\n        toggleMute() {\n            if (this.muted) {\n                this.unMute()\n            } else {\n                this.mute()\n            }\n        },\n        // Mute the video\n        mute() {\n            if (this.player) {\n                this.player.muted(true)\n                this.muted = true\n            }\n        },\n        // Unmute the video\n        unMute() {\n            // const audioStore = useAudioStore()\n\n            if (this.player) {\n                // Prepare audio setup for when it's unmuted\n                // audioStore.userInteractionForAudio()\n\n                // Optionally, if fadeInAudioFromMuted is a gradual process,\n                // ensure this.player.muted(false) is called within that function.\n                // audioStore.fadeInAudioFromMuted()\n\n                this.player.muted(false)\n                this.muted = false\n            }\n        },\n        togglePlay() {\n            let videoJs = videojs('aux-player')\n\n            if (this.paused) {\n                videoJs.play()\n            } else {\n                videoJs.pause()\n            }\n        },\n        load() {\n            let videoJs = videojs('aux-player')\n            videoJs.load()\n        },\n        loadNewLiveSource(source, sourceType) {\n            let videoJs = videojs('aux-player')\n            let fullSourceUrl = this.mistServerUri + '/hls/' + source + '/index.m3u8'\n            videoJs.src({'src': fullSourceUrl, 'type': sourceType});\n            videoJs.play()\n        },\n        pause() {\n            let videoJs = videojs('aux-player')\n            videoJs.controls(false)\n            videoJs.pause()\n            this.paused = true\n        },\n        play() {\n            let videoJs = videojs('aux-player')\n\n            videoJs.play()\n            videoJs.controls(false)\n            this.paused = false\n        },\n        // next not built yet\n        next() {\n            let videoJs = videojs('aux-player')\n            videoJs.controls(false)\n            videoJs.src(this.nextSource)\n        },\n        // back not built yet\n        back() {\n            let videoJs = videojs('aux-player')\n            videoJs.controls(false)\n            videoJs.src(this.previousSource)\n        },\n        fullscreen() {\n            let videoJs = videojs('aux-player')\n            videoJs.controls(false)\n            // videoJs.fullscreen(this.previousSource)\n            videoJs.requestFullscreen()\n        },\n        getVideoCurrentTime() {\n            let videoJs = videojs('aux-player')\n            videoJs.controls(false)\n            this.videoCurrentTime = videoJs.currentTime\n        },\n\n\n        // This playNewVideo was created to access the audioContext\n        // which our audio compressor uses. This is new as of 2/2/2024\n        // ~ tec21\n\n        // playNewVideo(source) {\n        //     useChannelStore().clearChannel() // Reset or clear channel store\n        //     const videoJs = videojs('aux-player')\n        //     let videoSrc, videoSourceType\n        //     // Determine the source type and construct the source URL if necessary\n        //     if (source.mediaType === 'externalVideo') {\n        //         videoSrc = source.video_url // Direct URL to the video\n        //         videoSourceType = source.type // MIME type, e.g., 'video/youtube', 'video/mp4'\n        //     } else {\n        //         // Construct file path for internal videos\n        //         videoSrc = `${source.cdn_endpoint}${source.cloud_folder}${source.folder}/${source.file_name}`\n        //         videoSourceType = source.type // MIME type, typically 'video/mp4' for file-based sources\n        //     }\n        //     this.resumeAudioContextIfNeeded()\n        //     videoJs.src({src: videoSrc, type: videoSourceType})\n        //     videoJs.muted(false)\n        // },\n\n        // getSourceDetails(source) {\n        //     let videoSrc = source.video_url; // Directly access the video URL\n        //\n        //     // Default to 'video/mp4' if type is falsy ('', null, undefined, etc.)\n        //     let videoSourceType = source.type || 'video/mp4'\n        //\n        //     // Determine the mediaType and construct the source URL if necessary\n        //     if (source.mediaType === 'externalVideo') {\n        //         videoSrc = source.video_url // Direct URL to the video\n        //     } else {\n        //         // Internal video: construct the path, ensuring the file name is encoded\n        //         let encodedFileName = encodeURIComponent(source.file_name);\n        //         console.log(encodedFileName)\n        //         videoSrc = `${source.cdn_endpoint}${source.cloud_folder}${source.folder}/${encodedFileName}`\n        //     }\n        //     // Logic to determine videoSrc and videoSourceType\n        //     console.log(`Video Source: ${videoSrc}, Type: ${videoSourceType}`);\n        //     return { videoSrc, videoSourceType } // Return as an object\n        // },\n\n\n        getSourceDetails(source) {\n            let videoSrc, videoSourceType\n\n            console.log('getSourceDetails called with source:', source);\n\n            // Default to 'video/mp4' if type is not specified or is empty\n            videoSourceType = source.type || 'video/mp4'\n            console.log(`Determined Video Source Type: ${videoSourceType}`);\n\n            if (source.mediaType === 'externalVideo') {\n                // For external videos, use the URL as provided without encoding\n                videoSrc = source.video_url\n                console.log('Using external video source:', videoSrc);\n            } else {\n                console.log('CDN Endpoint:', source.cdn_endpoint);\n                console.log('Cloud Folder:', source.cloud_folder);\n                console.log('Folder:', source.folder);\n                console.log('File Name:', source.file_name);\n                // For internal videos, construct the URL from its components\n                // Here, we assume the cdn_endpoint, cloud_folder, and folder are correctly formatted\n                // and do not require encoding. Only the file_name might need encoding.\n                const basePath = `${source.cdn_endpoint}${source.cloud_folder}${source.folder}/`\n                // const encodedFileName = encodeURIComponent(source.file_name);\n                const fileName = source.file_name\n                videoSrc = basePath + fileName\n                console.log('Constructed internal video source:', videoSrc);\n                // If your server or CDN is configured to handle spaces in URLs without %20 encoding\n                // or if the original working URLs did not use standard URL encoding,\n                // you might adjust the encoding strategy here.\n                // For example, to replace spaces with %20 but leave other characters as-is:\n                // const fileNameForUrl = source.file_name.replace(/ /g, '%20');\n                // videoSrc = basePath + fileNameForUrl;\n            }\n\n            console.log(`Final Constructed Video Source: ${videoSrc}, Type: ${videoSourceType}`);\n            return {videoSrc, videoSourceType}\n        },\n\n\n        loadNewVideo(source) {\n            try {\n                let videoJs = videojs('aux-player');\n                console.log('LOAD NEW VIDEO');\n                const audioStore = useAudioStore();\n                // Correctly destructure the returned object to get videoSrc and videoSourceType\n                const {videoSrc, videoSourceType} = this.getSourceDetails(source);\n\n                // Example: Stopping and cleaning up the current video and audio setup\n                if (videoJs) {\n                    videoJs.src({'src': videoSrc, 'type': videoSourceType});\n\n                    videoJs.ready(() => {\n                        // ensureAudioContextAndNodesReady does the following:\n                        // 1. Resumes AudioContext if suspended.\n                        // 2. (Re)connects MediaElementSource from the video element to AudioContext.\n                        audioStore.deferAudioSetup = false;\n                        audioStore.ensureAudioContextAndNodesReady(videoJs).then(() => {\n                            // Only attempt to play the video after ensuring the AudioContext is ready\n                            videoJs.play().catch(error => {\n                                useNotificationStore().setGeneralServiceNotification('Error', 'Playback initiation error: ' + error)\n                                console.error('Playback initiation error: ', error);\n                            });\n\n                            // Consider toggling mute based on the user's preference or previous state\n                            videoJs.muted(false);\n                            this.muted = false;\n                        });\n                    });\n                }\n            } catch (error) {\n                // Log the error or perform any other error handling\n                useNotificationStore().setGeneralServiceNotification('Error', 'Error loading new video: ' + error)\n                console.error('Error loading new video: ', error);\n            }\n        },\n\n        // loadNewVideo(source) {\n        //     console.log('LOAD NEW VIDEO TTTTTTTTTTTTTTTTTTTTTTTTTS');\n        //     console.log('LOAD NEW VIDEO initiated with source:', source);\n        //     const audioStore = useAudioStore();\n        //     this.unMute();\n        //     // Destructure the returned object to get videoSrc and videoSourceType\n        //     const { videoSrc, videoSourceType } = this.getSourceDetails(source);\n        //     console.log(`Video source details received: Src - ${videoSrc}, Type - ${videoSourceType}`);\n        //\n        //     // Ensure you're using the same player instance (`videoJs` in this context) for consistency\n        //     let videoJs = videojs('aux-player'); // Ensure this ID matches your video player element\n        //     console.log('Video.js player instance created or retrieved.');\n        //\n        //     // Stop and clean up the current video and audio setup if necessary\n        //     videoJs.ready(() => {\n        //         console.log('Video.js player is ready.');\n        //         videoJs.src({ 'src': videoSrc, 'type': videoSourceType });\n        //         console.log(`Video source set: ${videoSrc} of type ${videoSourceType}`);\n        //\n        //         // Ensure AudioContext and nodes are ready\n        //         audioStore.ensureAudioContextAndNodesReady(videoJs).then(() => {\n        //             console.log('Audio context and nodes are ready. Attempting to play video.');\n        //\n        //             videoJs.play().then(() => {\n        //                 console.log('Video playback started successfully.');\n        //             }).catch(error => {\n        //                 console.error('Playback initiation error:', error);\n        //             });\n        //             // Attempt to play the video after ensuring the AudioContext is ready\n        //             // videoJs.play().catch(error => {\n        //             //     console.error('Playback initiation error:', error);\n        //             // });\n        //\n        //             // Apply the unMute logic from loadMistStreamVideo to ensure audio is correctly configured\n        //             this.unMute();\n        //             console.log('Audio unmuted.');\n        //             this.paused = false;\n        //             console.log('Paused flag set to false.');\n        //         }).catch(error => {\n        //             console.error('Error ensuring audio context and nodes are ready:', error);\n        //         });\n        //     });\n        // },\n\n        playNewVideo() {\n            console.log('PLAY NEW VIDEO')\n            if (this.player) {\n                // Wait for the video to be ready before playing\n                this.player.ready(() => {\n                    this.player.play()\n                    // Assuming you want to unmute here; check if this aligns with user interaction policies\n                    this.player.muted(false)\n                    this.muted = false\n                })\n            }\n        },\n\n\n// load video from different types of sources:\n// Url\n// YouTube\n// EmbedCode\n// Mist\n// File\n        loadNewSourceFromYouTube(source) {\n            this.videoIsYoutube = true\n            useChannelStore().clearChannel()\n            let videoJs = videojs('aux-player')\n            this.videoSource = source\n            this.videoSourceType = 'video/youtube'\n            videoJs.src({'src': this.videoSource, 'type': this.videoSourceType})\n            videoJs.controls(false)\n            this.unMute()\n            this.paused = false\n        },\n        loadNewLiveSourceFromRumble(source) {\n            this.videoIsYoutube = true\n            useChannelStore().clearChannel()\n            let videoJs = videojs('aux-player')\n            this.videoSource = source\n            this.videoSourceType = 'application/x-mpegURL'\n            videoJs.src({'src': this.videoSource, 'type': this.videoSourceType})\n            videoJs.controls(false)\n            this.unMute()\n            this.paused = false\n        },\n        loadNewSourceFromUrl(source) {\n            try {\n                this.videoIsYoutube = false;\n                useChannelStore().clearChannel();\n                let videoJs = videojs('aux-player');\n\n                if (!source.video_url || !source.type) {\n                    useNotificationStore().setGeneralServiceNotification('Error', 'Invalid video source.')\n                    throw new Error(\"Invalid video source.\");\n                }\n\n                this.videoSource = source.video_url;\n                this.videoSourceType = source.type;\n                videoJs.src({'src': source.video_url, 'type': source.type});\n\n                this.unMute();\n                this.paused = false;\n            } catch (error) {\n                useNotificationStore().setGeneralServiceNotification('Error', 'Failed to load new source: ' + error)\n                console.error(\"Failed to load new source:\", error);\n                throw error; // Re-throw the error to be caught by the caller\n            }\n        },\n        loadNewSourceFromMist(source) {\n            this.videoIsYoutube = false\n            let videoJs = videojs('aux-player')\n            let filePath = 'https://mist.not.tv/hls/'\n            this.videoSource = filePath + source + '/index.m3u8'\n            this.videoSourceType = 'application/x-mpegURL'\n            videoJs.src({'src': this.videoSource, 'type': this.videoSourceType})\n            this.unMute()\n            this.paused = false\n        },\n        loadNewSourceFromFile(source) {\n            this.videoIsYoutube = false\n            useChannelStore().clearChannel()\n            let videoJs = videojs('aux-player')\n            let filePath = source.cdn_endpoint + source.cloud_folder + source.folder + '/'\n            this.videoSource = source.file_name\n            this.videoSourceType = source.type\n            videoJs.src({'src': filePath + this.videoSource, 'type': this.videoSourceType})\n            this.unMute()\n            this.paused = false\n        },\n\n        // The new load video functions (2024-02-09 tec21 and ChatGPT)\n        loadExternalSourceVideo() {\n\n        },\n        loadPlaylistVideos() {\n\n        },\n        async loadMistStreamVideo(mistStream, stayMuted) {\n            let shouldUnmute = true\n            if(stayMuted) {\n                shouldUnmute = false\n            };\n            // console.log('Loading Mist Stream Video for:', mistStream.name); // Log which Mist Stream is being loaded\n            // This mistServerUri comes from appSettings\n            if (!this.mistServerUri) {\n                console.log('Mist Server URI not set, fetching...') // Log fetching attempt\n                await this.getMistServerUri()\n            }\n            if (this.mistServerUri) {\n                // console.log('Mist Server URI:', this.mistServerUri); // Log the URI to confirm it's fetched\n                let basePath = this.mistServerUri\n                this.videoSource = basePath + 'hls/' + mistStream.name + '/index.m3u8'\n                // console.log('Video Source Set To:', this.videoSource); // Log the final video source\n\n                this.videoSourceType = 'application/vnd.apple.mpegURL'\n                // console.log('Setting player source to:', this.videoSource, 'of type:', this.videoSourceType); // Log the source setting\n                let videoJs = videojs('aux-player')\n                videoJs.src({'src': this.videoSource, 'type': this.videoSourceType})\n                if (shouldUnmute) {\n                    this.unMute()\n                }\n                this.paused = false\n            } else {\n                console.error('Mist Server URI is still not set after fetching.')\n            }\n            // let basePath = this.mistServerUri\n            // this.videoSource = basePath + 'hls/' + mistStream.name + '/index.m3u8'\n            // this.videoSourceType = \"application/vnd.apple.mpegURL\"\n            // this.player.src({'src': this.videoSource, 'type': this.videoSourceType})\n            // this.unMute()\n            // this.paused = false\n        },\n        async loadVideoFromFile(video) {\n            // console.log('Loading Mist Stream Video for:', mistStream.name); // Log which Mist Stream is being loaded\n            // This mistServerUri comes from appSettings\n            // if (!this.mistServerUri) {\n            //     console.log('Mist Server URI not set, fetching...') // Log fetching attempt\n            //     await this.getMistServerUri()\n            // }\n            // if (this.mistServerUri) {\n                // console.log('Mist Server URI:', this.mistServerUri); // Log the URI to confirm it's fetched\n                // let basePath = this.mistServerUri\n                // this.videoSource = basePath + 'hls/' + video.name + '/index.m3u8'\n                // console.log('Video Source Set To:', this.videoSource); // Log the final video source\n\n            // this.videoSourceType = 'video/mp4'\n            console.log('Video Source Type:', video.type);\n            console.log('Video URL:', video.video_url);\n            console.log('CDN Endpoint:', video.cdn_endpoint);\n            console.log('Cloud Folder:', video.cloud_folder);\n            console.log('Folder:', video.folder);\n            console.log('File Name:', video.file_name);\n\n            let videoSource = video.cdn_endpoint + video.cloud_folder + video.folder + '/' + video.file_name\n                // console.log('Setting player source to:', this.videoSource, 'of type:', this.videoSourceType); // Log the source setting\n                let videoJs = videojs('aux-player')\n                videoJs.src({'src': videoSource, 'type': video.type})\n                this.unMute()\n                this.paused = false\n            // } else {\n            //     console.error('Mist Server URI is still not set after fetching.')\n            // }\n            // let basePath = this.mistServerUri\n            // this.videoSource = basePath + 'hls/' + mistStream.name + '/index.m3u8'\n            // this.videoSourceType = \"application/vnd.apple.mpegURL\"\n            // this.player.src({'src': this.videoSource, 'type': this.videoSourceType})\n            // this.unMute()\n            // this.paused = false\n        },\n\n\n        setNowPlayingInfoVideoFile(source) {\n            this.nowPlayingType = 'Video File'\n            this.nowPlayingName = source.file_name\n            useStreamStore().currentChannel = 'On Demand'\n        },\n        setNowPlayingInfoShow(show, episode) {\n            this.clearNowPlayingInfo()\n            const showStore = useShowStore()\n\n            if (show.firstPlayVideo) {\n                showStore.setName(show.firstPlayVideo.name)\n                showStore.setEpisodeUrl(`/shows/${show.slug}/episode/${source.firstPlayVideo.slug}`)\n            } else if (episode) {\n                showStore.setName(show.name)\n                showStore.setUrl(`/shows/${show.slug}`)\n                showStore.setEpisodeName(episode.name)\n                showStore.setEpisodeUrl(`/shows/${show.slug}/episode/${episode.slug}`)\n            } else {\n                showStore.setName(show.name)\n                showStore.setUrl(`/shows/${show.slug}`)\n            }\n        },\n// change video size/position and page layout\n        makeVideoPiP() {\n            // const appSettingStore = useAppSettingStore();\n            // const userStore = useUserStore();\n            //\n            // if (userStore.isMobile) {\n            //     let videoJs = videojs('aux-player')\n            //     videoJs.controls(false)\n            //     if(this.fullPage) {\n            //         this.class = 'pipVideoClassFullPage'\n            //         this.videoContainerClass = 'pipVideoContainerFullPage'\n            //     } else {\n            //         this.class = 'pipVideoClassTopRight'\n            //         this.videoContainerClass = 'pipVideoContainerTopRight'\n            //     }\n            //     appSettingStore.togglePipChatMode()\n            // }\n        },\n        makeVideoFullPage() {\n            const appSettingStore = useAppSettingStore()\n            const userStore = useUserStore()\n\n            // this.fullPage = true; // to be deleted and replaced by appSettingStore.fullPage\n            appSettingStore.fullPage = true\n            // userStore.hidePage = true // to be deleted and replaced by appSettingStore.hidePage\n            appSettingStore.hidePage = true\n            appSettingStore.ott = 0\n\n            this.videoContainerClass = 'fullPageVideoContainer'\n            this.class = 'fullPageVideoClass'\n            this.controls = !userStore.isMobile\n        },\n        makeVideoTopRight() {\n            const appSettingStore = useAppSettingStore()\n\n            // this.fullPage = false // to be deleted and replaced by appSettingStore.fullPage\n            appSettingStore.fullPage = false\n            // userStore.hidePage = false // to be deleted and replaced by appSettingStore.hidePage\n            appSettingStore.hidePage = false\n            // this.currentPageIsStream = false // to be deleted and replaced by appSettingStore.currentPageIsStream\n            appSettingStore.currentPageIsStream = false\n\n            this.videoContainerClass = 'topRightVideoContainer'\n            this.class = 'topRightVideoClass'\n            this.controls = false\n        },\n        makeVideoWelcomePage() {\n            const appSettingStore = useAppSettingStore()\n            this.videoContainerClass = 'welcomeVideoContainer'\n            this.class = 'welcomeVideoClass'\n            appSettingStore.loggedIn = false\n            appSettingStore.fullPage = true\n            appSettingStore.hidePage = false\n        },\n        setMistServerUri(mistServerUri) {\n            this.mistServerUri = mistServerUri\n        }\n\n\n    },\n\n    getters: {},\n})\n","import { onBeforeMount, onMounted } from 'vue'\nimport { useUserStore } from \"@/Stores/UserStore\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useVideoPlayerStore } from \"@/Stores/VideoPlayerStore\"\nimport { Inertia } from '@inertiajs/inertia'\n\nexport function usePageSetup(pageName) {\n    const userStore = useUserStore()\n    const appSettingStore = useAppSettingStore()\n    const videoPlayerStore = useVideoPlayerStore()\n\n    appSettingStore.currentPage = pageName\n    appSettingStore.showFlashMessage = true\n    appSettingStore.pageIsHidden = false\n\n    if (userStore.isMobile || window.innerWidth < 1024 || appSettingStore.fullPage) {\n        appSettingStore.ott = 0;\n    } else {\n        appSettingStore.ott = 1;\n        appSettingStore.showOttButtons = true;\n    }\n\n    videoPlayerStore.makeVideoTopRight()\n\n    if (appSettingStore.pageReload) {\n        appSettingStore.pageReload = false\n        window.location.reload(true);\n    }\n    // Check if the URL contains query strings\n\n\n    // Only scroll into view if there are no query strings\n\n        // const topDiv = document.getElementById(\"topDiv\")\n        // if (topDiv) {\n        //     topDiv.scrollIntoView()\n        // }\n        Inertia.on('navigate', (event) => {\n            if (userStore.isMobile || window.innerWidth < 1024 || appSettingStore.fullPage) {\n                appSettingStore.ott = 0;\n            } else {\n                appSettingStore.ott = 1;\n            }\n            const hasQueryStrings = window.location.search !== '';\n            if (!hasQueryStrings || appSettingStore.shouldScrollToTop) {\n                requestAnimationFrame(() => {\n                    const topDiv = document.getElementById(\"topDiv\");\n                    if (topDiv) {\n                        topDiv.scrollIntoView({behavior: 'auto'});\n                    } else {\n                        window.scrollTo(0, 0);\n                    }\n                });\n            }\n            appSettingStore.shouldScrollToTop = false;\n        })\n    // Only update if we're not already on this page to avoid overwriting with the current URL\n    appSettingStore.setPrevUrl()\n    appSettingStore.showOttButtons = true\n    appSettingStore.noLayout = false\n\n    // Inertia.reload()\n\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".copied-message-fade[data-v-77b111b2]{animation:fadeOut-77b111b2 2s forwards}@keyframes fadeOut-77b111b2{0%{opacity:1}to{opacity:0}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/Pages/Training/HowToPushToFacebook.vue\"],\"names\":[],\"mappings\":\"AAkXA,sCACE,sCACF,CAEA,4BACE,GACE,SACF,CACA,GACE,SACF,CACF\",\"sourcesContent\":[\"<template>\\n\\n  <Head title=\\\"How To Push To Facebook\\\"/>\\n\\n  <div class=\\\"place-self-center flex flex-col gap-y-3\\\">\\n    <div id=\\\"topDiv\\\" class=\\\"bg-white text-black dark:bg-gray-800 dark:text-gray-50 p-5 mb-10\\\">\\n\\n      <Message v-if=\\\"appSettingStore.showFlashMessage\\\" :flash=\\\"$page.props.flash\\\"/>\\n\\n\\n      <!--      <header class=\\\"flex justify-between mb-3\\\">-->\\n      <!--        <div class=\\\"pt-4\\\">-->\\n      <!--          <h1 class=\\\"text-3xl font-semibold pb-3\\\">My Library</h1>-->\\n      <!--        </div>-->\\n\\n      <!--      </header>-->\\n      <!--      <div class=\\\"flex flex-row justify-end gap-x-4 mb-4\\\">-->\\n\\n      <!--        <input v-model=\\\"search\\\" type=\\\"search\\\" placeholder=\\\"Search...\\\" class=\\\"border px-2 rounded-lg text-black\\\"/>-->\\n      <!--      </div>-->\\n\\n      <!--      <div class=\\\"mb-4\\\">-->\\n      <!--        <div class=\\\"p-2 text-red-600\\\">This section is in development. Not currently working.</div>-->\\n      <!--        <p class=\\\"\\\">-->\\n      <!--          Your notTV Library... Shows and creators you follow will appear here. Movies and episodes on your Watch Later-->\\n      <!--          list. And live events you're interested in. Also, items from the shop you have saved will all appear here!-->\\n      <!--        </p>-->\\n      <!--      </div>-->\\n\\n      <div class=\\\"p-4\\\">\\n        <div class=\\\"flex flex-row justify-end\\\">\\n          <BackButton/>\\n        </div>\\n        <h1 class=\\\"text-2xl font-bold text-left mb-4\\\">How To Push To Facebook</h1>\\n\\n        <p class=\\\"mb-4\\\">\\n          This guide will walk you through the process of pushing your Live Stream to Facebook.\\n        </p>\\n\\n        <div class=\\\"space-y-6\\\">\\n          <!-- Step 1: Configure Zoom -->\\n          <div>\\n            <h2 class=\\\"text-xl font-semibold mb-2\\\">Step 1: Setup Facebook To Go Live</h2>\\n            <p class=\\\"mb-4\\\">\\n              From your Facebook page when you post a new message click \\\"Live Video\\\"\\n            </p>\\n            <img\\n                src=\\\"https://cdn.nottv.io/public/2024/03/images/fhfNXxmKbk78IupmVByAumDM9g2WR0qzu8IJo6zt.png\\\"\\n                alt=\\\"Click Live Video on Facebook when you are going to send a message\\\"\\n                class=\\\"cursor-pointer w-64 object-cover mt-2 border-black border-2\\\"\\n                @click=\\\"setImage('https://cdn.nottv.io/public/2024/03/images/fhfNXxmKbk78IupmVByAumDM9g2WR0qzu8IJo6zt.png','Click Live Video on Facebook when you are going to send a message')\\\"\\n            />\\n\\n          </div>\\n          <div class=\\\"pl-4 mb-4\\\">\\n            <h3 class=\\\"text-lg font-semibold mb-1\\\">1.1 Choose Go Live or Create an Event</h3>\\n            <p>\\n\\n            </p>\\n\\n            <img\\n                src=\\\"https://cdn.nottv.io/public/2024/03/images/kKO28nkBUyNUf50YzVI3yZ01cliMJgiQOkwFwMRP.png\\\"\\n                alt=\\\"Choose Go Live on Facebook\\\"\\n                class=\\\"cursor-pointer w-64 object-cover mt-2 border-black border-2\\\"\\n                @click=\\\"setImage('https://cdn.nottv.io/public/2024/03/images/kKO28nkBUyNUf50YzVI3yZ01cliMJgiQOkwFwMRP.png','Choose Go Live on Facebook')\\\"\\n            />\\n          </div>\\n\\n          <div class=\\\"pl-4 mb-4\\\">\\n            <h3 class=\\\"text-lg font-semibold mb-1\\\">1.2 Copy your Stream Key and the Server URL</h3>\\n            <p>\\n              (You'll need these later.)\\n            </p>\\n\\n            <img\\n                src=\\\"https://cdn.nottv.io/public/2024/03/images/rmbz1FpuefO5DVfk0G2C6SjThZBjG5KJuYuusgpE.png\\\"\\n                alt=\\\"Copy your Stream Key and the Server URL\\\"\\n                class=\\\"cursor-pointer w-64 object-cover mt-2 border-black border-2\\\"\\n                @click=\\\"setImage('https://cdn.nottv.io/public/2024/03/images/rmbz1FpuefO5DVfk0G2C6SjThZBjG5KJuYuusgpE.png','Copy your Stream Key and the Server URL')\\\"\\n            />\\n          </div>\\n\\n          <div class=\\\"pl-4 mb-4\\\">\\n            <h3 class=\\\"text-lg font-semibold mb-1\\\">1.3 If the Go Live button is greyed out you need to 'Complete post details':</h3>\\n            <p>\\n\\n            </p>\\n\\n            <img\\n                src=\\\"https://cdn.nottv.io/public/2024/03/images/Ht5rRz6fibD1fVrAsyx4fY2PkSzAdh73Ym5nDsUR.png\\\"\\n                alt=\\\"Check Go Live Button in Facebook if its greyed out you may need to write the post description first\\\"\\n                class=\\\"cursor-pointer w-64 object-cover mt-2 border-black border-2\\\"\\n                @click=\\\"setImage('https://cdn.nottv.io/public/2024/03/images/Ht5rRz6fibD1fVrAsyx4fY2PkSzAdh73Ym5nDsUR.png','Check Go Live Button in Facebook if its greyed out you may need to write the post description first')\\\"\\n            />\\n          </div>\\n\\n          <div class=\\\"pl-4 mb-4\\\">\\n            <p>\\n              Find the 'Edit post details' button:\\n            </p>\\n\\n            <img\\n                src=\\\"https://cdn.nottv.io/public/2024/03/images/Yr4oHtnJaA8dz9kIxuHiPzIzmxZB582Sqxsc5zst.png\\\"\\n                alt=\\\"Click edit details\\\"\\n                class=\\\"cursor-pointer w-64 object-cover mt-2 border-black border-2\\\"\\n                @click=\\\"setImage('https://cdn.nottv.io/public/2024/03/images/Yr4oHtnJaA8dz9kIxuHiPzIzmxZB582Sqxsc5zst.png','Click edit details')\\\"\\n            />\\n          </div>\\n\\n          <div class=\\\"pl-4 mb-4\\\">\\n            <p>\\n              Write a description:\\n            </p>\\n\\n            <img\\n                src=\\\"https://cdn.nottv.io/public/2024/03/images/cidGqjiH8xMMMaoK8UapFypwNa2iza90sSKSo6rd.png\\\"\\n                alt=\\\"Write a description\\\"\\n                class=\\\"cursor-pointer w-64 object-cover mt-2 border-black border-2\\\"\\n                @click=\\\"setImage('https://cdn.nottv.io/public/2024/03/images/cidGqjiH8xMMMaoK8UapFypwNa2iza90sSKSo6rd.png','Write a description')\\\"\\n            />\\n          </div>\\n\\n\\n          <div class=\\\"pl-4 mb-4\\\">\\n            <h3 class=\\\"text-lg font-semibold mb-1\\\">1.4 Connect the video source (if it's not connected):</h3>\\n            <p>\\n            See the next step to connect the video source.\\n            </p>\\n\\n            <img\\n                src=\\\"https://cdn.nottv.io/public/2024/03/images/t0dYwH1vnjYxjBOCxCt8pu4bQqMhduCktBcLmIPs.png\\\"\\n                alt=\\\"Connect a video source\\\"\\n                class=\\\"cursor-pointer w-64 object-cover mt-2 border-black border-2\\\"\\n                @click=\\\"setImage('https://cdn.nottv.io/public/2024/03/images/t0dYwH1vnjYxjBOCxCt8pu4bQqMhduCktBcLmIPs.png','Connect a video source')\\\"\\n            />\\n          </div>\\n\\n          <div>\\n            <h2 class=\\\"text-xl font-semibold mb-2\\\">Step 2: Connect the video source (push your stream to Facebook):</h2>\\n            <p class=\\\"mb-4\\\">\\n              If you start streaming to notTV before you are on your Facebook Live page and you don't see the live\\n              stream on Facebook you need to re-push the stream from your notTV Go Live page (details are below).\\n            </p>\\n          </div>\\n\\n          <div class=\\\"pl-4 mb-4\\\">\\n            <h3 class=\\\"text-lg font-semibold mb-1\\\">2.1 Add Facebook to your Push Destinations on your notTV Go Live page:</h3>\\n            <p>\\n              Click \\\"Add Push Destination\\\":\\n            </p>\\n\\n            <img\\n                src=\\\"https://cdn.nottv.io/public/2024/03/images/pVgJWhcbT9mfSwXBtKA9h4UO6PZVQiGNHRH2pONb.png\\\"\\n                alt=\\\"Add push destination on your notTV Go Live page\\\"\\n                class=\\\"cursor-pointer w-64 object-cover mt-2 border-black border-2\\\"\\n                @click=\\\"setImage('https://cdn.nottv.io/public/2024/03/images/pVgJWhcbT9mfSwXBtKA9h4UO6PZVQiGNHRH2pONb.png','Add push destination on your notTV Go Live page')\\\"\\n            />\\n\\n          </div>\\n\\n          <div class=\\\"pl-4 mb-4\\\">\\n            <p>\\n              Click \\\"Enter your Facebook Stream Key and Stream URL that you copied earlier\\\":\\n            </p>\\n\\n            <img\\n                src=\\\"https://cdn.nottv.io/public/2024/03/images/E0vobEObFwjcbnUYKKCbuqlnX66nbIrfwJci593j.png\\\"\\n                alt=\\\"Enter your Facebook Stream Key and Stream URL\\\"\\n                class=\\\"cursor-pointer w-64 object-cover mt-2 border-black border-2\\\"\\n                @click=\\\"setImage('https://cdn.nottv.io/public/2024/03/images/E0vobEObFwjcbnUYKKCbuqlnX66nbIrfwJci593j.png','Enter your Facebook Stream Key and Stream URL')\\\"\\n            />\\n\\n          </div>\\n\\n          <div class=\\\"pl-4 mb-4\\\">\\n            <h3 class=\\\"text-lg font-semibold mb-1\\\">If you don't see the live video in Facebook:</h3>\\n            <p>\\n\\n            </p>\\n\\n            <img\\n                src=\\\"https://cdn.nottv.io/public/2024/03/images/N1SpqaDIs96UEIyI5kYXmxJpkfUUVh3KLRp6lOzK.png\\\"\\n                alt=\\\"Connect streaming software to go live\\\"\\n                class=\\\"cursor-pointer w-64 object-cover mt-2 border-black border-2\\\"\\n                @click=\\\"setImage('https://cdn.nottv.io/public/2024/03/images/N1SpqaDIs96UEIyI5kYXmxJpkfUUVh3KLRp6lOzK.png','Connect streaming software to go live')\\\"\\n            />\\n\\n          </div>\\n\\n          <div class=\\\"pl-4 mb-4\\\">\\n            <p>\\n              1. Stop the push to Facebook if it's started:\\n            </p>\\n\\n            <img\\n                src=\\\"https://cdn.nottv.io/public/2024/03/images/hMZ0G6Ok84MLZ4PVbgwYwimMR3klLLBuQj1rdcq3.png\\\"\\n                alt=\\\"Stop Push\\\"\\n                class=\\\"cursor-pointer w-64 object-cover mt-2 border-black border-2\\\"\\n                @click=\\\"setImage('https://cdn.nottv.io/public/2024/03/images/hMZ0G6Ok84MLZ4PVbgwYwimMR3klLLBuQj1rdcq3.png','Stop Push')\\\"\\n            />\\n\\n          </div>\\n\\n          <div class=\\\"pl-4 mb-4\\\">\\n            <p>\\n              2. Start the push to Facebook:\\n            </p>\\n\\n            <img\\n                src=\\\"https://cdn.nottv.io/public/2024/03/images/71B6TzoPQxYjA0600uRiOya8dCcavkdlXKG3MicD.png\\\"\\n                alt=\\\"Start Push\\\"\\n                class=\\\"cursor-pointer w-64 object-cover mt-2 border-black border-2\\\"\\n                @click=\\\"setImage('https://cdn.nottv.io/public/2024/03/images/71B6TzoPQxYjA0600uRiOya8dCcavkdlXKG3MicD.png','Start Push')\\\"\\n            />\\n          </div>\\n        </div>\\n\\n        <div class=\\\"pl-4 mb-4 mt-4\\\">\\n          <h3 class=\\\"text-lg font-semibold mb-1\\\">The video should start to connect:</h3>\\n          <p>\\n\\n          </p>\\n\\n          <img\\n              src=\\\"https://cdn.nottv.io/public/2024/03/images/eRKCAQnxAr8u34It2eAqossVU3Z6sg2IwXHSchj5.png\\\"\\n              alt=\\\"Connecting live video\\\"\\n              class=\\\"cursor-pointer w-64 object-cover mt-2 border-black border-2\\\"\\n              @click=\\\"setImage('https://cdn.nottv.io/public/2024/03/images/eRKCAQnxAr8u34It2eAqossVU3Z6sg2IwXHSchj5.png','Connecting live video')\\\"\\n          />\\n\\n        </div>\\n\\n        <div class=\\\"pl-4 mb-4\\\">\\n          <p>\\n            You should see the video appear:\\n          </p>\\n\\n          <img\\n              src=\\\"https://cdn.nottv.io/public/2024/03/images/qm3BI3KyGCT0Z8P0vMsLp7SJc19xkYZmKhc6VJZa.png\\\"\\n              alt=\\\"Preview the live video\\\"\\n              class=\\\"cursor-pointer w-64 object-cover mt-2 border-black border-2\\\"\\n              @click=\\\"setImage('https://cdn.nottv.io/public/2024/03/images/qm3BI3KyGCT0Z8P0vMsLp7SJc19xkYZmKhc6VJZa.png','Preview the live video')\\\"\\n          />\\n\\n        </div>\\n\\n        <div class=\\\"pl-4 mb-4\\\">\\n          <h3 class=\\\"text-lg font-semibold mb-1\\\">Step 3: Go Live</h3>\\n          <p>\\n            Push the blue Go Live button:\\n          </p>\\n\\n          <img\\n              src=\\\"https://cdn.nottv.io/public/2024/03/images/uSRaLddoeZD1QxMP2Hq782vrQvnIu8UIRPTRnMOG.png\\\"\\n              alt=\\\"Push the Go Live button\\\"\\n              class=\\\"cursor-pointer w-64 object-cover mt-2 border-black border-2\\\"\\n              @click=\\\"setImage('https://cdn.nottv.io/public/2024/03/images/uSRaLddoeZD1QxMP2Hq782vrQvnIu8UIRPTRnMOG.png','Push the Go Live button')\\\"\\n          />\\n\\n        </div>\\n\\n      </div>\\n\\n      <ImageLightboxModal\\n          v-if=\\\"selectedImageUrl\\\"\\n          :imageUrl=\\\"selectedImageUrl\\\"\\n          :imageAlt=\\\"selectedImageAlt\\\"\\n          @closed=\\\"closeImage\\\"/>\\n\\n    </div>\\n  </div>\\n\\n</template>\\n\\n<script setup>\\nimport { usePage } from '@inertiajs/inertia-vue3'\\nimport { usePageSetup } from '@/Utilities/PageSetup'\\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\\nimport { useGoLiveStore } from '@/Stores/GoLiveStore'\\nimport Message from '@/Components/Global/Modals/Messages'\\nimport { computed, ref, watchEffect } from 'vue'\\nimport BackButton from '@/Components/Global/Buttons/BackButton'\\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome'\\nimport { useClipboard } from '@vueuse/core'\\nimport SingleImage from '@/Components/Global/Multimedia/SingleImage.vue'\\nimport ImageLightboxModal from '@/Components/Global/Images/ImageLightboxModal.vue'\\n\\nusePageSetup('training.streamToNotTV')\\n\\nconst appSettingStore = useAppSettingStore()\\nconst goLiveStore = useGoLiveStore()\\nlet selectedShow = ref(null)\\n\\nconst page = usePage()\\n\\nlet props = defineProps({\\n  can: Object,\\n})\\n\\nconst showCopiedFullUrl = ref(false)\\nconst showCopiedRtmpUri = ref(false)\\nconst showCopiedStreamKey = ref(false)\\nconst {copy} = useClipboard()\\n\\nconst fullUrl = ref('')\\nconst rtmpUri = ref('')\\nconst streamKey = ref('')\\nconst appUrl = page.props.value.appUrl\\n\\nconst setSelectedShow = async () => {\\n  await goLiveStore.fetchShows().then(\\n      selectedShow = computed(() => goLiveStore.selectedShow),\\n  )\\n}\\nsetSelectedShow()\\n\\n// Reactively update URLs when the store updates\\nwatchEffect(() => {\\n  if (goLiveStore.rtmpUri) {\\n    rtmpUri.value = goLiveStore.rtmpUri + 'live/'\\n    // Check if it's an episode or a selected show and update accordingly\\n    if (goLiveStore.isEpisode && goLiveStore.episode?.mist_stream_wildcard?.name) {\\n      streamKey.value = goLiveStore.episode.mist_stream_wildcard.name\\n    } else if (!goLiveStore.isEpisode && goLiveStore.selectedShow?.mist_stream_wildcard?.name) {\\n      streamKey.value = goLiveStore.selectedShow.mist_stream_wildcard.name\\n    }\\n    if (goLiveStore.isEpisode && goLiveStore.episode?.slug) {\\n      fullUrl.value = `${appUrl}/shows/${selectedShow.value?.slug}/episode/${goLiveStore.episode.slug}`\\n    } else if (!goLiveStore.isEpisode && selectedShow.value?.slug) {\\n      fullUrl.value = `${appUrl}/shows/${selectedShow.value?.slug}`\\n    }\\n  }\\n})\\n\\n// Function to handle the copy action and display the \\\"copied\\\" message for each type\\nconst copyFullUrl = () => {\\n  copy(fullUrl.value)\\n  showCopiedFullUrl.value = true\\n  setTimeout(() => showCopiedFullUrl.value = false, 1000)\\n}\\n\\nconst copyRtmpUri = () => {\\n  copy(rtmpUri.value)\\n  showCopiedRtmpUri.value = true\\n  setTimeout(() => showCopiedRtmpUri.value = false, 1000)\\n}\\n\\nconst copyStreamKey = () => {\\n  copy(streamKey.value)\\n  showCopiedStreamKey.value = true\\n  setTimeout(() => showCopiedStreamKey.value = false, 1000)\\n}\\n\\nconst selectedImageUrl = ref(null);\\nconst selectedImageAlt = ref(null);\\n\\nconst closeImage = () => {\\n  selectedImageUrl.value = null\\n  selectedImageAlt.value = null\\n}\\n\\nconst setImage = (imageUrl, imageAlt) => {\\n  selectedImageUrl.value = imageUrl\\n  selectedImageAlt.value = imageAlt\\n}\\n\\n\\n</script>\\n\\n<style scoped>\\n.copied-message-fade {\\n  animation: fadeOut 2s forwards;\\n}\\n\\n@keyframes fadeOut {\\n  from {\\n    opacity: 1;\\n  }\\n  to {\\n    opacity: 0;\\n  }\\n}\\n</style>\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import script from \"./BackButton.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./BackButton.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n    <button\n        @click.prevent=\"back\"\n        class=\"px-4 py-2 text-white bg-blue-600 hover:bg-blue-500 rounded-lg\"\n    >Back\n    </button>\n  </div>\n</template>\n\n<script setup>\nimport { Inertia } from \"@inertiajs/inertia\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useUserStore } from '@/Stores/UserStore'\n\nconst appSettingStore = useAppSettingStore()\nconst userStore = useUserStore()\n\nlet props = defineProps({\n  url: String\n})\n\nfunction back() {\n  if (appSettingStore.prevUrl) {\n    if (props.url) {\n      Inertia.visit(props.url)\n    } else {\n      Inertia.visit(appSettingStore.prevUrl)\n    }\n  } else {\n    if (props.url) {\n      Inertia.visit(props.url)\n    } else {\n      // Fallback if prevUrl is not available\n      let prevUrl = userStore.isCreator ? '/dashboard' : '/';\n      Inertia.visit(prevUrl);\n    }\n  }\n}\n</script>\n","import script from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"mx-4 my-4\">\n    <div class=\"alert alert-info mt-4\"\n         v-if=\"props.flash.message\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" class=\"stroke-current shrink-0 w-6 h-6\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n      </svg>\n      <span>{{ props.flash.message }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-success mt-4 mx-3\"\n         v-if=\"props.flash.success\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.success }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-warning mt-4 mx-3\"\n         v-if=\"props.flash.warning\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"/>\n      </svg>\n      <span>{{ props.flash.warning }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-error mt-4 mx-3\"\n         v-if=\"props.flash.error\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.error }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n  </div>\n\n</template>\n\n<script setup>\nimport { Inertia } from \"@inertiajs/inertia\"\nimport { computed } from \"vue\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\n\nconst appSettingStore = useAppSettingStore()\n\nappSettingStore.showFlashMessage = true\n\nlet props = defineProps({\n  flash: Object,\n\n})\n\nconst messageType = computed(() => ({\n  'text-green-700 bg-green-100 dark:bg-green-200 dark:text-green-800': props.flash.success,\n  'text-blue-700 bg-blue-100 dark:bg-blue-200 dark:text-blue-800': props.flash.message,\n  'text-orange-700 bg-orange-100 dark:bg-orange-200 dark:text-orange-800': props.flash.warning,\n  'text-red-700 bg-red-100 dark:bg-red-200 dark:text-red-800': props.flash.error,\n}))\n\nconst clearFlashMessage = async () => {\n  await Inertia.post(route('flash.clear'));\n  Inertia.reload();\n};\n</script>\n","<template>\n  <div v-if=\"isOpen\" @click=\"close\"  class=\"fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center p-4\">\n    <img :src=\"imageUrl\" @click.stop class=\"max-w-full max-h-full md:max-w-[60%] object-cover\" :alt=\"imageAlt\" />\n  </div>\n</template>\n\n<script setup>\nimport { ref, watch } from 'vue';\n\nconst props = defineProps({\n  imageUrl: String,\n  imageAlt: String,\n});\n\nconst isOpen = ref(true);\n\nconst close = () => {\n  isOpen.value = false;\n  emit('closed');\n};\n\nconst emit = defineEmits(['closed']);\n</script>\n\n<style>\n/* Additional styles if needed */\n</style>\n","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-9.use[1]!../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-9.use[2]!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./ImageLightboxModal.vue?vue&type=style&index=0&id=60711b3b&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./ImageLightboxModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ImageLightboxModal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ImageLightboxModal.vue?vue&type=style&index=0&id=60711b3b&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n\n  <Head title=\"How To Push To Facebook\"/>\n\n  <div class=\"place-self-center flex flex-col gap-y-3\">\n    <div id=\"topDiv\" class=\"bg-white text-black dark:bg-gray-800 dark:text-gray-50 p-5 mb-10\">\n\n      <Message v-if=\"appSettingStore.showFlashMessage\" :flash=\"$page.props.flash\"/>\n\n\n      <!--      <header class=\"flex justify-between mb-3\">-->\n      <!--        <div class=\"pt-4\">-->\n      <!--          <h1 class=\"text-3xl font-semibold pb-3\">My Library</h1>-->\n      <!--        </div>-->\n\n      <!--      </header>-->\n      <!--      <div class=\"flex flex-row justify-end gap-x-4 mb-4\">-->\n\n      <!--        <input v-model=\"search\" type=\"search\" placeholder=\"Search...\" class=\"border px-2 rounded-lg text-black\"/>-->\n      <!--      </div>-->\n\n      <!--      <div class=\"mb-4\">-->\n      <!--        <div class=\"p-2 text-red-600\">This section is in development. Not currently working.</div>-->\n      <!--        <p class=\"\">-->\n      <!--          Your notTV Library... Shows and creators you follow will appear here. Movies and episodes on your Watch Later-->\n      <!--          list. And live events you're interested in. Also, items from the shop you have saved will all appear here!-->\n      <!--        </p>-->\n      <!--      </div>-->\n\n      <div class=\"p-4\">\n        <div class=\"flex flex-row justify-end\">\n          <BackButton/>\n        </div>\n        <h1 class=\"text-2xl font-bold text-left mb-4\">How To Push To Facebook</h1>\n\n        <p class=\"mb-4\">\n          This guide will walk you through the process of pushing your Live Stream to Facebook.\n        </p>\n\n        <div class=\"space-y-6\">\n          <!-- Step 1: Configure Zoom -->\n          <div>\n            <h2 class=\"text-xl font-semibold mb-2\">Step 1: Setup Facebook To Go Live</h2>\n            <p class=\"mb-4\">\n              From your Facebook page when you post a new message click \"Live Video\"\n            </p>\n            <img\n                src=\"https://cdn.nottv.io/public/2024/03/images/fhfNXxmKbk78IupmVByAumDM9g2WR0qzu8IJo6zt.png\"\n                alt=\"Click Live Video on Facebook when you are going to send a message\"\n                class=\"cursor-pointer w-64 object-cover mt-2 border-black border-2\"\n                @click=\"setImage('https://cdn.nottv.io/public/2024/03/images/fhfNXxmKbk78IupmVByAumDM9g2WR0qzu8IJo6zt.png','Click Live Video on Facebook when you are going to send a message')\"\n            />\n\n          </div>\n          <div class=\"pl-4 mb-4\">\n            <h3 class=\"text-lg font-semibold mb-1\">1.1 Choose Go Live or Create an Event</h3>\n            <p>\n\n            </p>\n\n            <img\n                src=\"https://cdn.nottv.io/public/2024/03/images/kKO28nkBUyNUf50YzVI3yZ01cliMJgiQOkwFwMRP.png\"\n                alt=\"Choose Go Live on Facebook\"\n                class=\"cursor-pointer w-64 object-cover mt-2 border-black border-2\"\n                @click=\"setImage('https://cdn.nottv.io/public/2024/03/images/kKO28nkBUyNUf50YzVI3yZ01cliMJgiQOkwFwMRP.png','Choose Go Live on Facebook')\"\n            />\n          </div>\n\n          <div class=\"pl-4 mb-4\">\n            <h3 class=\"text-lg font-semibold mb-1\">1.2 Copy your Stream Key and the Server URL</h3>\n            <p>\n              (You'll need these later.)\n            </p>\n\n            <img\n                src=\"https://cdn.nottv.io/public/2024/03/images/rmbz1FpuefO5DVfk0G2C6SjThZBjG5KJuYuusgpE.png\"\n                alt=\"Copy your Stream Key and the Server URL\"\n                class=\"cursor-pointer w-64 object-cover mt-2 border-black border-2\"\n                @click=\"setImage('https://cdn.nottv.io/public/2024/03/images/rmbz1FpuefO5DVfk0G2C6SjThZBjG5KJuYuusgpE.png','Copy your Stream Key and the Server URL')\"\n            />\n          </div>\n\n          <div class=\"pl-4 mb-4\">\n            <h3 class=\"text-lg font-semibold mb-1\">1.3 If the Go Live button is greyed out you need to 'Complete post details':</h3>\n            <p>\n\n            </p>\n\n            <img\n                src=\"https://cdn.nottv.io/public/2024/03/images/Ht5rRz6fibD1fVrAsyx4fY2PkSzAdh73Ym5nDsUR.png\"\n                alt=\"Check Go Live Button in Facebook if its greyed out you may need to write the post description first\"\n                class=\"cursor-pointer w-64 object-cover mt-2 border-black border-2\"\n                @click=\"setImage('https://cdn.nottv.io/public/2024/03/images/Ht5rRz6fibD1fVrAsyx4fY2PkSzAdh73Ym5nDsUR.png','Check Go Live Button in Facebook if its greyed out you may need to write the post description first')\"\n            />\n          </div>\n\n          <div class=\"pl-4 mb-4\">\n            <p>\n              Find the 'Edit post details' button:\n            </p>\n\n            <img\n                src=\"https://cdn.nottv.io/public/2024/03/images/Yr4oHtnJaA8dz9kIxuHiPzIzmxZB582Sqxsc5zst.png\"\n                alt=\"Click edit details\"\n                class=\"cursor-pointer w-64 object-cover mt-2 border-black border-2\"\n                @click=\"setImage('https://cdn.nottv.io/public/2024/03/images/Yr4oHtnJaA8dz9kIxuHiPzIzmxZB582Sqxsc5zst.png','Click edit details')\"\n            />\n          </div>\n\n          <div class=\"pl-4 mb-4\">\n            <p>\n              Write a description:\n            </p>\n\n            <img\n                src=\"https://cdn.nottv.io/public/2024/03/images/cidGqjiH8xMMMaoK8UapFypwNa2iza90sSKSo6rd.png\"\n                alt=\"Write a description\"\n                class=\"cursor-pointer w-64 object-cover mt-2 border-black border-2\"\n                @click=\"setImage('https://cdn.nottv.io/public/2024/03/images/cidGqjiH8xMMMaoK8UapFypwNa2iza90sSKSo6rd.png','Write a description')\"\n            />\n          </div>\n\n\n          <div class=\"pl-4 mb-4\">\n            <h3 class=\"text-lg font-semibold mb-1\">1.4 Connect the video source (if it's not connected):</h3>\n            <p>\n            See the next step to connect the video source.\n            </p>\n\n            <img\n                src=\"https://cdn.nottv.io/public/2024/03/images/t0dYwH1vnjYxjBOCxCt8pu4bQqMhduCktBcLmIPs.png\"\n                alt=\"Connect a video source\"\n                class=\"cursor-pointer w-64 object-cover mt-2 border-black border-2\"\n                @click=\"setImage('https://cdn.nottv.io/public/2024/03/images/t0dYwH1vnjYxjBOCxCt8pu4bQqMhduCktBcLmIPs.png','Connect a video source')\"\n            />\n          </div>\n\n          <div>\n            <h2 class=\"text-xl font-semibold mb-2\">Step 2: Connect the video source (push your stream to Facebook):</h2>\n            <p class=\"mb-4\">\n              If you start streaming to notTV before you are on your Facebook Live page and you don't see the live\n              stream on Facebook you need to re-push the stream from your notTV Go Live page (details are below).\n            </p>\n          </div>\n\n          <div class=\"pl-4 mb-4\">\n            <h3 class=\"text-lg font-semibold mb-1\">2.1 Add Facebook to your Push Destinations on your notTV Go Live page:</h3>\n            <p>\n              Click \"Add Push Destination\":\n            </p>\n\n            <img\n                src=\"https://cdn.nottv.io/public/2024/03/images/pVgJWhcbT9mfSwXBtKA9h4UO6PZVQiGNHRH2pONb.png\"\n                alt=\"Add push destination on your notTV Go Live page\"\n                class=\"cursor-pointer w-64 object-cover mt-2 border-black border-2\"\n                @click=\"setImage('https://cdn.nottv.io/public/2024/03/images/pVgJWhcbT9mfSwXBtKA9h4UO6PZVQiGNHRH2pONb.png','Add push destination on your notTV Go Live page')\"\n            />\n\n          </div>\n\n          <div class=\"pl-4 mb-4\">\n            <p>\n              Click \"Enter your Facebook Stream Key and Stream URL that you copied earlier\":\n            </p>\n\n            <img\n                src=\"https://cdn.nottv.io/public/2024/03/images/E0vobEObFwjcbnUYKKCbuqlnX66nbIrfwJci593j.png\"\n                alt=\"Enter your Facebook Stream Key and Stream URL\"\n                class=\"cursor-pointer w-64 object-cover mt-2 border-black border-2\"\n                @click=\"setImage('https://cdn.nottv.io/public/2024/03/images/E0vobEObFwjcbnUYKKCbuqlnX66nbIrfwJci593j.png','Enter your Facebook Stream Key and Stream URL')\"\n            />\n\n          </div>\n\n          <div class=\"pl-4 mb-4\">\n            <h3 class=\"text-lg font-semibold mb-1\">If you don't see the live video in Facebook:</h3>\n            <p>\n\n            </p>\n\n            <img\n                src=\"https://cdn.nottv.io/public/2024/03/images/N1SpqaDIs96UEIyI5kYXmxJpkfUUVh3KLRp6lOzK.png\"\n                alt=\"Connect streaming software to go live\"\n                class=\"cursor-pointer w-64 object-cover mt-2 border-black border-2\"\n                @click=\"setImage('https://cdn.nottv.io/public/2024/03/images/N1SpqaDIs96UEIyI5kYXmxJpkfUUVh3KLRp6lOzK.png','Connect streaming software to go live')\"\n            />\n\n          </div>\n\n          <div class=\"pl-4 mb-4\">\n            <p>\n              1. Stop the push to Facebook if it's started:\n            </p>\n\n            <img\n                src=\"https://cdn.nottv.io/public/2024/03/images/hMZ0G6Ok84MLZ4PVbgwYwimMR3klLLBuQj1rdcq3.png\"\n                alt=\"Stop Push\"\n                class=\"cursor-pointer w-64 object-cover mt-2 border-black border-2\"\n                @click=\"setImage('https://cdn.nottv.io/public/2024/03/images/hMZ0G6Ok84MLZ4PVbgwYwimMR3klLLBuQj1rdcq3.png','Stop Push')\"\n            />\n\n          </div>\n\n          <div class=\"pl-4 mb-4\">\n            <p>\n              2. Start the push to Facebook:\n            </p>\n\n            <img\n                src=\"https://cdn.nottv.io/public/2024/03/images/71B6TzoPQxYjA0600uRiOya8dCcavkdlXKG3MicD.png\"\n                alt=\"Start Push\"\n                class=\"cursor-pointer w-64 object-cover mt-2 border-black border-2\"\n                @click=\"setImage('https://cdn.nottv.io/public/2024/03/images/71B6TzoPQxYjA0600uRiOya8dCcavkdlXKG3MicD.png','Start Push')\"\n            />\n          </div>\n        </div>\n\n        <div class=\"pl-4 mb-4 mt-4\">\n          <h3 class=\"text-lg font-semibold mb-1\">The video should start to connect:</h3>\n          <p>\n\n          </p>\n\n          <img\n              src=\"https://cdn.nottv.io/public/2024/03/images/eRKCAQnxAr8u34It2eAqossVU3Z6sg2IwXHSchj5.png\"\n              alt=\"Connecting live video\"\n              class=\"cursor-pointer w-64 object-cover mt-2 border-black border-2\"\n              @click=\"setImage('https://cdn.nottv.io/public/2024/03/images/eRKCAQnxAr8u34It2eAqossVU3Z6sg2IwXHSchj5.png','Connecting live video')\"\n          />\n\n        </div>\n\n        <div class=\"pl-4 mb-4\">\n          <p>\n            You should see the video appear:\n          </p>\n\n          <img\n              src=\"https://cdn.nottv.io/public/2024/03/images/qm3BI3KyGCT0Z8P0vMsLp7SJc19xkYZmKhc6VJZa.png\"\n              alt=\"Preview the live video\"\n              class=\"cursor-pointer w-64 object-cover mt-2 border-black border-2\"\n              @click=\"setImage('https://cdn.nottv.io/public/2024/03/images/qm3BI3KyGCT0Z8P0vMsLp7SJc19xkYZmKhc6VJZa.png','Preview the live video')\"\n          />\n\n        </div>\n\n        <div class=\"pl-4 mb-4\">\n          <h3 class=\"text-lg font-semibold mb-1\">Step 3: Go Live</h3>\n          <p>\n            Push the blue Go Live button:\n          </p>\n\n          <img\n              src=\"https://cdn.nottv.io/public/2024/03/images/uSRaLddoeZD1QxMP2Hq782vrQvnIu8UIRPTRnMOG.png\"\n              alt=\"Push the Go Live button\"\n              class=\"cursor-pointer w-64 object-cover mt-2 border-black border-2\"\n              @click=\"setImage('https://cdn.nottv.io/public/2024/03/images/uSRaLddoeZD1QxMP2Hq782vrQvnIu8UIRPTRnMOG.png','Push the Go Live button')\"\n          />\n\n        </div>\n\n      </div>\n\n      <ImageLightboxModal\n          v-if=\"selectedImageUrl\"\n          :imageUrl=\"selectedImageUrl\"\n          :imageAlt=\"selectedImageAlt\"\n          @closed=\"closeImage\"/>\n\n    </div>\n  </div>\n\n</template>\n\n<script setup>\nimport { usePage } from '@inertiajs/inertia-vue3'\nimport { usePageSetup } from '@/Utilities/PageSetup'\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\nimport { useGoLiveStore } from '@/Stores/GoLiveStore'\nimport Message from '@/Components/Global/Modals/Messages'\nimport { computed, ref, watchEffect } from 'vue'\nimport BackButton from '@/Components/Global/Buttons/BackButton'\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome'\nimport { useClipboard } from '@vueuse/core'\nimport SingleImage from '@/Components/Global/Multimedia/SingleImage.vue'\nimport ImageLightboxModal from '@/Components/Global/Images/ImageLightboxModal.vue'\n\nusePageSetup('training.streamToNotTV')\n\nconst appSettingStore = useAppSettingStore()\nconst goLiveStore = useGoLiveStore()\nlet selectedShow = ref(null)\n\nconst page = usePage()\n\nlet props = defineProps({\n  can: Object,\n})\n\nconst showCopiedFullUrl = ref(false)\nconst showCopiedRtmpUri = ref(false)\nconst showCopiedStreamKey = ref(false)\nconst {copy} = useClipboard()\n\nconst fullUrl = ref('')\nconst rtmpUri = ref('')\nconst streamKey = ref('')\nconst appUrl = page.props.value.appUrl\n\nconst setSelectedShow = async () => {\n  await goLiveStore.fetchShows().then(\n      selectedShow = computed(() => goLiveStore.selectedShow),\n  )\n}\nsetSelectedShow()\n\n// Reactively update URLs when the store updates\nwatchEffect(() => {\n  if (goLiveStore.rtmpUri) {\n    rtmpUri.value = goLiveStore.rtmpUri + 'live/'\n    // Check if it's an episode or a selected show and update accordingly\n    if (goLiveStore.isEpisode && goLiveStore.episode?.mist_stream_wildcard?.name) {\n      streamKey.value = goLiveStore.episode.mist_stream_wildcard.name\n    } else if (!goLiveStore.isEpisode && goLiveStore.selectedShow?.mist_stream_wildcard?.name) {\n      streamKey.value = goLiveStore.selectedShow.mist_stream_wildcard.name\n    }\n    if (goLiveStore.isEpisode && goLiveStore.episode?.slug) {\n      fullUrl.value = `${appUrl}/shows/${selectedShow.value?.slug}/episode/${goLiveStore.episode.slug}`\n    } else if (!goLiveStore.isEpisode && selectedShow.value?.slug) {\n      fullUrl.value = `${appUrl}/shows/${selectedShow.value?.slug}`\n    }\n  }\n})\n\n// Function to handle the copy action and display the \"copied\" message for each type\nconst copyFullUrl = () => {\n  copy(fullUrl.value)\n  showCopiedFullUrl.value = true\n  setTimeout(() => showCopiedFullUrl.value = false, 1000)\n}\n\nconst copyRtmpUri = () => {\n  copy(rtmpUri.value)\n  showCopiedRtmpUri.value = true\n  setTimeout(() => showCopiedRtmpUri.value = false, 1000)\n}\n\nconst copyStreamKey = () => {\n  copy(streamKey.value)\n  showCopiedStreamKey.value = true\n  setTimeout(() => showCopiedStreamKey.value = false, 1000)\n}\n\nconst selectedImageUrl = ref(null);\nconst selectedImageAlt = ref(null);\n\nconst closeImage = () => {\n  selectedImageUrl.value = null\n  selectedImageAlt.value = null\n}\n\nconst setImage = (imageUrl, imageAlt) => {\n  selectedImageUrl.value = imageUrl\n  selectedImageAlt.value = imageAlt\n}\n\n\n</script>\n\n<style scoped>\n.copied-message-fade {\n  animation: fadeOut 2s forwards;\n}\n\n@keyframes fadeOut {\n  from {\n    opacity: 1;\n  }\n  to {\n    opacity: 0;\n  }\n}\n</style>","import api from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-9.use[1]!../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-9.use[2]!../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./HowToPushToFacebook.vue?vue&type=style&index=0&id=77b111b2&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./HowToPushToFacebook.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./HowToPushToFacebook.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./HowToPushToFacebook.vue?vue&type=style&index=0&id=77b111b2&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-77b111b2\"]])\n\nexport default __exports__"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","initialState","displayEpisodeGoLiveComponent","isEpisode","episode","preSelectedShowId","selectedShowId","shows","streamKey","wildcardId","isLive","isRecording","streamInfo","rtmpUri","destinations","isLoadingDestinations","loadingDestinationId","processingRecordingChange","isProcessingDisableAllAutoPushes","playerIsReloading","pushDestinationFormSubmitProcessing","mistServerUri","previousStreamStatus","useGoLiveStore","defineStore","state","actions","assign","this","fetchShows","_this","_callee","response","_context","axios","get","data","t0","generateStreamKey","_this2","_callee2","_context2","post","concat","console","log","stream_key","selectedShow","mist_stream_wildcard","mist_stream_wildcard_id","updateAndGetStreamKey","_show$mist_stream_wil","_this3","show","find","id","setSelectedShowId","showId","updateSelectedShow","_this4","goLive","stopLive","startRecording","_this5","_callee3","notificationStore","showSlug","_response$data","message","status","_context3","useNotificationStore","slug","stream_name","setToastNotification","stopRecording","_this6","_callee4","_response$data2","_context4","fetchStreamInfo","_this7","_callee5","_context5","fetchMistServerUri","streamName","success","fetchRtmpUri","_this8","_callee6","_context6","fetch","ok","text","clearStreamInfo","toggleDisplayEpisodeGoLiveComponent","_this$episode","show_id","updateEpisode","_this9","_callee7","videoAuxPlayerStore","uriResponse","_context7","useVideoAuxPlayerStore","setMistServerUri","reloadPlayer","_this10","_callee8","mistStream","_context8","loadMistStreamVideo","fetchPushDestinations","_this11","_callee9","_response$data3","_context9","backgroundFetch","recording","backgroundFetchPushDestinations","_this12","_callee10","_context10","deleteDestination","destinationId","_this13","_callee11","_context11","confirm","filter","destination","setGeneralServiceNotification","startPush","fullPushUri","_this14","_callee12","_response$data4","index","_context12","destination_id","full_push_uri","findIndex","push_is_started","stopPush","_this15","_callee13","_response$data5","_context13","enableAutoPush","_this16","_callee14","_response$data6","_context14","has_auto_push","disableAutoPush","_this17","_callee15","_response$data7","_context15","disableAllAutoPushes","_this18","_callee16","_response$data8","_context16","getters","_show$mist_stream_wil2","_show$mist_stream_wil3","_show$mist_stream_wil4","is_recording","fullRtmpUri","fullUrl","activeDestinations","sourceName","_state$selectedShow","_state$episode","streamOffline","_state$streamInfo$err","_state$streamInfo","player","eventListenersAttached","videoPlayerLoaded","class","videoContainerClass","videoSourceIdSrc1","videoSourceIdSrc2","videoSourceIdSrc3","videoSourceTypeSrc1","videoSourceTypeSrc2","videoSourceTypeSrc3","firstPlayVideoSourceType","firstPlayVideoSource","videoName","videoSource","videoSourceType","videoPoster","nextSource","previousSource","currentView","currentChannelId","currentChannelName","currentShow","currentShowEpisode","currentVideo","hasVideo","controls","muted","paused","currentTime","duration","formattedTime","blue","videoIsYoutube","videoUploadComplete","getMistServerUri","setPlayer","playerInstance","initializePlayer","attachEventListeners","nextTick","useAudioStore","ensureAudioContextAndNodesReady","ready","play","on","handleTimeUpdate","handleFullscreenChange","handlePlay","handlePause","handleError","detachEventListeners","stopAudioLevelMonitoring","off","disposePlayer","dispose","prepareForNewVideoSource","source","loadNewVideo","resetPlayback","pause","formatDuration","durationInSeconds","Math","floor","map","part","toString","padStart","join","_this$player","isFullscreen","_this$player2","_this$player3","_this$player4","code","makeBlue","toggleMute","unMute","mute","togglePlay","videoJs","videojs","load","loadNewLiveSource","sourceType","fullSourceUrl","src","back","fullscreen","requestFullscreen","getVideoCurrentTime","videoCurrentTime","getSourceDetails","videoSrc","mediaType","video_url","cdn_endpoint","cloud_folder","folder","file_name","audioStore","_this$getSourceDetail","deferAudioSetup","playNewVideo","loadNewSourceFromYouTube","useChannelStore","clearChannel","loadNewLiveSourceFromRumble","loadNewSourceFromUrl","loadNewSourceFromMist","loadNewSourceFromFile","filePath","loadExternalSourceVideo","loadPlaylistVideos","stayMuted","shouldUnmute","basePath","loadVideoFromFile","video","setNowPlayingInfoVideoFile","nowPlayingType","nowPlayingName","useStreamStore","currentChannel","setNowPlayingInfoShow","clearNowPlayingInfo","showStore","useShowStore","firstPlayVideo","setName","setEpisodeUrl","setUrl","setEpisodeName","makeVideoPiP","makeVideoFullPage","appSettingStore","useAppSettingStore","userStore","useUserStore","fullPage","hidePage","ott","isMobile","makeVideoTopRight","currentPageIsStream","makeVideoWelcomePage","loggedIn","usePageSetup","pageName","videoPlayerStore","useVideoPlayerStore","currentPage","showFlashMessage","pageIsHidden","window","innerWidth","showOttButtons","pageReload","location","reload","Inertia","event","search","shouldScrollToTop","requestAnimationFrame","topDiv","document","getElementById","scrollIntoView","behavior","scrollTo","setPrevUrl","noLayout","___CSS_LOADER_EXPORT___","module","props","__props","prevUrl","url","visit","isCreator","clearFlashMessage","computed","flash","warning","_ref","route","isOpen","ref","close","emit","__emit","options","locals","goLiveStore","page","usePage","useClipboard","copy","appUrl","setSelectedShow","watchEffect","_goLiveStore$episode","_goLiveStore$selected","_goLiveStore$episode2","_selectedShow$value2","_selectedShow$value","_selectedShow$value3","selectedImageUrl","selectedImageAlt","closeImage","setImage","imageUrl","imageAlt"],"sourceRoot":""}
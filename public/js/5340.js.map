{"version":3,"file":"js/5340.js","mappings":"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","sources":["webpack:///./resources/js/Stores/GoLiveStore.js","webpack:///./resources/js/Stores/VideoAuxPlayerStore.js","webpack:///./resources/js/Utilities/PageSetup.js","webpack:///./resources/js/Components/Global/Images/ImageLightboxModal.vue?575c","webpack:///./resources/js/Pages/Training/HowToPushToFacebook.vue?0a6f","webpack:///./resources/js/Components/Global/Buttons/BackButton.vue?5e87","webpack:///./resources/js/Components/Global/Buttons/BackButton.vue","webpack:///./resources/js/Components/Global/Modals/Messages.vue?dfe9","webpack:///./resources/js/Components/Global/Modals/Messages.vue","webpack:///./resources/js/Components/Global/Images/ImageLightboxModal.vue","webpack:///./resources/js/Components/Global/Images/ImageLightboxModal.vue?51bd","webpack:///./resources/js/Components/Global/Images/ImageLightboxModal.vue?3ae9","webpack:///./resources/js/Pages/Training/HowToPushToFacebook.vue","webpack:///./resources/js/Pages/Training/HowToPushToFacebook.vue?dd0c","webpack:///./resources/js/Pages/Training/HowToPushToFacebook.vue?2050"],"sourcesContent":["import { defineStore } from 'pinia'\nimport { useNotificationStore } from '@/Stores/NotificationStore'\nimport { useVideoPlayerStore } from '@/Stores/VideoPlayerStore'\nimport { useVideoAuxPlayerStore } from '@/Stores/VideoAuxPlayerStore'\nimport videojs from 'video.js'\n\nconst initialState = () => ({\n    displayEpisodeGoLiveComponent: false,\n    isEpisode: null,\n    episode: null,\n    preSelectedShowId: null,\n    selectedShowId: null,\n    // selectedShow: null, this uses the getter... set it up in the component as a computed property\n    shows: [], // Assuming you might want to store shows here too\n    streamKey: '', // Optional: Store the generated stream key if needed\n    wildcardId: '',\n    isLive: false,\n    isRecording: false,\n    streamInfo: null,\n    rtmpUri: null,\n    destinations: [], // New state for holding destinations\n})\n\nexport const useGoLiveStore = defineStore('goLiveStore', {\n    state: initialState,\n    actions: {\n        reset() {\n            // Reset the store to its original state (clear all data)\n            Object.assign(this, initialState())\n        },\n        async fetchShows() {\n            try {\n                const response = await axios.get('/go-live/shows') // Adjust the URL as needed\n                this.shows = response.data\n            } catch (error) {\n                console.error('Failed to fetch shows:', error)\n                // Handle error appropriately\n            }\n        },\n\n\n        // temporarily commenting this out\n        async generateStreamKey() {\n            if (!this.selectedShowId) {\n                console.error('No show selected')\n                throw new Error('No show selected') // Throw an error to be caught by the caller\n            }\n\n            try {\n                const response = await axios.post(`/go-live/shows/${this.selectedShowId}/stream-key`)\n                console.log('Stream key generated:', response.data)\n                this.streamKey = response.data.stream_key // Assuming the response includes the stream key\n                console.log('this new stream key: ' + this.streamKey)\n                console.log('response data stream key: ' + response.data.stream_key)\n                // Update goLiveStore.selectedShow.mist_stream_wildcard_id with the returned stream key\n                if (this.selectedShowId && response.data.stream_key) {\n                    this.selectedShow.mist_stream_wildcard = response.data\n                    this.selectedShow.mist_stream_wildcard_id = response.data.stream_key\n                }\n                return response.data // Return the response data\n            } catch (error) {\n                console.error('Error generating stream key:', error.response ? error.response.data : error)\n                throw error // Re-throw the error to be caught by the component\n            }\n        },\n\n        // Other actions...\n        updateAndGetStreamKey() {\n            const show = this.shows.find(show => show.id === this.selectedShowId) || null\n            const streamKey = show?.mist_stream_wildcard?.name || ' < RELOAD THIS PAGE TO GET YOUR STREAM KEY > '\n\n            // Perform the state update\n            this.streamKey = streamKey\n\n            // Return the stream key for immediate use\n            return streamKey\n        },\n\n\n\n        // async generateStreamKey() {\n        //     if (!this.selectedShowId) {\n        //         console.error(\"No show selected\");\n        //         throw new Error(\"No show selected\");\n        //     }\n        //\n        //     try {\n        //         const response = await axios.post(`/go-live/shows/${this.selectedShowId}/stream-key`);\n        //         console.log(\"Stream key generated:\", response.data);\n        //\n        //         // Find the index of the selected show in the shows array\n        //         const selectedIndex = this.shows.findIndex(show => show.id === this.selectedShowId);\n        //         if (selectedIndex !== -1) {\n        //             // Update the selected show with the new stream key information\n        //             this.shows[selectedIndex].mist_stream_wildcard = response.data;\n        //             this.shows[selectedIndex].mist_stream_wildcard_id = response.data.stream_key;\n        //         }\n        //         return response.data;\n        //     } catch (error) {\n        //         console.error(\"Error generating stream key:\", error.response ? error.response.data : error);\n        //         throw error;\n        //     }\n        // },\n\n\n        // setPreSelectedShowId(id) {\n        //     this.preSelectedShowId = id;\n        //     console.log('preSelectedShowId updated to:', this.preSelectedShowId);\n        // },\n        // Action to update selectedShowId and selectedShow based on selectedShowId\n        setSelectedShowId(showId) {\n            this.selectedShowId = showId\n            this.updateSelectedShow() // Call the method to update selectedShow based on new selectedShowId\n        },\n        // Method to find and update selectedShow based on selectedShowId\n        updateSelectedShow() {\n            this.selectedShow = this.shows.find(show => show.id === this.selectedShowId) || null\n        },\n        goLive() {\n            this.isLive = true\n        },\n        stopLive() {\n            this.isLive = false\n        },\n        startRecording() {\n            this.isRecording = true\n        },\n        stopRecording() {\n            this.isRecording = false\n        },\n        async fetchStreamInfo(streamName) {\n            try {\n                // const response = await fetch(`http://mist.nottv.io:8080/json_${encodedStreamName}.js`); // Replace with your URL\n                const response = await fetch(`/fetch-stream-info/${streamName}`) // Replace with your URL\n                if (!response.ok) throw new Error('Failed to fetch')\n                this.streamInfo = await response.json() // Store the data in serverInfo\n            } catch (error) {\n                console.error('Error fetching server info:', error)\n            }\n        },\n        async fetchRtmpUri() {\n            try {\n                const response = await fetch(`/fetch-rtmp-uri`)\n                if (!response.ok) throw new Error('Failed to fetch')\n\n                // Parse the plain text body of the response\n                // Store the RTMP URI string in a Vue data property or similar\n                this.rtmpUri = await response.text()\n            } catch (error) {\n                console.error('Error fetching RTMP URI:', error)\n            }\n        },\n        clearStreamInfo() {\n            this.streamInfo = null\n        },\n        toggleDisplayEpisodeGoLiveComponent(episode) {\n            // const videoPlayerAuxStore = useVideoAuxPlayerStore()\n            // videoPlayerAuxStore.reset()\n            this.displayEpisodeGoLiveComponent = !this.displayEpisodeGoLiveComponent\n            this.isEpisode = !!this.displayEpisodeGoLiveComponent\n            this.episode = episode\n            this.selectedShowId = this?.episode?.show_id\n\n        },\n        updateEpisode(episode) {\n            this.episode = episode\n        },\n        // async reloadPlayer() {\n        //     const videoPlayerStore = useVideoPlayerStore; // Accessing another store\n        //\n        //     let source = null;\n        //     if (this.selectedShow?.mist_stream_wildcard?.name) {\n        //         source = this.selectedShow?.mist_stream_wildcard?.name;\n        //         await this.fetchStreamInfo(this.selectedShow?.mist_stream_wildcard?.name);\n        //     } else if (this.episode?.mist_stream_wildcard?.name) {\n        //         source = this.episode?.mist_stream_wildcard?.name;\n        //         await this.fetchStreamInfo(this.episode?.mist_stream_wildcard?.name);\n        //     }\n        //\n        //     let sourceUrl = videoPlayerStore.mistServerUri + 'hls/' + source + '/index.m3u8';\n        //     console.log('source url: ' + sourceUrl);\n        //     let sourceType = 'application/vnd.apple.mpegurl';\n        //\n        //     let videoJs = videojs('aux-player');\n        //     videoJs.src({'src': sourceUrl, 'type': sourceType});\n        //     // You might have other logic here as needed\n        //\n        //     console.log('reload player');\n        // },\n\n        // async reloadPlayer () {\n        //     const videoPlayerStore = useVideoPlayerStore\n        //     const videoAuxPlayerStore = useVideoAuxPlayerStore\n        //     let source = null\n        //     if (this?.selectedShow?.mist_stream_wildcard?.name) {\n        //         source = this?.selectedShow?.mist_stream_wildcard?.name\n        //         await this.fetchStreamInfo(this?.selectedShow?.mist_stream_wildcard?.name)\n        //     } else if (this?.episode?.mist_stream_wildcard?.name) {\n        //         source = this?.episode?.mist_stream_wildcard?.name\n        //         await this.fetchStreamInfo(this?.episode?.mist_stream_wildcard?.name)\n        //     }\n        //     let sourceUrl = videoPlayerStore.mistServerUri + 'hls/' + source + '/index.m3u8'\n        //     console.log('source url: ' + sourceUrl)\n        //     let sourceType = 'application/vnd.apple.mpegurl'\n        //     let videoAuxJs = videojs('aux-player')\n        //     videoAuxJs.src({'src': sourceUrl, 'type': sourceType})\n        //     // videoAuxPlayerStore.loadNewLiveSource(source, sourceType)\n        //     console.log('reload player')\n        // },\n\n\n        async reloadPlayer() {\n            const videoAuxPlayerStore = useVideoAuxPlayerStore();\n            // Create an object and set the 'name' property\n            const mistStream = {\n                name: this.sourceName\n            };\n            await videoAuxPlayerStore.getMistServerUri()\n            // Now, you can pass the 'mistStream' object to the method\n            videoAuxPlayerStore.loadMistStreamVideo(mistStream, true);\n\n            console.log('source: ' + mistStream.name)\n        },\n\n        async fetchPushDestinations() {\n            const notificationStore = useNotificationStore();\n            try {\n                const response = await axios.post('/go-live/fetch-push-destinations/'+this.selectedShowId);\n                console.log(response.data);\n                this.destinations = response.data.destinations || [];\n                this.isRecording = response.data.isRecording || false;\n                // Extract message and status from the response\n                const { message, status } = response.data;\n                // Use the status from the response for the notification\n                notificationStore.setToastNotification(message, status);\n            } catch (error) {\n                console.error(error);\n                notificationStore.setToastNotification('Failed to fetch push destinations.', 'error');\n            }\n        },\n        async deleteDestination (destinationId) {\n            // Confirm deletion with the user before proceeding\n            if (confirm(`Are you sure you want to delete the destination with ID: ${destinationId}?`)) {\n                try {\n                    // Perform the delete operation\n                    await axios.delete('/mist-stream-push-destinations/'+destinationId)\n                    // Optionally, remove the item from your local state to update the UI\n                    this.destinations = this.destinations.filter(destination => destination.id !== destinationId)\n                } catch (error) {\n                    console.error(`Error deleting destination with ID: ${destinationId}`, error)\n                }\n            }\n        },\n        async startPush(destinationId) {\n            const notificationStore = useNotificationStore();\n            // console.log(`Starting push for destination ${destinationId}`)\n            try {\n                const response = await axios.post('/mist-stream/start-push/'+destinationId)\n                console.log('Push started successfully:', response.data)\n                const { message, status } = response.data;\n                // Use the status from the response for the notification\n                notificationStore.setToastNotification(message, status);\n                // Update the component's state to reflect the change\n                const index = this.destinations.findIndex(destination => destination.id === destinationId)\n                if (index !== -1) {\n                    this.destinations[index].push_is_started = 1\n                }\n            } catch (error) {\n                console.error('Error starting push:', error)\n                notificationStore.setToastNotification('Failed to start push.', 'error');\n                // Handle the error appropriately in your UI\n            }\n        },\n        async stopPush(destinationId) {\n            const notificationStore = useNotificationStore();\n            // console.log(`Stopping push for destination ${destinationId}`)\n            try {\n                const response = await axios.post('/mist-stream/stop-push/'+destinationId)\n                console.log('Push stopped successfully:', response.data)\n                const { message, status } = response.data;\n                notificationStore.setToastNotification(message, status);\n                // Update the component's state to reflect the change\n                const index = this.destinations.findIndex(destination => destination.id === destinationId)\n                if (index !== -1) {\n                    this.destinations[index].push_is_started = 0\n                }\n            } catch (error) {\n                console.error('Error stopping push:', error)\n                notificationStore.setToastNotification('Failed to stop push.', 'error');\n            }\n        },\n        async enableAutoPush(destinationId) {\n            const notificationStore = useNotificationStore();\n            try {\n                const response = await axios.post('/mist-stream/push-auto-add/'+destinationId)\n                console.log('Auto push enabled successfully:', response.data)\n                const { message, status } = response.data;\n                notificationStore.setToastNotification(message, status);\n                const index = this.destinations.findIndex(destination => destination.id === destinationId)\n                if (index !== -1) {\n                    this.destinations[index].has_auto_push = 1\n                }\n            } catch (error) {\n                console.error('Error enabling auto push:', error)\n                notificationStore.setToastNotification('Failed to enable auto push.', 'error');\n            }\n        },\n        async disableAutoPush(destinationId) {\n            const notificationStore = useNotificationStore();\n            try {\n                const response = await axios.post('/mist-stream/push-auto-remove/'+destinationId)\n                // console.log('Auto push enabled successfully:', response.data)\n                const { message, status } = response.data;\n                notificationStore.setToastNotification(message, status);\n                const index = this.destinations.findIndex(destination => destination.id === destinationId)\n                if (index !== -1) {\n                    this.destinations[index].has_auto_push = 0\n                }\n            } catch (error) {\n                console.error('Error enabling auto push:', error)\n                notificationStore.setToastNotification('Failed to enable auto push.', 'error');\n            }\n        },\n        async disableAllAutoPushes(streamKey) {\n            const notificationStore = useNotificationStore();\n            try {\n                const response = await axios.post('/mist-stream/remove-all-auto-pushes-for-stream', {'streamKey':streamKey})\n                console.log('Auto push disabled successfully:', response.data)\n                const { message, status } = response.data;\n                notificationStore.setToastNotification(message, status);\n                await this.fetchPushDestinations()\n            } catch (error) {\n                console.error('Error disabling auto push:', error)\n                notificationStore.setToastNotification('Failed to disable auto push.', 'error');\n            }\n        },\n    },\n    getters: {\n        selectedShow: (state) => {\n            const show = state.shows.find(show => show.id === state.selectedShowId) || null\n            state.streamKey = show?.mist_stream_wildcard?.name || 'Fallback value if undefined'\n            state.wildcardId = show?.mist_stream_wildcard?.id || 'Fallback value if undefined'\n            return show\n        },\n        fullRtmpUri: (state) => {\n            return state.rtmpUri ? state.rtmpUri + 'live/' : ''\n        },\n        fullUrl: (state) => {\n            // Directly construct fullRtmpUri from state\n            const fullRtmpUri = state.rtmpUri ? state.rtmpUri + 'live/' : ''\n\n            // Directly find the show based on selectedShowId to avoid using getters\n            // const show = state.shows.find(show => show.id === state.selectedShowId) || null;\n            // const streamKey = show?.mist_stream_wildcard?.name || 'Fallback value if undefined';\n\n            // Return the concatenated URL\n            return `${fullRtmpUri}${state.streamKey}`\n        },\n        // Example getter that might filter destinations based on some criteria\n        activeDestinations: (state) => {\n            return state.destinations.filter(destination => destination.push_is_started);\n        },\n        sourceName: (state) => {\n            if (state.selectedShow?.mist_stream_wildcard?.name) {\n                return state.selectedShow.mist_stream_wildcard.name;\n            } else if (state.episode?.mist_stream_wildcard?.name) {\n                return state.episode.mist_stream_wildcard.name;\n            }\n            return null; // No source available\n        },\n    },\n\n\n})\n","import { defineStore } from 'pinia'\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\nimport { useStreamStore } from '@/Stores/StreamStore'\nimport { useUserStore } from '@/Stores/UserStore'\nimport { useChannelStore } from '@/Stores/ChannelStore'\nimport { useShowStore } from '@/Stores/ShowStore'\nimport { useAudioStore } from '@/Stores/AudioStore'\nimport videojs from 'video.js'\nimport { usePage } from '@inertiajs/inertia-vue3'\nimport { nextTick } from 'vue'\nimport { useNotificationStore } from '@/Stores/NotificationStore'\n\nconst initialState = () => ({\n    mistServerUri: 'https://mist.nottv.io/', // tec21: 2024-02-09, if we don't start with the address here changing channels is really slow and buggy. Address for the MistServer listed in the Admin Settings saved in AppSetting\n    player: null, // Video.js player instance\n    eventListenersAttached: false, // Track if listeners are attached\n    videoPlayerLoaded: false,\n    class: '',\n    videoContainerClass: '',\n    // ottClass: 'OttClose',\n    videoSourceIdSrc1: '',\n    videoSourceIdSrc2: '',\n    videoSourceIdSrc3: '',\n    videoSourceTypeSrc1: '',\n    videoSourceTypeSrc2: '',\n    videoSourceTypeSrc3: '',\n    firstPlayVideoSourceType: '',\n    firstPlayVideoSource: '',\n    key: '',\n    videoName: '',\n    videoSource: '',\n    videoSourceType: '',\n    videoPoster: '',\n    nextSource: '',\n    previousSource: '',\n    currentView: '',\n    currentChannelId: 0,\n    currentChannelName: '',\n    currentShow: {},\n    currentShowEpisode: {},\n    currentVideo: {},\n    hasVideo: false,\n    controls: true,\n    muted: true,\n    paused: true,\n    // videoCurrentTime: '',\n    currentTime: 0, // Current playback time in seconds\n    duration: 0, // Total video duration in seconds\n    formattedTime: '00:00 / 00:00', // Formatted time string\n    blue: false, // DO NOT REMOVE\n    videoIsYoutube: false,\n    videoUploadComplete: false,\n})\n\nexport const useVideoAuxPlayerStore = defineStore('videoAuxPlayerStore', {\n    state: initialState,\n    actions: {\n        reset() {\n            // Reset the store to its original state (clear all data)\n            Object.assign(this, initialState())\n        },\n\n        async getMistServerUri() {\n            try {\n                let response = await axios.get('/mist-server/uri')\n                this.mistServerUri = response.data\n            } catch (error) {\n                console.error(error)\n            }\n        },\n\n        // Initialize or update the player instance\n        setPlayer(playerInstance) {\n            this.player = playerInstance\n            this.initializePlayer().then(() => {\n                this.attachEventListeners() // Attach event listeners after initialization\n            }).catch(error => {\n                console.error('Error during video player initialization:', error)\n            })\n        },\n\n        // Initialize the player with necessary settings and start playback\n        async initializePlayer() {\n            if (!this.player) {\n                console.error('Video.js player is not initialized.')\n                return\n            }\n\n            await nextTick() // Ensure Vue's DOM updates are processed\n\n            // Perform any necessary audio context and node setup\n            await useAudioStore().ensureAudioContextAndNodesReady(this.player)\n\n            // Apply initial player settings\n            this.player.controls(false)\n            this.player.muted(this.muted)\n\n            // Attempt to start playback\n            this.player.ready(() => {\n                this.player.play().then(() => {\n                    console.log('Playback started successfully')\n                }).catch(error => {\n                    console.error('Error trying to play the video:', error)\n                    // Handle the error (e.g., showing a user-friendly message)\n                })\n            })\n        },\n\n        // Attach event listeners to the player\n        attachEventListeners() {\n            if (!this.player || this.eventListenersAttached) {\n                console.log('Event listeners are already attached or video player is not initialized.')\n                return\n            }\n\n            this.player.on('timeupdate', this.handleTimeUpdate)\n            this.player.on('fullscreenchange', this.handleFullscreenChange)\n            this.player.on('play', this.handlePlay)\n            this.player.on('pause', this.handlePause)\n            this.player.on('error', this.handleError)\n\n            this.eventListenersAttached = true\n            console.log('Event listeners attached.')\n        },\n\n        // Detach event listeners from the player\n        detachEventListeners() {\n            if (!this.player || !this.eventListenersAttached) {\n                console.log('Event listeners are already detached or video player is not initialized.')\n                return\n            }\n\n            useAudioStore().stopAudioLevelMonitoring()\n            this.player.off('timeupdate', this.handleTimeUpdate)\n            this.player.off('fullscreenchange', this.handleFullscreenChange)\n            this.player.off('play', this.handlePlay)\n            this.player.off('pause', this.handlePause)\n            this.player.off('error', this.handleError)\n\n            this.eventListenersAttached = false\n            console.log('Event listeners detached.')\n        },\n\n        // Dispose of the player and perform cleanup\n        disposePlayer() {\n            if (!this.player) {\n                console.error('Video player is not initialized.')\n                return\n            }\n            this.detachEventListeners() // Detach event listeners if attached\n            this.player.dispose() // Dispose of the player instance\n            this.player = null // Reset the player state\n\n            // Optionally, stop audio level monitoring if linked to the player lifecycle\n            // const audioStore = useAudioStore();\n            // audioStore.stopAudioLevelMonitoring();\n\n            console.log('Video player disposed and cleaned up.')\n        },\n\n        // New method to prepare for a new video source\n        prepareForNewVideoSource(source) {\n            console.log('Preparing for new video source')\n\n            // Example: Clear any existing channel or video-specific state\n            useChannelStore().clearChannel()\n\n            // Reset or cleanup any existing video playback, if necessary\n            // this.resetPlayback();\n\n            // Load and play the new video source\n            this.loadNewVideo(source)\n        },\n\n        resetPlayback() {\n            if (this.player) {\n                this.player.pause()\n                this.player.muted(true)\n                this.player.currentTime(0) // Optionally reset the time\n                // Further cleanup logic here, if necessary\n                this.detachEventListeners() // Detach event listeners if attached\n            }\n        },\n\n        // Event handlers\n        handleTimeUpdate() {\n            // console.log('Handling timeupdate...');\n            // Implement your logic\n            this.currentTime = this.player.currentTime()\n            this.duration = this.player.duration()\n            const progressPercentage = (this.currentTime / this.duration) * 100\n            this.formattedTime = `${this.formatDuration(this.currentTime)} / ${this.formatDuration(this.duration)}`\n\n            // Update UI elements or emit events as needed\n            // Note: Direct manipulation of the DOM or component refs from the store is not recommended\n\n        },\n        // for the handleTimeUpdate eventHandler\n        formatDuration(durationInSeconds) {\n            const hours = Math.floor(durationInSeconds / 3600)\n            const minutes = Math.floor((durationInSeconds % 3600) / 60)\n            const seconds = Math.floor(durationInSeconds % 60)\n\n            const parts = [hours, minutes, seconds].map(part => part.toString().padStart(2, '0'))\n            return parts.join(':')\n        },\n        handleFullscreenChange() {\n            console.log('Handling fullscreenchange...')\n            // Implement your logic\n            this.player?.on('fullscreenchange', () => {\n                if (this.player.isFullscreen()) {\n                    // Video is entering fullscreen mode\n                    // You can add custom behavior for entering fullscreen here if needed\n                } else {\n                    // Video is exiting fullscreen mode\n                    // Check if the video was playing before entering fullscreen\n                    if (this.player.paused() === false) {\n                        // Resume playback after exiting fullscreen\n                        this.player.play()\n                    }\n                }\n            })\n        },\n        handlePlay() {\n            console.log('Handling play...')\n            // Implement your logic\n            this.player?.on('play', () => {\n                this.paused = false\n            })\n        },\n        handlePause() {\n            console.log('Handling pause...')\n            // Implement your logic\n            this.player?.on('pause', () => {\n                this.paused = true\n            })\n        },\n        handleError() {\n            console.log('Handling error...')\n            // Implement your logic\n            this.player?.on('error', function () {\n                const error = this.player.error()\n                console.error('Video.js Error:', error.code, error.message)\n            })\n        },\n        makeBlue() {\n            // for testing. DO NOT REMOVE.\n            this.blue = true\n        },\n        // Apparently this loadFirstPlay isn't being used...\n        // loadFirstPlay() {\n        //     const {props} = usePage()\n        //     let videoJs = videojs('aux-player')\n        //     const type = props.firstPlayVideoSourceType\n        //     const src = props.firstPlayVideoSource\n        //     videoJs.ready(() => {\n        //         videoJs.src({src, type})\n        //         videoJs.play().then(() => {\n        //             console.log('Playback started successfully')\n        //         }).catch(error => {\n        //             console.error('Error trying to play the video:', error)\n        //             // Handle the error (e.g., showing a user-friendly message)\n        //         })\n        //     })\n        //     console.log(type)\n        //     console.log(src)\n        // },\n        // Toggle mute state\n        toggleMute() {\n            if (this.muted) {\n                this.unMute()\n            } else {\n                this.mute()\n            }\n        },\n        // Mute the video\n        mute() {\n            if (this.player) {\n                this.player.muted(true)\n                this.muted = true\n            }\n        },\n        // Unmute the video\n        unMute() {\n            // const audioStore = useAudioStore()\n\n            if (this.player) {\n                // Prepare audio setup for when it's unmuted\n                // audioStore.userInteractionForAudio()\n\n                // Optionally, if fadeInAudioFromMuted is a gradual process,\n                // ensure this.player.muted(false) is called within that function.\n                // audioStore.fadeInAudioFromMuted()\n\n                this.player.muted(false)\n                this.muted = false\n            }\n        },\n        togglePlay() {\n            let videoJs = videojs('aux-player')\n\n            if (this.paused) {\n                videoJs.play()\n            } else {\n                videoJs.pause()\n            }\n        },\n        load() {\n            let videoJs = videojs('aux-player')\n            videoJs.load()\n        },\n        loadNewLiveSource(source, sourceType) {\n            let videoJs = videojs('aux-player')\n            let fullSourceUrl = this.mistServerUri + '/hls/' + source + '/index.m3u8'\n            videoJs.src({'src': fullSourceUrl, 'type': sourceType});\n            videoJs.play()\n        },\n        pause() {\n            let videoJs = videojs('aux-player')\n            videoJs.controls(false)\n            videoJs.pause()\n            this.paused = true\n        },\n        play() {\n            let videoJs = videojs('aux-player')\n\n            videoJs.play()\n            videoJs.controls(false)\n            this.paused = false\n        },\n        // next not built yet\n        next() {\n            let videoJs = videojs('aux-player')\n            videoJs.controls(false)\n            videoJs.src(this.nextSource)\n        },\n        // back not built yet\n        back() {\n            let videoJs = videojs('aux-player')\n            videoJs.controls(false)\n            videoJs.src(this.previousSource)\n        },\n        fullscreen() {\n            let videoJs = videojs('aux-player')\n            videoJs.controls(false)\n            // videoJs.fullscreen(this.previousSource)\n            videoJs.requestFullscreen()\n        },\n        getVideoCurrentTime() {\n            let videoJs = videojs('aux-player')\n            videoJs.controls(false)\n            this.videoCurrentTime = videoJs.currentTime\n        },\n\n\n        // This playNewVideo was created to access the audioContext\n        // which our audio compressor uses. This is new as of 2/2/2024\n        // ~ tec21\n\n        // playNewVideo(source) {\n        //     useChannelStore().clearChannel() // Reset or clear channel store\n        //     const videoJs = videojs('aux-player')\n        //     let videoSrc, videoSourceType\n        //     // Determine the source type and construct the source URL if necessary\n        //     if (source.mediaType === 'externalVideo') {\n        //         videoSrc = source.video_url // Direct URL to the video\n        //         videoSourceType = source.type // MIME type, e.g., 'video/youtube', 'video/mp4'\n        //     } else {\n        //         // Construct file path for internal videos\n        //         videoSrc = `${source.cdn_endpoint}${source.cloud_folder}${source.folder}/${source.file_name}`\n        //         videoSourceType = source.type // MIME type, typically 'video/mp4' for file-based sources\n        //     }\n        //     this.resumeAudioContextIfNeeded()\n        //     videoJs.src({src: videoSrc, type: videoSourceType})\n        //     videoJs.muted(false)\n        // },\n\n        // getSourceDetails(source) {\n        //     let videoSrc = source.video_url; // Directly access the video URL\n        //\n        //     // Default to 'video/mp4' if type is falsy ('', null, undefined, etc.)\n        //     let videoSourceType = source.type || 'video/mp4'\n        //\n        //     // Determine the mediaType and construct the source URL if necessary\n        //     if (source.mediaType === 'externalVideo') {\n        //         videoSrc = source.video_url // Direct URL to the video\n        //     } else {\n        //         // Internal video: construct the path, ensuring the file name is encoded\n        //         let encodedFileName = encodeURIComponent(source.file_name);\n        //         console.log(encodedFileName)\n        //         videoSrc = `${source.cdn_endpoint}${source.cloud_folder}${source.folder}/${encodedFileName}`\n        //     }\n        //     // Logic to determine videoSrc and videoSourceType\n        //     console.log(`Video Source: ${videoSrc}, Type: ${videoSourceType}`);\n        //     return { videoSrc, videoSourceType } // Return as an object\n        // },\n\n\n        getSourceDetails(source) {\n            let videoSrc, videoSourceType\n\n            console.log('getSourceDetails called with source:', source);\n\n            // Default to 'video/mp4' if type is not specified or is empty\n            videoSourceType = source.type || 'video/mp4'\n            console.log(`Determined Video Source Type: ${videoSourceType}`);\n\n            if (source.mediaType === 'externalVideo') {\n                // For external videos, use the URL as provided without encoding\n                videoSrc = source.video_url\n                console.log('Using external video source:', videoSrc);\n            } else {\n                console.log('CDN Endpoint:', source.cdn_endpoint);\n                console.log('Cloud Folder:', source.cloud_folder);\n                console.log('Folder:', source.folder);\n                console.log('File Name:', source.file_name);\n                // For internal videos, construct the URL from its components\n                // Here, we assume the cdn_endpoint, cloud_folder, and folder are correctly formatted\n                // and do not require encoding. Only the file_name might need encoding.\n                const basePath = `${source.cdn_endpoint}${source.cloud_folder}${source.folder}/`\n                // const encodedFileName = encodeURIComponent(source.file_name);\n                const fileName = source.file_name\n                videoSrc = basePath + fileName\n                console.log('Constructed internal video source:', videoSrc);\n                // If your server or CDN is configured to handle spaces in URLs without %20 encoding\n                // or if the original working URLs did not use standard URL encoding,\n                // you might adjust the encoding strategy here.\n                // For example, to replace spaces with %20 but leave other characters as-is:\n                // const fileNameForUrl = source.file_name.replace(/ /g, '%20');\n                // videoSrc = basePath + fileNameForUrl;\n            }\n\n            console.log(`Final Constructed Video Source: ${videoSrc}, Type: ${videoSourceType}`);\n            return {videoSrc, videoSourceType}\n        },\n\n\n        loadNewVideo(source) {\n            try {\n                let videoJs = videojs('aux-player');\n                console.log('LOAD NEW VIDEO');\n                const audioStore = useAudioStore();\n                // Correctly destructure the returned object to get videoSrc and videoSourceType\n                const {videoSrc, videoSourceType} = this.getSourceDetails(source);\n\n                // Example: Stopping and cleaning up the current video and audio setup\n                if (videoJs) {\n                    videoJs.src({'src': videoSrc, 'type': videoSourceType});\n\n                    videoJs.ready(() => {\n                        // ensureAudioContextAndNodesReady does the following:\n                        // 1. Resumes AudioContext if suspended.\n                        // 2. (Re)connects MediaElementSource from the video element to AudioContext.\n                        audioStore.deferAudioSetup = false;\n                        audioStore.ensureAudioContextAndNodesReady(videoJs).then(() => {\n                            // Only attempt to play the video after ensuring the AudioContext is ready\n                            videoJs.play().catch(error => {\n                                useNotificationStore().setGeneralServiceNotification('Error', 'Playback initiation error: ' + error)\n                                console.error('Playback initiation error: ', error);\n                            });\n\n                            // Consider toggling mute based on the user's preference or previous state\n                            videoJs.muted(false);\n                            this.muted = false;\n                        });\n                    });\n                }\n            } catch (error) {\n                // Log the error or perform any other error handling\n                useNotificationStore().setGeneralServiceNotification('Error', 'Error loading new video: ' + error)\n                console.error('Error loading new video: ', error);\n            }\n        },\n\n        // loadNewVideo(source) {\n        //     console.log('LOAD NEW VIDEO TTTTTTTTTTTTTTTTTTTTTTTTTS');\n        //     console.log('LOAD NEW VIDEO initiated with source:', source);\n        //     const audioStore = useAudioStore();\n        //     this.unMute();\n        //     // Destructure the returned object to get videoSrc and videoSourceType\n        //     const { videoSrc, videoSourceType } = this.getSourceDetails(source);\n        //     console.log(`Video source details received: Src - ${videoSrc}, Type - ${videoSourceType}`);\n        //\n        //     // Ensure you're using the same player instance (`videoJs` in this context) for consistency\n        //     let videoJs = videojs('aux-player'); // Ensure this ID matches your video player element\n        //     console.log('Video.js player instance created or retrieved.');\n        //\n        //     // Stop and clean up the current video and audio setup if necessary\n        //     videoJs.ready(() => {\n        //         console.log('Video.js player is ready.');\n        //         videoJs.src({ 'src': videoSrc, 'type': videoSourceType });\n        //         console.log(`Video source set: ${videoSrc} of type ${videoSourceType}`);\n        //\n        //         // Ensure AudioContext and nodes are ready\n        //         audioStore.ensureAudioContextAndNodesReady(videoJs).then(() => {\n        //             console.log('Audio context and nodes are ready. Attempting to play video.');\n        //\n        //             videoJs.play().then(() => {\n        //                 console.log('Video playback started successfully.');\n        //             }).catch(error => {\n        //                 console.error('Playback initiation error:', error);\n        //             });\n        //             // Attempt to play the video after ensuring the AudioContext is ready\n        //             // videoJs.play().catch(error => {\n        //             //     console.error('Playback initiation error:', error);\n        //             // });\n        //\n        //             // Apply the unMute logic from loadMistStreamVideo to ensure audio is correctly configured\n        //             this.unMute();\n        //             console.log('Audio unmuted.');\n        //             this.paused = false;\n        //             console.log('Paused flag set to false.');\n        //         }).catch(error => {\n        //             console.error('Error ensuring audio context and nodes are ready:', error);\n        //         });\n        //     });\n        // },\n\n        playNewVideo() {\n            console.log('PLAY NEW VIDEO')\n            if (this.player) {\n                // Wait for the video to be ready before playing\n                this.player.ready(() => {\n                    this.player.play()\n                    // Assuming you want to unmute here; check if this aligns with user interaction policies\n                    this.player.muted(false)\n                    this.muted = false\n                })\n            }\n        },\n\n\n// load video from different types of sources:\n// Url\n// YouTube\n// EmbedCode\n// Mist\n// File\n        loadNewSourceFromYouTube(source) {\n            this.videoIsYoutube = true\n            useChannelStore().clearChannel()\n            let videoJs = videojs('aux-player')\n            this.videoSource = source\n            this.videoSourceType = 'video/youtube'\n            videoJs.src({'src': this.videoSource, 'type': this.videoSourceType})\n            videoJs.controls(false)\n            this.unMute()\n            this.paused = false\n        },\n        loadNewLiveSourceFromRumble(source) {\n            this.videoIsYoutube = true\n            useChannelStore().clearChannel()\n            let videoJs = videojs('aux-player')\n            this.videoSource = source\n            this.videoSourceType = 'application/x-mpegURL'\n            videoJs.src({'src': this.videoSource, 'type': this.videoSourceType})\n            videoJs.controls(false)\n            this.unMute()\n            this.paused = false\n        },\n        loadNewSourceFromUrl(source) {\n            try {\n                this.videoIsYoutube = false;\n                useChannelStore().clearChannel();\n                let videoJs = videojs('aux-player');\n\n                if (!source.video_url || !source.type) {\n                    useNotificationStore().setGeneralServiceNotification('Error', 'Invalid video source.')\n                    throw new Error(\"Invalid video source.\");\n                }\n\n                this.videoSource = source.video_url;\n                this.videoSourceType = source.type;\n                videoJs.src({'src': source.video_url, 'type': source.type});\n\n                this.unMute();\n                this.paused = false;\n            } catch (error) {\n                useNotificationStore().setGeneralServiceNotification('Error', 'Failed to load new source: ' + error)\n                console.error(\"Failed to load new source:\", error);\n                throw error; // Re-throw the error to be caught by the caller\n            }\n        },\n        loadNewSourceFromMist(source) {\n            this.videoIsYoutube = false\n            let videoJs = videojs('aux-player')\n            let filePath = 'https://mist.not.tv/hls/'\n            this.videoSource = filePath + source + '/index.m3u8'\n            this.videoSourceType = 'application/x-mpegURL'\n            videoJs.src({'src': this.videoSource, 'type': this.videoSourceType})\n            this.unMute()\n            this.paused = false\n        },\n        loadNewSourceFromFile(source) {\n            this.videoIsYoutube = false\n            useChannelStore().clearChannel()\n            let videoJs = videojs('aux-player')\n            let filePath = source.cdn_endpoint + source.cloud_folder + source.folder + '/'\n            this.videoSource = source.file_name\n            this.videoSourceType = source.type\n            videoJs.src({'src': filePath + this.videoSource, 'type': this.videoSourceType})\n            this.unMute()\n            this.paused = false\n        },\n\n        // The new load video functions (2024-02-09 tec21 and ChatGPT)\n        loadExternalSourceVideo() {\n\n        },\n        loadPlaylistVideos() {\n\n        },\n        async loadMistStreamVideo(mistStream, stayMuted) {\n            let shouldUnmute = true\n            if(stayMuted) {\n                shouldUnmute = false\n            };\n            // console.log('Loading Mist Stream Video for:', mistStream.name); // Log which Mist Stream is being loaded\n            // This mistServerUri comes from appSettings\n            if (!this.mistServerUri) {\n                console.log('Mist Server URI not set, fetching...') // Log fetching attempt\n                await this.getMistServerUri()\n            }\n            if (this.mistServerUri) {\n                // console.log('Mist Server URI:', this.mistServerUri); // Log the URI to confirm it's fetched\n                let basePath = this.mistServerUri\n                this.videoSource = basePath + 'hls/' + mistStream.name + '/index.m3u8'\n                // console.log('Video Source Set To:', this.videoSource); // Log the final video source\n\n                this.videoSourceType = 'application/vnd.apple.mpegURL'\n                // console.log('Setting player source to:', this.videoSource, 'of type:', this.videoSourceType); // Log the source setting\n                let videoJs = videojs('aux-player')\n                videoJs.src({'src': this.videoSource, 'type': this.videoSourceType})\n                if (shouldUnmute) {\n                    this.unMute()\n                }\n                this.paused = false\n            } else {\n                console.error('Mist Server URI is still not set after fetching.')\n            }\n            // let basePath = this.mistServerUri\n            // this.videoSource = basePath + 'hls/' + mistStream.name + '/index.m3u8'\n            // this.videoSourceType = \"application/vnd.apple.mpegURL\"\n            // this.player.src({'src': this.videoSource, 'type': this.videoSourceType})\n            // this.unMute()\n            // this.paused = false\n        },\n        async loadVideoFromFile(video) {\n            // console.log('Loading Mist Stream Video for:', mistStream.name); // Log which Mist Stream is being loaded\n            // This mistServerUri comes from appSettings\n            // if (!this.mistServerUri) {\n            //     console.log('Mist Server URI not set, fetching...') // Log fetching attempt\n            //     await this.getMistServerUri()\n            // }\n            // if (this.mistServerUri) {\n                // console.log('Mist Server URI:', this.mistServerUri); // Log the URI to confirm it's fetched\n                // let basePath = this.mistServerUri\n                // this.videoSource = basePath + 'hls/' + video.name + '/index.m3u8'\n                // console.log('Video Source Set To:', this.videoSource); // Log the final video source\n\n            // this.videoSourceType = 'video/mp4'\n            console.log('Video Source Type:', video.type);\n            console.log('Video URL:', video.video_url);\n            console.log('CDN Endpoint:', video.cdn_endpoint);\n            console.log('Cloud Folder:', video.cloud_folder);\n            console.log('Folder:', video.folder);\n            console.log('File Name:', video.file_name);\n\n            let videoSource = video.cdn_endpoint + video.cloud_folder + video.folder + '/' + video.file_name\n                // console.log('Setting player source to:', this.videoSource, 'of type:', this.videoSourceType); // Log the source setting\n                let videoJs = videojs('aux-player')\n                videoJs.src({'src': videoSource, 'type': video.type})\n                this.unMute()\n                this.paused = false\n            // } else {\n            //     console.error('Mist Server URI is still not set after fetching.')\n            // }\n            // let basePath = this.mistServerUri\n            // this.videoSource = basePath + 'hls/' + mistStream.name + '/index.m3u8'\n            // this.videoSourceType = \"application/vnd.apple.mpegURL\"\n            // this.player.src({'src': this.videoSource, 'type': this.videoSourceType})\n            // this.unMute()\n            // this.paused = false\n        },\n\n\n        setNowPlayingInfoVideoFile(source) {\n            this.nowPlayingType = 'Video File'\n            this.nowPlayingName = source.file_name\n            useStreamStore().currentChannel = 'On Demand'\n        },\n        setNowPlayingInfoShow(show, episode) {\n            this.clearNowPlayingInfo()\n            const showStore = useShowStore()\n\n            if (show.firstPlayVideo) {\n                showStore.setName(show.firstPlayVideo.name)\n                showStore.setEpisodeUrl(`/shows/${show.slug}/episode/${source.firstPlayVideo.slug}`)\n            } else if (episode) {\n                showStore.setName(show.name)\n                showStore.setUrl(`/shows/${show.slug}`)\n                showStore.setEpisodeName(episode.name)\n                showStore.setEpisodeUrl(`/shows/${show.slug}/episode/${episode.slug}`)\n            } else {\n                showStore.setName(show.name)\n                showStore.setUrl(`/shows/${show.slug}`)\n            }\n        },\n// change video size/position and page layout\n        makeVideoPiP() {\n            // const appSettingStore = useAppSettingStore();\n            // const userStore = useUserStore();\n            //\n            // if (userStore.isMobile) {\n            //     let videoJs = videojs('aux-player')\n            //     videoJs.controls(false)\n            //     if(this.fullPage) {\n            //         this.class = 'pipVideoClassFullPage'\n            //         this.videoContainerClass = 'pipVideoContainerFullPage'\n            //     } else {\n            //         this.class = 'pipVideoClassTopRight'\n            //         this.videoContainerClass = 'pipVideoContainerTopRight'\n            //     }\n            //     appSettingStore.togglePipChatMode()\n            // }\n        },\n        makeVideoFullPage() {\n            const appSettingStore = useAppSettingStore()\n            const userStore = useUserStore()\n\n            // this.fullPage = true; // to be deleted and replaced by appSettingStore.fullPage\n            appSettingStore.fullPage = true\n            // userStore.hidePage = true // to be deleted and replaced by appSettingStore.hidePage\n            appSettingStore.hidePage = true\n            appSettingStore.ott = 0\n\n            this.videoContainerClass = 'fullPageVideoContainer'\n            this.class = 'fullPageVideoClass'\n            this.controls = !userStore.isMobile\n        },\n        makeVideoTopRight() {\n            const appSettingStore = useAppSettingStore()\n\n            // this.fullPage = false // to be deleted and replaced by appSettingStore.fullPage\n            appSettingStore.fullPage = false\n            // userStore.hidePage = false // to be deleted and replaced by appSettingStore.hidePage\n            appSettingStore.hidePage = false\n            // this.currentPageIsStream = false // to be deleted and replaced by appSettingStore.currentPageIsStream\n            appSettingStore.currentPageIsStream = false\n\n            this.videoContainerClass = 'topRightVideoContainer'\n            this.class = 'topRightVideoClass'\n            this.controls = false\n        },\n        makeVideoWelcomePage() {\n            const appSettingStore = useAppSettingStore()\n            this.videoContainerClass = 'welcomeVideoContainer'\n            this.class = 'welcomeVideoClass'\n            appSettingStore.loggedIn = false\n            appSettingStore.fullPage = true\n            appSettingStore.hidePage = false\n        },\n\n\n    },\n\n    getters: {},\n})\n","import { onBeforeMount, onMounted } from 'vue'\nimport { useUserStore } from \"@/Stores/UserStore\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useVideoPlayerStore } from \"@/Stores/VideoPlayerStore\"\nimport { Inertia } from '@inertiajs/inertia'\n\nexport function usePageSetup(pageName) {\n    const userStore = useUserStore()\n    const appSettingStore = useAppSettingStore()\n    const videoPlayerStore = useVideoPlayerStore()\n\n    appSettingStore.currentPage = pageName\n    appSettingStore.showFlashMessage = true\n    appSettingStore.pageIsHidden = false\n\n    if (userStore.isMobile) {\n        appSettingStore.ott = 0\n    }\n\n    videoPlayerStore.makeVideoTopRight()\n\n    if (appSettingStore.pageReload) {\n        appSettingStore.pageReload = false\n        window.location.reload(true);\n    }\n    // Check if the URL contains query strings\n\n\n    // Only scroll into view if there are no query strings\n\n        // const topDiv = document.getElementById(\"topDiv\")\n        // if (topDiv) {\n        //     topDiv.scrollIntoView()\n        // }\n        Inertia.on('navigate', (event) => {\n            const hasQueryStrings = window.location.search !== '';\n            if (!hasQueryStrings || appSettingStore.shouldScrollToTop) {\n                requestAnimationFrame(() => {\n                    const topDiv = document.getElementById(\"topDiv\");\n                    if (topDiv) {\n                        topDiv.scrollIntoView({behavior: 'auto'});\n                    } else {\n                        window.scrollTo(0, 0);\n                    }\n                });\n            }\n            appSettingStore.shouldScrollToTop = false;\n        })\n    // Only update if we're not already on this page to avoid overwriting with the current URL\n    appSettingStore.setPrevUrl()\n    appSettingStore.showOttButtons = true\n    appSettingStore.noLayout = false\n\n    // Inertia.reload()\n\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".copied-message-fade[data-v-77b111b2]{animation:fadeOut-77b111b2 2s forwards}@keyframes fadeOut-77b111b2{0%{opacity:1}to{opacity:0}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/Pages/Training/HowToPushToFacebook.vue\"],\"names\":[],\"mappings\":\"AAkXA,sCACE,sCACF,CAEA,4BACE,GACE,SACF,CACA,GACE,SACF,CACF\",\"sourcesContent\":[\"<template>\\n\\n  <Head title=\\\"How To Push To Facebook\\\"/>\\n\\n  <div class=\\\"place-self-center flex flex-col gap-y-3\\\">\\n    <div id=\\\"topDiv\\\" class=\\\"bg-white text-black dark:bg-gray-800 dark:text-gray-50 p-5 mb-10\\\">\\n\\n      <Message v-if=\\\"appSettingStore.showFlashMessage\\\" :flash=\\\"$page.props.flash\\\"/>\\n\\n\\n      <!--      <header class=\\\"flex justify-between mb-3\\\">-->\\n      <!--        <div class=\\\"pt-4\\\">-->\\n      <!--          <h1 class=\\\"text-3xl font-semibold pb-3\\\">My Library</h1>-->\\n      <!--        </div>-->\\n\\n      <!--      </header>-->\\n      <!--      <div class=\\\"flex flex-row justify-end gap-x-4 mb-4\\\">-->\\n\\n      <!--        <input v-model=\\\"search\\\" type=\\\"search\\\" placeholder=\\\"Search...\\\" class=\\\"border px-2 rounded-lg text-black\\\"/>-->\\n      <!--      </div>-->\\n\\n      <!--      <div class=\\\"mb-4\\\">-->\\n      <!--        <div class=\\\"p-2 text-red-600\\\">This section is in development. Not currently working.</div>-->\\n      <!--        <p class=\\\"\\\">-->\\n      <!--          Your notTV Library... Shows and creators you follow will appear here. Movies and episodes on your Watch Later-->\\n      <!--          list. And live events you're interested in. Also, items from the shop you have saved will all appear here!-->\\n      <!--        </p>-->\\n      <!--      </div>-->\\n\\n      <div class=\\\"p-4\\\">\\n        <div class=\\\"flex flex-row justify-end\\\">\\n          <BackButton/>\\n        </div>\\n        <h1 class=\\\"text-2xl font-bold text-left mb-4\\\">How To Push To Facebook</h1>\\n\\n        <p class=\\\"mb-4\\\">\\n          This guide will walk you through the process of pushing your Live Stream to Facebook.\\n        </p>\\n\\n        <div class=\\\"space-y-6\\\">\\n          <!-- Step 1: Configure Zoom -->\\n          <div>\\n            <h2 class=\\\"text-xl font-semibold mb-2\\\">Step 1: Setup Facebook To Go Live</h2>\\n            <p class=\\\"mb-4\\\">\\n              From your Facebook page when you post a new message click \\\"Live Video\\\"\\n            </p>\\n            <img\\n                src=\\\"https://cdn.nottv.io/public/2024/03/images/fhfNXxmKbk78IupmVByAumDM9g2WR0qzu8IJo6zt.png\\\"\\n                alt=\\\"Click Live Video on Facebook when you are going to send a message\\\"\\n                class=\\\"cursor-pointer w-64 object-cover mt-2 border-black border-2\\\"\\n                @click=\\\"setImage('https://cdn.nottv.io/public/2024/03/images/fhfNXxmKbk78IupmVByAumDM9g2WR0qzu8IJo6zt.png','Click Live Video on Facebook when you are going to send a message')\\\"\\n            />\\n\\n          </div>\\n          <div class=\\\"pl-4 mb-4\\\">\\n            <h3 class=\\\"text-lg font-semibold mb-1\\\">1.1 Choose Go Live or Create an Event</h3>\\n            <p>\\n\\n            </p>\\n\\n            <img\\n                src=\\\"https://cdn.nottv.io/public/2024/03/images/kKO28nkBUyNUf50YzVI3yZ01cliMJgiQOkwFwMRP.png\\\"\\n                alt=\\\"Choose Go Live on Facebook\\\"\\n                class=\\\"cursor-pointer w-64 object-cover mt-2 border-black border-2\\\"\\n                @click=\\\"setImage('https://cdn.nottv.io/public/2024/03/images/kKO28nkBUyNUf50YzVI3yZ01cliMJgiQOkwFwMRP.png','Choose Go Live on Facebook')\\\"\\n            />\\n          </div>\\n\\n          <div class=\\\"pl-4 mb-4\\\">\\n            <h3 class=\\\"text-lg font-semibold mb-1\\\">1.2 Copy your Stream Key and the Server URL</h3>\\n            <p>\\n              (You'll need these later.)\\n            </p>\\n\\n            <img\\n                src=\\\"https://cdn.nottv.io/public/2024/03/images/rmbz1FpuefO5DVfk0G2C6SjThZBjG5KJuYuusgpE.png\\\"\\n                alt=\\\"Copy your Stream Key and the Server URL\\\"\\n                class=\\\"cursor-pointer w-64 object-cover mt-2 border-black border-2\\\"\\n                @click=\\\"setImage('https://cdn.nottv.io/public/2024/03/images/rmbz1FpuefO5DVfk0G2C6SjThZBjG5KJuYuusgpE.png','Copy your Stream Key and the Server URL')\\\"\\n            />\\n          </div>\\n\\n          <div class=\\\"pl-4 mb-4\\\">\\n            <h3 class=\\\"text-lg font-semibold mb-1\\\">1.3 If the Go Live button is greyed out you need to 'Complete post details':</h3>\\n            <p>\\n\\n            </p>\\n\\n            <img\\n                src=\\\"https://cdn.nottv.io/public/2024/03/images/Ht5rRz6fibD1fVrAsyx4fY2PkSzAdh73Ym5nDsUR.png\\\"\\n                alt=\\\"Check Go Live Button in Facebook if its greyed out you may need to write the post description first\\\"\\n                class=\\\"cursor-pointer w-64 object-cover mt-2 border-black border-2\\\"\\n                @click=\\\"setImage('https://cdn.nottv.io/public/2024/03/images/Ht5rRz6fibD1fVrAsyx4fY2PkSzAdh73Ym5nDsUR.png','Check Go Live Button in Facebook if its greyed out you may need to write the post description first')\\\"\\n            />\\n          </div>\\n\\n          <div class=\\\"pl-4 mb-4\\\">\\n            <p>\\n              Find the 'Edit post details' button:\\n            </p>\\n\\n            <img\\n                src=\\\"https://cdn.nottv.io/public/2024/03/images/Yr4oHtnJaA8dz9kIxuHiPzIzmxZB582Sqxsc5zst.png\\\"\\n                alt=\\\"Click edit details\\\"\\n                class=\\\"cursor-pointer w-64 object-cover mt-2 border-black border-2\\\"\\n                @click=\\\"setImage('https://cdn.nottv.io/public/2024/03/images/Yr4oHtnJaA8dz9kIxuHiPzIzmxZB582Sqxsc5zst.png','Click edit details')\\\"\\n            />\\n          </div>\\n\\n          <div class=\\\"pl-4 mb-4\\\">\\n            <p>\\n              Write a description:\\n            </p>\\n\\n            <img\\n                src=\\\"https://cdn.nottv.io/public/2024/03/images/cidGqjiH8xMMMaoK8UapFypwNa2iza90sSKSo6rd.png\\\"\\n                alt=\\\"Write a description\\\"\\n                class=\\\"cursor-pointer w-64 object-cover mt-2 border-black border-2\\\"\\n                @click=\\\"setImage('https://cdn.nottv.io/public/2024/03/images/cidGqjiH8xMMMaoK8UapFypwNa2iza90sSKSo6rd.png','Write a description')\\\"\\n            />\\n          </div>\\n\\n\\n          <div class=\\\"pl-4 mb-4\\\">\\n            <h3 class=\\\"text-lg font-semibold mb-1\\\">1.4 Connect the video source (if it's not connected):</h3>\\n            <p>\\n            See the next step to connect the video source.\\n            </p>\\n\\n            <img\\n                src=\\\"https://cdn.nottv.io/public/2024/03/images/t0dYwH1vnjYxjBOCxCt8pu4bQqMhduCktBcLmIPs.png\\\"\\n                alt=\\\"Connect a video source\\\"\\n                class=\\\"cursor-pointer w-64 object-cover mt-2 border-black border-2\\\"\\n                @click=\\\"setImage('https://cdn.nottv.io/public/2024/03/images/t0dYwH1vnjYxjBOCxCt8pu4bQqMhduCktBcLmIPs.png','Connect a video source')\\\"\\n            />\\n          </div>\\n\\n          <div>\\n            <h2 class=\\\"text-xl font-semibold mb-2\\\">Step 2: Connect the video source (push your stream to Facebook):</h2>\\n            <p class=\\\"mb-4\\\">\\n              If you start streaming to notTV before you are on your Facebook Live page and you don't see the live\\n              stream on Facebook you need to re-push the stream from your notTV Go Live page (details are below).\\n            </p>\\n          </div>\\n\\n          <div class=\\\"pl-4 mb-4\\\">\\n            <h3 class=\\\"text-lg font-semibold mb-1\\\">2.1 Add Facebook to your Push Destinations on your notTV Go Live page:</h3>\\n            <p>\\n              Click \\\"Add Push Destination\\\":\\n            </p>\\n\\n            <img\\n                src=\\\"https://cdn.nottv.io/public/2024/03/images/pVgJWhcbT9mfSwXBtKA9h4UO6PZVQiGNHRH2pONb.png\\\"\\n                alt=\\\"Add push destination on your notTV Go Live page\\\"\\n                class=\\\"cursor-pointer w-64 object-cover mt-2 border-black border-2\\\"\\n                @click=\\\"setImage('https://cdn.nottv.io/public/2024/03/images/pVgJWhcbT9mfSwXBtKA9h4UO6PZVQiGNHRH2pONb.png','Add push destination on your notTV Go Live page')\\\"\\n            />\\n\\n          </div>\\n\\n          <div class=\\\"pl-4 mb-4\\\">\\n            <p>\\n              Click \\\"Enter your Facebook Stream Key and Stream URL that you copied earlier\\\":\\n            </p>\\n\\n            <img\\n                src=\\\"https://cdn.nottv.io/public/2024/03/images/E0vobEObFwjcbnUYKKCbuqlnX66nbIrfwJci593j.png\\\"\\n                alt=\\\"Enter your Facebook Stream Key and Stream URL\\\"\\n                class=\\\"cursor-pointer w-64 object-cover mt-2 border-black border-2\\\"\\n                @click=\\\"setImage('https://cdn.nottv.io/public/2024/03/images/E0vobEObFwjcbnUYKKCbuqlnX66nbIrfwJci593j.png','Enter your Facebook Stream Key and Stream URL')\\\"\\n            />\\n\\n          </div>\\n\\n          <div class=\\\"pl-4 mb-4\\\">\\n            <h3 class=\\\"text-lg font-semibold mb-1\\\">If you don't see the live video in Facebook:</h3>\\n            <p>\\n\\n            </p>\\n\\n            <img\\n                src=\\\"https://cdn.nottv.io/public/2024/03/images/N1SpqaDIs96UEIyI5kYXmxJpkfUUVh3KLRp6lOzK.png\\\"\\n                alt=\\\"Connect streaming software to go live\\\"\\n                class=\\\"cursor-pointer w-64 object-cover mt-2 border-black border-2\\\"\\n                @click=\\\"setImage('https://cdn.nottv.io/public/2024/03/images/N1SpqaDIs96UEIyI5kYXmxJpkfUUVh3KLRp6lOzK.png','Connect streaming software to go live')\\\"\\n            />\\n\\n          </div>\\n\\n          <div class=\\\"pl-4 mb-4\\\">\\n            <p>\\n              1. Stop the push to Facebook if it's started:\\n            </p>\\n\\n            <img\\n                src=\\\"https://cdn.nottv.io/public/2024/03/images/hMZ0G6Ok84MLZ4PVbgwYwimMR3klLLBuQj1rdcq3.png\\\"\\n                alt=\\\"Stop Push\\\"\\n                class=\\\"cursor-pointer w-64 object-cover mt-2 border-black border-2\\\"\\n                @click=\\\"setImage('https://cdn.nottv.io/public/2024/03/images/hMZ0G6Ok84MLZ4PVbgwYwimMR3klLLBuQj1rdcq3.png','Stop Push')\\\"\\n            />\\n\\n          </div>\\n\\n          <div class=\\\"pl-4 mb-4\\\">\\n            <p>\\n              2. Start the push to Facebook:\\n            </p>\\n\\n            <img\\n                src=\\\"https://cdn.nottv.io/public/2024/03/images/71B6TzoPQxYjA0600uRiOya8dCcavkdlXKG3MicD.png\\\"\\n                alt=\\\"Start Push\\\"\\n                class=\\\"cursor-pointer w-64 object-cover mt-2 border-black border-2\\\"\\n                @click=\\\"setImage('https://cdn.nottv.io/public/2024/03/images/71B6TzoPQxYjA0600uRiOya8dCcavkdlXKG3MicD.png','Start Push')\\\"\\n            />\\n          </div>\\n        </div>\\n\\n        <div class=\\\"pl-4 mb-4 mt-4\\\">\\n          <h3 class=\\\"text-lg font-semibold mb-1\\\">The video should start to connect:</h3>\\n          <p>\\n\\n          </p>\\n\\n          <img\\n              src=\\\"https://cdn.nottv.io/public/2024/03/images/eRKCAQnxAr8u34It2eAqossVU3Z6sg2IwXHSchj5.png\\\"\\n              alt=\\\"Connecting live video\\\"\\n              class=\\\"cursor-pointer w-64 object-cover mt-2 border-black border-2\\\"\\n              @click=\\\"setImage('https://cdn.nottv.io/public/2024/03/images/eRKCAQnxAr8u34It2eAqossVU3Z6sg2IwXHSchj5.png','Connecting live video')\\\"\\n          />\\n\\n        </div>\\n\\n        <div class=\\\"pl-4 mb-4\\\">\\n          <p>\\n            You should see the video appear:\\n          </p>\\n\\n          <img\\n              src=\\\"https://cdn.nottv.io/public/2024/03/images/qm3BI3KyGCT0Z8P0vMsLp7SJc19xkYZmKhc6VJZa.png\\\"\\n              alt=\\\"Preview the live video\\\"\\n              class=\\\"cursor-pointer w-64 object-cover mt-2 border-black border-2\\\"\\n              @click=\\\"setImage('https://cdn.nottv.io/public/2024/03/images/qm3BI3KyGCT0Z8P0vMsLp7SJc19xkYZmKhc6VJZa.png','Preview the live video')\\\"\\n          />\\n\\n        </div>\\n\\n        <div class=\\\"pl-4 mb-4\\\">\\n          <h3 class=\\\"text-lg font-semibold mb-1\\\">Step 3: Go Live</h3>\\n          <p>\\n            Push the blue Go Live button:\\n          </p>\\n\\n          <img\\n              src=\\\"https://cdn.nottv.io/public/2024/03/images/uSRaLddoeZD1QxMP2Hq782vrQvnIu8UIRPTRnMOG.png\\\"\\n              alt=\\\"Push the Go Live button\\\"\\n              class=\\\"cursor-pointer w-64 object-cover mt-2 border-black border-2\\\"\\n              @click=\\\"setImage('https://cdn.nottv.io/public/2024/03/images/uSRaLddoeZD1QxMP2Hq782vrQvnIu8UIRPTRnMOG.png','Push the Go Live button')\\\"\\n          />\\n\\n        </div>\\n\\n      </div>\\n\\n      <ImageLightboxModal\\n          v-if=\\\"selectedImageUrl\\\"\\n          :imageUrl=\\\"selectedImageUrl\\\"\\n          :imageAlt=\\\"selectedImageAlt\\\"\\n          @closed=\\\"closeImage\\\"/>\\n\\n    </div>\\n  </div>\\n\\n</template>\\n\\n<script setup>\\nimport { usePage } from '@inertiajs/inertia-vue3'\\nimport { usePageSetup } from '@/Utilities/PageSetup'\\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\\nimport { useGoLiveStore } from '@/Stores/GoLiveStore'\\nimport Message from '@/Components/Global/Modals/Messages'\\nimport { computed, ref, watchEffect } from 'vue'\\nimport BackButton from '@/Components/Global/Buttons/BackButton'\\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome'\\nimport { useClipboard } from '@vueuse/core'\\nimport SingleImage from '@/Components/Global/Multimedia/SingleImage.vue'\\nimport ImageLightboxModal from '@/Components/Global/Images/ImageLightboxModal.vue'\\n\\nusePageSetup('training.streamToNotTV')\\n\\nconst appSettingStore = useAppSettingStore()\\nconst goLiveStore = useGoLiveStore()\\nlet selectedShow = ref(null)\\n\\nconst page = usePage()\\n\\nlet props = defineProps({\\n  can: Object,\\n})\\n\\nconst showCopiedFullUrl = ref(false)\\nconst showCopiedRtmpUri = ref(false)\\nconst showCopiedStreamKey = ref(false)\\nconst {copy} = useClipboard()\\n\\nconst fullUrl = ref('')\\nconst rtmpUri = ref('')\\nconst streamKey = ref('')\\nconst appUrl = page.props.value.appUrl\\n\\nconst setSelectedShow = async () => {\\n  await goLiveStore.fetchShows().then(\\n      selectedShow = computed(() => goLiveStore.selectedShow),\\n  )\\n}\\nsetSelectedShow()\\n\\n// Reactively update URLs when the store updates\\nwatchEffect(() => {\\n  if (goLiveStore.rtmpUri) {\\n    rtmpUri.value = goLiveStore.rtmpUri + 'live/'\\n    // Check if it's an episode or a selected show and update accordingly\\n    if (goLiveStore.isEpisode && goLiveStore.episode?.mist_stream_wildcard?.name) {\\n      streamKey.value = goLiveStore.episode.mist_stream_wildcard.name\\n    } else if (!goLiveStore.isEpisode && goLiveStore.selectedShow?.mist_stream_wildcard?.name) {\\n      streamKey.value = goLiveStore.selectedShow.mist_stream_wildcard.name\\n    }\\n    if (goLiveStore.isEpisode && goLiveStore.episode?.slug) {\\n      fullUrl.value = `${appUrl}/shows/${selectedShow.value?.slug}/episode/${goLiveStore.episode.slug}`\\n    } else if (!goLiveStore.isEpisode && selectedShow.value?.slug) {\\n      fullUrl.value = `${appUrl}/shows/${selectedShow.value?.slug}`\\n    }\\n  }\\n})\\n\\n// Function to handle the copy action and display the \\\"copied\\\" message for each type\\nconst copyFullUrl = () => {\\n  copy(fullUrl.value)\\n  showCopiedFullUrl.value = true\\n  setTimeout(() => showCopiedFullUrl.value = false, 1000)\\n}\\n\\nconst copyRtmpUri = () => {\\n  copy(rtmpUri.value)\\n  showCopiedRtmpUri.value = true\\n  setTimeout(() => showCopiedRtmpUri.value = false, 1000)\\n}\\n\\nconst copyStreamKey = () => {\\n  copy(streamKey.value)\\n  showCopiedStreamKey.value = true\\n  setTimeout(() => showCopiedStreamKey.value = false, 1000)\\n}\\n\\nconst selectedImageUrl = ref(null);\\nconst selectedImageAlt = ref(null);\\n\\nconst closeImage = () => {\\n  selectedImageUrl.value = null\\n  selectedImageAlt.value = null\\n}\\n\\nconst setImage = (imageUrl, imageAlt) => {\\n  selectedImageUrl.value = imageUrl\\n  selectedImageAlt.value = imageAlt\\n}\\n\\n\\n</script>\\n\\n<style scoped>\\n.copied-message-fade {\\n  animation: fadeOut 2s forwards;\\n}\\n\\n@keyframes fadeOut {\\n  from {\\n    opacity: 1;\\n  }\\n  to {\\n    opacity: 0;\\n  }\\n}\\n</style>\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import script from \"./BackButton.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./BackButton.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n    <button\n        @click.prevent=\"back\"\n        class=\"px-4 py-2 text-white bg-blue-600 hover:bg-blue-500 rounded-lg\"\n    >Back\n    </button>\n  </div>\n</template>\n\n<script setup>\nimport { Inertia } from \"@inertiajs/inertia\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useUserStore } from '@/Stores/UserStore'\n\nconst appSettingStore = useAppSettingStore()\nconst userStore = useUserStore()\n\nlet props = defineProps({\n  url: String\n})\n\nfunction back() {\n  if (appSettingStore.prevUrl) {\n    if (props.url) {\n      Inertia.visit(props.url)\n    } else {\n      Inertia.visit(appSettingStore.prevUrl)\n    }\n  } else {\n    if (props.url) {\n      Inertia.visit(props.url)\n    } else {\n      // Fallback if prevUrl is not available\n      let prevUrl = userStore.isCreator ? '/dashboard' : '/';\n      Inertia.visit(prevUrl);\n    }\n  }\n}\n</script>\n","import script from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"mx-4 my-4\">\n    <div class=\"alert alert-info mt-4\"\n         v-if=\"props.flash.message\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" class=\"stroke-current shrink-0 w-6 h-6\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n      </svg>\n      <span>{{ props.flash.message }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-success mt-4 mx-3\"\n         v-if=\"props.flash.success\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.success }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-warning mt-4 mx-3\"\n         v-if=\"props.flash.warning\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"/>\n      </svg>\n      <span>{{ props.flash.warning }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-error mt-4 mx-3\"\n         v-if=\"props.flash.error\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.error }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n  </div>\n\n</template>\n\n<script setup>\nimport { Inertia } from \"@inertiajs/inertia\"\nimport { computed } from \"vue\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\n\nconst appSettingStore = useAppSettingStore()\n\nappSettingStore.showFlashMessage = true\n\nlet props = defineProps({\n  flash: Object,\n\n})\n\nconst messageType = computed(() => ({\n  'text-green-700 bg-green-100 dark:bg-green-200 dark:text-green-800': props.flash.success,\n  'text-blue-700 bg-blue-100 dark:bg-blue-200 dark:text-blue-800': props.flash.message,\n  'text-orange-700 bg-orange-100 dark:bg-orange-200 dark:text-orange-800': props.flash.warning,\n  'text-red-700 bg-red-100 dark:bg-red-200 dark:text-red-800': props.flash.error,\n}))\n\nconst clearFlashMessage = async () => {\n  await Inertia.post(route('flash.clear'));\n  Inertia.reload();\n};\n</script>\n","<template>\n  <div v-if=\"isOpen\" @click=\"close\"  class=\"fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center p-4\">\n    <img :src=\"imageUrl\" @click.stop class=\"max-w-full max-h-full md:max-w-[60%] object-cover\" :alt=\"imageAlt\" />\n  </div>\n</template>\n\n<script setup>\nimport { ref, watch } from 'vue';\n\nconst props = defineProps({\n  imageUrl: String,\n  imageAlt: String,\n});\n\nconst isOpen = ref(true);\n\nconst close = () => {\n  isOpen.value = false;\n  emit('closed');\n};\n\nconst emit = defineEmits(['closed']);\n</script>\n\n<style>\n/* Additional styles if needed */\n</style>\n","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-9.use[1]!../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-9.use[2]!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./ImageLightboxModal.vue?vue&type=style&index=0&id=60711b3b&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./ImageLightboxModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ImageLightboxModal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ImageLightboxModal.vue?vue&type=style&index=0&id=60711b3b&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n\n  <Head title=\"How To Push To Facebook\"/>\n\n  <div class=\"place-self-center flex flex-col gap-y-3\">\n    <div id=\"topDiv\" class=\"bg-white text-black dark:bg-gray-800 dark:text-gray-50 p-5 mb-10\">\n\n      <Message v-if=\"appSettingStore.showFlashMessage\" :flash=\"$page.props.flash\"/>\n\n\n      <!--      <header class=\"flex justify-between mb-3\">-->\n      <!--        <div class=\"pt-4\">-->\n      <!--          <h1 class=\"text-3xl font-semibold pb-3\">My Library</h1>-->\n      <!--        </div>-->\n\n      <!--      </header>-->\n      <!--      <div class=\"flex flex-row justify-end gap-x-4 mb-4\">-->\n\n      <!--        <input v-model=\"search\" type=\"search\" placeholder=\"Search...\" class=\"border px-2 rounded-lg text-black\"/>-->\n      <!--      </div>-->\n\n      <!--      <div class=\"mb-4\">-->\n      <!--        <div class=\"p-2 text-red-600\">This section is in development. Not currently working.</div>-->\n      <!--        <p class=\"\">-->\n      <!--          Your notTV Library... Shows and creators you follow will appear here. Movies and episodes on your Watch Later-->\n      <!--          list. And live events you're interested in. Also, items from the shop you have saved will all appear here!-->\n      <!--        </p>-->\n      <!--      </div>-->\n\n      <div class=\"p-4\">\n        <div class=\"flex flex-row justify-end\">\n          <BackButton/>\n        </div>\n        <h1 class=\"text-2xl font-bold text-left mb-4\">How To Push To Facebook</h1>\n\n        <p class=\"mb-4\">\n          This guide will walk you through the process of pushing your Live Stream to Facebook.\n        </p>\n\n        <div class=\"space-y-6\">\n          <!-- Step 1: Configure Zoom -->\n          <div>\n            <h2 class=\"text-xl font-semibold mb-2\">Step 1: Setup Facebook To Go Live</h2>\n            <p class=\"mb-4\">\n              From your Facebook page when you post a new message click \"Live Video\"\n            </p>\n            <img\n                src=\"https://cdn.nottv.io/public/2024/03/images/fhfNXxmKbk78IupmVByAumDM9g2WR0qzu8IJo6zt.png\"\n                alt=\"Click Live Video on Facebook when you are going to send a message\"\n                class=\"cursor-pointer w-64 object-cover mt-2 border-black border-2\"\n                @click=\"setImage('https://cdn.nottv.io/public/2024/03/images/fhfNXxmKbk78IupmVByAumDM9g2WR0qzu8IJo6zt.png','Click Live Video on Facebook when you are going to send a message')\"\n            />\n\n          </div>\n          <div class=\"pl-4 mb-4\">\n            <h3 class=\"text-lg font-semibold mb-1\">1.1 Choose Go Live or Create an Event</h3>\n            <p>\n\n            </p>\n\n            <img\n                src=\"https://cdn.nottv.io/public/2024/03/images/kKO28nkBUyNUf50YzVI3yZ01cliMJgiQOkwFwMRP.png\"\n                alt=\"Choose Go Live on Facebook\"\n                class=\"cursor-pointer w-64 object-cover mt-2 border-black border-2\"\n                @click=\"setImage('https://cdn.nottv.io/public/2024/03/images/kKO28nkBUyNUf50YzVI3yZ01cliMJgiQOkwFwMRP.png','Choose Go Live on Facebook')\"\n            />\n          </div>\n\n          <div class=\"pl-4 mb-4\">\n            <h3 class=\"text-lg font-semibold mb-1\">1.2 Copy your Stream Key and the Server URL</h3>\n            <p>\n              (You'll need these later.)\n            </p>\n\n            <img\n                src=\"https://cdn.nottv.io/public/2024/03/images/rmbz1FpuefO5DVfk0G2C6SjThZBjG5KJuYuusgpE.png\"\n                alt=\"Copy your Stream Key and the Server URL\"\n                class=\"cursor-pointer w-64 object-cover mt-2 border-black border-2\"\n                @click=\"setImage('https://cdn.nottv.io/public/2024/03/images/rmbz1FpuefO5DVfk0G2C6SjThZBjG5KJuYuusgpE.png','Copy your Stream Key and the Server URL')\"\n            />\n          </div>\n\n          <div class=\"pl-4 mb-4\">\n            <h3 class=\"text-lg font-semibold mb-1\">1.3 If the Go Live button is greyed out you need to 'Complete post details':</h3>\n            <p>\n\n            </p>\n\n            <img\n                src=\"https://cdn.nottv.io/public/2024/03/images/Ht5rRz6fibD1fVrAsyx4fY2PkSzAdh73Ym5nDsUR.png\"\n                alt=\"Check Go Live Button in Facebook if its greyed out you may need to write the post description first\"\n                class=\"cursor-pointer w-64 object-cover mt-2 border-black border-2\"\n                @click=\"setImage('https://cdn.nottv.io/public/2024/03/images/Ht5rRz6fibD1fVrAsyx4fY2PkSzAdh73Ym5nDsUR.png','Check Go Live Button in Facebook if its greyed out you may need to write the post description first')\"\n            />\n          </div>\n\n          <div class=\"pl-4 mb-4\">\n            <p>\n              Find the 'Edit post details' button:\n            </p>\n\n            <img\n                src=\"https://cdn.nottv.io/public/2024/03/images/Yr4oHtnJaA8dz9kIxuHiPzIzmxZB582Sqxsc5zst.png\"\n                alt=\"Click edit details\"\n                class=\"cursor-pointer w-64 object-cover mt-2 border-black border-2\"\n                @click=\"setImage('https://cdn.nottv.io/public/2024/03/images/Yr4oHtnJaA8dz9kIxuHiPzIzmxZB582Sqxsc5zst.png','Click edit details')\"\n            />\n          </div>\n\n          <div class=\"pl-4 mb-4\">\n            <p>\n              Write a description:\n            </p>\n\n            <img\n                src=\"https://cdn.nottv.io/public/2024/03/images/cidGqjiH8xMMMaoK8UapFypwNa2iza90sSKSo6rd.png\"\n                alt=\"Write a description\"\n                class=\"cursor-pointer w-64 object-cover mt-2 border-black border-2\"\n                @click=\"setImage('https://cdn.nottv.io/public/2024/03/images/cidGqjiH8xMMMaoK8UapFypwNa2iza90sSKSo6rd.png','Write a description')\"\n            />\n          </div>\n\n\n          <div class=\"pl-4 mb-4\">\n            <h3 class=\"text-lg font-semibold mb-1\">1.4 Connect the video source (if it's not connected):</h3>\n            <p>\n            See the next step to connect the video source.\n            </p>\n\n            <img\n                src=\"https://cdn.nottv.io/public/2024/03/images/t0dYwH1vnjYxjBOCxCt8pu4bQqMhduCktBcLmIPs.png\"\n                alt=\"Connect a video source\"\n                class=\"cursor-pointer w-64 object-cover mt-2 border-black border-2\"\n                @click=\"setImage('https://cdn.nottv.io/public/2024/03/images/t0dYwH1vnjYxjBOCxCt8pu4bQqMhduCktBcLmIPs.png','Connect a video source')\"\n            />\n          </div>\n\n          <div>\n            <h2 class=\"text-xl font-semibold mb-2\">Step 2: Connect the video source (push your stream to Facebook):</h2>\n            <p class=\"mb-4\">\n              If you start streaming to notTV before you are on your Facebook Live page and you don't see the live\n              stream on Facebook you need to re-push the stream from your notTV Go Live page (details are below).\n            </p>\n          </div>\n\n          <div class=\"pl-4 mb-4\">\n            <h3 class=\"text-lg font-semibold mb-1\">2.1 Add Facebook to your Push Destinations on your notTV Go Live page:</h3>\n            <p>\n              Click \"Add Push Destination\":\n            </p>\n\n            <img\n                src=\"https://cdn.nottv.io/public/2024/03/images/pVgJWhcbT9mfSwXBtKA9h4UO6PZVQiGNHRH2pONb.png\"\n                alt=\"Add push destination on your notTV Go Live page\"\n                class=\"cursor-pointer w-64 object-cover mt-2 border-black border-2\"\n                @click=\"setImage('https://cdn.nottv.io/public/2024/03/images/pVgJWhcbT9mfSwXBtKA9h4UO6PZVQiGNHRH2pONb.png','Add push destination on your notTV Go Live page')\"\n            />\n\n          </div>\n\n          <div class=\"pl-4 mb-4\">\n            <p>\n              Click \"Enter your Facebook Stream Key and Stream URL that you copied earlier\":\n            </p>\n\n            <img\n                src=\"https://cdn.nottv.io/public/2024/03/images/E0vobEObFwjcbnUYKKCbuqlnX66nbIrfwJci593j.png\"\n                alt=\"Enter your Facebook Stream Key and Stream URL\"\n                class=\"cursor-pointer w-64 object-cover mt-2 border-black border-2\"\n                @click=\"setImage('https://cdn.nottv.io/public/2024/03/images/E0vobEObFwjcbnUYKKCbuqlnX66nbIrfwJci593j.png','Enter your Facebook Stream Key and Stream URL')\"\n            />\n\n          </div>\n\n          <div class=\"pl-4 mb-4\">\n            <h3 class=\"text-lg font-semibold mb-1\">If you don't see the live video in Facebook:</h3>\n            <p>\n\n            </p>\n\n            <img\n                src=\"https://cdn.nottv.io/public/2024/03/images/N1SpqaDIs96UEIyI5kYXmxJpkfUUVh3KLRp6lOzK.png\"\n                alt=\"Connect streaming software to go live\"\n                class=\"cursor-pointer w-64 object-cover mt-2 border-black border-2\"\n                @click=\"setImage('https://cdn.nottv.io/public/2024/03/images/N1SpqaDIs96UEIyI5kYXmxJpkfUUVh3KLRp6lOzK.png','Connect streaming software to go live')\"\n            />\n\n          </div>\n\n          <div class=\"pl-4 mb-4\">\n            <p>\n              1. Stop the push to Facebook if it's started:\n            </p>\n\n            <img\n                src=\"https://cdn.nottv.io/public/2024/03/images/hMZ0G6Ok84MLZ4PVbgwYwimMR3klLLBuQj1rdcq3.png\"\n                alt=\"Stop Push\"\n                class=\"cursor-pointer w-64 object-cover mt-2 border-black border-2\"\n                @click=\"setImage('https://cdn.nottv.io/public/2024/03/images/hMZ0G6Ok84MLZ4PVbgwYwimMR3klLLBuQj1rdcq3.png','Stop Push')\"\n            />\n\n          </div>\n\n          <div class=\"pl-4 mb-4\">\n            <p>\n              2. Start the push to Facebook:\n            </p>\n\n            <img\n                src=\"https://cdn.nottv.io/public/2024/03/images/71B6TzoPQxYjA0600uRiOya8dCcavkdlXKG3MicD.png\"\n                alt=\"Start Push\"\n                class=\"cursor-pointer w-64 object-cover mt-2 border-black border-2\"\n                @click=\"setImage('https://cdn.nottv.io/public/2024/03/images/71B6TzoPQxYjA0600uRiOya8dCcavkdlXKG3MicD.png','Start Push')\"\n            />\n          </div>\n        </div>\n\n        <div class=\"pl-4 mb-4 mt-4\">\n          <h3 class=\"text-lg font-semibold mb-1\">The video should start to connect:</h3>\n          <p>\n\n          </p>\n\n          <img\n              src=\"https://cdn.nottv.io/public/2024/03/images/eRKCAQnxAr8u34It2eAqossVU3Z6sg2IwXHSchj5.png\"\n              alt=\"Connecting live video\"\n              class=\"cursor-pointer w-64 object-cover mt-2 border-black border-2\"\n              @click=\"setImage('https://cdn.nottv.io/public/2024/03/images/eRKCAQnxAr8u34It2eAqossVU3Z6sg2IwXHSchj5.png','Connecting live video')\"\n          />\n\n        </div>\n\n        <div class=\"pl-4 mb-4\">\n          <p>\n            You should see the video appear:\n          </p>\n\n          <img\n              src=\"https://cdn.nottv.io/public/2024/03/images/qm3BI3KyGCT0Z8P0vMsLp7SJc19xkYZmKhc6VJZa.png\"\n              alt=\"Preview the live video\"\n              class=\"cursor-pointer w-64 object-cover mt-2 border-black border-2\"\n              @click=\"setImage('https://cdn.nottv.io/public/2024/03/images/qm3BI3KyGCT0Z8P0vMsLp7SJc19xkYZmKhc6VJZa.png','Preview the live video')\"\n          />\n\n        </div>\n\n        <div class=\"pl-4 mb-4\">\n          <h3 class=\"text-lg font-semibold mb-1\">Step 3: Go Live</h3>\n          <p>\n            Push the blue Go Live button:\n          </p>\n\n          <img\n              src=\"https://cdn.nottv.io/public/2024/03/images/uSRaLddoeZD1QxMP2Hq782vrQvnIu8UIRPTRnMOG.png\"\n              alt=\"Push the Go Live button\"\n              class=\"cursor-pointer w-64 object-cover mt-2 border-black border-2\"\n              @click=\"setImage('https://cdn.nottv.io/public/2024/03/images/uSRaLddoeZD1QxMP2Hq782vrQvnIu8UIRPTRnMOG.png','Push the Go Live button')\"\n          />\n\n        </div>\n\n      </div>\n\n      <ImageLightboxModal\n          v-if=\"selectedImageUrl\"\n          :imageUrl=\"selectedImageUrl\"\n          :imageAlt=\"selectedImageAlt\"\n          @closed=\"closeImage\"/>\n\n    </div>\n  </div>\n\n</template>\n\n<script setup>\nimport { usePage } from '@inertiajs/inertia-vue3'\nimport { usePageSetup } from '@/Utilities/PageSetup'\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\nimport { useGoLiveStore } from '@/Stores/GoLiveStore'\nimport Message from '@/Components/Global/Modals/Messages'\nimport { computed, ref, watchEffect } from 'vue'\nimport BackButton from '@/Components/Global/Buttons/BackButton'\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome'\nimport { useClipboard } from '@vueuse/core'\nimport SingleImage from '@/Components/Global/Multimedia/SingleImage.vue'\nimport ImageLightboxModal from '@/Components/Global/Images/ImageLightboxModal.vue'\n\nusePageSetup('training.streamToNotTV')\n\nconst appSettingStore = useAppSettingStore()\nconst goLiveStore = useGoLiveStore()\nlet selectedShow = ref(null)\n\nconst page = usePage()\n\nlet props = defineProps({\n  can: Object,\n})\n\nconst showCopiedFullUrl = ref(false)\nconst showCopiedRtmpUri = ref(false)\nconst showCopiedStreamKey = ref(false)\nconst {copy} = useClipboard()\n\nconst fullUrl = ref('')\nconst rtmpUri = ref('')\nconst streamKey = ref('')\nconst appUrl = page.props.value.appUrl\n\nconst setSelectedShow = async () => {\n  await goLiveStore.fetchShows().then(\n      selectedShow = computed(() => goLiveStore.selectedShow),\n  )\n}\nsetSelectedShow()\n\n// Reactively update URLs when the store updates\nwatchEffect(() => {\n  if (goLiveStore.rtmpUri) {\n    rtmpUri.value = goLiveStore.rtmpUri + 'live/'\n    // Check if it's an episode or a selected show and update accordingly\n    if (goLiveStore.isEpisode && goLiveStore.episode?.mist_stream_wildcard?.name) {\n      streamKey.value = goLiveStore.episode.mist_stream_wildcard.name\n    } else if (!goLiveStore.isEpisode && goLiveStore.selectedShow?.mist_stream_wildcard?.name) {\n      streamKey.value = goLiveStore.selectedShow.mist_stream_wildcard.name\n    }\n    if (goLiveStore.isEpisode && goLiveStore.episode?.slug) {\n      fullUrl.value = `${appUrl}/shows/${selectedShow.value?.slug}/episode/${goLiveStore.episode.slug}`\n    } else if (!goLiveStore.isEpisode && selectedShow.value?.slug) {\n      fullUrl.value = `${appUrl}/shows/${selectedShow.value?.slug}`\n    }\n  }\n})\n\n// Function to handle the copy action and display the \"copied\" message for each type\nconst copyFullUrl = () => {\n  copy(fullUrl.value)\n  showCopiedFullUrl.value = true\n  setTimeout(() => showCopiedFullUrl.value = false, 1000)\n}\n\nconst copyRtmpUri = () => {\n  copy(rtmpUri.value)\n  showCopiedRtmpUri.value = true\n  setTimeout(() => showCopiedRtmpUri.value = false, 1000)\n}\n\nconst copyStreamKey = () => {\n  copy(streamKey.value)\n  showCopiedStreamKey.value = true\n  setTimeout(() => showCopiedStreamKey.value = false, 1000)\n}\n\nconst selectedImageUrl = ref(null);\nconst selectedImageAlt = ref(null);\n\nconst closeImage = () => {\n  selectedImageUrl.value = null\n  selectedImageAlt.value = null\n}\n\nconst setImage = (imageUrl, imageAlt) => {\n  selectedImageUrl.value = imageUrl\n  selectedImageAlt.value = imageAlt\n}\n\n\n</script>\n\n<style scoped>\n.copied-message-fade {\n  animation: fadeOut 2s forwards;\n}\n\n@keyframes fadeOut {\n  from {\n    opacity: 1;\n  }\n  to {\n    opacity: 0;\n  }\n}\n</style>","import api from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-9.use[1]!../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-9.use[2]!../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./HowToPushToFacebook.vue?vue&type=style&index=0&id=77b111b2&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./HowToPushToFacebook.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./HowToPushToFacebook.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./HowToPushToFacebook.vue?vue&type=style&index=0&id=77b111b2&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-77b111b2\"]])\n\nexport default __exports__"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","initialState","displayEpisodeGoLiveComponent","isEpisode","episode","preSelectedShowId","selectedShowId","shows","streamKey","wildcardId","isLive","isRecording","streamInfo","rtmpUri","destinations","useGoLiveStore","defineStore","state","actions","assign","this","fetchShows","_this","_callee","response","_context","axios","get","data","t0","console","generateStreamKey","_this2","_callee2","_context2","post","concat","log","stream_key","selectedShow","mist_stream_wildcard","mist_stream_wildcard_id","updateAndGetStreamKey","_show$mist_stream_wil","_this3","show","find","id","setSelectedShowId","showId","updateSelectedShow","_this4","goLive","stopLive","startRecording","stopRecording","fetchStreamInfo","streamName","_this5","_callee3","_context3","fetch","ok","json","fetchRtmpUri","_this6","_callee4","_context4","text","clearStreamInfo","toggleDisplayEpisodeGoLiveComponent","_this$episode","show_id","updateEpisode","reloadPlayer","_this7","_callee5","videoAuxPlayerStore","mistStream","_context5","useVideoAuxPlayerStore","sourceName","getMistServerUri","loadMistStreamVideo","fetchPushDestinations","_this8","_callee6","notificationStore","_response$data","message","status","_context6","useNotificationStore","setToastNotification","deleteDestination","destinationId","_this9","_callee7","_context7","confirm","filter","destination","startPush","_this10","_callee8","_response$data2","index","_context8","findIndex","push_is_started","stopPush","_this11","_callee9","_response$data3","_context9","enableAutoPush","_this12","_callee10","_response$data4","_context10","has_auto_push","disableAutoPush","_this13","_callee11","_response$data5","_context11","disableAllAutoPushes","_this14","_callee12","_response$data6","_context12","getters","_show$mist_stream_wil2","_show$mist_stream_wil3","fullRtmpUri","fullUrl","activeDestinations","_state$selectedShow","_state$episode","mistServerUri","player","eventListenersAttached","videoPlayerLoaded","class","videoContainerClass","videoSourceIdSrc1","videoSourceIdSrc2","videoSourceIdSrc3","videoSourceTypeSrc1","videoSourceTypeSrc2","videoSourceTypeSrc3","firstPlayVideoSourceType","firstPlayVideoSource","videoName","videoSource","videoSourceType","videoPoster","nextSource","previousSource","currentView","currentChannelId","currentChannelName","currentShow","currentShowEpisode","currentVideo","hasVideo","controls","muted","paused","currentTime","duration","formattedTime","blue","videoIsYoutube","videoUploadComplete","setPlayer","playerInstance","initializePlayer","attachEventListeners","nextTick","useAudioStore","ensureAudioContextAndNodesReady","ready","play","on","handleTimeUpdate","handleFullscreenChange","handlePlay","handlePause","handleError","detachEventListeners","stopAudioLevelMonitoring","off","disposePlayer","dispose","prepareForNewVideoSource","source","useChannelStore","clearChannel","loadNewVideo","resetPlayback","pause","formatDuration","durationInSeconds","Math","floor","map","part","toString","padStart","join","_this$player","isFullscreen","_this$player2","_this$player3","_this$player4","code","makeBlue","toggleMute","unMute","mute","togglePlay","videoJs","videojs","load","loadNewLiveSource","sourceType","fullSourceUrl","src","back","fullscreen","requestFullscreen","getVideoCurrentTime","videoCurrentTime","getSourceDetails","videoSrc","mediaType","video_url","cdn_endpoint","cloud_folder","folder","file_name","audioStore","_this$getSourceDetail","deferAudioSetup","setGeneralServiceNotification","playNewVideo","loadNewSourceFromYouTube","loadNewLiveSourceFromRumble","loadNewSourceFromUrl","loadNewSourceFromMist","loadNewSourceFromFile","filePath","loadExternalSourceVideo","loadPlaylistVideos","stayMuted","shouldUnmute","basePath","loadVideoFromFile","video","setNowPlayingInfoVideoFile","nowPlayingType","nowPlayingName","useStreamStore","currentChannel","setNowPlayingInfoShow","clearNowPlayingInfo","showStore","useShowStore","firstPlayVideo","setName","setEpisodeUrl","slug","setUrl","setEpisodeName","makeVideoPiP","makeVideoFullPage","appSettingStore","useAppSettingStore","userStore","useUserStore","fullPage","hidePage","ott","isMobile","makeVideoTopRight","currentPageIsStream","makeVideoWelcomePage","loggedIn","usePageSetup","pageName","videoPlayerStore","useVideoPlayerStore","currentPage","showFlashMessage","pageIsHidden","pageReload","window","location","reload","Inertia","event","search","shouldScrollToTop","requestAnimationFrame","topDiv","document","getElementById","scrollIntoView","behavior","scrollTo","setPrevUrl","showOttButtons","noLayout","___CSS_LOADER_EXPORT___","module","props","__props","prevUrl","url","visit","isCreator","clearFlashMessage","computed","flash","success","warning","_ref","route","isOpen","ref","close","emit","__emit","options","locals","goLiveStore","page","usePage","useClipboard","copy","appUrl","setSelectedShow","watchEffect","_goLiveStore$episode","_goLiveStore$selected","_goLiveStore$episode2","_selectedShow$value2","_selectedShow$value","_selectedShow$value3","selectedImageUrl","selectedImageAlt","closeImage","setImage","imageUrl","imageAlt"],"sourceRoot":""}
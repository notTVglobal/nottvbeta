{"version":3,"file":"js/7812.js","mappings":"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","sources":["webpack:///./resources/js/Components/Global/Uploaders/ImageUpload.vue?b0fb","webpack:///./resources/js/Pages/Profile/Partials/UpdateNewsPersonSettings.vue?9cf8","webpack:///./resources/js/Components/Global/Multimedia/SingleImageWithModal.vue?47d2","webpack:///./resources/js/Components/Global/Multimedia/SingleImageWithModal.vue","webpack:///./resources/js/Components/Global/TextEditor/TabbableTextarea.vue?4db8","webpack:///./resources/js/Components/Global/TextEditor/TabbableTextarea.vue","webpack:///./resources/js/Components/Global/Uploaders/ImageUpload.vue","webpack:///./resources/js/Components/Global/Uploaders/ImageUpload.vue?de5b","webpack:///./resources/js/Components/Global/Uploaders/ImageUpload.vue?55d5","webpack:///./resources/js/Jetstream/ActionMessage.vue","webpack:///./resources/js/Jetstream/FormSection.vue?2128","webpack:///./resources/js/Jetstream/FormSection.vue","webpack:///./resources/js/Jetstream/Input.vue?28c0","webpack:///./resources/js/Jetstream/Input.vue","webpack:///./resources/js/Jetstream/InputError.vue","webpack:///./resources/js/Jetstream/Label.vue","webpack:///./resources/js/Jetstream/SecondaryButton.vue","webpack:///./resources/js/Jetstream/SectionTitle.vue","webpack:///./resources/js/Jetstream/SectionTitle.vue?8590","webpack:///./resources/js/Pages/Profile/Partials/UpdateNewsPersonSettings.vue","webpack:///./resources/js/Pages/Profile/Partials/UpdateNewsPersonSettings.vue?84b4","webpack:///./resources/js/Pages/Profile/Partials/UpdateNewsPersonSettings.vue?f34c"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".checkbox-container[data-v-95554eba]{align-items:center;display:flex}.checkbox[data-v-95554eba]{margin-right:8px}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/Components/Global/Uploaders/ImageUpload.vue\"],\"names\":[],\"mappings\":\"AAkGA,qCAEE,kBAAmB,CADnB,YAEF,CAEA,2BACE,gBACF\",\"sourcesContent\":[\"<template>\\n  <div class=\\\"\\\">\\n    <div class=\\\"max-full mx-auto mt-2 mb-6 bg-gray-200 p-6 text-black\\\">\\n      <h2 class=\\\"text-xl font-semibold\\\">{{ name }}</h2>\\n      <ul class=\\\"pb-4\\\">\\n        <li>Max File Size: <span class=\\\"text-orange-400\\\">{{ maxSize }}</span></li>\\n        <li>File Types accepted: <span class=\\\"text-orange-400\\\">{{ fileTypes }}</span></li>\\n      </ul>\\n\\n      <div class=\\\"checkbox-container mb-4\\\">\\n        <input type=\\\"checkbox\\\" id=\\\"removeExif\\\" v-model=\\\"removeExif\\\" class=\\\"checkbox checkbox-md\\\">\\n        <label for=\\\"removeExif\\\" class=\\\"checkbox-label\\\">Remove EXIF data</label>\\n      </div>\\n\\n      <file-pond\\n          name=\\\"image\\\"\\n          ref=\\\"pond\\\"\\n          class-name=\\\"my-pond\\\"\\n          allow-multiple=\\\"false\\\"\\n          label-idle=\\\"Click to choose file, or drag here...\\\"\\n          :server=\\\"`/api/image-upload?modelType=${props.modelType}&modelId=${props.modelId}&removeExif=${removeExif.value}`\\\"\\n          accepted-file-types=\\\"image/jpeg, image/png\\\"\\n          @init=\\\"filepondInitialized\\\"\\n          @processfile=\\\"handleProcessedFile\\\"\\n          :max-file-size=\\\"maxSize\\\"\\n          allowRemove=\\\"false\\\"\\n          allowRevert=\\\"false\\\"\\n      />\\n    </div>\\n  </div>\\n\\n</template>\\n\\n<script setup>\\nimport vueFilePond from 'vue-filepond'\\nimport FilePondPluginFileValidateType from 'filepond-plugin-file-validate-type'\\nimport FilePondPluginFileValidateSize from 'filepond-plugin-file-validate-size'\\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview'\\nimport 'filepond/dist/filepond.min.css'\\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.min.css'\\nimport { ref } from 'vue'\\n\\nconst props = defineProps({\\n  name: String,\\n  metadataKey: String,\\n  metadataValue: String,\\n  modelType: {\\n    type: String,\\n    default: null\\n  },\\n  modelId: {\\n    type: Number,\\n    default: null\\n  },\\n  maxSize: String,\\n  fileTypes: String,\\n})\\n\\n// const myFiles = ref([''])\\n\\nconst emit = defineEmits(['reloadImage', 'imageUploaded'])\\n\\nconst FilePond = vueFilePond(\\n    FilePondPluginFileValidateType,\\n    FilePondPluginFileValidateSize,\\n    FilePondPluginImagePreview,\\n)\\n\\n// Define reactive variables\\nconst removeExif = ref(false)\\nconst maxSize = ref('30MB')\\nconst fileTypes = ref(['image/png', 'image/jpeg'])\\n// const modelType = 'yourModelType'; // Replace with your actual model type\\n// const modelId = 'yourModelId'; // Replace with your actual model ID\\n\\nfunction filepondInitialized() {\\n  console.log('Filepond is ready!')\\n}\\n//\\n// function handleFilePondInit() {\\n//   console.log('FilePond has initialized')\\n// }\\n\\nfunction handleProcessedFile(error, file) {\\n  if (error) {\\n    console.log('FilePond processed file error:', error);\\n    return;\\n  }\\n  emit('reloadImage')\\n\\n  // const response = JSON.parse(file.serverId)\\n  // emit('imageUploaded', response)\\n}\\n\\n\\n</script>\\n\\n<style scoped>\\n.checkbox-container {\\n  display: flex;\\n  align-items: center; /* Align items vertically */\\n}\\n\\n.checkbox {\\n  margin-right: 8px; /* Space between the checkbox and the label */\\n}\\n</style>\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".fade-enter-active,.fade-leave-active{transition:opacity .5s}.fade-enter,.fade-leave-to{opacity:0}.toggle-button{background-color:#4a90e2;border-radius:.25rem;color:#fff;padding:.5rem 1rem;transition:background-color .3s ease}.toggle-button:hover{background-color:#357ab8}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/Pages/Profile/Partials/UpdateNewsPersonSettings.vue\"],\"names\":[],\"mappings\":\"AA6QA,sCACE,sBACF,CAEA,2BAEE,SACF,CAEA,eACE,wBAAyB,CAGzB,oBAAsB,CAFtB,UAAY,CACZ,kBAAoB,CAEpB,oCACF,CAEA,qBACE,wBACF\",\"sourcesContent\":[\"<template>\\n  <JetFormSection @submitted=\\\"updateNewsPersonSettings\\\">\\n    <template #title>\\n      News Profile Settings<br><span class=\\\"text-yellow-500 tracking-wide\\\">(news people only)</span>\\n    </template>\\n\\n    <template #description>\\n      Here you can customize your news profile settings. Adjust visibility preferences, manage notification settings,\\n      and update other personal options to tailor how you interact with the platform and how others see your profile.\\n    </template>\\n\\n    <template #form>\\n      <!-- List Profile Roles -->\\n      <div class=\\\"col-span-6 sm:col-span-4\\\">\\n        <h3 class=\\\"text-lg font-semibold mb-2\\\">Your News Roles</h3>\\n        <ul class=\\\"list-disc list-inside\\\">\\n          <li v-for=\\\"role in roles\\\" :key=\\\"role.id\\\">\\n            {{ role.name }}\\n          </li>\\n        </ul>\\n      </div>\\n\\n      <!-- Profile Image Section -->\\n      <div class=\\\"col-span-6 sm:col-span-4\\\">\\n        <button @click.prevent=\\\"toggleSection('profileImage')\\\" class=\\\"toggle-button\\\">\\n          Profile Image\\n        </button>\\n        <div v-show=\\\"sections.profileImage\\\" class=\\\"transition-all duration-500 ease-in-out mt-2\\\">\\n          <SingleImageWithModal v-if=\\\"image\\\"\\n                                :image=\\\"image\\\"\\n                                :key=\\\"image.id\\\"\\n                                :alt=\\\"`News Profile Image`\\\"\\n                                :class=\\\"`w-20 h-20 rounded-lg object-cover mb-6`\\\"/>\\n          <JetLabel for=\\\"news_profile_image\\\" value=\\\"Upload News Person Profile Picture (optional):\\\"/>\\n          <ImageUpload :modelType=\\\"'newsPerson'\\\"\\n                       :modelId=\\\"newsPersonId\\\"\\n                       :name=\\\"''\\\"\\n                       :maxSize=\\\"'30MB'\\\"\\n                       :fileTypes=\\\"'image/jpg, image/jpeg, image/png'\\\"\\n                       @imageUploaded=\\\"updateImage\\\"\\n          />\\n        </div>\\n      </div>\\n\\n      <!-- Biography Section -->\\n      <div class=\\\"col-span-6 sm:col-span-4\\\">\\n        <button @click.prevent=\\\"toggleSection('biography')\\\" class=\\\"toggle-button\\\">\\n          Biography\\n        </button>\\n        <div v-show=\\\"sections.biography\\\" class=\\\"transition-all duration-500 ease-in-out mt-2\\\">\\n          <JetLabel for=\\\"biography\\\" value=\\\"Biography\\\"/>\\n          <TabbableTextarea id=\\\"biography\\\" class=\\\"mt-1 block w-full\\\" v-model=\\\"form.biography\\\"/>\\n          <JetInputError :message=\\\"form.errors.biography\\\" class=\\\"mt-2\\\"/>\\n        </div>\\n      </div>\\n\\n      <!-- Contact Info Section -->\\n      <div class=\\\"col-span-6 sm:col-span-4\\\">\\n        <button @click.prevent=\\\"toggleSection('contactInfo')\\\" class=\\\"toggle-button\\\">\\n          Contact Info\\n        </button>\\n        <div v-show=\\\"sections.contactInfo\\\" class=\\\"transition-all duration-500 ease-in-out mt-2\\\">\\n          <JetLabel for=\\\"contact_info\\\" value=\\\"Contact Info\\\"/>\\n          <TabbableTextarea id=\\\"contact_info\\\" class=\\\"mt-1 block w-full\\\" v-model=\\\"form.contact_info\\\"/>\\n          <JetInputError :message=\\\"form.errors.contact_info\\\" class=\\\"mt-2\\\"/>\\n        </div>\\n      </div>\\n\\n      <!-- Other Details Section -->\\n      <div class=\\\"col-span-6 sm:col-span-4\\\">\\n        <button @click.prevent=\\\"toggleSection('otherDetails')\\\" class=\\\"toggle-button\\\">\\n          Other Details\\n        </button>\\n        <div v-show=\\\"sections.otherDetails\\\" class=\\\"transition-all duration-500 ease-in-out mt-2\\\">\\n          <JetLabel for=\\\"other_details\\\" value=\\\"Other Details\\\"/>\\n          <TabbableTextarea id=\\\"other_details\\\" class=\\\"mt-1 block w-full\\\" v-model=\\\"form.other_details\\\"/>\\n          <JetInputError :message=\\\"form.errors.other_details\\\" class=\\\"mt-2\\\"/>\\n        </div>\\n      </div>\\n\\n      <!-- Social Media Section -->\\n      <div class=\\\"col-span-6 sm:col-span-4\\\">\\n        <button @click.prevent=\\\"toggleSection('socialMedia')\\\" class=\\\"toggle-button\\\">\\n          Social Media\\n        </button>\\n        <div v-show=\\\"sections.socialMedia\\\" class=\\\"transition-all duration-500 ease-in-out mt-2\\\">\\n          <JetLabel for=\\\"facebook\\\" value=\\\"Facebook\\\"/>\\n          <JetInput id=\\\"facebook\\\" type=\\\"text\\\" class=\\\"mt-1 block w-full\\\" v-model=\\\"form.social_media.facebook\\\"/>\\n          <JetInputError :message=\\\"form.errors.social_media?.facebook\\\" class=\\\"mt-2\\\"/>\\n\\n          <JetLabel for=\\\"twitter\\\" value=\\\"X (Twitter)\\\" class=\\\"mt-4\\\"/>\\n          <JetInput id=\\\"twitter\\\" type=\\\"text\\\" class=\\\"mt-1 block w-full\\\" v-model=\\\"form.social_media.twitter\\\"/>\\n          <JetInputError :message=\\\"form.errors.social_media?.twitter\\\" class=\\\"mt-2\\\"/>\\n\\n          <JetLabel for=\\\"instagram\\\" value=\\\"Instagram\\\" class=\\\"mt-4\\\"/>\\n          <JetInput id=\\\"instagram\\\" type=\\\"text\\\" class=\\\"mt-1 block w-full\\\" v-model=\\\"form.social_media.instagram\\\"/>\\n          <JetInputError :message=\\\"form.errors.social_media?.instagram\\\" class=\\\"mt-2\\\"/>\\n\\n          <JetLabel for=\\\"linkedin\\\" value=\\\"LinkedIn\\\" class=\\\"mt-4\\\"/>\\n          <JetInput id=\\\"linkedin\\\" type=\\\"text\\\" class=\\\"mt-1 block w-full\\\" v-model=\\\"form.social_media.linkedin\\\"/>\\n          <JetInputError :message=\\\"form.errors.social_media?.linkedin\\\" class=\\\"mt-2\\\"/>\\n\\n          <JetLabel for=\\\"snapchat\\\" value=\\\"Snapchat\\\" class=\\\"mt-4\\\"/>\\n          <JetInput id=\\\"snapchat\\\" type=\\\"text\\\" class=\\\"mt-1 block w-full\\\" v-model=\\\"form.social_media.snapchat\\\"/>\\n          <JetInputError :message=\\\"form.errors.social_media?.snapchat\\\" class=\\\"mt-2\\\"/>\\n\\n          <JetLabel for=\\\"discord\\\" value=\\\"Discord\\\" class=\\\"mt-4\\\"/>\\n          <JetInput id=\\\"discord\\\" type=\\\"text\\\" class=\\\"mt-1 block w-full\\\" v-model=\\\"form.social_media.discord\\\"/>\\n          <JetInputError :message=\\\"form.errors.social_media?.discord\\\" class=\\\"mt-2\\\"/>\\n\\n          <JetLabel for=\\\"substack\\\" value=\\\"Substack\\\" class=\\\"mt-4\\\"/>\\n          <JetInput id=\\\"substack\\\" type=\\\"text\\\" class=\\\"mt-1 block w-full\\\" v-model=\\\"form.social_media.substack\\\"/>\\n          <JetInputError :message=\\\"form.errors.social_media?.substack\\\" class=\\\"mt-2\\\"/>\\n        </div>\\n      </div>\\n    </template>\\n\\n    <template #actions>\\n      <JetActionMessage :on=\\\"savedMessage\\\" class=\\\"mr-3\\\">\\n        <span class=\\\"text-green-500\\\">Saved.</span>\\n      </JetActionMessage>\\n\\n      <JetButton :class=\\\"{ 'opacity-25': form.processing }\\\" :disabled=\\\"form.processing\\\">\\n        Save\\n      </JetButton>\\n    </template>\\n  </JetFormSection>\\n</template>\\n\\n<script setup>\\nimport { computed, onMounted, reactive, ref, watch } from 'vue'\\nimport { router } from '@inertiajs/vue3'\\nimport { usePage } from '@inertiajs/vue3'\\nimport { Link, useForm } from '@inertiajs/vue3'\\nimport JetButton from '@/Jetstream/Button.vue'\\nimport JetFormSection from '@/Jetstream/FormSection.vue'\\nimport JetInput from '@/Jetstream/Input.vue'\\nimport JetInputError from '@/Jetstream/InputError.vue'\\nimport JetLabel from '@/Jetstream/Label.vue'\\nimport JetActionMessage from '@/Jetstream/ActionMessage.vue'\\nimport JetSecondaryButton from '@/Jetstream/SecondaryButton.vue'\\nimport ImageUpload from '@/Components/Global/Uploaders/ImageUpload.vue'\\nimport TabbableTextarea from '@/Components/Global/TextEditor/TabbableTextarea.vue'\\nimport SingleImageWithModal from '@/Components/Global/Multimedia/SingleImageWithModal.vue'\\n\\nconst props = usePage().props\\nconst savedMessage = ref(false)\\nconst newsPersonId = Number(props.user.newsPersonId)\\nconst newsPersonSlug = props.user.newsPersonSlug\\n\\nconst socialMedia = reactive({\\n  profile_is_public: null, // Default value until fetched from server\\n})\\n\\nlet roles = reactive([])\\n\\n// Use reactive for the image object\\nlet image = ref()\\n\\n// Initialize the form with useForm, include initial settings possibly coming from props\\nconst form = useForm({\\n  biography: '',\\n  contact_info: '',\\n  other_details: '',\\n  social_media: {\\n    facebook: '',\\n    twitter: '',\\n    instagram: '',\\n    linkedin: '',\\n    snapchat: '',\\n    discord: '',\\n    substack: '',\\n  },\\n})\\n\\nconst fetchNewsPersonSettings = async () => {\\n  try {\\n    console.log(`Fetching settings for News Person ID: ${newsPersonId}`) // Debug log\\n    const response = await axios.get(`/api/news/news-person-fetch-settings/${newsPersonSlug}`)\\n    const data = response.data\\n    image = data.image\\n    roles.splice(0, roles.length, ...data.roles || [])\\n    form.biography = data.biography\\n    form.contact_info = data.contact_info\\n    form.other_details = data.other_details\\n    form.social_media.facebook = data.social_media.facebook\\n    form.social_media.twitter = data.social_media.twitter\\n    form.social_media.instagram = data.social_media.instagram\\n    form.social_media.linkedin = data.social_media.linkedin\\n    form.social_media.snapchat = data.social_media.snapchat\\n    form.social_media.discord = data.social_media.discord\\n    form.social_media.substack = data.social_media.substack\\n    console.log('News Person Settings fetched successfully.')\\n  } catch (error) {\\n    console.error('Failed to fetch News Person settings:', error)\\n    // Handle loading state or display error message in UI as needed\\n  }\\n}\\n\\n// Fetch settings immediately when the component is created/mounted\\nonMounted(fetchNewsPersonSettings)\\n\\nconst updateNewsPersonSettings = () => {\\n  form.patch(route('newsPerson.update', newsPersonSlug), {\\n    onSuccess: (response) => {\\n      console.log('Settings updated successfully!', response.message)\\n      savedMessage.value = true // Update local data to show message\\n      setTimeout(() => {\\n        savedMessage.value = false  // Optionally clear the message after a few seconds\\n      }, 3000)\\n    },\\n    onFinish: () => {\\n      // form.reset('settings')  // Reset the settings field after successful update\\n      // console.log('Form has been reset.')\\n    },\\n    onError: (errors) => console.error(\\\"Update errors:\\\", errors),\\n    preserveScroll: true,\\n    errorBag: 'updateNewsPersonSettings'\\n  })\\n}\\n\\n// Watch for changes to the image object and log changes\\nwatch(() => image, (newImage) => {\\n  console.log('Image updated:', newImage)\\n}, { deep: true })\\n\\n// Function to handle image updates\\nconst updateImage = (newImage) => {\\n  console.log('Image uploaded successfully:', newImage)\\n  Object.assign(image, newImage)  // Use Object.assign to ensure reactivity\\n}\\n\\nconst removeImage = async () => {\\n  try {\\n    await axios.post('/api/remove-image', {\\n      modelId: newsPersonId,\\n      modelType: 'newsPerson',\\n      imageId: image.id,\\n    })\\n    image = null\\n    notificationStore.setToastNotification('Image removed.', 'info')\\n  } catch (error) {\\n    console.error('Error removing image:', error)\\n  }\\n}\\n\\n// watch(() => image, (newValue) => {\\n//   image = newValue;\\n// }, { immediate: true });\\n\\n// Collapsible sections state\\nconst sections = reactive({\\n  profileImage: false,\\n  biography: false,\\n  contactInfo: false,\\n  otherDetails: false,\\n  socialMedia: false,\\n})\\n\\nconst toggleSection = (section) => {\\n  const currentState = sections[section]\\n  Object.keys(sections).forEach(key => {\\n    sections[key] = false\\n  })\\n  sections[section] = !currentState\\n}\\n</script>\\n\\n<style>\\n.fade-enter-active, .fade-leave-active {\\n  transition: opacity 0.5s;\\n}\\n\\n.fade-enter, .fade-leave-to /* .fade-leave-active in <2.1.8 */\\n{\\n  opacity: 0;\\n}\\n\\n.toggle-button {\\n  background-color: #4a90e2;\\n  color: white;\\n  padding: 0.5rem 1rem;\\n  border-radius: 0.25rem;\\n  transition: background-color 0.3s ease;\\n}\\n\\n.toggle-button:hover {\\n  background-color: #357ab8;\\n}\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import script from \"./SingleImageWithModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./SingleImageWithModal.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n    <!-- Placeholder URL Image -->\n    <img v-if=\"image && image?.placeholder_url\"\n         :src=\"image?.placeholder_url\"\n         :alt=\"alt\"\n         :class=\"props.class\"\n         class=\"hover:cursor-pointer\"\n         @click=\"setImage(image.placeholder_url, alt)\" />\n\n    <!-- Storage Image -->\n    <img v-if=\"image && !image?.folder && !image?.placeholder_url\"\n         :src=\"'/storage/images/' + image?.name\"\n         :alt=\"alt\"\n         :class=\"props.class\"\n         class=\"hover:cursor-pointer\"\n         @click=\"setImage('/storage/images/' + image.name, alt)\" />\n\n    <!-- CDN Image -->\n    <img v-if=\"image && image?.folder && !image?.placeholder_url\"\n         :src=\"image?.cdn_endpoint + image?.cloud_folder + image?.folder + '/' + image?.name\"\n         :alt=\"alt\"\n         :class=\"props.class\"\n         class=\"hover:cursor-pointer\"\n         @click=\"setImage(image.cdn_endpoint + image.cloud_folder + image.folder + '/' + image.name, alt)\" />\n  </div>\n</template>\n\n<script setup>\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\n\nlet props = defineProps({\n  image: Object,\n  placeholder: String,\n  class: String,\n  alt: String,\n})\n\nconst appSettingStore = useAppSettingStore()\n\nconst setImage = (imageUrl, imageAlt) => {\n  console.log('click')\n  appSettingStore.imageLightboxModal.imageUrl = imageUrl;\n  appSettingStore.imageLightboxModal.imageAlt = imageAlt;\n  appSettingStore.showImageLightboxModal = true\n}\n</script>\n","import script from \"./TabbableTextarea.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TabbableTextarea.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n<!--    <textarea-->\n<!--        @keydown.tab.prevent=\"onTabPress\"-->\n<!--        @keyup=\"emit('update:modelValue', $event.target.value)\"-->\n<!--        v-text=\"modelValue\"-->\n<!--        :placeholder=\"placeholder\" />-->\n  <textarea\n      @keydown.tab.prevent=\"onTabPress\"\n      @input=\"onInput\"\n      :value=\"modelValue\"\n      :placeholder=\"placeholder\"\n      class=\"textarea textarea-bordered text-black bg-white dark:bg-gray-800 dark:text-white\"\n  />\n</template>\n\n<script setup>\ndefineProps({\n  modelValue: String,\n  placeholder: String\n});\n\nconst emit = defineEmits(['update:modelValue']);\n// let emit = defineEmits(['update:modelValue']);\n\nconst onInput = (event) => {\n  emit('update:modelValue', event.target.value);\n};\n\nfunction onTabPress(e) {\n  let textarea = e.target;\n\n  // get caret position/selection\n  let val = textarea.value,\n      start = textarea.selectionStart,\n      end = textarea.selectionEnd;\n\n  // set textarea value to: text before caret + tab + text after caret\n  textarea.value = val.substring(0, start) + \"\\t\" + val.substring(end);\n\n  // put caret at right position again\n  textarea.selectionStart = textarea.selectionEnd = start + 1;\n}\n\n</script>\n","<template>\n  <div class=\"\">\n    <div class=\"max-full mx-auto mt-2 mb-6 bg-gray-200 p-6 text-black\">\n      <h2 class=\"text-xl font-semibold\">{{ name }}</h2>\n      <ul class=\"pb-4\">\n        <li>Max File Size: <span class=\"text-orange-400\">{{ maxSize }}</span></li>\n        <li>File Types accepted: <span class=\"text-orange-400\">{{ fileTypes }}</span></li>\n      </ul>\n\n      <div class=\"checkbox-container mb-4\">\n        <input type=\"checkbox\" id=\"removeExif\" v-model=\"removeExif\" class=\"checkbox checkbox-md\">\n        <label for=\"removeExif\" class=\"checkbox-label\">Remove EXIF data</label>\n      </div>\n\n      <file-pond\n          name=\"image\"\n          ref=\"pond\"\n          class-name=\"my-pond\"\n          allow-multiple=\"false\"\n          label-idle=\"Click to choose file, or drag here...\"\n          :server=\"`/api/image-upload?modelType=${props.modelType}&modelId=${props.modelId}&removeExif=${removeExif.value}`\"\n          accepted-file-types=\"image/jpeg, image/png\"\n          @init=\"filepondInitialized\"\n          @processfile=\"handleProcessedFile\"\n          :max-file-size=\"maxSize\"\n          allowRemove=\"false\"\n          allowRevert=\"false\"\n      />\n    </div>\n  </div>\n\n</template>\n\n<script setup>\nimport vueFilePond from 'vue-filepond'\nimport FilePondPluginFileValidateType from 'filepond-plugin-file-validate-type'\nimport FilePondPluginFileValidateSize from 'filepond-plugin-file-validate-size'\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview'\nimport 'filepond/dist/filepond.min.css'\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.min.css'\nimport { ref } from 'vue'\n\nconst props = defineProps({\n  name: String,\n  metadataKey: String,\n  metadataValue: String,\n  modelType: {\n    type: String,\n    default: null\n  },\n  modelId: {\n    type: Number,\n    default: null\n  },\n  maxSize: String,\n  fileTypes: String,\n})\n\n// const myFiles = ref([''])\n\nconst emit = defineEmits(['reloadImage', 'imageUploaded'])\n\nconst FilePond = vueFilePond(\n    FilePondPluginFileValidateType,\n    FilePondPluginFileValidateSize,\n    FilePondPluginImagePreview,\n)\n\n// Define reactive variables\nconst removeExif = ref(false)\nconst maxSize = ref('30MB')\nconst fileTypes = ref(['image/png', 'image/jpeg'])\n// const modelType = 'yourModelType'; // Replace with your actual model type\n// const modelId = 'yourModelId'; // Replace with your actual model ID\n\nfunction filepondInitialized() {\n  console.log('Filepond is ready!')\n}\n//\n// function handleFilePondInit() {\n//   console.log('FilePond has initialized')\n// }\n\nfunction handleProcessedFile(error, file) {\n  if (error) {\n    console.log('FilePond processed file error:', error);\n    return;\n  }\n  emit('reloadImage')\n\n  // const response = JSON.parse(file.serverId)\n  // emit('imageUploaded', response)\n}\n\n\n</script>\n\n<style scoped>\n.checkbox-container {\n  display: flex;\n  align-items: center; /* Align items vertically */\n}\n\n.checkbox {\n  margin-right: 8px; /* Space between the checkbox and the label */\n}\n</style>","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-10.use[1]!../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-10.use[2]!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./ImageUpload.vue?vue&type=style&index=0&id=95554eba&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./ImageUpload.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ImageUpload.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ImageUpload.vue?vue&type=style&index=0&id=95554eba&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-95554eba\"]])\n\nexport default __exports__","import script from \"./ActionMessage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ActionMessage.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./FormSection.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./FormSection.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { computed, useSlots } from 'vue';\nimport JetSectionTitle from './SectionTitle.vue';\n\ndefineEmits(['submitted']);\n\nconst hasActions = computed(() => !! useSlots().actions);\n</script>\n\n<template>\n    <div class=\"md:grid md:grid-cols-3 md:gap-6\">\n        <JetSectionTitle>\n            <template #title>\n                <slot name=\"title\" />\n            </template>\n            <template #description>\n                <slot name=\"description\" />\n            </template>\n        </JetSectionTitle>\n\n        <div class=\"mt-5 md:mt-0 md:col-span-2\">\n            <form @submit.prevent=\"$emit('submitted')\">\n                <div\n                    class=\"px-4 py-5 bg-white sm:p-6 shadow\"\n                    :class=\"hasActions ? 'sm:rounded-tl-md sm:rounded-tr-md' : 'sm:rounded-md'\"\n                >\n                    <div class=\"grid grid-cols-6 gap-6\">\n                        <slot name=\"form\" />\n                    </div>\n                </div>\n\n                <div v-if=\"hasActions\" class=\"flex items-center justify-end px-4 py-3 bg-gray-50 text-right sm:px-6 shadow sm:rounded-bl-md sm:rounded-br-md\">\n                    <slot name=\"actions\" />\n                </div>\n            </form>\n        </div>\n    </div>\n</template>\n","import script from \"./Input.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Input.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { onMounted, ref } from 'vue';\n\ndefineProps({\n    modelValue: String,\n});\n\ndefineEmits(['update:modelValue']);\n\nconst input = ref(null);\n\nonMounted(() => {\n    if (input.value.hasAttribute('autofocus')) {\n        input.value.focus();\n    }\n});\n\ndefineExpose({ focus: () => input.value.focus() });\n</script>\n\n<template>\n    <input\n        ref=\"input\"\n        class=\"border-2 border-gray-300 focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50 rounded-md shadow-sm text-black bg-white dark:bg-gray-800 dark:text-white\"\n        :value=\"modelValue\"\n        @input=\"$emit('update:modelValue', $event.target.value)\"\n    >\n</template>\n","import script from \"./InputError.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./InputError.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./Label.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Label.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./SecondaryButton.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./SecondaryButton.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <div class=\"md:col-span-1 flex justify-between\">\n        <div class=\"px-4 sm:px-0\">\n            <h3 class=\"text-lg font-medium text-gray-100\">\n                <slot name=\"title\" />\n            </h3>\n\n            <p class=\"mt-1 text-sm text-gray-300\">\n                <slot name=\"description\" />\n            </p>\n        </div>\n\n        <div class=\"px-4 sm:px-0\">\n            <slot name=\"aside\" />\n        </div>\n    </div>\n</template>\n","import { render } from \"./SectionTitle.vue?vue&type=template&id=80f22ac0\"\nconst script = {}\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <JetFormSection @submitted=\"updateNewsPersonSettings\">\n    <template #title>\n      News Profile Settings<br><span class=\"text-yellow-500 tracking-wide\">(news people only)</span>\n    </template>\n\n    <template #description>\n      Here you can customize your news profile settings. Adjust visibility preferences, manage notification settings,\n      and update other personal options to tailor how you interact with the platform and how others see your profile.\n    </template>\n\n    <template #form>\n      <!-- List Profile Roles -->\n      <div class=\"col-span-6 sm:col-span-4\">\n        <h3 class=\"text-lg font-semibold mb-2\">Your News Roles</h3>\n        <ul class=\"list-disc list-inside\">\n          <li v-for=\"role in roles\" :key=\"role.id\">\n            {{ role.name }}\n          </li>\n        </ul>\n      </div>\n\n      <!-- Profile Image Section -->\n      <div class=\"col-span-6 sm:col-span-4\">\n        <button @click.prevent=\"toggleSection('profileImage')\" class=\"toggle-button\">\n          Profile Image\n        </button>\n        <div v-show=\"sections.profileImage\" class=\"transition-all duration-500 ease-in-out mt-2\">\n          <SingleImageWithModal v-if=\"image\"\n                                :image=\"image\"\n                                :key=\"image.id\"\n                                :alt=\"`News Profile Image`\"\n                                :class=\"`w-20 h-20 rounded-lg object-cover mb-6`\"/>\n          <JetLabel for=\"news_profile_image\" value=\"Upload News Person Profile Picture (optional):\"/>\n          <ImageUpload :modelType=\"'newsPerson'\"\n                       :modelId=\"newsPersonId\"\n                       :name=\"''\"\n                       :maxSize=\"'30MB'\"\n                       :fileTypes=\"'image/jpg, image/jpeg, image/png'\"\n                       @imageUploaded=\"updateImage\"\n          />\n        </div>\n      </div>\n\n      <!-- Biography Section -->\n      <div class=\"col-span-6 sm:col-span-4\">\n        <button @click.prevent=\"toggleSection('biography')\" class=\"toggle-button\">\n          Biography\n        </button>\n        <div v-show=\"sections.biography\" class=\"transition-all duration-500 ease-in-out mt-2\">\n          <JetLabel for=\"biography\" value=\"Biography\"/>\n          <TabbableTextarea id=\"biography\" class=\"mt-1 block w-full\" v-model=\"form.biography\"/>\n          <JetInputError :message=\"form.errors.biography\" class=\"mt-2\"/>\n        </div>\n      </div>\n\n      <!-- Contact Info Section -->\n      <div class=\"col-span-6 sm:col-span-4\">\n        <button @click.prevent=\"toggleSection('contactInfo')\" class=\"toggle-button\">\n          Contact Info\n        </button>\n        <div v-show=\"sections.contactInfo\" class=\"transition-all duration-500 ease-in-out mt-2\">\n          <JetLabel for=\"contact_info\" value=\"Contact Info\"/>\n          <TabbableTextarea id=\"contact_info\" class=\"mt-1 block w-full\" v-model=\"form.contact_info\"/>\n          <JetInputError :message=\"form.errors.contact_info\" class=\"mt-2\"/>\n        </div>\n      </div>\n\n      <!-- Other Details Section -->\n      <div class=\"col-span-6 sm:col-span-4\">\n        <button @click.prevent=\"toggleSection('otherDetails')\" class=\"toggle-button\">\n          Other Details\n        </button>\n        <div v-show=\"sections.otherDetails\" class=\"transition-all duration-500 ease-in-out mt-2\">\n          <JetLabel for=\"other_details\" value=\"Other Details\"/>\n          <TabbableTextarea id=\"other_details\" class=\"mt-1 block w-full\" v-model=\"form.other_details\"/>\n          <JetInputError :message=\"form.errors.other_details\" class=\"mt-2\"/>\n        </div>\n      </div>\n\n      <!-- Social Media Section -->\n      <div class=\"col-span-6 sm:col-span-4\">\n        <button @click.prevent=\"toggleSection('socialMedia')\" class=\"toggle-button\">\n          Social Media\n        </button>\n        <div v-show=\"sections.socialMedia\" class=\"transition-all duration-500 ease-in-out mt-2\">\n          <JetLabel for=\"facebook\" value=\"Facebook\"/>\n          <JetInput id=\"facebook\" type=\"text\" class=\"mt-1 block w-full\" v-model=\"form.social_media.facebook\"/>\n          <JetInputError :message=\"form.errors.social_media?.facebook\" class=\"mt-2\"/>\n\n          <JetLabel for=\"twitter\" value=\"X (Twitter)\" class=\"mt-4\"/>\n          <JetInput id=\"twitter\" type=\"text\" class=\"mt-1 block w-full\" v-model=\"form.social_media.twitter\"/>\n          <JetInputError :message=\"form.errors.social_media?.twitter\" class=\"mt-2\"/>\n\n          <JetLabel for=\"instagram\" value=\"Instagram\" class=\"mt-4\"/>\n          <JetInput id=\"instagram\" type=\"text\" class=\"mt-1 block w-full\" v-model=\"form.social_media.instagram\"/>\n          <JetInputError :message=\"form.errors.social_media?.instagram\" class=\"mt-2\"/>\n\n          <JetLabel for=\"linkedin\" value=\"LinkedIn\" class=\"mt-4\"/>\n          <JetInput id=\"linkedin\" type=\"text\" class=\"mt-1 block w-full\" v-model=\"form.social_media.linkedin\"/>\n          <JetInputError :message=\"form.errors.social_media?.linkedin\" class=\"mt-2\"/>\n\n          <JetLabel for=\"snapchat\" value=\"Snapchat\" class=\"mt-4\"/>\n          <JetInput id=\"snapchat\" type=\"text\" class=\"mt-1 block w-full\" v-model=\"form.social_media.snapchat\"/>\n          <JetInputError :message=\"form.errors.social_media?.snapchat\" class=\"mt-2\"/>\n\n          <JetLabel for=\"discord\" value=\"Discord\" class=\"mt-4\"/>\n          <JetInput id=\"discord\" type=\"text\" class=\"mt-1 block w-full\" v-model=\"form.social_media.discord\"/>\n          <JetInputError :message=\"form.errors.social_media?.discord\" class=\"mt-2\"/>\n\n          <JetLabel for=\"substack\" value=\"Substack\" class=\"mt-4\"/>\n          <JetInput id=\"substack\" type=\"text\" class=\"mt-1 block w-full\" v-model=\"form.social_media.substack\"/>\n          <JetInputError :message=\"form.errors.social_media?.substack\" class=\"mt-2\"/>\n        </div>\n      </div>\n    </template>\n\n    <template #actions>\n      <JetActionMessage :on=\"savedMessage\" class=\"mr-3\">\n        <span class=\"text-green-500\">Saved.</span>\n      </JetActionMessage>\n\n      <JetButton :class=\"{ 'opacity-25': form.processing }\" :disabled=\"form.processing\">\n        Save\n      </JetButton>\n    </template>\n  </JetFormSection>\n</template>\n\n<script setup>\nimport { computed, onMounted, reactive, ref, watch } from 'vue'\nimport { router } from '@inertiajs/vue3'\nimport { usePage } from '@inertiajs/vue3'\nimport { Link, useForm } from '@inertiajs/vue3'\nimport JetButton from '@/Jetstream/Button.vue'\nimport JetFormSection from '@/Jetstream/FormSection.vue'\nimport JetInput from '@/Jetstream/Input.vue'\nimport JetInputError from '@/Jetstream/InputError.vue'\nimport JetLabel from '@/Jetstream/Label.vue'\nimport JetActionMessage from '@/Jetstream/ActionMessage.vue'\nimport JetSecondaryButton from '@/Jetstream/SecondaryButton.vue'\nimport ImageUpload from '@/Components/Global/Uploaders/ImageUpload.vue'\nimport TabbableTextarea from '@/Components/Global/TextEditor/TabbableTextarea.vue'\nimport SingleImageWithModal from '@/Components/Global/Multimedia/SingleImageWithModal.vue'\n\nconst props = usePage().props\nconst savedMessage = ref(false)\nconst newsPersonId = Number(props.user.newsPersonId)\nconst newsPersonSlug = props.user.newsPersonSlug\n\nconst socialMedia = reactive({\n  profile_is_public: null, // Default value until fetched from server\n})\n\nlet roles = reactive([])\n\n// Use reactive for the image object\nlet image = ref()\n\n// Initialize the form with useForm, include initial settings possibly coming from props\nconst form = useForm({\n  biography: '',\n  contact_info: '',\n  other_details: '',\n  social_media: {\n    facebook: '',\n    twitter: '',\n    instagram: '',\n    linkedin: '',\n    snapchat: '',\n    discord: '',\n    substack: '',\n  },\n})\n\nconst fetchNewsPersonSettings = async () => {\n  try {\n    console.log(`Fetching settings for News Person ID: ${newsPersonId}`) // Debug log\n    const response = await axios.get(`/api/news/news-person-fetch-settings/${newsPersonSlug}`)\n    const data = response.data\n    image = data.image\n    roles.splice(0, roles.length, ...data.roles || [])\n    form.biography = data.biography\n    form.contact_info = data.contact_info\n    form.other_details = data.other_details\n    form.social_media.facebook = data.social_media.facebook\n    form.social_media.twitter = data.social_media.twitter\n    form.social_media.instagram = data.social_media.instagram\n    form.social_media.linkedin = data.social_media.linkedin\n    form.social_media.snapchat = data.social_media.snapchat\n    form.social_media.discord = data.social_media.discord\n    form.social_media.substack = data.social_media.substack\n    console.log('News Person Settings fetched successfully.')\n  } catch (error) {\n    console.error('Failed to fetch News Person settings:', error)\n    // Handle loading state or display error message in UI as needed\n  }\n}\n\n// Fetch settings immediately when the component is created/mounted\nonMounted(fetchNewsPersonSettings)\n\nconst updateNewsPersonSettings = () => {\n  form.patch(route('newsPerson.update', newsPersonSlug), {\n    onSuccess: (response) => {\n      console.log('Settings updated successfully!', response.message)\n      savedMessage.value = true // Update local data to show message\n      setTimeout(() => {\n        savedMessage.value = false  // Optionally clear the message after a few seconds\n      }, 3000)\n    },\n    onFinish: () => {\n      // form.reset('settings')  // Reset the settings field after successful update\n      // console.log('Form has been reset.')\n    },\n    onError: (errors) => console.error(\"Update errors:\", errors),\n    preserveScroll: true,\n    errorBag: 'updateNewsPersonSettings'\n  })\n}\n\n// Watch for changes to the image object and log changes\nwatch(() => image, (newImage) => {\n  console.log('Image updated:', newImage)\n}, { deep: true })\n\n// Function to handle image updates\nconst updateImage = (newImage) => {\n  console.log('Image uploaded successfully:', newImage)\n  Object.assign(image, newImage)  // Use Object.assign to ensure reactivity\n}\n\nconst removeImage = async () => {\n  try {\n    await axios.post('/api/remove-image', {\n      modelId: newsPersonId,\n      modelType: 'newsPerson',\n      imageId: image.id,\n    })\n    image = null\n    notificationStore.setToastNotification('Image removed.', 'info')\n  } catch (error) {\n    console.error('Error removing image:', error)\n  }\n}\n\n// watch(() => image, (newValue) => {\n//   image = newValue;\n// }, { immediate: true });\n\n// Collapsible sections state\nconst sections = reactive({\n  profileImage: false,\n  biography: false,\n  contactInfo: false,\n  otherDetails: false,\n  socialMedia: false,\n})\n\nconst toggleSection = (section) => {\n  const currentState = sections[section]\n  Object.keys(sections).forEach(key => {\n    sections[key] = false\n  })\n  sections[section] = !currentState\n}\n</script>\n\n<style>\n.fade-enter-active, .fade-leave-active {\n  transition: opacity 0.5s;\n}\n\n.fade-enter, .fade-leave-to /* .fade-leave-active in <2.1.8 */\n{\n  opacity: 0;\n}\n\n.toggle-button {\n  background-color: #4a90e2;\n  color: white;\n  padding: 0.5rem 1rem;\n  border-radius: 0.25rem;\n  transition: background-color 0.3s ease;\n}\n\n.toggle-button:hover {\n  background-color: #357ab8;\n}\n</style>\n","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-10.use[1]!../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-10.use[2]!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./UpdateNewsPersonSettings.vue?vue&type=style&index=0&id=7cce2ed9&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./UpdateNewsPersonSettings.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./UpdateNewsPersonSettings.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./UpdateNewsPersonSettings.vue?vue&type=style&index=0&id=7cce2ed9&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["___CSS_LOADER_EXPORT___","push","module","id","props","__props","appSettingStore","useAppSettingStore","setImage","imageUrl","imageAlt","console","log","imageLightboxModal","showImageLightboxModal","emit","onInput","event","target","value","onTabPress","e","textarea","val","start","selectionStart","end","selectionEnd","substring","__emit","FilePond","vueFilePond","FilePondPluginFileValidateType","FilePondPluginFileValidateSize","FilePondPluginImagePreview","removeExif","ref","maxSize","fileTypes","filepondInitialized","handleProcessedFile","error","file","options","locals","hasActions","computed","useSlots","actions","input","onMounted","hasAttribute","focus","__expose","class","script","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_renderSlot","_ctx","$slots","_hoisted_4","_hoisted_5","usePage","savedMessage","newsPersonId","Number","user","newsPersonSlug","roles","reactive","profile_is_public","image","form","useForm","biography","contact_info","other_details","social_media","facebook","twitter","instagram","linkedin","snapchat","discord","substack","fetchNewsPersonSettings","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","data","wrap","_context","prev","next","concat","axios","get","sent","splice","apply","length","_toConsumableArray","t0","stop","arguments","updateNewsPersonSettings","patch","route","onSuccess","message","setTimeout","onFinish","onError","errors","preserveScroll","errorBag","watch","newImage","deep","updateImage","Object","assign","sections","profileImage","contactInfo","otherDetails","socialMedia","toggleSection","section","currentState","keys","forEach","key"],"sourceRoot":""}
{"version":3,"file":"js/120.js","mappings":"qIAEMA,EAAe,WAAH,MAAU,CACxBC,YAAa,EACbC,qBAAsB,GACtBC,WAAY,GACZC,gBAAiB,EACjBC,yBAA0B,GAC1BC,eAAgB,GACnB,EAEYC,GAAgBC,EAAAA,EAAAA,IAAY,aAAc,CACnDC,MAAOT,EACPU,QAAS,CACLC,MAAK,WAEDC,OAAOC,OAAOC,KAdE,CACxBb,YAAa,EACbC,qBAAsB,GACtBC,WAAY,GACZC,gBAAiB,EACjBC,yBAA0B,GAC1BC,eAAgB,IASZ,EAkBAS,uBAAsB,SAACC,EAAYC,GAC/BH,KAAKb,YAAce,EACnB,IAAME,EAAWJ,KAAKX,WAAWgB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,CAAU,IAClEF,KAAKZ,qBAAuBgB,EAAWA,EAASI,YAAc,GAC9DR,KAAKR,eAAiBY,EAAWA,EAASZ,eAAiB,GAE3DQ,KAAKS,6BAA6BN,EACtC,EACAM,6BAA4B,SAACN,GACzB,IAAMO,EAAcV,KAAKR,eAAea,MAAK,SAAAM,GAAG,OAAIA,EAAIJ,KAAOJ,CAAa,IAC5EH,KAAKV,gBAAkBoB,EAAcA,EAAYH,GAAK,GACtDP,KAAKT,yBAA2BmB,EAAcA,EAAYF,YAAc,EAC5E,GAgCJI,QAAS,CACL,G","sources":["webpack:///./resources/js/Stores/MovieStore.js"],"sourcesContent":["import { defineStore } from \"pinia\";\n\nconst initialState = () => ({\n    category_id: 0,\n    category_description: '',\n    categories: [],\n    sub_category_id: 0,\n    sub_category_description: '',\n    sub_categories: [],\n})\n\nexport const useMovieStore = defineStore('movieStore', {\n    state: initialState,\n    actions: {\n        reset() {\n            // Reset the store to its original state (clear all data)\n            Object.assign(this, initialState());\n        },\n        // initializeDescriptions(categories, categoryId, subCategoryId) {\n        //     this.categories = categories\n        //     this.category_id = categoryId\n        //     this.sub_category_id = subCategoryId\n        //     console.log(\"Initializing Descriptions with Category ID:\", this.category_id, \"Subcategory ID:\", this.sub_category_id);\n        //     const category = this.categories.find(cat => cat.id === this.category_id);\n        //     console.log(\"Found Category:\", category);\n        //     // this.category_id = category ? category.id : '';\n        //     this.category_description = category ? category.description : '';\n        //     // this.sub_category_id = subCategoryId;\n        //     this.sub_categories = category ? category.sub_categories : [];\n        //     console.log(\"Updated sub_category_id to:\", this.sub_category_id);\n        //\n        //     this.updateSubCategoryDescription(subCategoryId);\n        // },\n\n\n        initializeDescriptions(categoryId, subCategoryId) {\n            this.category_id = categoryId;\n            const category = this.categories.find(cat => cat.id === categoryId);\n            this.category_description = category ? category.description : '';\n            this.sub_categories = category ? category.sub_categories : [];\n\n            this.updateSubCategoryDescription(subCategoryId);\n        },\n        updateSubCategoryDescription(subCategoryId) {\n            const subCategory = this.sub_categories.find(sub => sub.id === subCategoryId);\n            this.sub_category_id = subCategory ? subCategory.id : '';\n            this.sub_category_description = subCategory ? subCategory.description : '';\n        }\n\n\n\n\n\n\n\n        // initializeDescriptions(categoryId, subCategoryId) {\n        //     this.category_id = categoryId\n        //     this.sub_category_id = subCategoryId\n        //     console.log(\"Initializing Descriptions with Category ID:\", this.category_id, \"Subcategory ID:\", this.sub_category_id);\n        //     const category = this.categories.find(cat => cat.id === this.category_id);\n        //     console.log(\"Found Category:\", category);\n        //     this.category_id = category ? category.id : '';\n        //     this.category_description = category ? category.description : '';\n        //         this.sub_category_id = subCategoryId;\n        //         this.sub_categories = category ? category.sub_categories : [];\n        //         console.log(\"Updated sub_category_id to:\", this.sub_category_id);\n        //     // // this.sub_category_id = subCategoryId;\n        //     // this.sub_categories = category ? category.sub_categories : [];\n        //     // console.log(\"Updated sub_category_id to:\", this.sub_category_id);\n        //     //\n        //     this.updateSubCategoryDescription(this.sub_category_id);\n        // },\n        // updateSubCategoryDescription(subCategoryId) {\n        //     const subCategory = this.sub_categories.find(sub => sub.id === subCategoryId);\n        //     this.sub_category_id = subCategory ? subCategory.id : '';\n        //     this.sub_category_description = subCategory ? subCategory.description : '';\n        // }\n    },\n\n    getters: {\n        //\n    }\n});\n"],"names":["initialState","category_id","category_description","categories","sub_category_id","sub_category_description","sub_categories","useMovieStore","defineStore","state","actions","reset","Object","assign","this","initializeDescriptions","categoryId","subCategoryId","category","find","cat","id","description","updateSubCategoryDescription","subCategory","sub","getters"],"sourceRoot":""}
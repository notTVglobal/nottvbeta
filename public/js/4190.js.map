{"version":3,"file":"js/4190.js","mappings":"iKAMO,SAASA,EAAaC,GACzB,IAAMC,GAAYC,EAAAA,EAAAA,gBACZC,GAAkBC,EAAAA,EAAAA,sBAClBC,GAAmBC,EAAAA,EAAAA,uBAEzBH,EAAgBI,YAAcP,EAC9BG,EAAgBK,kBAAmB,EACnCL,EAAgBM,cAAe,EAG3BR,EAAUS,UAAYC,OAAOC,WAAa,MAEnCT,EAAgBU,SADvBV,EAAgBW,IAAM,GAIM,IAAxBX,EAAgBW,MAChBX,EAAgBW,IAAM,GAG1BX,EAAgBY,gBAAiB,GAGrCV,EAAiBW,oBAEbb,EAAgBc,aAChBd,EAAgBc,YAAa,EAC7Bd,EAAgBe,iBAAkB,EAClCP,OAAOQ,SAASC,UAWhBC,EAAAA,GAAOC,GAAG,YAAY,SAACC,GAEftB,EAAUS,UAAYC,OAAOC,WAAa,MAAQT,EAAgBU,SAClEV,EAAgBW,IAAM,EAEM,IAAxBX,EAAgBW,MAChBX,EAAgBW,IAAM,GAIqB,KAA3BH,OAAOQ,SAASK,SAChBrB,EAAgBsB,mBACpCC,uBAAsB,WAClB,IAAMC,EAASC,SAASC,eAAe,UACnCF,EACAA,EAAOG,eAAe,CAACC,SAAU,SAEjCpB,OAAOqB,SAAS,EAAG,EAE3B,IAEJ7B,EAAgBsB,mBAAoB,CACxC,IAEJtB,EAAgB8B,aAChB9B,EAAgBY,gBAAiB,EACjCZ,EAAgB+B,UAAW,GAI3BC,EAAAA,EAAAA,QACI,kBAAMhC,EAAgBiC,aAAa,IACnC,SAACC,GAEOlC,EAAgBW,IADhBuB,EACsB,EAEA,CAE9B,GACA,CAAEC,WAAW,GAGrB,C,sECnFIC,E,MAA0B,GAA4B,KAE1DA,EAAwBC,KAAK,CAACC,EAAOC,GAAI,iEAAkE,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,8CAA8C,MAAQ,GAAG,SAAW,0CAA0C,eAAiB,CAAC,8tDAA+qD,WAAa,MAEl8D,S,oRCeA3C,EAAAA,EAAAA,GAAa,YAQb4C,EAAAA,EAAAA,YAAU,WACRC,QAAQC,IAAI,iBACd,I,yMC7BIC,EAAU,CAEdA,OAAiB,OACjBA,WAAoB,GAEP,IAAI,IAASA,GAIX,IAAQC,OCNvB,MAEA,GAFiC,E,SAAA,GAAgB,EAAQ,CAAC,CAAC,YAAY,oB","sources":["webpack:///./resources/js/Utilities/PageSetup.js","webpack:///./resources/js/Pages/Testing.vue?e4e5","webpack:///./resources/js/Pages/Testing.vue","webpack:///./resources/js/Pages/Testing.vue?e30d","webpack:///./resources/js/Pages/Testing.vue?3fd2"],"sourcesContent":["import { onBeforeMount, onMounted, watch } from 'vue'\nimport { useUserStore } from \"@/Stores/UserStore\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useVideoPlayerStore } from \"@/Stores/VideoPlayerStore\"\nimport { router } from '@inertiajs/vue3'\n\nexport function usePageSetup(pageName) {\n    const userStore = useUserStore()\n    const appSettingStore = useAppSettingStore()\n    const videoPlayerStore = useVideoPlayerStore()\n\n    appSettingStore.currentPage = pageName\n    appSettingStore.showFlashMessage = true\n    appSettingStore.pageIsHidden = false\n\n// PageSetup utility\n    if (userStore.isMobile || window.innerWidth < 1024) {\n        appSettingStore.ott = 0; // Close all panels on mobile devices\n    } else if (appSettingStore.fullPage) {\n        appSettingStore.ott = 0; // Default to closed in fullPage mode\n    } else {\n        if (appSettingStore.ott === 0) {\n            appSettingStore.ott = 4\n        }\n        // appSettingStore.ott = 4; // Open OttChat by default on larger screens\n        appSettingStore.showOttButtons = true;\n    }\n\n    videoPlayerStore.makeVideoTopRight()\n\n    if (appSettingStore.pageReload) {\n        appSettingStore.pageReload = false\n        appSettingStore.pageWasReloaded = true\n        window.location.reload();\n    }\n    // Check if the URL contains query strings\n\n\n    // Only scroll into view if there are no query strings\n\n        // const topDiv = document.getElementById(\"topDiv\")\n        // if (topDiv) {\n        //     topDiv.scrollIntoView()\n        // }\n        router.on('navigate', (event) => {\n            // Ensure OTT panels do not open automatically on mobile devices\n            if (userStore.isMobile || window.innerWidth < 1024 || appSettingStore.fullPage) {\n                appSettingStore.ott = 0; // Close all panels on mobile devices\n            } else {\n                if (appSettingStore.ott === 0) {\n                    appSettingStore.ott = 4\n                }\n                // appSettingStore.ott = 0; // Default to closed on larger screens\n            }\n            const hasQueryStrings = window.location.search !== '';\n            if (!hasQueryStrings || appSettingStore.shouldScrollToTop) {\n                requestAnimationFrame(() => {\n                    const topDiv = document.getElementById(\"topDiv\");\n                    if (topDiv) {\n                        topDiv.scrollIntoView({behavior: 'auto'});\n                    } else {\n                        window.scrollTo(0, 0);\n                    }\n                });\n            }\n            appSettingStore.shouldScrollToTop = false;\n        })\n    // Only update if we're not already on this page to avoid overwriting with the current URL\n    appSettingStore.setPrevUrl()\n    appSettingStore.showOttButtons = true\n    appSettingStore.noLayout = false\n\n    // router.reload()\n\n    watch(\n        () => appSettingStore.isSmallScreen,\n        (newValue) => {\n            if (newValue) {\n                appSettingStore.ott = 0;\n            } else {\n                appSettingStore.ott = 4;\n            }\n        },\n        { immediate: true } // This option ensures the watch executes immediately with the current value\n    );\n\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".divZ[data-v-21baab72]{position:absolute;top:20px;z-index:950}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/Pages/Testing.vue\"],\"names\":[],\"mappings\":\"AAyDA,uBACI,iBAAkB,CAElB,QAAS,CADT,WAGJ\",\"sourcesContent\":[\"<template>\\n    <Head title=\\\"Testing\\\" />\\n    <div>\\n<!--        <video-->\\n<!--            id=\\\"vid1\\\"-->\\n<!--            class=\\\"video-js vjs-default-skin\\\"-->\\n<!--            controls-->\\n<!--            autoplay-->\\n<!--            width=\\\"320\\\" height=\\\"132\\\"-->\\n<!--            data-setup='{ \\\"techOrder\\\": [\\\"youtube\\\"], \\\"sources\\\": [{ \\\"type\\\": \\\"video/youtube\\\", \\\"src\\\": \\\"https://www.youtube.com/watch?v=xjS6SftYQaQ\\\"}], \\\"youtube\\\": { \\\"ytControls\\\": 2 } }'-->\\n<!--        >-->\\n<!--        </video>-->\\n<!--        <button @click=\\\"videoPlayerStore.getVideoCurrentTime()\\\" class=\\\"mt-8 rounded-lg bg-blue-600 hover:bg-blue-800 text-white\\\">Get Time</button>-->\\n<!--        <div class=\\\"mt-8\\\">Time: {{videoPlayerStore.videoCurrentTime}}</div>-->\\n    </div>\\n\\n</template>\\n\\n<script setup>\\nimport {ref, onBeforeMount, watch, onBeforeUnmount, onMounted} from \\\"vue\\\"\\nimport { usePageSetup } from '@/Utilities/PageSetup'\\n\\nusePageSetup('testing')\\n\\n// onBeforeMount(() => {\\n//     userStore.scrollToTopCounter = 0;\\n// })\\n\\n// let currentTime = ref()\\n\\nonMounted(() => {\\n  console.log('onPlayerReady2')\\n})\\n\\n\\n\\n\\n// onBeforeUnmount(() => {\\n//     let videoJs = videojs(props.id)\\n//     videoJs.dispose();\\n// })\\n\\n\\n\\n// function makeVideoFullPage() {\\n//     videoPlayerStore.class = 'fullPageVideoClass'\\n//     videoPlayerStore.videoContainerClass = 'fullPageVideoContainer'\\n// }\\n//\\n// function makeVideoTopRight() {\\n//     videoPlayerStore.class = 'topRightVideoClass'\\n//     videoPlayerStore.videoContainerClass = 'topRightVideoContainer'\\n// }\\n\\n</script>\\n\\n<style scoped>\\n.divZ {\\n    position: absolute;\\n    z-index: 950;\\n    top: 20px;\\n\\n}\\n\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","<template>\n    <Head title=\"Testing\" />\n    <div>\n<!--        <video-->\n<!--            id=\"vid1\"-->\n<!--            class=\"video-js vjs-default-skin\"-->\n<!--            controls-->\n<!--            autoplay-->\n<!--            width=\"320\" height=\"132\"-->\n<!--            data-setup='{ \"techOrder\": [\"youtube\"], \"sources\": [{ \"type\": \"video/youtube\", \"src\": \"https://www.youtube.com/watch?v=xjS6SftYQaQ\"}], \"youtube\": { \"ytControls\": 2 } }'-->\n<!--        >-->\n<!--        </video>-->\n<!--        <button @click=\"videoPlayerStore.getVideoCurrentTime()\" class=\"mt-8 rounded-lg bg-blue-600 hover:bg-blue-800 text-white\">Get Time</button>-->\n<!--        <div class=\"mt-8\">Time: {{videoPlayerStore.videoCurrentTime}}</div>-->\n    </div>\n\n</template>\n\n<script setup>\nimport {ref, onBeforeMount, watch, onBeforeUnmount, onMounted} from \"vue\"\nimport { usePageSetup } from '@/Utilities/PageSetup'\n\nusePageSetup('testing')\n\n// onBeforeMount(() => {\n//     userStore.scrollToTopCounter = 0;\n// })\n\n// let currentTime = ref()\n\nonMounted(() => {\n  console.log('onPlayerReady2')\n})\n\n\n\n\n// onBeforeUnmount(() => {\n//     let videoJs = videojs(props.id)\n//     videoJs.dispose();\n// })\n\n\n\n// function makeVideoFullPage() {\n//     videoPlayerStore.class = 'fullPageVideoClass'\n//     videoPlayerStore.videoContainerClass = 'fullPageVideoContainer'\n// }\n//\n// function makeVideoTopRight() {\n//     videoPlayerStore.class = 'topRightVideoClass'\n//     videoPlayerStore.videoContainerClass = 'topRightVideoContainer'\n// }\n\n</script>\n\n<style scoped>\n.divZ {\n    position: absolute;\n    z-index: 950;\n    top: 20px;\n\n}\n\n</style>\n","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-10.use[1]!../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-10.use[2]!../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./Testing.vue?vue&type=style&index=0&id=21baab72&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./Testing.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Testing.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Testing.vue?vue&type=style&index=0&id=21baab72&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-21baab72\"]])\n\nexport default __exports__"],"names":["usePageSetup","pageName","userStore","useUserStore","appSettingStore","useAppSettingStore","videoPlayerStore","useVideoPlayerStore","currentPage","showFlashMessage","pageIsHidden","isMobile","window","innerWidth","fullPage","ott","showOttButtons","makeVideoTopRight","pageReload","pageWasReloaded","location","reload","router","on","event","search","shouldScrollToTop","requestAnimationFrame","topDiv","document","getElementById","scrollIntoView","behavior","scrollTo","setPrevUrl","noLayout","watch","isSmallScreen","newValue","immediate","___CSS_LOADER_EXPORT___","push","module","id","onMounted","console","log","options","locals"],"sourceRoot":""}
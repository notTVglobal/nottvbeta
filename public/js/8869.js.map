{"version":3,"file":"js/8869.js","mappings":"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","sources":["webpack:///./resources/js/Stores/TeamStore.js","webpack:///./resources/js/Components/Buttons/CancelButton.vue?0d53","webpack:///./resources/js/Components/Buttons/CancelButton.vue","webpack:///./resources/js/Jetstream/ValidationErrors.vue?5fdc","webpack:///./resources/js/Jetstream/ValidationErrors.vue","webpack:///./resources/js/Pages/Shows/Create.vue?091d","webpack:///./resources/js/Pages/Shows/Create.vue"],"sourcesContent":["import {defineStore} from \"pinia\";\nimport {Inertia} from \"@inertiajs/inertia\";\n\nexport let useTeamStore = defineStore('teamStore', {\n    state: () => ({\n        id: 0,\n        name: '',\n        description: '',\n        slug: '',\n        totalSpots: '',\n        memberSpots: '',\n        teamLeader: [],\n        members: [],\n        managers: [],\n        activeShow: [],\n        activeEpisode: [],\n        creators: [],\n        showModal: Boolean,\n        confirmDialog: false,\n        confirmManagerDialog: false,\n        selectedManagerName: '',\n        selectedManagerId: 0,\n        addManager: false,\n        removeManager: false,\n        deleteMemberName: '',\n        deleteMemberId: 0,\n        noteEdit: 0,\n        note: '',\n        saveNoteProcessing: Boolean,\n            // on the show episode manage page\n            // turn on the go live div\n            goLiveDisplay: false,\n        can: [],\n    }),\n\n    actions: {\n        // async fill() {\n        //     let r = await import('@/Json/team.json');\n        //     this.$state = r.default;\n        // },\n        setActiveTeam(team) {\n            this.id = team.id;\n            this.name = team.name;\n            this.description = team.description;\n            this.slug = team.slug;\n            this.totalSpots = team.totalSpots;\n            this.memberSpots = team.memberSpots;\n        },\n        setActiveShow(show) {\n            this.activeShow = show;\n        },\n        setActiveEpisode(episode) {\n            this.activeShow = episode;\n        },\n        // getCreators() {\n        //     Inertia.reload({ only: ['creators'] })\n        // },\n        deleteTeamMemberCancel() {\n            this.confirmDialog = false;\n        },\n        confirmTeamManagerCancel() {\n            this.confirmManagerDialog = false;\n        },\n        // loadTeamMembers(members){\n        //     this.members = members;\n        // }\n        deleteTeamMember() {\n            Inertia.visit(route('teams.removeTeamMember'), {\n                method: 'post',\n                data: {\n                    user_id: this.deleteMemberId,\n                    team_id: this.id,\n                    team_slug: this.slug\n                },\n            })\n        },\n        addTeamManager() {\n            Inertia.visit(route('teams.addTeamManager'), {\n                method: 'post',\n                data: {\n                    user_id: this.selectedManagerId,\n                    team_id: this.id,\n                    team_slug: this.slug\n                },\n            })\n            this.confirmManagerDialog = false;\n        },\n        removeTeamManager() {\n            Inertia.visit(route('teams.removeTeamManager'), {\n                method: 'post',\n                data: {\n                    user_id: this.selectedManagerId,\n                    team_id: this.id,\n                    team_slug: this.slug\n                },\n            })\n            this.confirmManagerDialog = false;\n        },\n        toggleGoLiveDisplay() {\n            this.goLiveDisplay = ! this.goLiveDisplay;\n        }\n    },\n\n    getters: {\n        spotsRemaining() {\n            if (this.totalSpots - this.memberSpots < 1){\n                return 0\n            }\n            return this.totalSpots - this.memberSpots;\n        },\n    }\n});\n\n\n// Another option for declaring specific data to return:\n// let data = r.default;\n//\n// import('@/Json/team.json').then(r => {\n// this.$patch({\n//     name: data.name,\n//     spots: data.spots,\n//     members: data.members\n// });\n// });\n","import script from \"./CancelButton.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CancelButton.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <div>\n        <button\n            @click=\"cancel\"\n            class=\"ml-2 px-4 py-2 text-white bg-orange-600 hover:bg-orange-500 rounded-lg\"\n        >Cancel\n        </button>\n    </div>\n</template>\n\n<script setup>\nimport { Inertia } from \"@inertiajs/inertia\"\nimport { useUserStore } from \"@/Stores/UserStore\"\n\nlet userStore = useUserStore()\n\nfunction cancel() {\n    if (userStore.prevUrl) {\n        Inertia.visit(userStore.prevUrl)\n    }\n}\n</script>\n","import script from \"./ValidationErrors.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ValidationErrors.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { computed } from 'vue';\nimport { usePage } from '@inertiajs/inertia-vue3';\n\nconst errors = computed(() => usePage().props.value.errors);\nconst hasErrors = computed(() => Object.keys(errors.value).length > 0);\n</script>\n\n<template>\n    <div v-if=\"hasErrors\">\n        <div class=\"font-medium text-red-600\">\n            Whoops! Something went wrong.\n        </div>\n\n        <ul class=\"mt-3 list-disc list-inside text-sm text-red-600\">\n            <li v-for=\"(error, key) in errors\" :key=\"key\">\n                {{ error }}\n            </li>\n        </ul>\n    </div>\n</template>\n","import script from \"./Create.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Create.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <Head title=\"Create Show\"/>\n\n    <div class=\"place-self-center flex flex-col gap-y-3\">\n        <div id=\"topDiv\" class=\"bg-white text-black dark:bg-gray-800 dark:text-gray-50 p-5 mb-10\">\n\n            <Message v-if=\"userStore.showFlashMessage\" :flash=\"$page.props.flash\"/>\n\n            <div class=\"flex justify-between mt-3 mb-6\">\n                <div class=\"text-3xl\">Create Show</div>\n                <div>\n                    <CancelButton />\n                </div>\n            </div>\n\n            <div class=\"bg-orange-700 text-white w-full p-6\"><span class=\"font-bold\">NOTE: </span>\n                We are working on an episode poster and video uploader for this page. For the time being, please\n                go to the show <span class=\"font-bold\">EDIT</span> page after you create the show to add a video and a poster.\n            </div>\n\n            <form @submit.prevent=\"submit\" class=\"max-w-md mx-auto mt-8\">\n                    <div class=\"mb-6\">\n                        <label class=\"block mb-2 uppercase font-bold text-xs dark:text-gray-200\"\n                               for=\"name\"\n                        >\n                            Team\n                        </label>\n                        <select class=\"border border-gray-400 p-2 w-full rounded-lg block mb-2 uppercase font-bold text-xs text-gray-800\"\n                                v-model=\"form.team_id\"\n                                required\n\n                        >\n                            <option\n                                v-for=\"team in props.teams.data\"\n                                :key=\"team.id\"\n                                :value=\"team.id\"\n                                class=\"bg-white text-black border-b dark:text-gray-50 dark:bg-gray-800 dark:border-gray-600\"\n\n                            >\n                                {{ team.name }}\n                            </option>\n\n                        </select>\n\n\n                        <div v-if=\"form.errors.team_id\" v-text=\"form.errors.team_id\" class=\"text-xs text-red-600 mt-1\"></div>\n                    </div>\n                <div class=\"mb-6\">\n                    <label class=\"block mb-2 uppercase font-bold text-xs dark:text-gray-200\"\n                           for=\"name\"\n                    >\n                        Show Name\n                    </label>\n\n                    <input v-model=\"form.name\"\n                           class=\"bg-gray-50 border border-gray-400 text-gray-900 text-sm p-2 w-full rounded-lg focus:ring-blue-500 focus:border-blue-500\"\n                           type=\"text\"\n                           name=\"name\"\n                           id=\"name\"\n                           required\n                    >\n                    <div v-if=\"form.errors.name\" v-text=\"form.errors.name\" class=\"text-xs text-red-600 mt-1\"></div>\n                </div>\n\n                <div class=\"mb-6\">\n                    <label class=\"block mb-2 uppercase font-bold text-xs dark:text-gray-200\"\n                           for=\"category\"\n                    >\n                        Category\n                    </label>\n\n\n                    <select class=\"border border-gray-400 text-gray-800 p-2 w-full rounded-lg block mb-2 uppercase font-bold text-xs \"\n                            v-model=\"form.category\" @change=\"chooseCategory($event)\"\n                    >\n                        <option v-for=\"category in props.categories\"\n                                :key=\"category.id\" :value=\"category.id\">{{category.name}}</option>\n\n\n                    </select>\n                    <div v-if=\"form.errors.category\" v-text=\"form.errors.category\"\n                         class=\"text-xs text-red-600 mt-1\"></div>\n\n                    {{showCategoryDescription}}\n                </div>\n\n                <div class=\"mb-6\">\n                    <label class=\"block mb-1 uppercase font-bold text-xs dark:text-gray-200\"\n                           for=\"sub_category\"\n                    >\n                        Sub-category\n                    </label>\n                    <div class=\"mb-2 text-sm text-orange-600\">Sub-categories are coming soon!</div>\n\n\n                    <select disabled class=\"border border-gray-400 text-gray-800 disabled:bg-gray-300 dark:disabled:bg-gray-600 disabled:cursor-not-allowed p-2 w-full rounded-lg block mb-2 uppercase font-bold text-xs\"\n                            v-model=\"form.sub_category\"\n                    >\n                        <option value=\"1\">Option</option>\n                    </select>\n                    <div v-if=\"form.errors.sub_category\" v-text=\"form.errors.sub_category\"\n                         class=\"text-xs text-red-600 mt-1\"></div>\n                </div>\n\n                <div class=\"mb-6\">\n                    <label class=\"block mb-2 uppercase font-bold text-xs dark:text-gray-200\"\n                           for=\"description\"\n                    >\n                        Description\n                    </label>\n                    <textarea v-model=\"form.description\"\n                              class=\"bg-gray-50 border border-gray-400 text-gray-900 text-sm p-2 w-full rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\"\n                              type=\"text\"\n                              name=\"description\"\n                              id=\"description\"\n                              required\n                    ></textarea>\n                    <div v-if=\"form.errors.description\" v-text=\"form.errors.description\" class=\"text-xs text-red-600 mt-1\"></div>\n                </div>\n\n                <div class=\"mb-6\">\n                    <label class=\"block mb-2 uppercase font-bold text-xs dark:text-gray-200\"\n                           for=\"name\"\n                    >\n                        Website URL\n                    </label>\n\n                    <input v-model=\"form.www_url\"\n                           class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                           type=\"text\"\n                           name=\"www_url\"\n                           id=\"www_url\"\n                    >\n                    <div v-if=\"form.errors.www_url\" v-text=\"form.errors.www_url\"\n                         class=\"text-xs text-red-600 mt-1\"></div>\n                </div>\n\n                <div class=\"mb-6\">\n                    <label class=\"block mb-2 uppercase font-bold text-xs dark:text-gray-200\"\n                           for=\"name\"\n                    >\n                        Instagram Handle\n                    </label>\n\n                    <input v-model=\"form.instagram_name\"\n                           class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                           type=\"text\"\n                           name=\"instagram_name handle\"\n                           id=\"instagram_name\"\n                    >\n                    <div v-if=\"form.errors.instagram_name\" v-text=\"form.errors.instagram_name\"\n                         class=\"text-xs text-red-600 mt-1\"></div>\n                </div>\n\n                <div class=\"mb-6\">\n                    <label class=\"block mb-2 uppercase font-bold text-xs dark:text-gray-200\"\n                           for=\"name\"\n                    >\n                        Telegram URL\n                    </label>\n\n                    <input v-model=\"form.telegram_url\"\n                           class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                           type=\"text\"\n                           name=\"telegram_url\"\n                           id=\"telegram_url\"\n                    >\n                    <div v-if=\"form.errors.telegram_url\" v-text=\"form.errors.telegram_url\"\n                         class=\"text-xs text-red-600 mt-1\"></div>\n                </div>\n\n                <div class=\"mb-6\">\n                    <label class=\"block mb-2 uppercase font-bold text-xs dark:text-gray-200\"\n                           for=\"name\"\n                    >\n                        Twitter @\n                    </label>\n\n                    <input v-model=\"form.twitter_handle\"\n                           class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                           type=\"text\"\n                           name=\"twitter_handle\"\n                           id=\"twitter_handle\"\n                    >\n                    <div v-if=\"form.errors.twitter_handle\" v-text=\"form.errors.twitter_handle\"\n                         class=\"text-xs text-red-600 mt-1\"></div>\n                </div>\n\n                <div class=\"mb-6\">\n                    <label class=\"block mb-2 uppercase font-bold text-xs dark:text-gray-200\"\n                           for=\"notes\"\n                    >\n                        Notes (Only your team members see these notes, they are not public)\n                    </label>\n                    <textarea v-model=\"form.notes\"\n                              class=\"bg-gray-50 border border-gray-400 text-gray-900 text-sm p-2 w-full rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\"\n                              type=\"text\"\n                              name=\"notes\"\n                              id=\"notes\"\n                    ></textarea>\n                    <div v-if=\"form.errors.notes\" v-text=\"form.errors.notes\" class=\"text-xs text-red-600 mt-1\"></div>\n                </div>\n\n                <input v-model=\"form.user_id\" hidden>\n                <div class=\"flex justify-between mb-6\">\n                    <JetValidationErrors class=\"mr-4\" />\n                    <button\n                        type=\"submit\"\n                        class=\"h-fit bg-blue-600 hover:bg-blue-500 text-white rounded py-2 px-4\"\n                        :disabled=\"form.processing\"\n                    >\n                        Submit\n                    </button>\n                </div>\n\n            </form>\n\n    </div>\n    </div>\n</template>\n\n<script setup>\nimport { onBeforeMount, onMounted, ref } from 'vue'\nimport {useForm, usePage} from \"@inertiajs/inertia-vue3\"\nimport { useVideoPlayerStore } from \"@/Stores/VideoPlayerStore.js\"\nimport { useTeamStore } from \"@/Stores/TeamStore.js\"\nimport { useUserStore } from \"@/Stores/UserStore\";\nimport Message from \"@/Components/Modals/Messages\";\nimport JetValidationErrors from '@/Jetstream/ValidationErrors.vue';\nimport {Inertia} from \"@inertiajs/inertia\";\nimport CancelButton from \"@/Components/Buttons/CancelButton.vue\";\n\nlet videoPlayerStore = useVideoPlayerStore()\nlet teamStore = useTeamStore()\nlet userStore = useUserStore()\n\nuserStore.currentPage = 'shows'\nuserStore.showFlashMessage = true;\n\nonMounted(() => {\n    videoPlayerStore.makeVideoTopRight();\n    if (userStore.isMobile) {\n        videoPlayerStore.ottClass = 'ottClose'\n        videoPlayerStore.ott = 0\n    }\n    document.getElementById(\"topDiv\").scrollIntoView()\n});\n\nlet props = defineProps({\n    teams: Object,\n    userId: Number,\n    categories: Object,\n    subCategories: Object,\n})\n\nlet form = useForm({\n    name: '',\n    description: '',\n    user_id: props.userId,\n    team_id: '',\n    category: '',\n    sub_category: '',\n    www_url: '',\n    instagram_name: '',\n    telegram_url: '',\n    twitter_handle: '',\n    notes: '',\n});\n\nform.team_id = teamStore.id;\n\nlet showCategoryDescription = ref(null);\nfunction chooseCategory(event) {\n    showCategoryDescription = props.categories[event.target.selectedIndex].description;\n}\n\nlet submit = () => {\n    form.post('/shows');\n}\n\nfunction reset() {\n    form.reset();\n}\n\nfunction back() {\n    let urlPrev = usePage().props.value.urlPrev\n    if (urlPrev !== 'empty') {\n        Inertia.visit(urlPrev)\n    }\n}\n\n</script>\n"],"names":["useTeamStore","defineStore","state","id","name","description","slug","totalSpots","memberSpots","teamLeader","members","managers","activeShow","activeEpisode","creators","showModal","Boolean","confirmDialog","confirmManagerDialog","selectedManagerName","selectedManagerId","addManager","removeManager","deleteMemberName","deleteMemberId","noteEdit","note","saveNoteProcessing","goLiveDisplay","can","actions","setActiveTeam","team","this","setActiveShow","show","setActiveEpisode","episode","deleteTeamMemberCancel","confirmTeamManagerCancel","deleteTeamMember","Inertia","visit","route","method","data","user_id","team_id","team_slug","addTeamManager","removeTeamManager","toggleGoLiveDisplay","getters","spotsRemaining","userStore","useUserStore","cancel","prevUrl","errors","computed","usePage","props","value","hasErrors","Object","keys","length","videoPlayerStore","useVideoPlayerStore","teamStore","currentPage","showFlashMessage","onMounted","makeVideoTopRight","isMobile","ottClass","ott","document","getElementById","scrollIntoView","__props","form","useForm","userId","category","sub_category","www_url","instagram_name","telegram_url","twitter_handle","notes","showCategoryDescription","ref","submit","post","event","categories","target","selectedIndex"],"sourceRoot":""}
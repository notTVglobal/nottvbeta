{"version":3,"file":"js/4734.js","mappings":"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","sources":["webpack:///./resources/js/Components/Global/TextEditor/TipTapNewsStoryEditor.vue?fcf7","webpack:///./resources/js/Components/Global/TextEditor/TipTapNewsStoryButtons.vue?b562","webpack:///./resources/js/Components/Global/TextEditor/TipTapNewsStoryButtons.vue","webpack:///./resources/js/Components/Global/TextEditor/TipTapNewsStoryEditor.vue","webpack:///./resources/js/Components/Global/TextEditor/TipTapNewsStoryEditor.vue?6718","webpack:///./resources/js/Components/Global/TextEditor/TipTapNewsStoryEditor.vue?fda9","webpack:///./resources/js/Components/Pages/News/NewsWriterComponent.vue?1a54","webpack:///./resources/js/Components/Pages/News/NewsWriterComponent.vue"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".tiptap[data-v-9dfd97ba]{>*+*[data-v-9dfd97ba]{margin-top:.75em}}.character-count[data-v-9dfd97ba]{color:#868e96;margin-left:1rem;margin-top:1rem}.tiptap p.is-editor-empty[data-v-9dfd97ba]:first-child:before{color:#adb5bd;content:attr(data-placeholder);float:left;height:0;pointer-events:none}.fade-enter-active[data-v-9dfd97ba],.fade-leave-active[data-v-9dfd97ba]{transition:opacity .5s}.fade-enter[data-v-9dfd97ba],.fade-leave-to[data-v-9dfd97ba]{opacity:0}.save-message[data-v-9dfd97ba]{font-size:1.5rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/Components/Global/TextEditor/TipTapNewsStoryEditor.vue\"],\"names\":[],\"mappings\":\"AAiIA,yBACE,sBACE,gBACF,CACF,CAEA,kCAGE,aAAc,CADd,gBAAiB,CADjB,eAGF,CAGA,8DAGE,aAAc,CAFd,8BAA+B,CAC/B,UAAW,CAGX,QAAS,CADT,mBAEF,CAEA,wEACE,sBACF,CAEA,6DACE,SACF,CAEA,+BACE,gBACF\",\"sourcesContent\":[\"<template>\\n  <TipTapButtons :editor=\\\"editor\\\"/>\\n  <div class=\\\"relative\\\">\\n    <div\\n        class=\\\"tiptap hide-scrollbar h-auto overflow-y-auto min-h-[13rem] max-h-[96rem] mb-2 pb-2 bg-gray-50 border border-1 border-gray-300 focus:outline-none text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500\\\">\\n      <editor-content :editor=\\\"editor\\\" class=\\\"news-story\\\"/>\\n      <div class=\\\"character-count\\\" v-if=\\\"editor\\\">\\n        {{ editor.storage.characterCount.characters() }} characters\\n        <br>\\n        {{ editor.storage.characterCount.words() }} words\\n      </div>\\n    </div>\\n  </div>\\n\\n</template>\\n\\n<script setup>\\nimport { onBeforeUnmount, onMounted, ref } from 'vue'\\nimport { useNewsStore } from '@/Stores/NewsStore'\\nimport { useNotificationStore } from '@/Stores/NotificationStore'\\nimport { Editor, EditorContent } from '@tiptap/vue-3'\\nimport StarterKit from '@tiptap/starter-kit'\\nimport TipTapButtons from '@/Components/Global/TextEditor/TipTapNewsStoryButtons'\\nimport { TextStyle } from '@tiptap/extension-text-style'\\nimport { Color } from '@tiptap/extension-color'\\nimport Typography from '@tiptap/extension-typography'\\nimport CharacterCount from '@tiptap/extension-character-count'\\nimport Placeholder from '@tiptap/extension-placeholder'\\nimport { FontFamily } from '@tiptap/extension-font-family'\\nimport { TextAlign } from '@tiptap/extension-text-align'\\nimport { Underline } from '@tiptap/extension-underline'\\nimport { Subscript } from '@tiptap/extension-subscript'\\nimport { Superscript } from '@tiptap/extension-superscript'\\nimport Link from '@tiptap/extension-link'\\nimport { throttle } from 'lodash'\\n\\nconst newsStore = useNewsStore()\\nconst notificationStore = useNotificationStore()\\n\\nconst limit = 5000\\nconst editor = ref(null)\\nconst hasShownSaveMessage = ref(false)\\nconst isUnmounting = ref(false)\\n\\nconst saveContent = throttle(async () => {\\n  if (isUnmounting.value) return // Skip saving if the component is unmounting\\n\\n  if (!newsStore.id) {\\n    if (!hasShownSaveMessage.value) {\\n      console.log('Please save the story and go to editing mode to enable automatic saving.')\\n      notificationStore.setGeneralServiceNotification('Save Required', 'Please save the story and go to editing mode to enable automatic saving.')\\n      hasShownSaveMessage.value = true\\n    }\\n    return\\n  }\\n  try {\\n    await axios.post('/newsStory/cache', {\\n      id: newsStore.id,\\n      slug: newsStore.slug,\\n      status: newsStore.status,\\n      title: newsStore.title,\\n      content: newsStore.content,\\n      newsPerson: newsStore.newsPerson,\\n      category: newsStore.category,\\n      subCategory: newsStore.subCategory,\\n      city: newsStore.city,\\n      province: newsStore.province,\\n      federalElectoralDistrict: newsStore.federalElectoralDistrict,\\n      subnationalElectoralDistrict: newsStore.subnationalElectoralDistrict\\n    })\\n    newsStore.showSaveMessage = true\\n    setTimeout(() => {\\n      newsStore.showSaveMessage = false\\n    }, 2000)  // Show the save message for 2 seconds\\n  } catch (error) {\\n    console.error('Error caching content:', error)\\n  }\\n}, 5000) // Throttle delay set to 5 seconds\\n\\nconst editorInstance = new Editor({\\n  content: newsStore.content,\\n  extensions: [\\n    StarterKit,\\n    TextStyle,\\n    FontFamily,\\n    Color,\\n    Typography,\\n    Underline,\\n    Subscript,\\n    Superscript,\\n    TextAlign.configure({\\n      types: ['heading', 'paragraph'],\\n    }),\\n    Link.configure({\\n      openOnClick: true,\\n    }),\\n    Placeholder.configure({\\n      placeholder: 'Write something â€¦',\\n    }),\\n  ],\\n  onUpdate: ({ editor }) => {\\n    newsStore.content = editor.getHTML()\\n    saveContent()\\n  },\\n  autofocus: true,\\n  editorProps: {\\n    attributes: {\\n      class: 'h-auto min-h-[12rem] max-h-[96rem] overflow-y-auto block w-full p-2.5 focus:outline-none',\\n    },\\n  },\\n})\\n\\neditor.value = editorInstance\\n\\nonMounted(() => {\\n  editor.value.commands.setContent(newsStore.content)\\n\\n})\\n\\n// Ensure editor is destroyed properly on component unmount\\nonBeforeUnmount(() => {\\n  isUnmounting.value = true\\n  if (editor.value) {\\n    editor.value.destroy()\\n  }\\n})\\n</script>\\n\\n<style scoped>\\n.tiptap {\\n  > * + * {\\n    margin-top: 0.75em;\\n  }\\n}\\n\\n.character-count {\\n  margin-top: 1rem;\\n  margin-left: 1rem;\\n  color: #868e96;\\n}\\n\\n/* Placeholder (at the top) */\\n.tiptap p.is-editor-empty:first-child::before {\\n  content: attr(data-placeholder);\\n  float: left;\\n  color: #adb5bd;\\n  pointer-events: none;\\n  height: 0;\\n}\\n\\n.fade-enter-active, .fade-leave-active {\\n  transition: opacity 0.5s;\\n}\\n\\n.fade-enter, .fade-leave-to {\\n  opacity: 0;\\n}\\n\\n.save-message {\\n  font-size: 1.5rem;\\n}\\n\\n\\n/* Placeholder (on every new line) */\\n/*.tiptap p.is-empty::before {\\n  content: attr(data-placeholder);\\n  float: left;\\n  color: #adb5bd;\\n  pointer-events: none;\\n  height: 0;\\n}*/\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import script from \"./TipTapNewsStoryButtons.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TipTapNewsStoryButtons.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n    <button tabindex=\"-1\"\n            @click.prevent=\"editor.chain().focus().toggleBold().run()\"\n            class=\"py-1 px-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-bold\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive('bold') }\">\n      B\n    </button>\n    <button tabindex=\"-1\"\n            @click.prevent=\"editor.chain().focus().toggleItalic().run()\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive('italic') }\">\n      i\n    </button>\n    <button tabindex=\"-1\"\n            @click.prevent=\"editor.chain().focus().toggleHeading({ level: 1 }).run()\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive('heading', { level: 1}) }\">\n      h1\n    </button>\n    <button tabindex=\"-1\"\n            @click.prevent=\"editor.chain().focus().toggleHeading({ level: 2 }).run()\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive('heading', { level: 2}) }\">\n      h2\n    </button>\n    <button tabindex=\"-1\"\n            @click.prevent=\"editor.chain().focus().toggleHeading({ level: 3 }).run()\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive('heading', { level: 3}) }\">\n      h3\n    </button>\n    <button tabindex=\"-1\"\n            @click.prevent=\"editor.chain().focus().setTextAlign('left').run()\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive({ textAlign: 'left' }) }\">\n      left\n    </button>\n    <button tabindex=\"-1\"\n            @click.prevent=\"editor.chain().focus().setTextAlign('center').run()\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive({ textAlign: 'center' }) }\">\n      center\n    </button>\n    <button tabindex=\"-1\"\n            @click.prevent=\"editor.chain().focus().setTextAlign('right').run()\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive({ textAlign: 'right' }) }\">\n      right\n    </button>\n    <button tabindex=\"-1\"\n            @click.prevent=\"editor.chain().focus().setTextAlign('justify').run()\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive({ textAlign: 'justify' }) }\">\n      justify\n    </button>\n    <button tabindex=\"-1\"\n            @click.prevent=\"editor.chain().focus().toggleBulletList().run()\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive('bulletList') }\">\n      bullet list\n    </button>\n    <button tabindex=\"-1\"\n            @click.prevent=\"editor.chain().focus().toggleOrderedList().run()\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive('orderedList') }\">\n      ordered list\n    </button>\n\n\n<!--    currently tipTap is readonly-editor. We need to convert JSON to HTML\n        then we can enable the link buttons.-->\n    <button hidden\n            tabindex=\"-1\"\n            @click.prevent=\"setLink\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive('link') }\">\n      setLink\n    </button>\n    <!--    currently tipTap is readonly-editor. We need to convert JSON to HTML\n        then we can enable the link buttons.-->\n    <button hidden\n            tabindex=\"-1\"\n            @click.prevent=\"editor.chain().focus().unsetLink().run()\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :disabled=\"!editor.isActive('link')\">\n      unsetLink\n    </button>\n\n\n    <button tabindex=\"-1\"\n            @click.prevent=\"editor.chain().focus().toggleCodeBlock().run()\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive('codeBlock') }\">\n      code block\n    </button>\n    <button tabindex=\"-1\"\n            @click.prevent=\"editor.chain().focus().toggleBlockquote().run()\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive('blockquote') }\">\n      blockquote\n    </button>\n    <button tabindex=\"-1\"\n            @click.prevent=\"editor.chain().focus().setHorizontalRule().run()\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\">\n      horizontal rule\n    </button>\n    <button tabindex=\"-1\"\n            @click.prevent=\"editor.chain().focus().toggleStrike().run()\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive('strike') }\">\n      strike\n    </button>\n    <button tabindex=\"-1\"\n            @click.prevent=\"editor.chain().focus().toggleUnderline().run()\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive('underline') }\">\n      underline\n    </button>\n    <button tabindex=\"-1\"\n            @click.prevent=\"editor.chain().focus().toggleSubscript().run()\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive('subscript') }\">\n      subscript\n    </button>\n    <button tabindex=\"-1\"\n            @click.prevent=\"editor.chain().focus().toggleSuperscript().run()\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive('superscript') }\">\n      superscript\n    </button>\n    <button tabindex=\"-1\"\n            @click.prevent=\"editor.chain().focus().undo().run()\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 disabled:hover:bg-gray-200 disabled:cursor-not-allowed disabled:text-black rounded-lg font-italic\"\n            :disabled=\"!editor.can().chain().focus().undo().run()\">\n      undo\n    </button>\n    <button tabindex=\"-1\"\n            @click.prevent=\"editor.chain().focus().redo().run()\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 disabled:hover:bg-gray-200 disabled:cursor-not-allowed disabled:text-black rounded-lg font-italic\"\n            :disabled=\"!editor.can().chain().focus().redo().run()\">\n      redo\n    </button>\n    <!-- Text color dropdown -->\n    <button tabindex=\"-1\" @click.prevent=\"toggleTextColor('#000000')\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\">\n      black\n    </button>\n    <button tabindex=\"-1\" @click.prevent=\"toggleTextColor('#F98181')\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive('textStyle', { color: '#F98181' }) }\">\n      red\n    </button>\n    <button tabindex=\"-1\" @click.prevent=\"toggleTextColor('#70CFF8')\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive('textStyle', { color: '#70CFF8' }) }\">\n      blue\n    </button>\n    <button tabindex=\"-1\" @click.prevent=\"toggleTextColor('#958DF1')\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive('textStyle', { color: '#958DF1' }) }\">\n      purple\n    </button>\n    <button tabindex=\"-1\" @click.prevent=\"toggleTextColor('#FBBC88')\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive('textStyle', { color: '#FBBC88' }) }\">\n      orange\n    </button>\n    <button tabindex=\"-1\" @click.prevent=\"toggleTextColor('#FAF594')\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive('textStyle', { color: '#FAF594' }) }\">\n      yellow\n    </button>\n    <button tabindex=\"-1\" @click.prevent=\"toggleTextColor('#94FADB')\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive('textStyle', { color: '#94FADB' }) }\">\n      teal\n    </button>\n    <button tabindex=\"-1\" @click.prevent=\"toggleTextColor('#B9F18D')\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive('textStyle', { color: '#B9F18D' }) }\">\n      green\n    </button>\n\n    <button tabindex=\"-1\" @click.prevent=\"editor.chain().focus().setFontFamily('Inter').run()\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive('textStyle', { fontFamily: 'Inter' }) }\">\n      Inter\n    </button>\n    <button tabindex=\"-1\" @click.prevent=\"editor.chain().focus().setFontFamily('Comic Sans MS, Comic Sans').run()\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive('textStyle', { fontFamily: 'Comic Sans MS, Comic Sans' }) }\">\n      Comic Sans\n    </button>\n    <button tabindex=\"-1\" @click.prevent=\"editor.chain().focus().setFontFamily('serif').run()\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive('textStyle', { fontFamily: 'serif' }) }\">\n      serif\n    </button>\n    <button tabindex=\"-1\" @click.prevent=\"editor.chain().focus().setFontFamily('monospace').run()\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive('textStyle', { fontFamily: 'monospace' }) }\">\n      monospace\n    </button>\n<!--    Cursive is the same as Comic Sans.... find a different font... -->\n    <button hidden\n            tabindex=\"-1\"\n            @click.prevent=\"editor.chain().focus().setFontFamily('cursive').run()\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive('textStyle', { fontFamily: 'cursive' }) }\">\n      cursive\n    </button>\n<!--    They can toggle the fonts... we don't really need this do we? -->\n    <button hidden\n            tabindex=\"-1\"\n            @click.prevent=\"editor.chain().focus().unsetFontFamily().run()\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\">\n      unsetFontFamily\n    </button>\n  </div>\n\n</template>\n\n<script setup>\n\nimport { ref } from 'vue'\n\nconst props = defineProps({\n  editor: Object,\n})\n\nlet textColor = null; // Variable to hold the currently set text color\n\nconst toggleTextColor = (color) => {\n  if (textColor === color) {\n    props.editor.chain().focus().unsetColor().run()\n    textColor = null;\n  } else {\n    props.editor.chain().focus().setColor(color).run()\n    textColor = color;\n  }\n};\n\n\n\n\nconst setLink = () => {\n  const previousUrl = props.editor.getAttributes('link').href\n  const url = window.prompt('URL', previousUrl)\n  // cancelled\n  if (url === null) {\n  }\n\n  // empty\n  if (url === '') {\n    props.editor\n        .chain()\n        .focus()\n        .extendMarkRange('link')\n        .unsetLink()\n        .run()\n  }\n\n  // update link\n  props.editor\n      .chain()\n      .focus()\n      .extendMarkRange('link')\n      .setLink({ href: url })\n      .run()\n}\n\n</script>\n","<template>\n  <TipTapButtons :editor=\"editor\"/>\n  <div class=\"relative\">\n    <div\n        class=\"tiptap hide-scrollbar h-auto overflow-y-auto min-h-[13rem] max-h-[96rem] mb-2 pb-2 bg-gray-50 border border-1 border-gray-300 focus:outline-none text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500\">\n      <editor-content :editor=\"editor\" class=\"news-story\"/>\n      <div class=\"character-count\" v-if=\"editor\">\n        {{ editor.storage.characterCount.characters() }} characters\n        <br>\n        {{ editor.storage.characterCount.words() }} words\n      </div>\n    </div>\n  </div>\n\n</template>\n\n<script setup>\nimport { onBeforeUnmount, onMounted, ref } from 'vue'\nimport { useNewsStore } from '@/Stores/NewsStore'\nimport { useNotificationStore } from '@/Stores/NotificationStore'\nimport { Editor, EditorContent } from '@tiptap/vue-3'\nimport StarterKit from '@tiptap/starter-kit'\nimport TipTapButtons from '@/Components/Global/TextEditor/TipTapNewsStoryButtons'\nimport { TextStyle } from '@tiptap/extension-text-style'\nimport { Color } from '@tiptap/extension-color'\nimport Typography from '@tiptap/extension-typography'\nimport CharacterCount from '@tiptap/extension-character-count'\nimport Placeholder from '@tiptap/extension-placeholder'\nimport { FontFamily } from '@tiptap/extension-font-family'\nimport { TextAlign } from '@tiptap/extension-text-align'\nimport { Underline } from '@tiptap/extension-underline'\nimport { Subscript } from '@tiptap/extension-subscript'\nimport { Superscript } from '@tiptap/extension-superscript'\nimport Link from '@tiptap/extension-link'\nimport { throttle } from 'lodash'\n\nconst newsStore = useNewsStore()\nconst notificationStore = useNotificationStore()\n\nconst limit = 5000\nconst editor = ref(null)\nconst hasShownSaveMessage = ref(false)\nconst isUnmounting = ref(false)\n\nconst saveContent = throttle(async () => {\n  if (isUnmounting.value) return // Skip saving if the component is unmounting\n\n  if (!newsStore.id) {\n    if (!hasShownSaveMessage.value) {\n      console.log('Please save the story and go to editing mode to enable automatic saving.')\n      notificationStore.setGeneralServiceNotification('Save Required', 'Please save the story and go to editing mode to enable automatic saving.')\n      hasShownSaveMessage.value = true\n    }\n    return\n  }\n  try {\n    await axios.post('/newsStory/cache', {\n      id: newsStore.id,\n      slug: newsStore.slug,\n      status: newsStore.status,\n      title: newsStore.title,\n      content: newsStore.content,\n      newsPerson: newsStore.newsPerson,\n      category: newsStore.category,\n      subCategory: newsStore.subCategory,\n      city: newsStore.city,\n      province: newsStore.province,\n      federalElectoralDistrict: newsStore.federalElectoralDistrict,\n      subnationalElectoralDistrict: newsStore.subnationalElectoralDistrict\n    })\n    newsStore.showSaveMessage = true\n    setTimeout(() => {\n      newsStore.showSaveMessage = false\n    }, 2000)  // Show the save message for 2 seconds\n  } catch (error) {\n    console.error('Error caching content:', error)\n  }\n}, 5000) // Throttle delay set to 5 seconds\n\nconst editorInstance = new Editor({\n  content: newsStore.content,\n  extensions: [\n    StarterKit,\n    TextStyle,\n    FontFamily,\n    Color,\n    Typography,\n    Underline,\n    Subscript,\n    Superscript,\n    TextAlign.configure({\n      types: ['heading', 'paragraph'],\n    }),\n    Link.configure({\n      openOnClick: true,\n    }),\n    Placeholder.configure({\n      placeholder: 'Write something â€¦',\n    }),\n  ],\n  onUpdate: ({ editor }) => {\n    newsStore.content = editor.getHTML()\n    saveContent()\n  },\n  autofocus: true,\n  editorProps: {\n    attributes: {\n      class: 'h-auto min-h-[12rem] max-h-[96rem] overflow-y-auto block w-full p-2.5 focus:outline-none',\n    },\n  },\n})\n\neditor.value = editorInstance\n\nonMounted(() => {\n  editor.value.commands.setContent(newsStore.content)\n\n})\n\n// Ensure editor is destroyed properly on component unmount\nonBeforeUnmount(() => {\n  isUnmounting.value = true\n  if (editor.value) {\n    editor.value.destroy()\n  }\n})\n</script>\n\n<style scoped>\n.tiptap {\n  > * + * {\n    margin-top: 0.75em;\n  }\n}\n\n.character-count {\n  margin-top: 1rem;\n  margin-left: 1rem;\n  color: #868e96;\n}\n\n/* Placeholder (at the top) */\n.tiptap p.is-editor-empty:first-child::before {\n  content: attr(data-placeholder);\n  float: left;\n  color: #adb5bd;\n  pointer-events: none;\n  height: 0;\n}\n\n.fade-enter-active, .fade-leave-active {\n  transition: opacity 0.5s;\n}\n\n.fade-enter, .fade-leave-to {\n  opacity: 0;\n}\n\n.save-message {\n  font-size: 1.5rem;\n}\n\n\n/* Placeholder (on every new line) */\n/*.tiptap p.is-empty::before {\n  content: attr(data-placeholder);\n  float: left;\n  color: #adb5bd;\n  pointer-events: none;\n  height: 0;\n}*/\n</style>\n","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-10.use[1]!../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-10.use[2]!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./TipTapNewsStoryEditor.vue?vue&type=style&index=0&id=9dfd97ba&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./TipTapNewsStoryEditor.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TipTapNewsStoryEditor.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./TipTapNewsStoryEditor.vue?vue&type=style&index=0&id=9dfd97ba&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-9dfd97ba\"]])\n\nexport default __exports__","import script from \"./NewsWriterComponent.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./NewsWriterComponent.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n<div>\n  <div class=\"mb-6\">\n    <label for=\"Title\" class=\"block mb-2 text-sm font-bold text-gray-900\">Title</label>\n    <input\n        type=\"text\"\n        v-model=\"newsStore.title\"\n        name=\"title\"\n        class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\"\n        placeholder=\"\"\n    />\n    <div v-if=\"newsStore.errors.title\" class=\"text-sm text-red-600\">\n      {{ newsStore.errors.title }}\n    </div>\n  </div>\n\n  <div class=\"mb-6\">\n    <label for=\"Content\" class=\"block mb-2 text-sm font-bold text-gray-900\">Content</label>\n    <tip-tap-news-story-editor />\n    <div v-if=\"newsStore.errors.body\" class=\"text-sm text-red-600\">\n      {{ newsStore.errors.body }}\n    </div>\n  </div>\n</div>\n</template>\n<script setup>\nimport { useNewsStore } from '@/Stores/NewsStore'\nimport TipTapNewsStoryEditor from '@/Components/Global/TextEditor/TipTapNewsStoryEditor'\n\nconst newsStore = useNewsStore()\n\n</script>"],"names":["___CSS_LOADER_EXPORT___","push","module","id","props","__props","textColor","toggleTextColor","color","editor","chain","focus","unsetColor","run","setColor","setLink","previousUrl","getAttributes","href","url","window","prompt","extendMarkRange","unsetLink","newsStore","useNewsStore","notificationStore","useNotificationStore","ref","hasShownSaveMessage","isUnmounting","saveContent","throttle","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","value","abrupt","console","log","setGeneralServiceNotification","axios","post","slug","status","title","content","newsPerson","category","subCategory","city","province","federalElectoralDistrict","subnationalElectoralDistrict","showSaveMessage","setTimeout","t0","error","stop","editorInstance","Editor","extensions","StarterKit","TextStyle","FontFamily","Color","Typography","Underline","Subscript","Superscript","TextAlign","configure","types","Link","openOnClick","Placeholder","placeholder","onUpdate","_ref2","getHTML","autofocus","editorProps","attributes","class","onMounted","commands","setContent","onBeforeUnmount","destroy","options","locals"],"sourceRoot":""}
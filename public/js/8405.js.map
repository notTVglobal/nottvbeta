{"version":3,"file":"js/8405.js","mappings":"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","sources":["webpack:///./resources/js/Stores/ShowStore.js","webpack:///./resources/js/Stores/TeamStore.js","webpack:///./resources/js/Components/Uploaders/VideoUpload.vue?870a","webpack:///./resources/js/Components/Multimedia/SingleImage.vue","webpack:///./resources/js/Components/ShowEpisodes/Edit/ShowEpisodeEditHeader.vue?a7b9","webpack:///./resources/js/Components/ShowEpisodes/Edit/ShowEpisodeEditHeader.vue","webpack:///./resources/js/Components/TabbableTextarea.vue?5ddb","webpack:///./resources/js/Components/TabbableTextarea.vue","webpack:///./resources/js/Components/Uploaders/ImageUpload.vue?2f2a","webpack:///./resources/js/Components/Uploaders/ImageUpload.vue","webpack:///./resources/js/Components/Uploaders/VideoUpload.vue","webpack:///./resources/js/Components/Uploaders/VideoUpload.vue?d2a7","webpack:///./resources/js/Components/Uploaders/VideoUpload.vue?3a09","webpack:///./resources/js/Jetstream/ValidationErrors.vue?5fdc","webpack:///./resources/js/Jetstream/ValidationErrors.vue","webpack:///./resources/js/Stores/MovieStore.js","webpack:///./resources/js/Pages/Movies/{$id}/Edit.vue?d66e","webpack:///./resources/js/Pages/Movies/{$id}/Edit.vue"],"sourcesContent":["import { defineStore } from \"pinia\";\n\nexport let useShowStore = defineStore('showStore', {\n    state: () => ({\n        id: 0,\n        name: '',\n        category_id: 0,\n        category_sub_id: 0,\n        category_description: '',\n        sub_categories: [],\n        description: '',\n        posterName: [],\n        posterId: [0],\n        episodes: [],\n        team_id: 'team id',\n        episodePoster: '',\n        noteEdit: 0,\n        note: '',\n        saveNoteProcessing: Boolean,\n        errorMessage: '',\n\n    }),\n\n    actions: {\n        async fill() {\n            let r = await import('@/Json/show.json');\n            this.$state = r.default;\n        }\n    },\n\n    getters: {\n        //\n    }\n});\n","import {defineStore} from \"pinia\";\nimport {Inertia} from \"@inertiajs/inertia\";\n\nexport let useTeamStore = defineStore('teamStore', {\n    state: () => ({\n        id: 0,\n        name: '',\n        description: '',\n        slug: '',\n        totalSpots: '',\n        memberSpots: '',\n        teamLeader: [],\n        members: [],\n        managers: [],\n        activeShow: [],\n        activeEpisode: [],\n        creators: [],\n        showModal: Boolean,\n        confirmDialog: false,\n        confirmManagerDialog: false,\n        selectedManagerName: '',\n        selectedManagerId: 0,\n        addManager: false,\n        removeManager: false,\n        deleteMemberName: '',\n        deleteMemberId: 0,\n        noteEdit: 0,\n        note: '',\n        saveNoteProcessing: Boolean,\n            // on the show episode manage page\n            // turn on the go live div\n            goLiveDisplay: false,\n        can: [],\n    }),\n\n    actions: {\n        // async fill() {\n        //     let r = await import('@/Json/team.json');\n        //     this.$state = r.default;\n        // },\n        setActiveTeam(team) {\n            this.id = team.id;\n            this.name = team.name;\n            this.description = team.description;\n            this.slug = team.slug;\n            this.totalSpots = team.totalSpots;\n            this.memberSpots = team.memberSpots;\n        },\n        setActiveShow(show) {\n            this.activeShow = show;\n        },\n        setActiveEpisode(episode) {\n            this.activeShow = episode;\n        },\n        // getCreators() {\n        //     Inertia.reload({ only: ['creators'] })\n        // },\n        deleteTeamMemberCancel() {\n            this.confirmDialog = false;\n        },\n        confirmTeamManagerCancel() {\n            this.confirmManagerDialog = false;\n        },\n        // loadTeamMembers(members){\n        //     this.members = members;\n        // }\n        deleteTeamMember() {\n            Inertia.visit(route('teams.removeTeamMember'), {\n                method: 'post',\n                data: {\n                    user_id: this.deleteMemberId,\n                    team_id: this.id,\n                    team_slug: this.slug\n                },\n            })\n        },\n        addTeamManager() {\n            Inertia.visit(route('teams.addTeamManager'), {\n                method: 'post',\n                data: {\n                    user_id: this.selectedManagerId,\n                    team_id: this.id,\n                    team_slug: this.slug\n                },\n            })\n            this.confirmManagerDialog = false;\n        },\n        removeTeamManager() {\n            Inertia.visit(route('teams.removeTeamManager'), {\n                method: 'post',\n                data: {\n                    user_id: this.selectedManagerId,\n                    team_id: this.id,\n                    team_slug: this.slug\n                },\n            })\n            this.confirmManagerDialog = false;\n        },\n        toggleGoLiveDisplay() {\n            this.goLiveDisplay = ! this.goLiveDisplay;\n        }\n    },\n\n    getters: {\n        spotsRemaining() {\n            if (this.totalSpots - this.memberSpots < 1){\n                return 0\n            }\n            return this.totalSpots - this.memberSpots;\n        },\n    }\n});\n\n\n// Another option for declaring specific data to return:\n// let data = r.default;\n//\n// import('@/Json/team.json').then(r => {\n// this.$patch({\n//     name: data.name,\n//     spots: data.spots,\n//     members: data.members\n// });\n// });\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".dropzone[data-v-24d24480]{align-items:center;background-color:#fce4bb;border:2px dashed #000;display:flex;flex-direction:column;justify-content:center;row-gap:16px;transition:all .3s ease}label[data-v-24d24480]{padding:8px 12px;transition:all .3s ease}.active-dropzone[data-v-24d24480],label[data-v-24d24480]{background-color:#4bb1b1;color:#fff}.active-dropzone[data-v-24d24480]{border-color:#fff}.active-dropzone label[data-v-24d24480]{background-color:#fff;color:#4bb1b1}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/Components/Uploaders/VideoUpload.vue\"],\"names\":[],\"mappings\":\"AA8HA,2BAII,kBAAmB,CAGnB,wBAAyB,CADzB,sBAA0B,CAL1B,YAAa,CACb,qBAAsB,CACtB,sBAAuB,CAEvB,YAAa,CAGb,uBACJ,CAEA,uBACI,gBAAiB,CAGjB,uBACJ,CAEA,yDAJI,wBAAyB,CADzB,UASJ,CAJA,kCAEI,iBAEJ,CAEA,wCACI,qBAAsB,CACtB,aACJ\",\"sourcesContent\":[\"<template>\\n    <div>\\n\\n        <progress v-show=\\\"userStore.uploadPercentage != 0\\\" max=\\\"100\\\" :value=\\\"userStore.uploadPercentage\\\" class=\\\"w-full\\\" />\\n        <div v-show=\\\"userStore.uploadPercentage != 0\\\" class=\\\"w-full mb-4\\\">{{userStore.uploadPercentageRounded}}%</div>\\n\\n        <div v-show=\\\"uploadingMessage\\\" class=\\\"mb-4 font-bold text-center\\\">Please stay on this screen until upload is complete.</div>\\n        <div v-show=\\\"uploadCompleteMessage\\\" class=\\\"mb-4 font-bold text-center\\\">Upload is complete. The video is now processing.</div>\\n        <form v-show=\\\"!isHidden\\\" id=\\\"videoUploadForm\\\" action=\\\"/videoupload\\\" class=\\\"dropzone dropzoneFile border border-black rounded w-full h-48 max-w-md px-2 py-2 mb-6\\\">\\n            <!--                            add input fields and a submit button to send data back to Laravel -->\\n            <input hidden name=\\\"movieId\\\" v-model=\\\"form.movieId\\\">\\n<!--            <input hidden name=\\\"movieTrailerId\\\" v-model=\\\"form.movieTrailerId\\\">-->\\n            <input hidden name=\\\"showEpisodeId\\\" v-model=\\\"form.showEpisodeId\\\">\\n        </form>\\n\\n    </div>\\n</template>\\n\\n<script setup>\\nimport { Dropzone } from \\\"dropzone\\\";\\nimport { useForm } from \\\"@inertiajs/inertia-vue3\\\"\\nimport { useUserStore } from \\\"@/Stores/UserStore\\\";\\nimport { onMounted, ref } from \\\"vue\\\";\\nimport { Inertia } from \\\"@inertiajs/inertia\\\";\\n\\nlet userStore = useUserStore()\\nlet uploadPercentage = ref(0);\\nlet uploadingMessage = ref(0);\\nlet uploadCompleteMessage = ref(0);\\nlet isHidden = ref(false);\\n\\nonMounted(() => {\\n// see options for Dropzone here: https://github.com/dropzone/dropzone/blob/main/src/options.js\\nlet myDropzone = new Dropzone(\\\"#videoUploadForm\\\", {\\n    url: \\\"/videoupload\\\",\\n    paramName: \\\"file\\\", // The name that will be used to transfer the file\\n    maxFilesize: '25 GB', // MB\\n    chunking: true,\\n    chunkSize: 2 * 1024 * 1024,\\n    parallelChunkUploads: false,\\n    retryChunks: true,\\n    retryChunksLimit: 10,\\n    capture: null,\\n    // can set the capture method as camera, microphone or video\\n    // for mobile devices to skip the file selection and choose the\\n    // recording device instead.\\n    acceptedFiles: 'video/*, audio/*',\\n    uploadprogress: function(file, progress, bytesSent) {\\n        userStore.uploadPercentage = progress;\\n        console.log(userStore.uploadPercentage);\\n        if(userStore.uploadPercentage !== 100){\\n            isHidden = true;\\n        }\\n    },\\n    dictDefaultMessage: \\\"Click here or Drop video here to upload <br>(Max video file size is 25GB)\\\",\\n    forceFallback: false, // for testing, set to true.\\n    accept: function(file, done) {\\n        if (file.name === \\\"\\\") {\\n            done(\\\"Need a file.\\\");\\n        } else if (file.size > 25000000000) {\\n            console.log(file.size)\\n            done(\\\"Video file too big.\\\");\\n            alert('Video file must be smaller than 25GB');\\n        }\\n        else { done(); }\\n    }\\n});\\n\\nmyDropzone.on(\\\"addedfile\\\", file => {\\n    uploadingMessage = 1;\\n    console.log(`File added: ${file.name}`);\\n\\n});\\n\\nmyDropzone.on(\\\"complete\\\", function(file) {\\n    uploadingMessage = 0;\\n    uploadCompleteMessage = 1;\\n    myDropzone.removeFile(file);\\n    userStore.uploadPercentage = 0;\\n    isHidden = false;\\n    Inertia.reload({\\n        only: [\\\"videos\\\"],\\n    });\\n});\\n\\n})\\n\\nlet props = defineProps({\\n    movieId: Number,\\n    movieTrailerId: Number,\\n    showEpisodeId: Number,\\n})\\n\\nfunction setMovieOrEpisodeId() {\\n    if (props.movieId !== null) {\\n        userStore.uploadMovieId = props.mov;\\n    } else if (props.movieTrailerId !== null) {\\n        userStore.movieTrailerId = props.movieTrailerId;\\n    } else if (props.showEpisodeId !== null) {\\n        userStore.uploadShowEpisodeId = props.showEpisodeId;\\n    }\\n}\\n\\nsetMovieOrEpisodeId()\\n\\nlet form = useForm({\\n    file: [],\\n    // movieId: userStore.uploadMovieId,\\n    movieId: props.movieId,\\n    movieTrailerId: props.movieId,\\n    showEpisodeId: props.showEpisodeId,\\n});\\n\\n// let props = defineProps({\\n//     filters: Object,\\n//     can: Object,\\n//     videos: Object,\\n//     message: String,\\n//     errors: ref(''),\\n//     isHidden: ref(false),\\n//     done: ref(),\\n// });\\n\\n</script>\\n<style scoped>\\n\\n.dropzone {\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: center;\\n    align-items: center;\\n    row-gap: 16px;\\n    border: 2px dashed #000000;\\n    background-color: #fce4bb;\\n    transition: 0.3s ease all;\\n}\\n\\nlabel {\\n    padding: 8px 12px;\\n    color: #fff;\\n    background-color: #4bb1b1;\\n    transition: 0.3s ease all;\\n}\\n\\n.active-dropzone {\\n    color: #fff;\\n    border-color: #fff;\\n    background-color: #4bb1b1;\\n}\\n\\n.active-dropzone  label {\\n    background-color: #fff;\\n    color: #4bb1b1;\\n}\\n/*6b7280*/\\n/*4bb1b1*/\\n\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import script from \"./SingleImage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./SingleImage.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./ShowEpisodeEditHeader.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ShowEpisodeEditHeader.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n\n    <div class=\"flex justify-between my-6\">\n        <div>\n            <div class=\"font-bold mb-4 text-red-700\">EDIT EPISODE</div>\n            <h1 class=\"text-3xl\">\n                <Link :href=\"`/shows/${show.slug}/episode/${episode.slug}`\" class=\"text-red-700 font-bold uppercase\">{{ episode.name }}</Link>\n            </h1>\n        </div>\n        <div>\n            <button\n                @click=\"back\"\n                class=\"px-4 py-2 text-white bg-orange-600 hover:bg-orange-500 rounded-lg\"\n            >Cancel\n            </button>\n\n        </div>\n    </div>\n\n    <div class=\"flex flex-wrap w-full justify-between\">\n        <div class=\"space-y-1 text-black dark:text-white\">\n            <div class=\"mb-6\"><span class=\"text-xs uppercase font-semibold\">Episode #: </span>\n                <span v-if=\"episode.episode_number\" class=\"font-bold uppercase\">{{ episode.episode_number }}</span>\n                <span v-if=\"!episode.episode_number\" class=\"font-bold uppercase\">{{ episode.id }}</span>\n            </div>\n            <div class=\"\"><span class=\"text-xs uppercase font-semibold\">Show: </span>\n                <Link :href=\"`/shows/${show.slug}/manage`\">\n                    <span class=\"font-bold uppercase text-blue-600 hover:text-blue-800 dark:text-blue-300 dark:hover:text-blue-500\">{{ show.name }}</span>\n                </Link>\n            </div>\n            <div class=\"\"><span class=\"text-xs uppercase font-semibold\">Category: </span>\n                <span class=\"font-bold uppercase\">{{ show.showCategoryName }}</span>\n                <span class=\"text-xs\">\n                    (change the category on the\n                    <Link :href=\"`/shows/${show.slug}/edit`\"\n                          class=\"text-blue-600 hover:text-blue-800 dark:text-blue-300 dark:hover:text-blue-500\">\n                        show edit page</Link>)\n                </span>\n            </div>\n            <div class=\"\"><span class=\"text-xs uppercase font-semibold\">Sub-category: </span>\n                <span class=\"font-bold uppercase\">{{ show.subCategoryName }}</span>\n                <span class=\"text-xs\">\n                    (change the sub-category on the\n                    <Link :href=\"`/shows/${show.slug}/edit`\"\n                          class=\"text-blue-600 hover:text-blue-800 dark:text-blue-300 dark:hover:text-blue-500\">\n                        show edit page</Link>)\n                </span>\n            </div>\n            <div class=\"\"><span class=\"text-xs uppercase font-semibold\">Team: </span>\n                <Link :href=\"`/teams/${team.slug}/manage`\">\n                    <span class=\"dark:font-bold uppercase text-blue-600 hover:text-blue-800 dark:text-blue-300 dark:hover:text-blue-500\">{{ team.name }}</span>\n                </Link>\n            </div>\n\n        </div>\n\n\n\n        <div class=\"flex flex-col rounded justify-end w-fit bg-white dark:bg-black my-6 p-3\">\n            <div class=\"block mb-2 uppercase font-bold text-xs text-black dark:text-white\"\n                 for=\"name\"\n            >\n                Episode Video\n            </div>\n            <div>\n\n                <div\n                    v-if=\"episode.video.storage_location === 'external'\"\n                    class=\"flex justify-center shadow overflow-hidden border-b border-gray-200 bg-white dark:bg-black text-2xl sm:rounded-lg p-5\">\n\n                    <div v-if=\"!episode.video.video_url\">NO VIDEO</div>\n                    <video id=\"episodeEditVideoPlayer\" v-if=\"episode.video.video_url\"\n                           class=\"video-js w-fit\" controls>\n                        <source :src=\"`${episode.video.video_url}`\" :type=\"`${episode.video.type}`\">\n                    </video>\n\n    <!--                    <iframe v-if=\"episode.video_url\"-->\n    <!--                            class=\"rumble\" width=\"w-fit\" height=\"\" :src=\"`${episode.video_url}`\" frameborder=\"0\" allowfullscreen>-->\n    <!--                    </iframe>-->\n                </div>\n\n                <div v-if=\"episode.video_id\" class=\"mb-6 bg-black w-full p-6\">\n                    <div class=\"block mb-2 uppercase font-bold text-xs\"\n                           for=\"name\"\n                    >\n                        Episode Video\n                    </div>\n                                                <div\n                                                    v-if=\"episode.video.upload_status === 'processing'\"\n                                                    class=\"text-center place-self-center font-semibold text-xl\">Video processing...</div>\n                    <video v-if=\"episode.video.storage_location === 'spaces' && episode.video.upload_status !== 'processing'\"\n                           id=\"episodeEditPlayer\"\n                           :src=\"episode.video.cdn_endpoint+episode.video.cloud_folder+episode.video.folder+'/'+episode.video.file_name\"\n                           controls></video>\n                </div>\n            </div>\n\n        </div>\n    </div>\n\n\n\n</template>\n\n<script setup>\nimport {Inertia} from \"@inertiajs/inertia\";\nimport {usePage} from \"@inertiajs/inertia-vue3\";\n\ndefineProps({\n    show: Object,\n    team: Object,\n    episode: Object,\n})\n\nfunction back() {\n    let urlPrev = usePage().props.value.urlPrev\n    if (urlPrev !== 'empty') {\n        Inertia.visit(urlPrev)\n    }\n    if (urlPrev === 'empty') {\n        Inertia.visit('/shows/'+props.show.slug+'/manage')\n    }\n    // window.history.back()\n}\n\n</script>\n","import script from \"./TabbableTextarea.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TabbableTextarea.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <textarea\n        @keydown.tab.prevent=\"onTabPress\"\n        @keyup=\"emit('update:modelValue', $event.target.value)\"\n        v-text=\"modelValue\" />\n</template>\n\n<script setup>\ndefineProps ({\n    modelValue: String\n});\n\nlet emit = defineEmits(['update:modelValue']);\n\nfunction onTabPress(e) {\n    let textarea = e.target;\n\n    // get caret position/selection\n    let val = textarea.value,\n        start = textarea.selectionStart,\n        end = textarea.selectionEnd;\n\n    // set textarea value to: text before caret + tab + text after caret\n    textarea.value = val.substring(0, start) + \"\\t\" + val.substring(end);\n\n    // put caret at right position again\n    textarea.selectionStart = textarea.selectionEnd = start + 1;\n}\n\n</script>\n","import script from \"./ImageUpload.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ImageUpload.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n<div class=\"\">\n    <div class=\"max-full mx-auto mt-2 mb-6 bg-gray-200 p-6 text-black\">\n        <h2 class=\"text-xl font-semibold\">{{ name }}</h2>\n\n        <ul class=\"pb-4\">\n            <li>Max File Size: <span class=\"text-orange-400\">{{ maxSize }}</span></li>\n            <li>File Types accepted: <span class=\"text-orange-400\">{{ fileTypes }}</span></li>\n        </ul>\n        <file-pond\n            name=\"image\"\n            ref=\"pond\"\n            label-idle=\"Click to choose file, or drag here...\"\n            @init=\"filepondInitialized\"\n            :server=\"server\"\n            :accepted-file-types=\"fileTypes\"\n            @processfile=\"handleProcessedFile\"\n            :max-file-size=\"maxSize\"\n        />\n<!--        <file-pond-->\n<!--            ref=\"filePond\"-->\n<!--            :files=\"files\"-->\n<!--            :server=\"serverOptions\"-->\n<!--            @init=\"handleFilePondInit\"-->\n<!--            @beforeaddfile=\"handleBeforeAddFile\"-->\n<!--            @processfile=\"handleProcessedFile\"-->\n<!--        />-->\n    </div>\n</div>\n\n</template>\n\n<script setup>\nimport vueFilePond, { setOptions } from 'vue-filepond'\nimport FilePondPluginFileValidateType from \"filepond-plugin-file-validate-type\"\nimport FilePondPluginFileValidateSize from \"filepond-plugin-file-validate-size\"\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\"\nimport FilePondPluginFileMetadata from \"filepond-plugin-file-metadata\"\nimport 'filepond/dist/filepond.min.css'\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.min.css'\nimport {Inertia} from \"@inertiajs/inertia\";\nimport {computed, ref} from \"vue\";\n\nlet props = defineProps({\n    image: Object,\n    name: String,\n    metadataKey: String,\n    metadataValue: String,\n    server: String,\n    maxSize: String,\n    fileTypes: String,\n})\n\n\n// // Initialize FilePond with the File Metadata plugin\n// const filePondOptions = {\n//     allowMultiple: false,\n//     labelIdle: \"Drop files here or click to upload\",\n//     plugins: [FilePondPluginFileMetadata()],\n// };\n\n\n// Files array to store uploaded files\n// const files = ref([]);\n\nconst metadataKey = props.metadataKey\nconst metadataValue = props.metadataValue\nconst customMetadata = {\n    [metadataKey]: metadataValue\n};\n// customMetadata.value[props.metadataKey] = 'bar';\n// customMetadata.value[props.metadataKey] = props.metadataValue;\n// const customMetadata = ref({ [props.metadataKey]: props.metadataValue });\n// const customMetadata = computed(() => ({\n//     [props.metadataKey]: props.metadataValue,\n// }));\n\n// FilePond server options (you can customize this)\nconst serverOptions = {\n    process: (fieldName, file, metadata, load, error, progress, abort) => {\n        // Construct a FormData object to send the file and metadata to your Laravel server\n        const formData = new FormData();\n        formData.append('file', file, file.name); // Add the file\n        formData.append('metadata', JSON.stringify(customMetadata)); // Add the metadata as a JSON string\n\n        // Make an Axios POST request to your Laravel backend\n        axios.post(props.server, formData, {\n            headers: {\n                'Content-Type': 'multipart/form-data', // Set the appropriate content type\n            },\n            onUploadProgress: (event) => {\n                const progressPercentage = Math.round((event.loaded / event.total) * 100);\n                // Update the progress bar or display progress percentage if needed\n                progress(progressPercentage);\n            },\n        })\n            .then((response) => {\n                // Handle a successful upload\n                load(response.data.url); // Pass the file URL to the load() function\n            })\n            .catch((err) => {\n                // Handle upload error\n                console.error('Upload error:', err);\n                error('Error uploading the file'); // Pass an error message to the error() function\n            });\n    },\n};\n\n\n// Initialize FilePond\n// const handleFilePondInit = () => {\n//     // FilePond has been initialized\n//     console.log(\"FilePond is ready\");\n// };\n\n// Handle the beforeaddfile event\n// const handleBeforeAddFile = (file) => {\n//     // Add metadata to the file object\n//     file.setMetadata(\"key\", \"value\");\n//     // You can set multiple metadata fields as needed\n//     // file.setMetadata(\"anotherKey\", \"anotherValue\");\n// };\n\n\n\n\n\nconst FilePond = vueFilePond(\n    FilePondPluginFileValidateType,\n    FilePondPluginFileValidateSize,\n    FilePondPluginImagePreview,\n    FilePondPluginFileMetadata\n);\n\n// Handle the beforeaddfile event\n// const handleBeforeAddFile = (file) => {\n//     // Add metadata to the file object\n//     file.setMetadata(\"show_id\", \"1\");\n//     // You can set multiple metadata fields as needed\n//     // file.setMetadata(\"anotherKey\", \"anotherValue\");\n// };\n\n// FilePond.registerPlugin(FilePondPluginFileMetadata);\nFilePond.setOptions = ({\n    fileMetadataObject: {\n        show_id: '1',\n    },\n});\n\n\n// Initialize FilePond with the File Metadata plugin\n// const filePondOptions = {\n//     allowMultiple: true,\n//     labelIdle: \"Drop files here or click to upload\",\n//     plugins: [FilePondPluginFileMetadata()],\n// };\n\nfunction filepondInitialized() {\n    console.log(\"Filepond is ready!\");\n    // console.log('Filepond object:', FilePond);\n\n}\nconst emit = defineEmits(['reloadImage'])\n\nfunction handleProcessedFile(error, file) {\n    if (error) {\n        console.log(\"Filepond processed file\");\n        console.log(error);\n        console.log(file);\n        return;\n    }\n\n    emit('reloadImage')\n\n    // Inertia.reload({\n    //     only: ['image'],\n    // });\n}\n\n</script>\n","<template>\n    <div>\n\n        <progress v-show=\"userStore.uploadPercentage != 0\" max=\"100\" :value=\"userStore.uploadPercentage\" class=\"w-full\" />\n        <div v-show=\"userStore.uploadPercentage != 0\" class=\"w-full mb-4\">{{userStore.uploadPercentageRounded}}%</div>\n\n        <div v-show=\"uploadingMessage\" class=\"mb-4 font-bold text-center\">Please stay on this screen until upload is complete.</div>\n        <div v-show=\"uploadCompleteMessage\" class=\"mb-4 font-bold text-center\">Upload is complete. The video is now processing.</div>\n        <form v-show=\"!isHidden\" id=\"videoUploadForm\" action=\"/videoupload\" class=\"dropzone dropzoneFile border border-black rounded w-full h-48 max-w-md px-2 py-2 mb-6\">\n            <!--                            add input fields and a submit button to send data back to Laravel -->\n            <input hidden name=\"movieId\" v-model=\"form.movieId\">\n<!--            <input hidden name=\"movieTrailerId\" v-model=\"form.movieTrailerId\">-->\n            <input hidden name=\"showEpisodeId\" v-model=\"form.showEpisodeId\">\n        </form>\n\n    </div>\n</template>\n\n<script setup>\nimport { Dropzone } from \"dropzone\";\nimport { useForm } from \"@inertiajs/inertia-vue3\"\nimport { useUserStore } from \"@/Stores/UserStore\";\nimport { onMounted, ref } from \"vue\";\nimport { Inertia } from \"@inertiajs/inertia\";\n\nlet userStore = useUserStore()\nlet uploadPercentage = ref(0);\nlet uploadingMessage = ref(0);\nlet uploadCompleteMessage = ref(0);\nlet isHidden = ref(false);\n\nonMounted(() => {\n// see options for Dropzone here: https://github.com/dropzone/dropzone/blob/main/src/options.js\nlet myDropzone = new Dropzone(\"#videoUploadForm\", {\n    url: \"/videoupload\",\n    paramName: \"file\", // The name that will be used to transfer the file\n    maxFilesize: '25 GB', // MB\n    chunking: true,\n    chunkSize: 2 * 1024 * 1024,\n    parallelChunkUploads: false,\n    retryChunks: true,\n    retryChunksLimit: 10,\n    capture: null,\n    // can set the capture method as camera, microphone or video\n    // for mobile devices to skip the file selection and choose the\n    // recording device instead.\n    acceptedFiles: 'video/*, audio/*',\n    uploadprogress: function(file, progress, bytesSent) {\n        userStore.uploadPercentage = progress;\n        console.log(userStore.uploadPercentage);\n        if(userStore.uploadPercentage !== 100){\n            isHidden = true;\n        }\n    },\n    dictDefaultMessage: \"Click here or Drop video here to upload <br>(Max video file size is 25GB)\",\n    forceFallback: false, // for testing, set to true.\n    accept: function(file, done) {\n        if (file.name === \"\") {\n            done(\"Need a file.\");\n        } else if (file.size > 25000000000) {\n            console.log(file.size)\n            done(\"Video file too big.\");\n            alert('Video file must be smaller than 25GB');\n        }\n        else { done(); }\n    }\n});\n\nmyDropzone.on(\"addedfile\", file => {\n    uploadingMessage = 1;\n    console.log(`File added: ${file.name}`);\n\n});\n\nmyDropzone.on(\"complete\", function(file) {\n    uploadingMessage = 0;\n    uploadCompleteMessage = 1;\n    myDropzone.removeFile(file);\n    userStore.uploadPercentage = 0;\n    isHidden = false;\n    Inertia.reload({\n        only: [\"videos\"],\n    });\n});\n\n})\n\nlet props = defineProps({\n    movieId: Number,\n    movieTrailerId: Number,\n    showEpisodeId: Number,\n})\n\nfunction setMovieOrEpisodeId() {\n    if (props.movieId !== null) {\n        userStore.uploadMovieId = props.mov;\n    } else if (props.movieTrailerId !== null) {\n        userStore.movieTrailerId = props.movieTrailerId;\n    } else if (props.showEpisodeId !== null) {\n        userStore.uploadShowEpisodeId = props.showEpisodeId;\n    }\n}\n\nsetMovieOrEpisodeId()\n\nlet form = useForm({\n    file: [],\n    // movieId: userStore.uploadMovieId,\n    movieId: props.movieId,\n    movieTrailerId: props.movieId,\n    showEpisodeId: props.showEpisodeId,\n});\n\n// let props = defineProps({\n//     filters: Object,\n//     can: Object,\n//     videos: Object,\n//     message: String,\n//     errors: ref(''),\n//     isHidden: ref(false),\n//     done: ref(),\n// });\n\n</script>\n<style scoped>\n\n.dropzone {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    row-gap: 16px;\n    border: 2px dashed #000000;\n    background-color: #fce4bb;\n    transition: 0.3s ease all;\n}\n\nlabel {\n    padding: 8px 12px;\n    color: #fff;\n    background-color: #4bb1b1;\n    transition: 0.3s ease all;\n}\n\n.active-dropzone {\n    color: #fff;\n    border-color: #fff;\n    background-color: #4bb1b1;\n}\n\n.active-dropzone  label {\n    background-color: #fff;\n    color: #4bb1b1;\n}\n/*6b7280*/\n/*4bb1b1*/\n\n</style>\n","import api from \"!../../../../node_modules/laravel-mix/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-9.use[1]!../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-9.use[2]!../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./VideoUpload.vue?vue&type=style&index=0&id=24d24480&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./VideoUpload.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./VideoUpload.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./VideoUpload.vue?vue&type=style&index=0&id=24d24480&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-24d24480\"]])\n\nexport default __exports__","import script from \"./ValidationErrors.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ValidationErrors.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { computed } from 'vue';\nimport { usePage } from '@inertiajs/inertia-vue3';\n\nconst errors = computed(() => usePage().props.value.errors);\nconst hasErrors = computed(() => Object.keys(errors.value).length > 0);\n</script>\n\n<template>\n    <div v-if=\"hasErrors\">\n        <div class=\"font-medium text-red-600\">\n            Whoops! Something went wrong.\n        </div>\n\n        <ul class=\"mt-3 list-disc list-inside text-sm text-red-600\">\n            <li v-for=\"(error, key) in errors\" :key=\"key\">\n                {{ error }}\n            </li>\n        </ul>\n    </div>\n</template>\n","import { defineStore } from \"pinia\";\n\nexport let useMovieStore = defineStore('movieStore', {\n    state: () => ({\n        id: 0,\n        category_id: 0,\n        category_sub_id: 0,\n        category_description: '',\n        sub_categories: [],\n    }),\n\n    actions: {\n        //\n    },\n\n    getters: {\n        //\n    }\n});\n","import script from \"./Edit.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Edit.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n\n    <Head :title=\"`Edit Movie: ${movie.name}`\"/>\n\n    <div class=\"place-self-center flex flex-col gap-y-3\">\n        <div id=\"topDiv\" class=\"bg-dark text-light p-5 mb-10\">\n\n            <Message v-if=\"userStore.showFlashMessage\" :flash=\"$page.props.flash\"/>\n\n            <header>\n                <div class=\"flex justify-between mb-6\">\n                    <div>\n                        <div class=\"font-bold mb-4 text-red-700\">EDIT MOVIE</div>\n                        <h1 class=\"text-3xl\">\n                            <Link :href=\"`/movies/${movie.slug}`\" class=\"text-red-700 font-bold uppercase\">{{ movie.name }}</Link>\n                        </h1>\n                    </div>\n                    <div>\n                        <button\n                            @click=\"back\"\n                            class=\"px-4 py-2 text-white bg-orange-600 hover:bg-orange-500 rounded-lg\"\n                        >Cancel\n                        </button>\n                    </div>\n                </div>\n            </header>\n\n            <div class=\"flex flex-col\">\n                <div class=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\n                    <div class=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\n                        <div class=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\n\n\n                            <div v-if=\"form.errors.name\" v-text=\"form.errors.name\"\n                                 class=\"bg-red-600 p-2 w-full text-white font-semibold mt-1 mb-6\"></div>\n                            <div v-if=\"form.errors.description\" v-text=\"form.errors.description\"\n                                 class=\"bg-red-600 p-2 w-full text-white font-semibold mt-1 mb-6\"></div>\n                            <div v-if=\"form.errors.file_url\" v-text=\"form.errors.file_url\"\n                                 class=\"bg-red-600 p-2 w-full text-white font-semibold mt-1 mb-6\"></div>\n                            <!--                            <div v-if=\"form.errors.video_file_embed_code\" v-text=\"form.errors.video_file_embed_code\"-->\n                            <!--                                 class=\"bg-red-600 p-2 w-full text-white font-semibold mt-1\"></div>-->\n\n\n                            <!-- Begin grid 2-col -->\n                            <div class=\"grid grid-cols-1 sm:grid-cols-2 space-x-6 p-6\">\n\n\n                                <!--Left Column-->\n                                <div>\n                                    <div class=\"flex space-y-3\">\n                                        <div class=\"mb-6\">\n                                            <SingleImage :image=\"props.image\" :key=\"props.image\"/>\n                                        </div>\n                                    </div>\n\n                                    <div class=\"w-full\">\n\n                                        <label class=\"block mb-2 uppercase font-bold text-xs text-light text-red-700\"\n                                               for=\"name\"\n                                        >\n                                            Change Movie Poster\n                                        </label>\n\n                                        <ImageUpload :image=\"props.image\"\n                                                     :server=\"'/moviesUploadPoster'\"\n                                                     :name=\"'Upload Movie Poster'\"\n                                                     :maxSize=\"'30MB'\"\n                                                     :fileTypes=\"'image/jpg, image/jpeg, image/png'\"\n                                                     @reloadImage=\"reloadImage\"\n                                        />\n\n                                    </div>\n\n                                    <div class=\"flex space-y-3\">\n                                        <div class=\"mb-6 bg-black w-full p-6\">\n                                            <span\n                                                v-if=\"video.upload_status === 'processing'\"\n                                                class=\"text-center place-self-center text-white font-semibold text-xl\">Video processing...</span>\n                                            <video v-if=\"video.upload_status !== 'processing'\" :src=\"video.cdn_endpoint+video.cloud_folder+video.folder+'/'+video.file_name\" controls></video>\n                                        </div>\n                                    </div>\n\n                                    <div class=\"\">\n                                        <label class=\"block mb-2 uppercase font-bold text-xs text-red-700\"\n                                               for=\"name\"\n                                        >\n                                            Upload Movie\n                                        </label>\n                                        <div class=\"max-full mx-auto mt-2 mb-6 bg-gray-200 px-6 pt-4 pb-2 text-dark\">\n                                            <h2 class=\"text-xl font-semibold text-gray-800\">Upload Video</h2>\n\n                                            <ul class=\"pb-4 text-gray-800\">\n                                                <li>Max Video Length: <span class=\"text-orange-400\">4 hours</span>\n                                                </li>\n                                                <li>File Types accepted: <span class=\"text-orange-400\">mp4, webm, ogg</span>\n                                                </li>\n                                            </ul>\n\n                                            <VideoUpload :movieId=\"movie.id\" class=\"text-black\"/>\n\n                                        </div>\n\n\n\n                                    </div>\n\n\n\n\n                                    <div class=\"flex space-y-3\">\n                                        <div class=\"mb-6 bg-black w-full p-6\">\n<!--                                            VIDEO HERE-->\n                                        </div>\n                                    </div>\n\n                                    <div>\n                                        <label class=\"block mb-2 uppercase font-bold text-xs text-red-700\"\n                                               for=\"name\"\n                                        >\n                                            Upload Movie Trailer\n                                        </label>\n                                        <div class=\"max-full mx-auto mt-2 mb-6 bg-gray-200 px-6 pt-4 pb-2 text-dark\">\n                                            <h2 class=\"text-xl font-semibold text-gray-800\">Upload Video</h2>\n\n                                            <ul class=\"pb-4 text-gray-800\">\n                                                <li>Max Video Length: <span class=\"text-orange-400\">4 hours</span>\n                                                </li>\n                                                <li>File Types accepted: <span class=\"text-orange-400\">mp4, webm, ogg</span>\n                                                </li>\n                                            </ul>\n\n<!--                                            <VideoUpload class=\"text-black\"/>-->\n\n                                        </div>\n\n                                    </div>\n\n\n\n                                </div>\n\n\n\n                            <!--Right Column-->\n                                <div>\n\n                                    <form @submit.prevent=\"submit\">\n\n                                        <div class=\"mb-6\">\n                                            <label class=\"block mb-2 uppercase font-bold text-xs text-red-700\"\n                                                   for=\"name\"\n                                            >\n                                                Movie Name\n                                            </label>\n\n                                            <input v-model=\"form.name\"\n                                                   class=\"border border-gray-400 text-gray-800 p-2 w-1/2 rounded-lg\"\n                                                   type=\"text\"\n                                                   name=\"name\"\n                                                   id=\"name\"\n                                                   required\n                                            >\n                                            <div v-if=\"form.errors.name\" v-text=\"form.errors.name\"\n                                                 class=\"text-xs text-red-600 mt-1\"></div>\n                                        </div>\n\n                                        <div class=\"mb-6 w-64\">\n                                            <label class=\"block mb-2 uppercase font-bold text-xs text-red-700\"\n                                                   for=\"release_date\"\n                                            >\n                                                Release Year\n                                            </label>\n\n                                            <input v-model=\"form.release_year\"\n                                                   class=\"border border-gray-400 text-gray-800 p-2 w-1/2 rounded-lg\"\n                                                   type=\"number\"\n                                                   name=\"release_year\"\n                                                   id=\"release_year\"\n                                                   minlength=\"4\"\n                                                   maxlength=\"4\"\n\n                                            >\n                                            <div v-if=\"form.errors.release_year\" v-text=\"form.errors.release_year\"\n                                                 class=\"text-xs text-red-600 mt-1\"></div>\n                                        </div>\n\n                                        <div class=\"mb-6\">\n                                            <label class=\"block mb-2 uppercase font-bold text-xs text-red-700\"\n                                                   for=\"category\"\n                                            >\n                                                Category\n                                            </label>\n\n                                            <select class=\"border border-gray-400 text-gray-800 p-2 w-1/2 rounded-lg block mb-2 uppercase font-bold text-xs \"\n                                                    v-model=\"form.category\" @change=\"chooseCategory($event)\"\n                                            >\n                                                <option v-for=\"category in props.categories\"\n                                                        :key=\"category.id\" :value=\"category.id\">{{category.name}}</option>\n\n\n                                            </select>\n        <!--    This was for practice... the next step is to loop over the sub-categories that belongTo the category selected. -->\n        <!--                                    <select>-->\n        <!--                                        <option v-for=\"option in options\" :value=\"option.value\">{{option.text}}</option>-->\n        <!--                                    </select>-->\n                                            <span class=\"\">{{movieStore.category_description}}</span>\n                                            </div>\n\n                                            <div v-if=\"form.errors.category\" v-text=\"form.errors.category\"\n                                                 class=\"text-xs text-red-600 mb-2\">\n                                        </div>\n\n                                        <div class=\"mb-6\">\n                                            <label class=\"block mb-2 text-gray-600 uppercase font-bold text-xs text-red-700\"\n                                                   for=\"sub_category\"\n                                            >\n                                                Sub-category\n                                            </label>\n\n                                            <select disabled class=\"border border-gray-400 text-gray-800 disabled:bg-gray-600 disabled:cursor-not-allowed p-2 w-1/2 rounded-lg block mb-2 uppercase font-bold text-xs\"\n                                                    v-model=\"form.sub_category\"\n                                            >\n                                                <option value=\"1\">Option</option>\n                                            </select>\n                                            <div v-if=\"form.errors.sub_category\" v-text=\"form.errors.sub_category\"\n                                                 class=\"text-xs text-red-600 mt-1\"></div>\n                                        </div>\n\n                                        <div class=\"mb-6\">\n                                            <label class=\"block mb-2 uppercase font-bold text-xs text-red-700\"\n                                                   for=\"name\"\n                                            >\n                                                Logline\n                                            </label>\n\n                                            <input v-model=\"form.logline\"\n                                                   class=\"border border-gray-400 text-gray-800 p-2 w-1/2 rounded-lg\"\n                                                   type=\"text\"\n                                                   name=\"logline\"\n                                                   id=\"logline\"\n                                                   required\n                                            >\n                                            <div v-if=\"form.errors.logline\" v-text=\"form.errors.logline\"\n                                                 class=\"text-xs text-red-600 mt-1\"></div>\n                                        </div>\n\n                                        <div class=\"mb-6\">\n                                            <label class=\"block mb-2 uppercase font-bold text-xs text-red-700\"\n                                                   for=\"description\"\n                                            >\n                                                Description\n                                            </label>\n                                            <TabbableTextarea v-model=\"form.description\"\n                                                              class=\"border border-gray-400 text-gray-800 p-2 w-full rounded-lg\"\n                                                              name=\"description\"\n                                                              id=\"description\"\n                                                              rows=\"10\" cols=\"30\"\n                                                              required\n                                            />\n                                            <div v-if=\"form.errors.description\" v-text=\"form.errors.description\"\n                                                 class=\"text-xs text-red-600 mt-1\"></div>\n                                        </div>\n\n                                        <div class=\"mb-6\">\n                                            <label class=\"block mb-2 uppercase font-bold text-xs text-red-700\"\n                                                   for=\"file_url\"\n                                            >\n                                                Change Video URL (if hosted externally) <span class=\"text-white dark:text-black\">*</span>\n                                            </label>\n\n                                            <input v-model=\"form.file_url\"\n                                                   class=\"border border-gray-400 text-gray-800 p-2 w-full rounded-lg\"\n                                                   type=\"text\"\n                                                   name=\"file_url\"\n                                                   id=\"file_url\"\n                                            >\n                                            <div v-if=\"form.errors.file_url\" v-text=\"form.errors.file_url\"\n                                                 class=\"text-xs text-red-600 mt-1\"></div>\n                                        </div>\n\n                                        <div class=\"block mb-6 uppercase font-bold text-xs text-light\">\n                                            <div class=\"mb-2\">* Notes:</div>\n\n                                            <ul class=\"list-decimal pb-2 ml-2 mb-4 border-b\">\n                                                <li>\n                                                    We have not enabled the use of Facebook videos for security purposes.\n                                                </li>\n                                            </ul>\n                                        </div>\n\n\n                                        <div class=\"mb-6\">\n                                            <label class=\"block mb-2 uppercase font-bold text-xs text-red-700\"\n                                                   for=\"name\"\n                                            >\n                                                Website URL\n                                            </label>\n\n                                            <input v-model=\"form.www_url\"\n                                                   class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                                                   type=\"text\"\n                                                   name=\"www_url\"\n                                                   id=\"www_url\"\n                                            >\n                                            <div v-if=\"form.errors.www_url\" v-text=\"form.errors.www_url\"\n                                                 class=\"text-xs text-red-600 mt-1\"></div>\n                                        </div>\n\n                                        <div class=\"mb-6\">\n                                            <label class=\"block mb-2 uppercase font-bold text-xs text-red-700\"\n                                                   for=\"name\"\n                                            >\n                                                Instagram @\n                                            </label>\n\n                                            <input v-model=\"form.instagram_name\"\n                                                   class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                                                   type=\"text\"\n                                                   name=\"instagram_name handle\"\n                                                   id=\"instagram_name\"\n                                            >\n                                            <div v-if=\"form.errors.instagram_name\" v-text=\"form.errors.instagram_name\"\n                                                 class=\"text-xs text-red-600 mt-1\"></div>\n                                        </div>\n\n                                        <div class=\"mb-6\">\n                                            <label class=\"block mb-2 uppercase font-bold text-xs text-red-700\"\n                                                   for=\"name\"\n                                            >\n                                                Telegram URL\n                                            </label>\n\n                                            <input v-model=\"form.telegram_url\"\n                                                   class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                                                   type=\"text\"\n                                                   name=\"telegram_url\"\n                                                   id=\"telegram_url\"\n                                            >\n                                            <div v-if=\"form.errors.telegram_url\" v-text=\"form.errors.telegram_url\"\n                                                 class=\"text-xs text-red-600 mt-1\"></div>\n                                        </div>\n\n                                        <div class=\"mb-6\">\n                                            <label class=\"block mb-2 uppercase font-bold text-xs text-red-700\"\n                                                   for=\"name\"\n                                            >\n                                                Twitter @\n                                            </label>\n\n                                            <input v-model=\"form.twitter_handle\"\n                                                   class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                                                   type=\"text\"\n                                                   name=\"twitter_handle\"\n                                                   id=\"twitter_handle\"\n                                            >\n                                            <div v-if=\"form.errors.twitter_handle\" v-text=\"form.errors.twitter_handle\"\n                                                 class=\"text-xs text-red-600 mt-1\"></div>\n                                        </div>\n\n                                    </form>\n\n                                </div>\n                                <!-- End Right Column -->\n                            </div>\n                            <!-- End grid 2-col -->\n\n\n                            <div class=\"flex justify-end my-6 mr-6\">\n                                <JetValidationErrors class=\"mr-4\" />\n                                <button\n                                    @click=\"submit\"\n                                    class=\"bg-blue-600 hover:bg-blue-500 text-white rounded py-2 px-4\"\n                                    :disabled=\"form.processing\"\n                                >\n                                    Save\n                                </button>\n                            </div>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n\n        </div>\n    </div>\n\n</template>\n\n<script setup>\nimport { onBeforeMount, onMounted, ref } from \"vue\"\nimport { Inertia } from \"@inertiajs/inertia\"\nimport {useForm, usePage} from \"@inertiajs/inertia-vue3\"\nimport { useVideoPlayerStore } from \"@/Stores/VideoPlayerStore.js\"\nimport { useTeamStore } from \"@/Stores/TeamStore.js\"\nimport { useShowStore } from \"@/Stores/ShowStore.js\"\nimport { useUserStore } from \"@/Stores/UserStore\"\nimport { useMovieStore } from \"@/Stores/MovieStore\"\nimport JetValidationErrors from '@/Jetstream/ValidationErrors.vue'\nimport TabbableTextarea from \"@/Components/TabbableTextarea\"\nimport Message from \"@/Components/Modals/Messages\"\nimport ShowEpisodeEditHeader from \"@/Components/ShowEpisodes/Edit/ShowEpisodeEditHeader\"\nimport SingleImage from \"@/Components/Multimedia/SingleImage\"\nimport ImageUpload from \"@/Components/Uploaders/ImageUpload\"\nimport VideoUpload from \"@/Components/Uploaders/VideoUpload\"\n\nlet videoPlayerStore = useVideoPlayerStore()\nlet teamStore = useTeamStore()\nlet showStore = useShowStore()\nlet userStore = useUserStore()\nlet movieStore = useMovieStore()\n\nlet props = defineProps({\n    movie: Object,\n    video: Object,\n    trailer: Object,\n    image: Object,\n    categories: Object,\n    sub_categories: Object,\n    movieCategory: String,\n    movieCategorySub: String,\n})\n\nlet form = useForm({\n    id: props.movie.id,\n    name: props.movie.name,\n    release_year: props.movie.release_year,\n    category: props.movie.movie_category_id,\n    sub_category: props.movie.movie_category_sub_id,\n    description: props.movie.description,\n    logline: props.movie.logline,\n    user_id: props.movie.user_id,\n    team_id: props.movie.team_id,\n    file_url: props.movie.file_url,\n    www_url: props.movie.www_url,\n    instagram_name: props.movie.instagram_name,\n    telegram_url: props.movie.telegram_url,\n    twitter_handle: props.movie.twitter_handle,\n})\n\nlet reloadImage = () => {\n    Inertia.reload({\n        only: ['image'],\n    });\n};\n\nlet submit = () => {\n    form.put(route('movies.update', props.movie.slug));\n}\n\nuserStore.currentPage = 'movieEdit'\nuserStore.showFlashMessage = true;\n\nonMounted(() => {\n    videoPlayerStore.makeVideoTopRight();\n    if (userStore.isMobile) {\n        videoPlayerStore.ottClass = 'ottClose'\n        videoPlayerStore.ott = 0\n    }\n    document.getElementById(\"topDiv\").scrollIntoView()\n})\n\n// let category = ref();\n\nfunction chooseCategory(event) {\nmovieStore.category_description =  props.categories[event.target.selectedIndex].description;\n}\n// next step is to add sub-categories and loop over them based on the selected category.\n// this was for practice:\n// const options = []\n//     Array.from(event.target.selectedOptions).forEach(item => {\n//         options.push({\n//             value: item.value,\n//             text: `You have selected ${item.text}`\n//         })\n//     })\n//     this.options = options\n//     console.log(event.target.selectedOptions);\n\n\n// showStore.episodePoster = props.poster;\n\n\nfunction muteMainVideo(){\n    videoPlayerStore.mute();\n}\n\nfunction back() {\n    let urlPrev = usePage().props.value.urlPrev\n    if (urlPrev !== 'empty') {\n        Inertia.visit(urlPrev)\n    }\n}\n\n</script>\n"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","useShowStore","defineStore","state","id","category_id","category_sub_id","category_description","sub_categories","description","posterName","posterId","episodes","team_id","episodePoster","noteEdit","note","saveNoteProcessing","Boolean","errorMessage","actions","fill","fn","_this","_callee","_context","$state","self","args","arguments","apply","err","undefined","getters","useTeamStore","slug","totalSpots","memberSpots","teamLeader","members","managers","activeShow","activeEpisode","creators","showModal","confirmDialog","confirmManagerDialog","selectedManagerName","selectedManagerId","addManager","removeManager","deleteMemberName","deleteMemberId","goLiveDisplay","can","setActiveTeam","team","this","setActiveShow","show","setActiveEpisode","episode","deleteTeamMemberCancel","confirmTeamManagerCancel","deleteTeamMember","Inertia","visit","route","data","user_id","team_slug","addTeamManager","removeTeamManager","toggleGoLiveDisplay","spotsRemaining","___CSS_LOADER_EXPORT___","module","back","urlPrev","usePage","props","onTabPress","textarea","target","val","start","selectionStart","end","selectionEnd","substring","FilePond","_defineProperty","metadataKey","metadataValue","vueFilePond","FilePondPluginFileValidateType","FilePondPluginFileValidateSize","FilePondPluginImagePreview","FilePondPluginFileMetadata","filepondInitialized","console","log","handleProcessedFile","file","emit","setOptions","fileMetadataObject","show_id","userStore","useUserStore","uploadingMessage","ref","uploadCompleteMessage","isHidden","onMounted","myDropzone","Dropzone","url","paramName","maxFilesize","chunking","chunkSize","parallelChunkUploads","retryChunks","retryChunksLimit","capture","acceptedFiles","uploadprogress","progress","bytesSent","uploadPercentage","dictDefaultMessage","forceFallback","accept","size","alert","on","concat","removeFile","reload","only","movieId","uploadMovieId","mov","movieTrailerId","showEpisodeId","uploadShowEpisodeId","form","useForm","options","locals","errors","computed","hasErrors","useMovieStore","videoPlayerStore","useVideoPlayerStore","movieStore","movie","release_year","category","movie_category_id","sub_category","movie_category_sub_id","logline","file_url","www_url","instagram_name","telegram_url","twitter_handle","reloadImage","submit","put","currentPage","showFlashMessage","makeVideoTopRight","isMobile","ottClass","ott","document","getElementById","scrollIntoView","event","categories","selectedIndex"],"sourceRoot":""}
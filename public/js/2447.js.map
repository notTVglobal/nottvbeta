{"version":3,"file":"js/2447.js","mappings":"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","sources":["webpack:///./resources/js/Stores/TeamStore.js","webpack:///./resources/js/Utilities/PageSetup.js","webpack:///./resources/js/Pages/Shows/Create.vue?f040","webpack:///./resources/js/Components/Global/Buttons/CancelButton.vue?b7c6","webpack:///./resources/js/Components/Global/Buttons/CancelButton.vue","webpack:///./resources/js/Components/Global/Modals/Messages.vue?dfe9","webpack:///./resources/js/Components/Global/Modals/Messages.vue","webpack:///./resources/js/Jetstream/ValidationErrors.vue?5fdc","webpack:///./resources/js/Jetstream/ValidationErrors.vue","webpack:///./resources/js/Components/Global/Modals/CheckboxNotification.vue?6fd1","webpack:///./resources/js/Components/Global/Modals/CheckboxNotification.vue","webpack:///./resources/js/Pages/Shows/Create.vue","webpack:///./resources/js/Pages/Shows/Create.vue?743a","webpack:///./resources/js/Pages/Shows/Create.vue?091d"],"sourcesContent":["import {defineStore} from \"pinia\";\nimport {Inertia} from \"@inertiajs/inertia\";\n\nconst initialState = () => ({\n    id: 0,\n    name: '',\n    description: '',\n    slug: '',\n    totalSpots: '',\n    memberSpots: '',\n    teamCreator: [],\n    teamLeader: [],\n    members: [],\n    managers: [],\n    activeShow: [],\n    activeEpisode: [],\n    creators: [],\n    showModal: Boolean,\n    confirmDialog: false,\n    confirmManagerDialog: false,\n    selectedManagerName: '',\n    selectedManagerId: 0,\n    addManager: false,\n    removeManager: false,\n    deleteMemberName: '',\n    deleteMemberId: 0,\n    noteEdit: 0,\n    note: '',\n    saveNoteProcessing: Boolean,\n    // on the show episode manage page\n    // turn on the go live div\n    goLiveDisplay: false,\n    can: [],\n    openComponent: 'teamShows',\n})\n\nexport const useTeamStore = defineStore('teamStore', {\n    state: initialState,\n    actions: {\n        reset() {\n            // Reset the store to its original state (clear all data)\n            Object.assign(this, initialState());\n        },\n        // async fill() {\n        //     let r = await import('@/Json/team.json');\n        //     this.$state = r.default;\n        // },\n        setActiveTeam(team) {\n            this.id = team.id;\n            this.name = team.name;\n            this.description = team.description;\n            this.slug = team.slug;\n            this.totalSpots = team.totalSpots;\n            this.memberSpots = team.memberSpots;\n        },\n        setActiveShow(show) {\n            this.activeShow = show;\n        },\n        setActiveEpisode(episode) {\n            this.activeShow = episode;\n        },\n        // getCreators() {\n        //     Inertia.reload({ only: ['creators'] })\n        // },\n        deleteTeamMemberCancel() {\n            this.confirmDialog = false;\n        },\n        confirmTeamManagerCancel() {\n            this.confirmManagerDialog = false;\n        },\n        // loadTeamMembers(members){\n        //     this.members = members;\n        // }\n        deleteTeamMember() {\n            Inertia.visit(route('teams.removeTeamMember'), {\n                method: 'post',\n                data: {\n                    user_id: this.deleteMemberId,\n                    team_id: this.id,\n                    team_slug: this.slug\n                },\n            })\n        },\n        addTeamManager() {\n            Inertia.visit(route('teams.addTeamManager'), {\n                method: 'post',\n                data: {\n                    user_id: this.selectedManagerId,\n                    team_id: this.id,\n                    team_slug: this.slug\n                },\n            })\n            this.confirmManagerDialog = false;\n        },\n        removeTeamManager() {\n            Inertia.visit(route('teams.removeTeamManager'), {\n                method: 'post',\n                data: {\n                    user_id: this.selectedManagerId,\n                    team_id: this.id,\n                    team_slug: this.slug\n                },\n            })\n            this.confirmManagerDialog = false;\n        },\n        toggleGoLiveDisplay() {\n            this.goLiveDisplay = ! this.goLiveDisplay;\n        },\n        async fetchTeamMembers() {\n            await axios.get('/team/team-members').then().error()\n        },\n    },\n\n    getters: {\n        spotsRemaining() {\n            if (this.totalSpots - this.memberSpots < 1){\n                return 0\n            }\n            return this.totalSpots - this.memberSpots;\n        },\n    }\n});\n\n\n// Another option for declaring specific data to return:\n// let data = r.default;\n//\n// import('@/Json/team.json').then(r => {\n// this.$patch({\n//     name: data.name,\n//     spots: data.spots,\n//     members: data.members\n// });\n// });\n","import { onBeforeMount, onMounted } from 'vue'\nimport { useUserStore } from \"@/Stores/UserStore\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useVideoPlayerStore } from \"@/Stores/VideoPlayerStore\"\nimport { Inertia } from '@inertiajs/inertia'\n\nexport function usePageSetup(pageName) {\n    const userStore = useUserStore()\n    const appSettingStore = useAppSettingStore()\n    const videoPlayerStore = useVideoPlayerStore()\n\n    appSettingStore.currentPage = pageName\n    appSettingStore.showFlashMessage = true\n    appSettingStore.pageIsHidden = false\n\n    if (userStore.isMobile) {\n        appSettingStore.ott = 0\n    }\n\n    videoPlayerStore.makeVideoTopRight()\n\n    if (appSettingStore.pageReload) {\n        appSettingStore.pageReload = false\n        window.location.reload(true);\n    }\n    // Check if the URL contains query strings\n\n\n    // Only scroll into view if there are no query strings\n\n        // const topDiv = document.getElementById(\"topDiv\")\n        // if (topDiv) {\n        //     topDiv.scrollIntoView()\n        // }\n        Inertia.on('navigate', (event) => {\n            const hasQueryStrings = window.location.search !== '';\n            if (!hasQueryStrings || appSettingStore.shouldScrollToTop) {\n                requestAnimationFrame(() => {\n                    const topDiv = document.getElementById(\"topDiv\");\n                    if (topDiv) {\n                        topDiv.scrollIntoView({behavior: 'auto'});\n                    } else {\n                        window.scrollTo(0, 0);\n                    }\n                });\n            }\n            appSettingStore.shouldScrollToTop = false;\n        })\n    // Only update if we're not already on this page to avoid overwriting with the current URL\n    appSettingStore.setPrevUrl()\n    appSettingStore.showOttButtons = true\n    appSettingStore.noLayout = false\n\n    // Inertia.reload()\n\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".status-1[data-v-e348adec]{color:green}.status-2[data-v-e348adec]{color:blue}.status-3[data-v-e348adec]{color:purple}.status-4[data-v-e348adec]{color:orange}.status-5[data-v-e348adec]{color:red}.status-6[data-v-e348adec]{color:#a9a9a9;font-style:italic}.status-7[data-v-e348adec],.status-8[data-v-e348adec]{color:#000;font-style:italic}.status-10[data-v-e348adec],.status-9[data-v-e348adec]{color:red;font-style:italic}.status-11[data-v-e348adec]{color:#a9a9a9}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/Pages/Shows/Create.vue\"],\"names\":[],\"mappings\":\"AA8ZA,2BACE,WACF,CAEA,2BACE,UACF,CAEA,2BACE,YACF,CAEA,2BACE,YACF,CAEA,2BACE,SACF,CAEA,2BACE,aAAe,CACf,iBACF,CAOA,sDAJE,UAAY,CACZ,iBAMF,CAOA,uDAJE,SAAU,CACV,iBAMF,CAEA,4BACE,aACF\",\"sourcesContent\":[\"<template>\\n  <Head title=\\\"Create Show\\\"/>\\n\\n  <div class=\\\"place-self-center flex flex-col gap-y-3\\\">\\n    <div id=\\\"topDiv\\\" class=\\\"bg-white text-black dark:bg-gray-800 dark:text-gray-50 p-5 mb-10\\\">\\n\\n      <Message v-if=\\\"appSettingStore.showFlashMessage\\\" :flash=\\\"$page.props.flash\\\"/>\\n\\n      <div class=\\\"flex justify-between mt-3 mb-6\\\">\\n        <div class=\\\"text-3xl\\\">Create Show</div>\\n        <div>\\n          <CancelButton/>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"bg-orange-700 text-white w-full p-6\\\"><span class=\\\"font-bold\\\">NOTE: </span>\\n        We are working on an episode poster and video uploader for this page. For the time being, please\\n        go to the show <span class=\\\"font-bold\\\">EDIT</span> page after you create the show to add a video and a poster.\\n      </div>\\n\\n      <form @submit.prevent=\\\"submit\\\" class=\\\"max-w-md mx-auto mt-8\\\">\\n        <div class=\\\"mb-6\\\">\\n          <label class=\\\"block mb-2 uppercase font-bold text-xs dark:text-gray-200\\\"\\n                 for=\\\"team\\\"\\n          >\\n            Team\\n          </label>\\n          <select\\n              class=\\\"border border-gray-400 p-2 w-full rounded-lg block mb-2 uppercase font-bold text-xs text-gray-800\\\"\\n              v-model=\\\"selectedTeamId\\\"\\n              required\\n          >\\n            <option disabled value=\\\"\\\">Select Team</option>\\n            <option\\n                v-for=\\\"team in props.teams\\\"\\n                :key=\\\"team.id\\\"\\n                :value=\\\"team.id\\\"\\n                class=\\\"bg-white text-black border-b dark:text-gray-50 dark:bg-gray-800 dark:border-gray-600\\\"\\n                :class=\\\"'status-' + team.status.id\\\"\\n            >\\n              {{ team.name }} ({{ team.status.status }})\\n            </option>\\n\\n          </select>\\n\\n\\n          <div v-if=\\\"form.errors.team_id\\\" v-text=\\\"form.errors.team_id\\\" class=\\\"text-xs text-red-600 mt-1\\\"></div>\\n        </div>\\n\\n        <div class=\\\"mb-6\\\">\\n          <label class=\\\"block mb-2 uppercase font-bold text-xs dark:text-gray-200\\\"\\n                 for=\\\"show_runner_creator_id\\\"\\n          >\\n            Show Runner\\n          </label>\\n          <select\\n              class=\\\"border border-gray-400 p-2 w-full rounded-lg block mb-2 uppercase font-bold text-xs text-gray-800\\\"\\n              v-model=\\\"selectedShowRunnerCreatorId\\\"\\n              required\\n          >\\n            <option disabled value=\\\"\\\">Select Show Runner</option>\\n            <option\\n                v-for=\\\"member in teamMembers\\\"\\n                :key=\\\"member.creator_id\\\"\\n                :value=\\\"member.creator_id\\\"\\n                class=\\\"bg-white text-black border-b dark:text-gray-50 dark:bg-gray-800 dark:border-gray-600\\\"\\n            >\\n              {{ member.name }}\\n            </option>\\n          </select>\\n\\n          <div v-if=\\\"form.errors.show_runner_creator_id\\\" v-text=\\\"form.errors.show_runner_creator_id\\\" class=\\\"text-xs text-red-600 mt-1\\\"></div>\\n        </div>\\n\\n        <div class=\\\"mb-6\\\">\\n          <label class=\\\"block mb-2 uppercase font-bold text-xs dark:text-gray-200\\\"\\n                 for=\\\"name\\\"\\n          >\\n            Show Name\\n          </label>\\n\\n          <input v-model=\\\"form.name\\\"\\n                 class=\\\"bg-gray-50 border border-gray-400 text-gray-900 text-sm p-2 w-full rounded-lg focus:ring-blue-500 focus:border-blue-500\\\"\\n                 type=\\\"text\\\"\\n                 name=\\\"name\\\"\\n                 id=\\\"name\\\"\\n                 required\\n          >\\n          <div v-if=\\\"form.errors.name\\\" v-text=\\\"form.errors.name\\\" class=\\\"text-xs text-red-600 mt-1\\\"></div>\\n        </div>\\n\\n        <div class=\\\"mb-6\\\">\\n          <label class=\\\"block mb-2 uppercase font-bold text-xs dark:text-gray-200\\\"\\n                 for=\\\"category\\\"\\n          >\\n            Category\\n          </label>\\n\\n\\n          <select\\n              class=\\\"border border-gray-400 text-gray-800 p-2 w-full rounded-lg block mb-2 uppercase font-bold text-xs \\\"\\n              v-model=\\\"selectedCategoryId\\\" @change=\\\"chooseCategory\\\"\\n          >\\n            <option v-for=\\\"category in categories\\\"\\n                    :key=\\\"category.id\\\" :value=\\\"category.id\\\">{{ category.name }}\\n            </option>\\n\\n          </select>\\n          <div v-if=\\\"form.errors.category\\\" v-text=\\\"form.errors.category\\\"\\n               class=\\\"text-xs text-red-600 mt-1\\\"></div>\\n\\n          <span class=\\\"\\\">{{showStore.category_description}}</span>\\n        </div>\\n\\n        <div class=\\\"mb-6\\\">\\n          <label class=\\\"block mb-1 uppercase font-bold text-xs dark:text-gray-200\\\"\\n                 for=\\\"sub_category\\\"\\n          >\\n            Sub-category\\n          </label>\\n\\n          <select\\n                  class=\\\"border border-gray-400 text-gray-800 disabled:bg-gray-300 dark:disabled:bg-gray-600 disabled:cursor-not-allowed p-2 w-full rounded-lg block mb-2 uppercase font-bold text-xs\\\"\\n                  v-model=\\\"selectedSubCategoryId\\\" @change=\\\"chooseSubCategory\\\"\\n          >\\n            <option disabled value=\\\"\\\">Select a subcategory</option>\\n            <option v-for=\\\"subCategory in subCategories\\\" :key=\\\"subCategory.id\\\" :value=\\\"subCategory.id\\\">\\n              {{ subCategory?.name }}\\n            </option>\\n          </select>\\n          <span class=\\\"\\\">{{ showStore.sub_category_description }}</span>\\n          <div v-if=\\\"form.errors.sub_category\\\" v-text=\\\"form.errors.sub_category\\\"\\n               class=\\\"text-xs text-red-600 mt-1\\\"></div>\\n        </div>\\n\\n        <div class=\\\"mb-6\\\">\\n          <label class=\\\"block mb-2 uppercase font-bold text-xs dark:text-gray-200\\\"\\n                 for=\\\"description\\\"\\n          >\\n            Description\\n          </label>\\n          <textarea v-model=\\\"form.description\\\"\\n                    class=\\\"bg-gray-50 border border-gray-400 text-gray-900 text-sm p-2 w-full rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\\\"\\n                    type=\\\"text\\\"\\n                    name=\\\"description\\\"\\n                    id=\\\"description\\\"\\n                    required\\n          ></textarea>\\n          <div v-if=\\\"form.errors.description\\\" v-text=\\\"form.errors.description\\\" class=\\\"text-xs text-red-600 mt-1\\\"></div>\\n        </div>\\n\\n        <div class=\\\"mb-6\\\">\\n          <label class=\\\"block mb-2 uppercase font-bold text-xs dark:text-gray-200\\\"\\n                 for=\\\"name\\\"\\n          >\\n            Website URL\\n          </label>\\n\\n          <input v-model=\\\"form.www_url\\\"\\n                 class=\\\"border border-gray-400 p-2 w-full rounded-lg text-black\\\"\\n                 type=\\\"text\\\"\\n                 name=\\\"www_url\\\"\\n                 id=\\\"www_url\\\"\\n          >\\n          <div v-if=\\\"form.errors.www_url\\\" v-text=\\\"form.errors.www_url\\\"\\n               class=\\\"text-xs text-red-600 mt-1\\\"></div>\\n        </div>\\n\\n        <div class=\\\"mb-6\\\">\\n          <label class=\\\"block mb-2 uppercase font-bold text-xs dark:text-gray-200\\\"\\n                 for=\\\"name\\\"\\n          >\\n            Instagram Handle\\n          </label>\\n\\n          <input v-model=\\\"form.instagram_name\\\"\\n                 class=\\\"border border-gray-400 p-2 w-full rounded-lg text-black\\\"\\n                 type=\\\"text\\\"\\n                 name=\\\"instagram_name handle\\\"\\n                 id=\\\"instagram_name\\\"\\n          >\\n          <div v-if=\\\"form.errors.instagram_name\\\" v-text=\\\"form.errors.instagram_name\\\"\\n               class=\\\"text-xs text-red-600 mt-1\\\"></div>\\n        </div>\\n\\n        <div class=\\\"mb-6\\\">\\n          <label class=\\\"block mb-2 uppercase font-bold text-xs dark:text-gray-200\\\"\\n                 for=\\\"name\\\"\\n          >\\n            Telegram URL\\n          </label>\\n\\n          <input v-model=\\\"form.telegram_url\\\"\\n                 class=\\\"border border-gray-400 p-2 w-full rounded-lg text-black\\\"\\n                 type=\\\"text\\\"\\n                 name=\\\"telegram_url\\\"\\n                 id=\\\"telegram_url\\\"\\n          >\\n          <div v-if=\\\"form.errors.telegram_url\\\" v-text=\\\"form.errors.telegram_url\\\"\\n               class=\\\"text-xs text-red-600 mt-1\\\"></div>\\n        </div>\\n\\n        <div class=\\\"mb-6\\\">\\n          <label class=\\\"block mb-2 uppercase font-bold text-xs dark:text-gray-200\\\"\\n                 for=\\\"name\\\"\\n          >\\n            X (formerly Twitter) @\\n          </label>\\n\\n          <input v-model=\\\"form.twitter_handle\\\"\\n                 class=\\\"border border-gray-400 p-2 w-full rounded-lg text-black\\\"\\n                 type=\\\"text\\\"\\n                 name=\\\"twitter_handle\\\"\\n                 id=\\\"twitter_handle\\\"\\n          >\\n          <div v-if=\\\"form.errors.twitter_handle\\\" v-text=\\\"form.errors.twitter_handle\\\"\\n               class=\\\"text-xs text-red-600 mt-1\\\"></div>\\n        </div>\\n\\n        <div class=\\\"mb-6\\\">\\n          <label class=\\\"block mb-2 uppercase font-bold text-xs dark:text-gray-200\\\"\\n                 for=\\\"notes\\\"\\n          >\\n            Notes (Only your team members see these notes, they are not public)\\n          </label>\\n          <textarea v-model=\\\"form.notes\\\"\\n                    class=\\\"bg-gray-50 border border-gray-400 text-gray-900 text-sm p-2 w-full rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\\\"\\n                    type=\\\"text\\\"\\n                    name=\\\"notes\\\"\\n                    id=\\\"notes\\\"\\n          ></textarea>\\n          <div v-if=\\\"form.errors.notes\\\" v-text=\\\"form.errors.notes\\\" class=\\\"text-xs text-red-600 mt-1\\\"></div>\\n        </div>\\n\\n        <input v-model=\\\"form.user_id\\\" hidden>\\n        <div class=\\\"flex justify-between mb-6\\\">\\n          <JetValidationErrors class=\\\"mr-4\\\"/>\\n          <button\\n              type=\\\"submit\\\"\\n              class=\\\"h-fit bg-blue-600 hover:bg-blue-500 text-white rounded py-2 px-4\\\"\\n              :disabled=\\\"form.processing\\\"\\n          >\\n            Submit\\n          </button>\\n        </div>\\n\\n      </form>\\n\\n      <CheckboxNotification/>\\n\\n    </div>\\n  </div>\\n</template>\\n\\n<script setup>\\nimport { computed, onMounted, ref, watch } from 'vue'\\nimport { useForm } from '@inertiajs/inertia-vue3'\\nimport { usePageSetup } from '@/Utilities/PageSetup'\\nimport { useAppSettingStore } from \\\"@/Stores/AppSettingStore\\\"\\nimport { useNotificationStore } from '@/Stores/NotificationStore'\\nimport { useTeamStore } from '@/Stores/TeamStore'\\nimport { useShowStore } from '@/Stores/ShowStore'\\nimport JetValidationErrors from '@/Jetstream/ValidationErrors'\\nimport CheckboxNotification from '@/Components/Global/Modals/CheckboxNotification'\\nimport CancelButton from '@/Components/Global/Buttons/CancelButton'\\nimport Message from '@/Components/Global/Modals/Messages'\\n\\nusePageSetup('showsCreate')\\n\\nconst appSettingStore = useAppSettingStore()\\nconst notificationStore = useNotificationStore()\\nconst teamStore = useTeamStore()\\nconst showStore = useShowStore()\\n\\nlet props = defineProps({\\n  teams: Object,\\n  userId: Number,\\n  creatorId: Number,\\n  categories: Object,\\n})\\n\\nlet selectedCategoryId = ref()\\nlet selectedSubCategoryId = ref()\\n\\nconst subCategories = computed(() => {\\n  const category = props.categories.find(cat => cat.id === selectedCategoryId.value)\\n  return category ? category.sub_categories : []\\n})\\n\\n// Watchers to update the store based on category and subcategory selections\\nwatch(selectedCategoryId, () => {\\n  showStore.initializeDescriptions(selectedCategoryId.value, selectedSubCategoryId.value)\\n}, {immediate: true})\\n\\nwatch(selectedSubCategoryId, () => {\\n  showStore.updateSubCategoryDescription(selectedSubCategoryId.value)\\n})\\n\\nonMounted(() => {\\n  selectedShowRunnerCreatorId.value = defaultShowRunnerId.value;\\n  showStore.categories = props.categories\\n  showStore.initializeDescriptions(selectedCategoryId.value, selectedSubCategoryId.value)\\n  selectedTeamId.value = defaultTeamId.value;\\n})\\n\\nconst defaultTeamId = computed(() => {\\n  return teamStore.id || (props.teams.length > 0 ? props.teams[0].id : null)\\n})\\n\\nconst defaultShowRunnerId = computed(() => {\\n  return props.creatorId\\n})\\n\\n// Reactive property for the selected team ID\\nconst selectedTeamId = ref(null);\\n\\n// Reactive property for the selected show_runner ID\\nconst selectedShowRunnerCreatorId = ref(null);\\n\\n// Watcher to update the teamStore.id when selectedTeamId changes\\nwatch(selectedTeamId, (newId) => {\\n  teamStore.id = newId;\\n});\\n\\nconst chooseCategory = () => {\\n  // Update the selected category ID based on the new selection\\n  // Vue automatically updates selectedCategoryId due to v-model binding\\n  // So, there is no need to manually set it here\\n\\n  // Call the store method to update descriptions and subcategories\\n  showStore.initializeDescriptions(selectedCategoryId.value, selectedSubCategoryId.value)\\n}\\n\\nconst chooseSubCategory = () => {\\n  // Update the store state based on the new subcategory selection\\n  showStore.updateSubCategoryDescription(selectedSubCategoryId.value)\\n}\\n\\n// fetch Team Members\\nconst teamMembers = ref([]) // Store team members locally in the component\\n\\n// Fetch team members when the selected team changes\\nconst fetchTeamMembers = async () => {\\n  if (defaultTeamId.value) {\\n    try {\\n      const response = await axios.post(`/api/fetch-team-members`, {teamId: defaultTeamId.value})\\n      teamMembers.value = response.data\\n    } catch (error) {\\n      console.error('Error fetching team members:', error)\\n    }\\n  }\\n}\\n\\n// Use watch to react to changes in defaultTeamId computed property\\nwatch(defaultTeamId, fetchTeamMembers, { immediate: true }); // immediate: true to run on mount\\n\\nlet form = useForm({\\n  name: '',\\n  description: '',\\n  user_id: props.userId,\\n  team_id: defaultTeamId.value,\\n  category: '',\\n  sub_category: '',\\n  www_url: '',\\n  instagram_name: '',\\n  telegram_url: '',\\n  twitter_handle: '',\\n  notes: '',\\n  show_runner_creator_id: '',\\n})\\n\\nlet showCategoryDescription = ref(null)\\n\\nconst checkForTeams = () => {\\n  if (props.teams.length === 0) {\\n    // Perform some actions if data array is empty\\n    console.log('No teams available.')\\n    notificationStore.active = true\\n    notificationStore.title = 'No teams available.'\\n    notificationStore.body = 'Please create a team before you create a show.'\\n    notificationStore.buttonLabel = 'OKAY'\\n    notificationStore.onClickAction = 'redirect'\\n    notificationStore.uri = '/shows/create'\\n    notificationStore.redirectPageUri = '/teams/create'\\n    // Additional logic for empty array\\n  } else {\\n    // Do nothing if data array is not empty\\n    console.log('Teams are available.')\\n  }\\n}\\n\\nonMounted(() => {\\n  checkForTeams()\\n})\\n\\nlet submit = () => {\\n  form.category = showStore.category_id\\n  form.sub_category = showStore.sub_category_id\\n  form.team_id = selectedTeamId\\n  form.show_runner_creator_id = selectedShowRunnerCreatorId\\n  form.post('/shows')\\n}\\n\\n// function chooseCategory(event) {\\n//   showCategoryDescription = props.categories[event.target.selectedIndex].description\\n// }\\n\\nfunction reset() {\\n  form.reset()\\n}\\n\\n</script>\\n\\n<style scoped>\\n.status-1 {\\n  color: green; /* Example color for status ID 1 */\\n}\\n\\n.status-2 {\\n  color: blue; /* Example color for status ID 2 */\\n}\\n\\n.status-3 {\\n  color: purple; /* Example color for status ID 3 */\\n}\\n\\n.status-4 {\\n  color: orange; /* Example color for status ID 4 */\\n}\\n\\n.status-5 {\\n  color: red; /* Example color for status ID 4 */\\n}\\n\\n.status-6 {\\n  color: darkgray; /* Example color for status ID 4 */\\n  font-style: italic;\\n}\\n\\n.status-7 {\\n  color: black; /* Example color for status ID 4 */\\n  font-style: italic;\\n}\\n\\n.status-8 {\\n  color: black; /* Example color for status ID 4 */\\n  font-style: italic;\\n}\\n\\n.status-9 {\\n  color: red; /* Example color for status ID 4 */\\n  font-style: italic;\\n}\\n\\n.status-10 {\\n  color: red; /* Example color for status ID 4 */\\n  font-style: italic;\\n}\\n\\n.status-11 {\\n  color: darkgray; /* Example color for status ID 4 */\\n}\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import script from \"./CancelButton.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CancelButton.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n    <button\n        @click.prevent=\"cancel\"\n        class=\"ml-2 px-4 py-2 text-white bg-orange-600 hover:bg-orange-500 rounded-lg\"\n    >Cancel\n    </button>\n  </div>\n</template>\n\n<script setup>\nimport { Inertia } from \"@inertiajs/inertia\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useUserStore } from '@/Stores/UserStore'\n\nconst appSettingStore = useAppSettingStore()\nconst userStore = useUserStore()\n\nlet props = defineProps({\n  url: String\n})\n\nfunction cancel() {\n  if (appSettingStore.prevUrl) {\n    if (props.url) {\n      Inertia.visit(props.url)\n    } else {\n      Inertia.visit(appSettingStore.prevUrl)\n    }\n  } else {\n    if (props.url) {\n      Inertia.visit(props.url)\n    } else {\n      // Fallback if prevUrl is not available\n      let prevUrl = userStore.isCreator ? '/dashboard' : '/';\n      Inertia.visit(prevUrl);\n    }\n  }\n}\n</script>\n","import script from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"mx-4 my-4\">\n    <div class=\"alert alert-info mt-4\"\n         v-if=\"props.flash.message\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" class=\"stroke-current shrink-0 w-6 h-6\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n      </svg>\n      <span>{{ props.flash.message }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-success mt-4 mx-3\"\n         v-if=\"props.flash.success\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.success }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-warning mt-4 mx-3\"\n         v-if=\"props.flash.warning\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"/>\n      </svg>\n      <span>{{ props.flash.warning }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-error mt-4 mx-3\"\n         v-if=\"props.flash.error\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.error }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n  </div>\n\n</template>\n\n<script setup>\nimport { Inertia } from \"@inertiajs/inertia\"\nimport { computed } from \"vue\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\n\nconst appSettingStore = useAppSettingStore()\n\nappSettingStore.showFlashMessage = true\n\nlet props = defineProps({\n  flash: Object,\n\n})\n\nconst messageType = computed(() => ({\n  'text-green-700 bg-green-100 dark:bg-green-200 dark:text-green-800': props.flash.success,\n  'text-blue-700 bg-blue-100 dark:bg-blue-200 dark:text-blue-800': props.flash.message,\n  'text-orange-700 bg-orange-100 dark:bg-orange-200 dark:text-orange-800': props.flash.warning,\n  'text-red-700 bg-red-100 dark:bg-red-200 dark:text-red-800': props.flash.error,\n}))\n\nconst clearFlashMessage = async () => {\n  await Inertia.post(route('flash.clear'));\n  Inertia.reload();\n};\n</script>\n","import script from \"./ValidationErrors.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ValidationErrors.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { computed } from 'vue';\nimport { usePage } from '@inertiajs/inertia-vue3';\n\nconst errors = computed(() => usePage().props.value.errors);\nconst hasErrors = computed(() => Object.keys(errors.value).length > 0);\n</script>\n\n<template>\n    <div v-if=\"hasErrors\">\n        <div class=\"font-medium text-red-600\">\n            Whoops! Something went wrong.\n        </div>\n\n        <ul class=\"mt-3 list-disc list-inside text-sm text-red-600\">\n            <li v-for=\"(error, key) in errors\" :key=\"key\">\n                {{ error }}\n            </li>\n        </ul>\n    </div>\n</template>\n","import script from \"./CheckboxNotification.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CheckboxNotification.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <input type=\"checkbox\" id=\"my_modal_6\" class=\"modal-toggle\" v-model=\"notificationStore.active\"/>\n  <div class=\"modal\" role=\"dialog\" v-if=\"notificationStore.active\">\n    <div class=\"modal-box\">\n      <h3 class=\"font-bold text-lg\">{{ notificationStore.title }}</h3>\n      <p class=\"py-4\">{{ notificationStore.body }}</p>\n      <div class=\"modal-action\">\n        <label for=\"my_modal_6\" class=\"btn\" @click=\"modalButtonAction\">{{ notificationStore.buttonLabel }}</label>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue'\nimport { useNotificationStore } from \"@/Stores/NotificationStore\"\n\nconst notificationStore = useNotificationStore()\n\nfunction modalButtonAction() {\n  if (notificationStore.onClickAction === 'redirect') {\n    notificationStore.redirectAndClear()\n  } else if (notificationStore.onClickAction === 'close') {\n    notificationStore.closeAndClear()\n  }\n}\n\n</script>\n","<template>\n  <Head title=\"Create Show\"/>\n\n  <div class=\"place-self-center flex flex-col gap-y-3\">\n    <div id=\"topDiv\" class=\"bg-white text-black dark:bg-gray-800 dark:text-gray-50 p-5 mb-10\">\n\n      <Message v-if=\"appSettingStore.showFlashMessage\" :flash=\"$page.props.flash\"/>\n\n      <div class=\"flex justify-between mt-3 mb-6\">\n        <div class=\"text-3xl\">Create Show</div>\n        <div>\n          <CancelButton/>\n        </div>\n      </div>\n\n      <div class=\"bg-orange-700 text-white w-full p-6\"><span class=\"font-bold\">NOTE: </span>\n        We are working on an episode poster and video uploader for this page. For the time being, please\n        go to the show <span class=\"font-bold\">EDIT</span> page after you create the show to add a video and a poster.\n      </div>\n\n      <form @submit.prevent=\"submit\" class=\"max-w-md mx-auto mt-8\">\n        <div class=\"mb-6\">\n          <label class=\"block mb-2 uppercase font-bold text-xs dark:text-gray-200\"\n                 for=\"team\"\n          >\n            Team\n          </label>\n          <select\n              class=\"border border-gray-400 p-2 w-full rounded-lg block mb-2 uppercase font-bold text-xs text-gray-800\"\n              v-model=\"selectedTeamId\"\n              required\n          >\n            <option disabled value=\"\">Select Team</option>\n            <option\n                v-for=\"team in props.teams\"\n                :key=\"team.id\"\n                :value=\"team.id\"\n                class=\"bg-white text-black border-b dark:text-gray-50 dark:bg-gray-800 dark:border-gray-600\"\n                :class=\"'status-' + team.status.id\"\n            >\n              {{ team.name }} ({{ team.status.status }})\n            </option>\n\n          </select>\n\n\n          <div v-if=\"form.errors.team_id\" v-text=\"form.errors.team_id\" class=\"text-xs text-red-600 mt-1\"></div>\n        </div>\n\n        <div class=\"mb-6\">\n          <label class=\"block mb-2 uppercase font-bold text-xs dark:text-gray-200\"\n                 for=\"show_runner_creator_id\"\n          >\n            Show Runner\n          </label>\n          <select\n              class=\"border border-gray-400 p-2 w-full rounded-lg block mb-2 uppercase font-bold text-xs text-gray-800\"\n              v-model=\"selectedShowRunnerCreatorId\"\n              required\n          >\n            <option disabled value=\"\">Select Show Runner</option>\n            <option\n                v-for=\"member in teamMembers\"\n                :key=\"member.creator_id\"\n                :value=\"member.creator_id\"\n                class=\"bg-white text-black border-b dark:text-gray-50 dark:bg-gray-800 dark:border-gray-600\"\n            >\n              {{ member.name }}\n            </option>\n          </select>\n\n          <div v-if=\"form.errors.show_runner_creator_id\" v-text=\"form.errors.show_runner_creator_id\" class=\"text-xs text-red-600 mt-1\"></div>\n        </div>\n\n        <div class=\"mb-6\">\n          <label class=\"block mb-2 uppercase font-bold text-xs dark:text-gray-200\"\n                 for=\"name\"\n          >\n            Show Name\n          </label>\n\n          <input v-model=\"form.name\"\n                 class=\"bg-gray-50 border border-gray-400 text-gray-900 text-sm p-2 w-full rounded-lg focus:ring-blue-500 focus:border-blue-500\"\n                 type=\"text\"\n                 name=\"name\"\n                 id=\"name\"\n                 required\n          >\n          <div v-if=\"form.errors.name\" v-text=\"form.errors.name\" class=\"text-xs text-red-600 mt-1\"></div>\n        </div>\n\n        <div class=\"mb-6\">\n          <label class=\"block mb-2 uppercase font-bold text-xs dark:text-gray-200\"\n                 for=\"category\"\n          >\n            Category\n          </label>\n\n\n          <select\n              class=\"border border-gray-400 text-gray-800 p-2 w-full rounded-lg block mb-2 uppercase font-bold text-xs \"\n              v-model=\"selectedCategoryId\" @change=\"chooseCategory\"\n          >\n            <option v-for=\"category in categories\"\n                    :key=\"category.id\" :value=\"category.id\">{{ category.name }}\n            </option>\n\n          </select>\n          <div v-if=\"form.errors.category\" v-text=\"form.errors.category\"\n               class=\"text-xs text-red-600 mt-1\"></div>\n\n          <span class=\"\">{{showStore.category_description}}</span>\n        </div>\n\n        <div class=\"mb-6\">\n          <label class=\"block mb-1 uppercase font-bold text-xs dark:text-gray-200\"\n                 for=\"sub_category\"\n          >\n            Sub-category\n          </label>\n\n          <select\n                  class=\"border border-gray-400 text-gray-800 disabled:bg-gray-300 dark:disabled:bg-gray-600 disabled:cursor-not-allowed p-2 w-full rounded-lg block mb-2 uppercase font-bold text-xs\"\n                  v-model=\"selectedSubCategoryId\" @change=\"chooseSubCategory\"\n          >\n            <option disabled value=\"\">Select a subcategory</option>\n            <option v-for=\"subCategory in subCategories\" :key=\"subCategory.id\" :value=\"subCategory.id\">\n              {{ subCategory?.name }}\n            </option>\n          </select>\n          <span class=\"\">{{ showStore.sub_category_description }}</span>\n          <div v-if=\"form.errors.sub_category\" v-text=\"form.errors.sub_category\"\n               class=\"text-xs text-red-600 mt-1\"></div>\n        </div>\n\n        <div class=\"mb-6\">\n          <label class=\"block mb-2 uppercase font-bold text-xs dark:text-gray-200\"\n                 for=\"description\"\n          >\n            Description\n          </label>\n          <textarea v-model=\"form.description\"\n                    class=\"bg-gray-50 border border-gray-400 text-gray-900 text-sm p-2 w-full rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\"\n                    type=\"text\"\n                    name=\"description\"\n                    id=\"description\"\n                    required\n          ></textarea>\n          <div v-if=\"form.errors.description\" v-text=\"form.errors.description\" class=\"text-xs text-red-600 mt-1\"></div>\n        </div>\n\n        <div class=\"mb-6\">\n          <label class=\"block mb-2 uppercase font-bold text-xs dark:text-gray-200\"\n                 for=\"name\"\n          >\n            Website URL\n          </label>\n\n          <input v-model=\"form.www_url\"\n                 class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                 type=\"text\"\n                 name=\"www_url\"\n                 id=\"www_url\"\n          >\n          <div v-if=\"form.errors.www_url\" v-text=\"form.errors.www_url\"\n               class=\"text-xs text-red-600 mt-1\"></div>\n        </div>\n\n        <div class=\"mb-6\">\n          <label class=\"block mb-2 uppercase font-bold text-xs dark:text-gray-200\"\n                 for=\"name\"\n          >\n            Instagram Handle\n          </label>\n\n          <input v-model=\"form.instagram_name\"\n                 class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                 type=\"text\"\n                 name=\"instagram_name handle\"\n                 id=\"instagram_name\"\n          >\n          <div v-if=\"form.errors.instagram_name\" v-text=\"form.errors.instagram_name\"\n               class=\"text-xs text-red-600 mt-1\"></div>\n        </div>\n\n        <div class=\"mb-6\">\n          <label class=\"block mb-2 uppercase font-bold text-xs dark:text-gray-200\"\n                 for=\"name\"\n          >\n            Telegram URL\n          </label>\n\n          <input v-model=\"form.telegram_url\"\n                 class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                 type=\"text\"\n                 name=\"telegram_url\"\n                 id=\"telegram_url\"\n          >\n          <div v-if=\"form.errors.telegram_url\" v-text=\"form.errors.telegram_url\"\n               class=\"text-xs text-red-600 mt-1\"></div>\n        </div>\n\n        <div class=\"mb-6\">\n          <label class=\"block mb-2 uppercase font-bold text-xs dark:text-gray-200\"\n                 for=\"name\"\n          >\n            X (formerly Twitter) @\n          </label>\n\n          <input v-model=\"form.twitter_handle\"\n                 class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                 type=\"text\"\n                 name=\"twitter_handle\"\n                 id=\"twitter_handle\"\n          >\n          <div v-if=\"form.errors.twitter_handle\" v-text=\"form.errors.twitter_handle\"\n               class=\"text-xs text-red-600 mt-1\"></div>\n        </div>\n\n        <div class=\"mb-6\">\n          <label class=\"block mb-2 uppercase font-bold text-xs dark:text-gray-200\"\n                 for=\"notes\"\n          >\n            Notes (Only your team members see these notes, they are not public)\n          </label>\n          <textarea v-model=\"form.notes\"\n                    class=\"bg-gray-50 border border-gray-400 text-gray-900 text-sm p-2 w-full rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\"\n                    type=\"text\"\n                    name=\"notes\"\n                    id=\"notes\"\n          ></textarea>\n          <div v-if=\"form.errors.notes\" v-text=\"form.errors.notes\" class=\"text-xs text-red-600 mt-1\"></div>\n        </div>\n\n        <input v-model=\"form.user_id\" hidden>\n        <div class=\"flex justify-between mb-6\">\n          <JetValidationErrors class=\"mr-4\"/>\n          <button\n              type=\"submit\"\n              class=\"h-fit bg-blue-600 hover:bg-blue-500 text-white rounded py-2 px-4\"\n              :disabled=\"form.processing\"\n          >\n            Submit\n          </button>\n        </div>\n\n      </form>\n\n      <CheckboxNotification/>\n\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { computed, onMounted, ref, watch } from 'vue'\nimport { useForm } from '@inertiajs/inertia-vue3'\nimport { usePageSetup } from '@/Utilities/PageSetup'\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useNotificationStore } from '@/Stores/NotificationStore'\nimport { useTeamStore } from '@/Stores/TeamStore'\nimport { useShowStore } from '@/Stores/ShowStore'\nimport JetValidationErrors from '@/Jetstream/ValidationErrors'\nimport CheckboxNotification from '@/Components/Global/Modals/CheckboxNotification'\nimport CancelButton from '@/Components/Global/Buttons/CancelButton'\nimport Message from '@/Components/Global/Modals/Messages'\n\nusePageSetup('showsCreate')\n\nconst appSettingStore = useAppSettingStore()\nconst notificationStore = useNotificationStore()\nconst teamStore = useTeamStore()\nconst showStore = useShowStore()\n\nlet props = defineProps({\n  teams: Object,\n  userId: Number,\n  creatorId: Number,\n  categories: Object,\n})\n\nlet selectedCategoryId = ref()\nlet selectedSubCategoryId = ref()\n\nconst subCategories = computed(() => {\n  const category = props.categories.find(cat => cat.id === selectedCategoryId.value)\n  return category ? category.sub_categories : []\n})\n\n// Watchers to update the store based on category and subcategory selections\nwatch(selectedCategoryId, () => {\n  showStore.initializeDescriptions(selectedCategoryId.value, selectedSubCategoryId.value)\n}, {immediate: true})\n\nwatch(selectedSubCategoryId, () => {\n  showStore.updateSubCategoryDescription(selectedSubCategoryId.value)\n})\n\nonMounted(() => {\n  selectedShowRunnerCreatorId.value = defaultShowRunnerId.value;\n  showStore.categories = props.categories\n  showStore.initializeDescriptions(selectedCategoryId.value, selectedSubCategoryId.value)\n  selectedTeamId.value = defaultTeamId.value;\n})\n\nconst defaultTeamId = computed(() => {\n  return teamStore.id || (props.teams.length > 0 ? props.teams[0].id : null)\n})\n\nconst defaultShowRunnerId = computed(() => {\n  return props.creatorId\n})\n\n// Reactive property for the selected team ID\nconst selectedTeamId = ref(null);\n\n// Reactive property for the selected show_runner ID\nconst selectedShowRunnerCreatorId = ref(null);\n\n// Watcher to update the teamStore.id when selectedTeamId changes\nwatch(selectedTeamId, (newId) => {\n  teamStore.id = newId;\n});\n\nconst chooseCategory = () => {\n  // Update the selected category ID based on the new selection\n  // Vue automatically updates selectedCategoryId due to v-model binding\n  // So, there is no need to manually set it here\n\n  // Call the store method to update descriptions and subcategories\n  showStore.initializeDescriptions(selectedCategoryId.value, selectedSubCategoryId.value)\n}\n\nconst chooseSubCategory = () => {\n  // Update the store state based on the new subcategory selection\n  showStore.updateSubCategoryDescription(selectedSubCategoryId.value)\n}\n\n// fetch Team Members\nconst teamMembers = ref([]) // Store team members locally in the component\n\n// Fetch team members when the selected team changes\nconst fetchTeamMembers = async () => {\n  if (defaultTeamId.value) {\n    try {\n      const response = await axios.post(`/api/fetch-team-members`, {teamId: defaultTeamId.value})\n      teamMembers.value = response.data\n    } catch (error) {\n      console.error('Error fetching team members:', error)\n    }\n  }\n}\n\n// Use watch to react to changes in defaultTeamId computed property\nwatch(defaultTeamId, fetchTeamMembers, { immediate: true }); // immediate: true to run on mount\n\nlet form = useForm({\n  name: '',\n  description: '',\n  user_id: props.userId,\n  team_id: defaultTeamId.value,\n  category: '',\n  sub_category: '',\n  www_url: '',\n  instagram_name: '',\n  telegram_url: '',\n  twitter_handle: '',\n  notes: '',\n  show_runner_creator_id: '',\n})\n\nlet showCategoryDescription = ref(null)\n\nconst checkForTeams = () => {\n  if (props.teams.length === 0) {\n    // Perform some actions if data array is empty\n    console.log('No teams available.')\n    notificationStore.active = true\n    notificationStore.title = 'No teams available.'\n    notificationStore.body = 'Please create a team before you create a show.'\n    notificationStore.buttonLabel = 'OKAY'\n    notificationStore.onClickAction = 'redirect'\n    notificationStore.uri = '/shows/create'\n    notificationStore.redirectPageUri = '/teams/create'\n    // Additional logic for empty array\n  } else {\n    // Do nothing if data array is not empty\n    console.log('Teams are available.')\n  }\n}\n\nonMounted(() => {\n  checkForTeams()\n})\n\nlet submit = () => {\n  form.category = showStore.category_id\n  form.sub_category = showStore.sub_category_id\n  form.team_id = selectedTeamId\n  form.show_runner_creator_id = selectedShowRunnerCreatorId\n  form.post('/shows')\n}\n\n// function chooseCategory(event) {\n//   showCategoryDescription = props.categories[event.target.selectedIndex].description\n// }\n\nfunction reset() {\n  form.reset()\n}\n\n</script>\n\n<style scoped>\n.status-1 {\n  color: green; /* Example color for status ID 1 */\n}\n\n.status-2 {\n  color: blue; /* Example color for status ID 2 */\n}\n\n.status-3 {\n  color: purple; /* Example color for status ID 3 */\n}\n\n.status-4 {\n  color: orange; /* Example color for status ID 4 */\n}\n\n.status-5 {\n  color: red; /* Example color for status ID 4 */\n}\n\n.status-6 {\n  color: darkgray; /* Example color for status ID 4 */\n  font-style: italic;\n}\n\n.status-7 {\n  color: black; /* Example color for status ID 4 */\n  font-style: italic;\n}\n\n.status-8 {\n  color: black; /* Example color for status ID 4 */\n  font-style: italic;\n}\n\n.status-9 {\n  color: red; /* Example color for status ID 4 */\n  font-style: italic;\n}\n\n.status-10 {\n  color: red; /* Example color for status ID 4 */\n  font-style: italic;\n}\n\n.status-11 {\n  color: darkgray; /* Example color for status ID 4 */\n}\n</style>\n","import api from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-9.use[1]!../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-9.use[2]!../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./Create.vue?vue&type=style&index=0&id=e348adec&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./Create.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Create.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Create.vue?vue&type=style&index=0&id=e348adec&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-e348adec\"]])\n\nexport default __exports__"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","initialState","id","description","slug","totalSpots","memberSpots","teamCreator","teamLeader","members","managers","activeShow","activeEpisode","creators","showModal","Boolean","confirmDialog","confirmManagerDialog","selectedManagerName","selectedManagerId","addManager","removeManager","deleteMemberName","deleteMemberId","noteEdit","note","saveNoteProcessing","goLiveDisplay","can","openComponent","useTeamStore","defineStore","state","actions","assign","this","setActiveTeam","team","setActiveShow","show","setActiveEpisode","episode","deleteTeamMemberCancel","confirmTeamManagerCancel","deleteTeamMember","Inertia","visit","route","data","user_id","team_id","team_slug","addTeamManager","removeTeamManager","toggleGoLiveDisplay","fetchTeamMembers","fn","_callee","_context","axios","get","self","args","arguments","apply","err","undefined","getters","spotsRemaining","usePageSetup","pageName","userStore","useUserStore","appSettingStore","useAppSettingStore","videoPlayerStore","useVideoPlayerStore","currentPage","showFlashMessage","pageIsHidden","isMobile","ott","makeVideoTopRight","pageReload","window","location","reload","on","event","search","shouldScrollToTop","requestAnimationFrame","topDiv","document","getElementById","scrollIntoView","behavior","scrollTo","setPrevUrl","showOttButtons","noLayout","___CSS_LOADER_EXPORT___","module","props","__props","cancel","prevUrl","url","isCreator","clearFlashMessage","computed","flash","success","message","warning","_ref","post","errors","usePage","hasErrors","notificationStore","useNotificationStore","modalButtonAction","onClickAction","redirectAndClear","closeAndClear","teamStore","showStore","useShowStore","selectedCategoryId","ref","selectedSubCategoryId","subCategories","category","categories","find","cat","sub_categories","watch","initializeDescriptions","immediate","updateSubCategoryDescription","onMounted","selectedShowRunnerCreatorId","defaultShowRunnerId","selectedTeamId","defaultTeamId","teams","creatorId","newId","chooseCategory","chooseSubCategory","teamMembers","response","teamId","t0","console","form","useForm","userId","sub_category","www_url","instagram_name","telegram_url","twitter_handle","notes","show_runner_creator_id","log","active","title","body","buttonLabel","uri","redirectPageUri","submit","category_id","sub_category_id","options","locals"],"sourceRoot":""}
{"version":3,"file":"js/5743.js","mappings":";8JAMO,SAASA,EAAaC,GACzB,IAAMC,GAAYC,EAAAA,EAAAA,gBACZC,GAAkBC,EAAAA,EAAAA,sBAClBC,GAAmBC,EAAAA,EAAAA,uBAEzBH,EAAgBI,YAAcP,EAC9BG,EAAgBK,kBAAmB,EACnCL,EAAgBM,cAAe,EAE3BR,EAAUS,UAAYC,OAAOC,WAAa,KAC1CT,EAAgBU,IAAM,EAEtBV,EAAgBU,IAAM,EAG1BR,EAAiBS,oBAEbX,EAAgBY,aAChBZ,EAAgBY,YAAa,EAC7BJ,OAAOK,SAASC,QAAO,IAWvBC,EAAAA,QAAQC,GAAG,YAAY,SAACC,GAC+B,KAA3BT,OAAOK,SAASK,SAChBlB,EAAgBmB,mBACpCC,uBAAsB,WAClB,IAAMC,EAASC,SAASC,eAAe,UACnCF,EACAA,EAAOG,eAAe,CAACC,SAAU,SAEjCjB,OAAOkB,SAAS,EAAG,EAE3B,IAEJ1B,EAAgBmB,mBAAoB,CACxC,IAEJnB,EAAgB2B,aAChB3B,EAAgB4B,gBAAiB,EACjC5B,EAAgB6B,UAAW,CAI/B,g4NCpDA,uCCSAjC,EAAAA,EAAAA,GAAa,WAEb,IAAIkC,GAASC,EAAAA,EAAAA,GAAW,+GAElBC,GAAQC,EAAAA,EAAAA,KAAI,MACZC,GAAWD,EAAAA,EAAAA,KAAI,OAErBE,EAAAA,EAAAA,YAAU,WACNC,MAAMC,KAAK,uBAAwB,CAC/BC,OAAQ,IACRC,SAAU,QACXC,MAAK,SAAAC,GACJT,EAAMU,MAAQD,EAAST,MACvB,IAAMW,EAAU,CACZC,aAAcH,EAASG,cAG3BV,EAASQ,MAAQZ,EAAOI,SAASS,GACVT,EAASQ,MAAMG,OAAO,WAC9BC,MAAM,mBACzB,IAAE,OAAO,SAAAC,GACL,GAER,IAEA,IAAMC,EAAY,iBAAAC,KAAAC,IAAAC,MAAG,SAAAC,EAAOC,GAAC,IAAAC,EAAAP,EAAA,OAAAG,IAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACN,OAAnBL,EAAEM,iBAAiBH,EAAAE,KAAA,EAEK5B,EAAOY,MAAMkB,eAAe,CAChD1B,SAAUA,EAASQ,MACnBmB,SAAU,gBACZ,OAAAP,EAAAE,EAAAM,UAEYC,KALNhB,EAAKO,EAALP,OAMJX,MAAMC,KAAK,sBAAuB,CAC9BL,MAAOA,EAAMU,QAGjBN,MAAMC,KAAK,sBAAuB,CAC9BL,MAAOA,EAAMU,MACbsB,KAAMjB,EAAMiB,KACZC,YAAalB,EAAMmB,UAE1B,wBAAAV,EAAAW,OAAA,GAAAf,EAAA,mLACJ,gBAnBiBgB,GAAA,OAAAnB,EAAAoB,MAAA,KAAAC,UAAA","sources":["webpack:///./resources/js/Utilities/PageSetup.js","webpack:///./resources/js/Pages/Payment.vue?6b1a","webpack:///./resources/js/Pages/Payment.vue"],"sourcesContent":["import { onBeforeMount, onMounted } from 'vue'\nimport { useUserStore } from \"@/Stores/UserStore\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useVideoPlayerStore } from \"@/Stores/VideoPlayerStore\"\nimport { Inertia } from '@inertiajs/inertia'\n\nexport function usePageSetup(pageName) {\n    const userStore = useUserStore()\n    const appSettingStore = useAppSettingStore()\n    const videoPlayerStore = useVideoPlayerStore()\n\n    appSettingStore.currentPage = pageName\n    appSettingStore.showFlashMessage = true\n    appSettingStore.pageIsHidden = false\n\n    if (userStore.isMobile || window.innerWidth < 1024) {\n        appSettingStore.ott = 0;\n    } else {\n        appSettingStore.ott = 1;\n    }\n\n    videoPlayerStore.makeVideoTopRight()\n\n    if (appSettingStore.pageReload) {\n        appSettingStore.pageReload = false\n        window.location.reload(true);\n    }\n    // Check if the URL contains query strings\n\n\n    // Only scroll into view if there are no query strings\n\n        // const topDiv = document.getElementById(\"topDiv\")\n        // if (topDiv) {\n        //     topDiv.scrollIntoView()\n        // }\n        Inertia.on('navigate', (event) => {\n            const hasQueryStrings = window.location.search !== '';\n            if (!hasQueryStrings || appSettingStore.shouldScrollToTop) {\n                requestAnimationFrame(() => {\n                    const topDiv = document.getElementById(\"topDiv\");\n                    if (topDiv) {\n                        topDiv.scrollIntoView({behavior: 'auto'});\n                    } else {\n                        window.scrollTo(0, 0);\n                    }\n                });\n            }\n            appSettingStore.shouldScrollToTop = false;\n        })\n    // Only update if we're not already on this page to avoid overwriting with the current URL\n    appSettingStore.setPrevUrl()\n    appSettingStore.showOttButtons = true\n    appSettingStore.noLayout = false\n\n    // Inertia.reload()\n\n}\n","import script from \"./Payment.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Payment.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <form id=\"payment-form\">\n        <div id=\"payment-element\">\n            <!-- Stripe will create form elements here -->\n        </div>\n        <button type=\"submit\" @click=\"handleSubmit\">Pay via Stripe</button>\n    </form>\n</template>\n\n<script setup>\nimport { ref, onMounted } from \"vue\"\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { usePageSetup } from '@/Utilities/PageSetup'\n\nusePageSetup('payment')\n\nlet stripe = loadStripe('pk_test_51KJwK5Kahp38LUVYOjg7h425exCr6UZmMm1M24d31ZaS0HTsgPWIZE9Hd2F0KnREVHuPm2VHesX3J5SQfFFg7fTC00DMNpq1Lj');\n\nconst token = ref(null)\nconst elements = ref(null)\n\nonMounted(() => {\n    axios.post('INITIATE_PAYMENT_API', {\n        amount: 150,\n        currency: 'USD'\n    }).then(response => {\n        token.value = response.token // Use to identify the payment\n        const options = {\n            clientSecret: response.clientSecret,\n        }\n\n        elements.value = stripe.elements(options);\n        const paymentElement = elements.value.create('payment');\n        paymentElement.mount('#payment-element');\n    }).catch(error => {\n        // throw error\n    })\n})\n\nconst handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const { error } = await stripe.value.confirmPayment({\n        elements: elements.value,\n        redirect: \"if_required\"\n    });\n\n    if (error === undefined) {\n        axios.post(\"PAYMENT_SUCCESS_API\", {\n            token: token.value,\n        })\n    } else {\n        axios.post(\"PAYMENT_FAILURE_API\", {\n            token: token.value,\n            code: error.code,\n            description: error.message,\n        })\n    }\n}\n</script>\n"],"names":["usePageSetup","pageName","userStore","useUserStore","appSettingStore","useAppSettingStore","videoPlayerStore","useVideoPlayerStore","currentPage","showFlashMessage","pageIsHidden","isMobile","window","innerWidth","ott","makeVideoTopRight","pageReload","location","reload","Inertia","on","event","search","shouldScrollToTop","requestAnimationFrame","topDiv","document","getElementById","scrollIntoView","behavior","scrollTo","setPrevUrl","showOttButtons","noLayout","stripe","loadStripe","token","ref","elements","onMounted","axios","post","amount","currency","then","response","value","options","clientSecret","create","mount","error","handleSubmit","_ref","_regeneratorRuntime","mark","_callee","e","_yield$stripe$value$c","wrap","_context","prev","next","preventDefault","confirmPayment","redirect","sent","undefined","code","description","message","stop","_x","apply","arguments"],"sourceRoot":""}
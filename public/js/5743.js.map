{"version":3,"file":"js/5743.js","mappings":";wJAMO,SAASA,EAAaC,GACzB,IAAMC,GAAYC,EAAAA,EAAAA,gBACZC,GAAkBC,EAAAA,EAAAA,sBAClBC,GAAmBC,EAAAA,EAAAA,uBAEzBH,EAAgBI,YAAcP,EAC9BG,EAAgBK,kBAAmB,EACnCL,EAAgBM,cAAe,EAE3BR,EAAUS,WACVP,EAAgBQ,IAAM,GAG1BN,EAAiBO,qBAEjBC,EAAAA,EAAAA,YAAU,WAKN,KAHmD,KAA3BC,OAAOC,SAASC,QAGlB,CAClB,IAAMC,EAASC,SAASC,eAAe,UACnCF,GACAA,EAAOG,gBAEf,CAEAjB,EAAgBkB,aAChBC,EAAAA,QAAQC,QAEZ,GACJ,23NChCA,uCCSAxB,EAAAA,EAAAA,GAAa,WAEb,IAAIyB,GAASC,EAAAA,EAAAA,GAAW,+GAElBC,GAAQC,EAAAA,EAAAA,KAAI,MACZC,GAAWD,EAAAA,EAAAA,KAAI,OAErBd,EAAAA,EAAAA,YAAU,WACNgB,MAAMC,KAAK,uBAAwB,CAC/BC,OAAQ,IACRC,SAAU,QACXC,MAAK,SAAAC,GACJR,EAAMS,MAAQD,EAASR,MACvB,IAAMU,EAAU,CACZC,aAAcH,EAASG,cAG3BT,EAASO,MAAQX,EAAOI,SAASQ,GACVR,EAASO,MAAMG,OAAO,WAC9BC,MAAM,mBACzB,IAAE,OAAO,SAAAC,GACL,GAER,IAEA,IAAMC,EAAY,iBAAAC,KAAAC,IAAAC,MAAG,SAAAC,EAAOC,GAAC,IAAAC,EAAAP,EAAA,OAAAG,IAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACN,OAAnBL,EAAEM,iBAAiBH,EAAAE,KAAA,EAEK3B,EAAOW,MAAMkB,eAAe,CAChDzB,SAAUA,EAASO,MACnBmB,SAAU,gBACZ,OAAAP,EAAAE,EAAAM,UAEYC,KALNhB,EAAKO,EAALP,OAMJX,MAAMC,KAAK,sBAAuB,CAC9BJ,MAAOA,EAAMS,QAGjBN,MAAMC,KAAK,sBAAuB,CAC9BJ,MAAOA,EAAMS,MACbsB,KAAMjB,EAAMiB,KACZC,YAAalB,EAAMmB,UAE1B,wBAAAV,EAAAW,OAAA,GAAAf,EAAA,mLACJ,gBAnBiBgB,GAAA,OAAAnB,EAAAoB,MAAA,KAAAC,UAAA","sources":["webpack:///./resources/js/Utilities/PageSetup.js","webpack:///./resources/js/Pages/Payment.vue?6b1a","webpack:///./resources/js/Pages/Payment.vue"],"sourcesContent":["import { onMounted } from 'vue'\nimport { useUserStore } from \"@/Stores/UserStore\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useVideoPlayerStore } from \"@/Stores/VideoPlayerStore\"\nimport { Inertia } from \"@inertiajs/inertia\"\n\nexport function usePageSetup(pageName) {\n    const userStore = useUserStore()\n    const appSettingStore = useAppSettingStore()\n    const videoPlayerStore = useVideoPlayerStore()\n\n    appSettingStore.currentPage = pageName\n    appSettingStore.showFlashMessage = true\n    appSettingStore.pageIsHidden = false\n\n    if (userStore.isMobile) {\n        appSettingStore.ott = 0\n    }\n\n    videoPlayerStore.makeVideoTopRight()\n\n    onMounted(() => {\n        // Check if the URL contains query strings\n        const hasQueryStrings = window.location.search !== '';\n\n        // Only scroll into view if there are no query strings\n        if (!hasQueryStrings) {\n            const topDiv = document.getElementById(\"topDiv\")\n            if (topDiv) {\n                topDiv.scrollIntoView()\n            }\n        }\n        // Only update if we're not already on this page to avoid overwriting with the current URL\n        appSettingStore.setPrevUrl()\n        Inertia.reload()\n\n    });\n}\n","import script from \"./Payment.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Payment.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <form id=\"payment-form\">\n        <div id=\"payment-element\">\n            <!-- Stripe will create form elements here -->\n        </div>\n        <button type=\"submit\" @click=\"handleSubmit\">Pay via Stripe</button>\n    </form>\n</template>\n\n<script setup>\nimport { ref, onMounted } from \"vue\"\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { usePageSetup } from '@/Utilities/PageSetup'\n\nusePageSetup('payment')\n\nlet stripe = loadStripe('pk_test_51KJwK5Kahp38LUVYOjg7h425exCr6UZmMm1M24d31ZaS0HTsgPWIZE9Hd2F0KnREVHuPm2VHesX3J5SQfFFg7fTC00DMNpq1Lj');\n\nconst token = ref(null)\nconst elements = ref(null)\n\nonMounted(() => {\n    axios.post('INITIATE_PAYMENT_API', {\n        amount: 150,\n        currency: 'USD'\n    }).then(response => {\n        token.value = response.token // Use to identify the payment\n        const options = {\n            clientSecret: response.clientSecret,\n        }\n\n        elements.value = stripe.elements(options);\n        const paymentElement = elements.value.create('payment');\n        paymentElement.mount('#payment-element');\n    }).catch(error => {\n        // throw error\n    })\n})\n\nconst handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const { error } = await stripe.value.confirmPayment({\n        elements: elements.value,\n        redirect: \"if_required\"\n    });\n\n    if (error === undefined) {\n        axios.post(\"PAYMENT_SUCCESS_API\", {\n            token: token.value,\n        })\n    } else {\n        axios.post(\"PAYMENT_FAILURE_API\", {\n            token: token.value,\n            code: error.code,\n            description: error.message,\n        })\n    }\n}\n</script>\n"],"names":["usePageSetup","pageName","userStore","useUserStore","appSettingStore","useAppSettingStore","videoPlayerStore","useVideoPlayerStore","currentPage","showFlashMessage","pageIsHidden","isMobile","ott","makeVideoTopRight","onMounted","window","location","search","topDiv","document","getElementById","scrollIntoView","setPrevUrl","Inertia","reload","stripe","loadStripe","token","ref","elements","axios","post","amount","currency","then","response","value","options","clientSecret","create","mount","error","handleSubmit","_ref","_regeneratorRuntime","mark","_callee","e","_yield$stripe$value$c","wrap","_context","prev","next","preventDefault","confirmPayment","redirect","sent","undefined","code","description","message","stop","_x","apply","arguments"],"sourceRoot":""}
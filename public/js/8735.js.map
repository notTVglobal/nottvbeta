{"version":3,"file":"js/8735.js","mappings":"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","sources":["webpack://nottvbeta/./resources/js/Utilities/BroadcastUtils.js","webpack://nottvbeta/./resources/js/Stores/TeamStore.js","webpack://nottvbeta/./resources/js/Utilities/PageSetup.js","webpack://nottvbeta/./resources/js/Components/Global/Buttons/CancelButton.vue?b7c6","webpack://nottvbeta/./resources/js/Components/Global/Buttons/CancelButton.vue","webpack://nottvbeta/./resources/js/Components/Global/Modals/Messages.vue?dfe9","webpack://nottvbeta/./resources/js/Components/Global/Modals/Messages.vue","webpack://nottvbeta/./resources/js/Jetstream/ValidationErrors.vue?5fdc","webpack://nottvbeta/./resources/js/Jetstream/ValidationErrors.vue","webpack://nottvbeta/./resources/js/Pages/Shows/{$id}/Episodes/{$id}/Upload.vue?d1e3","webpack://nottvbeta/./resources/js/Pages/Shows/{$id}/Episodes/{$id}/Upload.vue"],"sourcesContent":["import dayjs from 'dayjs'\nimport utc from 'dayjs-plugin-utc'\nimport timezone from 'dayjs/plugin/timezone'\n\ndayjs.extend(utc)\ndayjs.extend(timezone)\n\nexport function filterAndSortBroadcasts(broadcasts, nextBroadcastLoaded, userTimezone) {\n    const nowInUserTimezone = dayjs().tz(userTimezone);\n\n    return broadcasts\n        .filter(broadcast => {\n            // Calculate broadcastEndTime for the current broadcast\n            const broadcastEndTime = dayjs(broadcast.broadcastDate)\n                .add(broadcast.broadcastDetails.duration_minutes, 'minute')\n                .utc()\n                .tz(userTimezone);\n\n            // Filter out broadcasts that have already ended\n            const isAfterNow = nowInUserTimezone.isBefore(broadcastEndTime);\n\n            // Exclude if it matches nextBroadcastLoaded.broadcastDate && broadcastEndTime\n            const isNotLoadedBroadcast = !(\n                nextBroadcastLoaded &&\n                nextBroadcastLoaded.broadcastDate === broadcast.broadcastDate &&\n                dayjs(nextBroadcastLoaded.broadcastDate)\n                    .add(nextBroadcastLoaded.broadcastDetails?.duration_minutes || 0, 'minute')\n                    .utc()\n                    .tz(userTimezone)\n                    .isSame(broadcastEndTime)\n            );\n\n            return isAfterNow && isNotLoadedBroadcast;\n        })\n        .sort((a, b) => dayjs(a.broadcastDate).tz(userTimezone).diff(dayjs(b.broadcastDate).tz(userTimezone)))\n        .map(broadcast => ({\n            ...broadcast,\n            localDate: dayjs(broadcast.broadcastDate).tz(userTimezone).format(),\n        }));\n}\n","import { defineStore } from 'pinia'\nimport dayjs from 'dayjs'\nimport utc from 'dayjs-plugin-utc'\nimport timezone from 'dayjs/plugin/timezone'\nimport { useUserStore } from '@/Stores/UserStore'\nimport { useNotificationStore } from '@/Stores/NotificationStore'\nimport { filterAndSortBroadcasts } from '@/Utilities/BroadcastUtils'\n\ndayjs.extend(utc)\ndayjs.extend(timezone)\n\nconst initialState = () => ({\n    team: {},\n    shows: {},\n    contributors: {},\n    members: {\n        pages: {}, // Cache for member pages\n        current_page: 1,\n        last_page: 1,\n        per_page: 5,\n        total: 0,\n        data: [], // Current page data\n    },\n    managers: [],\n    creators: [],\n    teamOwner: [],\n    teamLeader: [],\n    can: {},\n    id: 0,\n    name: '',\n    description: '',\n    slug: '',\n    totalSpots: '',\n    memberSpots: '',\n    activeShow: [],\n    activeEpisode: [],\n    showModal: Boolean,\n    confirmDialog: false,\n    confirmManagerDialog: false,\n    selectedManagerName: '',\n    selectedManagerId: 0,\n    addManager: false,\n    removeManager: false,\n    deleteMemberName: '',\n    deleteMemberId: 0,\n    noteEdit: 0,\n    note: '',\n    noteKey: 0,\n    saveNoteProcessing: Boolean,\n    // on the show episode manage page\n    // turn on the go live div\n    goLiveDisplay: false,\n    openComponent: 'teamShows',\n    nextBroadcastLoaded: {\n        scheduleIndexId: null,\n        broadcastDate: null,\n        broadcastDetails: {},\n        type: '',\n        image: null,\n        category: null,\n        subCategory: null,\n        slug: null,\n        name: null,\n        description: null,\n    },\n    nextBroadcastZoomLink: '',\n})\n\nexport const useTeamStore = defineStore('teamStore', {\n    state: initialState,\n    actions: {\n        reset() {\n            // Reset the store to its original state (clear all data)\n            Object.assign(this, initialState())\n        },\n        // async fill() {\n        //     let r = await import('@/Json/team.json');\n        //     this.$state = r.default;\n        // },\n        initializeTeam(team) {\n            // const userStore = useUserStore()\n\n            // // Ensure nextBroadcast is an array and has at least one element\n            // if (Array.isArray(team.nextBroadcast) && team.nextBroadcast.length > 0) {\n            //     const firstBroadcast = team.nextBroadcast[0]\n            //\n            //     if (firstBroadcast.broadcastDetails) {\n            //\n            //\n            //         // Ensure broadcastDetails is an array and has the zoomLink object\n            //         // this.nextBroadcastLoaded.broadcastDetails = []\n            //         // if (!Array.isArray(this.nextBroadcastLoaded.broadcastDetails)) {\n            //         //     this.nextBroadcastLoaded.broadcastDetails = []\n            //         // }\n            //\n            //         // let zoomLinkObj = this.nextBroadcastLoaded.broadcastDetails.find(detail => detail.zoomLink !== undefined)\n            //         // if (!zoomLinkObj) {\n            //         //     zoomLinkObj = {zoomLink: ''}\n            //         //     this.nextBroadcastLoaded.broadcastDetails.push(zoomLinkObj)\n            //         // }\n            //\n            //         team.nextBroadcast = team.nextBroadcast.map(broadcast => ({\n            //             ...broadcast,\n            //             broadcastDate: userStore.convertUtcToUserTimezone(broadcast.broadcastDate),\n            //         }))\n            //     }\n            // } else {\n            //     // Handle the case where nextBroadcast is not an array or is empty\n            //     this.nextBroadcastLoaded = null\n            //     this.nextBroadcastZoomLink = null\n            // }\n            this.members = team.members ? team.members.data : [] // Directly set members\n            this.managers = team.managers || []\n            this.team = team || {}\n            // this.setActiveTeam(team)\n        },\n        initializeShows(shows) {\n            this.shows = shows || {}\n        },\n        initializeContributors(contributors) {\n            this.contributors = contributors || {}\n        },\n        setCan(can) {\n            this.can = can || {}\n        },\n        setActiveTeam(team) {\n            this.team.id = team.id\n            this.team.name = team.name\n            this.team.description = team.description\n            this.team.slug = team.slug\n            this.team.totalSpots = team.totalSpots\n        },\n        setActiveShow(show) {\n            this.activeShow = show\n        },\n        setActiveEpisode(episode) {\n            this.activeShow = episode\n        },\n        async fetchPaginatedTeamMembers(page = 1) {\n            // Ensure team.members is defined\n            if (!this.team.members) {\n                this.team.members = {\n                    current_page: 1,\n                    last_page: 1,\n                    per_page: 5,\n                    total: 0,\n                    data: [],\n                    links: {},\n                };\n            }\n\n            try {\n                // Fetch the paginated members data\n                const response = await axios.get(`/teams/${this.team.slug}/fetch-paginated-team-members?members=${page}`);\n\n                // Extract meta data and the list of members\n                const meta = response.data.meta;\n                const data = response.data.data;\n                const links = response.data.links;\n\n                // If the requested page exceeds the total pages, adjust to the last valid page\n                if (page > meta.last_page) {\n                    // Fetch the last valid page\n                    return await this.fetchPaginatedTeamMembers(meta.last_page);\n                }\n\n                // Update the team.members state with the paginated response\n                this.team.members.current_page = meta.current_page;\n                this.team.members.last_page = meta.last_page;\n                this.team.members.per_page = meta.per_page;\n                this.team.members.total = meta.total;\n                this.team.members.data = data; // Store the current page's data\n                this.team.members.links = links; // Store the pagination links\n\n            } catch (error) {\n                console.error('Failed to fetch team members:', error);\n            }\n        },\n        async addMember(member) {\n            // this.team.members.data.push(member)\n            this.team.memberCount++\n            // Refresh the current page of members\n            await this.fetchPaginatedTeamMembers(this.team.members.current_page) // Use the current page from the prop\n\n        },\n        async removeMember(memberId) {\n            // this.members = this.members.filter(member => member.id !== memberId)\n            // this.team.members.data = this.team.members.data.filter(member => member.id !== memberId)\n            // this.team.members.data = this.members\n            this.team.memberCount--\n            // Refresh the current page of members\n            await this.fetchPaginatedTeamMembers(this.team.members.current_page) // Use the current page from the prop\n            // Ensure the members array is updated by reassigning it\n            this.team.members = {\n                ...this.team.members,\n                data: [...this.team.members.data] // Force Vue to recognize the change\n            };\n\n        },\n        updateCreatorTeams(creatorId, teamId, remove = false) {\n            const creator = this.creators.find(c => c.id === creatorId)\n            if (creator) {\n                if (remove) {\n                    creator.teams = creator.teams.filter(team => team.id !== teamId)\n                } else {\n                    creator.teams.push({id: teamId, is_manager: false}) // Add the new team to the creator's teams\n                }\n            }\n        },\n        // getCreators() {\n        //     router.reload({ only: ['creators'] })\n        // },\n        deleteTeamMemberCancel() {\n            this.confirmDialog = false\n        },\n        confirmTeamManagerCancel() {\n            this.confirmManagerDialog = false\n        },\n        // loadTeamMembers(members){\n        //     this.members = members;\n        // }\n        // deleteTeamMember() {\n        //     router.visit(route('teams.removeTeamMember'), {\n        //         method: 'post',\n        //         data: {\n        //             user_id: this.deleteMemberId,\n        //             team_id: this.id,\n        //             team_slug: this.slug,\n        //         },\n        //     })\n        // },\n        async deleteTeamMember() {\n            const notificationStore = useNotificationStore()\n            const payload = {\n                user_id: this.deleteMemberId,\n                team_id: this.team.id,\n            }\n\n            try {\n                const response = await axios.post(route('teams.removeTeamMember'), payload)\n                if (response.status === 200) {\n                    this.removeMember(this.deleteMemberId)\n                    this.updateCreatorTeams(this.deleteMemberId, this.team.id, true) // Remove the team from the creator's teams\n                    this.confirmDialog = false\n                    notificationStore.setToastNotification(response.data.message, 'success')\n                } else {\n                    this.confirmDialog = false\n                    notificationStore.setToastNotification('Failed to remove member from the team.', 'warning')\n                }\n            } catch (error) {\n                console.error(error)\n                this.confirmDialog = false\n                notificationStore.setToastNotification('An error occurred while removing the member from the team.', 'error')\n            }\n        },\n        async addTeamManager() {\n            const notificationStore = useNotificationStore()\n            const payload = {\n                user_id: this.selectedManagerId,\n                team_id: this.team.id,\n                team_slug: this.team.slug,\n            }\n            try {\n                const response = await axios.post(route('teams.addTeamManager'), payload)\n                if (response.status === 200) {\n                    // Add any additional logic if needed, e.g., updating team data in the store\n                    this.team.managers.push(response.data.manager)\n                    this.confirmManagerDialog = false\n                    notificationStore.setToastNotification(response.data.message, 'success')\n                } else {\n                    this.confirmManagerDialog = false\n                    notificationStore.setToastNotification('Failed to add manager to the team.', 'warning')\n                }\n            } catch (error) {\n                console.error(error)\n                this.confirmManagerDialog = false\n                notificationStore.setToastNotification('An error occurred while adding the manager to the team.', 'error')\n            }\n        },\n        async removeTeamManager() {\n            const notificationStore = useNotificationStore()\n            const payload = {\n                user_id: this.selectedManagerId,\n                team_id: this.team.id,\n                team_slug: this.team.slug,\n            }\n\n            try {\n                const response = await axios.post(route('teams.removeTeamManager'), payload)\n                if (response.status === 200) {\n                    // Remove the manager from the team.managers array\n                    this.team.managers = this.team.managers.filter(manager => manager.id !== this.selectedManagerId)\n                    this.confirmManagerDialog = false\n                    notificationStore.setToastNotification(response.data.message, 'success')\n                } else {\n                    this.confirmManagerDialog = false\n                    notificationStore.setToastNotification('Failed to remove manager from the team.', 'warning')\n                }\n            } catch (error) {\n                console.error(error)\n                this.confirmManagerDialog = false\n                notificationStore.setToastNotification('An error occurred while removing the manager from the team.', 'error')\n            }\n        },\n        toggleGoLiveDisplay() {\n            this.goLiveDisplay = !this.goLiveDisplay\n        },\n        setCreators(creators) {\n            this.creators = creators\n        },\n        updatePublicMessage(html) {\n            this.team.public_message = html\n        },\n    },\n\n    getters: {\n        spotsRemaining(state) {\n            if (!state.team.memberCount) {\n                return state.team.totalSpots // Assume no members if state.members is not defined\n            } else if (state.team.memberCount) {\n                this.totalSpots = state.team.totalSpots\n                return Math.max(state.team.totalSpots - state.team.memberCount, 0)\n            }\n        },\n        membersCount(state) {\n            if (!state.team.memberCount) {\n                return 0 // Assume no members if state.members is not defined\n            } else if (state.team.memberCount) {\n                state.memberSpots = state.team.memberCount\n                return state.team.memberCount\n            }\n        },\n        membersCountDisplay(state) {\n            if (state.team.memberCount) {\n                return state.team.memberCount > 99 ? '99+' : state.team.memberCount\n            }\n        },\n        // nextBroadcast(state) {\n        //     const {team} = state\n        //     if (!team.nextBroadcast || team.nextBroadcast.length === 0) {\n        //         return null\n        //     }\n        //\n        //     const userStore = useUserStore()\n        //     const today = dayjs().tz(userStore.timezone)\n        //\n        //     return team.nextBroadcast.reduce((closest, broadcast) => {\n        //         // Check if broadcastDate is valid\n        //         const broadcastDateString = broadcast.broadcastDate\n        //         const isValidDate = broadcastDateString && !isNaN(Date.parse(broadcastDateString)) && broadcastDateString !== 'No broadcast date'\n        //\n        //         if (!isValidDate) {\n        //             return closest\n        //         }\n        //\n        //         const broadcastDate = dayjs(broadcastDateString).tz(userStore.timezone)\n        //         if (!closest || Math.abs(broadcastDate - today) < Math.abs(dayjs(closest.broadcastDate).tz(userStore.timezone) - today)) {\n        //             return broadcast\n        //         }\n        //         return closest\n        //     }, null)\n        // },\n        nextBroadcast(state) {\n            // Leverage the sortedBroadcasts array and return the first item\n            const sorted = this.sortedBroadcasts\n            return sorted.length > 0 ? sorted[0] : null\n        },\n        // nextBroadcastIsOver: (state) => {\n        //     const userStore = useUserStore()\n        //     const nowInUserTimezone = dayjs().utc().tz(userStore.timezone)\n        //\n        //     const nextBroadcast = state.nextBroadcastLoaded\n        //\n        //     if (!nextBroadcast || !nextBroadcast.broadcastDate || !nextBroadcast.broadcastDetails?.duration_minutes) {\n        //         return false // Handle cases where the necessary data is missing\n        //     }\n        //\n        //     const broadcastEndTime = dayjs(nextBroadcast.broadcastDate)\n        //         .add(nextBroadcast.broadcastDetails.duration_minutes, 'minute')\n        //         .utc()\n        //         .tz(userStore.timezone)\n        //\n        //     return nowInUserTimezone.isAfter(broadcastEndTime)\n        // },\n        nextBroadcastIsOver(state) {\n            const userStore = useUserStore()\n            const nowInUserTimezone = dayjs().tz(userStore.timezone)\n\n            const nextBroadcast = this.nextBroadcast\n\n            if (!nextBroadcast || !nextBroadcast.broadcastDate || !nextBroadcast.broadcastDetails?.duration_minutes) {\n                return false // Handle cases where the necessary data is missing\n            }\n\n            const broadcastEndTime = dayjs(nextBroadcast.broadcastDate)\n                .add(nextBroadcast.broadcastDetails.duration_minutes, 'minute')\n                .tz(userStore.timezone)\n\n            return nowInUserTimezone.isAfter(broadcastEndTime)\n        },\n        setTeamNextBroadcast(state, broadcasts) {\n            const userStore = useUserStore()\n\n            state.team.nextBroadcast = broadcasts.map(broadcast => ({\n                ...broadcast,\n                broadcastDate: userStore.convertUtcToUserTimezone(broadcast.broadcastDate),\n            }))\n        },\n        sortedBroadcasts(state) {\n            if (!state.team.nextBroadcast || state.team.nextBroadcast.length === 0) {\n                return []\n            }\n\n            const userStore = useUserStore()\n            const sortedBroadcasts = filterAndSortBroadcasts(state.team.nextBroadcast, state.nextBroadcastLoaded, userStore.timezone)\n\n            // Set the first broadcast as the nextBroadcastLoaded\n            if (sortedBroadcasts.length > 0) {\n                const firstBroadcast = sortedBroadcasts[0]\n                state.nextBroadcastLoaded = firstBroadcast\n\n                // Check if the zoomLink is available and set it\n                if (firstBroadcast.broadcastDetails && firstBroadcast.broadcastDetails.zoomLink) {\n                    state.nextBroadcastZoomLink = firstBroadcast.broadcastDetails.zoomLink\n                } else {\n                    state.nextBroadcastZoomLink = null  // Reset if no zoomLink is found\n                }\n            } else {\n                state.nextBroadcastLoaded = null\n                state.nextBroadcastZoomLink = null  // Reset if no broadcasts are found\n            }\n\n            return sortedBroadcasts\n        },\n        futureBroadcasts(state) {\n            if (!state.team.nextBroadcast || state.team.nextBroadcast.length === 0) {\n                return []\n            }\n\n            const userStore = useUserStore()\n            const sortedAndFilteredBroadcasts = filterAndSortBroadcasts(state.team.nextBroadcast, state.nextBroadcastLoaded, userStore.timezone)\n\n            // Exclude the first item in the sorted array\n            return sortedAndFilteredBroadcasts.slice(1)\n        },\n        // sortedBroadcasts(state) {\n        //     if (!state.team.nextBroadcast || state.team.nextBroadcast.length === 0) {\n        //         return []\n        //     }\n        //\n        //     const userStore = useUserStore()\n        //     const nowInUserTimezone = dayjs().tz(userStore.timezone)\n        //\n        //     return state.team.nextBroadcast\n        //         .filter(broadcast => {\n        //             // Calculate broadcastEndTime for the current broadcast\n        //             const broadcastEndTime = dayjs(broadcast.broadcastDate)\n        //                 .add(broadcast.broadcastDetails.duration_minutes, 'minute')\n        //                 .utc()\n        //                 .tz(userStore.timezone)\n        //\n        //             // Filter out broadcasts that have already ended\n        //             const isAfterNow = nowInUserTimezone.isBefore(broadcastEndTime)\n        //\n        //             // Exclude if it matches state.nextBroadcastLoaded.broadcastDate && broadcastEndTime\n        //             const isNotLoadedBroadcast = !(\n        //                 state.nextBroadcastLoaded &&\n        //                 state.nextBroadcastLoaded.broadcastDate === broadcast.broadcastDate &&\n        //                 dayjs(state.nextBroadcastLoaded.broadcastDate)\n        //                     .add(state.nextBroadcastLoaded.broadcastDetails?.duration_minutes || 0, 'minute')\n        //                     .utc()\n        //                     .tz(userStore.timezone)\n        //                     .isSame(broadcastEndTime)\n        //             )\n        //\n        //             return isAfterNow && isNotLoadedBroadcast\n        //         })\n        //         .sort((a, b) => dayjs(a.broadcastDate).tz(userStore.timezone).diff(dayjs(b.broadcastDate).tz(userStore.timezone)))\n        //         .map(broadcast => ({\n        //             ...broadcast,\n        //             localDate: dayjs(broadcast.broadcastDate).tz(userStore.timezone).format(),\n        //         }))\n        // },\n        // futureBroadcasts(state) {\n        //     const nextBroadcast = this.nextBroadcast\n        //     if (!state.team.nextBroadcast || state.team.nextBroadcast.length === 0) {\n        //         return []\n        //     }\n        //\n        //     const userStore = useUserStore()\n        //     const nowInUserTimezone = dayjs().tz(userStore.timezone)\n        //\n        //     // Apply similar logic to sortedBroadcasts\n        //     const sortedAndFilteredBroadcasts = state.team.nextBroadcast\n        //         .filter(broadcast => {\n        //             // Calculate broadcastEndTime for the current broadcast\n        //             const broadcastEndTime = dayjs(broadcast.broadcastDate)\n        //                 .add(broadcast.broadcastDetails.duration_minutes, 'minute')\n        //                 .utc()\n        //                 .tz(userStore.timezone)\n        //\n        //             // Filter out broadcasts that have already ended\n        //             const isAfterNow = nowInUserTimezone.isBefore(broadcastEndTime)\n        //\n        //             // Exclude if it matches state.nextBroadcastLoaded.broadcastDate && broadcastEndTime\n        //             const isNotLoadedBroadcast = !(\n        //                 state.nextBroadcastLoaded &&\n        //                 state.nextBroadcastLoaded.broadcastDate === broadcast.broadcastDate &&\n        //                 dayjs(state.nextBroadcastLoaded.broadcastDate)\n        //                     .add(state.nextBroadcastLoaded.broadcastDetails?.duration_minutes || 0, 'minute')\n        //                     .utc()\n        //                     .tz(userStore.timezone)\n        //                     .isSame(broadcastEndTime)\n        //             )\n        //\n        //             return isAfterNow && isNotLoadedBroadcast\n        //         })\n        //         .sort((a, b) => dayjs(a.broadcastDate).tz(userStore.timezone).diff(dayjs(b.broadcastDate).tz(userStore.timezone)))\n        //         .map(broadcast => ({\n        //             ...broadcast,\n        //             localDate: dayjs(broadcast.broadcastDate).tz(userStore.timezone).format(),\n        //         }))\n        //\n        //     // Exclude the first item in the sorted array\n        //     return sortedAndFilteredBroadcasts.slice(1)\n        // },\n    },\n})\n\n\n// Another option for declaring specific data to return:\n// let data = r.default;\n//\n// import('@/Json/team.json').then(r => {\n// this.$patch({\n//     name: data.name,\n//     spots: data.spots,\n//     members: data.members\n// });\n// });\n","import { onBeforeMount, onMounted, watch } from 'vue'\nimport { useUserStore } from \"@/Stores/UserStore\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useVideoPlayerStore } from \"@/Stores/VideoPlayerStore\"\nimport { router } from '@inertiajs/vue3'\n\nexport function usePageSetup(pageName) {\n    const userStore = useUserStore()\n    const appSettingStore = useAppSettingStore()\n    const videoPlayerStore = useVideoPlayerStore()\n\n    appSettingStore.currentPage = pageName\n    appSettingStore.showFlashMessage = true\n    appSettingStore.pageIsHidden = false\n\n// PageSetup utility\n    if (userStore.isMobile || window.innerWidth < 1024) {\n        appSettingStore.ott = 0; // Close all panels on mobile devices\n    } else if (appSettingStore.fullPage) {\n        appSettingStore.ott = 0; // Default to closed in fullPage mode\n    } else {\n        if (appSettingStore.ott === 0) {\n            appSettingStore.ott = 4\n        }\n        // appSettingStore.ott = 4; // Open OttChat by default on larger screens\n        appSettingStore.showOttButtons = true;\n    }\n\n    videoPlayerStore.makeVideoTopRight()\n\n    if (appSettingStore.pageReload) {\n        appSettingStore.pageReload = false\n        appSettingStore.pageWasReloaded = true\n        window.location.reload();\n    }\n    // Check if the URL contains query strings\n\n\n    // Only scroll into view if there are no query strings\n\n        // const topDiv = document.getElementById(\"topDiv\")\n        // if (topDiv) {\n        //     topDiv.scrollIntoView()\n        // }\n        router.on('navigate', (event) => {\n            // Ensure OTT panels do not open automatically on mobile devices\n            if (userStore.isMobile || window.innerWidth < 1024 || appSettingStore.fullPage) {\n                appSettingStore.ott = 0; // Close all panels on mobile devices\n            } else {\n                if (appSettingStore.ott === 0) {\n                    appSettingStore.ott = 4\n                }\n                // appSettingStore.ott = 0; // Default to closed on larger screens\n            }\n            const hasQueryStrings = window.location.search !== '';\n            if (!hasQueryStrings || appSettingStore.shouldScrollToTop) {\n                requestAnimationFrame(() => {\n                    const topDiv = document.getElementById(\"topDiv\");\n                    if (topDiv) {\n                        topDiv.scrollIntoView({behavior: 'auto'});\n                    } else {\n                        window.scrollTo(0, 0);\n                    }\n                });\n            }\n            appSettingStore.shouldScrollToTop = false;\n        })\n    // Only update if we're not already on this page to avoid overwriting with the current URL\n    appSettingStore.setPrevUrl()\n    appSettingStore.showOttButtons = true\n    appSettingStore.noLayout = false\n\n    // router.reload()\n\n    watch(\n        () => appSettingStore.isSmallScreen,\n        (newValue) => {\n            if (newValue) {\n                appSettingStore.ott = 0;\n            } else {\n                appSettingStore.ott = 4;\n            }\n        },\n        { immediate: true } // This option ensures the watch executes immediately with the current value\n    );\n\n}\n","import script from \"./CancelButton.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CancelButton.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n    <button\n        @click.prevent=\"cancel\"\n        class=\"ml-2 px-4 py-2 text-white bg-orange-600 hover:bg-orange-500 rounded-lg\"\n    >Cancel\n    </button>\n  </div>\n</template>\n\n<script setup>\nimport { router } from '@inertiajs/vue3'\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useUserStore } from '@/Stores/UserStore'\n\nconst appSettingStore = useAppSettingStore()\nconst userStore = useUserStore()\n\nlet props = defineProps({\n  url: String\n})\n\nfunction cancel() {\n  if (appSettingStore.prevUrl) {\n    if (props.url) {\n      router.visit(props.url)\n    } else {\n      router.visit(appSettingStore.prevUrl)\n    }\n  } else {\n    if (props.url) {\n      router.visit(props.url)\n    } else {\n      // Fallback if prevUrl is not available\n      let prevUrl = userStore.isCreator ? '/dashboard' : '/';\n      router.visit(prevUrl);\n    }\n  }\n}\n</script>\n","import script from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"mx-4 my-4\">\n    <div class=\"alert alert-info mt-4\"\n         v-if=\"props.flash.message\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" class=\"stroke-current shrink-0 w-6 h-6\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n      </svg>\n      <span>{{ props.flash.message }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-success mt-4 mx-3\"\n         v-if=\"props.flash.success\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.success }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-warning mt-4 mx-3\"\n         v-if=\"props.flash.warning\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"/>\n      </svg>\n      <span>{{ props.flash.warning }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-error mt-4 mx-3\"\n         v-if=\"props.flash.error\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.error }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n  </div>\n\n</template>\n\n<script setup>\nimport { router } from '@inertiajs/vue3'\nimport { computed } from \"vue\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\n\nconst appSettingStore = useAppSettingStore()\n\nappSettingStore.showFlashMessage = true\n\nlet props = defineProps({\n  flash: Object,\n\n})\n\nconst messageType = computed(() => ({\n  'text-green-700 bg-green-100 dark:bg-green-200 dark:text-green-800': props.flash.success,\n  'text-blue-700 bg-blue-100 dark:bg-blue-200 dark:text-blue-800': props.flash.message,\n  'text-orange-700 bg-orange-100 dark:bg-orange-200 dark:text-orange-800': props.flash.warning,\n  'text-red-700 bg-red-100 dark:bg-red-200 dark:text-red-800': props.flash.error,\n}))\n\nconst clearFlashMessage = async () => {\n  await router.post(route('flash.clear'));\n  router.reload();\n};\n</script>\n","import script from \"./ValidationErrors.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ValidationErrors.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { computed } from 'vue';\nimport { usePage } from '@inertiajs/vue3';\n\nconst errors = computed(() => usePage().props.errors);\nconst hasErrors = computed(() => Object.keys(errors.value).length > 0);\n</script>\n\n<template>\n    <div v-if=\"hasErrors\">\n        <div class=\"font-medium text-red-600\">\n            Whoops! Something went wrong.\n        </div>\n\n        <ul class=\"mt-3 list-disc list-inside text-sm text-red-600\">\n            <li v-for=\"(error, key) in errors\" :key=\"key\">\n                {{ error }}\n            </li>\n        </ul>\n    </div>\n</template>\n","import script from \"./Upload.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Upload.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n\n    <Head :title=\"`Upload Video for ${props.episode.name}`\"/>\n\n    <div class=\"place-self-center flex flex-col gap-y-3\">\n        <div id=\"topDiv\" class=\"bg-white text-gray-800 dark:bg-gray-800 dark:text-white p-5 mb-10\">\n\n            <Message v-if=\"appSettingStore.showFlashMessage\" :flash=\"$page.props.flash\"/>\n\n            <div class=\"bg-black text-red-600 font-bold text-xl p-4 mb-4 w-full text-center\">\n                This page needs updating.. attach a video that is already uploaded or upload a new video for this episode.<br>\n                Also, upload bonus content?\n            </div>\n\n            <header>\n                <div class=\"flex justify-between mb-6\">\n                    <div>\n                        <div class=\"font-bold mb-4 text-orange-700\">UPLOAD VIDEO</div>\n                        <h1 class=\"text-3xl\">\n                            <Link :href=\"`/shows/${show.slug}/episode/${episode.slug}`\" class=\"text-orange-700 font-bold\">{{ episode.name }}</Link>\n                        </h1>\n                    </div>\n                    <div>\n                        <CancelButton />\n                    </div>\n                </div>\n                <div>\n                    <div class=\"\"><span class=\"text-xs uppercase font-semibold\">Show: </span>\n                        <Link :href=\"`/shows/${show.slug}/manage`\">\n                            {{ show.name }}\n                        </Link>\n                    </div>\n                    <div class=\"\"><span class=\"text-xs uppercase font-semibold\">Team: </span>\n                        <Link :href=\"`/teams/${team.slug}/manage`\">\n                            {{ team.name }}\n                        </Link>\n                    </div>\n                    <div class=\"mb-6\"><span class=\"text-xs uppercase font-semibold\">Episode #: </span>\n                        <span v-if=\"episode.episode_number\">{{ episode.episode_number }}</span>\n                        <span v-if=\"!episode.episode_number\">{{ episode.id }}</span>\n                    </div>\n                </div>\n            </header>\n\n\n            <div class=\"flex flex-col\">\n                <div class=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\n                    <div class=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\n                        <div class=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\n\n\n                            <div v-if=\"form.errors.name\" v-text=\"form.errors.name\"\n                                 class=\"bg-red-600 p-2 w-full text-white font-semibold mt-1\"></div>\n                            <div v-if=\"form.errors.description\" v-text=\"form.errors.description\"\n                                 class=\"bg-red-600 p-2 w-full text-white font-semibold mt-1\"></div>\n                            <div v-if=\"form.errors.episode_number\" v-text=\"form.errors.episode_number\"\n                                 class=\"bg-red-600 p-2 w-full text-white font-semibold mt-1\"></div>\n                            <div v-if=\"form.errors.notes\" v-text=\"form.errors.notes\"\n                                 class=\"bg-red-600 p-2 w-full text-white font-semibold mt-1\"></div>\n                            <div v-if=\"form.errors.video_file_url\" v-text=\"form.errors.video_file_url\"\n                                 class=\"bg-red-600 p-2 w-full text-white font-semibold mt-1\"></div>\n                            <div v-if=\"form.errors.video_file_embed_code\" v-text=\"form.errors.video_file_embed_code\"\n                                 class=\"bg-red-600 p-2 w-full text-white font-semibold mt-1\"></div>\n\n\n\n<!-- Begin grid 2-col -->\n                            <div class=\"grid grid-cols-1 sm:grid-cols-2 space-x-6 p-6\">\n\n<!--Right Column-->\n                                <div>\n                                    <div>\n                                        <div class=\"max-full mx-auto mt-2 mb-6 bg-gray-200 p-6 text-dark\">\n                                            <div class=\"mb-3 bg-orange-300 py-1 px-2 text-xs font-semibold text-red-800\">\n                                                In development. Not currently working.\n                                            </div>\n                                            <h2 class=\"text-xl font-semibold text-gray-800\">Upload Video</h2>\n\n                                            <ul class=\"pb-4 text-gray-800\">\n                                                <li>Max Video Length: <span class=\"text-orange-400\">4 hours</span></li>\n                                                <li>File Types accepted: <span class=\"text-orange-400\">mp4, webm, ogg</span></li>\n                                            </ul>\n                                            <div class=\"flex space-y-3\">\n                                                <div class=\"mb-6\">\n                                                    <img v-if=\"!props.episode.video_thumbnail\"\n                                                         :src=\"'/storage/images/EBU_Colorbars.svg.png'\"\n                                                         :key=\"video_thumbnail\" />\n\n                                                    <img v-if=\"props.episode.video_thumbnail\"\n                                                         :src=\"'/storage/images/' + props.episode.video_thumbnail\"\n                                                         :key=\"video_thumbnail\" />\n                                                </div>\n                                            </div>\n\n<!--                                            <file-pond-->\n<!--                                                name=\"poster\"-->\n<!--                                                ref=\"pond\"-->\n<!--                                                label-idle=\"Click to choose video, or drag here...\"-->\n<!--                                                @init=\"filepondInitialized\"-->\n<!--                                                server=\"/showEpisodesUploadPoster\"-->\n<!--                                                accepted-file-types=\"image/jpg, image/jpeg, image/png\"-->\n<!--                                                @processfile=\"handleProcessedFile\"-->\n<!--                                                max-file-size=\"10MB\"-->\n<!--                                            />-->\n                                        </div>\n\n                                    </div>\n\n                                    <JetValidationErrors class=\"mr-4\" />\n\n                                </div>\n<!-- End Right Column -->\n                            </div>\n<!-- End grid 2-col -->\n\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n\n\n        </div>\n    </div>\n\n</template>\n\n<script setup>\nimport { router } from '@inertiajs/vue3'\nimport {useForm, usePage} from \"@inertiajs/vue3\"\nimport vueFilePond, { setOptions } from 'vue-filepond'\nimport FilePondPluginFileValidateType from \"filepond-plugin-file-validate-type\"\nimport FilePondPluginFileValidateSize from \"filepond-plugin-file-validate-size\"\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\"\nimport FilePondPluginFileMetadata from \"filepond-plugin-file-metadata\"\nimport 'filepond/dist/filepond.min.css'\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.min.css'\nimport { usePageSetup } from '@/Utilities/PageSetup'\nimport { useTeamStore } from \"@/Stores/TeamStore\"\nimport { useShowStore } from \"@/Stores/ShowStore\"\nimport JetValidationErrors from '@/Jetstream/ValidationErrors'\nimport CancelButton from '@/Components/Global/Buttons/CancelButton'\nimport Message from '@/Components/Global/Modals/Messages'\n\nusePageSetup('shows/slug/episodes/slug/upload')\n\nconst appSettingStore = useAppSettingStore()\nconst teamStore = useTeamStore()\nconst showStore = useShowStore()\n\nteamStore.setActiveTeam(props.team);\nteamStore.setActiveShow(props.show);\nshowStore.episodePoster = props.poster;\n\nlet props = defineProps({\n    episode: Object,\n    show: Object,\n    team: Object,\n    poster: String,\n});\n\nlet form = useForm({\n    id: props.episode.id,\n    name: props.episode.name,\n    episode_number: props.episode.episode_number,\n    description: props.episode.description,\n    notes: props.episode.notes,\n    show_id: props.episode.show_id,\n    video_thumbnail: props.episode.video_thumbnail,\n    video_file_url: props.episode.video_file_url,\n    video_file_embed_code: props.episode.video_file_embed_code,\n});\n\n\nconst FilePond = vueFilePond(\n    FilePondPluginFileValidateType,\n    FilePondPluginFileValidateSize,\n    FilePondPluginImagePreview,\n    FilePondPluginFileMetadata\n);\n\n////////\n// tec21: this isn't working...\n// I wasn't able to set metadata\n// or get metadata back from filepond.\n//\n// FilePond.setOptions = ({\n//     fileMetadataObject: {\n//         episode_id: '1',\n//     },\n// });\n\nfunction filepondInitialized() {\n    console.log(\"Filepond is ready!\");\n    console.log('Filepond object:', FilePond);\n}\n\nfunction handleProcessedFile(error, file) {\n    if (error) {\n        console.log(\"Filepond processed file\");\n        console.log(error);\n        console.log(file);\n        return;\n    }\n    router.reload({\n        only: ['poster'],\n    });\n}\n\n\nlet submit = () => {\n    form.patch(route('showEpisodes.update', props.episode.slug));\n};\n\n</script>\n"],"names":["filterAndSortBroadcasts","broadcasts","nextBroadcastLoaded","userTimezone","nowInUserTimezone","dayjs","tz","filter","broadcast","_nextBroadcastLoaded$","broadcastEndTime","broadcastDate","add","broadcastDetails","duration_minutes","utc","isAfterNow","isBefore","isNotLoadedBroadcast","isSame","sort","a","b","diff","map","_objectSpread","localDate","format","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","timezone","initialState","team","shows","contributors","members","pages","current_page","last_page","per_page","total","data","managers","creators","teamOwner","teamLeader","can","id","description","slug","totalSpots","memberSpots","activeShow","activeEpisode","showModal","Boolean","confirmDialog","confirmManagerDialog","selectedManagerName","selectedManagerId","addManager","removeManager","deleteMemberName","deleteMemberId","noteEdit","note","noteKey","saveNoteProcessing","goLiveDisplay","openComponent","scheduleIndexId","image","category","subCategory","nextBroadcastZoomLink","useTeamStore","defineStore","state","actions","assign","this","initializeTeam","initializeShows","initializeContributors","setCan","setActiveTeam","setActiveShow","show","setActiveEpisode","episode","fetchPaginatedTeamMembers","_arguments","_this","_callee","page","response","meta","links","_context","undefined","axios","get","concat","t0","console","error","addMember","member","_this2","_callee2","_context2","memberCount","removeMember","memberId","_this3","_callee3","_context3","_toConsumableArray","updateCreatorTeams","creatorId","teamId","remove","creator","find","teams","is_manager","deleteTeamMemberCancel","confirmTeamManagerCancel","deleteTeamMember","_this4","_callee4","notificationStore","payload","_context4","useNotificationStore","user_id","team_id","post","route","status","setToastNotification","message","addTeamManager","_this5","_callee5","_context5","team_slug","manager","removeTeamManager","_this6","_callee6","_context6","toggleGoLiveDisplay","setCreators","updatePublicMessage","html","public_message","getters","spotsRemaining","Math","max","membersCount","membersCountDisplay","nextBroadcast","sorted","sortedBroadcasts","nextBroadcastIsOver","_nextBroadcast$broadc","userStore","useUserStore","isAfter","setTeamNextBroadcast","convertUtcToUserTimezone","firstBroadcast","zoomLink","futureBroadcasts","usePageSetup","pageName","appSettingStore","useAppSettingStore","videoPlayerStore","useVideoPlayerStore","currentPage","showFlashMessage","pageIsHidden","isMobile","window","innerWidth","fullPage","ott","showOttButtons","makeVideoTopRight","pageReload","pageWasReloaded","location","reload","router","on","event","search","shouldScrollToTop","requestAnimationFrame","topDiv","document","getElementById","scrollIntoView","behavior","scrollTo","setPrevUrl","noLayout","watch","isSmallScreen","newValue","immediate","props","__props","cancel","prevUrl","url","visit","isCreator","clearFlashMessage","computed","flash","success","warning","_ref","errors","usePage","hasErrors","teamStore","showStore","useShowStore","episodePoster","poster","form","useForm","episode_number","notes","show_id","video_thumbnail","video_file_url","video_file_embed_code","vueFilePond","FilePondPluginFileValidateType","FilePondPluginFileValidateSize","FilePondPluginImagePreview","FilePondPluginFileMetadata"],"sourceRoot":""}
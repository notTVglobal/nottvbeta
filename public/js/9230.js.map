{"version":3,"file":"js/9230.js","mappings":"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","sources":["webpack:///./resources/js/Stores/TeamStore.js","webpack:///./resources/js/Utilities/PageSetup.js","webpack:///./resources/js/Components/Global/Buttons/CancelButton.vue?b7c6","webpack:///./resources/js/Components/Global/Buttons/CancelButton.vue","webpack:///./resources/js/Components/Global/Modals/Messages.vue?dfe9","webpack:///./resources/js/Components/Global/Modals/Messages.vue","webpack:///./resources/js/Components/Global/TextEditor/TabbableTextarea.vue?4db8","webpack:///./resources/js/Components/Global/TextEditor/TabbableTextarea.vue","webpack:///./resources/js/Components/Global/Uploaders/ImageUpload.vue?55d5","webpack:///./resources/js/Components/Global/Uploaders/ImageUpload.vue","webpack:///./resources/js/Jetstream/ValidationErrors.vue?5fdc","webpack:///./resources/js/Jetstream/ValidationErrors.vue","webpack:///./resources/js/Components/Pages/Shows/Layout/EditShowHeader.vue?8e05","webpack:///./resources/js/Components/Pages/Shows/Layout/EditShowHeader.vue","webpack:///./resources/js/Pages/Shows/{$id}/Edit.vue?14a6","webpack:///./resources/js/Pages/Shows/{$id}/Edit.vue"],"sourcesContent":["import {defineStore} from \"pinia\";\nimport {Inertia} from \"@inertiajs/inertia\";\n\nconst initialState = () => ({\n    id: 0,\n    name: '',\n    description: '',\n    slug: '',\n    totalSpots: '',\n    memberSpots: '',\n    teamCreator: [],\n    teamLeader: [],\n    members: [],\n    managers: [],\n    activeShow: [],\n    activeEpisode: [],\n    creators: [],\n    showModal: Boolean,\n    confirmDialog: false,\n    confirmManagerDialog: false,\n    selectedManagerName: '',\n    selectedManagerId: 0,\n    addManager: false,\n    removeManager: false,\n    deleteMemberName: '',\n    deleteMemberId: 0,\n    noteEdit: 0,\n    note: '',\n    saveNoteProcessing: Boolean,\n    // on the show episode manage page\n    // turn on the go live div\n    goLiveDisplay: false,\n    can: [],\n    openComponent: 'teamShows',\n})\n\nexport const useTeamStore = defineStore('teamStore', {\n    state: initialState,\n    actions: {\n        reset() {\n            // Reset the store to its original state (clear all data)\n            Object.assign(this, initialState());\n        },\n        // async fill() {\n        //     let r = await import('@/Json/team.json');\n        //     this.$state = r.default;\n        // },\n        setActiveTeam(team) {\n            this.id = team.id;\n            this.name = team.name;\n            this.description = team.description;\n            this.slug = team.slug;\n            this.totalSpots = team.totalSpots;\n            this.memberSpots = team.memberSpots;\n        },\n        setActiveShow(show) {\n            this.activeShow = show;\n        },\n        setActiveEpisode(episode) {\n            this.activeShow = episode;\n        },\n        // getCreators() {\n        //     Inertia.reload({ only: ['creators'] })\n        // },\n        deleteTeamMemberCancel() {\n            this.confirmDialog = false;\n        },\n        confirmTeamManagerCancel() {\n            this.confirmManagerDialog = false;\n        },\n        // loadTeamMembers(members){\n        //     this.members = members;\n        // }\n        deleteTeamMember() {\n            Inertia.visit(route('teams.removeTeamMember'), {\n                method: 'post',\n                data: {\n                    user_id: this.deleteMemberId,\n                    team_id: this.id,\n                    team_slug: this.slug\n                },\n            })\n        },\n        addTeamManager() {\n            Inertia.visit(route('teams.addTeamManager'), {\n                method: 'post',\n                data: {\n                    user_id: this.selectedManagerId,\n                    team_id: this.id,\n                    team_slug: this.slug\n                },\n            })\n            this.confirmManagerDialog = false;\n        },\n        removeTeamManager() {\n            Inertia.visit(route('teams.removeTeamManager'), {\n                method: 'post',\n                data: {\n                    user_id: this.selectedManagerId,\n                    team_id: this.id,\n                    team_slug: this.slug\n                },\n            })\n            this.confirmManagerDialog = false;\n        },\n        toggleGoLiveDisplay() {\n            this.goLiveDisplay = ! this.goLiveDisplay;\n        },\n        async fetchTeamMembers() {\n            await axios.get('/team/team-members').then().error()\n        },\n    },\n\n    getters: {\n        spotsRemaining() {\n            if (this.totalSpots - this.memberSpots < 1){\n                return 0\n            }\n            return this.totalSpots - this.memberSpots;\n        },\n    }\n});\n\n\n// Another option for declaring specific data to return:\n// let data = r.default;\n//\n// import('@/Json/team.json').then(r => {\n// this.$patch({\n//     name: data.name,\n//     spots: data.spots,\n//     members: data.members\n// });\n// });\n","import { onBeforeMount, onMounted } from 'vue'\nimport { useUserStore } from \"@/Stores/UserStore\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useVideoPlayerStore } from \"@/Stores/VideoPlayerStore\"\nimport { Inertia } from '@inertiajs/inertia'\n\nexport function usePageSetup(pageName) {\n    const userStore = useUserStore()\n    const appSettingStore = useAppSettingStore()\n    const videoPlayerStore = useVideoPlayerStore()\n\n    appSettingStore.currentPage = pageName\n    appSettingStore.showFlashMessage = true\n    appSettingStore.pageIsHidden = false\n\n    if (userStore.isMobile || window.innerWidth < 1024) {\n        appSettingStore.ott = 0;\n    } else {\n        appSettingStore.ott = 1;\n    }\n\n    videoPlayerStore.makeVideoTopRight()\n\n    if (appSettingStore.pageReload) {\n        appSettingStore.pageReload = false\n        window.location.reload(true);\n    }\n    // Check if the URL contains query strings\n\n\n    // Only scroll into view if there are no query strings\n\n        // const topDiv = document.getElementById(\"topDiv\")\n        // if (topDiv) {\n        //     topDiv.scrollIntoView()\n        // }\n        Inertia.on('navigate', (event) => {\n            if (userStore.isMobile || window.innerWidth < 1024) {\n                appSettingStore.ott = 0;\n            } else {\n                appSettingStore.ott = 1;\n            }\n            const hasQueryStrings = window.location.search !== '';\n            if (!hasQueryStrings || appSettingStore.shouldScrollToTop) {\n                requestAnimationFrame(() => {\n                    const topDiv = document.getElementById(\"topDiv\");\n                    if (topDiv) {\n                        topDiv.scrollIntoView({behavior: 'auto'});\n                    } else {\n                        window.scrollTo(0, 0);\n                    }\n                });\n            }\n            appSettingStore.shouldScrollToTop = false;\n        })\n    // Only update if we're not already on this page to avoid overwriting with the current URL\n    appSettingStore.setPrevUrl()\n    appSettingStore.showOttButtons = true\n    appSettingStore.noLayout = false\n\n    // Inertia.reload()\n\n}\n","import script from \"./CancelButton.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CancelButton.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n    <button\n        @click.prevent=\"cancel\"\n        class=\"ml-2 px-4 py-2 text-white bg-orange-600 hover:bg-orange-500 rounded-lg\"\n    >Cancel\n    </button>\n  </div>\n</template>\n\n<script setup>\nimport { Inertia } from \"@inertiajs/inertia\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useUserStore } from '@/Stores/UserStore'\n\nconst appSettingStore = useAppSettingStore()\nconst userStore = useUserStore()\n\nlet props = defineProps({\n  url: String\n})\n\nfunction cancel() {\n  if (appSettingStore.prevUrl) {\n    if (props.url) {\n      Inertia.visit(props.url)\n    } else {\n      Inertia.visit(appSettingStore.prevUrl)\n    }\n  } else {\n    if (props.url) {\n      Inertia.visit(props.url)\n    } else {\n      // Fallback if prevUrl is not available\n      let prevUrl = userStore.isCreator ? '/dashboard' : '/';\n      Inertia.visit(prevUrl);\n    }\n  }\n}\n</script>\n","import script from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"mx-4 my-4\">\n    <div class=\"alert alert-info mt-4\"\n         v-if=\"props.flash.message\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" class=\"stroke-current shrink-0 w-6 h-6\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n      </svg>\n      <span>{{ props.flash.message }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-success mt-4 mx-3\"\n         v-if=\"props.flash.success\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.success }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-warning mt-4 mx-3\"\n         v-if=\"props.flash.warning\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"/>\n      </svg>\n      <span>{{ props.flash.warning }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-error mt-4 mx-3\"\n         v-if=\"props.flash.error\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.error }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n  </div>\n\n</template>\n\n<script setup>\nimport { Inertia } from \"@inertiajs/inertia\"\nimport { computed } from \"vue\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\n\nconst appSettingStore = useAppSettingStore()\n\nappSettingStore.showFlashMessage = true\n\nlet props = defineProps({\n  flash: Object,\n\n})\n\nconst messageType = computed(() => ({\n  'text-green-700 bg-green-100 dark:bg-green-200 dark:text-green-800': props.flash.success,\n  'text-blue-700 bg-blue-100 dark:bg-blue-200 dark:text-blue-800': props.flash.message,\n  'text-orange-700 bg-orange-100 dark:bg-orange-200 dark:text-orange-800': props.flash.warning,\n  'text-red-700 bg-red-100 dark:bg-red-200 dark:text-red-800': props.flash.error,\n}))\n\nconst clearFlashMessage = async () => {\n  await Inertia.post(route('flash.clear'));\n  Inertia.reload();\n};\n</script>\n","import script from \"./TabbableTextarea.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TabbableTextarea.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n<!--    <textarea-->\n<!--        @keydown.tab.prevent=\"onTabPress\"-->\n<!--        @keyup=\"emit('update:modelValue', $event.target.value)\"-->\n<!--        v-text=\"modelValue\"-->\n<!--        :placeholder=\"placeholder\" />-->\n  <textarea\n      @keydown.tab.prevent=\"onTabPress\"\n      @input=\"onInput\"\n      :value=\"modelValue\"\n      :placeholder=\"placeholder\"\n      class=\"textarea textarea-bordered\"\n  />\n</template>\n\n<script setup>\ndefineProps({\n  modelValue: String,\n  placeholder: String\n});\n\nconst emit = defineEmits(['update:modelValue']);\n// let emit = defineEmits(['update:modelValue']);\n\nconst onInput = (event) => {\n  emit('update:modelValue', event.target.value);\n};\n\nfunction onTabPress(e) {\n  let textarea = e.target;\n\n  // get caret position/selection\n  let val = textarea.value,\n      start = textarea.selectionStart,\n      end = textarea.selectionEnd;\n\n  // set textarea value to: text before caret + tab + text after caret\n  textarea.value = val.substring(0, start) + \"\\t\" + val.substring(end);\n\n  // put caret at right position again\n  textarea.selectionStart = textarea.selectionEnd = start + 1;\n}\n\n</script>\n","import script from \"./ImageUpload.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ImageUpload.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"\">\n    <div class=\"max-full mx-auto mt-2 mb-6 bg-gray-200 p-6 text-black\">\n      <h2 class=\"text-xl font-semibold\">{{ name }}</h2>\n\n      <ul class=\"pb-4\">\n        <li>Max File Size: <span class=\"text-orange-400\">{{ maxSize }}</span></li>\n        <li>File Types accepted: <span class=\"text-orange-400\">{{ fileTypes }}</span></li>\n      </ul>\n      <file-pond\n          name=\"image\"\n          ref=\"pond\"\n          label-idle=\"Click to choose file, or drag here...\"\n          @init=\"filepondInitialized\"\n          :server=\"serverOptions\"\n          :accepted-file-types=\"fileTypes\"\n          @processfile=\"handleProcessedFile\"\n          :max-file-size=\"maxSize\"\n      />\n      <!--        <file-pond-->\n      <!--            ref=\"filePond\"-->\n      <!--            :files=\"files\"-->\n      <!--            :server=\"serverOptions\"-->\n      <!--            @init=\"handleFilePondInit\"-->\n      <!--            @beforeaddfile=\"handleBeforeAddFile\"-->\n      <!--            @processfile=\"handleProcessedFile\"-->\n      <!--        />-->\n    </div>\n  </div>\n\n</template>\n\n<script setup>\nimport { useNotificationStore } from '@/Stores/NotificationStore'\nimport vueFilePond, { setOptions } from 'vue-filepond'\nimport FilePondPluginFileValidateType from \"filepond-plugin-file-validate-type\"\nimport FilePondPluginFileValidateSize from \"filepond-plugin-file-validate-size\"\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\"\nimport FilePondPluginFileMetadata from \"filepond-plugin-file-metadata\"\nimport 'filepond/dist/filepond.min.css'\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.min.css'\n\nconst notificationStore = useNotificationStore()\n\nlet props = defineProps({\n  image: Object,\n  name: String,\n  metadataKey: String,\n  metadataValue: String,\n  modelType: String,\n  modelId: String,\n  maxSize: String,\n  fileTypes: String,\n})\n\n\n// // Initialize FilePond with the File Metadata plugin\n// const filePondOptions = {\n//     allowMultiple: false,\n//     labelIdle: \"Drop files here or click to upload\",\n//     plugins: [FilePondPluginFileMetadata()],\n// };\n\n\n// Files array to store uploaded files\n// const files = ref([]);\n\nconst metadataKey = props.metadataKey\nconst metadataValue = props.metadataValue\nconst customMetadata = {\n  [metadataKey]: metadataValue\n};\n// customMetadata.value[props.metadataKey] = 'bar';\n// customMetadata.value[props.metadataKey] = props.metadataValue;\n// const customMetadata = ref({ [props.metadataKey]: props.metadataValue });\n// const customMetadata = computed(() => ({\n//     [props.metadataKey]: props.metadataValue,\n// }));\n\n// FilePond server options (you can customize this)\nconst serverOptions = {\n  process: (fieldName, file, metadata, load, error, progress, abort) => {\n    const formData = new FormData();\n    formData.append('image', file, file.name); // Attach the file\n    // Append modelType and modelId if it's part of your component\n    if (props.modelType) {\n      formData.append('modelType', props.modelType);\n    }\n    if (props.modelId) {\n      formData.append('modelId', props.modelId);\n    }\n\n    // Axios request configuration\n    const config = {\n      onUploadProgress: (event) => {\n        // Calculate and update progress\n        progress(event.lengthComputable, event.loaded, event.total);\n      },\n    };\n\n    // Perform the Axios POST request\n    axios.post('/api/image-upload', formData, config)\n        .then(response => {\n          // FilePond expects the server to return a file ID on successful upload,\n          // but you can adjust this based on your response structure.\n          load(response.data.fileId);\n        })\n        .catch(err => {\n          // Default error message and title in case err.response is undefined\n          let errorMessage = 'An unexpected error occurred during the upload. Please try again.';\n          let errorTitle = 'Upload Error';\n\n          // Check if the error response exists and has data\n          if (err.response && err.response.data) {\n            // Example: Extracting error message from server response\n            // Adjust based on your server's error response structure\n            if (typeof err.response.data === 'object' && err.response.data.errors) {\n              // If the errors are in object format, you might want to convert them to a string\n              const errors = err.response.data.errors;\n              const errorMessages = Object.keys(errors).map(key => `${key}: ${errors[key].join(', ')}`).join('\\n');\n              errorMessage = `Upload failed with errors:\\n${errorMessages}`;\n            } else if (typeof err.response.data === 'string') {\n              // Directly use the error string as the message\n              errorMessage = err.response.data;\n            }\n          }\n\n          // Use the errorMessage and errorTitle in your notification\n          notificationStore.setGeneralServiceNotification(errorTitle, errorMessage);\n\n          // Pass a generic error message to FilePond's error handler to avoid displaying sensitive or detailed information directly in the UI\n          error('An error occurred during the upload.');\n        });\n\n\n    // Return an abort function to stop the upload if needed\n    return {\n      abort: () => {\n        // This function is called if the user aborts the upload\n        console.log(\"Upload aborted by the user.\");\n        abort();\n      }\n    };\n  },\n};\n\n\n// Initialize FilePond\n// const handleFilePondInit = () => {\n//     // FilePond has been initialized\n//     console.log(\"FilePond is ready\");\n// };\n\n// Handle the beforeaddfile event\n// const handleBeforeAddFile = (file) => {\n//     // Add metadata to the file object\n//     file.setMetadata(\"key\", \"value\");\n//     // You can set multiple metadata fields as needed\n//     // file.setMetadata(\"anotherKey\", \"anotherValue\");\n// };\n\n\nconst FilePond = vueFilePond(\n    FilePondPluginFileValidateType,\n    FilePondPluginFileValidateSize,\n    FilePondPluginImagePreview,\n    FilePondPluginFileMetadata\n);\n\n// Handle the beforeaddfile event\n// const handleBeforeAddFile = (file) => {\n//     // Add metadata to the file object\n//     file.setMetadata(\"show_id\", \"1\");\n//     // You can set multiple metadata fields as needed\n//     // file.setMetadata(\"anotherKey\", \"anotherValue\");\n// };\n\n// FilePond.registerPlugin(FilePondPluginFileMetadata);\nFilePond.setOptions = ({\n  fileMetadataObject: {\n    show_id: '1',\n  },\n});\n\n\n// Initialize FilePond with the File Metadata plugin\n// const filePondOptions = {\n//     allowMultiple: true,\n//     labelIdle: \"Drop files here or click to upload\",\n//     plugins: [FilePondPluginFileMetadata()],\n// };\n\nfunction filepondInitialized() {\n  console.log(\"Filepond is ready!\");\n  // console.log('Filepond object:', FilePond);\n\n}\n\nconst emit = defineEmits(['reloadImage'])\n\nfunction handleProcessedFile(error, file) {\n  if (error) {\n    console.log(\"Filepond processed file\");\n    console.log(error);\n    console.log(file);\n    return;\n  }\n\n  emit('reloadImage')\n\n  // Inertia.reload({\n  //     only: ['image'],\n  // });\n}\n\n</script>\n","import script from \"./ValidationErrors.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ValidationErrors.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { computed } from 'vue';\nimport { usePage } from '@inertiajs/inertia-vue3';\n\nconst errors = computed(() => usePage().props.value.errors);\nconst hasErrors = computed(() => Object.keys(errors.value).length > 0);\n</script>\n\n<template>\n    <div v-if=\"hasErrors\">\n        <div class=\"font-medium text-red-600\">\n            Whoops! Something went wrong.\n        </div>\n\n        <ul class=\"mt-3 list-disc list-inside text-sm text-red-600\">\n            <li v-for=\"(error, key) in errors\" :key=\"key\">\n                {{ error }}\n            </li>\n        </ul>\n    </div>\n</template>\n","import script from \"./EditShowHeader.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./EditShowHeader.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <header>\n    <div class=\"flex justify-between pt-6 mb-6\">\n\n      <div>\n        <div class=\"font-bold mb-4 text-red-700\">EDIT SHOW</div>\n        <h1 class=\"text-3xl\">\n          <Link :href=\"`/shows/${show.slug}`\" class=\"text-red-700 font-bold uppercase\">{{ show.name }}</Link>\n        </h1>\n      </div>\n      <div class=\"flex flex-wrap-reverse justify-end\">\n        <div>\n          <button\n              type=\"submit\"\n              class=\"h-fit bg-blue-600 hover:bg-blue-500 text-white rounded-lg py-2 px-4\"\n              :disabled=\"form.processing\"\n              @click=\"emitSubmit\"\n          >\n            Save\n          </button>\n        </div>\n        <CancelButton/>\n      </div>\n\n    </div>\n  </header>\n\n  <div>\n    <div class=\"mb-6\"><span class=\"text-xs uppercase font-semibold\">Team: </span>\n      <button\n          @click=\"appSettingStore.btnRedirect(`/teams/${team.slug}`)\"\n          class=\"font-bold uppercase text-blue-700 dark:text-blue-300 hover:text-blue-500\">{{ team.name }}\n      </button>\n    </div>\n  </div>\n\n\n</template>\n\n<script setup>\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport CancelButton from \"@/Components/Global/Buttons/CancelButton\"\n\nconst appSettingStore = useAppSettingStore()\n\ndefineProps({\n  show: Object,\n  team: Object,\n  form: Object,\n})\n\nconst emits = defineEmits(['submit']);\n\n// Emit the \"submit\" event when the button is clicked.\nconst emitSubmit = () => {\n  emits('submit');\n};\n\n</script>\n","import script from \"./Edit.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Edit.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n\n  <Head :title=\"`Edit Show: ${props.show.name}`\"/>\n\n  <div id=\"topDiv\" class=\"place-self-center flex flex-col gap-y-3\">\n    <div class=\"bg-white text-black dark:bg-gray-800 dark:text-gray-50 px-5 mb-10\">\n\n      <Message v-if=\"appSettingStore.showFlashMessage\" :flash=\"$page.props.flash\"/>\n\n      <ShowEditHeader :show=\"show\" :team=\"team\" :form=\"form\" @submit=\"submit\"/>\n\n      <div class=\"flex flex-col\">\n        <div class=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\n          <div class=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\n            <div class=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg mb-10\">\n\n              <div v-if=\"form.errors.name\" v-text=\"form.errors.name\"\n                   class=\"bg-red-600 p-2 w-full text-white font-semibold mt-1 mb-6\"></div>\n              <div v-if=\"form.errors.description\" v-text=\"form.errors.description\"\n                   class=\"bg-red-600 p-2 w-full text-white font-semibold mt-1 mb-6\"></div>\n\n              <!-- Begin grid 2-col -->\n              <div class=\"grid grid-cols-1 sm:grid-cols-2 space-x-6 p-6\">\n\n                <!--Left Column-->\n                <div>\n                  <div class=\"flex space-y-3\">\n                    <div class=\"mb-6\">\n                      <SingleImage :image=\"image\" :key=\"image\" :alt=\"'show poster'\" class=\"\"/>\n                    </div>\n                  </div>\n\n                  <div class=\"w-full\">\n\n                    <label class=\"block mb-2 uppercase font-bold text-xs text-light text-red-700\"\n                           for=\"name\"\n                    >\n                      Change Show Poster\n                    </label>\n\n                    <ImageUpload :image=\"image\"\n                                 :modelType=\"'show'\"\n                                 :modelId=\"show.id\"\n                                 :name=\"'Upload Show Poster'\"\n                                 :maxSize=\"'30MB'\"\n                                 :fileTypes=\"'image/jpg, image/jpeg, image/png'\"\n                                 @reloadImage=\"reloadImage\"\n                    />\n\n                  </div>\n\n                </div>\n\n\n                <!--Right Column-->\n                <div>\n                  <!--                                    <ShowPosterUpload-->\n                  <!--                                        :team=\"props.show\"-->\n                  <!--                                        :images=\"props.images\"-->\n                  <!--                                    />-->\n                  <form @submit.prevent=\"submit\">\n\n                    <div class=\"mb-6\">\n                      <label class=\"block mb-2 uppercase font-bold text-xs text-light text-red-700\"\n                             for=\"name\"\n                      >\n                        Show Notes (only visible to team members)\n                      </label>\n\n                      <!--                      <input v-model=\"form.notes\"-->\n                      <!--                             class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"-->\n                      <!--                             type=\"text\"-->\n                      <!--                             name=\"notes\"-->\n                      <!--                             id=\"notes\"-->\n\n                      <!--                      >-->\n                      <TabbableTextarea v-model=\"form.notes\"\n                                        class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                      />\n                      <div v-if=\"form.errors.notes\" v-text=\"form.errors.notes\"\n                           class=\"text-xs text-red-600 mt-1\"></div>\n                    </div>\n\n                    <div class=\"mb-6\">\n                      <label class=\"block mb-2 uppercase font-bold text-xs text-red-700\"\n                             for=\"show_runner_creator_id\"\n                      >\n                        Show Runner\n                      </label>\n\n                      <select\n                              class=\"border border-gray-400 text-gray-800 p-2 w-fit rounded-lg block mb-2 uppercase font-bold text-xs \"\n                              v-model=\"selectedShowRunnerCreatorId\"\n                      >\n                        <option v-for=\"member in teamMembers\"\n                                :key=\"member.creator_id\" :value=\"member.creator_id\">{{ member.name }}\n                        </option>\n\n\n                      </select>\n                      <div v-if=\"form.errors.show_runner_creator_id\" v-text=\"form.errors.show_runner_creator_id\"\n                           class=\"text-xs text-red-600 mt-1\"></div>\n                    </div>\n\n                    <div class=\"mb-6\">\n                      <label class=\"block mb-2 uppercase font-bold text-xs text-red-700\"\n                             for=\"status\"\n                      >\n                        Status\n                      </label>\n\n                      <select required\n                              class=\"border border-gray-400 text-gray-800 p-2 w-fit rounded-lg block mb-2 uppercase font-bold text-xs \"\n                              v-model=\"form.show_status_id\"\n                      >\n                        <option v-for=\"status in statuses\"\n                                :key=\"status.id\" :value=\"status.id\">{{ status.name }}\n                        </option>\n\n\n                      </select>\n                      <div v-if=\"form.errors.show_status_id\" v-text=\"form.errors.show_status_id\"\n                           class=\"text-xs text-red-600 mt-1\"></div>\n                    </div>\n\n                    <div class=\"mb-6\">\n                      <label class=\"block mb-2 uppercase font-bold text-xs text-red-700\"\n                             for=\"episode_play_order\"\n                      >\n                        Episode Play Order\n                      </label>\n\n                      <select required\n                              class=\"border border-gray-400 text-gray-800 p-2 w-fit rounded-lg block mb-2 uppercase font-bold text-xs \"\n                              v-model=\"form.episode_play_order\"\n                              id=\"episode_play_order\"\n                      >\n                        <option disabled value=\"\">Please select one</option> <!-- Disabled placeholder option -->\n                        <option value=\"newest\">Start with the Newest Episode</option>\n                        <option value=\"oldest\">Start with the First Episode</option>\n\n                      </select>\n                      <div v-if=\"form.errors.episode_play_order\" v-text=\"form.errors.episode_play_order\"\n                           class=\"text-xs text-red-600 mt-1\"></div>\n                    </div>\n\n                    <div class=\"mb-6\">\n                    </div>\n\n                    <div class=\"mb-6\">\n                      <label class=\"block mb-2 uppercase font-bold text-xs text-light text-red-700\"\n                             for=\"category\"\n                      >\n                        Category\n                      </label>\n\n                      <select\n                          class=\"border border-gray-400 text-gray-800 p-2 w-full rounded-lg block my-2 uppercase font-bold text-xs \"\n                          v-model=\"selectedCategoryId\" @change=\"chooseCategory\"\n                      >\n                        <option v-for=\"category in categories\"\n                                :key=\"category.id\" :value=\"category.id\">{{ category.name }}\n                        </option>\n\n                      </select>\n                      <div v-if=\"form.errors.category\" v-text=\"form.errors.category\"\n                           class=\"text-xs text-red-600 mt-1\">\n                      </div>\n                      <span class=\"\">{{ showStore.category_description }}</span>\n\n                    </div>\n\n                    <div class=\"mb-6\">\n                      <label class=\"block mb-1 uppercase font-bold text-xs text-light text-red-700\"\n                             for=\"sub_category\"\n                      >\n                        Sub-category\n                      </label>\n\n                      <select\n                          class=\"border border-gray-400 text-gray-800 disabled:bg-gray-300 dark:disabled:bg-gray-600 disabled:cursor-not-allowed p-2 w-full rounded-lg block mb-2 uppercase font-bold text-xs\"\n                          v-model=\"selectedSubCategoryId\" :disabled=\"!selectedCategoryId\" @change=\"chooseSubCategory\"\n                      >\n                        <option disabled value=\"\">Select a subcategory</option>\n                        <option v-for=\"subCategory in subCategories\" :key=\"subCategory.id\" :value=\"subCategory.id\">\n                          {{ subCategory?.name }}\n                        </option>\n                      </select>\n                      <span class=\"\">{{ showStore.sub_category_description }}</span>\n                      <div v-if=\"form.errors.sub_category\" v-text=\"form.errors.sub_category\"\n                           class=\"text-xs text-red-600 mt-1\"></div>\n                    </div>\n\n                    <div class=\"mb-6\">\n                      <label class=\"block mb-2 uppercase font-bold text-xs text-light text-red-700\"\n                             for=\"name\"\n                      >\n                        Show Name\n                      </label>\n\n                      <input v-model=\"form.name\"\n                             class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                             type=\"text\"\n                             name=\"name\"\n                             id=\"name\"\n                             required\n                      >\n                      <div v-if=\"form.errors.name\" v-text=\"form.errors.name\"\n                           class=\"text-xs text-red-600 mt-1\"></div>\n                    </div>\n\n                    <div class=\"mb-6\">\n                      <label class=\"block mb-2 uppercase font-bold text-xs text-light text-red-700\"\n                             for=\"description\"\n                      >\n                        Description\n                      </label>\n                      <TabbableTextarea v-model=\"form.description\"\n                                        class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                                        name=\"description\"\n                                        id=\"description\"\n                                        rows=\"10\" cols=\"30\"\n                                        required\n                      />\n                      <div v-if=\"form.errors.description\" v-text=\"form.errors.description\"\n                           class=\"text-xs text-red-600 mt-1\"></div>\n                    </div>\n\n                    <div class=\"mb-6\">\n                      <label class=\"block mb-2 uppercase font-bold text-xs text-light text-red-700\"\n                             for=\"name\"\n                      >\n                        Website URL\n                      </label>\n\n                      <input v-model=\"form.www_url\"\n                             class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                             type=\"text\"\n                             name=\"www_url\"\n                             id=\"www_url\"\n                      >\n                      <div v-if=\"form.errors.www_url\" v-text=\"form.errors.www_url\"\n                           class=\"text-xs text-red-600 mt-1\"></div>\n                    </div>\n\n                    <div class=\"mb-6\">\n                      <label class=\"block mb-2 uppercase font-bold text-xs text-light text-red-700\"\n                             for=\"name\"\n                      >\n                        Instagram Handle\n                      </label>\n\n                      <input v-model=\"form.instagram_name\"\n                             class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                             type=\"text\"\n                             name=\"instagram_name handle\"\n                             id=\"instagram_name\"\n                      >\n                      <div v-if=\"form.errors.instagram_name\" v-text=\"form.errors.instagram_name\"\n                           class=\"text-xs text-red-600 mt-1\"></div>\n                    </div>\n\n                    <div class=\"mb-6\">\n                      <label class=\"block mb-2 uppercase font-bold text-xs text-light text-red-700\"\n                             for=\"name\"\n                      >\n                        Telegram URL\n                      </label>\n\n                      <input v-model=\"form.telegram_url\"\n                             class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                             type=\"text\"\n                             name=\"telegram_url\"\n                             id=\"telegram_url\"\n                      >\n                      <div v-if=\"form.errors.telegram_url\" v-text=\"form.errors.telegram_url\"\n                           class=\"text-xs text-red-600 mt-1\"></div>\n                    </div>\n\n                    <div class=\"mb-6\">\n                      <label class=\"block mb-2 uppercase font-bold text-xs text-light text-red-700\"\n                             for=\"name\"\n                      >\n                        X (formerly Twitter) @\n                      </label>\n\n                      <input v-model=\"form.twitter_handle\"\n                             class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                             type=\"text\"\n                             name=\"twitter_handle\"\n                             id=\"twitter_handle\"\n                      >\n                      <div v-if=\"form.errors.twitter_handle\" v-text=\"form.errors.twitter_handle\"\n                           class=\"text-xs text-red-600 mt-1\"></div>\n                    </div>\n\n                    <div class=\"flex justify-end mb-6\">\n                      <JetValidationErrors class=\"mr-4\"/>\n                      <button\n                          type=\"submit\"\n                          class=\"h-fit bg-blue-600 hover:bg-blue-500 text-white rounded-lg py-2 px-4\"\n                          :disabled=\"form.processing\"\n                      >\n                        Save\n                      </button>\n                    </div>\n                  </form>\n\n                </div>\n                <!-- End Right Column -->\n              </div>\n              <!-- End grid 2-col -->\n\n              <div class=\"px-4 py-2\">\n                <span class=\"text-xs uppercase font-semibold\">Show ID: </span>\n                <span class=\"text-xs\">{{ show.ulid }}</span></div>\n            </div>\n          </div>\n        </div>\n\n      </div>\n\n\n    </div>\n  </div>\n\n</template>\n\n<script setup>\nimport { Inertia } from '@inertiajs/inertia'\nimport { useForm } from '@inertiajs/inertia-vue3'\nimport { usePageSetup } from '@/Utilities/PageSetup'\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\nimport { useShowStore } from '@/Stores/ShowStore'\nimport { useTeamStore } from '@/Stores/TeamStore'\nimport JetValidationErrors from '@/Jetstream/ValidationErrors'\nimport ShowEditHeader from '@/Components/Pages/Shows/Layout/EditShowHeader'\nimport TabbableTextarea from '@/Components/Global/TextEditor/TabbableTextarea'\nimport SingleImage from '@/Components/Global/Multimedia/SingleImage'\nimport ImageUpload from '@/Components/Global/Uploaders/ImageUpload'\nimport Message from '@/Components/Global/Modals/Messages'\nimport { computed, nextTick, onMounted, ref, watch } from 'vue'\nimport { useNotificationStore } from '@/Stores/NotificationStore'\n\nusePageSetup('shows/slug/edit')\n\nconst appSettingStore = useAppSettingStore()\nconst showStore = useShowStore()\nconst teamStore = useTeamStore()\nconst notificationStore = useNotificationStore()\n\nlet props = defineProps({\n  user: Object,\n  show: Object,\n  team: Object,\n  image: Object,\n  teamMembers: Array,\n  categories: Object,\n  statuses: Object,\n})\n\n// Reactive property for the selected show_runner ID\nconst selectedShowRunnerCreatorId = ref(null);\n\nlet selectedCategoryId = ref(props?.show?.category?.id)\nlet selectedSubCategoryId = ref(props?.show?.subCategory?.id)\n\nconst subCategories = computed(() => {\n  const category = props.categories.find(cat => cat.id === selectedCategoryId.value)\n  return category ? category.sub_categories : []\n})\n\n// Watchers to update the store based on category and subcategory selections\nwatch(selectedCategoryId, () => {\n  showStore.initializeDescriptions(selectedCategoryId.value, selectedSubCategoryId.value)\n}, {immediate: true})\n\nwatch(selectedSubCategoryId, () => {\n  showStore.updateSubCategoryDescription(selectedSubCategoryId.value)\n})\n\nonMounted(() => {\n  selectedShowRunnerCreatorId.value = props.show.showRunner.creator_id;\n  document.getElementById('topDiv').scrollIntoView({ behavior: 'smooth' });\n  showStore.categories = props.categories\n  showStore.initializeDescriptions(selectedCategoryId.value, selectedSubCategoryId.value)\n  if (!props.show.showRunner) {\n    notificationStore.setGeneralServiceNotification('Please set the show runner.', 'You must set a show runner before you can edit the show.')\n  }\n\n})\n\nconst chooseCategory = () => {\n  // Update the selected category ID based on the new selection\n  // Vue automatically updates selectedCategoryId due to v-model binding\n  // So, there is no need to manually set it here\n\n  // Call the store method to update descriptions and subcategories\n  showStore.initializeDescriptions(selectedCategoryId.value, selectedSubCategoryId.value)\n}\n\nconst chooseSubCategory = () => {\n  // Update the store state based on the new subcategory selection\n  showStore.updateSubCategoryDescription(selectedSubCategoryId.value)\n}\n\nlet form = useForm({\n  name: props.show.name,\n  description: props.show.description,\n  show_status_id: props.show.show_status_id,\n  category: props.show.category,\n  sub_category: props.show.subCategory,\n  www_url: props.show.www_url,\n  instagram_name: props.show.instagram_name,\n  telegram_url: props.show.telegram_url,\n  twitter_handle: props.show.twitter_handle,\n  notes: props.show.notes,\n  episode_play_order: props.show.episode_play_order,\n  show_runner_creator_id: props?.show?.showRunner?.creator_id,\n})\n\n// let showCategoryDescription = props.showCategory?.Description\n\nlet reloadImage = () => {\n  Inertia.reload({\n    only: ['image'],\n  })\n}\n\nlet submit = () => {\n  console.log('what\\'s the show Runner?? ' + form.show_runner)\n  form.category = showStore.category_id\n  form.sub_category = showStore.sub_category_id\n  form.patch(route('shows.update', props.show.slug))\n}\n\nteamStore.setActiveTeam(props.team)\nteamStore.setActiveShow(props.show)\n\n// function chooseCategory(event) {\n//   showCategoryDescription = props.categories[event.target.selectedIndex].description;\n// }\n\n// let getCategory = ref(null);\n// onBeforeMount(async () => {\n//     getCategory.value = await props.show.category;\n// })\n\n\n</script>\n"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","initialState","id","description","slug","totalSpots","memberSpots","teamCreator","teamLeader","members","managers","activeShow","activeEpisode","creators","showModal","Boolean","confirmDialog","confirmManagerDialog","selectedManagerName","selectedManagerId","addManager","removeManager","deleteMemberName","deleteMemberId","noteEdit","note","saveNoteProcessing","goLiveDisplay","can","openComponent","useTeamStore","defineStore","state","actions","assign","this","setActiveTeam","team","setActiveShow","show","setActiveEpisode","episode","deleteTeamMemberCancel","confirmTeamManagerCancel","deleteTeamMember","Inertia","visit","route","data","user_id","team_id","team_slug","addTeamManager","removeTeamManager","toggleGoLiveDisplay","fetchTeamMembers","fn","_callee","_context","axios","get","self","args","arguments","apply","err","undefined","getters","spotsRemaining","usePageSetup","pageName","userStore","useUserStore","appSettingStore","useAppSettingStore","videoPlayerStore","useVideoPlayerStore","currentPage","showFlashMessage","pageIsHidden","isMobile","window","innerWidth","ott","makeVideoTopRight","pageReload","location","reload","on","event","search","shouldScrollToTop","requestAnimationFrame","topDiv","document","getElementById","scrollIntoView","behavior","scrollTo","setPrevUrl","showOttButtons","noLayout","props","__props","cancel","prevUrl","url","isCreator","clearFlashMessage","computed","flash","success","message","warning","_ref","post","emit","onInput","target","onTabPress","textarea","val","start","selectionStart","end","selectionEnd","substring","notificationStore","useNotificationStore","serverOptions","_defineProperty","metadataKey","metadataValue","process","fieldName","file","metadata","load","progress","abort","formData","FormData","append","modelType","modelId","config","onUploadProgress","lengthComputable","loaded","total","response","fileId","errorMessage","errors","errorMessages","map","concat","join","setGeneralServiceNotification","console","log","FilePond","vueFilePond","FilePondPluginFileValidateType","FilePondPluginFileValidateSize","FilePondPluginImagePreview","FilePondPluginFileMetadata","filepondInitialized","setOptions","fileMetadataObject","show_id","__emit","handleProcessedFile","usePage","hasErrors","emits","emitSubmit","showStore","useShowStore","teamStore","selectedShowRunnerCreatorId","ref","selectedCategoryId","_props$show","category","selectedSubCategoryId","_props$show2","subCategory","subCategories","categories","find","cat","sub_categories","watch","initializeDescriptions","immediate","updateSubCategoryDescription","onMounted","showRunner","creator_id","chooseCategory","chooseSubCategory","form","useForm","show_status_id","sub_category","www_url","instagram_name","telegram_url","twitter_handle","notes","episode_play_order","show_runner_creator_id","_props$show3","reloadImage","only","submit","show_runner","category_id","sub_category_id","patch"],"sourceRoot":""}
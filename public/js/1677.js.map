{"version":3,"file":"js/1677.js","mappings":"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","sources":["webpack:///./resources/js/Utilities/PageSetup.js","webpack:///./resources/js/Pages/Shows/{$id}/Episodes/Create.vue?b1fc","webpack:///./resources/js/Components/Global/Buttons/CancelButton.vue?b7c6","webpack:///./resources/js/Components/Global/Buttons/CancelButton.vue","webpack:///./resources/js/Jetstream/ValidationErrors.vue?5fdc","webpack:///./resources/js/Jetstream/ValidationErrors.vue","webpack:///./resources/js/Components/Global/CreativeCommonsLicensing/LicensingExplained.vue?c59f","webpack:///./resources/js/Components/Global/CreativeCommonsLicensing/LicensingExplained.vue","webpack:///./resources/js/Pages/Shows/{$id}/Episodes/Create.vue","webpack:///./resources/js/Pages/Shows/{$id}/Episodes/Create.vue?188d","webpack:///./resources/js/Pages/Shows/{$id}/Episodes/Create.vue?14bc"],"sourcesContent":["import { onBeforeMount, onMounted } from 'vue'\nimport { useUserStore } from \"@/Stores/UserStore\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useVideoPlayerStore } from \"@/Stores/VideoPlayerStore\"\nimport { Inertia } from '@inertiajs/inertia'\n\nexport function usePageSetup(pageName) {\n    const userStore = useUserStore()\n    const appSettingStore = useAppSettingStore()\n    const videoPlayerStore = useVideoPlayerStore()\n\n    appSettingStore.currentPage = pageName\n    appSettingStore.showFlashMessage = true\n    appSettingStore.pageIsHidden = false\n\n    if (userStore.isMobile || window.innerWidth < 1024 || appSettingStore.fullPage) {\n        appSettingStore.ott = 0;\n    } else {\n        appSettingStore.ott = 1;\n        appSettingStore.showOttButtons = true;\n    }\n\n    videoPlayerStore.makeVideoTopRight()\n\n    if (appSettingStore.pageReload) {\n        appSettingStore.pageReload = false\n        appSettingStore.pageWasReloaded = true\n        window.location.reload();\n    }\n    // Check if the URL contains query strings\n\n\n    // Only scroll into view if there are no query strings\n\n        // const topDiv = document.getElementById(\"topDiv\")\n        // if (topDiv) {\n        //     topDiv.scrollIntoView()\n        // }\n        Inertia.on('navigate', (event) => {\n            if (userStore.isMobile || window.innerWidth < 1024 || appSettingStore.fullPage) {\n                appSettingStore.ott = 0;\n            } else {\n                appSettingStore.ott = 1;\n            }\n            const hasQueryStrings = window.location.search !== '';\n            if (!hasQueryStrings || appSettingStore.shouldScrollToTop) {\n                requestAnimationFrame(() => {\n                    const topDiv = document.getElementById(\"topDiv\");\n                    if (topDiv) {\n                        topDiv.scrollIntoView({behavior: 'auto'});\n                    } else {\n                        window.scrollTo(0, 0);\n                    }\n                });\n            }\n            appSettingStore.shouldScrollToTop = false;\n        })\n    // Only update if we're not already on this page to avoid overwriting with the current URL\n    appSettingStore.setPrevUrl()\n    appSettingStore.showOttButtons = true\n    appSettingStore.noLayout = false\n\n    // Inertia.reload()\n\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".license-container[data-v-29378988]{margin:20px}h2[data-v-29378988]{color:#333}ul[data-v-29378988]{list-style-type:none;padding:0}li[data-v-29378988]{line-height:1.6;margin-bottom:10px}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/Pages/Shows/{$id}/Episodes/Create.vue\"],\"names\":[],\"mappings\":\"AAuZA,oCACE,WACF,CACA,oBACE,UACF,CACA,oBACE,oBAAqB,CACrB,SACF,CACA,oBAEE,eAAgB,CADhB,kBAEF\",\"sourcesContent\":[\"<template>\\n  <Head title=\\\"Create Episode\\\"/>\\n\\n  <div class=\\\"place-self-center flex flex-col gap-y-3\\\">\\n    <div id=\\\"topDiv\\\" class=\\\"bg-white text-black dark:bg-gray-800 dark:text-gray-50 p-5 mb-10\\\">\\n\\n      <!--            <Message v-if=\\\"appSettingStore.showFlashMessage && $page.props.flash\\\" :flash=\\\"$page.props.flash\\\"/>-->\\n\\n      <div class=\\\"flex justify-between mt-3 mb-6\\\">\\n        <div class=\\\"text-3xl\\\">Create Episode</div>\\n        <div>\\n          <CancelButton/>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"mx-4\\\">\\n        <div class=\\\"alert alert-info mt-4\\\">\\n          <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" fill=\\\"none\\\" viewBox=\\\"0 0 24 24\\\"\\n               class=\\\"stroke-current shrink-0 w-6 h-6\\\">\\n            <path stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" stroke-width=\\\"2\\\"\\n                  d=\\\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\\\"></path>\\n          </svg>\\n          <span><span class=\\\"font-semibold\\\">NOTE: </span>\\n                    We are working on an episode poster and video uploader for this page. For the time being, please\\n                    go to the episode EDIT page after you create the episode to add a video and a poster.</span>\\n        </div>\\n      </div>\\n\\n      <form @submit.prevent=\\\"submit\\\" class=\\\"mt-8\\\">\\n\\n\\n        <div class=\\\"flex flex-row flex-wrap-reverse w-full px-6 justify-center gap-x-8 gap-y-2\\\">\\n          <div class=\\\"flex flex-col max-w-md\\\">\\n\\n            <div class=\\\"mb-6\\\">\\n              <label class=\\\"block mb-1 uppercase font-bold text-xs dark:text-gray-200\\\"\\n                     for=\\\"showName\\\"\\n              >\\n                Show Name\\n              </label>\\n              <div class=\\\"font-bold text-3xl\\\">{{ props.show.name }}</div>\\n\\n              <div v-if=\\\"form.errors.show_id\\\" v-text=\\\"form.errors.show_id\\\" class=\\\"text-xs text-red-600 mt-1\\\"></div>\\n            </div>\\n\\n            <div class=\\\"mb-6\\\">\\n              <label class=\\\"block mb-2 uppercase font-bold text-xs dark:text-gray-200\\\"\\n                     for=\\\"showCategory\\\"\\n              >\\n                Category\\n              </label>\\n              <div class=\\\"font-bold text-orange-600\\\">{{ props?.show?.category?.name }}</div>\\n              <div class=\\\"font-bold text-yellow-700\\\">{{ props?.show?.subCategory?.name }}</div>\\n            </div>\\n\\n            <div class=\\\"mb-6\\\">\\n              <label class=\\\"block mb-2 uppercase font-bold dark:text-gray-200\\\"\\n                     for=\\\"creative_commons\\\"\\n              >\\n                Creative Commons / Copyright License <br /><span class=\\\"text-md text-red-500\\\">* REQUIRED</span>\\n              </label>\\n              <div class=\\\"font-semibold\\\">** Please choose carefully ** <br />\\n                You will require assistance to change this once it's set.</div>\\n              <div>Read about the different licenses to the right right <span class=\\\"text-xl\\\">👉</span> <br />or click the button below for a visual explanation.</div>\\n\\n              <select class=\\\"border border-gray-400 text-gray-800 mt-2 py-2 pl-2 pr-8 w-fit rounded-lg block mb-2 uppercase font-bold text-xs\\\"\\n                      v-model=\\\"selectedCreativeCommons\\\" @change=\\\"handleCreativeCommonsChange\\\">\\n                <option disabled :value=\\\"null\\\">Choose a license...</option>\\n                <option v-for=\\\"cc in creative_commons\\\" :key=\\\"cc.id\\\" :value=\\\"cc.id\\\">{{ cc.name }}</option>\\n              </select>\\n\\n              <div class=\\\"\\\">{{ selectedCreativeCommonsDescription }}</div>\\n\\n              <div v-if=\\\"form.errors.creative_commons_id\\\" v-text=\\\"form.errors.creative_commons_id\\\"\\n                   class=\\\"text-xs text-red-600 mt-1\\\"></div>\\n\\n              <LicensingExplained class=\\\"my-2\\\"/>\\n            </div>\\n\\n            <div class=\\\"mb-6\\\">\\n              <label class=\\\"block mb-2 uppercase font-bold  dark:text-gray-200\\\"\\n                     for=\\\"name\\\"\\n              >\\n                Episode Name <span class=\\\"text-red-500\\\">* REQUIRED</span>\\n              </label>\\n\\n              <input v-model=\\\"form.name\\\"\\n                     class=\\\"bg-gray-50 border border-gray-400 text-gray-900 text-sm p-2 w-full rounded-lg focus:ring-blue-500 focus:border-blue-500\\\"\\n                     type=\\\"text\\\"\\n                     name=\\\"name\\\"\\n                     id=\\\"name\\\"\\n                     required\\n                     placeholder=\\\"Episode Name\\\"\\n              >\\n              <div v-if=\\\"form.errors.name\\\" v-text=\\\"form.errors.name\\\" class=\\\"text-xs text-red-600 mt-1\\\"></div>\\n            </div>\\n\\n            <div class=\\\"mb-6\\\">\\n              <label class=\\\"block mb-2 uppercase font-bold dark:text-gray-200\\\"\\n                     for=\\\"description\\\"\\n              >\\n                Description <span class=\\\"text-red-500\\\">* REQUIRED</span>\\n              </label>\\n              <textarea v-model=\\\"form.description\\\"\\n                        class=\\\"bg-gray-50 border border-gray-400 text-gray-900 text-sm p-2 w-full rounded-lg focus:ring-blue-500 focus:border-blue-500 block\\\"\\n                        type=\\\"text\\\"\\n                        name=\\\"description\\\"\\n                        id=\\\"description\\\"\\n                        required\\n                        placeholder=\\\"Description\\\"\\n              ></textarea>\\n              <div v-if=\\\"form.errors.description\\\" v-text=\\\"form.errors.description\\\" class=\\\"text-xs text-red-600 mt-1\\\"></div>\\n            </div>\\n\\n\\n            <div class=\\\"mb-6\\\">\\n              <label class=\\\"block mb-2 uppercase font-bold dark:text-gray-200\\\"\\n                     for=\\\"episode_number\\\"\\n              >\\n                Episode Number\\n              </label>\\n\\n              <input v-model=\\\"form.episode_number\\\"\\n                     class=\\\"bg-gray-50 border border-gray-400 text-gray-900 text-sm p-2 w-1/2 rounded-lg focus:ring-blue-500 focus:border-blue-500\\\"\\n                     type=\\\"text\\\"\\n                     name=\\\"episode_number\\\"\\n                     id=\\\"episode_number\\\"\\n                     placeholder=\\\"E0000\\\"\\n              >\\n              <div v-if=\\\"form.errors.episode_number\\\" v-text=\\\"form.errors.episode_number\\\"\\n                   class=\\\"text-xs text-red-600 mt-1\\\"></div>\\n            </div>\\n\\n            <!--                <div class=\\\"mb-6\\\">-->\\n            <!--                    <label class=\\\"block mb-2 uppercase font-bold text-xs dark:text-gray-200\\\"-->\\n            <!--                           for=\\\"youtube_url\\\"-->\\n            <!--                    >-->\\n            <!--                        YouTube URL-->\\n            <!--                    </label>-->\\n            <!--                    <input v-model=\\\"form.youtube_url\\\"-->\\n            <!--                           class=\\\"bg-gray-50 border border-gray-400 text-gray-900 text-sm p-2 w-full rounded-lg focus:ring-blue-500 focus:border-blue-500\\\"-->\\n            <!--                           type=\\\"text\\\"-->\\n            <!--                           name=\\\"youtube_url\\\"-->\\n            <!--                           id=\\\"youtube_url\\\"-->\\n            <!--                    >-->\\n            <!--                    <div v-if=\\\"form.errors.youtube_url\\\" v-text=\\\"form.errors.youtube_url\\\" class=\\\"text-xs text-red-600 mt-1\\\"></div>-->\\n            <!--                </div>-->\\n\\n            <div class=\\\"mb-6\\\">\\n              <label class=\\\"block mb-2 uppercase font-bold text-xs dark:text-gray-200\\\"\\n                     for=\\\"video_url\\\"\\n              >\\n                Video URL (External MP4 only)\\n              </label>\\n              <input v-model=\\\"form.video_url\\\"\\n                     class=\\\"bg-gray-50 border border-gray-400 text-gray-900 text-sm p-2 w-full rounded-lg focus:ring-blue-500 focus:border-blue-500\\\"\\n                     type=\\\"text\\\"\\n                     name=\\\"video_url\\\"\\n                     id=\\\"video_url\\\"\\n              >\\n              <div class=\\\"text-xs mt-1\\\">\\n                Example: <span class=\\\"underline\\\">https://domainname.com/filename.mp4</span>\\n              </div>\\n              <div v-if=\\\"form.errors.video_url\\\" v-text=\\\"form.errors.video_url\\\" class=\\\"text-xs text-red-600 mt-1\\\"></div>\\n            </div>\\n\\n            <div class=\\\"mb-6\\\">\\n              <label class=\\\"block mb-2 uppercase font-bold text-xs dark:text-gray-200\\\"\\n                     for=\\\"video_embed_code\\\"\\n              >\\n                * Embed Code (Rumble or Bitchute only)\\n              </label>\\n              <textarea v-model=\\\"form.video_embed_code\\\"\\n                        class=\\\"bg-gray-50 border border-gray-400 text-gray-900 text-sm p-2 w-full rounded-lg focus:ring-blue-500 focus:border-blue-500 block\\\"\\n                        type=\\\"text\\\"\\n                        name=\\\"video_embed_code\\\"\\n                        id=\\\"video_embed_code\\\"\\n              ></textarea>\\n              <div v-if=\\\"form.errors.video_embed_code\\\" v-text=\\\"form.errors.video_embed_code\\\"\\n                   class=\\\"text-xs text-red-600 mt-1\\\"></div>\\n            </div>\\n\\n            <div class=\\\"mt-2 mb-6 pb-4 border-b\\\">\\n              <div class=\\\"mb-2 block uppercase font-bold text-xs\\\">\\n                * Video Embedding:\\n              </div>\\n              <ul class=\\\"list-decimal pb-2 ml-2 space-y-2\\\">\\n                <li>\\n                  If both URL and Embed Code are provided the system will attempt to get the Video Url from the Embed Code.\\n                </li>\\n                <li>\\n                  We have <span class=\\\"font-bold\\\">not</span> enabled the use of Facebook videos for security purposes.\\n                </li>\\n                <li hidden>\\n                  If you want to use YouTube, enter the YouTube video URL above in the YouTube URL field. This option is\\n                  least preferrable, due to a lower quality user experience.\\n                </li>\\n              </ul>\\n            </div>\\n\\n            <div class=\\\"mb-6\\\">\\n              <label class=\\\"block mb-2 uppercase font-bold text-xs dark:text-gray-200\\\"\\n                     for=\\\"notes\\\"\\n              >\\n                Notes <br>(Only your team members see these notes, they are not public)\\n              </label>\\n              <textarea v-model=\\\"form.notes\\\"\\n                        class=\\\"bg-gray-50 border border-gray-400 text-gray-900 text-sm p-2 w-full rounded-lg focus:ring-blue-500 focus:border-blue-500 block\\\"\\n                        type=\\\"text\\\"\\n                        name=\\\"notes\\\"\\n                        id=\\\"notes\\\"\\n              ></textarea>\\n              <div v-if=\\\"form.errors.notes\\\" v-text=\\\"form.errors.notes\\\" class=\\\"text-xs text-red-600 mt-1\\\"></div>\\n            </div>\\n\\n            <div class=\\\"flex justify-between mb-6\\\">\\n              <JetValidationErrors class=\\\"mr-4\\\"/>\\n              <button\\n                  type=\\\"submit\\\"\\n                  class=\\\"h-fit bg-blue-600 hover:bg-blue-500 text-white rounded py-2 px-4\\\"\\n                  :disabled=\\\"form.processing\\\"\\n              >\\n                Submit\\n              </button>\\n            </div>\\n\\n\\n          </div>\\n          <div class=\\\"flex flex-col max-w-md text-justify mt-24 mb-8\\\">\\n            <div>\\n              <div class=\\\"license-info\\\">\\n                <h2 class=\\\"font-semibold mb-6\\\">About The License Options:</h2>\\n                <h3 class=\\\"font-semibold\\\">Creative Commons Licenses</h3>\\n                <ul>\\n                  <li v-for=\\\"license in licenses.filter(l => l.type === 'Creative Commons')\\\" :key=\\\"license.id\\\">\\n                    <strong>{{ license.name }}:</strong> {{ license.description }}\\n                  </li>\\n                </ul>\\n\\n                <h3 class=\\\"font-semibold\\\">Legacy Copyright</h3>\\n                <ul>\\n                  <li v-for=\\\"license in licenses.filter(l => l.type === 'Legacy Copyright')\\\" :key=\\\"license.id\\\">\\n                    <strong>{{ license.name }}:</strong> {{ license.description }}\\n                  </li>\\n                </ul>\\n\\n                <h3 class=\\\"font-semibold\\\">Public Domain</h3>\\n                <ul>\\n                  <li v-for=\\\"license in licenses.filter(l => l.type === 'Public Domain')\\\" :key=\\\"license.id\\\">\\n                    <strong>{{ license.name }}:</strong> {{ license.description }}\\n                  </li>\\n                </ul>\\n              </div>\\n\\n            </div>\\n\\n            <div v-if=\\\"selectedCreativeCommons\\\" class=\\\"mb-6 w-64\\\">\\n\\n              <div v-if=\\\"selectedCreativeCommons === 8\\\">\\n                <input class=\\\"hidden border border-gray-400 text-black font-semibold p-2 w-1/2 rounded-lg\\\"\\n                       type=\\\"hidden\\\"\\n                       v-model=\\\"selectedCopyrightYear\\\"\\n                       value=\\\"null\\\">\\n              </div>\\n              <div v-else>\\n                <label class=\\\"block mb-2 uppercase font-bold text-xs dark:text-gray-200\\\"\\n                       for=\\\"copyrightYear\\\"\\n                >\\n                  Copyright Year\\n                </label>\\n                <input class=\\\"border border-gray-400 text-black font-semibold p-2 w-1/2 rounded-lg\\\"\\n                       type=\\\"number\\\"\\n                       minlength=\\\"4\\\"\\n                       maxlength=\\\"4\\\"\\n                       v-model=\\\"selectedCopyrightYear\\\">\\n              </div>\\n\\n              <div v-if=\\\"form.errors.copyrightYear\\\" v-text=\\\"form.errors.copyrightYear\\\"\\n                   class=\\\"text-xs text-red-600 mt-1\\\"></div>\\n            </div>\\n          </div>\\n        </div>\\n\\n\\n      </form>\\n\\n      <div class=\\\"flex justify-end mt-6\\\">\\n        <Link :href=\\\"`/teams/${props.team.slug}`\\\" class=\\\"text-blue-500 ml-2\\\"> {{ props.team.name }} © 2022</Link>\\n      </div>\\n\\n    </div>\\n  </div>\\n\\n\\n</template>\\n\\n<script setup>\\nimport { useForm } from \\\"@inertiajs/inertia-vue3\\\"\\nimport { usePageSetup } from '@/Utilities/PageSetup'\\nimport JetValidationErrors from '@/Jetstream/ValidationErrors'\\nimport CancelButton from \\\"@/Components/Global/Buttons/CancelButton\\\"\\nimport { computed, ref } from 'vue'\\nimport LicensingExplained from '@/Components/Global/CreativeCommonsLicensing/LicensingExplained.vue'\\n\\nusePageSetup('shows/slug/episodes/create')\\n\\nlet props = defineProps({\\n  user: Object,\\n  show: Object,\\n  team: Object,\\n  creative_commons: Object,\\n})\\n\\n// appSettingStore.currentPage = 'episodes'\\n// appSettingStore.showFlashMessage = true;\\n\\n// if (props.show) {\\n//     teamStore.setActiveShow(props.show);\\n// }\\n//\\n// if (props.team) {\\n//     teamStore.setActiveTeam(props.team);\\n// }\\n\\nlet selectedCreativeCommons = ref(null);\\nlet selectedCopyrightYear = ref(null);\\nconst currentYear = new Date().getFullYear();\\n\\nlet form = useForm({\\n  name: '',\\n  description: '',\\n  user_id: props.user.id,\\n  show_id: props.show.id,\\n  show_slug: props.show.slug,\\n  episode_number: '',\\n  video_url: '',\\n  youtube_url: '',\\n  video_embed_code: '',\\n  notes: '',\\n  creative_commons_id: '',\\n  copyrightYear: '',\\n});\\n\\nfunction reset() {\\n  form.reset();\\n}\\n\\nfunction addEmbedCodeConfirm() {\\n  if (confirm(\\\"Are you sure you want to add this embed code? It will override the video url.\\\")) {\\n    form.post(route('showEpisodes.store', props.show.slug));\\n  }\\n}\\n\\nconst handleCreativeCommonsChange = () => {\\n  if (selectedCreativeCommons.value === 8) {\\n    selectedCopyrightYear.value = null;\\n  } else if (selectedCopyrightYear.value === null) {\\n    // Pre-populate with current year only if copyrightYear is null\\n    selectedCopyrightYear.value = currentYear;\\n  }\\n};\\n\\nconst selectedCreativeCommonsDescription = computed(() => {\\n  const selectedCC = props.creative_commons.find((cc) => cc.id === selectedCreativeCommons.value);\\n  return selectedCC ? selectedCC.description : '';\\n});\\n\\n\\nconst licenses = ref([\\n  { id: 1, type: 'Creative Commons', name: 'CC BY (Attribution)', description: 'Allows others to distribute, remix, adapt, and build upon your work, even commercially, as long as they credit you for the original creation.' },\\n  { id: 2, type: 'Creative Commons', name: 'CC BY-SA (Attribution-ShareAlike)', description: 'Similar to CC BY but requires derivatives to be licensed under identical terms.' },\\n  { id: 3, type: 'Creative Commons', name: 'CC BY-ND (Attribution-NoDerivs)', description: 'Allows for redistribution, commercial and non-commercial, as long as the content is passed along unchanged and in whole, with credit to you.' },\\n  { id: 4, type: 'Creative Commons', name: 'CC BY-NC (Attribution-NonCommercial)', description: 'Allows others to remix, tweak, and build upon your work non-commercially, and although their new works must also acknowledge you and be non-commercial, they don’t have to license their derivative works on the same terms.' },\\n  { id: 5, type: 'Creative Commons', name: 'CC BY-NC-SA (Attribution-NonCommercial-ShareAlike)', description: 'Lets others remix, tweak, and build upon your work non-commercially, as long as they credit you and license their new creations under the identical terms.' },\\n  { id: 6, type: 'Creative Commons', name: 'CC BY-NC-ND (Attribution-NonCommercial-NoDerivs)', description: 'Allows others to download your works and share them with others as long as they credit you, but they can’t change them in any way or use them commercially.' },\\n  { id: 7, type: 'Legacy Copyright', name: 'All Rights Reserved', description: 'The creator retains all the privileges provided by copyright law, such as the right to reproduce, distribute, and display the work publicly.' },\\n  { id: 8, type: 'Public Domain', name: 'No Copyright', description: 'The work is free for public use; anyone can use, modify, or share it without asking for permission or providing attribution.' }\\n]);\\n\\nlet submit = () => {\\n  if (form.video_embed_code && form.video_url) {\\n    addEmbedCodeConfirm();\\n  } else\\n    form.creative_commons_id = selectedCreativeCommons.value\\n    form.copyrightYear = selectedCopyrightYear.value\\n    form.post(route('showEpisodes.store', props.show.slug));\\n};\\n\\n// let submit = () => {\\n//     form.patch(route('shows.showEpisodes.store'));\\n// };\\n\\n// let showMessage = ref(true);\\n\\n// function back() {\\n//     let urlPrev = usePage().props.value.urlPrev\\n//     if (urlPrev !== 'empty') {\\n//         Inertia.visit(urlPrev)\\n//     }\\n//     if (urlPrev === 'empty') {\\n//         Inertia.visit('/shows/'+props.show.slug+'/manage')\\n//     }\\n// }\\n\\n</script>\\n\\n<style scoped>\\n.license-container {\\n  margin: 20px;\\n}\\nh2 {\\n  color: #333;\\n}\\nul {\\n  list-style-type: none;\\n  padding: 0;\\n}\\nli {\\n  margin-bottom: 10px;\\n  line-height: 1.6;\\n}\\n</style>\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import script from \"./CancelButton.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CancelButton.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n    <button\n        @click.prevent=\"cancel\"\n        class=\"ml-2 px-4 py-2 text-white bg-orange-600 hover:bg-orange-500 rounded-lg\"\n    >Cancel\n    </button>\n  </div>\n</template>\n\n<script setup>\nimport { Inertia } from \"@inertiajs/inertia\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useUserStore } from '@/Stores/UserStore'\n\nconst appSettingStore = useAppSettingStore()\nconst userStore = useUserStore()\n\nlet props = defineProps({\n  url: String\n})\n\nfunction cancel() {\n  if (appSettingStore.prevUrl) {\n    if (props.url) {\n      Inertia.visit(props.url)\n    } else {\n      Inertia.visit(appSettingStore.prevUrl)\n    }\n  } else {\n    if (props.url) {\n      Inertia.visit(props.url)\n    } else {\n      // Fallback if prevUrl is not available\n      let prevUrl = userStore.isCreator ? '/dashboard' : '/';\n      Inertia.visit(prevUrl);\n    }\n  }\n}\n</script>\n","import script from \"./ValidationErrors.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ValidationErrors.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { computed } from 'vue';\nimport { usePage } from '@inertiajs/inertia-vue3';\n\nconst errors = computed(() => usePage().props.value.errors);\nconst hasErrors = computed(() => Object.keys(errors.value).length > 0);\n</script>\n\n<template>\n    <div v-if=\"hasErrors\">\n        <div class=\"font-medium text-red-600\">\n            Whoops! Something went wrong.\n        </div>\n\n        <ul class=\"mt-3 list-disc list-inside text-sm text-red-600\">\n            <li v-for=\"(error, key) in errors\" :key=\"key\">\n                {{ error }}\n            </li>\n        </ul>\n    </div>\n</template>\n","import script from \"./LicensingExplained.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./LicensingExplained.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n    <button\n        @click.prevent=\"openImage\"\n        class=\"btn bg-blue-500 hover:bg-blue-600 text-white\">\n          Click here to see a visual diagram of the licenses</button>\n\n  </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue'\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\n\nconst appSettingStore = useAppSettingStore()\n\nconst openImage = () => {\n  appSettingStore.imageLightboxModal.imageUrl = ref('https://cdn.nottv.io/public/2024/04/images/g97Pdjt9w8ncgDOcztb46pVNgDTut6EvE8WGkCmV.png');\n  appSettingStore.imageLightboxModal.imageAlt = ref('Creative Commons explanation diagram');\n  appSettingStore.showImageLightboxModal = true\n}\n\n</script>","<template>\n  <Head title=\"Create Episode\"/>\n\n  <div class=\"place-self-center flex flex-col gap-y-3\">\n    <div id=\"topDiv\" class=\"bg-white text-black dark:bg-gray-800 dark:text-gray-50 p-5 mb-10\">\n\n      <!--            <Message v-if=\"appSettingStore.showFlashMessage && $page.props.flash\" :flash=\"$page.props.flash\"/>-->\n\n      <div class=\"flex justify-between mt-3 mb-6\">\n        <div class=\"text-3xl\">Create Episode</div>\n        <div>\n          <CancelButton/>\n        </div>\n      </div>\n\n      <div class=\"mx-4\">\n        <div class=\"alert alert-info mt-4\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\"\n               class=\"stroke-current shrink-0 w-6 h-6\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                  d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n          </svg>\n          <span><span class=\"font-semibold\">NOTE: </span>\n                    We are working on an episode poster and video uploader for this page. For the time being, please\n                    go to the episode EDIT page after you create the episode to add a video and a poster.</span>\n        </div>\n      </div>\n\n      <form @submit.prevent=\"submit\" class=\"mt-8\">\n\n\n        <div class=\"flex flex-row flex-wrap-reverse w-full px-6 justify-center gap-x-8 gap-y-2\">\n          <div class=\"flex flex-col max-w-md\">\n\n            <div class=\"mb-6\">\n              <label class=\"block mb-1 uppercase font-bold text-xs dark:text-gray-200\"\n                     for=\"showName\"\n              >\n                Show Name\n              </label>\n              <div class=\"font-bold text-3xl\">{{ props.show.name }}</div>\n\n              <div v-if=\"form.errors.show_id\" v-text=\"form.errors.show_id\" class=\"text-xs text-red-600 mt-1\"></div>\n            </div>\n\n            <div class=\"mb-6\">\n              <label class=\"block mb-2 uppercase font-bold text-xs dark:text-gray-200\"\n                     for=\"showCategory\"\n              >\n                Category\n              </label>\n              <div class=\"font-bold text-orange-600\">{{ props?.show?.category?.name }}</div>\n              <div class=\"font-bold text-yellow-700\">{{ props?.show?.subCategory?.name }}</div>\n            </div>\n\n            <div class=\"mb-6\">\n              <label class=\"block mb-2 uppercase font-bold dark:text-gray-200\"\n                     for=\"creative_commons\"\n              >\n                Creative Commons / Copyright License <br /><span class=\"text-md text-red-500\">* REQUIRED</span>\n              </label>\n              <div class=\"font-semibold\">** Please choose carefully ** <br />\n                You will require assistance to change this once it's set.</div>\n              <div>Read about the different licenses to the right right <span class=\"text-xl\">👉</span> <br />or click the button below for a visual explanation.</div>\n\n              <select class=\"border border-gray-400 text-gray-800 mt-2 py-2 pl-2 pr-8 w-fit rounded-lg block mb-2 uppercase font-bold text-xs\"\n                      v-model=\"selectedCreativeCommons\" @change=\"handleCreativeCommonsChange\">\n                <option disabled :value=\"null\">Choose a license...</option>\n                <option v-for=\"cc in creative_commons\" :key=\"cc.id\" :value=\"cc.id\">{{ cc.name }}</option>\n              </select>\n\n              <div class=\"\">{{ selectedCreativeCommonsDescription }}</div>\n\n              <div v-if=\"form.errors.creative_commons_id\" v-text=\"form.errors.creative_commons_id\"\n                   class=\"text-xs text-red-600 mt-1\"></div>\n\n              <LicensingExplained class=\"my-2\"/>\n            </div>\n\n            <div class=\"mb-6\">\n              <label class=\"block mb-2 uppercase font-bold  dark:text-gray-200\"\n                     for=\"name\"\n              >\n                Episode Name <span class=\"text-red-500\">* REQUIRED</span>\n              </label>\n\n              <input v-model=\"form.name\"\n                     class=\"bg-gray-50 border border-gray-400 text-gray-900 text-sm p-2 w-full rounded-lg focus:ring-blue-500 focus:border-blue-500\"\n                     type=\"text\"\n                     name=\"name\"\n                     id=\"name\"\n                     required\n                     placeholder=\"Episode Name\"\n              >\n              <div v-if=\"form.errors.name\" v-text=\"form.errors.name\" class=\"text-xs text-red-600 mt-1\"></div>\n            </div>\n\n            <div class=\"mb-6\">\n              <label class=\"block mb-2 uppercase font-bold dark:text-gray-200\"\n                     for=\"description\"\n              >\n                Description <span class=\"text-red-500\">* REQUIRED</span>\n              </label>\n              <textarea v-model=\"form.description\"\n                        class=\"bg-gray-50 border border-gray-400 text-gray-900 text-sm p-2 w-full rounded-lg focus:ring-blue-500 focus:border-blue-500 block\"\n                        type=\"text\"\n                        name=\"description\"\n                        id=\"description\"\n                        required\n                        placeholder=\"Description\"\n              ></textarea>\n              <div v-if=\"form.errors.description\" v-text=\"form.errors.description\" class=\"text-xs text-red-600 mt-1\"></div>\n            </div>\n\n\n            <div class=\"mb-6\">\n              <label class=\"block mb-2 uppercase font-bold dark:text-gray-200\"\n                     for=\"episode_number\"\n              >\n                Episode Number\n              </label>\n\n              <input v-model=\"form.episode_number\"\n                     class=\"bg-gray-50 border border-gray-400 text-gray-900 text-sm p-2 w-1/2 rounded-lg focus:ring-blue-500 focus:border-blue-500\"\n                     type=\"text\"\n                     name=\"episode_number\"\n                     id=\"episode_number\"\n                     placeholder=\"E0000\"\n              >\n              <div v-if=\"form.errors.episode_number\" v-text=\"form.errors.episode_number\"\n                   class=\"text-xs text-red-600 mt-1\"></div>\n            </div>\n\n            <!--                <div class=\"mb-6\">-->\n            <!--                    <label class=\"block mb-2 uppercase font-bold text-xs dark:text-gray-200\"-->\n            <!--                           for=\"youtube_url\"-->\n            <!--                    >-->\n            <!--                        YouTube URL-->\n            <!--                    </label>-->\n            <!--                    <input v-model=\"form.youtube_url\"-->\n            <!--                           class=\"bg-gray-50 border border-gray-400 text-gray-900 text-sm p-2 w-full rounded-lg focus:ring-blue-500 focus:border-blue-500\"-->\n            <!--                           type=\"text\"-->\n            <!--                           name=\"youtube_url\"-->\n            <!--                           id=\"youtube_url\"-->\n            <!--                    >-->\n            <!--                    <div v-if=\"form.errors.youtube_url\" v-text=\"form.errors.youtube_url\" class=\"text-xs text-red-600 mt-1\"></div>-->\n            <!--                </div>-->\n\n            <div class=\"mb-6\">\n              <label class=\"block mb-2 uppercase font-bold text-xs dark:text-gray-200\"\n                     for=\"video_url\"\n              >\n                Video URL (External MP4 only)\n              </label>\n              <input v-model=\"form.video_url\"\n                     class=\"bg-gray-50 border border-gray-400 text-gray-900 text-sm p-2 w-full rounded-lg focus:ring-blue-500 focus:border-blue-500\"\n                     type=\"text\"\n                     name=\"video_url\"\n                     id=\"video_url\"\n              >\n              <div class=\"text-xs mt-1\">\n                Example: <span class=\"underline\">https://domainname.com/filename.mp4</span>\n              </div>\n              <div v-if=\"form.errors.video_url\" v-text=\"form.errors.video_url\" class=\"text-xs text-red-600 mt-1\"></div>\n            </div>\n\n            <div class=\"mb-6\">\n              <label class=\"block mb-2 uppercase font-bold text-xs dark:text-gray-200\"\n                     for=\"video_embed_code\"\n              >\n                * Embed Code (Rumble or Bitchute only)\n              </label>\n              <textarea v-model=\"form.video_embed_code\"\n                        class=\"bg-gray-50 border border-gray-400 text-gray-900 text-sm p-2 w-full rounded-lg focus:ring-blue-500 focus:border-blue-500 block\"\n                        type=\"text\"\n                        name=\"video_embed_code\"\n                        id=\"video_embed_code\"\n              ></textarea>\n              <div v-if=\"form.errors.video_embed_code\" v-text=\"form.errors.video_embed_code\"\n                   class=\"text-xs text-red-600 mt-1\"></div>\n            </div>\n\n            <div class=\"mt-2 mb-6 pb-4 border-b\">\n              <div class=\"mb-2 block uppercase font-bold text-xs\">\n                * Video Embedding:\n              </div>\n              <ul class=\"list-decimal pb-2 ml-2 space-y-2\">\n                <li>\n                  If both URL and Embed Code are provided the system will attempt to get the Video Url from the Embed Code.\n                </li>\n                <li>\n                  We have <span class=\"font-bold\">not</span> enabled the use of Facebook videos for security purposes.\n                </li>\n                <li hidden>\n                  If you want to use YouTube, enter the YouTube video URL above in the YouTube URL field. This option is\n                  least preferrable, due to a lower quality user experience.\n                </li>\n              </ul>\n            </div>\n\n            <div class=\"mb-6\">\n              <label class=\"block mb-2 uppercase font-bold text-xs dark:text-gray-200\"\n                     for=\"notes\"\n              >\n                Notes <br>(Only your team members see these notes, they are not public)\n              </label>\n              <textarea v-model=\"form.notes\"\n                        class=\"bg-gray-50 border border-gray-400 text-gray-900 text-sm p-2 w-full rounded-lg focus:ring-blue-500 focus:border-blue-500 block\"\n                        type=\"text\"\n                        name=\"notes\"\n                        id=\"notes\"\n              ></textarea>\n              <div v-if=\"form.errors.notes\" v-text=\"form.errors.notes\" class=\"text-xs text-red-600 mt-1\"></div>\n            </div>\n\n            <div class=\"flex justify-between mb-6\">\n              <JetValidationErrors class=\"mr-4\"/>\n              <button\n                  type=\"submit\"\n                  class=\"h-fit bg-blue-600 hover:bg-blue-500 text-white rounded py-2 px-4\"\n                  :disabled=\"form.processing\"\n              >\n                Submit\n              </button>\n            </div>\n\n\n          </div>\n          <div class=\"flex flex-col max-w-md text-justify mt-24 mb-8\">\n            <div>\n              <div class=\"license-info\">\n                <h2 class=\"font-semibold mb-6\">About The License Options:</h2>\n                <h3 class=\"font-semibold\">Creative Commons Licenses</h3>\n                <ul>\n                  <li v-for=\"license in licenses.filter(l => l.type === 'Creative Commons')\" :key=\"license.id\">\n                    <strong>{{ license.name }}:</strong> {{ license.description }}\n                  </li>\n                </ul>\n\n                <h3 class=\"font-semibold\">Legacy Copyright</h3>\n                <ul>\n                  <li v-for=\"license in licenses.filter(l => l.type === 'Legacy Copyright')\" :key=\"license.id\">\n                    <strong>{{ license.name }}:</strong> {{ license.description }}\n                  </li>\n                </ul>\n\n                <h3 class=\"font-semibold\">Public Domain</h3>\n                <ul>\n                  <li v-for=\"license in licenses.filter(l => l.type === 'Public Domain')\" :key=\"license.id\">\n                    <strong>{{ license.name }}:</strong> {{ license.description }}\n                  </li>\n                </ul>\n              </div>\n\n            </div>\n\n            <div v-if=\"selectedCreativeCommons\" class=\"mb-6 w-64\">\n\n              <div v-if=\"selectedCreativeCommons === 8\">\n                <input class=\"hidden border border-gray-400 text-black font-semibold p-2 w-1/2 rounded-lg\"\n                       type=\"hidden\"\n                       v-model=\"selectedCopyrightYear\"\n                       value=\"null\">\n              </div>\n              <div v-else>\n                <label class=\"block mb-2 uppercase font-bold text-xs dark:text-gray-200\"\n                       for=\"copyrightYear\"\n                >\n                  Copyright Year\n                </label>\n                <input class=\"border border-gray-400 text-black font-semibold p-2 w-1/2 rounded-lg\"\n                       type=\"number\"\n                       minlength=\"4\"\n                       maxlength=\"4\"\n                       v-model=\"selectedCopyrightYear\">\n              </div>\n\n              <div v-if=\"form.errors.copyrightYear\" v-text=\"form.errors.copyrightYear\"\n                   class=\"text-xs text-red-600 mt-1\"></div>\n            </div>\n          </div>\n        </div>\n\n\n      </form>\n\n      <div class=\"flex justify-end mt-6\">\n        <Link :href=\"`/teams/${props.team.slug}`\" class=\"text-blue-500 ml-2\"> {{ props.team.name }} © 2022</Link>\n      </div>\n\n    </div>\n  </div>\n\n\n</template>\n\n<script setup>\nimport { useForm } from \"@inertiajs/inertia-vue3\"\nimport { usePageSetup } from '@/Utilities/PageSetup'\nimport JetValidationErrors from '@/Jetstream/ValidationErrors'\nimport CancelButton from \"@/Components/Global/Buttons/CancelButton\"\nimport { computed, ref } from 'vue'\nimport LicensingExplained from '@/Components/Global/CreativeCommonsLicensing/LicensingExplained.vue'\n\nusePageSetup('shows/slug/episodes/create')\n\nlet props = defineProps({\n  user: Object,\n  show: Object,\n  team: Object,\n  creative_commons: Object,\n})\n\n// appSettingStore.currentPage = 'episodes'\n// appSettingStore.showFlashMessage = true;\n\n// if (props.show) {\n//     teamStore.setActiveShow(props.show);\n// }\n//\n// if (props.team) {\n//     teamStore.setActiveTeam(props.team);\n// }\n\nlet selectedCreativeCommons = ref(null);\nlet selectedCopyrightYear = ref(null);\nconst currentYear = new Date().getFullYear();\n\nlet form = useForm({\n  name: '',\n  description: '',\n  user_id: props.user.id,\n  show_id: props.show.id,\n  show_slug: props.show.slug,\n  episode_number: '',\n  video_url: '',\n  youtube_url: '',\n  video_embed_code: '',\n  notes: '',\n  creative_commons_id: '',\n  copyrightYear: '',\n});\n\nfunction reset() {\n  form.reset();\n}\n\nfunction addEmbedCodeConfirm() {\n  if (confirm(\"Are you sure you want to add this embed code? It will override the video url.\")) {\n    form.post(route('showEpisodes.store', props.show.slug));\n  }\n}\n\nconst handleCreativeCommonsChange = () => {\n  if (selectedCreativeCommons.value === 8) {\n    selectedCopyrightYear.value = null;\n  } else if (selectedCopyrightYear.value === null) {\n    // Pre-populate with current year only if copyrightYear is null\n    selectedCopyrightYear.value = currentYear;\n  }\n};\n\nconst selectedCreativeCommonsDescription = computed(() => {\n  const selectedCC = props.creative_commons.find((cc) => cc.id === selectedCreativeCommons.value);\n  return selectedCC ? selectedCC.description : '';\n});\n\n\nconst licenses = ref([\n  { id: 1, type: 'Creative Commons', name: 'CC BY (Attribution)', description: 'Allows others to distribute, remix, adapt, and build upon your work, even commercially, as long as they credit you for the original creation.' },\n  { id: 2, type: 'Creative Commons', name: 'CC BY-SA (Attribution-ShareAlike)', description: 'Similar to CC BY but requires derivatives to be licensed under identical terms.' },\n  { id: 3, type: 'Creative Commons', name: 'CC BY-ND (Attribution-NoDerivs)', description: 'Allows for redistribution, commercial and non-commercial, as long as the content is passed along unchanged and in whole, with credit to you.' },\n  { id: 4, type: 'Creative Commons', name: 'CC BY-NC (Attribution-NonCommercial)', description: 'Allows others to remix, tweak, and build upon your work non-commercially, and although their new works must also acknowledge you and be non-commercial, they don’t have to license their derivative works on the same terms.' },\n  { id: 5, type: 'Creative Commons', name: 'CC BY-NC-SA (Attribution-NonCommercial-ShareAlike)', description: 'Lets others remix, tweak, and build upon your work non-commercially, as long as they credit you and license their new creations under the identical terms.' },\n  { id: 6, type: 'Creative Commons', name: 'CC BY-NC-ND (Attribution-NonCommercial-NoDerivs)', description: 'Allows others to download your works and share them with others as long as they credit you, but they can’t change them in any way or use them commercially.' },\n  { id: 7, type: 'Legacy Copyright', name: 'All Rights Reserved', description: 'The creator retains all the privileges provided by copyright law, such as the right to reproduce, distribute, and display the work publicly.' },\n  { id: 8, type: 'Public Domain', name: 'No Copyright', description: 'The work is free for public use; anyone can use, modify, or share it without asking for permission or providing attribution.' }\n]);\n\nlet submit = () => {\n  if (form.video_embed_code && form.video_url) {\n    addEmbedCodeConfirm();\n  } else\n    form.creative_commons_id = selectedCreativeCommons.value\n    form.copyrightYear = selectedCopyrightYear.value\n    form.post(route('showEpisodes.store', props.show.slug));\n};\n\n// let submit = () => {\n//     form.patch(route('shows.showEpisodes.store'));\n// };\n\n// let showMessage = ref(true);\n\n// function back() {\n//     let urlPrev = usePage().props.value.urlPrev\n//     if (urlPrev !== 'empty') {\n//         Inertia.visit(urlPrev)\n//     }\n//     if (urlPrev === 'empty') {\n//         Inertia.visit('/shows/'+props.show.slug+'/manage')\n//     }\n// }\n\n</script>\n\n<style scoped>\n.license-container {\n  margin: 20px;\n}\nh2 {\n  color: #333;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  margin-bottom: 10px;\n  line-height: 1.6;\n}\n</style>","import api from \"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-10.use[1]!../../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-10.use[2]!../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./Create.vue?vue&type=style&index=0&id=29378988&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./Create.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Create.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Create.vue?vue&type=style&index=0&id=29378988&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-29378988\"]])\n\nexport default __exports__"],"names":["usePageSetup","pageName","userStore","useUserStore","appSettingStore","useAppSettingStore","videoPlayerStore","useVideoPlayerStore","currentPage","showFlashMessage","pageIsHidden","isMobile","window","innerWidth","fullPage","ott","showOttButtons","makeVideoTopRight","pageReload","pageWasReloaded","location","reload","Inertia","on","event","search","shouldScrollToTop","requestAnimationFrame","topDiv","document","getElementById","scrollIntoView","behavior","scrollTo","setPrevUrl","noLayout","___CSS_LOADER_EXPORT___","push","module","id","props","__props","cancel","prevUrl","url","visit","isCreator","errors","computed","usePage","value","hasErrors","Object","keys","length","openImage","imageLightboxModal","imageUrl","ref","imageAlt","showImageLightboxModal","selectedCreativeCommons","selectedCopyrightYear","currentYear","Date","getFullYear","form","useForm","name","description","user_id","user","show_id","show","show_slug","slug","episode_number","video_url","youtube_url","video_embed_code","notes","creative_commons_id","copyrightYear","handleCreativeCommonsChange","selectedCreativeCommonsDescription","selectedCC","creative_commons","find","cc","licenses","type","submit","confirm","post","route","options","locals"],"sourceRoot":""}
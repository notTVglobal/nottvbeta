{"version":3,"file":"js/6225.js","mappings":"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","sources":["webpack:///./resources/js/Stores/MovieStore.js","webpack:///./resources/js/Stores/UploadStore.js","webpack:///./resources/js/Utilities/PageSetup.js","webpack:///./resources/js/Components/Global/Uploaders/VideoUpload.vue?0d11","webpack:///./resources/js/Pages/Movies/{$id}/Edit.vue?4cef","webpack:///./resources/js/Components/Global/Buttons/CancelButton.vue?b7c6","webpack:///./resources/js/Components/Global/Buttons/CancelButton.vue","webpack:///./resources/js/Components/Global/Modals/Messages.vue?dfe9","webpack:///./resources/js/Components/Global/Modals/Messages.vue","webpack:///./resources/js/Components/Global/TextEditor/TabbableTextarea.vue?4db8","webpack:///./resources/js/Components/Global/TextEditor/TabbableTextarea.vue","webpack:///./resources/js/Components/Global/Uploaders/ImageUpload.vue?55d5","webpack:///./resources/js/Components/Global/Uploaders/ImageUpload.vue","webpack:///./resources/js/Components/Global/Uploaders/VideoUpload.vue","webpack:///./resources/js/Components/Global/Uploaders/VideoUpload.vue?f1b1","webpack:///./resources/js/Components/Global/Uploaders/VideoUpload.vue?b223","webpack:///./resources/js/Jetstream/ValidationErrors.vue?5fdc","webpack:///./resources/js/Jetstream/ValidationErrors.vue","webpack:///./resources/js/Pages/Movies/{$id}/Edit.vue","webpack:///./resources/js/Pages/Movies/{$id}/Edit.vue?8082","webpack:///./resources/js/Pages/Movies/{$id}/Edit.vue?d66e"],"sourcesContent":["import { defineStore } from \"pinia\";\n\nconst initialState = () => ({\n    category_id: 0,\n    category_description: '',\n    categories: [],\n    sub_category_id: 0,\n    sub_category_description: '',\n    sub_categories: [],\n})\n\nexport const useMovieStore = defineStore('movieStore', {\n    state: initialState,\n    actions: {\n        reset() {\n            // Reset the store to its original state (clear all data)\n            Object.assign(this, initialState());\n        },\n        // initializeDescriptions(categories, categoryId, subCategoryId) {\n        //     this.categories = categories\n        //     this.category_id = categoryId\n        //     this.sub_category_id = subCategoryId\n        //     console.log(\"Initializing Descriptions with Category ID:\", this.category_id, \"Subcategory ID:\", this.sub_category_id);\n        //     const category = this.categories.find(cat => cat.id === this.category_id);\n        //     console.log(\"Found Category:\", category);\n        //     // this.category_id = category ? category.id : '';\n        //     this.category_description = category ? category.description : '';\n        //     // this.sub_category_id = subCategoryId;\n        //     this.sub_categories = category ? category.sub_categories : [];\n        //     console.log(\"Updated sub_category_id to:\", this.sub_category_id);\n        //\n        //     this.updateSubCategoryDescription(subCategoryId);\n        // },\n\n\n        initializeDescriptions(categoryId, subCategoryId) {\n            this.category_id = categoryId;\n            const category = this.categories.find(cat => cat.id === categoryId);\n            this.category_description = category ? category.description : '';\n            this.sub_categories = category ? category.sub_categories : [];\n\n            this.updateSubCategoryDescription(subCategoryId);\n        },\n        updateSubCategoryDescription(subCategoryId) {\n            const subCategory = this.sub_categories.find(sub => sub.id === subCategoryId);\n            this.sub_category_id = subCategory ? subCategory.id : '';\n            this.sub_category_description = subCategory ? subCategory.description : '';\n        }\n\n\n\n\n\n\n\n        // initializeDescriptions(categoryId, subCategoryId) {\n        //     this.category_id = categoryId\n        //     this.sub_category_id = subCategoryId\n        //     console.log(\"Initializing Descriptions with Category ID:\", this.category_id, \"Subcategory ID:\", this.sub_category_id);\n        //     const category = this.categories.find(cat => cat.id === this.category_id);\n        //     console.log(\"Found Category:\", category);\n        //     this.category_id = category ? category.id : '';\n        //     this.category_description = category ? category.description : '';\n        //         this.sub_category_id = subCategoryId;\n        //         this.sub_categories = category ? category.sub_categories : [];\n        //         console.log(\"Updated sub_category_id to:\", this.sub_category_id);\n        //     // // this.sub_category_id = subCategoryId;\n        //     // this.sub_categories = category ? category.sub_categories : [];\n        //     // console.log(\"Updated sub_category_id to:\", this.sub_category_id);\n        //     //\n        //     this.updateSubCategoryDescription(this.sub_category_id);\n        // },\n        // updateSubCategoryDescription(subCategoryId) {\n        //     const subCategory = this.sub_categories.find(sub => sub.id === subCategoryId);\n        //     this.sub_category_id = subCategory ? subCategory.id : '';\n        //     this.sub_category_description = subCategory ? subCategory.description : '';\n        // }\n    },\n\n    getters: {\n        //\n    }\n});\n","import { defineStore } from 'pinia'\n\nconst initialState = () => ({\n    videoId: null,\n    uploadStatus: 'idle', // Possible values: 'idle', 'uploading', 'processing', 'completed', 'error'\n})\n\nexport const useUploadStore = defineStore('uploadStore', {\n    state: initialState,\n    actions: {\n        reset() {\n            // Reset the store to its original state (clear all data)\n            Object.assign(this, initialState())\n        },\n        setVideoId(id) {\n            this.videoId = id;\n        },\n        setUploadStatus(status) {\n            this.uploadStatus = status;\n        },\n    },\n})","import { onBeforeMount, onMounted } from 'vue'\nimport { useUserStore } from \"@/Stores/UserStore\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useVideoPlayerStore } from \"@/Stores/VideoPlayerStore\"\nimport { Inertia } from '@inertiajs/inertia'\n\nexport function usePageSetup(pageName) {\n    const userStore = useUserStore()\n    const appSettingStore = useAppSettingStore()\n    const videoPlayerStore = useVideoPlayerStore()\n\n    appSettingStore.currentPage = pageName\n    appSettingStore.showFlashMessage = true\n    appSettingStore.pageIsHidden = false\n\n    if (userStore.isMobile || window.innerWidth < 1024) {\n        appSettingStore.ott = 0;\n    } else {\n        appSettingStore.ott = 1;\n    }\n\n    videoPlayerStore.makeVideoTopRight()\n\n    if (appSettingStore.pageReload) {\n        appSettingStore.pageReload = false\n        window.location.reload(true);\n    }\n    // Check if the URL contains query strings\n\n\n    // Only scroll into view if there are no query strings\n\n        // const topDiv = document.getElementById(\"topDiv\")\n        // if (topDiv) {\n        //     topDiv.scrollIntoView()\n        // }\n        Inertia.on('navigate', (event) => {\n            const hasQueryStrings = window.location.search !== '';\n            if (!hasQueryStrings || appSettingStore.shouldScrollToTop) {\n                requestAnimationFrame(() => {\n                    const topDiv = document.getElementById(\"topDiv\");\n                    if (topDiv) {\n                        topDiv.scrollIntoView({behavior: 'auto'});\n                    } else {\n                        window.scrollTo(0, 0);\n                    }\n                });\n            }\n            appSettingStore.shouldScrollToTop = false;\n        })\n    // Only update if we're not already on this page to avoid overwriting with the current URL\n    appSettingStore.setPrevUrl()\n    appSettingStore.showOttButtons = true\n    appSettingStore.noLayout = false\n\n    // Inertia.reload()\n\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".dropzone[data-v-21826cbb]{align-items:center;background-color:#fce4bb;border:2px dashed #000;display:flex;flex-direction:column;justify-content:center;row-gap:16px;transition:all .3s ease}label[data-v-21826cbb]{padding:8px 12px;transition:all .3s ease}.active-dropzone[data-v-21826cbb],label[data-v-21826cbb]{background-color:#4bb1b1;color:#fff}.active-dropzone[data-v-21826cbb]{border-color:#fff}.active-dropzone label[data-v-21826cbb]{background-color:#fff;color:#4bb1b1}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/Components/Global/Uploaders/VideoUpload.vue\"],\"names\":[],\"mappings\":\"AA4KA,2BAIE,kBAAmB,CAGnB,wBAAyB,CADzB,sBAA0B,CAL1B,YAAa,CACb,qBAAsB,CACtB,sBAAuB,CAEvB,YAAa,CAGb,uBACF,CAEA,uBACE,gBAAiB,CAGjB,uBACF,CAEA,yDAJE,wBAAyB,CADzB,UASF,CAJA,kCAEE,iBAEF,CAEA,wCACE,qBAAsB,CACtB,aACF\",\"sourcesContent\":[\"<template>\\n  <div>\\n\\n    <progress v-show=\\\"userStore.uploadPercentage !== 0\\\" max=\\\"100\\\" :value=\\\"userStore.uploadPercentage\\\" class=\\\"w-full\\\"/>\\n    <div v-show=\\\"userStore.uploadPercentage !== 0\\\" class=\\\"w-full mb-4\\\">{{ userStore.uploadPercentageRounded }}%</div>\\n\\n    <div v-show=\\\"uploadingMessage\\\" class=\\\"mb-4 font-bold text-center\\\">Please stay on this screen until upload is\\n      complete.\\n    </div>\\n    <div v-show=\\\"uploadComplete\\\" class=\\\"mb-4 font-bold text-center\\\">Upload is complete. The video is now\\n      processing.\\n    </div>\\n    <form v-show=\\\"!isHidden\\\" id=\\\"videoUploadForm\\\" action=\\\"/videoupload\\\"\\n          class=\\\"dropzone dropzoneFile border border-black rounded w-full h-48 max-w-md px-2 py-2 mb-6\\\">\\n      <!--                            add input fields and a submit button to send data back to Laravel -->\\n      <input hidden name=\\\"movieId\\\" v-model=\\\"form.movieId\\\">\\n      <!--            <input hidden name=\\\"movieTrailerId\\\" v-model=\\\"form.movieTrailerId\\\">-->\\n      <input hidden name=\\\"showEpisodeId\\\" v-model=\\\"form.showEpisodeId\\\">\\n    </form>\\n\\n  </div>\\n</template>\\n\\n<script setup>\\nimport { Inertia } from \\\"@inertiajs/inertia\\\"\\nimport { onMounted, ref } from \\\"vue\\\"\\nimport { useForm } from \\\"@inertiajs/inertia-vue3\\\"\\nimport { Dropzone } from \\\"dropzone\\\"\\nimport { useUserStore } from \\\"@/Stores/UserStore\\\"\\nimport { useUploadStore } from \\\"@/Stores/UploadStore\\\"\\n\\nconst userStore = useUserStore()\\nconst uploadStore = useUploadStore()\\n\\nlet uploadPercentage = ref(0)\\nlet uploadingMessage = ref(false)\\nlet uploadComplete = ref(false)\\nlet isHidden = ref(false)\\n\\nconst emits = defineEmits(['upload-start', 'upload-finished']);\\n\\nconst uploadCompleteMessage = () => {\\n  uploadingMessage = false\\n  uploadComplete = true\\n}\\n\\nconst uploadStarted = () => {\\n  uploadingMessage = true\\n  emits('upload-start');\\n}\\n\\nfunction onUploadSuccess(videoId) {\\n  emits('upload-finished', videoId);\\n  uploadStore.setVideoId(videoId);\\n  uploadStore.setUploadStatus('processing');\\n}\\n\\nonMounted(() => {\\n  // Make sure the element with the ID \\\"videoUploadForm\\\" is available in the DOM.\\n  const videoUploadForm = document.getElementById('videoUploadForm');\\n\\n  if (videoUploadForm) {\\n    // Initialize Dropzone on the element.\\n\\n    // see options for Dropzone here: https://github.com/dropzone/dropzone/blob/main/src/options.js\\n    let myDropzone = new Dropzone(\\\"#videoUploadForm\\\", {\\n      url: \\\"/videoupload\\\",\\n      paramName: \\\"file\\\", // The name that will be used to transfer the file\\n      maxFilesize: '25 GB', // MB\\n      chunking: true,\\n      chunkSize: 2 * 1024 * 1024,\\n      parallelChunkUploads: false,\\n      retryChunks: true,\\n      retryChunksLimit: 10,\\n      capture: null,\\n      // can set the capture method as camera, microphone or video\\n      // for mobile devices to skip the file selection and choose the\\n      // recording device instead.\\n      acceptedFiles: 'video/*, audio/*',\\n      uploadprogress: function (file, progress, bytesSent) {\\n        userStore.uploadPercentage = progress;\\n        console.log(userStore.uploadPercentage);\\n        if (userStore.uploadPercentage !== 100) {\\n          isHidden = true;\\n        }\\n      },\\n      dictDefaultMessage: \\\"Click here or Drop video here to upload <br>(Max video file size is 25GB)\\\",\\n      forceFallback: false, // for testing, set to true.\\n      accept: function (file, done) {\\n        if (file.name === \\\"\\\") {\\n          done(\\\"Need a file.\\\");\\n        } else if (file.size > 25000000000) {\\n          console.log(file.size)\\n          done(\\\"Video file too big.\\\");\\n          alert('Video file must be smaller than 25GB');\\n        } else {\\n          done();\\n        }\\n      }\\n    });\\n\\n    myDropzone.on(\\\"addedfile\\\", file => {\\n      uploadStarted()\\n      console.log(`File added: ${file.name}`);\\n    });\\n\\n    myDropzone.on(\\\"success\\\", function(file, response) {\\n      // Assuming 'response' contains the videoId after the file is uploaded\\n      if (response.videoId) {\\n        console.log(response.videoId)\\n        const videoId = response.videoId;\\n        if (videoId) {\\n          onUploadSuccess(videoId);\\n          // onUploadSuccess(response.videoId);\\n        }\\n      }\\n    });\\n\\n    myDropzone.on(\\\"complete\\\", function (file, response) {\\n      uploadCompleteMessage()\\n      myDropzone.removeFile(file);\\n      userStore.uploadPercentage = 0;\\n      isHidden = false;\\n      Inertia.reload({\\n        only: [\\\"videos\\\"],\\n      });\\n    });\\n\\n  } else {\\n    console.error('Element with ID \\\"videoUploadForm\\\" not found in the DOM.');\\n  }\\n})\\n\\nlet props = defineProps({\\n  movieId: Number,\\n  movieTrailerId: Number,\\n  showEpisodeId: Number,\\n})\\n\\nfunction setMovieOrEpisodeId() {\\n  if (props.movieId !== null) {\\n    userStore.uploadMovieId = props.mov;\\n  } else if (props.movieTrailerId !== null) {\\n    userStore.movieTrailerId = props.movieTrailerId;\\n  } else if (props.showEpisodeId !== null) {\\n    userStore.uploadShowEpisodeId = props.showEpisodeId;\\n  }\\n}\\n\\nsetMovieOrEpisodeId()\\n\\nlet form = useForm({\\n  file: [],\\n  // movieId: userStore.uploadMovieId,\\n  movieId: props.movieId,\\n  movieTrailerId: props.movieId,\\n  showEpisodeId: props.showEpisodeId,\\n});\\n\\n// let props = defineProps({\\n//     filters: Object,\\n//     can: Object,\\n//     videos: Object,\\n//     message: String,\\n//     errors: ref(''),\\n//     isHidden: ref(false),\\n//     done: ref(),\\n// });\\n\\n</script>\\n<style scoped>\\n\\n.dropzone {\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: center;\\n  row-gap: 16px;\\n  border: 2px dashed #000000;\\n  background-color: #fce4bb;\\n  transition: 0.3s ease all;\\n}\\n\\nlabel {\\n  padding: 8px 12px;\\n  color: #fff;\\n  background-color: #4bb1b1;\\n  transition: 0.3s ease all;\\n}\\n\\n.active-dropzone {\\n  color: #fff;\\n  border-color: #fff;\\n  background-color: #4bb1b1;\\n}\\n\\n.active-dropzone label {\\n  background-color: #fff;\\n  color: #4bb1b1;\\n}\\n\\n/*6b7280*/\\n/*4bb1b1*/\\n\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".topBannerErrorMessage[data-v-7566c6fc]{background-color:#000;color:#fff;font-size:1rem;font-weight:600;padding:.5rem;width:100%}.errorClass[data-v-7566c6fc]{color:#90ee90;font-weight:600}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/Pages/Movies/{$id}/Edit.vue\"],\"names\":[],\"mappings\":\"AAgvBA,wCACE,qBAAuB,CAGvB,UAAY,CAEZ,cAAe,CADf,eAAgB,CAHhB,aAAe,CACf,UAIF,CACA,6BACE,aAAiB,CACjB,eACF\",\"sourcesContent\":[\"<template>\\n\\n    <Head :title=\\\"`Edit Movie: ${movie.name}`\\\"/>\\n\\n    <div class=\\\"place-self-center flex flex-col gap-y-3\\\">\\n        <div id=\\\"topDiv\\\" class=\\\"bg-dark text-light p-5 mb-10 pt-6\\\">\\n\\n            <Message v-if=\\\"appSettingStore.showFlashMessage\\\" :flash=\\\"$page.props.flash\\\"/>\\n\\n            <header>\\n                <div class=\\\"flex justify-between mb-6\\\">\\n                    <div>\\n                        <div class=\\\"font-bold mb-4 text-red-700\\\">EDIT MOVIE</div>\\n                        <h1 class=\\\"text-3xl\\\">\\n                            <Link :href=\\\"`/movies/${movie.slug}`\\\" class=\\\"text-red-700 font-bold uppercase\\\">{{ movie.name }}</Link>\\n                        </h1>\\n                    </div>\\n                  <div class=\\\"flex flex-row flex-wrap\\\">\\n                    <button\\n                        @click=\\\"submit\\\"\\n                        class=\\\"h-fit bg-blue-600 hover:bg-blue-500 text-white rounded py-2 px-4 mr-2\\\"\\n                        :disabled=\\\"form.processing\\\"\\n                    >\\n                      Save\\n                    </button>\\n                    <CancelButton />\\n                  </div>\\n\\n                </div>\\n            </header>\\n\\n            <div class=\\\"flex flex-col\\\">\\n                <div class=\\\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\\\">\\n                    <div class=\\\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\\\">\\n                        <div class=\\\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\\\">\\n\\n\\n                            <div v-if=\\\"form.errors.name\\\" v-text=\\\"form.errors.name\\\"\\n                                 class=\\\"topBannerErrorMessage\\\"></div>\\n                            <div v-if=\\\"form.errors.description\\\" v-text=\\\"form.errors.description\\\"\\n                                 class=\\\"topBannerErrorMessage\\\"></div>\\n                          <div v-if=\\\"form.errors.logline\\\" v-text=\\\"form.errors.logline\\\"\\n                               class=\\\"topBannerErrorMessage\\\"></div>\\n                          <div v-if=\\\"form.errors.release_year\\\" v-text=\\\"form.errors.release_year\\\"\\n                               class=\\\"topBannerErrorMessage\\\"></div>\\n                          <div v-if=\\\"form.errors.release_date\\\" v-text=\\\"form.errors.release_date\\\"\\n                               class=\\\"topBannerErrorMessage\\\"></div>\\n                          <div v-if=\\\"form.errors.creative_commons_id\\\" v-text=\\\"form.errors.creative_commons_id\\\"\\n                               class=\\\"topBannerErrorMessage\\\"></div>\\n                          <div v-if=\\\"form.errors.copyrightYear\\\" v-text=\\\"form.errors.copyrightYear\\\"\\n                               class=\\\"topBannerErrorMessage\\\"></div>\\n                          <div v-if=\\\"form.errors.category\\\" v-text=\\\"form.errors.category\\\"\\n                               class=\\\"topBannerErrorMessage\\\"></div>\\n                          <div v-if=\\\"form.errors.sub_category\\\" v-text=\\\"form.errors.sub_category\\\"\\n                               class=\\\"topBannerErrorMessage\\\"></div>\\n                          <div v-if=\\\"form.errors.video_url\\\" v-text=\\\"form.errors.video_url\\\"\\n                               class=\\\"topBannerErrorMessage\\\"></div>\\n                          <div v-if=\\\"form.errors.www_url\\\" v-text=\\\"form.errors.www_url\\\"\\n                               class=\\\"topBannerErrorMessage\\\"></div>\\n                          <div v-if=\\\"form.errors.instagram_name\\\" v-text=\\\"form.errors.instagram_name\\\"\\n                               class=\\\"topBannerErrorMessage\\\"></div>\\n                          <div v-if=\\\"form.errors.telegram_url\\\" v-text=\\\"form.errors.telegram_url\\\"\\n                               class=\\\"topBannerErrorMessage\\\"></div>\\n                          <div v-if=\\\"form.errors.twitter_handle\\\" v-text=\\\"form.errors.twitter_handle\\\"\\n                               class=\\\"topBannerErrorMessage\\\"></div>\\n                          <div v-if=\\\"form.errors.notes\\\" v-text=\\\"form.errors.notes\\\"\\n                               class=\\\"topBannerErrorMessage\\\"></div>\\n                          <div v-if=\\\"form.errors.status\\\" v-text=\\\"form.errors.status\\\"\\n                               class=\\\"topBannerErrorMessage\\\"></div>\\n                            <!--                            <div v-if=\\\"form.errors.video_file_embed_code\\\" v-text=\\\"form.errors.video_file_embed_code\\\"-->\\n                            <!--                                 class=\\\"topBannerErrorMessage-->\\n\\n\\n                            <!-- Begin grid 2-col -->\\n                            <div class=\\\"grid grid-cols-1 sm:grid-cols-2 space-x-6 p-6\\\">\\n\\n\\n                                <!--Left Column-->\\n                                <div>\\n                                    <div class=\\\"flex space-y-3\\\">\\n                                        <div class=\\\"mb-6\\\">\\n                                            <SingleImage :image=\\\"image\\\" :key=\\\"image\\\"/>\\n                                        </div>\\n                                    </div>\\n\\n                                    <div class=\\\"w-full\\\">\\n\\n                                        <label class=\\\"block mb-2 uppercase font-bold text-xs text-light text-red-700\\\"\\n                                               for=\\\"name\\\"\\n                                        >\\n                                            Change Movie Poster\\n                                        </label>\\n\\n                                        <ImageUpload :image=\\\"image\\\"\\n                                                     :modelType=\\\"'movie'\\\"\\n                                                     :modelId=\\\"movie.id\\\"\\n                                                     :name=\\\"'Upload Movie Poster'\\\"\\n                                                     :maxSize=\\\"'30MB'\\\"\\n                                                     :fileTypes=\\\"'image/jpg, image/jpeg, image/png'\\\"\\n                                                     @reloadImage=\\\"reloadImage\\\"\\n                                        />\\n\\n                                    </div>\\n\\n                                    <div class=\\\"flex space-y-3\\\">\\n                                        <div class=\\\"mb-6 bg-black w-full p-6\\\">\\n                                            <span\\n                                                v-if=\\\"video.upload_status === 'processing'\\\"\\n                                                class=\\\"text-center place-self-center text-white font-semibold text-xl\\\">Video processing...</span>\\n                                            <video v-if=\\\"video.upload_status !== 'processing'\\\" :src=\\\"video.cdn_endpoint+video.cloud_folder+video.folder+'/'+video.file_name\\\" :type=\\\"video.type\\\" controls></video>\\n                                        </div>\\n                                    </div>\\n\\n                                    <div class=\\\"\\\">\\n                                        <label class=\\\"block mb-2 uppercase font-bold text-xs text-red-700\\\"\\n                                               for=\\\"name\\\"\\n                                        >\\n                                            Upload Movie\\n                                        </label>\\n                                        <div class=\\\"max-full mx-auto mt-2 mb-6 bg-gray-200 px-6 pt-4 pb-2 text-dark\\\">\\n                                            <h2 class=\\\"text-xl font-semibold text-gray-800\\\">Upload Video</h2>\\n\\n                                            <ul class=\\\"pb-4 text-gray-800\\\">\\n                                                <li>Max Video Length: <span class=\\\"text-orange-400\\\">4 hours</span>\\n                                                </li>\\n                                                <li>File Types accepted: <span class=\\\"text-orange-400\\\">mp4, webm, ogg</span>\\n                                                </li>\\n                                            </ul>\\n\\n                                            <VideoUpload :movieId=\\\"movie.id\\\" class=\\\"text-black\\\"/>\\n\\n                                        </div>\\n\\n\\n\\n                                    </div>\\n\\n\\n\\n\\n                                    <div class=\\\"flex space-y-3\\\">\\n                                        <div class=\\\"mb-6 bg-black w-full p-6\\\">\\n<!--                                            VIDEO HERE-->\\n                                        </div>\\n                                    </div>\\n\\n                                    <div>\\n                                        <label class=\\\"block mb-2 uppercase font-bold text-xs text-red-700\\\"\\n                                               for=\\\"name\\\"\\n                                        >\\n                                            Upload Movie Trailer\\n                                        </label>\\n                                        <div class=\\\"max-full mx-auto mt-2 mb-6 bg-gray-200 px-6 pt-4 pb-2 text-dark\\\">\\n                                            <h2 class=\\\"text-xl font-semibold text-gray-800\\\">Upload Video</h2>\\n\\n                                            <ul class=\\\"pb-4 text-gray-800\\\">\\n                                                <li>Max Video Length: <span class=\\\"text-orange-400\\\">4 hours</span>\\n                                                </li>\\n                                                <li>File Types accepted: <span class=\\\"text-orange-400\\\">mp4, webm, ogg</span>\\n                                                </li>\\n                                            </ul>\\n\\n<!--                                            <VideoUpload class=\\\"text-black\\\"/>-->\\n\\n                                        </div>\\n\\n                                    </div>\\n\\n\\n\\n                                </div>\\n\\n\\n\\n                            <!--Right Column-->\\n                                <div>\\n\\n                                    <form @submit.prevent=\\\"submit\\\">\\n\\n                                      <div class=\\\"mb-6\\\">\\n                                        <label class=\\\"block mb-2 uppercase font-bold text-xs text-red-700\\\"\\n                                               for=\\\"status\\\"\\n                                        >\\n                                          Status\\n                                        </label>\\n\\n                                        <div class=\\\"text-sm mb-2\\\">Set the status to Active to make the movie accessible to the public. Set the status to Creators only to only make it available to creators. All other statuses will only be viewable by you.</div>\\n\\n                                        <select required class=\\\"border border-gray-400 text-gray-800 p-2 w-1/2 rounded-lg block mb-2 uppercase font-bold text-xs \\\"\\n                                                v-model=\\\"form.status\\\"\\n                                        >\\n                                          <option v-for=\\\"status in statuses\\\"\\n                                                  :key=\\\"status.id\\\" :value=\\\"status.id\\\">{{status.name}}</option>\\n\\n\\n                                        </select>\\n                                        <div v-if=\\\"form.errors.status\\\" v-text=\\\"form.errors.status\\\"\\n                                             class=\\\"errorClass\\\"></div>\\n                                      </div>\\n\\n                                        <div class=\\\"mb-6\\\">\\n                                            <label class=\\\"block mb-2 uppercase font-bold text-xs text-red-700\\\"\\n                                                   for=\\\"name\\\"\\n                                            >\\n                                                Movie Name\\n                                            </label>\\n\\n                                            <input v-model=\\\"form.name\\\"\\n                                                   class=\\\"border border-gray-400 text-black font-semibold p-2 w-1/2 rounded-lg\\\"\\n                                                   type=\\\"text\\\"\\n                                                   name=\\\"name\\\"\\n                                                   id=\\\"name\\\"\\n                                                   required\\n                                            >\\n                                            <div v-if=\\\"form.errors.name\\\" v-text=\\\"form.errors.name\\\"\\n                                                 class=\\\"errorClass\\\"></div>\\n                                        </div>\\n\\n                                        <div class=\\\"mb-6 w-64\\\">\\n                                            <label class=\\\"block mb-2 uppercase font-bold text-xs text-red-700\\\"\\n                                                   for=\\\"release_date\\\"\\n                                            >\\n                                                Release Year\\n                                            </label>\\n\\n                                            <input v-model=\\\"selectedReleaseYear\\\" @change=\\\"handleReleaseYearChange\\\"\\n\\n                                                   class=\\\"border border-gray-400 text-black font-semibold p-2 w-1/2 rounded-lg\\\"\\n                                                   type=\\\"number\\\"\\n                                                   name=\\\"release_year\\\"\\n                                                   id=\\\"release_year\\\"\\n                                                   min=\\\"1900\\\"\\n                                                   max=\\\"2100\\\"\\n\\n                                            >\\n                                            <div v-if=\\\"form.errors.release_year\\\" v-text=\\\"form.errors.release_year\\\"\\n                                                 class=\\\"errorClass\\\"></div>\\n                                        </div>\\n\\n                                      <div class=\\\"mb-6 w-64\\\">\\n                                        <label class=\\\"block mb-2 uppercase font-bold text-xs text-red-700\\\"\\n                                               for=\\\"creative_commons\\\"\\n                                        >\\n                                          Creative Commons / Copyright\\n                                        </label>\\n\\n                                        <select class=\\\"border border-gray-400 text-gray-800 py-2 pl-2 pr-8 w-fit rounded-lg block mb-2 uppercase font-bold text-xs\\\"\\n                                                v-model=\\\"selectedCreativeCommons\\\" @change=\\\"handleCreativeCommonsChange\\\">\\n                                          <option v-for=\\\"cc in creative_commons\\\" :key=\\\"cc.id\\\" :value=\\\"cc.id\\\">{{ cc.name }}</option>\\n                                        </select>\\n\\n                                        <div v-if=\\\"form.errors.creative_commons_id\\\" v-text=\\\"form.errors.creative_commons_id\\\"\\n                                             class=\\\"errorClass\\\"></div>\\n\\n                                        <div class=\\\"\\\">{{ selectedCreativeCommonsDescription }}</div>\\n\\n                                      </div>\\n\\n                                      <div v-if=\\\"selectedCreativeCommons\\\" class=\\\"mb-6 w-64\\\">\\n\\n                                        <div v-if=\\\"selectedCreativeCommons === 8\\\">\\n                                          <input class=\\\"hidden border border-gray-400 text-black font-semibold p-2 w-1/2 rounded-lg\\\"\\n                                                 type=\\\"hidden\\\"\\n                                                 v-model=\\\"selectedCopyrightYear\\\"\\n                                                 value=\\\"null\\\">\\n                                        </div>\\n                                        <div v-else>\\n                                          <label class=\\\"block mb-2 uppercase font-bold text-xs text-red-700\\\"\\n                                                 for=\\\"copyrightYear\\\"\\n                                          >\\n                                            Copyright Year\\n                                          </label>\\n                                          <input class=\\\"border border-gray-400 text-black font-semibold p-2 w-1/2 rounded-lg\\\"\\n                                                 type=\\\"number\\\"\\n                                                 minlength=\\\"4\\\"\\n                                                 maxlength=\\\"4\\\"\\n                                                 v-model=\\\"selectedCopyrightYear\\\">\\n                                        </div>\\n\\n                                        <div v-if=\\\"form.errors.copyrightYear\\\" v-text=\\\"form.errors.copyrightYear\\\"\\n                                             class=\\\"errorClass\\\"></div>\\n                                      </div>\\n\\n                                        <div class=\\\"mb-6\\\">\\n                                            <label class=\\\"block mb-2 uppercase font-bold text-xs text-red-700\\\"\\n                                                   for=\\\"category\\\"\\n                                            >\\n                                                Category\\n                                            </label>\\n\\n                                            <select class=\\\"border border-gray-400 text-gray-800 p-2 w-1/2 rounded-lg block mb-2 uppercase font-bold text-xs\\\"\\n                                                    v-model=\\\"selectedCategoryId\\\" @change=\\\"chooseCategory\\\"\\n                                            >\\n                                                <option v-for=\\\"category in categories\\\"\\n                                                        :key=\\\"category.id\\\" :value=\\\"category.id\\\">{{category.name}}</option>\\n                                            </select>\\n\\n                                          <div v-if=\\\"form.errors.category\\\" v-text=\\\"form.errors.category\\\"\\n                                               class=\\\"errorClass\\\"></div>\\n\\n                                            <span class=\\\"\\\">{{movieStore.category_description}}</span>\\n\\n\\n                                        </div>\\n\\n                                        <div class=\\\"mb-6\\\">\\n                                            <label class=\\\"block mb-2 uppercase font-bold text-xs text-red-700\\\"\\n                                                   for=\\\"sub_category\\\"\\n                                            >\\n                                                Sub-category\\n                                            </label>\\n\\n                                            <select class=\\\"border border-gray-400 text-gray-800 disabled:bg-gray-600 disabled:cursor-not-allowed p-2 w-1/2 rounded-lg block mb-2 uppercase font-bold text-xs\\\"\\n                                                    v-model=\\\"selectedSubCategoryId\\\" :disabled=\\\"!selectedCategoryId\\\"  @change=\\\"chooseSubCategory\\\"\\n                                            >\\n                                                <option disabled value=\\\"\\\">Select a subcategory</option>\\n                                                <option v-for=\\\"subCategory in subCategories\\\" :key=\\\"subCategory.id\\\" :value=\\\"subCategory.id\\\">\\n\\n                                                  {{ subCategory.name }}\\n                                                </option>\\n                                            </select>\\n                                            <span class=\\\"\\\">{{movieStore.sub_category_description}}</span>\\n                                            <div v-if=\\\"form.errors.sub_category\\\" v-text=\\\"form.errors.sub_category\\\"\\n                                                 class=\\\"errorClass\\\"></div>\\n                                        </div>\\n\\n                                        <div class=\\\"mb-6\\\">\\n                                            <label class=\\\"block mb-2 uppercase font-bold text-xs text-red-700\\\"\\n                                                   for=\\\"name\\\"\\n                                            >\\n                                                Logline\\n                                            </label>\\n\\n                                            <input v-model=\\\"form.logline\\\"\\n                                                   class=\\\"border border-gray-400 text-gray-800 p-2 w-1/2 rounded-lg\\\"\\n                                                   type=\\\"text\\\"\\n                                                   name=\\\"logline\\\"\\n                                                   id=\\\"logline\\\"\\n                                                   required\\n                                            >\\n                                            <div v-if=\\\"form.errors.logline\\\" v-text=\\\"form.errors.logline\\\"\\n                                                 class=\\\"errorClass\\\"></div>\\n                                        </div>\\n\\n                                        <div class=\\\"mb-6\\\">\\n                                            <label class=\\\"block mb-2 uppercase font-bold text-xs text-red-700\\\"\\n                                                   for=\\\"description\\\"\\n                                            >\\n                                                Description\\n                                            </label>\\n                                            <TabbableTextarea v-model=\\\"form.description\\\"\\n                                                              class=\\\"border border-gray-400 text-gray-800 p-2 w-full rounded-lg\\\"\\n                                                              name=\\\"description\\\"\\n                                                              id=\\\"description\\\"\\n                                                              rows=\\\"10\\\" cols=\\\"30\\\"\\n                                                              required\\n                                            />\\n                                            <div v-if=\\\"form.errors.description\\\" v-text=\\\"form.errors.description\\\"\\n                                                 class=\\\"errorClass\\\"></div>\\n                                        </div>\\n\\n                                        <div class=\\\"mb-6\\\">\\n                                            <label class=\\\"block mb-2 uppercase font-bold text-xs text-red-700\\\"\\n                                                   for=\\\"file_url\\\"\\n                                            >\\n                                                Change Video URL (if hosted externally) <span class=\\\"text-white dark:text-black\\\">*</span>\\n                                            </label>\\n\\n                                            <input v-model=\\\"form.video_url\\\"\\n                                                   class=\\\"border border-gray-400 text-gray-800 p-2 w-full rounded-lg\\\"\\n                                                   type=\\\"text\\\"\\n                                                   name=\\\"video_url\\\"\\n                                                   id=\\\"video_url\\\"\\n                                            >\\n                                            <div v-if=\\\"form.errors.video_url\\\" v-text=\\\"form.errors.video_url\\\"\\n                                                 class=\\\"errorClass\\\"></div>\\n                                        </div>\\n\\n                                        <div class=\\\"block mb-6 text-sm font-semibold tracking-wider\\\">\\n                                            <div class=\\\"mb-2 uppercase\\\">* Note:</div>\\n\\n                                            <ul class=\\\"list-decimal pb-2 ml-2 mb-4 border-b font-medium\\\">\\n                                                <li>\\n                                                  We have <span class=\\\"underline\\\">not</span> enabled the use of Facebook or YouTube videos for security purposes.\\n                                                </li>\\n                                            </ul>\\n                                        </div>\\n\\n\\n                                        <div class=\\\"mb-6\\\">\\n                                            <label class=\\\"block mb-2 uppercase font-bold text-xs text-red-700\\\"\\n                                                   for=\\\"name\\\"\\n                                            >\\n                                                Website URL\\n                                            </label>\\n\\n                                            <input v-model=\\\"form.www_url\\\"\\n                                                   class=\\\"border border-gray-400 p-2 w-full rounded-lg text-black\\\"\\n                                                   type=\\\"text\\\"\\n                                                   name=\\\"www_url\\\"\\n                                                   id=\\\"www_url\\\"\\n                                            >\\n                                            <div v-if=\\\"form.errors.www_url\\\" v-text=\\\"form.errors.www_url\\\"\\n                                                 class=\\\"errorClass\\\"></div>\\n                                        </div>\\n\\n                                        <div class=\\\"mb-6\\\">\\n                                            <label class=\\\"block mb-2 uppercase font-bold text-xs text-red-700\\\"\\n                                                   for=\\\"name\\\"\\n                                            >\\n                                                Instagram @\\n                                            </label>\\n\\n                                            <input v-model=\\\"form.instagram_name\\\"\\n                                                   class=\\\"border border-gray-400 p-2 w-full rounded-lg text-black\\\"\\n                                                   type=\\\"text\\\"\\n                                                   name=\\\"instagram_name handle\\\"\\n                                                   id=\\\"instagram_name\\\"\\n                                            >\\n                                            <div v-if=\\\"form.errors.instagram_name\\\" v-text=\\\"form.errors.instagram_name\\\"\\n                                                 class=\\\"errorClass\\\"></div>\\n                                        </div>\\n\\n                                        <div class=\\\"mb-6\\\">\\n                                            <label class=\\\"block mb-2 uppercase font-bold text-xs text-red-700\\\"\\n                                                   for=\\\"name\\\"\\n                                            >\\n                                                Telegram URL\\n                                            </label>\\n\\n                                            <input v-model=\\\"form.telegram_url\\\"\\n                                                   class=\\\"border border-gray-400 p-2 w-full rounded-lg text-black\\\"\\n                                                   type=\\\"text\\\"\\n                                                   name=\\\"telegram_url\\\"\\n                                                   id=\\\"telegram_url\\\"\\n                                            >\\n                                            <div v-if=\\\"form.errors.telegram_url\\\" v-text=\\\"form.errors.telegram_url\\\"\\n                                                 class=\\\"errorClass\\\"></div>\\n                                        </div>\\n\\n                                        <div class=\\\"mb-6\\\">\\n                                            <label class=\\\"block mb-2 uppercase font-bold text-xs text-red-700\\\"\\n                                                   for=\\\"name\\\"\\n                                            >\\n                                                X (formerly Twitter) @\\n                                            </label>\\n\\n                                            <input v-model=\\\"form.twitter_handle\\\"\\n                                                   class=\\\"border border-gray-400 p-2 w-full rounded-lg text-black\\\"\\n                                                   type=\\\"text\\\"\\n                                                   name=\\\"twitter_handle\\\"\\n                                                   id=\\\"twitter_handle\\\"\\n                                            >\\n                                            <div v-if=\\\"form.errors.twitter_handle\\\" v-text=\\\"form.errors.twitter_handle\\\"\\n                                                 class=\\\"errorClass\\\"></div>\\n                                        </div>\\n\\n                                    </form>\\n\\n                                </div>\\n                                <!-- End Right Column -->\\n                            </div>\\n                            <!-- End grid 2-col -->\\n\\n\\n                            <div class=\\\"flex justify-end my-6 mr-6\\\">\\n                                <JetValidationErrors class=\\\"mr-4\\\" />\\n                                <button\\n                                    @click=\\\"submit\\\"\\n                                    class=\\\"bg-blue-600 hover:bg-blue-500 text-white rounded py-2 px-4\\\"\\n                                    :disabled=\\\"form.processing\\\"\\n                                >\\n                                    Save\\n                                </button>\\n                            </div>\\n\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n\\n        </div>\\n    </div>\\n\\n</template>\\n\\n<script setup>\\nimport { Inertia } from \\\"@inertiajs/inertia\\\"\\nimport {useForm, usePage} from \\\"@inertiajs/inertia-vue3\\\"\\nimport { usePageSetup } from '@/Utilities/PageSetup'\\nimport { useAppSettingStore } from \\\"@/Stores/AppSettingStore\\\"\\nimport { useVideoPlayerStore } from \\\"@/Stores/VideoPlayerStore\\\"\\nimport { useMovieStore } from \\\"@/Stores/MovieStore\\\"\\nimport JetValidationErrors from '@/Jetstream/ValidationErrors'\\nimport TabbableTextarea from \\\"@/Components/Global/TextEditor/TabbableTextarea\\\"\\nimport Message from \\\"@/Components/Global/Modals/Messages\\\"\\nimport SingleImage from \\\"@/Components/Global/Multimedia/SingleImage\\\"\\nimport ImageUpload from \\\"@/Components/Global/Uploaders/ImageUpload\\\"\\nimport VideoUpload from \\\"@/Components/Global/Uploaders/VideoUpload\\\"\\nimport CancelButton from \\\"@/Components/Global/Buttons/CancelButton.vue\\\"\\nimport { computed, onBeforeUnmount, onMounted, ref, toRefs, watch } from 'vue'\\n\\nusePageSetup('movieEdit')\\n\\nconst appSettingStore = useAppSettingStore()\\nconst videoPlayerStore = useVideoPlayerStore()\\nconst movieStore = useMovieStore()\\n\\nlet props = defineProps({\\n    movie: Object,\\n    video: Object,\\n    trailer: Object,\\n    image: Object,\\n    categories: Object,\\n    statuses: Object,\\n    creative_commons: Object,\\n    can: Object,\\n})\\n\\nlet selectedCategoryId = ref(props.movie.movie_category_id);\\nlet selectedSubCategoryId = ref(props.movie.movie_category_sub_id);\\nconst selectedCreativeCommons = ref(props.movie.creative_commons_id);\\nlet selectedCopyrightYear = ref(props.movie.copyrightYear);\\nlet selectedReleaseYear = ref(props.movie.release_year);\\nconst currentYear = new Date().getFullYear();\\n\\nconst subCategories = computed(() => {\\n  const category = props.categories.find(cat => cat.id === selectedCategoryId.value);\\n  return category ? category.sub_categories : [];\\n});\\n\\nconst handleCreativeCommonsChange = () => {\\n  if (selectedCreativeCommons.value === 8) {\\n    selectedCopyrightYear.value = null;\\n  } else if (selectedCopyrightYear.value === null) {\\n    // Pre-populate with current year only if copyrightYear is null\\n    selectedCopyrightYear.value = currentYear;\\n  }\\n};\\n\\nconst selectedCreativeCommonsDescription = computed(() => {\\n  const selectedCC = props.creative_commons.find((cc) => cc.id === selectedCreativeCommons.value);\\n  return selectedCC ? selectedCC.description : '';\\n});\\n\\nconst handleReleaseYearChange = () => {\\n  if (selectedReleaseYear.value === null) {\\n    // Pre-populate with current year only if copyrightYear is null\\n    selectedReleaseYear.value = currentYear;\\n  }\\n};\\n\\n// const releaseYear = computed(() => {\\n//   return props.movie.release_year === null ? new Date().getFullYear() : props.movie.release_year;\\n// });\\n\\n// Initialize releaseYear with either the movie's release_year or the current year\\n// form.releaseYear = props.movie.release_year ?? new Date().getFullYear();\\n// Destructure props for easier access\\n// const { movie, video } = toRefs(props);\\n\\n// Handling nullable release_year\\n// const releaseYear = computed(() => movie.value.release_year ?? new Date().getFullYear());\\n\\n\\n// Watchers to update the store based on category and subcategory selections\\nwatch(selectedCategoryId, () => {\\n  movieStore.initializeDescriptions(selectedCategoryId.value, selectedSubCategoryId.value);\\n}, { immediate: true });\\n\\nwatch(selectedSubCategoryId, () => {\\n  movieStore.updateSubCategoryDescription(selectedSubCategoryId.value);\\n});\\n\\nonMounted(() => {\\n  movieStore.categories = props.categories;\\n  movieStore.initializeDescriptions(selectedCategoryId.value, selectedSubCategoryId.value);\\n  watch(() => props.movie.creative_commons_id, (newVal) => {\\n    selectedCreativeCommons.value = newVal;\\n    handleCreativeCommonsChange();\\n  });\\n});\\n\\nconst chooseCategory = () => {\\n  // Update the selected category ID based on the new selection\\n  // Vue automatically updates selectedCategoryId due to v-model binding\\n  // So, there is no need to manually set it here\\n\\n  // Call the store method to update descriptions and subcategories\\n  movieStore.initializeDescriptions(selectedCategoryId.value, selectedSubCategoryId.value);\\n};\\n\\nconst chooseSubCategory = () => {\\n  // Update the store state based on the new subcategory selection\\n  movieStore.updateSubCategoryDescription(selectedSubCategoryId.value);\\n};\\n\\n\\n\\n// let subCategory = ref(null);\\n\\nlet form = useForm({\\n    id: props.movie.id,\\n    name: props.movie.name,\\n    status: props.movie.status_id,\\n    release_year: selectedReleaseYear,\\n    copyrightYear: selectedCopyrightYear,\\n    creative_commons_id: selectedCreativeCommons.value,\\n    category: movieStore.category_id,\\n    sub_category: movieStore.sub_category_id,\\n    description: props.movie.description,\\n    logline: props.movie.logline,\\n    user_id: props.movie.user_id,\\n    team_id: props.movie.team_id,\\n    video_url: props.video.video_url ?? null,\\n    www_url: props.movie.www_url,\\n    instagram_name: props.movie.instagram_name,\\n    telegram_url: props.movie.telegram_url,\\n    twitter_handle: props.movie.twitter_handle,\\n})\\n\\nlet submit = () => {\\n  form.category = movieStore.category_id;\\n  form.sub_category = movieStore.sub_category_id;\\n  form.copyrightYear = selectedCopyrightYear;\\n  form.creative_commons_id = selectedCreativeCommons.value;\\n  form.release_year = selectedReleaseYear.value;\\n  form.patch(route('movies.update', props.movie.slug));\\n}\\n\\nlet reloadImage = () => {\\n    Inertia.reload({\\n        only: ['image'],\\n    });\\n};\\n\\n\\n\\n// let category = ref();\\n\\n// function chooseCategory(event) {\\n// movieStore.category_description =  props.categories[event.target.selectedIndex].description;\\n// }\\n\\n\\n// Computed property to filter subcategories based on the selected category\\n// const subCategories = computed(() => {\\n//   const category = props.categories.find(cat => cat.id === selectedCategoryId.value);\\n//   return category ? category.sub_categories : [];\\n// });\\n\\n\\n\\n\\n\\n// Initialize and update descriptions when IDs change\\n// watch([selectedCategoryId, selectedSubCategoryId], () => {\\n//   movieStore.initializeDescriptions(props.categories, selectedCategoryId.value, selectedSubCategoryId.value);\\n//\\n// }, { immediate: true });\\n\\n// watch([subCategories, selectedCategoryId, selectedSubCategoryId], () => {\\n//   movieStore.initializeDescriptions(selectedCategoryId.value, selectedSubCategoryId.value);\\n//\\n// }, { immediate: true });\\n\\n// Initialize on mount\\n// onMounted(() => {\\n//   // movieStore.initializeDescriptions(props.categories, selectedCategoryId.value, selectedSubCategoryId.value);\\n//   // movieStore.initializeDescriptions(props.categories, props.movie.movie_category_id, props.movie.movie_category_sub_id);\\n//   movieStore.categories = props.categories\\n//   movieStore.category_id = props.movie.movie_category_id\\n//   movieStore.category_description = props.movie.movie_category.description\\n//   movieStore.sub_category_id = props.movie.movie_category_sub_id\\n//   movieStore.sub_category_description = props.movie.movie_category_sub.description\\n//\\n//   // movieStore.initializeDescriptions()\\n// });\\n\\n// // Initialize category and subcategory descriptions\\n// const initializeDescriptions = () => {\\n//   const category = props.categories.find(cat => cat.id === selectedCategoryId.value);\\n//   movieStore.category_id = category ? category.id : '';\\n//   movieStore.category_description = category ? category.description : '';\\n//   movieStore.sub_categories = category ? category.sub_categories : [];\\n//\\n//   subCategory = subCategories.value.find(sub => sub.id === selectedSubCategoryId.value);\\n//   movieStore.sub_category_id = subCategory ? subCategory.id : '';\\n//   movieStore.sub_category_description = subCategory ? subCategory.description : '';\\n//   console.log('GARCK' + selectedSubCategoryId.value)\\n//   movieStore.sub_category_id = selectedSubCategoryId.value;\\n// };\\n//\\n// // Call the function to set initial descriptions\\n// initializeDescriptions();\\n//\\n// // When a category is chosen\\n// const chooseCategory = () => {\\n//   selectedCategoryId.value = parseInt(event.target.value);\\n//   initializeDescriptions(); // Re-initialize to update subcategories and descriptions\\n// };\\n//\\n// // When a subcategory is chosen\\n// const chooseSubCategory = () => {\\n//   subCategory = movieStore.sub_categories.find(sub => sub.id === selectedSubCategoryId.value);\\n//   console.log('FFFFFFAAAAAA' + selectedSubCategoryId.value)\\n//   movieStore.sub_category_id = subCategory ? subCategory.id : '';\\n//   movieStore.sub_category_description = subCategory ? subCategory.description : '';\\n// };\\n\\n// Watchers to update descriptions when IDs change\\n// watch(selectedCategoryId, () => {\\n//   const category = props.categories.find(cat => cat.id === selectedCategoryId.value);\\n//   movieStore.category_description = category ? category.description : '';\\n//   selectedSubCategoryId.value = null; // Reset subcategory selection\\n// });\\n//\\n// watch(selectedSubCategoryId, () => {\\n//   console.log('GET FLIGHTY' + selectedSubCategoryId.value)\\n//   const subCategory = movieStore.sub_categories.find(sub => sub.id === selectedSubCategoryId.value);\\n//   movieStore.sub_category_id = subCategory ? subCategory.id : '';\\n//\\n//   movieStore.sub_category_description = subCategory ? subCategory.description : '';\\n// });\\n\\n\\n// const chooseCategory = (event) => {\\n//   selectedCategoryId.value = parseInt(event.target.value);\\n// };\\n//\\n// const chooseSubCategory = (subCategoryId) => {\\n//   selectedSubCategoryId.value = subCategoryId;\\n// };\\n\\nfunction muteMainVideo(){\\n    videoPlayerStore.mute();\\n}\\n\\nfunction back() {\\n    let urlPrev = usePage().props.value.urlPrev\\n    if (urlPrev !== 'empty') {\\n        Inertia.visit(urlPrev)\\n    }\\n}\\n\\nonBeforeUnmount(() => {\\n  movieStore.reset(); // Call the reset method of your store\\n});\\n\\n</script>\\n<style scoped>\\n.topBannerErrorMessage {\\n  background-color: black; /* bg-black */\\n  padding: 0.5rem; /* p-2 */\\n  width: 100%; /* w-full */\\n  color: white; /* text-white */\\n  font-weight: 600; /* font-semibold, for bold you might want to use 700 */\\n  font-size: 1rem; /* Adjust based on your design, as Tailwind's text sizes are utility-based */\\n}\\n.errorClass {\\n  color: lightgreen;\\n  font-weight: 600; /* font-semibold, for bold you might want to use 700 */\\n}\\n</style>\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import script from \"./CancelButton.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CancelButton.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n    <button\n        @click.prevent=\"cancel\"\n        class=\"ml-2 px-4 py-2 text-white bg-orange-600 hover:bg-orange-500 rounded-lg\"\n    >Cancel\n    </button>\n  </div>\n</template>\n\n<script setup>\nimport { Inertia } from \"@inertiajs/inertia\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useUserStore } from '@/Stores/UserStore'\n\nconst appSettingStore = useAppSettingStore()\nconst userStore = useUserStore()\n\nlet props = defineProps({\n  url: String\n})\n\nfunction cancel() {\n  if (appSettingStore.prevUrl) {\n    if (props.url) {\n      Inertia.visit(props.url)\n    } else {\n      Inertia.visit(appSettingStore.prevUrl)\n    }\n  } else {\n    if (props.url) {\n      Inertia.visit(props.url)\n    } else {\n      // Fallback if prevUrl is not available\n      let prevUrl = userStore.isCreator ? '/dashboard' : '/';\n      Inertia.visit(prevUrl);\n    }\n  }\n}\n</script>\n","import script from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"mx-4 my-4\">\n    <div class=\"alert alert-info mt-4\"\n         v-if=\"props.flash.message\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" class=\"stroke-current shrink-0 w-6 h-6\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n      </svg>\n      <span>{{ props.flash.message }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-success mt-4 mx-3\"\n         v-if=\"props.flash.success\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.success }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-warning mt-4 mx-3\"\n         v-if=\"props.flash.warning\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"/>\n      </svg>\n      <span>{{ props.flash.warning }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-error mt-4 mx-3\"\n         v-if=\"props.flash.error\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.error }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n  </div>\n\n</template>\n\n<script setup>\nimport { Inertia } from \"@inertiajs/inertia\"\nimport { computed } from \"vue\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\n\nconst appSettingStore = useAppSettingStore()\n\nappSettingStore.showFlashMessage = true\n\nlet props = defineProps({\n  flash: Object,\n\n})\n\nconst messageType = computed(() => ({\n  'text-green-700 bg-green-100 dark:bg-green-200 dark:text-green-800': props.flash.success,\n  'text-blue-700 bg-blue-100 dark:bg-blue-200 dark:text-blue-800': props.flash.message,\n  'text-orange-700 bg-orange-100 dark:bg-orange-200 dark:text-orange-800': props.flash.warning,\n  'text-red-700 bg-red-100 dark:bg-red-200 dark:text-red-800': props.flash.error,\n}))\n\nconst clearFlashMessage = async () => {\n  await Inertia.post(route('flash.clear'));\n  Inertia.reload();\n};\n</script>\n","import script from \"./TabbableTextarea.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TabbableTextarea.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n<!--    <textarea-->\n<!--        @keydown.tab.prevent=\"onTabPress\"-->\n<!--        @keyup=\"emit('update:modelValue', $event.target.value)\"-->\n<!--        v-text=\"modelValue\"-->\n<!--        :placeholder=\"placeholder\" />-->\n  <textarea\n      @keydown.tab.prevent=\"onTabPress\"\n      @input=\"onInput\"\n      :value=\"modelValue\"\n      :placeholder=\"placeholder\"\n      class=\"textarea textarea-bordered\"\n  />\n</template>\n\n<script setup>\ndefineProps({\n  modelValue: String,\n  placeholder: String\n});\n\nconst emit = defineEmits(['update:modelValue']);\n// let emit = defineEmits(['update:modelValue']);\n\nconst onInput = (event) => {\n  emit('update:modelValue', event.target.value);\n};\n\nfunction onTabPress(e) {\n  let textarea = e.target;\n\n  // get caret position/selection\n  let val = textarea.value,\n      start = textarea.selectionStart,\n      end = textarea.selectionEnd;\n\n  // set textarea value to: text before caret + tab + text after caret\n  textarea.value = val.substring(0, start) + \"\\t\" + val.substring(end);\n\n  // put caret at right position again\n  textarea.selectionStart = textarea.selectionEnd = start + 1;\n}\n\n</script>\n","import script from \"./ImageUpload.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ImageUpload.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"\">\n    <div class=\"max-full mx-auto mt-2 mb-6 bg-gray-200 p-6 text-black\">\n      <h2 class=\"text-xl font-semibold\">{{ name }}</h2>\n\n      <ul class=\"pb-4\">\n        <li>Max File Size: <span class=\"text-orange-400\">{{ maxSize }}</span></li>\n        <li>File Types accepted: <span class=\"text-orange-400\">{{ fileTypes }}</span></li>\n      </ul>\n      <file-pond\n          name=\"image\"\n          ref=\"pond\"\n          label-idle=\"Click to choose file, or drag here...\"\n          @init=\"filepondInitialized\"\n          :server=\"serverOptions\"\n          :accepted-file-types=\"fileTypes\"\n          @processfile=\"handleProcessedFile\"\n          :max-file-size=\"maxSize\"\n      />\n      <!--        <file-pond-->\n      <!--            ref=\"filePond\"-->\n      <!--            :files=\"files\"-->\n      <!--            :server=\"serverOptions\"-->\n      <!--            @init=\"handleFilePondInit\"-->\n      <!--            @beforeaddfile=\"handleBeforeAddFile\"-->\n      <!--            @processfile=\"handleProcessedFile\"-->\n      <!--        />-->\n    </div>\n  </div>\n\n</template>\n\n<script setup>\nimport { useNotificationStore } from '@/Stores/NotificationStore'\nimport vueFilePond, { setOptions } from 'vue-filepond'\nimport FilePondPluginFileValidateType from \"filepond-plugin-file-validate-type\"\nimport FilePondPluginFileValidateSize from \"filepond-plugin-file-validate-size\"\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\"\nimport FilePondPluginFileMetadata from \"filepond-plugin-file-metadata\"\nimport 'filepond/dist/filepond.min.css'\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.min.css'\n\nconst notificationStore = useNotificationStore()\n\nlet props = defineProps({\n  image: Object,\n  name: String,\n  metadataKey: String,\n  metadataValue: String,\n  modelType: String,\n  modelId: String,\n  maxSize: String,\n  fileTypes: String,\n})\n\n\n// // Initialize FilePond with the File Metadata plugin\n// const filePondOptions = {\n//     allowMultiple: false,\n//     labelIdle: \"Drop files here or click to upload\",\n//     plugins: [FilePondPluginFileMetadata()],\n// };\n\n\n// Files array to store uploaded files\n// const files = ref([]);\n\nconst metadataKey = props.metadataKey\nconst metadataValue = props.metadataValue\nconst customMetadata = {\n  [metadataKey]: metadataValue\n};\n// customMetadata.value[props.metadataKey] = 'bar';\n// customMetadata.value[props.metadataKey] = props.metadataValue;\n// const customMetadata = ref({ [props.metadataKey]: props.metadataValue });\n// const customMetadata = computed(() => ({\n//     [props.metadataKey]: props.metadataValue,\n// }));\n\n// FilePond server options (you can customize this)\nconst serverOptions = {\n  process: (fieldName, file, metadata, load, error, progress, abort) => {\n    const formData = new FormData();\n    formData.append('image', file, file.name); // Attach the file\n    // Append modelType and modelId if it's part of your component\n    if (props.modelType) {\n      formData.append('modelType', props.modelType);\n    }\n    if (props.modelId) {\n      formData.append('modelId', props.modelId);\n    }\n\n    // Axios request configuration\n    const config = {\n      onUploadProgress: (event) => {\n        // Calculate and update progress\n        progress(event.lengthComputable, event.loaded, event.total);\n      },\n    };\n\n    // Perform the Axios POST request\n    axios.post('/api/image-upload', formData, config)\n        .then(response => {\n          // FilePond expects the server to return a file ID on successful upload,\n          // but you can adjust this based on your response structure.\n          load(response.data.fileId);\n        })\n        .catch(err => {\n          // Default error message and title in case err.response is undefined\n          let errorMessage = 'An unexpected error occurred during the upload. Please try again.';\n          let errorTitle = 'Upload Error';\n\n          // Check if the error response exists and has data\n          if (err.response && err.response.data) {\n            // Example: Extracting error message from server response\n            // Adjust based on your server's error response structure\n            if (typeof err.response.data === 'object' && err.response.data.errors) {\n              // If the errors are in object format, you might want to convert them to a string\n              const errors = err.response.data.errors;\n              const errorMessages = Object.keys(errors).map(key => `${key}: ${errors[key].join(', ')}`).join('\\n');\n              errorMessage = `Upload failed with errors:\\n${errorMessages}`;\n            } else if (typeof err.response.data === 'string') {\n              // Directly use the error string as the message\n              errorMessage = err.response.data;\n            }\n          }\n\n          // Use the errorMessage and errorTitle in your notification\n          notificationStore.setGeneralServiceNotification(errorTitle, errorMessage);\n\n          // Pass a generic error message to FilePond's error handler to avoid displaying sensitive or detailed information directly in the UI\n          error('An error occurred during the upload.');\n        });\n\n\n    // Return an abort function to stop the upload if needed\n    return {\n      abort: () => {\n        // This function is called if the user aborts the upload\n        console.log(\"Upload aborted by the user.\");\n        abort();\n      }\n    };\n  },\n};\n\n\n// Initialize FilePond\n// const handleFilePondInit = () => {\n//     // FilePond has been initialized\n//     console.log(\"FilePond is ready\");\n// };\n\n// Handle the beforeaddfile event\n// const handleBeforeAddFile = (file) => {\n//     // Add metadata to the file object\n//     file.setMetadata(\"key\", \"value\");\n//     // You can set multiple metadata fields as needed\n//     // file.setMetadata(\"anotherKey\", \"anotherValue\");\n// };\n\n\nconst FilePond = vueFilePond(\n    FilePondPluginFileValidateType,\n    FilePondPluginFileValidateSize,\n    FilePondPluginImagePreview,\n    FilePondPluginFileMetadata\n);\n\n// Handle the beforeaddfile event\n// const handleBeforeAddFile = (file) => {\n//     // Add metadata to the file object\n//     file.setMetadata(\"show_id\", \"1\");\n//     // You can set multiple metadata fields as needed\n//     // file.setMetadata(\"anotherKey\", \"anotherValue\");\n// };\n\n// FilePond.registerPlugin(FilePondPluginFileMetadata);\nFilePond.setOptions = ({\n  fileMetadataObject: {\n    show_id: '1',\n  },\n});\n\n\n// Initialize FilePond with the File Metadata plugin\n// const filePondOptions = {\n//     allowMultiple: true,\n//     labelIdle: \"Drop files here or click to upload\",\n//     plugins: [FilePondPluginFileMetadata()],\n// };\n\nfunction filepondInitialized() {\n  console.log(\"Filepond is ready!\");\n  // console.log('Filepond object:', FilePond);\n\n}\n\nconst emit = defineEmits(['reloadImage'])\n\nfunction handleProcessedFile(error, file) {\n  if (error) {\n    console.log(\"Filepond processed file\");\n    console.log(error);\n    console.log(file);\n    return;\n  }\n\n  emit('reloadImage')\n\n  // Inertia.reload({\n  //     only: ['image'],\n  // });\n}\n\n</script>\n","<template>\n  <div>\n\n    <progress v-show=\"userStore.uploadPercentage !== 0\" max=\"100\" :value=\"userStore.uploadPercentage\" class=\"w-full\"/>\n    <div v-show=\"userStore.uploadPercentage !== 0\" class=\"w-full mb-4\">{{ userStore.uploadPercentageRounded }}%</div>\n\n    <div v-show=\"uploadingMessage\" class=\"mb-4 font-bold text-center\">Please stay on this screen until upload is\n      complete.\n    </div>\n    <div v-show=\"uploadComplete\" class=\"mb-4 font-bold text-center\">Upload is complete. The video is now\n      processing.\n    </div>\n    <form v-show=\"!isHidden\" id=\"videoUploadForm\" action=\"/videoupload\"\n          class=\"dropzone dropzoneFile border border-black rounded w-full h-48 max-w-md px-2 py-2 mb-6\">\n      <!--                            add input fields and a submit button to send data back to Laravel -->\n      <input hidden name=\"movieId\" v-model=\"form.movieId\">\n      <!--            <input hidden name=\"movieTrailerId\" v-model=\"form.movieTrailerId\">-->\n      <input hidden name=\"showEpisodeId\" v-model=\"form.showEpisodeId\">\n    </form>\n\n  </div>\n</template>\n\n<script setup>\nimport { Inertia } from \"@inertiajs/inertia\"\nimport { onMounted, ref } from \"vue\"\nimport { useForm } from \"@inertiajs/inertia-vue3\"\nimport { Dropzone } from \"dropzone\"\nimport { useUserStore } from \"@/Stores/UserStore\"\nimport { useUploadStore } from \"@/Stores/UploadStore\"\n\nconst userStore = useUserStore()\nconst uploadStore = useUploadStore()\n\nlet uploadPercentage = ref(0)\nlet uploadingMessage = ref(false)\nlet uploadComplete = ref(false)\nlet isHidden = ref(false)\n\nconst emits = defineEmits(['upload-start', 'upload-finished']);\n\nconst uploadCompleteMessage = () => {\n  uploadingMessage = false\n  uploadComplete = true\n}\n\nconst uploadStarted = () => {\n  uploadingMessage = true\n  emits('upload-start');\n}\n\nfunction onUploadSuccess(videoId) {\n  emits('upload-finished', videoId);\n  uploadStore.setVideoId(videoId);\n  uploadStore.setUploadStatus('processing');\n}\n\nonMounted(() => {\n  // Make sure the element with the ID \"videoUploadForm\" is available in the DOM.\n  const videoUploadForm = document.getElementById('videoUploadForm');\n\n  if (videoUploadForm) {\n    // Initialize Dropzone on the element.\n\n    // see options for Dropzone here: https://github.com/dropzone/dropzone/blob/main/src/options.js\n    let myDropzone = new Dropzone(\"#videoUploadForm\", {\n      url: \"/videoupload\",\n      paramName: \"file\", // The name that will be used to transfer the file\n      maxFilesize: '25 GB', // MB\n      chunking: true,\n      chunkSize: 2 * 1024 * 1024,\n      parallelChunkUploads: false,\n      retryChunks: true,\n      retryChunksLimit: 10,\n      capture: null,\n      // can set the capture method as camera, microphone or video\n      // for mobile devices to skip the file selection and choose the\n      // recording device instead.\n      acceptedFiles: 'video/*, audio/*',\n      uploadprogress: function (file, progress, bytesSent) {\n        userStore.uploadPercentage = progress;\n        console.log(userStore.uploadPercentage);\n        if (userStore.uploadPercentage !== 100) {\n          isHidden = true;\n        }\n      },\n      dictDefaultMessage: \"Click here or Drop video here to upload <br>(Max video file size is 25GB)\",\n      forceFallback: false, // for testing, set to true.\n      accept: function (file, done) {\n        if (file.name === \"\") {\n          done(\"Need a file.\");\n        } else if (file.size > 25000000000) {\n          console.log(file.size)\n          done(\"Video file too big.\");\n          alert('Video file must be smaller than 25GB');\n        } else {\n          done();\n        }\n      }\n    });\n\n    myDropzone.on(\"addedfile\", file => {\n      uploadStarted()\n      console.log(`File added: ${file.name}`);\n    });\n\n    myDropzone.on(\"success\", function(file, response) {\n      // Assuming 'response' contains the videoId after the file is uploaded\n      if (response.videoId) {\n        console.log(response.videoId)\n        const videoId = response.videoId;\n        if (videoId) {\n          onUploadSuccess(videoId);\n          // onUploadSuccess(response.videoId);\n        }\n      }\n    });\n\n    myDropzone.on(\"complete\", function (file, response) {\n      uploadCompleteMessage()\n      myDropzone.removeFile(file);\n      userStore.uploadPercentage = 0;\n      isHidden = false;\n      Inertia.reload({\n        only: [\"videos\"],\n      });\n    });\n\n  } else {\n    console.error('Element with ID \"videoUploadForm\" not found in the DOM.');\n  }\n})\n\nlet props = defineProps({\n  movieId: Number,\n  movieTrailerId: Number,\n  showEpisodeId: Number,\n})\n\nfunction setMovieOrEpisodeId() {\n  if (props.movieId !== null) {\n    userStore.uploadMovieId = props.mov;\n  } else if (props.movieTrailerId !== null) {\n    userStore.movieTrailerId = props.movieTrailerId;\n  } else if (props.showEpisodeId !== null) {\n    userStore.uploadShowEpisodeId = props.showEpisodeId;\n  }\n}\n\nsetMovieOrEpisodeId()\n\nlet form = useForm({\n  file: [],\n  // movieId: userStore.uploadMovieId,\n  movieId: props.movieId,\n  movieTrailerId: props.movieId,\n  showEpisodeId: props.showEpisodeId,\n});\n\n// let props = defineProps({\n//     filters: Object,\n//     can: Object,\n//     videos: Object,\n//     message: String,\n//     errors: ref(''),\n//     isHidden: ref(false),\n//     done: ref(),\n// });\n\n</script>\n<style scoped>\n\n.dropzone {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  row-gap: 16px;\n  border: 2px dashed #000000;\n  background-color: #fce4bb;\n  transition: 0.3s ease all;\n}\n\nlabel {\n  padding: 8px 12px;\n  color: #fff;\n  background-color: #4bb1b1;\n  transition: 0.3s ease all;\n}\n\n.active-dropzone {\n  color: #fff;\n  border-color: #fff;\n  background-color: #4bb1b1;\n}\n\n.active-dropzone label {\n  background-color: #fff;\n  color: #4bb1b1;\n}\n\n/*6b7280*/\n/*4bb1b1*/\n\n</style>\n","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-9.use[1]!../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-9.use[2]!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./VideoUpload.vue?vue&type=style&index=0&id=21826cbb&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./VideoUpload.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./VideoUpload.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./VideoUpload.vue?vue&type=style&index=0&id=21826cbb&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-21826cbb\"]])\n\nexport default __exports__","import script from \"./ValidationErrors.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ValidationErrors.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { computed } from 'vue';\nimport { usePage } from '@inertiajs/inertia-vue3';\n\nconst errors = computed(() => usePage().props.value.errors);\nconst hasErrors = computed(() => Object.keys(errors.value).length > 0);\n</script>\n\n<template>\n    <div v-if=\"hasErrors\">\n        <div class=\"font-medium text-red-600\">\n            Whoops! Something went wrong.\n        </div>\n\n        <ul class=\"mt-3 list-disc list-inside text-sm text-red-600\">\n            <li v-for=\"(error, key) in errors\" :key=\"key\">\n                {{ error }}\n            </li>\n        </ul>\n    </div>\n</template>\n","<template>\n\n    <Head :title=\"`Edit Movie: ${movie.name}`\"/>\n\n    <div class=\"place-self-center flex flex-col gap-y-3\">\n        <div id=\"topDiv\" class=\"bg-dark text-light p-5 mb-10 pt-6\">\n\n            <Message v-if=\"appSettingStore.showFlashMessage\" :flash=\"$page.props.flash\"/>\n\n            <header>\n                <div class=\"flex justify-between mb-6\">\n                    <div>\n                        <div class=\"font-bold mb-4 text-red-700\">EDIT MOVIE</div>\n                        <h1 class=\"text-3xl\">\n                            <Link :href=\"`/movies/${movie.slug}`\" class=\"text-red-700 font-bold uppercase\">{{ movie.name }}</Link>\n                        </h1>\n                    </div>\n                  <div class=\"flex flex-row flex-wrap\">\n                    <button\n                        @click=\"submit\"\n                        class=\"h-fit bg-blue-600 hover:bg-blue-500 text-white rounded py-2 px-4 mr-2\"\n                        :disabled=\"form.processing\"\n                    >\n                      Save\n                    </button>\n                    <CancelButton />\n                  </div>\n\n                </div>\n            </header>\n\n            <div class=\"flex flex-col\">\n                <div class=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\n                    <div class=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\n                        <div class=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\n\n\n                            <div v-if=\"form.errors.name\" v-text=\"form.errors.name\"\n                                 class=\"topBannerErrorMessage\"></div>\n                            <div v-if=\"form.errors.description\" v-text=\"form.errors.description\"\n                                 class=\"topBannerErrorMessage\"></div>\n                          <div v-if=\"form.errors.logline\" v-text=\"form.errors.logline\"\n                               class=\"topBannerErrorMessage\"></div>\n                          <div v-if=\"form.errors.release_year\" v-text=\"form.errors.release_year\"\n                               class=\"topBannerErrorMessage\"></div>\n                          <div v-if=\"form.errors.release_date\" v-text=\"form.errors.release_date\"\n                               class=\"topBannerErrorMessage\"></div>\n                          <div v-if=\"form.errors.creative_commons_id\" v-text=\"form.errors.creative_commons_id\"\n                               class=\"topBannerErrorMessage\"></div>\n                          <div v-if=\"form.errors.copyrightYear\" v-text=\"form.errors.copyrightYear\"\n                               class=\"topBannerErrorMessage\"></div>\n                          <div v-if=\"form.errors.category\" v-text=\"form.errors.category\"\n                               class=\"topBannerErrorMessage\"></div>\n                          <div v-if=\"form.errors.sub_category\" v-text=\"form.errors.sub_category\"\n                               class=\"topBannerErrorMessage\"></div>\n                          <div v-if=\"form.errors.video_url\" v-text=\"form.errors.video_url\"\n                               class=\"topBannerErrorMessage\"></div>\n                          <div v-if=\"form.errors.www_url\" v-text=\"form.errors.www_url\"\n                               class=\"topBannerErrorMessage\"></div>\n                          <div v-if=\"form.errors.instagram_name\" v-text=\"form.errors.instagram_name\"\n                               class=\"topBannerErrorMessage\"></div>\n                          <div v-if=\"form.errors.telegram_url\" v-text=\"form.errors.telegram_url\"\n                               class=\"topBannerErrorMessage\"></div>\n                          <div v-if=\"form.errors.twitter_handle\" v-text=\"form.errors.twitter_handle\"\n                               class=\"topBannerErrorMessage\"></div>\n                          <div v-if=\"form.errors.notes\" v-text=\"form.errors.notes\"\n                               class=\"topBannerErrorMessage\"></div>\n                          <div v-if=\"form.errors.status\" v-text=\"form.errors.status\"\n                               class=\"topBannerErrorMessage\"></div>\n                            <!--                            <div v-if=\"form.errors.video_file_embed_code\" v-text=\"form.errors.video_file_embed_code\"-->\n                            <!--                                 class=\"topBannerErrorMessage-->\n\n\n                            <!-- Begin grid 2-col -->\n                            <div class=\"grid grid-cols-1 sm:grid-cols-2 space-x-6 p-6\">\n\n\n                                <!--Left Column-->\n                                <div>\n                                    <div class=\"flex space-y-3\">\n                                        <div class=\"mb-6\">\n                                            <SingleImage :image=\"image\" :key=\"image\"/>\n                                        </div>\n                                    </div>\n\n                                    <div class=\"w-full\">\n\n                                        <label class=\"block mb-2 uppercase font-bold text-xs text-light text-red-700\"\n                                               for=\"name\"\n                                        >\n                                            Change Movie Poster\n                                        </label>\n\n                                        <ImageUpload :image=\"image\"\n                                                     :modelType=\"'movie'\"\n                                                     :modelId=\"movie.id\"\n                                                     :name=\"'Upload Movie Poster'\"\n                                                     :maxSize=\"'30MB'\"\n                                                     :fileTypes=\"'image/jpg, image/jpeg, image/png'\"\n                                                     @reloadImage=\"reloadImage\"\n                                        />\n\n                                    </div>\n\n                                    <div class=\"flex space-y-3\">\n                                        <div class=\"mb-6 bg-black w-full p-6\">\n                                            <span\n                                                v-if=\"video.upload_status === 'processing'\"\n                                                class=\"text-center place-self-center text-white font-semibold text-xl\">Video processing...</span>\n                                            <video v-if=\"video.upload_status !== 'processing'\" :src=\"video.cdn_endpoint+video.cloud_folder+video.folder+'/'+video.file_name\" :type=\"video.type\" controls></video>\n                                        </div>\n                                    </div>\n\n                                    <div class=\"\">\n                                        <label class=\"block mb-2 uppercase font-bold text-xs text-red-700\"\n                                               for=\"name\"\n                                        >\n                                            Upload Movie\n                                        </label>\n                                        <div class=\"max-full mx-auto mt-2 mb-6 bg-gray-200 px-6 pt-4 pb-2 text-dark\">\n                                            <h2 class=\"text-xl font-semibold text-gray-800\">Upload Video</h2>\n\n                                            <ul class=\"pb-4 text-gray-800\">\n                                                <li>Max Video Length: <span class=\"text-orange-400\">4 hours</span>\n                                                </li>\n                                                <li>File Types accepted: <span class=\"text-orange-400\">mp4, webm, ogg</span>\n                                                </li>\n                                            </ul>\n\n                                            <VideoUpload :movieId=\"movie.id\" class=\"text-black\"/>\n\n                                        </div>\n\n\n\n                                    </div>\n\n\n\n\n                                    <div class=\"flex space-y-3\">\n                                        <div class=\"mb-6 bg-black w-full p-6\">\n<!--                                            VIDEO HERE-->\n                                        </div>\n                                    </div>\n\n                                    <div>\n                                        <label class=\"block mb-2 uppercase font-bold text-xs text-red-700\"\n                                               for=\"name\"\n                                        >\n                                            Upload Movie Trailer\n                                        </label>\n                                        <div class=\"max-full mx-auto mt-2 mb-6 bg-gray-200 px-6 pt-4 pb-2 text-dark\">\n                                            <h2 class=\"text-xl font-semibold text-gray-800\">Upload Video</h2>\n\n                                            <ul class=\"pb-4 text-gray-800\">\n                                                <li>Max Video Length: <span class=\"text-orange-400\">4 hours</span>\n                                                </li>\n                                                <li>File Types accepted: <span class=\"text-orange-400\">mp4, webm, ogg</span>\n                                                </li>\n                                            </ul>\n\n<!--                                            <VideoUpload class=\"text-black\"/>-->\n\n                                        </div>\n\n                                    </div>\n\n\n\n                                </div>\n\n\n\n                            <!--Right Column-->\n                                <div>\n\n                                    <form @submit.prevent=\"submit\">\n\n                                      <div class=\"mb-6\">\n                                        <label class=\"block mb-2 uppercase font-bold text-xs text-red-700\"\n                                               for=\"status\"\n                                        >\n                                          Status\n                                        </label>\n\n                                        <div class=\"text-sm mb-2\">Set the status to Active to make the movie accessible to the public. Set the status to Creators only to only make it available to creators. All other statuses will only be viewable by you.</div>\n\n                                        <select required class=\"border border-gray-400 text-gray-800 p-2 w-1/2 rounded-lg block mb-2 uppercase font-bold text-xs \"\n                                                v-model=\"form.status\"\n                                        >\n                                          <option v-for=\"status in statuses\"\n                                                  :key=\"status.id\" :value=\"status.id\">{{status.name}}</option>\n\n\n                                        </select>\n                                        <div v-if=\"form.errors.status\" v-text=\"form.errors.status\"\n                                             class=\"errorClass\"></div>\n                                      </div>\n\n                                        <div class=\"mb-6\">\n                                            <label class=\"block mb-2 uppercase font-bold text-xs text-red-700\"\n                                                   for=\"name\"\n                                            >\n                                                Movie Name\n                                            </label>\n\n                                            <input v-model=\"form.name\"\n                                                   class=\"border border-gray-400 text-black font-semibold p-2 w-1/2 rounded-lg\"\n                                                   type=\"text\"\n                                                   name=\"name\"\n                                                   id=\"name\"\n                                                   required\n                                            >\n                                            <div v-if=\"form.errors.name\" v-text=\"form.errors.name\"\n                                                 class=\"errorClass\"></div>\n                                        </div>\n\n                                        <div class=\"mb-6 w-64\">\n                                            <label class=\"block mb-2 uppercase font-bold text-xs text-red-700\"\n                                                   for=\"release_date\"\n                                            >\n                                                Release Year\n                                            </label>\n\n                                            <input v-model=\"selectedReleaseYear\" @change=\"handleReleaseYearChange\"\n\n                                                   class=\"border border-gray-400 text-black font-semibold p-2 w-1/2 rounded-lg\"\n                                                   type=\"number\"\n                                                   name=\"release_year\"\n                                                   id=\"release_year\"\n                                                   min=\"1900\"\n                                                   max=\"2100\"\n\n                                            >\n                                            <div v-if=\"form.errors.release_year\" v-text=\"form.errors.release_year\"\n                                                 class=\"errorClass\"></div>\n                                        </div>\n\n                                      <div class=\"mb-6 w-64\">\n                                        <label class=\"block mb-2 uppercase font-bold text-xs text-red-700\"\n                                               for=\"creative_commons\"\n                                        >\n                                          Creative Commons / Copyright\n                                        </label>\n\n                                        <select class=\"border border-gray-400 text-gray-800 py-2 pl-2 pr-8 w-fit rounded-lg block mb-2 uppercase font-bold text-xs\"\n                                                v-model=\"selectedCreativeCommons\" @change=\"handleCreativeCommonsChange\">\n                                          <option v-for=\"cc in creative_commons\" :key=\"cc.id\" :value=\"cc.id\">{{ cc.name }}</option>\n                                        </select>\n\n                                        <div v-if=\"form.errors.creative_commons_id\" v-text=\"form.errors.creative_commons_id\"\n                                             class=\"errorClass\"></div>\n\n                                        <div class=\"\">{{ selectedCreativeCommonsDescription }}</div>\n\n                                      </div>\n\n                                      <div v-if=\"selectedCreativeCommons\" class=\"mb-6 w-64\">\n\n                                        <div v-if=\"selectedCreativeCommons === 8\">\n                                          <input class=\"hidden border border-gray-400 text-black font-semibold p-2 w-1/2 rounded-lg\"\n                                                 type=\"hidden\"\n                                                 v-model=\"selectedCopyrightYear\"\n                                                 value=\"null\">\n                                        </div>\n                                        <div v-else>\n                                          <label class=\"block mb-2 uppercase font-bold text-xs text-red-700\"\n                                                 for=\"copyrightYear\"\n                                          >\n                                            Copyright Year\n                                          </label>\n                                          <input class=\"border border-gray-400 text-black font-semibold p-2 w-1/2 rounded-lg\"\n                                                 type=\"number\"\n                                                 minlength=\"4\"\n                                                 maxlength=\"4\"\n                                                 v-model=\"selectedCopyrightYear\">\n                                        </div>\n\n                                        <div v-if=\"form.errors.copyrightYear\" v-text=\"form.errors.copyrightYear\"\n                                             class=\"errorClass\"></div>\n                                      </div>\n\n                                        <div class=\"mb-6\">\n                                            <label class=\"block mb-2 uppercase font-bold text-xs text-red-700\"\n                                                   for=\"category\"\n                                            >\n                                                Category\n                                            </label>\n\n                                            <select class=\"border border-gray-400 text-gray-800 p-2 w-1/2 rounded-lg block mb-2 uppercase font-bold text-xs\"\n                                                    v-model=\"selectedCategoryId\" @change=\"chooseCategory\"\n                                            >\n                                                <option v-for=\"category in categories\"\n                                                        :key=\"category.id\" :value=\"category.id\">{{category.name}}</option>\n                                            </select>\n\n                                          <div v-if=\"form.errors.category\" v-text=\"form.errors.category\"\n                                               class=\"errorClass\"></div>\n\n                                            <span class=\"\">{{movieStore.category_description}}</span>\n\n\n                                        </div>\n\n                                        <div class=\"mb-6\">\n                                            <label class=\"block mb-2 uppercase font-bold text-xs text-red-700\"\n                                                   for=\"sub_category\"\n                                            >\n                                                Sub-category\n                                            </label>\n\n                                            <select class=\"border border-gray-400 text-gray-800 disabled:bg-gray-600 disabled:cursor-not-allowed p-2 w-1/2 rounded-lg block mb-2 uppercase font-bold text-xs\"\n                                                    v-model=\"selectedSubCategoryId\" :disabled=\"!selectedCategoryId\"  @change=\"chooseSubCategory\"\n                                            >\n                                                <option disabled value=\"\">Select a subcategory</option>\n                                                <option v-for=\"subCategory in subCategories\" :key=\"subCategory.id\" :value=\"subCategory.id\">\n\n                                                  {{ subCategory.name }}\n                                                </option>\n                                            </select>\n                                            <span class=\"\">{{movieStore.sub_category_description}}</span>\n                                            <div v-if=\"form.errors.sub_category\" v-text=\"form.errors.sub_category\"\n                                                 class=\"errorClass\"></div>\n                                        </div>\n\n                                        <div class=\"mb-6\">\n                                            <label class=\"block mb-2 uppercase font-bold text-xs text-red-700\"\n                                                   for=\"name\"\n                                            >\n                                                Logline\n                                            </label>\n\n                                            <input v-model=\"form.logline\"\n                                                   class=\"border border-gray-400 text-gray-800 p-2 w-1/2 rounded-lg\"\n                                                   type=\"text\"\n                                                   name=\"logline\"\n                                                   id=\"logline\"\n                                                   required\n                                            >\n                                            <div v-if=\"form.errors.logline\" v-text=\"form.errors.logline\"\n                                                 class=\"errorClass\"></div>\n                                        </div>\n\n                                        <div class=\"mb-6\">\n                                            <label class=\"block mb-2 uppercase font-bold text-xs text-red-700\"\n                                                   for=\"description\"\n                                            >\n                                                Description\n                                            </label>\n                                            <TabbableTextarea v-model=\"form.description\"\n                                                              class=\"border border-gray-400 text-gray-800 p-2 w-full rounded-lg\"\n                                                              name=\"description\"\n                                                              id=\"description\"\n                                                              rows=\"10\" cols=\"30\"\n                                                              required\n                                            />\n                                            <div v-if=\"form.errors.description\" v-text=\"form.errors.description\"\n                                                 class=\"errorClass\"></div>\n                                        </div>\n\n                                        <div class=\"mb-6\">\n                                            <label class=\"block mb-2 uppercase font-bold text-xs text-red-700\"\n                                                   for=\"file_url\"\n                                            >\n                                                Change Video URL (if hosted externally) <span class=\"text-white dark:text-black\">*</span>\n                                            </label>\n\n                                            <input v-model=\"form.video_url\"\n                                                   class=\"border border-gray-400 text-gray-800 p-2 w-full rounded-lg\"\n                                                   type=\"text\"\n                                                   name=\"video_url\"\n                                                   id=\"video_url\"\n                                            >\n                                            <div v-if=\"form.errors.video_url\" v-text=\"form.errors.video_url\"\n                                                 class=\"errorClass\"></div>\n                                        </div>\n\n                                        <div class=\"block mb-6 text-sm font-semibold tracking-wider\">\n                                            <div class=\"mb-2 uppercase\">* Note:</div>\n\n                                            <ul class=\"list-decimal pb-2 ml-2 mb-4 border-b font-medium\">\n                                                <li>\n                                                  We have <span class=\"underline\">not</span> enabled the use of Facebook or YouTube videos for security purposes.\n                                                </li>\n                                            </ul>\n                                        </div>\n\n\n                                        <div class=\"mb-6\">\n                                            <label class=\"block mb-2 uppercase font-bold text-xs text-red-700\"\n                                                   for=\"name\"\n                                            >\n                                                Website URL\n                                            </label>\n\n                                            <input v-model=\"form.www_url\"\n                                                   class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                                                   type=\"text\"\n                                                   name=\"www_url\"\n                                                   id=\"www_url\"\n                                            >\n                                            <div v-if=\"form.errors.www_url\" v-text=\"form.errors.www_url\"\n                                                 class=\"errorClass\"></div>\n                                        </div>\n\n                                        <div class=\"mb-6\">\n                                            <label class=\"block mb-2 uppercase font-bold text-xs text-red-700\"\n                                                   for=\"name\"\n                                            >\n                                                Instagram @\n                                            </label>\n\n                                            <input v-model=\"form.instagram_name\"\n                                                   class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                                                   type=\"text\"\n                                                   name=\"instagram_name handle\"\n                                                   id=\"instagram_name\"\n                                            >\n                                            <div v-if=\"form.errors.instagram_name\" v-text=\"form.errors.instagram_name\"\n                                                 class=\"errorClass\"></div>\n                                        </div>\n\n                                        <div class=\"mb-6\">\n                                            <label class=\"block mb-2 uppercase font-bold text-xs text-red-700\"\n                                                   for=\"name\"\n                                            >\n                                                Telegram URL\n                                            </label>\n\n                                            <input v-model=\"form.telegram_url\"\n                                                   class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                                                   type=\"text\"\n                                                   name=\"telegram_url\"\n                                                   id=\"telegram_url\"\n                                            >\n                                            <div v-if=\"form.errors.telegram_url\" v-text=\"form.errors.telegram_url\"\n                                                 class=\"errorClass\"></div>\n                                        </div>\n\n                                        <div class=\"mb-6\">\n                                            <label class=\"block mb-2 uppercase font-bold text-xs text-red-700\"\n                                                   for=\"name\"\n                                            >\n                                                X (formerly Twitter) @\n                                            </label>\n\n                                            <input v-model=\"form.twitter_handle\"\n                                                   class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                                                   type=\"text\"\n                                                   name=\"twitter_handle\"\n                                                   id=\"twitter_handle\"\n                                            >\n                                            <div v-if=\"form.errors.twitter_handle\" v-text=\"form.errors.twitter_handle\"\n                                                 class=\"errorClass\"></div>\n                                        </div>\n\n                                    </form>\n\n                                </div>\n                                <!-- End Right Column -->\n                            </div>\n                            <!-- End grid 2-col -->\n\n\n                            <div class=\"flex justify-end my-6 mr-6\">\n                                <JetValidationErrors class=\"mr-4\" />\n                                <button\n                                    @click=\"submit\"\n                                    class=\"bg-blue-600 hover:bg-blue-500 text-white rounded py-2 px-4\"\n                                    :disabled=\"form.processing\"\n                                >\n                                    Save\n                                </button>\n                            </div>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n\n        </div>\n    </div>\n\n</template>\n\n<script setup>\nimport { Inertia } from \"@inertiajs/inertia\"\nimport {useForm, usePage} from \"@inertiajs/inertia-vue3\"\nimport { usePageSetup } from '@/Utilities/PageSetup'\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useVideoPlayerStore } from \"@/Stores/VideoPlayerStore\"\nimport { useMovieStore } from \"@/Stores/MovieStore\"\nimport JetValidationErrors from '@/Jetstream/ValidationErrors'\nimport TabbableTextarea from \"@/Components/Global/TextEditor/TabbableTextarea\"\nimport Message from \"@/Components/Global/Modals/Messages\"\nimport SingleImage from \"@/Components/Global/Multimedia/SingleImage\"\nimport ImageUpload from \"@/Components/Global/Uploaders/ImageUpload\"\nimport VideoUpload from \"@/Components/Global/Uploaders/VideoUpload\"\nimport CancelButton from \"@/Components/Global/Buttons/CancelButton.vue\"\nimport { computed, onBeforeUnmount, onMounted, ref, toRefs, watch } from 'vue'\n\nusePageSetup('movieEdit')\n\nconst appSettingStore = useAppSettingStore()\nconst videoPlayerStore = useVideoPlayerStore()\nconst movieStore = useMovieStore()\n\nlet props = defineProps({\n    movie: Object,\n    video: Object,\n    trailer: Object,\n    image: Object,\n    categories: Object,\n    statuses: Object,\n    creative_commons: Object,\n    can: Object,\n})\n\nlet selectedCategoryId = ref(props.movie.movie_category_id);\nlet selectedSubCategoryId = ref(props.movie.movie_category_sub_id);\nconst selectedCreativeCommons = ref(props.movie.creative_commons_id);\nlet selectedCopyrightYear = ref(props.movie.copyrightYear);\nlet selectedReleaseYear = ref(props.movie.release_year);\nconst currentYear = new Date().getFullYear();\n\nconst subCategories = computed(() => {\n  const category = props.categories.find(cat => cat.id === selectedCategoryId.value);\n  return category ? category.sub_categories : [];\n});\n\nconst handleCreativeCommonsChange = () => {\n  if (selectedCreativeCommons.value === 8) {\n    selectedCopyrightYear.value = null;\n  } else if (selectedCopyrightYear.value === null) {\n    // Pre-populate with current year only if copyrightYear is null\n    selectedCopyrightYear.value = currentYear;\n  }\n};\n\nconst selectedCreativeCommonsDescription = computed(() => {\n  const selectedCC = props.creative_commons.find((cc) => cc.id === selectedCreativeCommons.value);\n  return selectedCC ? selectedCC.description : '';\n});\n\nconst handleReleaseYearChange = () => {\n  if (selectedReleaseYear.value === null) {\n    // Pre-populate with current year only if copyrightYear is null\n    selectedReleaseYear.value = currentYear;\n  }\n};\n\n// const releaseYear = computed(() => {\n//   return props.movie.release_year === null ? new Date().getFullYear() : props.movie.release_year;\n// });\n\n// Initialize releaseYear with either the movie's release_year or the current year\n// form.releaseYear = props.movie.release_year ?? new Date().getFullYear();\n// Destructure props for easier access\n// const { movie, video } = toRefs(props);\n\n// Handling nullable release_year\n// const releaseYear = computed(() => movie.value.release_year ?? new Date().getFullYear());\n\n\n// Watchers to update the store based on category and subcategory selections\nwatch(selectedCategoryId, () => {\n  movieStore.initializeDescriptions(selectedCategoryId.value, selectedSubCategoryId.value);\n}, { immediate: true });\n\nwatch(selectedSubCategoryId, () => {\n  movieStore.updateSubCategoryDescription(selectedSubCategoryId.value);\n});\n\nonMounted(() => {\n  movieStore.categories = props.categories;\n  movieStore.initializeDescriptions(selectedCategoryId.value, selectedSubCategoryId.value);\n  watch(() => props.movie.creative_commons_id, (newVal) => {\n    selectedCreativeCommons.value = newVal;\n    handleCreativeCommonsChange();\n  });\n});\n\nconst chooseCategory = () => {\n  // Update the selected category ID based on the new selection\n  // Vue automatically updates selectedCategoryId due to v-model binding\n  // So, there is no need to manually set it here\n\n  // Call the store method to update descriptions and subcategories\n  movieStore.initializeDescriptions(selectedCategoryId.value, selectedSubCategoryId.value);\n};\n\nconst chooseSubCategory = () => {\n  // Update the store state based on the new subcategory selection\n  movieStore.updateSubCategoryDescription(selectedSubCategoryId.value);\n};\n\n\n\n// let subCategory = ref(null);\n\nlet form = useForm({\n    id: props.movie.id,\n    name: props.movie.name,\n    status: props.movie.status_id,\n    release_year: selectedReleaseYear,\n    copyrightYear: selectedCopyrightYear,\n    creative_commons_id: selectedCreativeCommons.value,\n    category: movieStore.category_id,\n    sub_category: movieStore.sub_category_id,\n    description: props.movie.description,\n    logline: props.movie.logline,\n    user_id: props.movie.user_id,\n    team_id: props.movie.team_id,\n    video_url: props.video.video_url ?? null,\n    www_url: props.movie.www_url,\n    instagram_name: props.movie.instagram_name,\n    telegram_url: props.movie.telegram_url,\n    twitter_handle: props.movie.twitter_handle,\n})\n\nlet submit = () => {\n  form.category = movieStore.category_id;\n  form.sub_category = movieStore.sub_category_id;\n  form.copyrightYear = selectedCopyrightYear;\n  form.creative_commons_id = selectedCreativeCommons.value;\n  form.release_year = selectedReleaseYear.value;\n  form.patch(route('movies.update', props.movie.slug));\n}\n\nlet reloadImage = () => {\n    Inertia.reload({\n        only: ['image'],\n    });\n};\n\n\n\n// let category = ref();\n\n// function chooseCategory(event) {\n// movieStore.category_description =  props.categories[event.target.selectedIndex].description;\n// }\n\n\n// Computed property to filter subcategories based on the selected category\n// const subCategories = computed(() => {\n//   const category = props.categories.find(cat => cat.id === selectedCategoryId.value);\n//   return category ? category.sub_categories : [];\n// });\n\n\n\n\n\n// Initialize and update descriptions when IDs change\n// watch([selectedCategoryId, selectedSubCategoryId], () => {\n//   movieStore.initializeDescriptions(props.categories, selectedCategoryId.value, selectedSubCategoryId.value);\n//\n// }, { immediate: true });\n\n// watch([subCategories, selectedCategoryId, selectedSubCategoryId], () => {\n//   movieStore.initializeDescriptions(selectedCategoryId.value, selectedSubCategoryId.value);\n//\n// }, { immediate: true });\n\n// Initialize on mount\n// onMounted(() => {\n//   // movieStore.initializeDescriptions(props.categories, selectedCategoryId.value, selectedSubCategoryId.value);\n//   // movieStore.initializeDescriptions(props.categories, props.movie.movie_category_id, props.movie.movie_category_sub_id);\n//   movieStore.categories = props.categories\n//   movieStore.category_id = props.movie.movie_category_id\n//   movieStore.category_description = props.movie.movie_category.description\n//   movieStore.sub_category_id = props.movie.movie_category_sub_id\n//   movieStore.sub_category_description = props.movie.movie_category_sub.description\n//\n//   // movieStore.initializeDescriptions()\n// });\n\n// // Initialize category and subcategory descriptions\n// const initializeDescriptions = () => {\n//   const category = props.categories.find(cat => cat.id === selectedCategoryId.value);\n//   movieStore.category_id = category ? category.id : '';\n//   movieStore.category_description = category ? category.description : '';\n//   movieStore.sub_categories = category ? category.sub_categories : [];\n//\n//   subCategory = subCategories.value.find(sub => sub.id === selectedSubCategoryId.value);\n//   movieStore.sub_category_id = subCategory ? subCategory.id : '';\n//   movieStore.sub_category_description = subCategory ? subCategory.description : '';\n//   console.log('GARCK' + selectedSubCategoryId.value)\n//   movieStore.sub_category_id = selectedSubCategoryId.value;\n// };\n//\n// // Call the function to set initial descriptions\n// initializeDescriptions();\n//\n// // When a category is chosen\n// const chooseCategory = () => {\n//   selectedCategoryId.value = parseInt(event.target.value);\n//   initializeDescriptions(); // Re-initialize to update subcategories and descriptions\n// };\n//\n// // When a subcategory is chosen\n// const chooseSubCategory = () => {\n//   subCategory = movieStore.sub_categories.find(sub => sub.id === selectedSubCategoryId.value);\n//   console.log('FFFFFFAAAAAA' + selectedSubCategoryId.value)\n//   movieStore.sub_category_id = subCategory ? subCategory.id : '';\n//   movieStore.sub_category_description = subCategory ? subCategory.description : '';\n// };\n\n// Watchers to update descriptions when IDs change\n// watch(selectedCategoryId, () => {\n//   const category = props.categories.find(cat => cat.id === selectedCategoryId.value);\n//   movieStore.category_description = category ? category.description : '';\n//   selectedSubCategoryId.value = null; // Reset subcategory selection\n// });\n//\n// watch(selectedSubCategoryId, () => {\n//   console.log('GET FLIGHTY' + selectedSubCategoryId.value)\n//   const subCategory = movieStore.sub_categories.find(sub => sub.id === selectedSubCategoryId.value);\n//   movieStore.sub_category_id = subCategory ? subCategory.id : '';\n//\n//   movieStore.sub_category_description = subCategory ? subCategory.description : '';\n// });\n\n\n// const chooseCategory = (event) => {\n//   selectedCategoryId.value = parseInt(event.target.value);\n// };\n//\n// const chooseSubCategory = (subCategoryId) => {\n//   selectedSubCategoryId.value = subCategoryId;\n// };\n\nfunction muteMainVideo(){\n    videoPlayerStore.mute();\n}\n\nfunction back() {\n    let urlPrev = usePage().props.value.urlPrev\n    if (urlPrev !== 'empty') {\n        Inertia.visit(urlPrev)\n    }\n}\n\nonBeforeUnmount(() => {\n  movieStore.reset(); // Call the reset method of your store\n});\n\n</script>\n<style scoped>\n.topBannerErrorMessage {\n  background-color: black; /* bg-black */\n  padding: 0.5rem; /* p-2 */\n  width: 100%; /* w-full */\n  color: white; /* text-white */\n  font-weight: 600; /* font-semibold, for bold you might want to use 700 */\n  font-size: 1rem; /* Adjust based on your design, as Tailwind's text sizes are utility-based */\n}\n.errorClass {\n  color: lightgreen;\n  font-weight: 600; /* font-semibold, for bold you might want to use 700 */\n}\n</style>","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-9.use[1]!../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-9.use[2]!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./Edit.vue?vue&type=style&index=0&id=7566c6fc&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./Edit.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Edit.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Edit.vue?vue&type=style&index=0&id=7566c6fc&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-7566c6fc\"]])\n\nexport default __exports__"],"names":["initialState","category_id","category_description","categories","sub_category_id","sub_category_description","sub_categories","useMovieStore","defineStore","state","actions","reset","Object","assign","this","initializeDescriptions","categoryId","subCategoryId","category","find","cat","id","description","updateSubCategoryDescription","subCategory","sub","getters","videoId","uploadStatus","useUploadStore","setVideoId","setUploadStatus","status","usePageSetup","pageName","userStore","useUserStore","appSettingStore","useAppSettingStore","videoPlayerStore","useVideoPlayerStore","currentPage","showFlashMessage","pageIsHidden","isMobile","window","innerWidth","ott","makeVideoTopRight","pageReload","location","reload","Inertia","on","event","search","shouldScrollToTop","requestAnimationFrame","topDiv","document","getElementById","scrollIntoView","behavior","scrollTo","setPrevUrl","showOttButtons","noLayout","___CSS_LOADER_EXPORT___","push","module","props","__props","cancel","prevUrl","url","visit","isCreator","clearFlashMessage","computed","flash","success","message","warning","error","_ref","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","post","route","stop","apply","arguments","emit","onInput","target","value","onTabPress","e","textarea","val","start","selectionStart","end","selectionEnd","substring","notificationStore","useNotificationStore","serverOptions","_defineProperty","metadataKey","metadataValue","process","fieldName","file","metadata","load","progress","abort","formData","FormData","append","name","modelType","modelId","config","onUploadProgress","lengthComputable","loaded","total","axios","then","response","data","fileId","err","errorMessage","_typeof","errors","errorMessages","keys","map","key","concat","join","setGeneralServiceNotification","console","log","FilePond","vueFilePond","FilePondPluginFileValidateType","FilePondPluginFileValidateSize","FilePondPluginImagePreview","FilePondPluginFileMetadata","filepondInitialized","setOptions","fileMetadataObject","show_id","__emit","handleProcessedFile","uploadStore","uploadingMessage","ref","uploadComplete","isHidden","emits","onMounted","myDropzone","Dropzone","paramName","maxFilesize","chunking","chunkSize","parallelChunkUploads","retryChunks","retryChunksLimit","capture","acceptedFiles","uploadprogress","bytesSent","uploadPercentage","dictDefaultMessage","forceFallback","accept","done","size","alert","onUploadSuccess","removeFile","only","movieId","uploadMovieId","mov","movieTrailerId","showEpisodeId","uploadShowEpisodeId","form","useForm","options","locals","usePage","hasErrors","length","movieStore","selectedCategoryId","movie","movie_category_id","selectedSubCategoryId","movie_category_sub_id","selectedCreativeCommons","creative_commons_id","selectedCopyrightYear","copyrightYear","selectedReleaseYear","release_year","currentYear","Date","getFullYear","subCategories","handleCreativeCommonsChange","selectedCreativeCommonsDescription","selectedCC","creative_commons","cc","handleReleaseYearChange","watch","immediate","newVal","chooseCategory","chooseSubCategory","status_id","sub_category","logline","user_id","team_id","video_url","_props$video$video_ur","video","www_url","instagram_name","telegram_url","twitter_handle","submit","patch","slug","reloadImage","onBeforeUnmount"],"sourceRoot":""}
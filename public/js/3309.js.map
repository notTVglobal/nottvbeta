{"version":3,"file":"js/3309.js","mappings":"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","sources":["webpack:///./resources/js/Stores/NewsStore.js","webpack:///./resources/js/Utilities/PageSetup.js","webpack:///./resources/js/Components/Global/Buttons/CancelButton.vue?b7c6","webpack:///./resources/js/Components/Global/Buttons/CancelButton.vue","webpack:///./resources/js/Components/Global/Modals/Messages.vue?dfe9","webpack:///./resources/js/Components/Global/Modals/Messages.vue","webpack:///./resources/js/Components/Global/TextEditor/TabbableTextarea.vue?4db8","webpack:///./resources/js/Components/Global/TextEditor/TabbableTextarea.vue","webpack:///./resources/js/Components/Pages/News/TiptapButtons.vue","webpack:///./resources/js/Jetstream/ValidationErrors.vue?5fdc","webpack:///./resources/js/Jetstream/ValidationErrors.vue","webpack:///./resources/js/Components/Global/TextEditor/TiptapNewsPostEdit.vue?b660","webpack:///./resources/js/Components/Global/TextEditor/TiptapNewsPostEdit.vue","webpack:///./resources/js/Pages/News/{$id}/Edit.vue?6454","webpack:///./resources/js/Pages/News/{$id}/Edit.vue"],"sourcesContent":["import { defineStore } from \"pinia\";\n\nconst initialState = () => ({\n    newsArticleIdTiptop: '',\n    newsArticleTitleTiptop: '',\n    newsArticleContentTiptop: [],\n})\n\nexport const useNewsStore = defineStore('newsStore', {\n    state: initialState,\n    actions: {\n        reset() {\n            // Reset the store to its original state (clear all data)\n            Object.assign(this, initialState());\n        },\n        //\n    },\n\n})\n","import { onBeforeMount, onMounted } from 'vue'\nimport { useUserStore } from \"@/Stores/UserStore\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useVideoPlayerStore } from \"@/Stores/VideoPlayerStore\"\nimport { Inertia } from \"@inertiajs/inertia\"\n\nexport function usePageSetup(pageName) {\n    const userStore = useUserStore()\n    const appSettingStore = useAppSettingStore()\n    const videoPlayerStore = useVideoPlayerStore()\n\n    appSettingStore.currentPage = pageName\n    appSettingStore.showFlashMessage = true\n    appSettingStore.pageIsHidden = false\n\n    if (userStore.isMobile) {\n        appSettingStore.ott = 0\n    }\n\n    videoPlayerStore.makeVideoTopRight()\n\n    let reloadPage = () => {\n        if (appSettingStore.pageReload) {\n            appSettingStore.pageReload = false\n            window.location.reload(true);\n        }\n    };\n\n    onBeforeMount(() => {\n        reloadPage()\n    });\n\n    onMounted(() => {\n        // Check if the URL contains query strings\n        const hasQueryStrings = window.location.search !== '';\n\n        // Only scroll into view if there are no query strings\n        if (!hasQueryStrings) {\n            const topDiv = document.getElementById(\"topDiv\")\n            if (topDiv) {\n                topDiv.scrollIntoView()\n            }\n        }\n        // Only update if we're not already on this page to avoid overwriting with the current URL\n        appSettingStore.setPrevUrl()\n        appSettingStore.noLayout = false\n        Inertia.reload()\n\n    });\n}\n","import script from \"./CancelButton.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CancelButton.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n    <button\n        @click.prevent=\"cancel\"\n        class=\"ml-2 px-4 py-2 text-white bg-orange-600 hover:bg-orange-500 rounded-lg\"\n    >Cancel\n    </button>\n  </div>\n</template>\n\n<script setup>\nimport { Inertia } from \"@inertiajs/inertia\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useUserStore } from '@/Stores/UserStore'\n\nconst appSettingStore = useAppSettingStore()\nconst userStore = useUserStore()\n\nfunction cancel() {\n  if (appSettingStore.prevUrl) {\n    Inertia.visit(appSettingStore.prevUrl)\n  } else {\n    // Fallback if prevUrl is not available\n    let prevUrl = userStore.isCreator ? '/dashboard' : '/';\n    Inertia.visit(prevUrl);\n  }\n}\n</script>\n","import script from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"mx-4 my-4\">\n    <div class=\"alert alert-info mt-4\"\n         v-if=\"props.flash.message\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" class=\"stroke-current shrink-0 w-6 h-6\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n      </svg>\n      <span>{{ props.flash.message }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-success mt-4 mx-3\"\n         v-if=\"props.flash.success\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.success }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-warning mt-4 mx-3\"\n         v-if=\"props.flash.warning\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"/>\n      </svg>\n      <span>{{ props.flash.warning }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-error mt-4 mx-3\"\n         v-if=\"props.flash.error\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.error }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n  </div>\n\n</template>\n\n<script setup>\nimport { Inertia } from \"@inertiajs/inertia\"\nimport { computed } from \"vue\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\n\nconst appSettingStore = useAppSettingStore()\n\nappSettingStore.showFlashMessage = true\n\nlet props = defineProps({\n  flash: Object,\n\n})\n\nconst messageType = computed(() => ({\n  'text-green-700 bg-green-100 dark:bg-green-200 dark:text-green-800': props.flash.success,\n  'text-blue-700 bg-blue-100 dark:bg-blue-200 dark:text-blue-800': props.flash.message,\n  'text-orange-700 bg-orange-100 dark:bg-orange-200 dark:text-orange-800': props.flash.warning,\n  'text-red-700 bg-red-100 dark:bg-red-200 dark:text-red-800': props.flash.error,\n}))\n\nconst clearFlashMessage = async () => {\n  await Inertia.post(route('flash.clear'));\n  Inertia.reload();\n};\n</script>\n","import script from \"./TabbableTextarea.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TabbableTextarea.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <textarea\n        @keydown.tab.prevent=\"onTabPress\"\n        @keyup=\"emit('update:modelValue', $event.target.value)\"\n        v-text=\"modelValue\"/>\n</template>\n\n<script setup>\ndefineProps({\n  modelValue: String\n});\n\nlet emit = defineEmits(['update:modelValue']);\n\nfunction onTabPress(e) {\n  let textarea = e.target;\n\n  // get caret position/selection\n  let val = textarea.value,\n      start = textarea.selectionStart,\n      end = textarea.selectionEnd;\n\n  // set textarea value to: text before caret + tab + text after caret\n  textarea.value = val.substring(0, start) + \"\\t\" + val.substring(end);\n\n  // put caret at right position again\n  textarea.selectionStart = textarea.selectionEnd = start + 1;\n}\n\n</script>\n","import script from \"./TiptapButtons.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TiptapButtons.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./ValidationErrors.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ValidationErrors.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { computed } from 'vue';\nimport { usePage } from '@inertiajs/inertia-vue3';\n\nconst errors = computed(() => usePage().props.value.errors);\nconst hasErrors = computed(() => Object.keys(errors.value).length > 0);\n</script>\n\n<template>\n    <div v-if=\"hasErrors\">\n        <div class=\"font-medium text-red-600\">\n            Whoops! Something went wrong.\n        </div>\n\n        <ul class=\"mt-3 list-disc list-inside text-sm text-red-600\">\n            <li v-for=\"(error, key) in errors\" :key=\"key\">\n                {{ error }}\n            </li>\n        </ul>\n    </div>\n</template>\n","import script from \"./TiptapNewsPostEdit.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TiptapNewsPostEdit.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <TiptapButtons :editor=\"editor\"/>\n  <!--    <button-->\n  <!--        @click=\"editor.chain().focus().undo().run()\"-->\n  <!--        :disabled=\"!editor.can().undo()\"-->\n  <!--    >-->\n  <!--        undo-->\n  <!--    </button>-->\n  <!--    <button-->\n  <!--        @click=\"editor.chain().focus().redo().run()\"-->\n  <!--        :disabled=\"!editor.can().redo()\"-->\n  <!--    >-->\n  <!--        redo-->\n  <!--    </button>-->\n  <!--    <button @click.prevent=\"editor.chain().focus().toggleBulletList().run()\"  class=\"ProseMirror py-1 px-3 ml-2 mb-2 bg-gray-200 rounded-lg\">-->\n  <!--        Bullets-->\n  <!--    </button>-->\n  <!--    <button @click.prevent=\"editor.chain().focus().toggleList().run()\" class=\"py-1 px-3 ml-2 mb-2 bg-gray-200 rounded-lg\">-->\n  <!--        List-->\n  <!--    </button>-->\n  <!--    <button @click.prevent=\"editor.chain().focus().toggleBlockquote().run()\" class=\"py-1 px-3 ml-2 mb-2 bg-gray-200 rounded-lg\">-->\n  <!--        Block-->\n  <!--    </button>-->\n  <!--    <button @click.prevent=\"editor.chain().focus().toggleCode().run()\" class=\"py-1 px-3 ml-2 mb-2 bg-gray-200 rounded-lg\">-->\n  <!--        Code-->\n  <!--    </button>-->\n  <!--    <tabbable-textarea :editor=\"editor\" class=\"element\" />-->\n\n  <div\n      class=\"h-auto overflow-y-auto min-h-[13rem] max-h-[96rem] mb-2 pb-2 bg-gray-50 border border-1 border-gray-300 focus:outline-none text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 \">\n    <editor-content :editor=\"editor\" class=\"\"/>\n  </div>\n</template>\n\n<script setup>\nimport { Inertia } from \"@inertiajs/inertia\"\nimport throttle from \"lodash/throttle\"\nimport axios from \"axios\"\nimport { Editor, EditorContent } from '@tiptap/vue-3'\nimport StarterKit from '@tiptap/starter-kit'\nimport Document from '@tiptap/extension-document'\nimport Paragraph from '@tiptap/extension-paragraph'\nimport Text from '@tiptap/extension-text'\nimport HardBreak from '@tiptap/extension-hard-break'\n// import {History} from \"@tiptap/extension-history\"\n// import {BulletList} from \"@tiptap/extension-bullet-list\"\nimport { ListItem } from \"@tiptap/extension-list-item\"\n// import {onBeforeUnmount} from \"vue\"\nimport { useNewsStore } from \"@/Stores/NewsStore\"\nimport TiptapButtons from \"@/Components/Pages/News/TiptapButtons\"\nimport TabbableTextarea from \"@/Components/Global/TextEditor/TabbableTextarea\"\n\nconst newsStore = useNewsStore()\n\nconst editor = new Editor({\n  content: newsStore.newsArticleContentTiptop,\n  extensions: [\n    StarterKit,\n    Paragraph.configure({\n      HTMLAttributes: {\n        class: 'news-paragraph',\n      },\n    }),\n  ],\n\n\n  onUpdate: ({editor}) => {\n    newsStore.newsArticleContentTiptop = editor.getHTML()\n    // newsStore.newsArticleContentTiptop = editor.getJSON()\n    // const value = editor.getJSON()\n\n    // Auto-save -> triggered on every change,\n    // currently disabled. Needs to be throttled.\n    //\n    // axios.post('/news/save', { id: newsStore.newsArticleIdTiptop, body:newsStore.newsArticleContentTiptop, title:newsStore.newsArticleTitleTiptop })\n  },\n\n  autofocus: true,\n  editorProps: {\n    attributes: {\n      class: 'h-auto min-h-[12rem] max-h-[96rem] overflow-y-auto block w-full p-2.5 focus:outline-none'\n    }\n  }\n})\n\n// editor.commands.setContent({\n//     \"type\": \"doc\",\n//     \"content\": newsStore.newsArticleTiptop,\n// })\n\n// const json = editor.getJSON()\n// newsStore.newsArticleTiptop = editor.getHTML()\n\n\n// onBeforeUnmount(() => {\n//     // this isn't working, I think it's\n//     // needed for the history extension.\n//     editor.destroy()\n// })\n\n// History.configure({\n//     depth: 10,\n// })\n\n</script>\n\n<style scoped>\n\n</style>\n","import script from \"./Edit.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Edit.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n\n  <Head title=\"Edit News Post\"/>\n\n  <div class=\"place-self-center flex flex-col gap-y-3\">\n    <div id=\"topDiv\" class=\"bg-white text-black dark:bg-gray-800 dark:text-gray-50 p-5 mb-10\">\n\n      <Message v-if=\"appSettingStore.showFlashMessage\" :flash=\"$page.props.flash\"/>\n\n      <div class=\"flex flex-row justify-between mt-6\">\n        <h2 class=\"text-xl font-semibold leading-tight\">\n          Edit News Post\n        </h2>\n        <div class=\"flex justify-end space-x-2\">\n          <div>\n            <button\n                v-if=\"props.can.viewNewsroom\"\n                @click=\"appSettingStore.btnRedirect(`/newsroom`)\"\n                class=\"px-4 py-2 text-white bg-yellow-600 hover:bg-yellow-500 rounded-lg disabled:bg-gray-400\"\n\n            >Newsroom\n            </button>\n          </div>\n          <div>\n            <CancelButton/>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"p-6 border-b border-gray-200\">\n        <form @submit.prevent=\"submit\">\n          <div class=\"mb-6\">\n            <label\n                for=\"Title\"\n                class=\"block mb-2 text-sm font-bold text-gray-900 dark:text-gray-300\"\n            >Title</label\n            >\n            <input\n                type=\"text\"\n                v-model=\"form.title\"\n                name=\"title\"\n                class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\"\n                placeholder=\"\"\n            />\n            <div\n                v-if=\"form.errors.title\"\n                class=\"text-sm text-red-600\"\n            >\n              {{ form.errors.title }}\n            </div>\n          </div>\n          <div class=\"mb-6\">\n            <label\n                for=\"slug\"\n                class=\"block mb-2 text-sm font-bold text-gray-900 dark:text-gray-300\"\n            >Content</label>\n            <tiptap v-if=\"appSettingStore.currentPage === 'newsEdit'\"/>\n            <!--                        <tabbable-textarea-->\n            <!--                            type=\"text\"-->\n            <!--                            v-model=\"form.content\"-->\n            <!--                            name=\"content\"-->\n            <!--                            id=\"\"-->\n            <!--                            rows=10-->\n            <!--                            class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\"-->\n            <!--                        ></tabbable-textarea>-->\n\n            <div\n                v-if=\"form.errors.body\"\n                class=\"text-sm text-red-600\"\n            >\n              {{ form.errors.body }}\n            </div>\n          </div>\n          <div class=\" flex justify-start\">\n            <button\n                type=\"submit\"\n                class=\"text-white bg-blue-700 hover:bg-blue-500 focus:outline-none  font-medium rounded-lg text-sm px-5 py-2.5 \"\n                :disabled=\"form.processing\"\n                :class=\"{ 'opacity-25': form.processing }\"\n            >\n              Save\n            </button>\n            <JetValidationErrors class=\"ml-4\"/>\n          </div>\n          <!--                    <Link :href=\"`/news/${news.slug}`\"><button-->\n          <!--                        class=\"ml-2 px-4 py-2 text-white bg-blue-500 hover:bg-blue-300 rounded-lg\"-->\n          <!--                    >Cancel</button>-->\n          <!--                    </Link>-->\n          <!--                    <Link :href=\"`/news/${news.slug}`\"><button-->\n          <!--                        class=\"text-white bg-blue-700 hover:bg-blue-500 focus:outline-none font-medium rounded-lg text-sm px-5 py-2.5 \"-->\n          <!--                    >Save</button>-->\n          <!--                    </Link>-->\n        </form>\n      </div>\n\n    </div>\n\n  </div>\n\n</template>\n\n<script setup>\nimport { onBeforeUnmount } from 'vue'\nimport { useForm } from '@inertiajs/inertia-vue3'\nimport { usePageSetup } from '@/Utilities/PageSetup'\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\nimport { useNewsStore } from '@/Stores/NewsStore'\nimport JetValidationErrors from '@/Jetstream/ValidationErrors'\n// import TabbableTextarea from \"@/Components/Global/TextEditor/TabbableTextarea.vue\"\nimport Tiptap from '@/Components/Global/TextEditor/TiptapNewsPostEdit'\nimport Message from '@/Components/Global/Modals/Messages'\nimport CancelButton from '@/Components/Global/Buttons/CancelButton.vue'\n\nusePageSetup('newsEdit')\n\nconst appSettingStore = useAppSettingStore()\nconst newsStore = useNewsStore()\n\nconst props = defineProps({\n  news: Object,\n  can: Object,\n})\n\n// note: as of March 2023 the form submission cannot use \"content\" as\n// a form field name. It conflicts with the HTMLRequest content item.\n// Our news post content is called content in the database, but it is\n// now called body in our form submission back to Laravel.\n//\nconst form = useForm({\n  id: props.news.id,\n  title: props.news.title,\n  body: newsStore.newsArticleContentTiptop,\n  // content: newsStore.newsArticleContentTiptop,\n})\n\nconst submit = () => {\n  form.body = newsStore.newsArticleContentTiptop\n  form.put(route('news.update', props.news.id))\n}\n\nnewsStore.newsArticleIdTiptop = props.news.id\nnewsStore.newsArticleTitleTiptop = props.news.title\nnewsStore.newsArticleContentTiptop = props.news.content\nform.body = newsStore.newsArticleContentTiptop\n// form.content = newsStore.newsArticleContentTiptop;\n\nonBeforeUnmount(() => {\n  newsStore.newsArticleContentTiptop = ''\n})\n\n</script>\n"],"names":["initialState","newsArticleIdTiptop","newsArticleTitleTiptop","newsArticleContentTiptop","useNewsStore","defineStore","state","actions","reset","Object","assign","this","usePageSetup","pageName","userStore","useUserStore","appSettingStore","useAppSettingStore","videoPlayerStore","useVideoPlayerStore","currentPage","showFlashMessage","pageIsHidden","isMobile","ott","makeVideoTopRight","onBeforeMount","pageReload","window","location","reload","onMounted","search","topDiv","document","getElementById","scrollIntoView","setPrevUrl","noLayout","Inertia","cancel","prevUrl","visit","isCreator","props","__props","clearFlashMessage","computed","flash","success","message","warning","error","_ref","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","post","route","stop","apply","arguments","emit","onTabPress","e","textarea","target","val","value","start","selectionStart","end","selectionEnd","substring","errors","usePage","hasErrors","keys","length","newsStore","editor","Editor","content","extensions","StarterKit","Paragraph","configure","HTMLAttributes","class","onUpdate","getHTML","autofocus","editorProps","attributes","form","useForm","id","news","title","body","submit","put","onBeforeUnmount"],"sourceRoot":""}
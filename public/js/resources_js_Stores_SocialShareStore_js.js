"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk"] = self["webpackChunk"] || []).push([["resources_js_Stores_SocialShareStore_js"],{

/***/ "./resources/js/Stores/SocialShareStore.js":
/*!*************************************************!*\
  !*** ./resources/js/Stores/SocialShareStore.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useSocialShareStore: () => (/* binding */ useSocialShareStore)\n/* harmony export */ });\n/* harmony import */ var pinia__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! pinia */ \"./node_modules/pinia/dist/pinia.mjs\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\n\n\n// Initial state setup for the SocialShareStore\nvar initialState = function initialState() {\n  return {\n    socialSharingModal: false,\n    // Controls the visibility of the social sharing modal\n    title: 'notTV',\n    // Default title for sharing\n    url: 'https://not.tv',\n    // Default URL for sharing\n    description: 'Share this!',\n    // Default description for sharing\n    quote: 'Community Television Re-invented',\n    // Default quote for sharing\n    hashtags: 'notTV, mediaForABetterWorld',\n    // Default hashtags for sharing\n    twitterUser: 'notTV',\n    // Default Twitter user for sharing\n    media: 'https://not.tv/storage/images/logo_white_512.png' // Default media (image) URL for sharing\n  };\n};\nvar useSocialShareStore = (0,pinia__WEBPACK_IMPORTED_MODULE_0__.defineStore)('socialShareStore', {\n  state: initialState,\n  // Set the initial state of the store\n  actions: {\n    // Action to reset the store to its initial state\n    reset: function reset() {\n      Object.assign(this, initialState());\n    },\n    // Action to show the social sharing modal and set the payload\n    showSocialSharing: function showSocialSharing(payload) {\n      this.socialSharingModal = true;\n      if (payload) {\n        this.title = payload.title || this.title;\n        this.url = payload.url || this.url;\n        this.description = payload.description || this.description;\n        this.quote = payload.quote || this.quote;\n        this.hashtags = payload.hashtags || this.hashtags;\n        this.twitterUser = payload.twitterUser || this.twitterUser;\n        this.media = payload.media || this.media;\n      }\n    },\n    // Action to parse the model and prepare the payload for sharing\n    parseModel: function parseModel(model) {\n      // console.log('Parsing model:', model)\n      var payload = {};\n      if (model.title) {\n        // Assign model values to payload or use default store values\n        payload.title = model.title;\n        payload.description = model.description || this.description;\n        payload.url = model.url || window.location.href;\n        payload.quote = model.quote || this.quote;\n        payload.hashtags = model.hashtags || this.hashtags;\n        payload.twitterUser = model.twitterUser || this.twitterUser;\n        payload.media = model.image || this.media;\n\n        // Debugging media processing\n        // console.log('Original media data:', model.image)\n\n        if (model.image) {\n          // Handle media if it is a string\n          if (typeof model.image === 'string') {\n            payload.media = model.image;\n          }\n          // Handle media if it is an object\n          else if (_typeof(model.image) === 'object') {\n            if (model.image.url) {\n              payload.media = model.image.url;\n            } else if (model.image.cdn_endpoint && model.image.cloud_folder && model.image.folder && model.image.name) {\n              // Construct media URL from parts if all are present\n              payload.media = \"\".concat(model.image.cdn_endpoint).concat(model.image.cloud_folder).concat(model.image.folder, \"/\").concat(model.image.name);\n            } else if (model.image.placeholder_url) {\n              payload.media = model.image.placeholder_url;\n            } else {\n              // Use default media if any part is missing\n              payload.media = this.media;\n            }\n          }\n        } else {\n          // Use default media if model.media is not provided\n          payload.media = this.media;\n        }\n\n        // Debugging the processed media URL and other payload data\n        // console.log('Processed media URL:', payload.media)\n        // console.log('Title:', payload.title)\n        // console.log('Description:', payload.description)\n        // console.log('URL:', payload.url)\n        // console.log('Media:', payload.media)\n        // console.log('Hashtags:', payload.hashtags)\n        // console.log('Twitter User:', payload.twitterUser)\n      }\n\n      // console.log('Payload for sharing:', payload)\n      this.showSocialSharing(payload);\n    },\n    // Action to hide the social sharing modal\n    hideSocialSharing: function hideSocialSharing() {\n      this.socialSharingModal = false;\n    }\n  },\n  getters: {\n    // Getters can be added here if needed in the future\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/Stores/SocialShareStore.js\n");

/***/ })

}]);
{"version":3,"file":"js/6927.js","mappings":"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","sources":["webpack:///./resources/js/Utilities/PageSetup.js","webpack:///./resources/js/Components/Global/Modals/Messages.vue?dfe9","webpack:///./resources/js/Components/Global/Modals/Messages.vue","webpack:///./resources/js/Pages/InviteCodes/Index.vue?73e1","webpack:///./resources/js/Pages/InviteCodes/Index.vue"],"sourcesContent":["import { onBeforeMount, onMounted, watch } from 'vue'\nimport { useUserStore } from \"@/Stores/UserStore\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useVideoPlayerStore } from \"@/Stores/VideoPlayerStore\"\nimport { router } from '@inertiajs/vue3'\n\nexport function usePageSetup(pageName) {\n    const userStore = useUserStore()\n    const appSettingStore = useAppSettingStore()\n    const videoPlayerStore = useVideoPlayerStore()\n\n    appSettingStore.currentPage = pageName\n    appSettingStore.showFlashMessage = true\n    appSettingStore.pageIsHidden = false\n\n// PageSetup utility\n    if (userStore.isMobile || window.innerWidth < 1024) {\n        appSettingStore.ott = 0; // Close all panels on mobile devices\n    } else if (appSettingStore.fullPage) {\n        appSettingStore.ott = 0; // Default to closed in fullPage mode\n    } else {\n        if (appSettingStore.ott === 0) {\n            appSettingStore.ott = 4\n        }\n        // appSettingStore.ott = 4; // Open OttChat by default on larger screens\n        appSettingStore.showOttButtons = true;\n    }\n\n    videoPlayerStore.makeVideoTopRight()\n\n    if (appSettingStore.pageReload) {\n        appSettingStore.pageReload = false\n        appSettingStore.pageWasReloaded = true\n        window.location.reload();\n    }\n    // Check if the URL contains query strings\n\n\n    // Only scroll into view if there are no query strings\n\n        // const topDiv = document.getElementById(\"topDiv\")\n        // if (topDiv) {\n        //     topDiv.scrollIntoView()\n        // }\n        router.on('navigate', (event) => {\n            // Ensure OTT panels do not open automatically on mobile devices\n            if (userStore.isMobile || window.innerWidth < 1024 || appSettingStore.fullPage) {\n                appSettingStore.ott = 0; // Close all panels on mobile devices\n            } else {\n                if (appSettingStore.ott === 0) {\n                    appSettingStore.ott = 4\n                }\n                // appSettingStore.ott = 0; // Default to closed on larger screens\n            }\n            const hasQueryStrings = window.location.search !== '';\n            if (!hasQueryStrings || appSettingStore.shouldScrollToTop) {\n                requestAnimationFrame(() => {\n                    const topDiv = document.getElementById(\"topDiv\");\n                    if (topDiv) {\n                        topDiv.scrollIntoView({behavior: 'auto'});\n                    } else {\n                        window.scrollTo(0, 0);\n                    }\n                });\n            }\n            appSettingStore.shouldScrollToTop = false;\n        })\n    // Only update if we're not already on this page to avoid overwriting with the current URL\n    appSettingStore.setPrevUrl()\n    appSettingStore.showOttButtons = true\n    appSettingStore.noLayout = false\n\n    // router.reload()\n\n    watch(\n        () => appSettingStore.isSmallScreen,\n        (newValue) => {\n            if (newValue) {\n                appSettingStore.ott = 0;\n            } else {\n                appSettingStore.ott = 4;\n            }\n        },\n        { immediate: true } // This option ensures the watch executes immediately with the current value\n    );\n\n}\n","import script from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"mx-4 my-4\">\n    <div class=\"alert alert-info mt-4\"\n         v-if=\"props.flash.message\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" class=\"stroke-current shrink-0 w-6 h-6\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n      </svg>\n      <span>{{ props.flash.message }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-success mt-4 mx-3\"\n         v-if=\"props.flash.success\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.success }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-warning mt-4 mx-3\"\n         v-if=\"props.flash.warning\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"/>\n      </svg>\n      <span>{{ props.flash.warning }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-error mt-4 mx-3\"\n         v-if=\"props.flash.error\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.error }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n  </div>\n\n</template>\n\n<script setup>\nimport { router } from '@inertiajs/vue3'\nimport { computed } from \"vue\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\n\nconst appSettingStore = useAppSettingStore()\n\nappSettingStore.showFlashMessage = true\n\nlet props = defineProps({\n  flash: Object,\n\n})\n\nconst messageType = computed(() => ({\n  'text-green-700 bg-green-100 dark:bg-green-200 dark:text-green-800': props.flash.success,\n  'text-blue-700 bg-blue-100 dark:bg-blue-200 dark:text-blue-800': props.flash.message,\n  'text-orange-700 bg-orange-100 dark:bg-orange-200 dark:text-orange-800': props.flash.warning,\n  'text-red-700 bg-red-100 dark:bg-red-200 dark:text-red-800': props.flash.error,\n}))\n\nconst clearFlashMessage = async () => {\n  await router.post(route('flash.clear'));\n  router.reload();\n};\n</script>\n","import script from \"./Index.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Index.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <Head title=\"Invite Codes\"/>\n\n  <div class=\"place-self-center flex flex-col\">\n    <div id=\"topDiv\" class=\"bg-white text-black dark:bg-gray-800 dark:text-gray-50 p-5 mb-10\">\n\n      <Message v-if=\"appSettingStore.showFlashMessage\" :flash=\"$page.props.flash\"/>\n\n      <div class=\"flex flex-row flex-wrap justify-between\">\n        <div>\n          <form>\n            <div class=\"mb-6\">\n              <label class=\"block mb-2 uppercase font-bold text-xs text-gray-700 dark:text-gray-300\"\n                     for=\"code\"\n              >\n                NEW CODE\n              </label>\n\n              <input v-model=\"form.code\"\n                     class=\"border border-gray-400 p-2 w-64 rounded-lg text-black\"\n                     type=\"text\"\n                     name=\"code\"\n                     id=\"code\"\n              >\n              <div v-if=\"form.errors.code\" v-text=\"form.errors.code\"\n                   class=\"text-xs text-red-600 mt-1\"></div>\n            </div>\n\n            <div class=\"flex justify-start my-6 mr-6\">\n              <button\n                  @click.prevent=\"submit\"\n                  class=\"bg-green-500 hover:bg-green-600 text-white px-4 py-2 rounded disabled:bg-gray-400\"\n                  :disabled=\"form.processing\"\n              >\n                Add Code\n              </button>\n\n\n              <!--                        <JetValidationErrors class=\"ml-4\" :key=\"props.messageKey\"/>-->\n            </div>\n\n          </form>\n        </div>\n\n\n        <div class=\"flex flex-col justify-start\">\n          <div class=\"flex flex-wrap\">\n            <div class=\"flex-1 min-w-0\">\n              <div class=\"flex flex-row flex-wrap\">\n                <button\n                    @click.prevent=\"exportCodes\"\n                    class=\"mr-2 btn bg-blue-500 hover:bg-blue-700 text-white\"\n                >\n                  Export Codes\n                </button>\n                <button @click.prevent=\"claimAllCodes\"\n                        class=\"mr-2 btn bg-orange-500 hover:bg-orange-700 text-white\">Claim All Codes\n                </button>\n                <button @click.prevent=\"appSettingStore.btnRedirect('/invite_codes/report')\"\n                        class=\"mr-2 btn bg-blue-500 hover:bg-blue-700 text-white\">Report\n                </button>\n                <button @click.prevent=\"appSettingStore.btnRedirect('/invite_codes/create')\"\n                        class=\"btn bg-green-500 hover:bg-green-700 text-white\">Create Code\n                </button>\n              </div>\n              <div class=\"flex flex-row gap-3 pt-3 shrink\">\n                <div class=\"flex flex-col\">\n                  <div class=\"w-38 pb-2\">\n                    How many <span class=\"font-semibold\">Creator Codes</span><br/>\n                    do new creators start with?\n                  </div>\n                  <div>\n                    <input type=\"number\" v-model.number=\"inviteCodeSettings.creatorCodes\" placeholder=\"Number of creator codes\"\n                           class=\"input bg-white text-black dark:bg-gray-800 dark:text-white input-bordered input-primary w-28 max-w-xs\"/>\n                    <button @click=\"updateInviteCodeSettings('creatorCodes', inviteCodeSettings.creatorCodes)\" class=\"btn btn-primary ml-2\">Save</button>\n                    <div v-if=\"saveStatus\" class=\"text-sm mt-2\">{{ saveStatus }}</div>\n                  </div>\n                </div>\n                <div class=\"flex flex-col\">\n                  <div class=\"w-38 pb-2\">\n                    How many <span class=\"font-semibold\">Viewer Codes</span><br/>\n                    do new creators start with?\n                  </div>\n                  <div>\n                    <input type=\"number\" v-model.number=\"inviteCodeSettings.viewerCodes\" placeholder=\"Number of viewer codes\"\n                           class=\"input bg-white text-black dark:bg-gray-800 dark:text-white input-bordered input-primary w-28 max-w-xs\"/>\n                    <button @click=\"updateInviteCodeSettings('viewerCodes', inviteCodeSettings.viewerCodes)\" class=\"btn btn-primary ml-2\">Save</button>\n                    <div v-if=\"saveStatus\" class=\"text-sm mt-2\">{{ saveStatus }}</div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n\n      <div class=\"flex flex-col w-full my-8 p-4 gap-8\">\n\n        <div class=\"overflow-x-auto\">\n          <div class=\"flex items-center justify-center\">\n            <div class=\"w-full lg:w-5/6\">\n              <div class=\"flex justify-between mt-4\">\n                <h1 class=\"text-xl font-semibold\">Manage Invite Codes</h1>\n                <div class=\"flex flex-row justify-end gap-x-4\">\n                  <input v-model=\"search\" type=\"search\" placeholder=\"Search...\"\n                         class=\"text-black border px-2 rounded-lg\"/>\n                </div>\n              </div>\n\n              <div class=\"bg-white shadow-md rounded my-6\">\n                <table class=\"min-w-max w-full table-auto\">\n                  <thead>\n                  <tr class=\"bg-gray-200 text-gray-600 uppercase text-sm leading-normal\">\n                    <th class=\"py-3 px-6 text-left\">Code</th>\n                    <th class=\"py-3 px-6 text-left\">Role</th>\n                    <th class=\"py-3 px-6 text-left\">Distributor</th>\n                    <th class=\"py-3 px-6 text-left\">Volume</th>\n                    <th class=\"py-3 px-6 text-left\">Uses</th>\n                    <th class=\"py-3 px-6 text-center\">Expiry</th>\n                    <th class=\"py-3 px-6 text-center\">Actions</th>\n                  </tr>\n                  </thead>\n                  <tbody class=\"text-gray-600 text-sm font-light\">\n                  <tr v-for=\"code in inviteCodes.data\" :key=\"code?.id\"\n                      class=\"border-b border-gray-200 hover:bg-gray-100\" :class=\"[{ 'bg-gray-100': code.claimed }]\">\n                    <td class=\"py-3 px-6 text-left whitespace-nowrap\">\n                      {{ code?.code }}\n                    </td>\n                    <td class=\"py-3 px-6 text-left\">\n                      {{ code?.role }}\n                    </td>\n                    <td class=\"py-3 px-6 text-left\">\n                      {{ code?.created_by_name }}\n                    </td>\n                    <td class=\"py-3 px-6 text-left\">\n                      {{ code?.volume }}\n                    </td>\n                    <td class=\"py-3 px-6 text-left\">\n                      {{ code?.uses }}\n                    </td>\n                    <td class=\"py-3 px-6 text-center\">\n                      <div v-if=\"!code.claimed\">\n                        <span v-if=\"code?.expiry_date\">{{ formatDate(code?.expiry_date) }}</span>\n                        <span v-else class=\"text-xs text-gray-600\">no expiry</span>\n                      </div>\n                      <div v-else class=\"text-primary\"> Code is claimed</div>\n                    </td>\n                    <td class=\"py-3 px-6 text-center\">\n                      <div v-if=\"!code.claimed\" class=\"flex item-center justify-center space-x-4\">\n                        <!-- Example action buttons -->\n                        <div class=\"w-4 mr-4 transform hover:text-blue-500 hover:scale-110\">\n                          <button @click.prevent=\"claimCode(code.id)\">Claim</button>\n                        </div>\n                        <div class=\"w-4 transform hover:text-purple-500 hover:scale-110\">\n                          <Link :href=\"`/invite_codes/${code.ulid}/edit`\">Edit</Link>\n                        </div>\n                        <div class=\"w-4 transform hover:text-red-500 hover:scale-110\">\n                          <button @click.prevent=\"deleteCode(code?.ulid)\">Delete</button>\n                        </div>\n                      </div>\n\n                    </td>\n                  </tr>\n                  </tbody>\n                </table>\n\n              </div>\n\n              <div v-if=\"inviteCodes.meta.last_page > 1\" class=\"flex justify-between items-center mt-4\">\n                <button\n                    class=\"join-item btn\"\n                    :disabled=\"!inviteCodes.links.prev\"\n                    @click=\"changePage(inviteCodes.links.prev)\">\n                  «\n                </button>\n                <span>Page {{ inviteCodes.meta.current_page }} of {{ inviteCodes.meta.last_page }}</span>\n                <button\n                    class=\"join-item btn\"\n                    :disabled=\"!inviteCodes.links.next\"\n                    @click=\"changePage(inviteCodes.links.next)\">\n                  »\n                </button>\n              </div>\n\n            </div>\n          </div>\n        </div>\n      </div>\n\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { router } from '@inertiajs/vue3'\nimport { usePageSetup } from '@/Utilities/PageSetup'\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\nimport Message from '@/Components/Global/Modals/Messages'\nimport { onMounted, ref, watch } from 'vue'\nimport throttle from 'lodash/throttle'\nimport { useForm } from '@inertiajs/vue3'\n\nusePageSetup('inviteCodes')\nconst appSettingStore = useAppSettingStore()\n\nconst props = defineProps({\n  inviteCodes: Object,\n  filters: null,\n})\n\nconst inviteCodeSettings = ref({ viewerCodes: 0, creatorCodes: 0 })\nconst saveStatus = ref('');\n\n\n// Function to fetch settings\nasync function fetchInviteCodeSettings() {\n  try {\n    const response = await axios.get('/invite-code-settings')\n    inviteCodeSettings.value = typeof response.data === 'string' ? JSON.parse(response.data) : response.data;\n  } catch (error) {\n    console.error('Failed to fetch invite code settings:', error)\n  }\n}\n\n// Function to update invite code settings\nconst updateInviteCodeSettings = async (key, value) => {\n  try {\n    const updatedSettings = { ...inviteCodeSettings.value, [key]: value }\n    await axios.patch('/invite-code-settings', updatedSettings)\n    saveStatus.value = 'Settings saved successfully!';\n    // Optionally, clear the message after a few seconds\n    setTimeout(() => saveStatus.value = '', 3000);\n\n    // await fetchInviteCodeSettings()\n  } catch (error) {\n    console.error('Failed to save settings:', error);\n    saveStatus.value = 'Failed to save settings.';\n    // Optionally, clear the message after a few seconds\n    setTimeout(() => saveStatus.value = '', 3000);\n  }\n}\n\n// // Function to update viewer code settings\n// async function updateViewerCodes() {\n//   try {\n//     await axios.patch('/invite-code-settings', {viewerCodes: viewerCodes.value})\n//     // Handle success\n//   } catch (error) {\n//     console.error('Failed to update viewer code settings:', error)\n//   }\n// }\n\n// Fetch settings when component mounts\nonMounted(fetchInviteCodeSettings)\n\nlet submit = () => {\n  form.post('/invite_codes/quick-add')\n  form.code = ''\n}\n\nlet exportCodes = () => {\n  router.visit(route('inviteCodes.export'))\n}\n\nlet form = useForm({\n  code: '',\n})\n\nlet search = ref(props.filters.search)\n\nwatch(search, throttle(function (value) {\n  router.get('/invite_codes', {search: value}, {\n    preserveState: true,\n    replace: true,\n  })\n}, 300))\n\nconst changePage = (url) => {\n  if (url) {\n    router.visit(url)\n  }\n}\n\nconst deleteCode = (id) => {\n  if (!confirm('Are you sure you want to delete this invite code?')) {\n    return\n  }\n\n  router.delete(`/invite_codes/${id}`, {\n    onSuccess: () => {\n      // Optionally refresh the page or modify the local state to reflect the deletion\n    },\n  })\n}\n\nconst claimCode = (codeId) => {\n  if (!confirm('Are you sure you want to claim this invite code?')) {\n    return\n  }\n\n  router.post(`/invite_codes/claim/${codeId}`, {\n    onSuccess: () => {\n      // Optionally refresh the page or modify the local state to reflect the deletion\n    },\n  })\n}\n\nconst claimAllCodes = () => {\n  if (!confirm('Are you sure you want to claim all of the invite codes?')) {\n    return\n  }\n\n  router.post('/invite_codes/claim_all', {\n    onSuccess: () => {\n      // Optionally refresh the page or modify the local state to reflect the deletion\n    },\n  })\n}\n</script>\n"],"names":["usePageSetup","pageName","userStore","useUserStore","appSettingStore","useAppSettingStore","videoPlayerStore","useVideoPlayerStore","currentPage","showFlashMessage","pageIsHidden","isMobile","window","innerWidth","fullPage","ott","showOttButtons","makeVideoTopRight","pageReload","pageWasReloaded","location","reload","router","on","event","search","shouldScrollToTop","requestAnimationFrame","topDiv","document","getElementById","scrollIntoView","behavior","scrollTo","setPrevUrl","noLayout","watch","isSmallScreen","newValue","immediate","props","__props","clearFlashMessage","computed","flash","success","message","warning","error","_ref","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","post","route","stop","apply","arguments","inviteCodeSettings","ref","viewerCodes","creatorCodes","saveStatus","_fetchInviteCodeSettings","_asyncToGenerator","_callee2","response","_context2","axios","get","sent","value","data","JSON","parse","t0","console","updateInviteCodeSettings","key","updatedSettings","_objectSpread","_defineProperty","patch","setTimeout","_x","_x2","onMounted","submit","form","code","exportCodes","visit","useForm","filters","throttle","preserveState","replace","changePage","url","claimAllCodes","confirm","onSuccess","codeId","concat","id"],"sourceRoot":""}
{"version":3,"file":"js/6927.js","mappings":";8JAMO,SAASA,EAAaC,GACzB,IAAMC,GAAYC,EAAAA,EAAAA,gBACZC,GAAkBC,EAAAA,EAAAA,sBAClBC,GAAmBC,EAAAA,EAAAA,uBAEzBH,EAAgBI,YAAcP,EAC9BG,EAAgBK,kBAAmB,EACnCL,EAAgBM,cAAe,EAE3BR,EAAUS,WACVP,EAAgBQ,IAAM,GAG1BN,EAAiBO,oBAEbT,EAAgBU,aAChBV,EAAgBU,YAAa,EAC7BC,OAAOC,SAASC,QAAO,IAWvBC,EAAAA,QAAQC,GAAG,YAAY,SAACC,GAC+B,KAA3BL,OAAOC,SAASK,QAEpCC,uBAAsB,WAClB,IAAMC,EAASC,SAASC,eAAe,UACnCF,EACAA,EAAOG,eAAe,CAACC,SAAU,SAEjCZ,OAAOa,SAAS,EAAG,EAE3B,GAER,IAEJxB,EAAgByB,aAChBzB,EAAgB0B,UAAW,EAC3B1B,EAAgB2B,gBAAiB,CAGrC,6xQChDA,6DC0CwB1B,EAAAA,EAAAA,sBAERI,kBAAmB,EAEnC,IAAIuB,EAAQC,EAYNC,IAPcC,EAAAA,EAAAA,WAAS,iBAAO,CAClC,oEAAqEH,EAAMI,MAAMC,QACjF,gEAAiEL,EAAMI,MAAME,QAC7E,wEAAyEN,EAAMI,MAAMG,QACrF,4DAA6DP,EAAMI,MAAMI,MAC1E,IAEsB,iBAAAC,KAAAC,IAAAC,MAAG,SAAAC,IAAA,OAAAF,IAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAClB9B,EAAAA,QAAQ+B,KAAKC,MAAM,gBAAe,OACxChC,EAAAA,QAAQD,SAAS,wBAAA6B,EAAAK,OAAA,GAAAP,EAAA,mLAClB,kBAHsB,OAAAH,EAAAW,MAAA,KAAAC,UAAA,yjHC1DvB,6ECqKArD,EAAAA,EAAAA,GAAa,eACb,IAAMI,GAAkBC,EAAAA,EAAAA,sBAElB2B,EAAQC,EAKVqB,EAAS,WACXC,EAAKN,KAAK,2BACVM,EAAKC,KAAO,EACd,EAEIC,EAAc,WAChBvC,EAAAA,QAAQwC,MAAMR,MAAM,sBACtB,EAEIK,GAAOI,EAAAA,EAAAA,IAAQ,CACjBH,KAAM,KAGJnC,GAASuC,EAAAA,EAAAA,KAAI5B,EAAM6B,QAAQxC,SAE/ByC,EAAAA,EAAAA,OAAMzC,EAAQ0C,KAAS,SAAUC,GAC/B9C,EAAAA,QAAQ+C,IAAI,gBAAiB,CAAC5C,OAAQ2C,GAAQ,CAC5CE,eAAe,EACfC,SAAS,GAEb,GAAG,MAEH,IAAMC,GAAa,SAACC,GACdA,GACFnD,EAAAA,QAAQwC,MAAMW,EAElB,EA0BMC,GAAgB,WACfC,QAAQ,4DAIbrD,EAAAA,QAAQ+B,KAAK,0BAA2B,CACtCuB,UAAW,WACT,GAGN,uqIAtBmBC,YACZF,QAAQ,qDAIbrD,EAAAA,QAAQ+B,KAAK,uBAADyB,OAAwBD,GAAU,CAC5CD,UAAW,WACT,KAPY,IAACC,2VAZCE,2BACbJ,QAAQ,sDAIbrD,EAAAA,QAAO,OAAQ,iBAADwD,OAAkBC,GAAM,CACpCH,UAAW,WACT,KAPa,IAACG","sources":["webpack:///./resources/js/Utilities/PageSetup.js","webpack:///./resources/js/Components/Global/Modals/Messages.vue?dfe9","webpack:///./resources/js/Components/Global/Modals/Messages.vue","webpack:///./resources/js/Pages/InviteCodes/Index.vue?73e1","webpack:///./resources/js/Pages/InviteCodes/Index.vue"],"sourcesContent":["import { onBeforeMount, onMounted } from 'vue'\nimport { useUserStore } from \"@/Stores/UserStore\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useVideoPlayerStore } from \"@/Stores/VideoPlayerStore\"\nimport { Inertia } from '@inertiajs/inertia'\n\nexport function usePageSetup(pageName) {\n    const userStore = useUserStore()\n    const appSettingStore = useAppSettingStore()\n    const videoPlayerStore = useVideoPlayerStore()\n\n    appSettingStore.currentPage = pageName\n    appSettingStore.showFlashMessage = true\n    appSettingStore.pageIsHidden = false\n\n    if (userStore.isMobile) {\n        appSettingStore.ott = 0\n    }\n\n    videoPlayerStore.makeVideoTopRight()\n\n    if (appSettingStore.pageReload) {\n        appSettingStore.pageReload = false\n        window.location.reload(true);\n    }\n    // Check if the URL contains query strings\n\n\n    // Only scroll into view if there are no query strings\n\n        // const topDiv = document.getElementById(\"topDiv\")\n        // if (topDiv) {\n        //     topDiv.scrollIntoView()\n        // }\n        Inertia.on('navigate', (event) => {\n            const hasQueryStrings = window.location.search !== '';\n            if (!hasQueryStrings) {\n                requestAnimationFrame(() => {\n                    const topDiv = document.getElementById(\"topDiv\");\n                    if (topDiv) {\n                        topDiv.scrollIntoView({behavior: 'auto'});\n                    } else {\n                        window.scrollTo(0, 0);\n                    }\n                });\n            }\n        })\n    // Only update if we're not already on this page to avoid overwriting with the current URL\n    appSettingStore.setPrevUrl()\n    appSettingStore.noLayout = false\n    appSettingStore.showOttButtons = true\n    // Inertia.reload()\n\n}\n","import script from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"mx-4 my-4\">\n    <div class=\"alert alert-info mt-4\"\n         v-if=\"props.flash.message\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" class=\"stroke-current shrink-0 w-6 h-6\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n      </svg>\n      <span>{{ props.flash.message }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-success mt-4 mx-3\"\n         v-if=\"props.flash.success\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.success }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-warning mt-4 mx-3\"\n         v-if=\"props.flash.warning\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"/>\n      </svg>\n      <span>{{ props.flash.warning }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-error mt-4 mx-3\"\n         v-if=\"props.flash.error\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.error }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n  </div>\n\n</template>\n\n<script setup>\nimport { Inertia } from \"@inertiajs/inertia\"\nimport { computed } from \"vue\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\n\nconst appSettingStore = useAppSettingStore()\n\nappSettingStore.showFlashMessage = true\n\nlet props = defineProps({\n  flash: Object,\n\n})\n\nconst messageType = computed(() => ({\n  'text-green-700 bg-green-100 dark:bg-green-200 dark:text-green-800': props.flash.success,\n  'text-blue-700 bg-blue-100 dark:bg-blue-200 dark:text-blue-800': props.flash.message,\n  'text-orange-700 bg-orange-100 dark:bg-orange-200 dark:text-orange-800': props.flash.warning,\n  'text-red-700 bg-red-100 dark:bg-red-200 dark:text-red-800': props.flash.error,\n}))\n\nconst clearFlashMessage = async () => {\n  await Inertia.post(route('flash.clear'));\n  Inertia.reload();\n};\n</script>\n","import script from \"./Index.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Index.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <Head title=\"Invite Codes\"/>\n\n  <div class=\"place-self-center flex flex-col\">\n    <div id=\"topDiv\" class=\"bg-white text-black dark:bg-gray-800 dark:text-gray-50 p-5 mb-10\">\n\n      <Message v-if=\"appSettingStore.showFlashMessage\" :flash=\"$page.props.flash\"/>\n\n      <div class=\"flex flex-row flex-wrap justify-between\">\n        <div>\n        <form>\n          <div class=\"mb-6\">\n            <label class=\"block mb-2 uppercase font-bold text-xs text-gray-700 dark:text-gray-300\"\n                   for=\"code\"\n            >\n              NEW CODE\n            </label>\n\n            <input v-model=\"form.code\"\n                   class=\"border border-gray-400 p-2 w-64 rounded-lg text-black\"\n                   type=\"text\"\n                   name=\"code\"\n                   id=\"code\"\n            >\n            <div v-if=\"form.errors.code\" v-text=\"form.errors.code\"\n                 class=\"text-xs text-red-600 mt-1\"></div>\n          </div>\n\n          <div class=\"flex justify-start my-6 mr-6\">\n            <button\n                @click.prevent=\"submit\"\n                class=\"bg-green-500 hover:bg-green-600 text-white px-4 py-2 rounded disabled:bg-gray-400\"\n                :disabled=\"form.processing\"\n            >\n              Add Code\n            </button>\n\n\n            <!--                        <JetValidationErrors class=\"ml-4\" :key=\"props.messageKey\"/>-->\n          </div>\n\n        </form>\n        </div>\n\n\n        <div class=\"flex flex-row justify-end\">\n          <button\n              @click.prevent=\"exportCodes\"\n              class=\"mr-2 btn bg-blue-500 hover:bg-blue-700 text-white\"\n          >\n            Export Codes\n          </button>\n          <button @click.prevent=\"claimAllCodes\"\n                  class=\"mr-2 btn bg-orange-500 hover:bg-orange-700 text-white\">Claim All Codes\n          </button>\n          <button @click.prevent=\"appSettingStore.btnRedirect('/invite_codes/report')\"\n                  class=\"mr-2 btn bg-blue-500 hover:bg-blue-700 text-white\">Report\n          </button>\n          <button @click.prevent=\"appSettingStore.btnRedirect('/invite_codes/create')\"\n                  class=\"btn bg-green-500 hover:bg-green-700 text-white\">Create Code\n          </button>\n        </div>\n      </div>\n\n\n\n      <div class=\"flex flex-col w-full my-8 p-4 gap-8\">\n\n        <div class=\"overflow-x-auto\">\n          <div class=\"flex items-center justify-center\">\n            <div class=\"w-full lg:w-5/6\">\n              <div class=\"flex justify-between mt-4\">\n                <h1 class=\"text-xl font-semibold\">Manage Invite Codes</h1>\n                <div class=\"flex flex-row justify-end gap-x-4\">\n                  <input v-model=\"search\" type=\"search\" placeholder=\"Search...\" class=\"text-black border px-2 rounded-lg\"/>\n                </div>\n              </div>\n\n              <div class=\"bg-white shadow-md rounded my-6\">\n                <table class=\"min-w-max w-full table-auto\">\n                  <thead>\n                  <tr class=\"bg-gray-200 text-gray-600 uppercase text-sm leading-normal\">\n                    <th class=\"py-3 px-6 text-left\">Code</th>\n                    <th class=\"py-3 px-6 text-left\">Role</th>\n                    <th class=\"py-3 px-6 text-left\">Distributor</th>\n                    <th class=\"py-3 px-6 text-left\">Volume</th>\n                    <th class=\"py-3 px-6 text-left\">Uses</th>\n                    <th class=\"py-3 px-6 text-center\">Expiry</th>\n                    <th class=\"py-3 px-6 text-center\">Actions</th>\n                  </tr>\n                  </thead>\n                  <tbody class=\"text-gray-600 text-sm font-light\">\n                  <tr v-for=\"code in inviteCodes.data\" :key=\"code?.id\" class=\"border-b border-gray-200 hover:bg-gray-100\" :class=\"[{ 'bg-gray-100': code.claimed }]\">\n                    <td class=\"py-3 px-6 text-left whitespace-nowrap\">\n                      {{ code?.code }}\n                    </td>\n                    <td class=\"py-3 px-6 text-left\">\n                      {{ code?.role }}\n                    </td>\n                    <td class=\"py-3 px-6 text-left\">\n                      {{ code?.created_by_name }}\n                    </td>\n                    <td class=\"py-3 px-6 text-left\">\n                      {{ code?.volume }}\n                    </td>\n                    <td class=\"py-3 px-6 text-left\">\n                      {{ code?.uses }}\n                    </td>\n                    <td class=\"py-3 px-6 text-center\">\n                      <div v-if=\"!code.claimed\">\n                        <span v-if=\"code?.expiry_date\">{{ formatDate(code?.expiry_date) }}</span>\n                        <span v-else class=\"text-xs text-gray-600\">no expiry</span>\n                      </div>\n                      <div v-else class=\"text-primary\"> Code is claimed </div>\n                    </td>\n                    <td class=\"py-3 px-6 text-center\">\n                      <div v-if=\"!code.claimed\" class=\"flex item-center justify-center space-x-4\">\n                        <!-- Example action buttons -->\n                        <div class=\"w-4 mr-4 transform hover:text-blue-500 hover:scale-110\">\n                          <button @click.prevent=\"claimCode(code.id)\">Claim</button>\n                        </div>\n                        <div class=\"w-4 transform hover:text-purple-500 hover:scale-110\">\n                          <Link :href=\"`/invite_codes/${code.id}/edit`\">Edit</Link>\n                        </div>\n                        <div class=\"w-4 transform hover:text-red-500 hover:scale-110\">\n                          <button @click.prevent=\"deleteCode(code?.id)\">Delete</button>\n                        </div>\n                      </div>\n\n                    </td>\n                  </tr>\n                  </tbody>\n                </table>\n\n              </div>\n\n              <div v-if=\"inviteCodes.meta.last_page > 1\" class=\"flex justify-between items-center mt-4\">\n                <button\n                    class=\"join-item btn\"\n                    :disabled=\"!inviteCodes.links.prev\"\n                    @click=\"changePage(inviteCodes.links.prev)\">\n                  «\n                </button>\n                <span>Page {{ inviteCodes.meta.current_page }} of {{ inviteCodes.meta.last_page }}</span>\n                <button\n                    class=\"join-item btn\"\n                    :disabled=\"!inviteCodes.links.next\"\n                    @click=\"changePage(inviteCodes.links.next)\">\n                  »\n                </button>\n              </div>\n\n            </div>\n          </div>\n        </div>\n      </div>\n\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { Inertia } from '@inertiajs/inertia'\nimport { usePageSetup } from '@/Utilities/PageSetup'\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\nimport Message from '@/Components/Global/Modals/Messages'\nimport { ref, watch } from 'vue'\nimport throttle from 'lodash/throttle'\nimport { useForm } from '@inertiajs/inertia-vue3'\n\nusePageSetup('inviteCodes')\nconst appSettingStore = useAppSettingStore()\n\nconst props = defineProps({\n  inviteCodes: Object,\n  filters: null,\n})\n\nlet submit = () => {\n  form.post('/invite_codes/quick-add');\n  form.code = '';\n};\n\nlet exportCodes = () => {\n  Inertia.visit(route('inviteCodes.export'));\n}\n\nlet form = useForm({\n  code: '',\n})\n\nlet search = ref(props.filters.search);\n\nwatch(search, throttle(function (value) {\n  Inertia.get('/invite_codes', {search: value}, {\n    preserveState: true,\n    replace: true\n  });\n}, 300));\n\nconst changePage = (url) => {\n  if (url) {\n    Inertia.visit(url)\n  }\n}\n\nconst deleteCode = (id) => {\n  if (!confirm('Are you sure you want to delete this invite code?')) {\n    return;\n  }\n\n  Inertia.delete(`/invite_codes/${id}`, {\n    onSuccess: () => {\n      // Optionally refresh the page or modify the local state to reflect the deletion\n    },\n  });\n};\n\nconst claimCode = (codeId) => {\n  if (!confirm('Are you sure you want to claim this invite code?')) {\n    return;\n  }\n\n  Inertia.post(`/invite_codes/claim/${codeId}`, {\n    onSuccess: () => {\n      // Optionally refresh the page or modify the local state to reflect the deletion\n    },\n  });\n}\n\nconst claimAllCodes = () => {\n  if (!confirm('Are you sure you want to claim all of the invite codes?')) {\n    return;\n  }\n\n  Inertia.post('/invite_codes/claim_all', {\n    onSuccess: () => {\n      // Optionally refresh the page or modify the local state to reflect the deletion\n    },\n  });\n}\n</script>"],"names":["usePageSetup","pageName","userStore","useUserStore","appSettingStore","useAppSettingStore","videoPlayerStore","useVideoPlayerStore","currentPage","showFlashMessage","pageIsHidden","isMobile","ott","makeVideoTopRight","pageReload","window","location","reload","Inertia","on","event","search","requestAnimationFrame","topDiv","document","getElementById","scrollIntoView","behavior","scrollTo","setPrevUrl","noLayout","showOttButtons","props","__props","clearFlashMessage","computed","flash","success","message","warning","error","_ref","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","post","route","stop","apply","arguments","submit","form","code","exportCodes","visit","useForm","ref","filters","watch","throttle","value","get","preserveState","replace","changePage","url","claimAllCodes","confirm","onSuccess","codeId","concat","id"],"sourceRoot":""}
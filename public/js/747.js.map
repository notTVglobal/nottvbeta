{"version":3,"file":"js/747.js","mappings":";sMAMO,SAASA,EAAaC,GACzB,IAAMC,GAAYC,EAAAA,EAAAA,gBACZC,GAAkBC,EAAAA,EAAAA,sBAClBC,GAAmBC,EAAAA,EAAAA,uBAEzBH,EAAgBI,YAAcP,EAC9BG,EAAgBK,kBAAmB,EACnCL,EAAgBM,cAAe,EAG3BR,EAAUS,UAAYC,OAAOC,WAAa,MAEnCT,EAAgBU,SADvBV,EAAgBW,IAAM,GAIM,IAAxBX,EAAgBW,MAChBX,EAAgBW,IAAM,GAG1BX,EAAgBY,gBAAiB,GAGrCV,EAAiBW,oBAEbb,EAAgBc,aAChBd,EAAgBc,YAAa,EAC7Bd,EAAgBe,iBAAkB,EAClCP,OAAOQ,SAASC,UAWhBC,EAAAA,GAAOC,GAAG,YAAY,SAACC,GAEftB,EAAUS,UAAYC,OAAOC,WAAa,MAAQT,EAAgBU,SAClEV,EAAgBW,IAAM,EAEM,IAAxBX,EAAgBW,MAChBX,EAAgBW,IAAM,GAIqB,KAA3BH,OAAOQ,SAASK,SAChBrB,EAAgBsB,mBACpCC,uBAAsB,WAClB,IAAMC,EAASC,SAASC,eAAe,UACnCF,EACAA,EAAOG,eAAe,CAACC,SAAU,SAEjCpB,OAAOqB,SAAS,EAAG,EAE3B,IAEJ7B,EAAgBsB,mBAAoB,CACxC,IAEJtB,EAAgB8B,aAChB9B,EAAgBY,gBAAiB,EACjCZ,EAAgB+B,UAAW,GAI3BC,EAAAA,EAAAA,QACI,kBAAMhC,EAAgBiC,aAAa,IACnC,SAACC,GAEOlC,EAAgBW,IADhBuB,EACsB,EAEA,CAE9B,GACA,CAAEC,WAAW,GAGrB,uECnFIC,QAA0B,GAA4B,KAE1DA,EAAwBC,KAAK,CAACC,EAAOC,GAAI,oHAAqH,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,wEAAwE,MAAQ,GAAG,SAAW,iDAAiD,eAAiB,CAAC,85HAA65H,WAAa,MAEpwI,+ECJIH,QAA0B,GAA4B,KAE1DA,EAAwBC,KAAK,CAACC,EAAOC,GAAI,qGAAsG,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,6EAA6E,MAAQ,GAAG,SAAW,oCAAoC,eAAiB,CAAC,4iLAAyhL,WAAa,MAEz2L,+ECJIH,QAA0B,GAA4B,KAE1DA,EAAwBC,KAAK,CAACC,EAAOC,GAAI,mRAAoR,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,gFAAgF,MAAQ,GAAG,SAAW,sHAAsH,eAAiB,CAAC,8sWAAq1W,WAAa,MAEx6X,4HCFA,mHC0BA,IAAIC,EAAQC,EAONzC,GAAkBC,EAAAA,EAAAA,sBAElByC,EAAW,SAACC,EAAUC,GAC1BC,QAAQC,IAAI,SACZ9C,EAAgB+C,mBAAmBJ,SAAWA,EAC9C3C,EAAgB+C,mBAAmBH,SAAWA,EAC9C5C,EAAgBgD,wBAAyB,CAC3C,snDCxCA,8HCgBMC,SAGAC,EAAU,SAAC9B,GACf6B,EAAK,oBAAqB7B,EAAM+B,OAAOC,MACzC,EAEA,SAASC,EAAWC,GAClB,IAAIC,EAAWD,EAAEH,OAGbK,EAAMD,EAASH,MACfK,EAAQF,EAASG,eACjBC,EAAMJ,EAASK,aAGnBL,EAASH,MAAQI,EAAIK,UAAU,EAAGJ,GAAS,KAAOD,EAAIK,UAAUF,GAGhEJ,EAASG,eAAiBH,EAASK,aAAeH,EAAQ,CAC5D,imCCGMK,GAAqBC,EAAAA,EAAAA,wBAEvBvB,EAAQC,EAaNQ,IAFUe,EAAAA,EAAAA,KAAI,CAAC,KAERC,GAEPC,EAAWC,IACbC,IACAC,IACAC,KAIEC,GAAaP,EAAAA,EAAAA,MAAI,GACjBQ,GAAUR,EAAAA,EAAAA,KAAI,QACdS,GAAYT,EAAAA,EAAAA,KAAI,CAAC,YAAa,eAK9BU,EAAYjD,SAASkD,cAAc,2BAA2BC,aAAa,WAE3EC,GAAgBb,EAAAA,EAAAA,KAAI,CACxBc,QAAS,CACPC,IAAK,+BAAFC,OAAiCxC,EAAMyC,UAAS,aAAAD,OAAYxC,EAAM0C,QAAO,gBAAAF,OAAeT,EAAWnB,OACtG+B,OAAQ,OACRC,QAAS,CACP,eAAgBV,GAElBW,iBAAiB,EACjBC,OAAQ,SAACC,GACP,IAAMC,EAAeC,KAAKC,MAAMH,GAChC,GAAIC,EAAaG,MACf,MAAM,IAAIC,MAAMJ,EAAaG,OAE/B,OAAOH,CACT,EACAK,QAAS,SAACN,GACR,IAAMI,EAAQF,KAAKC,MAAMH,GAGzB,OAFA1C,QAAQ8C,MAAM,kBAAmBA,GACjC7B,EAAkBgC,8BAA8B,QAASP,GAClDI,EAAMA,OAAS,eACxB,KASJ,SAASI,IACPlD,QAAQC,IAAI,2BACd,CAEA,SAASkD,EAAoBL,EAAOM,GAC9BN,EACF9C,QAAQC,IAAI,iCAAkC6C,GAGhD1C,EAAK,cAIP,yoCCpHIiD,EAAU,CAEdA,OAAiB,OACjBA,WAAoB,GAEP,IAAI,IAASA,GAIX,IAAQC,OCNvB,MAEA,GAFiC,cAAgB,EAAQ,CAAC,CAAC,YAAY,8GCDvE,qqBCAA,yfCAA,otBCAA,gLCFMlD,SAiBAmD,EAAQ,WACVnD,EAAK,QACT,yxBCjBA,8DCCA,IAAMoD,GAAaC,EAAAA,EAAAA,WAAS,oBAASC,EAAAA,EAAAA,YAAWC,OAAO,g4BCDvD,2GCIMC,GAAQzC,EAAAA,EAAAA,KAAI,aAElB0C,EAAAA,EAAAA,YAAU,WACFD,EAAMrD,MAAMuD,aAAa,cACzBF,EAAMrD,MAAMwD,OAEpB,IAEAC,EAAa,CAAED,MAAO,kBAAMH,EAAMrD,MAAMwD,OAAO,2eCZ/C,2YCAA,sjBCAA,mLCFMpE,EAAQC,EAeRQ,EAAOgB,GAEbjC,EAAAA,EAAAA,QAAM,kBAAMQ,EAAMsE,IAAI,IAAE,WAChBtE,EAAMsE,KACNrF,SAASsF,KAAKC,MAAMC,SAAW,SAE/BxF,SAASsF,KAAKC,MAAMC,SAAW,IAEvC,IAEA,IAAMb,EAAQ,WACN5D,EAAM0E,WACNjE,EAAK,QAEb,EAEMkE,EAAgB,SAAC7D,GACL,WAAVA,EAAE8D,KAAoB5E,EAAMsE,MAC5BV,GAER,GAEAM,EAAAA,EAAAA,YAAU,kBAAMjF,SAAS4F,iBAAiB,UAAWF,EAAc,KAEnEG,EAAAA,EAAAA,cAAY,WACR7F,SAAS8F,oBAAoB,UAAWJ,GACxC1F,SAASsF,KAAKC,MAAMC,SAAW,IACnC,IAEA,IAAMO,GAAgBlB,EAAAA,EAAAA,WAAS,WAC3B,MAAO,CACH,GAAM,cACN,GAAM,cACN,GAAM,cACN,GAAM,cACN,MAAO,gBACT9D,EAAMiF,SACZ,kgDClDA,0lBCJSC,MAAM,uBACPC,EAAAA,EAAAA,oBAEM,OAFDD,MAAM,QAAM,EACbC,EAAAA,EAAAA,oBAAwC,OAAnCD,MAAM,+BAA0B,ICFjD,MAAME,EAAS,CAAC,EAKhB,GAFiC,cAAgBA,EAAQ,CAAC,CAAC,gDDHvDC,EAAAA,EAAAA,oBAIM,MAJNC,EADJC,2DECSL,MAAM,yCACFA,MAAM,mBACHA,MAAM,wCAIPA,MAAM,iCAKRA,MAAM,gBCXnB,MAAME,EAAS,CAAC,EAKhB,GAFiC,cAAgBA,EAAQ,CAAC,CAAC,gDDHvDC,EAAAA,EAAAA,oBAcM,MAdNC,EAcM,EAbFH,EAAAA,EAAAA,oBAQM,MARNK,EAQM,EAPFL,EAAAA,EAAAA,oBAEK,KAFLI,EAEK,EADDE,EAAAA,EAAAA,YAAqBC,EAAAC,OAAA,YAGzBR,EAAAA,EAAAA,oBAEI,IAFJS,EAEI,EADAH,EAAAA,EAAAA,YAA2BC,EAAAC,OAAA,oBAInCR,EAAAA,EAAAA,oBAEM,MAFNU,EAEM,EADFJ,EAAAA,EAAAA,YAAqBC,EAAAC,OAAA,4cERjC,6CCKA,IAAMG,GAAyBtE,EAAAA,EAAAA,MAAI,GAC7BuE,GAAgBvE,EAAAA,EAAAA,KAAI,MAEpBwE,GAAOC,EAAAA,EAAAA,IAAQ,CACjBC,SAAU,KAGRC,EAAsB,WACxBL,EAAuBlF,OAAQ,EAE/BwF,YAAW,kBAAML,EAAcnF,MAAMwD,OAAO,GAAE,IAClD,EAEMiC,EAAa,WACfL,EAAI,OAAQM,MAAM,wBAAyB,CACvCC,gBAAgB,EAChBC,UAAW,kBAAMC,GAAY,EAC7BC,QAAS,kBAAMX,EAAcnF,MAAMwD,OAAO,EAC1CuC,SAAU,kBAAMX,EAAKY,OAAO,GAEpC,EAEMH,EAAa,WACfX,EAAuBlF,OAAQ,EAE/BoF,EAAKY,OACT,ssGC/BA,oFCUA,IAAMC,GAAmBrF,EAAAA,EAAAA,MAAI,GACvBuE,GAAgBvE,EAAAA,EAAAA,KAAI,MAEpBwE,GAAOC,EAAAA,EAAAA,IAAQ,CACjBC,SAAU,KAGRY,EAAgB,WAClBD,EAAiBjG,OAAQ,EAEzBwF,YAAW,kBAAML,EAAcnF,MAAMwD,OAAO,GAAE,IAClD,EAEM2C,EAA6B,WAC/Bf,EAAI,OAAQM,MAAM,kCAAmC,CACjDC,gBAAgB,EAChBC,UAAW,kBAAMC,GAAY,EAC7BC,QAAS,kBAAMX,EAAcnF,MAAMwD,OAAO,EAC1CuC,SAAU,kBAAMX,EAAKY,OAAO,GAEpC,EAEMH,EAAa,WACfI,EAAiBjG,OAAQ,EAEzBoF,EAAKY,OACT,gkGCpCA,oQCGMnG,SAiBAuG,GAAqBxF,EAAAA,EAAAA,MAAI,GAEzBwE,GAAOiB,EAAAA,EAAAA,UAAS,CAClBf,SAAU,GACV/C,MAAO,GACP+D,YAAY,IAGVnB,GAAgBvE,EAAAA,EAAAA,KAAI,MAEpB2F,EAA0B,WAC5BC,MAAMC,IAAIf,MAAM,0BAA0BgB,MAAK,SAAAvE,GACvCA,EAASwE,KAAKC,UACd/G,EAAK,cAELuG,EAAmBpG,OAAQ,EAE3BwF,YAAW,kBAAML,EAAcnF,MAAMwD,OAAO,GAAE,KAEtD,GACJ,EAEMqD,EAAkB,WACpBzB,EAAKkB,YAAa,EAElBE,MAAMM,KAAKpB,MAAM,oBAAqB,CAClCJ,SAAUF,EAAKE,WAChBoB,MAAK,WACJtB,EAAKkB,YAAa,EAElBT,KACAkB,EAAAA,EAAAA,YAAWL,MAAK,kBAAM7G,EAAK,YAAY,GAE3C,IAAE,OAAO,SAAA0C,GACL6C,EAAKkB,YAAa,EAClBlB,EAAK7C,MAAQA,EAAMJ,SAASwE,KAAKK,OAAO1B,SAAS,GACjDH,EAAcnF,MAAMwD,OACxB,GACJ,EAEMqC,EAAa,WACfO,EAAmBpG,OAAQ,EAC3BoF,EAAKE,SAAW,GAChBF,EAAK7C,MAAQ,EACjB,o4EChEA,+FCgKA,IAAMnD,EAAQC,EAIR4H,GAAWrG,EAAAA,EAAAA,MAAI,GACfsG,GAAatG,EAAAA,EAAAA,MAAI,GACjBuG,GAAYvG,EAAAA,EAAAA,MAAI,GAChBwG,GAASxG,EAAAA,EAAAA,KAAI,MACbyG,GAAWzG,EAAAA,EAAAA,KAAI,MACf0G,GAAgB1G,EAAAA,EAAAA,KAAI,IAEpB2G,GAAmBlC,EAAAA,EAAAA,IAAQ,CAC/BmC,KAAM,KAGFC,GAAmBvE,EAAAA,EAAAA,WAAS,eAAAwE,EAAA,OAAOT,EAASjH,QAAkC,QAA7B0H,GAAIC,EAAAA,EAAAA,MAAUvI,MAAMwI,KAAKC,YAAI,IAAAH,OAAA,EAAzBA,EAA2BI,mBAAkB,KAExGlJ,EAAAA,EAAAA,OAAM6I,GAAkB,WACjBA,EAAiBzH,QACpBuH,EAAiBvB,QACjBuB,EAAiBQ,cAErB,IAEA,IAAMC,EAAgC,WAEpCf,EAASjH,OAAQ,EAEjBlC,EAAAA,GAAOgJ,KAAK,kCAAmC,CAAC,EAAG,CACjDnB,gBAAgB,EAChBC,UAAW,WAET,OAAOqC,QAAQC,IAAI,CACjBC,IACAC,IACAC,KAEJ,EACAtC,SAAU,WAERkB,EAASjH,OAAQ,EACjBkH,EAAWlH,MAAQZ,EAAMkJ,oBAC3B,EACAxC,QAAS,SAACkB,GACRvH,QAAQ8C,MAAM,4CAA6CyE,GAC3DC,EAASjH,OAAQ,CACnB,GAEJ,EAEMmI,EAAa,WAEjB,OAAO3B,EAAAA,EAAMC,IAAI,4BAA4BC,MAAK,SAAAvE,GAChDiF,EAAOpH,MAAQmC,EAASwE,KAAK4B,GAC/B,IAAE,OAAO,SAAAhG,GACP9C,QAAQ8C,MAAM,0BAA2BA,EAC3C,GACF,EAEM6F,EAAe,WAEnB,OAAO5B,EAAAA,EAAMC,IAAI,+BAA+BC,MAAK,SAAAvE,GAEnDkF,EAASrH,MAAQmC,EAASwE,KAAK6B,SACjC,IAAE,OAAO,SAAAjG,GACP9C,QAAQ8C,MAAM,4BAA6BA,EAC7C,GACF,EAEM8F,EAAoB,WAExB,OAAO7B,EAAAA,EAAMC,IAAI,mCAAmCC,MAAK,SAAAvE,GAEvDmF,EAActH,MAAQmC,EAASwE,IACjC,IAAE,OAAO,SAAApE,GACP9C,QAAQ8C,MAAM,iCAAkCA,EAClD,GACF,EAEMkG,EAAiC,WAErClB,EAAiBT,KAAK,4CAA6C,CACjE4B,SAAU,iCACV/C,gBAAgB,EAChBgD,eAAe,EACf/C,UAAW,WAETsB,EAAWlH,OAAQ,EACnBoH,EAAOpH,MAAQ,KACfqH,EAASrH,MAAQ,IACnB,EACA8F,QAAS,SAACkB,GACRvH,QAAQ8C,MAAM,8CAA+CyE,EAC/D,GAEJ,EAEM4B,EAA0B,WAE9BpC,EAAAA,EAAMM,KAAK,mCAAmCJ,MAAK,WAEjD2B,GACF,IAAE,OAAO,SAAA9F,GACP9C,QAAQ8C,MAAM,qCAAsCA,EACtD,GACF,EAEMsG,EAAiC,WAErC1B,EAAUnH,OAAQ,EAElBlC,EAAAA,GAAM,OAAQ,kCAAmC,CAC/C6H,gBAAgB,EAChBC,UAAW,WAETuB,EAAUnH,OAAQ,EAClBkH,EAAWlH,OAAQ,CACrB,EACA8F,QAAS,SAACkB,GACRvH,QAAQ8C,MAAM,6CAA8CyE,GAC5DG,EAAUnH,OAAQ,CACpB,GAEJ,4hYC3RA,+EC6JA,IAIMoF,GAAOC,EAAAA,EAAAA,IAAQ,CACnByD,QAAS,QACTC,SAAU,GACVC,SAAU,GACVC,KAAM,GACNC,SAAU,GACVC,QAAS,GACTC,WAAY,GACZC,MAAO,KAGHC,GAAY1I,EAAAA,EAAAA,KAAI,IAChB2B,GAAQ3B,EAAAA,EAAAA,KAAI,OAElB0C,EAAAA,EAAAA,WAASiG,EAAAC,IAAAC,MAAC,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAA,OAAAL,IAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGwBC,MAAM,mCAAkC,OAGrE,OAHKP,EAAeI,EAAAI,MACAC,IACnB3K,QAAQC,IAAI,6BACbqK,EAAAE,KAAA,EACuBN,EAAgBU,OAAM,OAA/B,OAAff,EAAUtJ,MAAK+J,EAAAI,KAAAJ,EAAAE,KAAG,GAGSC,MAAM,iBAAgB,QAGhD,OAHKN,EAAYG,EAAAI,MACAC,IAChB3K,QAAQC,IAAI,4CACbqK,EAAAE,KAAA,GACsBL,EAAaS,OAAM,QAApCR,EAAQE,EAAAI,KAGd/E,EAAK2D,SAAWc,EAASd,SACzB3D,EAAK4D,SAAWa,EAASb,SACzB5D,EAAK6D,KAAOY,EAASZ,KACrB7D,EAAK8D,SAAWW,EAASX,SACzB9D,EAAK+D,QAAUU,EAASV,QACxB/D,EAAKgE,WAAaS,EAAST,WAC3BhE,EAAKiE,MAAQQ,EAASR,MAAMU,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAO,GAAAP,EAAA,SAE5BxH,EAAMvC,MAAQ+J,EAAAO,GAAIC,QAAQ,yBAAAR,EAAAS,OAAA,GAAAd,EAAA,oBAI9B,IAAMe,EAA2B,WAC/BrF,EAAKsF,MAAMhF,MAAM,uBAAwB,CACvCgD,SAAU,2BACV/C,gBAAgB,EAChBC,UAAW,WACTnG,QAAQC,IAAI,8BACd,EACAoG,QAAS,SAACkB,GACRvH,QAAQ8C,MAAM,0BAA2ByE,EAC3C,GAEJ,+kWC9KA,IAAM5H,GAAQuI,EAAAA,EAAAA,MAAUvI,MAGlBgG,GAAOC,EAAAA,EAAAA,IAAQ,CACnBsF,SAAU,CACRC,mBAAmBD,aAAQ,EAARA,EAAUC,qBAAqB,KAIhDC,GAAcjK,EAAAA,EAAAA,KAAI,MAElBkK,EAAsB,WAEtBD,EAAY7K,OACd6K,EAAY7K,MAAM+K,MAEtB,EAEMJ,GAAWtE,EAAAA,EAAAA,UAAS,CACxBuE,kBAAmB,OAGfI,GAAepK,EAAAA,EAAAA,MAAI,GAEnBqK,GAAkB/H,EAAAA,EAAAA,UAAS,CAC/BuD,IAAG,WAED,OAAOkE,EAASC,iBAClB,EACAM,IAAG,SAAClL,GACF2K,EAASC,kBAAoB5K,CAG/B,IAGImL,EAAoB,iBAAAC,KAAA5B,IAAAC,MAAG,SAAAC,IAAA,IAAA2B,EAAAlJ,EAAA6B,EAAA,OAAAwF,IAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAI+B,OAHpDoB,EAASjM,EAAMwI,KAAKC,KAAK1I,GAAG4K,EAAAC,KAAA,EAGhCvK,QAAQC,IAAI,kCAADkC,OAAmCyJ,IAAUtB,EAAAE,KAAA,EACjCzD,MAAMC,IAAI,8BAAD7E,OAA+ByJ,IAAS,OAGxE,IAAWrH,KAHL7B,EAAQ4H,EAAAI,MAGaxD,KACrBxE,EAASwE,KAAK2E,eAAetH,KAC/B2G,EAAS3G,GAAO7B,EAASwE,KAAK3C,IAIlCoB,EAAKuF,SAASC,kBAAoBD,EAASC,kBAC3CnL,QAAQC,IAAI,iCAAkCiL,EAASC,mBAAmBb,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAO,GAAAP,EAAA,SAG1EtK,QAAQ8C,MAAM,oCAAmCwH,EAAAO,IACjD,yBAAAP,EAAAS,OAAA,GAAAd,EAAA,iMAEH,kBArByB,OAAA0B,EAAAG,MAAA,KAAAC,UAAA,MAwB1B5M,EAAAA,EAAAA,QAAM,kBAAM+L,EAASC,iBAAiB,IAAE,SAAC9L,GACvCsG,EAAKuF,SAASC,kBAAoB9L,CACpC,GAAG,CAAEC,WAAW,KAGhBuE,EAAAA,EAAAA,WAAU6H,GAIV,IAAMM,EAAwB,WAG5B,GAFAhM,QAAQC,IAAI,cAAe0F,EAAKuF,SAASC,wBAENc,IAA/Bf,EAASC,kBAAb,CAKA,IAAMS,EAASjM,EAAMwI,KAAKC,KAAK1I,GAC/BiG,EAAKsF,MAAM,iCAAD9I,OAAkCyJ,GAAU,CACpDzF,UAAW,SAACzD,GACV1C,QAAQC,IAAI,iCAAkCyC,EAASoI,SACvDS,EAAahL,OAAQ,EACrBwF,YAAW,WACTwF,EAAahL,OAAQ,CACvB,GAAG,IACL,EACA+F,SAAU,WACRX,EAAKY,MAAM,YACXvG,QAAQC,IAAI,uBACd,EACAoG,QAAS,SAACkB,GAAM,OAAKvH,QAAQ8C,MAAM,iBAAkByE,EAAO,EAC5DrB,gBAAgB,EAChB+C,SAAU,yBAjBZ,MAFEjJ,QAAQ8C,MAAM,iEAqBlB,+gDCzIIO,EAAU,CAEdA,OAAiB,OACjBA,WAAoB,GAEP,IAAI,IAASA,GAIX,IAAQC,OAAvB,MCLA,EAFoB,mtRC4IpB,IAAM3D,GAAQuI,EAAAA,EAAAA,MAAUvI,MAClB4L,GAAepK,EAAAA,EAAAA,MAAI,GACnB+K,EAAeC,OAAOxM,EAAMyI,KAAK8D,cACjCE,EAAiBzM,EAAMyI,KAAKgE,eAM9BC,IAJgBzF,EAAAA,EAAAA,UAAS,CAC3BuE,kBAAmB,QAGTvE,EAAAA,EAAAA,UAAS,KAGjB0F,GAAQnL,EAAAA,EAAAA,OAGNwE,GAAOC,EAAAA,EAAAA,IAAQ,CACnB2G,UAAW,GACXC,aAAc,GACdC,cAAe,GACfC,aAAc,CACZC,SAAU,GACVC,QAAS,GACTC,UAAW,GACXC,SAAU,GACVC,SAAU,GACVC,QAAS,GACTC,SAAU,MAIRC,EAAuB,eAAAvB,EAAA7B,EAAAC,IAAAC,MAAG,SAAAC,IAAA,IAAAvH,EAAAwE,EAAA,OAAA6C,IAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEyC,OAFzCF,EAAAC,KAAA,EAE5BvK,QAAQC,IAAI,yCAADkC,OAA0C+J,IAAgB5B,EAAAE,KAAA,EAC9CzD,MAAMC,IAAI,wCAAD7E,OAAyCiK,IAAiB,OAApF1J,EAAQ4H,EAAAI,KACRxD,EAAOxE,EAASwE,KACtBoF,EAAQpF,EAAKoF,MACbD,EAAMc,OAAMrB,MAAZO,EAAK,CAAQ,EAAGA,EAAMe,QAAMjL,OAAAkL,EAAKnG,EAAKmF,OAAS,MAC/C1G,EAAK4G,UAAYrF,EAAKqF,UACtB5G,EAAK6G,aAAetF,EAAKsF,aACzB7G,EAAK8G,cAAgBvF,EAAKuF,cAC1B9G,EAAK+G,aAAaC,SAAWzF,EAAKwF,aAAaC,SAC/ChH,EAAK+G,aAAaE,QAAU1F,EAAKwF,aAAaE,QAC9CjH,EAAK+G,aAAaG,UAAY3F,EAAKwF,aAAaG,UAChDlH,EAAK+G,aAAaI,SAAW5F,EAAKwF,aAAaI,SAC/CnH,EAAK+G,aAAaK,SAAW7F,EAAKwF,aAAaK,SAC/CpH,EAAK+G,aAAaM,QAAU9F,EAAKwF,aAAaM,QAC9CrH,EAAK+G,aAAaO,SAAW/F,EAAKwF,aAAaO,SAC/CjN,QAAQC,IAAI,8CAA6CqK,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAO,GAAAP,EAAA,SAEzDtK,QAAQ8C,MAAM,wCAAuCwH,EAAAO,IACrD,yBAAAP,EAAAS,OAAA,GAAAd,EAAA,mBAEH,kBAtB4B,OAAA0B,EAAAG,MAAA,KAAAC,UAAA,MAyB7BlI,EAAAA,EAAAA,WAAUqJ,GAEV,IAAMI,EAA2B,WAC/B3H,EAAKsF,MAAMhF,MAAM,oBAAqBmG,GAAiB,CACrDjG,UAAW,SAACzD,GACV1C,QAAQC,IAAI,iCAAkCyC,EAASoI,SACvDS,EAAahL,OAAQ,EACrBwF,YAAW,WACTwF,EAAahL,OAAQ,CACvB,GAAG,IACL,EACA+F,SAAU,WAER,EAEFD,QAAS,SAACkB,GAAM,OAAKvH,QAAQ8C,MAAM,iBAAkByE,EAAO,EAC5DrB,gBAAgB,EAChB+C,SAAU,4BAEd,GAGA9J,EAAAA,EAAAA,QAAM,kBAAMmN,CAAK,IAAE,SAACiB,GAClBvN,QAAQC,IAAI,iBAAkBsN,EAChC,GAAG,CAAEC,MAAM,IAGX,IAAMC,EAAc,SAACF,GACnBvN,QAAQC,IAAI,+BAAgCsN,GAC5CG,OAAOC,OAAOrB,EAAOiB,EACvB,EAqBMK,GAAWhH,EAAAA,EAAAA,UAAS,CACxBiH,cAAc,EACdtB,WAAW,EACXuB,aAAa,EACbC,cAAc,EACdC,aAAa,IAGTC,EAAgB,SAACC,GACrB,IAAMC,EAAeP,EAASM,GAC9BR,OAAOU,KAAKR,GAAUS,SAAQ,SAAA9J,GAC5BqJ,EAASrJ,IAAO,CAClB,IACAqJ,EAASM,IAAYC,CACvB,22OCtQI9K,EAAU,CAEdA,OAAiB,OACjBA,WAAoB,GAEP,IAAI,IAASA,GAIX,IAAQC,OAAvB,MCLA,EAFoB,yUCApB,iDCKA,IAAMoC,GAAgBvE,EAAAA,EAAAA,KAAI,MACpBmN,GAAuBnN,EAAAA,EAAAA,KAAI,MAE3BwE,GAAOC,EAAAA,EAAAA,IAAQ,CACjB2I,iBAAkB,GAClB1I,SAAU,GACV2I,sBAAuB,KAGrBC,EAAiB,WACnB9I,EAAK+I,IAAIzI,MAAM,wBAAyB,CACpCgD,SAAU,iBACV/C,gBAAgB,EAChBC,UAAW,kBAAMR,EAAKY,OAAO,EAC7BF,QAAS,WACDV,EAAK4B,OAAO1B,WACZF,EAAKY,MAAM,WAAY,yBACvBb,EAAcnF,MAAMwD,SAGpB4B,EAAK4B,OAAOgH,mBACZ5I,EAAKY,MAAM,oBACX+H,EAAqB/N,MAAMwD,QAEnC,GAER,+sFC/BA,+ECOA,IAAMpE,EAAQC,EAIR+F,GAAOC,EAAAA,EAAAA,IAAQ,CACjByD,QAAS,MACTsF,KAAMhP,EAAMyI,KAAKuG,KACjBC,MAAOjP,EAAMyI,KAAKwG,MAClBC,MAAO,OAGLC,GAAuB3N,EAAAA,EAAAA,KAAI,MAC3B4N,GAAe5N,EAAAA,EAAAA,KAAI,MACnB6N,GAAa7N,EAAAA,EAAAA,KAAI,MAEjB6J,EAA2B,WACzBgE,EAAWzO,QACXoF,EAAKkJ,MAAQG,EAAWzO,MAAM0O,MAAM,IAGxCtJ,EAAK0B,KAAKpB,MAAM,mCAAoC,CAChDgD,SAAU,2BACV/C,gBAAgB,EAChBC,UAAW,kBAAM+I,GAAqB,GAE9C,EAEMC,EAAwB,WAC1BL,EAAqBvO,OAAQ,CACjC,EAEM6O,EAAiB,WACnBJ,EAAWzO,MAAM8O,OACrB,EAEMC,EAAqB,WACvB,IAAMT,EAAQG,EAAWzO,MAAM0O,MAAM,GAErC,GAAMJ,EAAN,CAEA,IAAMU,EAAS,IAAIC,WAEnBD,EAAO9M,OAAS,SAAChC,GACbsO,EAAaxO,MAAQE,EAAEH,OAAOmP,MAClC,EAEAF,EAAOG,cAAcb,EARF,CASvB,EAEMc,EAAc,WAChBtR,EAAAA,GAAM,OAAQ4H,MAAM,8BAA+B,CAC/CC,gBAAgB,EAChBC,UAAW,WACP4I,EAAaxO,MAAQ,KACrB2O,GACJ,GAER,EAEMA,EAAsB,WAAM,IAAAU,EACV,QAApBA,EAAIZ,EAAWzO,aAAK,IAAAqP,GAAhBA,EAAkBrP,QAClByO,EAAWzO,MAAMA,MAAQ,KAEjC,0lICtEA,mGC8EkBrD,EAAAA,EAAAA,uBAElBH,EAAAA,EAAAA,GAAa","sources":["webpack:///./resources/js/Utilities/PageSetup.js","webpack:///./resources/js/Components/Global/Uploaders/ImageUpload.vue?0b27","webpack:///./resources/js/Pages/Profile/Partials/UpdateCreatorSettings.vue?61ab","webpack:///./resources/js/Pages/Profile/Partials/UpdateNewsPersonSettings.vue?9cf8","webpack:///./resources/js/Components/Global/Multimedia/SingleImageWithModal.vue?47d2","webpack:///./resources/js/Components/Global/Multimedia/SingleImageWithModal.vue","webpack:///./resources/js/Components/Global/TextEditor/TabbableTextarea.vue?4db8","webpack:///./resources/js/Components/Global/TextEditor/TabbableTextarea.vue","webpack:///./resources/js/Components/Global/Uploaders/ImageUpload.vue","webpack:///./resources/js/Components/Global/Uploaders/ImageUpload.vue?6918","webpack:///./resources/js/Components/Global/Uploaders/ImageUpload.vue?55d5","webpack:///./resources/js/Jetstream/ActionMessage.vue","webpack:///./resources/js/Jetstream/ActionSection.vue","webpack:///./resources/js/Jetstream/DangerButton.vue","webpack:///./resources/js/Jetstream/DialogModal.vue?0f30","webpack:///./resources/js/Jetstream/DialogModal.vue","webpack:///./resources/js/Jetstream/FormSection.vue?2128","webpack:///./resources/js/Jetstream/FormSection.vue","webpack:///./resources/js/Jetstream/Input.vue?28c0","webpack:///./resources/js/Jetstream/Input.vue","webpack:///./resources/js/Jetstream/InputError.vue","webpack:///./resources/js/Jetstream/Label.vue","webpack:///./resources/js/Jetstream/Modal.vue?da13","webpack:///./resources/js/Jetstream/Modal.vue","webpack:///./resources/js/Jetstream/SecondaryButton.vue","webpack:///./resources/js/Jetstream/SectionBorder.vue","webpack:///./resources/js/Jetstream/SectionBorder.vue?8895","webpack:///./resources/js/Jetstream/SectionTitle.vue","webpack:///./resources/js/Jetstream/SectionTitle.vue?8590","webpack:///./resources/js/Pages/Profile/Partials/DeleteUserForm.vue?105c","webpack:///./resources/js/Pages/Profile/Partials/DeleteUserForm.vue","webpack:///./resources/js/Pages/Profile/Partials/LogoutOtherBrowserSessionsForm.vue?d91f","webpack:///./resources/js/Pages/Profile/Partials/LogoutOtherBrowserSessionsForm.vue","webpack:///./resources/js/Jetstream/ConfirmsPassword.vue?1151","webpack:///./resources/js/Jetstream/ConfirmsPassword.vue","webpack:///./resources/js/Pages/Profile/Partials/TwoFactorAuthenticationForm.vue?c5f1","webpack:///./resources/js/Pages/Profile/Partials/TwoFactorAuthenticationForm.vue","webpack:///./resources/js/Pages/Profile/Partials/UpdateContactInformationForm.vue?323f","webpack:///./resources/js/Pages/Profile/Partials/UpdateContactInformationForm.vue","webpack:///./resources/js/Pages/Profile/Partials/UpdateCreatorSettings.vue","webpack:///./resources/js/Pages/Profile/Partials/UpdateCreatorSettings.vue?13d3","webpack:///./resources/js/Pages/Profile/Partials/UpdateCreatorSettings.vue?1a14","webpack:///./resources/js/Pages/Profile/Partials/UpdateNewsPersonSettings.vue","webpack:///./resources/js/Pages/Profile/Partials/UpdateNewsPersonSettings.vue?84b4","webpack:///./resources/js/Pages/Profile/Partials/UpdateNewsPersonSettings.vue?f34c","webpack:///./resources/js/Pages/Profile/Partials/UpdatePasswordForm.vue?1cb8","webpack:///./resources/js/Pages/Profile/Partials/UpdatePasswordForm.vue","webpack:///./resources/js/Pages/Profile/Partials/UpdateProfileInformationForm.vue?39e7","webpack:///./resources/js/Pages/Profile/Partials/UpdateProfileInformationForm.vue","webpack:///./resources/js/Pages/Profile/Show.vue?4a9c","webpack:///./resources/js/Pages/Profile/Show.vue"],"sourcesContent":["import { onBeforeMount, onMounted, watch } from 'vue'\nimport { useUserStore } from \"@/Stores/UserStore\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useVideoPlayerStore } from \"@/Stores/VideoPlayerStore\"\nimport { router } from '@inertiajs/vue3'\n\nexport function usePageSetup(pageName) {\n    const userStore = useUserStore()\n    const appSettingStore = useAppSettingStore()\n    const videoPlayerStore = useVideoPlayerStore()\n\n    appSettingStore.currentPage = pageName\n    appSettingStore.showFlashMessage = true\n    appSettingStore.pageIsHidden = false\n\n// PageSetup utility\n    if (userStore.isMobile || window.innerWidth < 1024) {\n        appSettingStore.ott = 0; // Close all panels on mobile devices\n    } else if (appSettingStore.fullPage) {\n        appSettingStore.ott = 0; // Default to closed in fullPage mode\n    } else {\n        if (appSettingStore.ott === 0) {\n            appSettingStore.ott = 4\n        }\n        // appSettingStore.ott = 4; // Open OttChat by default on larger screens\n        appSettingStore.showOttButtons = true;\n    }\n\n    videoPlayerStore.makeVideoTopRight()\n\n    if (appSettingStore.pageReload) {\n        appSettingStore.pageReload = false\n        appSettingStore.pageWasReloaded = true\n        window.location.reload();\n    }\n    // Check if the URL contains query strings\n\n\n    // Only scroll into view if there are no query strings\n\n        // const topDiv = document.getElementById(\"topDiv\")\n        // if (topDiv) {\n        //     topDiv.scrollIntoView()\n        // }\n        router.on('navigate', (event) => {\n            // Ensure OTT panels do not open automatically on mobile devices\n            if (userStore.isMobile || window.innerWidth < 1024 || appSettingStore.fullPage) {\n                appSettingStore.ott = 0; // Close all panels on mobile devices\n            } else {\n                if (appSettingStore.ott === 0) {\n                    appSettingStore.ott = 4\n                }\n                // appSettingStore.ott = 0; // Default to closed on larger screens\n            }\n            const hasQueryStrings = window.location.search !== '';\n            if (!hasQueryStrings || appSettingStore.shouldScrollToTop) {\n                requestAnimationFrame(() => {\n                    const topDiv = document.getElementById(\"topDiv\");\n                    if (topDiv) {\n                        topDiv.scrollIntoView({behavior: 'auto'});\n                    } else {\n                        window.scrollTo(0, 0);\n                    }\n                });\n            }\n            appSettingStore.shouldScrollToTop = false;\n        })\n    // Only update if we're not already on this page to avoid overwriting with the current URL\n    appSettingStore.setPrevUrl()\n    appSettingStore.showOttButtons = true\n    appSettingStore.noLayout = false\n\n    // router.reload()\n\n    watch(\n        () => appSettingStore.isSmallScreen,\n        (newValue) => {\n            if (newValue) {\n                appSettingStore.ott = 0;\n            } else {\n                appSettingStore.ott = 4;\n            }\n        },\n        { immediate: true } // This option ensures the watch executes immediately with the current value\n    );\n\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".checkbox-container[data-v-010175d3]{align-items:center;display:flex}.checkbox[data-v-010175d3]{margin-right:8px}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/Components/Global/Uploaders/ImageUpload.vue\"],\"names\":[],\"mappings\":\"AA6HA,qCAEE,kBAAmB,CADnB,YAEF,CAEA,2BACE,gBACF\",\"sourcesContent\":[\"<template>\\n  <div class=\\\"\\\">\\n    <div class=\\\"max-full mx-auto mt-2 mb-6 bg-gray-200 p-6 text-black\\\">\\n      <h2 class=\\\"text-xl font-semibold\\\">{{ name }}</h2>\\n      <ul class=\\\"pb-4\\\">\\n        <li>Max File Size: <span class=\\\"text-orange-400\\\">{{ maxSize }}</span></li>\\n        <li>File Types accepted: <span class=\\\"text-orange-400\\\">{{ fileTypes }}</span></li>\\n      </ul>\\n\\n      <div class=\\\"checkbox-container mb-4\\\">\\n        <input type=\\\"checkbox\\\" id=\\\"removeExif\\\" v-model=\\\"removeExif\\\" class=\\\"checkbox checkbox-md\\\">\\n        <label for=\\\"removeExif\\\" class=\\\"checkbox-label\\\">Remove EXIF data</label>\\n      </div>\\n\\n\\n      <file-pond\\n          name=\\\"image\\\"\\n          ref=\\\"pond\\\"\\n          class-name=\\\"my-pond\\\"\\n          allow-multiple=\\\"false\\\"\\n          label-idle=\\\"Click to choose file, or drag here...\\\"\\n          :server=\\\"serverOptions\\\"\\n          accepted-file-types=\\\"image/jpeg, image/png\\\"\\n          @init=\\\"handleFilePondInit\\\"\\n          @processfile=\\\"handleProcessedFile\\\"\\n          :max-file-size=\\\"maxSize\\\"\\n          allowRemove=\\\"false\\\"\\n          allowRevert=\\\"false\\\"\\n      />\\n    </div>\\n  </div>\\n\\n</template>\\n\\n<script setup>\\nimport vueFilePond from 'vue-filepond'\\nimport FilePondPluginFileValidateType from 'filepond-plugin-file-validate-type'\\nimport FilePondPluginFileValidateSize from 'filepond-plugin-file-validate-size'\\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview'\\nimport 'filepond/dist/filepond.min.css'\\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.min.css'\\nimport { ref } from 'vue'\\nimport { useNotificationStore } from '@/Stores/NotificationStore'\\n\\nconst notificationStore  = useNotificationStore()\\n\\nlet props = defineProps({\\n  // image: Object,\\n  name: String,\\n  metadataKey: String,\\n  metadataValue: String,\\n  modelType: String,\\n  modelId: Number,\\n  maxSize: String,\\n  fileTypes: String,\\n})\\n\\nconst myFiles = ref([''])\\n\\nconst emit = defineEmits(['reloadImage', 'imageUploaded'])\\n\\nconst FilePond = vueFilePond(\\n    FilePondPluginFileValidateType,\\n    FilePondPluginFileValidateSize,\\n    FilePondPluginImagePreview,\\n)\\n\\n// Define reactive variables\\nconst removeExif = ref(false)\\nconst maxSize = ref('30MB')\\nconst fileTypes = ref(['image/png', 'image/jpeg'])\\n// const modelType = 'yourModelType'; // Replace with your actual model type\\n// const modelId = 'yourModelId'; // Replace with your actual model ID\\n\\n// Get the CSRF token from the meta tag\\nconst csrfToken = document.querySelector('meta[name=\\\"csrf-token\\\"]').getAttribute('content')\\n\\nconst serverOptions = ref({\\n  process: {\\n    url: `/api/image-upload?modelType=${props.modelType}&modelId=${props.modelId}&removeExif=${removeExif.value}`,\\n    method: 'POST',\\n    headers: {\\n      'X-CSRF-TOKEN': csrfToken\\n    },\\n    withCredentials: false,\\n    onload: (response) => {\\n      const jsonResponse = JSON.parse(response);\\n      if (jsonResponse.error) {\\n        throw new Error(jsonResponse.error);\\n      }\\n      return jsonResponse;\\n    },\\n    onerror: (response) => {\\n      const error = JSON.parse(response);\\n      console.error('FilePond error:', error);\\n      notificationStore.setGeneralServiceNotification('Error', response);\\n      return error.error || 'Upload failed';\\n    },\\n  },\\n})\\n\\n\\n// function filepondInitialized() {\\n//   console.log('Filepond is ready!')\\n// }\\n\\nfunction handleFilePondInit() {\\n  console.log('FilePond has initialized')\\n}\\n\\nfunction handleProcessedFile(error, file) {\\n  if (error) {\\n    console.log('FilePond processed file error:', error);\\n    return;\\n  }\\n  emit('reloadImage')\\n\\n  // const response = JSON.parse(file.serverId)\\n  // emit('imageUploaded', response)\\n}\\n\\n\\n</script>\\n\\n<style scoped>\\n.checkbox-container {\\n  display: flex;\\n  align-items: center; /* Align items vertically */\\n}\\n\\n.checkbox {\\n  margin-right: 8px; /* Space between the checkbox and the label */\\n}\\n</style>\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".fade-enter-active,.fade-leave-active{transition:opacity .5s}.fade-enter,.fade-leave-to{opacity:0}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/Pages/Profile/Partials/UpdateCreatorSettings.vue\"],\"names\":[],\"mappings\":\"AAiJA,sCACE,sBACF,CACA,2BACE,SACF\",\"sourcesContent\":[\"<template>\\n  <JetFormSection @submitted=\\\"updateCreatorSettings\\\">\\n    <template #title>\\n      Creator Profile Settings<br><span class=\\\"text-green-500 tracking-wide\\\">(creators only)</span>\\n    </template>\\n\\n    <template #description>\\n      Here you can customize your creator profile settings. Adjust visibility preferences, manage notification settings, and update other personal options to tailor how you interact with the platform and how others see your profile.\\n    </template>\\n\\n    <template #form>\\n      <!-- Profile Visibility -->\\n      <div class=\\\"col-span-6 sm:col-span-4 bg-white dark:bg-gray-800 dark:text-white\\\">\\n        <JetLabel for=\\\"profile_is_public\\\" value=\\\"Profile Visibility:\\\"/>\\n        <!-- Update the v-model to bind with the form object -->\\n        Private <input type=\\\"checkbox\\\" id=\\\"profile_is_public\\\" class=\\\"toggle toggle-success hover:text-blue-300\\\"\\n               v-model=\\\"profileIsPublic\\\" ref=\\\"checkboxRef\\\" @click=\\\"handleCheckboxClick\\\"/> Public\\n        <!-- Display error message if there is an error related to profile_is_public -->\\n        <JetInputError :message=\\\"form.errors['settings.profile_is_public']\\\" class=\\\"mt-2\\\"/>\\n      </div>\\n    </template>\\n\\n    <template #actions>\\n      <JetActionMessage :on=\\\"savedMessage\\\" class=\\\"mr-3\\\">\\n        <span class=\\\"text-green-500\\\">Saved.</span>\\n      </JetActionMessage>\\n\\n      <JetButton :class=\\\"{ 'opacity-25': form.processing }\\\" :disabled=\\\"form.processing\\\">\\n        Save\\n      </JetButton>\\n    </template>\\n  </JetFormSection>\\n</template>\\n<script setup>\\nimport { computed, onMounted, reactive, ref, watch } from 'vue'\\nimport { router } from '@inertiajs/vue3'\\nimport { usePage } from '@inertiajs/vue3'\\nimport { Link, useForm } from '@inertiajs/vue3'\\nimport JetButton from '@/Jetstream/Button.vue'\\nimport JetFormSection from '@/Jetstream/FormSection.vue'\\nimport JetInput from '@/Jetstream/Input.vue'\\nimport JetInputError from '@/Jetstream/InputError.vue'\\nimport JetLabel from '@/Jetstream/Label.vue'\\nimport JetActionMessage from '@/Jetstream/ActionMessage.vue'\\nimport JetSecondaryButton from '@/Jetstream/SecondaryButton.vue'\\n\\nconst props = usePage().props\\n\\n// Initialize the form with useForm, include initial settings possibly coming from props\\nconst form = useForm({\\n  settings: {\\n    profile_is_public: settings?.profile_is_public || false, // default to false if undefined\\n  },\\n})\\n\\nconst checkboxRef = ref(null);\\n\\nconst handleCheckboxClick = () => {\\n  // You may perform other actions here if needed before blurring the checkbox\\n  if (checkboxRef.value) {\\n    checkboxRef.value.blur();\\n  }\\n};\\n\\nconst settings = reactive({\\n  profile_is_public: null, // Default value until fetched from server\\n})\\n\\nconst savedMessage = ref(false)\\n\\nconst profileIsPublic = computed({\\n  get() {\\n    // You can add any additional logic here if necessary\\n    return settings.profile_is_public;\\n  },\\n  set(value) {\\n    settings.profile_is_public = value;\\n    // Any additional logic when setting the value can also be included here\\n    // For example, you might want to debounce an update request to the server\\n  }\\n})\\n\\nconst fetchCreatorSettings = async () => {\\n  const userId = props.auth.user.id // Assuming props are passed directly without 'value'\\n\\n  try {\\n    console.log(`Fetching settings for user ID: ${userId}`) // Debug log\\n    const response = await axios.get(`/user/creator/get-settings/${userId}`)\\n\\n    // Update the entire settings object\\n    for (const key in response.data) {\\n      if (response.data.hasOwnProperty(key)) {\\n        settings[key] = response.data[key];\\n      }\\n    }\\n    // If settings are fetched later and need to sync with useForm\\n    form.settings.profile_is_public = settings.profile_is_public;\\n    console.log('Settings fetched successfully:', settings.profile_is_public);\\n\\n  } catch (error) {\\n    console.error('Failed to fetch creator settings:', error)\\n    // Handle loading state or display error message in UI as needed\\n  }\\n}\\n\\n// After fetching settings and updating the `settings` object\\nwatch(() => settings.profile_is_public, (newValue) => {\\n  form.settings.profile_is_public = newValue;\\n}, { immediate: true });\\n\\n// Fetch settings immediately when the component is created/mounted\\nonMounted(fetchCreatorSettings)\\n\\n\\n\\nconst updateCreatorSettings = () => {\\n  console.log('Submitting:', form.settings.profile_is_public);  // Log what is actually being submitted\\n  // Check if the profile_is_public property is undefined\\n  if (settings.profile_is_public === undefined) {\\n    console.error('Cannot update settings because they have not been fetched yet.');\\n    return;\\n  }\\n\\n  const userId = props.auth.user.id  // Ensure userId is available\\n  form.patch(`/user/creator/update-settings/${userId}`, {\\n    onSuccess: (response) => {\\n      console.log('Settings updated successfully!', response.message)\\n      savedMessage.value = true; // Update local data to show message\\n      setTimeout(() => {\\n        savedMessage.value = false  // Optionally clear the message after a few seconds\\n      }, 3000)\\n    },\\n    onFinish: () => {\\n      form.reset('settings')  // Reset the settings field after successful update\\n      console.log('Form has been reset.')\\n    },\\n    onError: (errors) => console.error(\\\"Update errors:\\\", errors),\\n    preserveScroll: true,\\n    errorBag: 'updateCreatorSettings'\\n  })\\n}\\n\\n</script>\\n\\n<style>\\n.fade-enter-active, .fade-leave-active {\\n  transition: opacity 0.5s;\\n}\\n.fade-enter, .fade-leave-to /* .fade-leave-active in <2.1.8 */ {\\n  opacity: 0;\\n}\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".fade-enter-active,.fade-leave-active{transition:opacity .5s}.fade-enter,.fade-leave-to{opacity:0}.toggle-button{background-color:#4a90e2;border-radius:.25rem;color:#fff;padding:.5rem 1rem;transition:background-color .3s ease}.toggle-button:hover{background-color:#357ab8}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/Pages/Profile/Partials/UpdateNewsPersonSettings.vue\"],\"names\":[],\"mappings\":\"AA6QA,sCACE,sBACF,CAEA,2BAEE,SACF,CAEA,eACE,wBAAyB,CAGzB,oBAAsB,CAFtB,UAAY,CACZ,kBAAoB,CAEpB,oCACF,CAEA,qBACE,wBACF\",\"sourcesContent\":[\"<template>\\n  <JetFormSection @submitted=\\\"updateNewsPersonSettings\\\">\\n    <template #title>\\n      News Profile Settings<br><span class=\\\"text-yellow-500 tracking-wide\\\">(news people only)</span>\\n    </template>\\n\\n    <template #description>\\n      Here you can customize your news profile settings. Adjust visibility preferences, manage notification settings,\\n      and update other personal options to tailor how you interact with the platform and how others see your profile.\\n    </template>\\n\\n    <template #form>\\n      <!-- List Profile Roles -->\\n      <div class=\\\"col-span-6 sm:col-span-4\\\">\\n        <h3 class=\\\"text-lg font-semibold mb-2\\\">Your News Roles</h3>\\n        <ul class=\\\"list-disc list-inside\\\">\\n          <li v-for=\\\"role in roles\\\" :key=\\\"role.id\\\">\\n            {{ role.name }}\\n          </li>\\n        </ul>\\n      </div>\\n\\n      <!-- Profile Image Section -->\\n      <div class=\\\"col-span-6 sm:col-span-4\\\">\\n        <button @click.prevent=\\\"toggleSection('profileImage')\\\" class=\\\"toggle-button\\\">\\n          Profile Image\\n        </button>\\n        <div v-show=\\\"sections.profileImage\\\" class=\\\"transition-all duration-500 ease-in-out mt-2\\\">\\n          <SingleImageWithModal v-if=\\\"image\\\"\\n                                :image=\\\"image\\\"\\n                                :key=\\\"image.id\\\"\\n                                :alt=\\\"`News Profile Image`\\\"\\n                                :class=\\\"`w-20 h-20 rounded-lg object-cover mb-6`\\\"/>\\n          <JetLabel for=\\\"news_profile_image\\\" value=\\\"Upload News Person Profile Picture (optional):\\\"/>\\n          <ImageUpload :modelType=\\\"'newsPerson'\\\"\\n                       :modelId=\\\"newsPersonId\\\"\\n                       :name=\\\"''\\\"\\n                       :maxSize=\\\"'30MB'\\\"\\n                       :fileTypes=\\\"'image/jpg, image/jpeg, image/png'\\\"\\n                       @imageUploaded=\\\"updateImage\\\"\\n          />\\n        </div>\\n      </div>\\n\\n      <!-- Biography Section -->\\n      <div class=\\\"col-span-6 sm:col-span-4\\\">\\n        <button @click.prevent=\\\"toggleSection('biography')\\\" class=\\\"toggle-button\\\">\\n          Biography\\n        </button>\\n        <div v-show=\\\"sections.biography\\\" class=\\\"transition-all duration-500 ease-in-out mt-2\\\">\\n          <JetLabel for=\\\"biography\\\" value=\\\"Biography\\\"/>\\n          <TabbableTextarea id=\\\"biography\\\" class=\\\"mt-1 block w-full\\\" v-model=\\\"form.biography\\\"/>\\n          <JetInputError :message=\\\"form.errors.biography\\\" class=\\\"mt-2\\\"/>\\n        </div>\\n      </div>\\n\\n      <!-- Contact Info Section -->\\n      <div class=\\\"col-span-6 sm:col-span-4\\\">\\n        <button @click.prevent=\\\"toggleSection('contactInfo')\\\" class=\\\"toggle-button\\\">\\n          Contact Info\\n        </button>\\n        <div v-show=\\\"sections.contactInfo\\\" class=\\\"transition-all duration-500 ease-in-out mt-2\\\">\\n          <JetLabel for=\\\"contact_info\\\" value=\\\"Contact Info\\\"/>\\n          <TabbableTextarea id=\\\"contact_info\\\" class=\\\"mt-1 block w-full\\\" v-model=\\\"form.contact_info\\\"/>\\n          <JetInputError :message=\\\"form.errors.contact_info\\\" class=\\\"mt-2\\\"/>\\n        </div>\\n      </div>\\n\\n      <!-- Other Details Section -->\\n      <div class=\\\"col-span-6 sm:col-span-4\\\">\\n        <button @click.prevent=\\\"toggleSection('otherDetails')\\\" class=\\\"toggle-button\\\">\\n          Other Details\\n        </button>\\n        <div v-show=\\\"sections.otherDetails\\\" class=\\\"transition-all duration-500 ease-in-out mt-2\\\">\\n          <JetLabel for=\\\"other_details\\\" value=\\\"Other Details\\\"/>\\n          <TabbableTextarea id=\\\"other_details\\\" class=\\\"mt-1 block w-full\\\" v-model=\\\"form.other_details\\\"/>\\n          <JetInputError :message=\\\"form.errors.other_details\\\" class=\\\"mt-2\\\"/>\\n        </div>\\n      </div>\\n\\n      <!-- Social Media Section -->\\n      <div class=\\\"col-span-6 sm:col-span-4\\\">\\n        <button @click.prevent=\\\"toggleSection('socialMedia')\\\" class=\\\"toggle-button\\\">\\n          Social Media\\n        </button>\\n        <div v-show=\\\"sections.socialMedia\\\" class=\\\"transition-all duration-500 ease-in-out mt-2\\\">\\n          <JetLabel for=\\\"facebook\\\" value=\\\"Facebook\\\"/>\\n          <JetInput id=\\\"facebook\\\" type=\\\"text\\\" class=\\\"mt-1 block w-full\\\" v-model=\\\"form.social_media.facebook\\\"/>\\n          <JetInputError :message=\\\"form.errors.social_media?.facebook\\\" class=\\\"mt-2\\\"/>\\n\\n          <JetLabel for=\\\"twitter\\\" value=\\\"X (Twitter)\\\" class=\\\"mt-4\\\"/>\\n          <JetInput id=\\\"twitter\\\" type=\\\"text\\\" class=\\\"mt-1 block w-full\\\" v-model=\\\"form.social_media.twitter\\\"/>\\n          <JetInputError :message=\\\"form.errors.social_media?.twitter\\\" class=\\\"mt-2\\\"/>\\n\\n          <JetLabel for=\\\"instagram\\\" value=\\\"Instagram\\\" class=\\\"mt-4\\\"/>\\n          <JetInput id=\\\"instagram\\\" type=\\\"text\\\" class=\\\"mt-1 block w-full\\\" v-model=\\\"form.social_media.instagram\\\"/>\\n          <JetInputError :message=\\\"form.errors.social_media?.instagram\\\" class=\\\"mt-2\\\"/>\\n\\n          <JetLabel for=\\\"linkedin\\\" value=\\\"LinkedIn\\\" class=\\\"mt-4\\\"/>\\n          <JetInput id=\\\"linkedin\\\" type=\\\"text\\\" class=\\\"mt-1 block w-full\\\" v-model=\\\"form.social_media.linkedin\\\"/>\\n          <JetInputError :message=\\\"form.errors.social_media?.linkedin\\\" class=\\\"mt-2\\\"/>\\n\\n          <JetLabel for=\\\"snapchat\\\" value=\\\"Snapchat\\\" class=\\\"mt-4\\\"/>\\n          <JetInput id=\\\"snapchat\\\" type=\\\"text\\\" class=\\\"mt-1 block w-full\\\" v-model=\\\"form.social_media.snapchat\\\"/>\\n          <JetInputError :message=\\\"form.errors.social_media?.snapchat\\\" class=\\\"mt-2\\\"/>\\n\\n          <JetLabel for=\\\"discord\\\" value=\\\"Discord\\\" class=\\\"mt-4\\\"/>\\n          <JetInput id=\\\"discord\\\" type=\\\"text\\\" class=\\\"mt-1 block w-full\\\" v-model=\\\"form.social_media.discord\\\"/>\\n          <JetInputError :message=\\\"form.errors.social_media?.discord\\\" class=\\\"mt-2\\\"/>\\n\\n          <JetLabel for=\\\"substack\\\" value=\\\"Substack\\\" class=\\\"mt-4\\\"/>\\n          <JetInput id=\\\"substack\\\" type=\\\"text\\\" class=\\\"mt-1 block w-full\\\" v-model=\\\"form.social_media.substack\\\"/>\\n          <JetInputError :message=\\\"form.errors.social_media?.substack\\\" class=\\\"mt-2\\\"/>\\n        </div>\\n      </div>\\n    </template>\\n\\n    <template #actions>\\n      <JetActionMessage :on=\\\"savedMessage\\\" class=\\\"mr-3\\\">\\n        <span class=\\\"text-green-500\\\">Saved.</span>\\n      </JetActionMessage>\\n\\n      <JetButton :class=\\\"{ 'opacity-25': form.processing }\\\" :disabled=\\\"form.processing\\\">\\n        Save\\n      </JetButton>\\n    </template>\\n  </JetFormSection>\\n</template>\\n\\n<script setup>\\nimport { computed, onMounted, reactive, ref, watch } from 'vue'\\nimport { router } from '@inertiajs/vue3'\\nimport { usePage } from '@inertiajs/vue3'\\nimport { Link, useForm } from '@inertiajs/vue3'\\nimport JetButton from '@/Jetstream/Button.vue'\\nimport JetFormSection from '@/Jetstream/FormSection.vue'\\nimport JetInput from '@/Jetstream/Input.vue'\\nimport JetInputError from '@/Jetstream/InputError.vue'\\nimport JetLabel from '@/Jetstream/Label.vue'\\nimport JetActionMessage from '@/Jetstream/ActionMessage.vue'\\nimport JetSecondaryButton from '@/Jetstream/SecondaryButton.vue'\\nimport ImageUpload from '@/Components/Global/Uploaders/ImageUpload.vue'\\nimport TabbableTextarea from '@/Components/Global/TextEditor/TabbableTextarea.vue'\\nimport SingleImageWithModal from '@/Components/Global/Multimedia/SingleImageWithModal.vue'\\n\\nconst props = usePage().props\\nconst savedMessage = ref(false)\\nconst newsPersonId = Number(props.user.newsPersonId)\\nconst newsPersonSlug = props.user.newsPersonSlug\\n\\nconst socialMedia = reactive({\\n  profile_is_public: null, // Default value until fetched from server\\n})\\n\\nlet roles = reactive([])\\n\\n// Use reactive for the image object\\nlet image = ref()\\n\\n// Initialize the form with useForm, include initial settings possibly coming from props\\nconst form = useForm({\\n  biography: '',\\n  contact_info: '',\\n  other_details: '',\\n  social_media: {\\n    facebook: '',\\n    twitter: '',\\n    instagram: '',\\n    linkedin: '',\\n    snapchat: '',\\n    discord: '',\\n    substack: '',\\n  },\\n})\\n\\nconst fetchNewsPersonSettings = async () => {\\n  try {\\n    console.log(`Fetching settings for News Person ID: ${newsPersonId}`) // Debug log\\n    const response = await axios.get(`/api/news/news-person-fetch-settings/${newsPersonSlug}`)\\n    const data = response.data\\n    image = data.image\\n    roles.splice(0, roles.length, ...data.roles || [])\\n    form.biography = data.biography\\n    form.contact_info = data.contact_info\\n    form.other_details = data.other_details\\n    form.social_media.facebook = data.social_media.facebook\\n    form.social_media.twitter = data.social_media.twitter\\n    form.social_media.instagram = data.social_media.instagram\\n    form.social_media.linkedin = data.social_media.linkedin\\n    form.social_media.snapchat = data.social_media.snapchat\\n    form.social_media.discord = data.social_media.discord\\n    form.social_media.substack = data.social_media.substack\\n    console.log('News Person Settings fetched successfully.')\\n  } catch (error) {\\n    console.error('Failed to fetch News Person settings:', error)\\n    // Handle loading state or display error message in UI as needed\\n  }\\n}\\n\\n// Fetch settings immediately when the component is created/mounted\\nonMounted(fetchNewsPersonSettings)\\n\\nconst updateNewsPersonSettings = () => {\\n  form.patch(route('newsPerson.update', newsPersonSlug), {\\n    onSuccess: (response) => {\\n      console.log('Settings updated successfully!', response.message)\\n      savedMessage.value = true // Update local data to show message\\n      setTimeout(() => {\\n        savedMessage.value = false  // Optionally clear the message after a few seconds\\n      }, 3000)\\n    },\\n    onFinish: () => {\\n      // form.reset('settings')  // Reset the settings field after successful update\\n      // console.log('Form has been reset.')\\n    },\\n    onError: (errors) => console.error(\\\"Update errors:\\\", errors),\\n    preserveScroll: true,\\n    errorBag: 'updateNewsPersonSettings'\\n  })\\n}\\n\\n// Watch for changes to the image object and log changes\\nwatch(() => image, (newImage) => {\\n  console.log('Image updated:', newImage)\\n}, { deep: true })\\n\\n// Function to handle image updates\\nconst updateImage = (newImage) => {\\n  console.log('Image uploaded successfully:', newImage)\\n  Object.assign(image, newImage)  // Use Object.assign to ensure reactivity\\n}\\n\\nconst removeImage = async () => {\\n  try {\\n    await axios.post('/api/remove-image', {\\n      modelId: newsPersonId,\\n      modelType: 'newsPerson',\\n      imageId: image.id,\\n    })\\n    image = null\\n    notificationStore.setToastNotification('Image removed.', 'info')\\n  } catch (error) {\\n    console.error('Error removing image:', error)\\n  }\\n}\\n\\n// watch(() => image, (newValue) => {\\n//   image = newValue;\\n// }, { immediate: true });\\n\\n// Collapsible sections state\\nconst sections = reactive({\\n  profileImage: false,\\n  biography: false,\\n  contactInfo: false,\\n  otherDetails: false,\\n  socialMedia: false,\\n})\\n\\nconst toggleSection = (section) => {\\n  const currentState = sections[section]\\n  Object.keys(sections).forEach(key => {\\n    sections[key] = false\\n  })\\n  sections[section] = !currentState\\n}\\n</script>\\n\\n<style>\\n.fade-enter-active, .fade-leave-active {\\n  transition: opacity 0.5s;\\n}\\n\\n.fade-enter, .fade-leave-to /* .fade-leave-active in <2.1.8 */\\n{\\n  opacity: 0;\\n}\\n\\n.toggle-button {\\n  background-color: #4a90e2;\\n  color: white;\\n  padding: 0.5rem 1rem;\\n  border-radius: 0.25rem;\\n  transition: background-color 0.3s ease;\\n}\\n\\n.toggle-button:hover {\\n  background-color: #357ab8;\\n}\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import script from \"./SingleImageWithModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./SingleImageWithModal.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n    <!-- Placeholder URL Image -->\n    <img v-if=\"image && image?.placeholder_url\"\n         :src=\"image?.placeholder_url\"\n         :alt=\"alt\"\n         :class=\"props.class\"\n         class=\"hover:cursor-pointer\"\n         @click=\"setImage(image.placeholder_url, alt)\" />\n\n    <!-- Storage Image -->\n    <img v-if=\"image && !image?.folder && !image?.placeholder_url\"\n         :src=\"'/storage/images/' + image?.name\"\n         :alt=\"alt\"\n         :class=\"props.class\"\n         class=\"hover:cursor-pointer\"\n         @click=\"setImage('/storage/images/' + image.name, alt)\" />\n\n    <!-- CDN Image -->\n    <img v-if=\"image && image?.folder && !image?.placeholder_url\"\n         :src=\"image?.cdn_endpoint + image?.cloud_folder + image?.folder + '/' + image?.name\"\n         :alt=\"alt\"\n         :class=\"props.class\"\n         class=\"hover:cursor-pointer\"\n         @click=\"setImage(image.cdn_endpoint + image.cloud_folder + image.folder + '/' + image.name, alt)\" />\n  </div>\n</template>\n\n<script setup>\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\n\nlet props = defineProps({\n  image: Object,\n  placeholder: String,\n  class: String,\n  alt: String,\n})\n\nconst appSettingStore = useAppSettingStore()\n\nconst setImage = (imageUrl, imageAlt) => {\n  console.log('click')\n  appSettingStore.imageLightboxModal.imageUrl = imageUrl;\n  appSettingStore.imageLightboxModal.imageAlt = imageAlt;\n  appSettingStore.showImageLightboxModal = true\n}\n</script>\n","import script from \"./TabbableTextarea.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TabbableTextarea.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n<!--    <textarea-->\n<!--        @keydown.tab.prevent=\"onTabPress\"-->\n<!--        @keyup=\"emit('update:modelValue', $event.target.value)\"-->\n<!--        v-text=\"modelValue\"-->\n<!--        :placeholder=\"placeholder\" />-->\n  <textarea\n      @keydown.tab.prevent=\"onTabPress\"\n      @input=\"onInput\"\n      :value=\"modelValue\"\n      :placeholder=\"placeholder\"\n      class=\"textarea textarea-bordered text-black bg-white dark:bg-gray-800 dark:text-white\"\n  />\n</template>\n\n<script setup>\ndefineProps({\n  modelValue: String,\n  placeholder: String\n});\n\nconst emit = defineEmits(['update:modelValue']);\n// let emit = defineEmits(['update:modelValue']);\n\nconst onInput = (event) => {\n  emit('update:modelValue', event.target.value);\n};\n\nfunction onTabPress(e) {\n  let textarea = e.target;\n\n  // get caret position/selection\n  let val = textarea.value,\n      start = textarea.selectionStart,\n      end = textarea.selectionEnd;\n\n  // set textarea value to: text before caret + tab + text after caret\n  textarea.value = val.substring(0, start) + \"\\t\" + val.substring(end);\n\n  // put caret at right position again\n  textarea.selectionStart = textarea.selectionEnd = start + 1;\n}\n\n</script>\n","<template>\n  <div class=\"\">\n    <div class=\"max-full mx-auto mt-2 mb-6 bg-gray-200 p-6 text-black\">\n      <h2 class=\"text-xl font-semibold\">{{ name }}</h2>\n      <ul class=\"pb-4\">\n        <li>Max File Size: <span class=\"text-orange-400\">{{ maxSize }}</span></li>\n        <li>File Types accepted: <span class=\"text-orange-400\">{{ fileTypes }}</span></li>\n      </ul>\n\n      <div class=\"checkbox-container mb-4\">\n        <input type=\"checkbox\" id=\"removeExif\" v-model=\"removeExif\" class=\"checkbox checkbox-md\">\n        <label for=\"removeExif\" class=\"checkbox-label\">Remove EXIF data</label>\n      </div>\n\n\n      <file-pond\n          name=\"image\"\n          ref=\"pond\"\n          class-name=\"my-pond\"\n          allow-multiple=\"false\"\n          label-idle=\"Click to choose file, or drag here...\"\n          :server=\"serverOptions\"\n          accepted-file-types=\"image/jpeg, image/png\"\n          @init=\"handleFilePondInit\"\n          @processfile=\"handleProcessedFile\"\n          :max-file-size=\"maxSize\"\n          allowRemove=\"false\"\n          allowRevert=\"false\"\n      />\n    </div>\n  </div>\n\n</template>\n\n<script setup>\nimport vueFilePond from 'vue-filepond'\nimport FilePondPluginFileValidateType from 'filepond-plugin-file-validate-type'\nimport FilePondPluginFileValidateSize from 'filepond-plugin-file-validate-size'\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview'\nimport 'filepond/dist/filepond.min.css'\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.min.css'\nimport { ref } from 'vue'\nimport { useNotificationStore } from '@/Stores/NotificationStore'\n\nconst notificationStore  = useNotificationStore()\n\nlet props = defineProps({\n  // image: Object,\n  name: String,\n  metadataKey: String,\n  metadataValue: String,\n  modelType: String,\n  modelId: Number,\n  maxSize: String,\n  fileTypes: String,\n})\n\nconst myFiles = ref([''])\n\nconst emit = defineEmits(['reloadImage', 'imageUploaded'])\n\nconst FilePond = vueFilePond(\n    FilePondPluginFileValidateType,\n    FilePondPluginFileValidateSize,\n    FilePondPluginImagePreview,\n)\n\n// Define reactive variables\nconst removeExif = ref(false)\nconst maxSize = ref('30MB')\nconst fileTypes = ref(['image/png', 'image/jpeg'])\n// const modelType = 'yourModelType'; // Replace with your actual model type\n// const modelId = 'yourModelId'; // Replace with your actual model ID\n\n// Get the CSRF token from the meta tag\nconst csrfToken = document.querySelector('meta[name=\"csrf-token\"]').getAttribute('content')\n\nconst serverOptions = ref({\n  process: {\n    url: `/api/image-upload?modelType=${props.modelType}&modelId=${props.modelId}&removeExif=${removeExif.value}`,\n    method: 'POST',\n    headers: {\n      'X-CSRF-TOKEN': csrfToken\n    },\n    withCredentials: false,\n    onload: (response) => {\n      const jsonResponse = JSON.parse(response);\n      if (jsonResponse.error) {\n        throw new Error(jsonResponse.error);\n      }\n      return jsonResponse;\n    },\n    onerror: (response) => {\n      const error = JSON.parse(response);\n      console.error('FilePond error:', error);\n      notificationStore.setGeneralServiceNotification('Error', response);\n      return error.error || 'Upload failed';\n    },\n  },\n})\n\n\n// function filepondInitialized() {\n//   console.log('Filepond is ready!')\n// }\n\nfunction handleFilePondInit() {\n  console.log('FilePond has initialized')\n}\n\nfunction handleProcessedFile(error, file) {\n  if (error) {\n    console.log('FilePond processed file error:', error);\n    return;\n  }\n  emit('reloadImage')\n\n  // const response = JSON.parse(file.serverId)\n  // emit('imageUploaded', response)\n}\n\n\n</script>\n\n<style scoped>\n.checkbox-container {\n  display: flex;\n  align-items: center; /* Align items vertically */\n}\n\n.checkbox {\n  margin-right: 8px; /* Space between the checkbox and the label */\n}\n</style>","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-10.use[1]!../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-10.use[2]!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./ImageUpload.vue?vue&type=style&index=0&id=010175d3&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./ImageUpload.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ImageUpload.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ImageUpload.vue?vue&type=style&index=0&id=010175d3&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-010175d3\"]])\n\nexport default __exports__","import script from \"./ActionMessage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ActionMessage.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./ActionSection.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ActionSection.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./DangerButton.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./DangerButton.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./DialogModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./DialogModal.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport Modal from './Modal.vue';\n\nconst emit = defineEmits(['close']);\n\ndefineProps({\n    show: {\n        type: Boolean,\n        default: false,\n    },\n    maxWidth: {\n        type: String,\n        default: '2xl',\n    },\n    closeable: {\n        type: Boolean,\n        default: true,\n    },\n});\n\nconst close = () => {\n    emit('close');\n};\n</script>\n\n<template>\n    <Modal\n        :show=\"show\"\n        :max-width=\"maxWidth\"\n        :closeable=\"closeable\"\n        @close=\"close\"\n    >\n        <div class=\"px-6 py-4\">\n            <div class=\"text-lg\">\n                <slot name=\"title\" />\n            </div>\n\n            <div class=\"mt-4\">\n                <slot name=\"content\" />\n            </div>\n        </div>\n\n        <div class=\"flex flex-row justify-end px-6 py-4 bg-gray-100 text-right\">\n            <slot name=\"footer\" />\n        </div>\n    </Modal>\n</template>\n","import script from \"./FormSection.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./FormSection.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { computed, useSlots } from 'vue';\nimport JetSectionTitle from './SectionTitle.vue';\n\ndefineEmits(['submitted']);\n\nconst hasActions = computed(() => !! useSlots().actions);\n</script>\n\n<template>\n    <div class=\"md:grid md:grid-cols-3 md:gap-6\">\n        <JetSectionTitle>\n            <template #title>\n                <slot name=\"title\" />\n            </template>\n            <template #description>\n                <slot name=\"description\" />\n            </template>\n        </JetSectionTitle>\n\n        <div class=\"mt-5 md:mt-0 md:col-span-2\">\n            <form @submit.prevent=\"$emit('submitted')\">\n                <div\n                    class=\"px-4 py-5 bg-white sm:p-6 shadow\"\n                    :class=\"hasActions ? 'sm:rounded-tl-md sm:rounded-tr-md' : 'sm:rounded-md'\"\n                >\n                    <div class=\"grid grid-cols-6 gap-6\">\n                        <slot name=\"form\" />\n                    </div>\n                </div>\n\n                <div v-if=\"hasActions\" class=\"flex items-center justify-end px-4 py-3 bg-gray-50 text-right sm:px-6 shadow sm:rounded-bl-md sm:rounded-br-md\">\n                    <slot name=\"actions\" />\n                </div>\n            </form>\n        </div>\n    </div>\n</template>\n","import script from \"./Input.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Input.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { onMounted, ref } from 'vue';\n\ndefineProps({\n    modelValue: String,\n});\n\ndefineEmits(['update:modelValue']);\n\nconst input = ref(null);\n\nonMounted(() => {\n    if (input.value.hasAttribute('autofocus')) {\n        input.value.focus();\n    }\n});\n\ndefineExpose({ focus: () => input.value.focus() });\n</script>\n\n<template>\n    <input\n        ref=\"input\"\n        class=\"border-2 border-gray-300 focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50 rounded-md shadow-sm text-black bg-white dark:bg-gray-800 dark:text-white\"\n        :value=\"modelValue\"\n        @input=\"$emit('update:modelValue', $event.target.value)\"\n    >\n</template>\n","import script from \"./InputError.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./InputError.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./Label.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Label.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./Modal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Modal.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { computed, onMounted, onUnmounted, watch } from 'vue';\n\nconst props = defineProps({\n    show: {\n        type: Boolean,\n        default: false,\n    },\n    maxWidth: {\n        type: String,\n        default: '2xl',\n    },\n    closeable: {\n        type: Boolean,\n        default: true,\n    },\n});\n\nconst emit = defineEmits(['close']);\n\nwatch(() => props.show, () => {\n    if (props.show) {\n        document.body.style.overflow = 'hidden';\n    } else {\n        document.body.style.overflow = null;\n    }\n});\n\nconst close = () => {\n    if (props.closeable) {\n        emit('close');\n    }\n};\n\nconst closeOnEscape = (e) => {\n    if (e.key === 'Escape' && props.show) {\n        close();\n    }\n};\n\nonMounted(() => document.addEventListener('keydown', closeOnEscape));\n\nonUnmounted(() => {\n    document.removeEventListener('keydown', closeOnEscape);\n    document.body.style.overflow = null;\n});\n\nconst maxWidthClass = computed(() => {\n    return {\n        'sm': 'sm:max-w-sm',\n        'md': 'sm:max-w-md',\n        'lg': 'sm:max-w-lg',\n        'xl': 'sm:max-w-xl',\n        '2xl': 'sm:max-w-2xl',\n    }[props.maxWidth];\n});\n</script>\n\n<template>\n    <teleport to=\"body\">\n        <transition leave-active-class=\"duration-200\">\n            <div v-show=\"show\" class=\"fixed inset-0 overflow-y-auto px-4 py-6 sm:px-0 z-50\" scroll-region>\n                <transition\n                    enter-active-class=\"ease-out duration-300\"\n                    enter-from-class=\"opacity-0\"\n                    enter-to-class=\"opacity-100\"\n                    leave-active-class=\"ease-in duration-200\"\n                    leave-from-class=\"opacity-100\"\n                    leave-to-class=\"opacity-0\"\n                >\n                    <div v-show=\"show\" class=\"fixed inset-0 transform transition-all\" @click=\"close\">\n                        <div class=\"absolute inset-0 bg-gray-500 opacity-75\" />\n                    </div>\n                </transition>\n\n                <transition\n                    enter-active-class=\"ease-out duration-300\"\n                    enter-from-class=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n                    enter-to-class=\"opacity-100 translate-y-0 sm:scale-100\"\n                    leave-active-class=\"ease-in duration-200\"\n                    leave-from-class=\"opacity-100 translate-y-0 sm:scale-100\"\n                    leave-to-class=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n                >\n                    <div v-show=\"show\" class=\"mb-6 bg-white rounded-lg overflow-hidden shadow-xl transform transition-all sm:w-full sm:mx-auto\" :class=\"maxWidthClass\">\n                        <slot v-if=\"show\" />\n                    </div>\n                </transition>\n            </div>\n        </transition>\n    </teleport>\n</template>\n","import script from \"./SecondaryButton.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./SecondaryButton.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <div class=\"hidden sm:block\">\n        <div class=\"py-8\">\n            <div class=\"border-t border-gray-200\" />\n        </div>\n    </div>\n</template>\n","import { render } from \"./SectionBorder.vue?vue&type=template&id=73503fc2\"\nconst script = {}\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n    <div class=\"md:col-span-1 flex justify-between\">\n        <div class=\"px-4 sm:px-0\">\n            <h3 class=\"text-lg font-medium text-gray-100\">\n                <slot name=\"title\" />\n            </h3>\n\n            <p class=\"mt-1 text-sm text-gray-300\">\n                <slot name=\"description\" />\n            </p>\n        </div>\n\n        <div class=\"px-4 sm:px-0\">\n            <slot name=\"aside\" />\n        </div>\n    </div>\n</template>\n","import { render } from \"./SectionTitle.vue?vue&type=template&id=80f22ac0\"\nconst script = {}\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import script from \"./DeleteUserForm.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./DeleteUserForm.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { ref } from 'vue';\nimport { useForm } from '@inertiajs/vue3';\nimport JetActionSection from '@/Jetstream/ActionSection.vue';\nimport JetDialogModal from '@/Jetstream/DialogModal.vue';\nimport JetDangerButton from '@/Jetstream/DangerButton.vue';\nimport JetInput from '@/Jetstream/Input.vue';\nimport JetInputError from '@/Jetstream/InputError.vue';\nimport JetSecondaryButton from '@/Jetstream/SecondaryButton.vue';\n\nconst confirmingUserDeletion = ref(false);\nconst passwordInput = ref(null);\n\nconst form = useForm({\n    password: '',\n});\n\nconst confirmUserDeletion = () => {\n    confirmingUserDeletion.value = true;\n\n    setTimeout(() => passwordInput.value.focus(), 250);\n};\n\nconst deleteUser = () => {\n    form.delete(route('current-user.destroy'), {\n        preserveScroll: true,\n        onSuccess: () => closeModal(),\n        onError: () => passwordInput.value.focus(),\n        onFinish: () => form.reset(),\n    });\n};\n\nconst closeModal = () => {\n    confirmingUserDeletion.value = false;\n\n    form.reset();\n};\n</script>\n\n<template>\n    <JetActionSection>\n        <template #title>\n            Delete Account\n        </template>\n\n        <template #description>\n            Permanently delete your account.\n        </template>\n\n        <template #content>\n            <div class=\"max-w-xl text-sm text-gray-600\">\n                Once your account is deleted, all of its resources and data will be permanently deleted. Before deleting your account, please download any data or information that you wish to retain.\n            </div>\n\n            <div class=\"mt-5\">\n                <JetDangerButton @click=\"confirmUserDeletion\">\n                    Delete Account\n                </JetDangerButton>\n            </div>\n\n            <!-- Delete Account Confirmation Modal -->\n            <JetDialogModal :show=\"confirmingUserDeletion\" @close=\"closeModal\">\n                <template #title>\n                    Delete Account\n                </template>\n\n                <template #content>\n                    Are you sure you want to delete your account? Once your account is deleted, all of its resources and data will be permanently deleted. Please enter your password to confirm you would like to permanently delete your account.\n\n                    <div class=\"mt-4\">\n                        <JetInput\n                            ref=\"passwordInput\"\n                            v-model=\"form.password\"\n                            type=\"password\"\n                            class=\"mt-1 block w-3/4\"\n                            placeholder=\"Password\"\n                            @keyup.enter=\"deleteUser\"\n                        />\n\n                        <JetInputError :message=\"form.errors.password\" class=\"mt-2\" />\n                    </div>\n                </template>\n\n                <template #footer>\n                    <JetSecondaryButton @click=\"closeModal\">\n                        Cancel\n                    </JetSecondaryButton>\n\n                    <JetDangerButton\n                        class=\"ml-3\"\n                        :class=\"{ 'opacity-25': form.processing }\"\n                        :disabled=\"form.processing\"\n                        @click=\"deleteUser\"\n                    >\n                        Delete Account\n                    </JetDangerButton>\n                </template>\n            </JetDialogModal>\n        </template>\n    </JetActionSection>\n</template>\n","import script from \"./LogoutOtherBrowserSessionsForm.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./LogoutOtherBrowserSessionsForm.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { ref } from 'vue';\nimport { useForm } from '@inertiajs/vue3';\nimport JetActionMessage from '@/Jetstream/ActionMessage.vue';\nimport JetActionSection from '@/Jetstream/ActionSection.vue';\nimport JetButton from '@/Jetstream/Button.vue';\nimport JetDialogModal from '@/Jetstream/DialogModal.vue';\nimport JetInput from '@/Jetstream/Input.vue';\nimport JetInputError from '@/Jetstream/InputError.vue';\nimport JetSecondaryButton from '@/Jetstream/SecondaryButton.vue';\n\ndefineProps({\n    sessions: Array,\n});\n\nconst confirmingLogout = ref(false);\nconst passwordInput = ref(null);\n\nconst form = useForm({\n    password: '',\n});\n\nconst confirmLogout = () => {\n    confirmingLogout.value = true;\n\n    setTimeout(() => passwordInput.value.focus(), 250);\n};\n\nconst logoutOtherBrowserSessions = () => {\n    form.delete(route('other-browser-sessions.destroy'), {\n        preserveScroll: true,\n        onSuccess: () => closeModal(),\n        onError: () => passwordInput.value.focus(),\n        onFinish: () => form.reset(),\n    });\n};\n\nconst closeModal = () => {\n    confirmingLogout.value = false;\n\n    form.reset();\n};\n</script>\n\n<template>\n    <JetActionSection>\n        <template #title>\n            Browser Sessions\n        </template>\n\n        <template #description>\n            Manage and log out your active sessions on other browsers and devices.\n        </template>\n\n        <template #content>\n            <div class=\"max-w-xl text-sm text-gray-600\">\n                If necessary, you may log out of all of your other browser sessions across all of your devices. Some of your recent sessions are listed below; however, this list may not be exhaustive. If you feel your account has been compromised, you should also update your password.\n            </div>\n\n            <!-- Other Browser Sessions -->\n            <div v-if=\"sessions.length > 0\" class=\"mt-5 space-y-6\">\n                <div v-for=\"(session, i) in sessions\" :key=\"i\" class=\"flex items-center\">\n                    <div>\n                        <svg\n                            v-if=\"session.agent.is_desktop\"\n                            fill=\"none\"\n                            stroke-linecap=\"round\"\n                            stroke-linejoin=\"round\"\n                            stroke-width=\"2\"\n                            viewBox=\"0 0 24 24\"\n                            stroke=\"currentColor\"\n                            class=\"w-8 h-8 text-gray-500\"\n                        >\n                            <path d=\"M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\" />\n                        </svg>\n\n                        <svg\n                            v-else\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            viewBox=\"0 0 24 24\"\n                            stroke-width=\"2\"\n                            stroke=\"currentColor\"\n                            fill=\"none\"\n                            stroke-linecap=\"round\"\n                            stroke-linejoin=\"round\"\n                            class=\"w-8 h-8 text-gray-500\"\n                        >\n                            <path d=\"M0 0h24v24H0z\" stroke=\"none\" /><rect\n                                x=\"7\"\n                                y=\"4\"\n                                width=\"10\"\n                                height=\"16\"\n                                rx=\"1\"\n                            /><path d=\"M11 5h2M12 17v.01\" />\n                        </svg>\n                    </div>\n\n                    <div class=\"ml-3\">\n                        <div class=\"text-sm text-gray-600\">\n                            {{ session.agent.platform ? session.agent.platform : 'Unknown' }} - {{ session.agent.browser ? session.agent.browser : 'Unknown' }}\n                        </div>\n\n                        <div>\n                            <div class=\"text-xs text-gray-500\">\n                                {{ session.ip_address }},\n\n                                <span v-if=\"session.is_current_device\" class=\"text-green-500 font-semibold\">This device</span>\n                                <span v-else>Last active {{ session.last_active }}</span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"flex items-center mt-5\">\n                <JetButton @click=\"confirmLogout\">\n                    Log Out Other Browser Sessions\n                </JetButton>\n\n                <JetActionMessage :on=\"form.recentlySuccessful\" class=\"ml-3\">\n                    Done.\n                </JetActionMessage>\n            </div>\n\n            <!-- Log Out Other Devices Confirmation Modal -->\n            <JetDialogModal :show=\"confirmingLogout\" @close=\"closeModal\">\n                <template #title>\n                    Log Out Other Browser Sessions\n                </template>\n\n                <template #content>\n                    Please enter your password to confirm you would like to log out of your other browser sessions across all of your devices.\n\n                    <div class=\"mt-4\">\n                        <JetInput\n                            ref=\"passwordInput\"\n                            v-model=\"form.password\"\n                            type=\"password\"\n                            class=\"mt-1 block w-3/4\"\n                            placeholder=\"Password\"\n                            @keyup.enter=\"logoutOtherBrowserSessions\"\n                        />\n\n                        <JetInputError :message=\"form.errors.password\" class=\"mt-2\" />\n                    </div>\n                </template>\n\n                <template #footer>\n                    <JetSecondaryButton @click=\"closeModal\">\n                        Cancel\n                    </JetSecondaryButton>\n\n                    <JetButton\n                        class=\"ml-3\"\n                        :class=\"{ 'opacity-25': form.processing }\"\n                        :disabled=\"form.processing\"\n                        @click=\"logoutOtherBrowserSessions\"\n                    >\n                        Log Out Other Browser Sessions\n                    </JetButton>\n                </template>\n            </JetDialogModal>\n        </template>\n    </JetActionSection>\n</template>\n","import script from \"./ConfirmsPassword.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ConfirmsPassword.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { ref, reactive, nextTick } from 'vue';\nimport JetButton from './Button.vue';\nimport JetDialogModal from './DialogModal.vue';\nimport JetInput from './Input.vue';\nimport JetInputError from './InputError.vue';\nimport JetSecondaryButton from './SecondaryButton.vue';\n\nconst emit = defineEmits(['confirmed']);\n\ndefineProps({\n    title: {\n        type: String,\n        default: 'Confirm Password',\n    },\n    content: {\n        type: String,\n        default: 'For your security, please confirm your password to continue.',\n    },\n    button: {\n        type: String,\n        default: 'Confirm',\n    },\n});\n\nconst confirmingPassword = ref(false);\n\nconst form = reactive({\n    password: '',\n    error: '',\n    processing: false,\n});\n\nconst passwordInput = ref(null);\n\nconst startConfirmingPassword = () => {\n    axios.get(route('password.confirmation')).then(response => {\n        if (response.data.confirmed) {\n            emit('confirmed');\n        } else {\n            confirmingPassword.value = true;\n\n            setTimeout(() => passwordInput.value.focus(), 250);\n        }\n    });\n};\n\nconst confirmPassword = () => {\n    form.processing = true;\n\n    axios.post(route('password.confirm'), {\n        password: form.password,\n    }).then(() => {\n        form.processing = false;\n\n        closeModal();\n        nextTick().then(() => emit('confirmed'));\n\n    }).catch(error => {\n        form.processing = false;\n        form.error = error.response.data.errors.password[0];\n        passwordInput.value.focus();\n    });\n};\n\nconst closeModal = () => {\n    confirmingPassword.value = false;\n    form.password = '';\n    form.error = '';\n};\n</script>\n\n<template>\n    <span>\n        <span @click=\"startConfirmingPassword\">\n            <slot />\n        </span>\n\n        <JetDialogModal :show=\"confirmingPassword\" @close=\"closeModal\">\n            <template #title>\n                {{ title }}\n            </template>\n\n            <template #content>\n                {{ content }}\n\n                <div class=\"mt-4\">\n                    <JetInput\n                        ref=\"passwordInput\"\n                        v-model=\"form.password\"\n                        type=\"password\"\n                        class=\"mt-1 block w-3/4\"\n                        placeholder=\"Password\"\n                        @keyup.enter=\"confirmPassword\"\n                    />\n\n                    <JetInputError :message=\"form.error\" class=\"mt-2\" />\n                </div>\n            </template>\n\n            <template #footer>\n                <JetSecondaryButton @click=\"closeModal\">\n                    Cancel\n                </JetSecondaryButton>\n\n                <JetButton\n                    class=\"ml-3\"\n                    :class=\"{ 'opacity-25': form.processing }\"\n                    :disabled=\"form.processing\"\n                    @click=\"confirmPassword\"\n                >\n                    {{ button }}\n                </JetButton>\n            </template>\n        </JetDialogModal>\n    </span>\n</template>\n","import script from \"./TwoFactorAuthenticationForm.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TwoFactorAuthenticationForm.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <JetActionSection>\n    <template #title>\n      Two Factor Authentication\n    </template>\n\n    <template #description>\n      Add additional security to your account using two factor authentication.\n    </template>\n\n    <template #content>\n      <h3 v-if=\"twoFactorEnabled && !confirming\" class=\"text-lg font-medium text-gray-900\">\n        You have enabled two factor authentication.\n      </h3>\n\n      <h3 v-else-if=\"twoFactorEnabled && confirming\" class=\"text-lg font-medium text-gray-900\">\n        Finish enabling two factor authentication.\n      </h3>\n\n      <h3 v-else class=\"text-lg font-medium text-gray-900\">\n        You have not enabled two factor authentication.\n      </h3>\n\n      <div class=\"mt-3 max-w-xl text-sm text-gray-600\">\n        <p>\n          When two factor authentication is enabled, you will be prompted for a secure, random token during\n          authentication. You may retrieve this token from your phone's Google Authenticator application.\n        </p>\n      </div>\n\n      <div v-if=\"twoFactorEnabled\">\n        <div v-if=\"qrCode\">\n          <div class=\"mt-4 max-w-xl text-sm text-gray-600\">\n            <p v-if=\"confirming\" class=\"font-semibold\">\n              To finish enabling two factor authentication, scan the following QR code using your phone's authenticator\n              application or enter the setup key and provide the generated OTP code.\n            </p>\n\n            <p v-else>\n              Two factor authentication is now enabled. Scan the following QR code using your phone's authenticator\n              application or enter the setup key.\n            </p>\n          </div>\n\n          <div class=\"mt-4\" v-html=\"qrCode\"/>\n\n          <div class=\"mt-4 max-w-xl text-sm text-gray-600\" v-if=\"setupKey\">\n            <p class=\"font-semibold\">\n              Setup Key: <span v-html=\"setupKey\"></span>\n            </p>\n          </div>\n\n          <div v-if=\"confirming\" class=\"mt-4\">\n            <JetLabel for=\"code\" value=\"Code\"/>\n\n            <JetInput\n                id=\"code\"\n                v-model=\"confirmationForm.code\"\n                type=\"text\"\n                name=\"code\"\n                class=\"block mt-1 w-1/2\"\n                inputmode=\"numeric\"\n                autofocus\n                autocomplete=\"one-time-code\"\n                @keyup.enter=\"confirmTwoFactorAuthentication\"\n            />\n\n            <JetInputError :message=\"confirmationForm.errors.code\" class=\"mt-2\"/>\n          </div>\n        </div>\n\n        <div v-if=\"recoveryCodes.length > 0 && !confirming\">\n          <div class=\"mt-4 max-w-xl text-sm text-gray-600\">\n            <p class=\"font-semibold\">\n              Store these recovery codes in a secure password manager. They can be used to recover access to your\n              account if your two factor authentication device is lost.\n            </p>\n          </div>\n\n          <div class=\"grid gap-1 max-w-xl mt-4 px-4 py-4 font-mono text-sm bg-gray-100 rounded-lg\">\n            <div v-for=\"code in recoveryCodes\" :key=\"code\">\n              {{ code }}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"mt-5\">\n        <div v-if=\"!twoFactorEnabled\">\n          <JetConfirmsPassword @confirmed=\"enableTwoFactorAuthentication\">\n            <JetButton type=\"button\" :class=\"{ 'opacity-25': enabling }\" :disabled=\"enabling\">\n              Enable\n            </JetButton>\n          </JetConfirmsPassword>\n        </div>\n\n        <div v-else>\n          <JetConfirmsPassword @confirmed=\"confirmTwoFactorAuthentication\">\n            <JetButton\n                v-if=\"confirming\"\n                type=\"button\"\n                class=\"mr-3\"\n                :class=\"{ 'opacity-25': enabling }\"\n                :disabled=\"enabling\"\n            >\n              Confirm\n            </JetButton>\n          </JetConfirmsPassword>\n\n          <JetConfirmsPassword @confirmed=\"regenerateRecoveryCodes\">\n            <JetSecondaryButton\n                v-if=\"recoveryCodes.length > 0 && !confirming\"\n                class=\"mr-3\"\n            >\n              Regenerate Recovery Codes\n            </JetSecondaryButton>\n          </JetConfirmsPassword>\n\n          <JetConfirmsPassword @confirmed=\"showRecoveryCodes\">\n            <JetSecondaryButton\n                v-if=\"recoveryCodes.length === 0 && !confirming\"\n                class=\"mr-3 mb-2\"\n            >\n              Show Recovery Codes\n            </JetSecondaryButton>\n          </JetConfirmsPassword>\n\n          <JetConfirmsPassword @confirmed=\"disableTwoFactorAuthentication\">\n            <JetSecondaryButton\n                v-if=\"confirming\"\n                :class=\"{ 'opacity-25': disabling }\"\n                :disabled=\"disabling\"\n            >\n              Cancel\n            </JetSecondaryButton>\n          </JetConfirmsPassword>\n\n          <JetConfirmsPassword @confirmed=\"disableTwoFactorAuthentication\">\n            <JetDangerButton\n                v-if=\"!confirming\"\n                :class=\"{ 'opacity-25': disabling }\"\n                :disabled=\"disabling\"\n            >\n              Disable\n            </JetDangerButton>\n          </JetConfirmsPassword>\n        </div>\n      </div>\n    </template>\n  </JetActionSection>\n</template>\n<script setup>\nimport { ref, computed, watch } from 'vue';\nimport { router } from '@inertiajs/vue3';\nimport { useForm, usePage } from '@inertiajs/vue3';\nimport JetActionSection from '@/Jetstream/ActionSection.vue';\nimport JetButton from '@/Jetstream/Button.vue';\nimport JetConfirmsPassword from '@/Jetstream/ConfirmsPassword.vue';\nimport JetDangerButton from '@/Jetstream/DangerButton.vue';\nimport JetInput from '@/Jetstream/Input.vue';\nimport JetInputError from '@/Jetstream/InputError.vue';\nimport JetLabel from '@/Jetstream/Label.vue';\nimport JetSecondaryButton from '@/Jetstream/SecondaryButton.vue';\nimport axios from 'axios';\n\nconst props = defineProps({\n  requiresConfirmation: Boolean,\n});\n\nconst enabling = ref(false);\nconst confirming = ref(false);\nconst disabling = ref(false);\nconst qrCode = ref(null);\nconst setupKey = ref(null);\nconst recoveryCodes = ref([]);\n\nconst confirmationForm = useForm({\n  code: '',\n});\n\nconst twoFactorEnabled = computed(() => !enabling.value && usePage().props.auth.user?.two_factor_enabled);\n\nwatch(twoFactorEnabled, () => {\n  if (!twoFactorEnabled.value) {\n    confirmationForm.reset();\n    confirmationForm.clearErrors();\n  }\n});\n\nconst enableTwoFactorAuthentication = () => {\n  // console.log('Starting two-factor authentication enable process...');\n  enabling.value = true;\n\n  router.post('/user/two-factor-authentication', {}, {\n    preserveScroll: true,\n    onSuccess: () => {\n      // console.log('Two-factor authentication enabled successfully.');\n      return Promise.all([\n        showQrCode(),\n        showSetupKey(),\n        showRecoveryCodes(),\n      ]);\n    },\n    onFinish: () => {\n      // console.log('Finished two-factor authentication enable process.');\n      enabling.value = false;\n      confirming.value = props.requiresConfirmation;\n    },\n    onError: (errors) => {\n      console.error('Error enabling two-factor authentication:', errors);\n      enabling.value = false;\n    },\n  });\n};\n\nconst showQrCode = () => {\n  // console.log('Fetching QR code...');\n  return axios.get('/user/two-factor-qr-code').then(response => {\n    qrCode.value = response.data.svg;\n  }).catch(error => {\n    console.error('Error fetching QR code:', error);\n  });\n};\n\nconst showSetupKey = () => {\n  // console.log('Fetching setup key...');\n  return axios.get('/user/two-factor-secret-key').then(response => {\n    // console.log('Setup key fetched successfully.');\n    setupKey.value = response.data.secretKey;\n  }).catch(error => {\n    console.error('Error fetching setup key:', error);\n  });\n};\n\nconst showRecoveryCodes = () => {\n  // console.log('Fetching recovery codes...');\n  return axios.get('/user/two-factor-recovery-codes').then(response => {\n    // console.log('Recovery codes fetched successfully.');\n    recoveryCodes.value = response.data;\n  }).catch(error => {\n    console.error('Error fetching recovery codes:', error);\n  });\n};\n\nconst confirmTwoFactorAuthentication = () => {\n  // console.log('Confirming two-factor authentication...');\n  confirmationForm.post('/user/confirmed-two-factor-authentication', {\n    errorBag: 'confirmTwoFactorAuthentication',\n    preserveScroll: true,\n    preserveState: true,\n    onSuccess: () => {\n      // console.log('Two-factor authentication confirmed successfully.');\n      confirming.value = false;\n      qrCode.value = null;\n      setupKey.value = null;\n    },\n    onError: (errors) => {\n      console.error('Error confirming two-factor authentication:', errors);\n    },\n  });\n};\n\nconst regenerateRecoveryCodes = () => {\n  // console.log('Regenerating recovery codes...');\n  axios.post('/user/two-factor-recovery-codes').then(() => {\n    // console.log('Recovery codes regenerated successfully.');\n    showRecoveryCodes();\n  }).catch(error => {\n    console.error('Error regenerating recovery codes:', error);\n  });\n};\n\nconst disableTwoFactorAuthentication = () => {\n  // console.log('Disabling two-factor authentication...');\n  disabling.value = true;\n\n  router.delete('/user/two-factor-authentication', {\n    preserveScroll: true,\n    onSuccess: () => {\n      // console.log('Two-factor authentication disabled successfully.');\n      disabling.value = false;\n      confirming.value = false;\n    },\n    onError: (errors) => {\n      console.error('Error disabling two-factor authentication:', errors);\n      disabling.value = false;\n    },\n  });\n};\n</script>","import script from \"./UpdateContactInformationForm.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./UpdateContactInformationForm.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <JetFormSection @submitted=\"updateProfileInformation\">\n    <template #title>\n      Contact Information\n    </template>\n\n    <template #description>\n      Update your account's contact information.\n    </template>\n\n\n    <template #form>\n\n      <!--            <form @submit.prevent=\"submit\" class=\"mt-6\">-->\n\n      <!--            <div class=\"col-span-6 sm:col-span-4 hidden\">-->\n      <!--                <JetLabel for=\"name\" value=\"Name\" />-->\n      <!--                <JetInput-->\n      <!--                    id=\"name\"-->\n      <!--                    v-model=\"form.name\"-->\n      <!--                    type=\"text\"-->\n      <!--                    class=\"mt-1 block w-full\"-->\n      <!--                    autocomplete=\"name\"-->\n      <!--                />-->\n      <!--                <JetInputError :message=\"form.errors.name\" class=\"mt-2\" />-->\n      <!--            </div>-->\n\n      <!--            <div class=\"col-span-6 sm:col-span-4 hidden\">-->\n      <!--                <JetLabel for=\"email\" value=\"Email\" />-->\n      <!--                <JetInput-->\n      <!--                    id=\"email\"-->\n      <!--                    v-model=\"form.email\"-->\n      <!--                    type=\"email\"-->\n      <!--                    class=\"mt-1 block w-full\"-->\n      <!--                    autocomplete=\"email\"-->\n      <!--                />-->\n      <!--                <JetInputError :message=\"form.errors.email\" class=\"mt-2\" />-->\n      <!--            </div>-->\n\n      <!-- Address -->\n      <div class=\"col-span-6 sm:col-span-4\">\n        <JetLabel for=\"address1\" value=\"Address 1\"/>\n        <JetInput\n            id=\"address1\"\n            v-model=\"form.address1\"\n            type=\"text\"\n            class=\"mt-1 block w-full\"\n            autocomplete=\"address1\"\n        />\n        <JetInputError :message=\"form.errors.address1\" class=\"mt-2\"/>\n      </div>\n      <div class=\"col-span-6 sm:col-span-4\">\n        <JetLabel for=\"address2\" value=\"Address 2\"/>\n        <JetInput\n            id=\"address2\"\n            v-model=\"form.address2\"\n            type=\"text\"\n            class=\"mt-1 block w-full\"\n            autocomplete=\"address2\"\n        />\n        <JetInputError :message=\"form.errors.address2\" class=\"mt-2\"/>\n      </div>\n      <div class=\"col-span-6 sm:col-span-4\">\n        <JetLabel for=\"city\" value=\"City\"/>\n        <JetInput\n            id=\"city\"\n            v-model=\"form.city\"\n            type=\"text\"\n            class=\"mt-1 block w-full\"\n            autocomplete=\"city\"\n        />\n        <JetInputError :message=\"form.errors.city\" class=\"mt-2\"/>\n      </div>\n\n      <div class=\"col-span-6 sm:col-span-4\">\n        <JetLabel for=\"province\" value=\"Province/State\"/>\n        <JetInput\n            id=\"province\"\n            v-model=\"form.province\"\n            type=\"text\"\n            class=\"mt-1 block w-full\"\n            autocomplete=\"province\"\n        />\n        <JetInputError :message=\"form.errors.province\" class=\"mt-2\"/>\n      </div>\n\n      <div class=\"col-span-6 sm:col-span-4\">\n        <JetLabel for=\"country\" value=\"Country\"/>\n        <select id=\"country\" v-model=\"form.country\" class=\"mt-1 block w-full border-gray-300 rounded-md shadow-sm\">\n          <option v-for=\"country in countries\" :key=\"country.id\" :value=\"country.name\">\n            {{ country.name }}\n          </option>\n        </select>\n        <JetInputError :message=\"form.errors.country\" class=\"mt-2\"/>\n      </div>\n\n      <div class=\"col-span-6 sm:col-span-4\">\n        <JetLabel for=\"postal_code\" value=\"Postal Code/Zip\"/>\n        <JetInput\n            id=\"postalCode\"\n            v-model=\"form.postalCode\"\n            type=\"text\"\n            class=\"mt-1 block w-full\"\n            autocomplete=\"postalCode\"\n        />\n        <JetInputError :message=\"form.errors.postalCode\" class=\"mt-2\"/>\n      </div>\n      <div class=\"col-span-6 sm:col-span-4\">\n        <JetLabel for=\"phone\" value=\"Phone Number\"/>\n        <JetInput\n            id=\"phone\"\n            v-model=\"form.phone\"\n            type=\"text\"\n            class=\"mt-1 block w-full\"\n            autocomplete=\"phone\"\n        />\n        <JetInputError :message=\"form.errors.phone\" class=\"mt-2\"/>\n      </div>\n\n      <!--                <div class=\"flex justify-between mb-6\">-->\n      <!--                    <button-->\n      <!--                        type=\"submit\"-->\n      <!--                        class=\"bg-blue-400 text-white rounded py-2 px-4 hover:bg-blue-500\"-->\n      <!--                        :class=\"{ 'opacity-25': form.processing }\"-->\n      <!--                        :disabled=\"form.processing\"-->\n      <!--                    >-->\n      <!--                        Save-->\n      <!--                    </button>-->\n      <!--                </div>-->\n\n      <!--            <JetActionMessage :on=\"form.recentlySuccessful\" class=\"mr-3\">-->\n      <!--                Saved.-->\n      <!--            </JetActionMessage>-->\n      <!--            </form>-->\n\n\n    </template>\n\n    <template #actions>\n      <JetActionMessage :on=\"form.recentlySuccessful\" class=\"mr-3\">\n        <span class=\"text-green-500\">Saved.</span>\n      </JetActionMessage>\n\n      <JetButton :class=\"{ 'opacity-25': form.processing }\" :disabled=\"form.processing\">\n        Save\n      </JetButton>\n    </template>\n  </JetFormSection>\n</template>\n\n<script setup>\nimport { onMounted, ref } from 'vue'\nimport { router } from '@inertiajs/vue3'\nimport { Link, useForm } from '@inertiajs/vue3'\nimport JetButton from '@/Jetstream/Button.vue'\nimport JetFormSection from '@/Jetstream/FormSection.vue'\nimport JetInput from '@/Jetstream/Input.vue'\nimport JetInputError from '@/Jetstream/InputError.vue'\nimport JetLabel from '@/Jetstream/Label.vue'\nimport JetActionMessage from '@/Jetstream/ActionMessage.vue'\nimport JetSecondaryButton from '@/Jetstream/SecondaryButton.vue'\n\nconst props = defineProps({\n  user: Object,\n})\n\nconst form = useForm({\n  _method: 'PATCH',\n  address1: '',\n  address2: '',\n  city: '',\n  province: '',\n  country: '',\n  postalCode: '',\n  phone: '',\n})\n\nconst countries = ref([])\nconst error = ref(null)\n\nonMounted(async () => {\n  try {\n    // Fetch countries\n    const countryResponse = await fetch('/api/news-countries-simple-list');\n    if (!countryResponse.ok) {\n      console.log('Failed to fetch countries');\n    }\n    countries.value = await countryResponse.json();\n\n    // Fetch user contact information\n    const userResponse = await fetch('/user/contact');\n    if (!userResponse.ok) {\n      console.log('Failed to fetch user contact information');\n    }\n    const userData = await userResponse.json();\n\n    // Populate form with user data\n    form.address1 = userData.address1;\n    form.address2 = userData.address2;\n    form.city = userData.city;\n    form.province = userData.province;\n    form.country = userData.country;\n    form.postalCode = userData.postalCode;\n    form.phone = userData.phone;\n  } catch (err) {\n    error.value = err.message;\n  }\n});\n\nconst updateProfileInformation = () => {\n  form.patch(route('users.updateContact'), {\n    errorBag: 'updateProfileInformation',\n    preserveScroll: true,\n    onSuccess: () => {\n      console.log('Form data successfully sent');\n    },\n    onError: (errors) => {\n      console.error('Form submission errors:', errors);\n    },\n  });\n};\n\n// let form = useForm({\n//     id: props.userEdit.id,\n//     name: props.userEdit.name,\n//     email: props.userEdit.email,\n//     role_id: props.userEdit.role_id,\n//     address1: props.userEdit.address1,\n//     address2: props.userEdit.address2,\n//     city: props.userEdit.city,\n//     province: props.userEdit.province,\n//     country: props.userEdit.country,\n//     postalCode: props.userEdit.postalCode,\n//     phone: props.userEdit.phone,\n// });\n\n// const verificationLinkSent = ref(null);\n\n// const updateContactInformation = () => {\n//     form.post(route('user-profile-information.update'), {\n//         errorBag: 'updateContactInformation',\n//         preserveScroll: true,\n//     });\n// };\n\n\n// let submit = () => {\n//     form.post(route('users.updateUser', props.user.id));\n// };\n\n// const sendEmailVerification = () => {\n//     verificationLinkSent.value = true;\n// };\n\n</script>","<template>\n  <JetFormSection @submitted=\"updateCreatorSettings\">\n    <template #title>\n      Creator Profile Settings<br><span class=\"text-green-500 tracking-wide\">(creators only)</span>\n    </template>\n\n    <template #description>\n      Here you can customize your creator profile settings. Adjust visibility preferences, manage notification settings, and update other personal options to tailor how you interact with the platform and how others see your profile.\n    </template>\n\n    <template #form>\n      <!-- Profile Visibility -->\n      <div class=\"col-span-6 sm:col-span-4 bg-white dark:bg-gray-800 dark:text-white\">\n        <JetLabel for=\"profile_is_public\" value=\"Profile Visibility:\"/>\n        <!-- Update the v-model to bind with the form object -->\n        Private <input type=\"checkbox\" id=\"profile_is_public\" class=\"toggle toggle-success hover:text-blue-300\"\n               v-model=\"profileIsPublic\" ref=\"checkboxRef\" @click=\"handleCheckboxClick\"/> Public\n        <!-- Display error message if there is an error related to profile_is_public -->\n        <JetInputError :message=\"form.errors['settings.profile_is_public']\" class=\"mt-2\"/>\n      </div>\n    </template>\n\n    <template #actions>\n      <JetActionMessage :on=\"savedMessage\" class=\"mr-3\">\n        <span class=\"text-green-500\">Saved.</span>\n      </JetActionMessage>\n\n      <JetButton :class=\"{ 'opacity-25': form.processing }\" :disabled=\"form.processing\">\n        Save\n      </JetButton>\n    </template>\n  </JetFormSection>\n</template>\n<script setup>\nimport { computed, onMounted, reactive, ref, watch } from 'vue'\nimport { router } from '@inertiajs/vue3'\nimport { usePage } from '@inertiajs/vue3'\nimport { Link, useForm } from '@inertiajs/vue3'\nimport JetButton from '@/Jetstream/Button.vue'\nimport JetFormSection from '@/Jetstream/FormSection.vue'\nimport JetInput from '@/Jetstream/Input.vue'\nimport JetInputError from '@/Jetstream/InputError.vue'\nimport JetLabel from '@/Jetstream/Label.vue'\nimport JetActionMessage from '@/Jetstream/ActionMessage.vue'\nimport JetSecondaryButton from '@/Jetstream/SecondaryButton.vue'\n\nconst props = usePage().props\n\n// Initialize the form with useForm, include initial settings possibly coming from props\nconst form = useForm({\n  settings: {\n    profile_is_public: settings?.profile_is_public || false, // default to false if undefined\n  },\n})\n\nconst checkboxRef = ref(null);\n\nconst handleCheckboxClick = () => {\n  // You may perform other actions here if needed before blurring the checkbox\n  if (checkboxRef.value) {\n    checkboxRef.value.blur();\n  }\n};\n\nconst settings = reactive({\n  profile_is_public: null, // Default value until fetched from server\n})\n\nconst savedMessage = ref(false)\n\nconst profileIsPublic = computed({\n  get() {\n    // You can add any additional logic here if necessary\n    return settings.profile_is_public;\n  },\n  set(value) {\n    settings.profile_is_public = value;\n    // Any additional logic when setting the value can also be included here\n    // For example, you might want to debounce an update request to the server\n  }\n})\n\nconst fetchCreatorSettings = async () => {\n  const userId = props.auth.user.id // Assuming props are passed directly without 'value'\n\n  try {\n    console.log(`Fetching settings for user ID: ${userId}`) // Debug log\n    const response = await axios.get(`/user/creator/get-settings/${userId}`)\n\n    // Update the entire settings object\n    for (const key in response.data) {\n      if (response.data.hasOwnProperty(key)) {\n        settings[key] = response.data[key];\n      }\n    }\n    // If settings are fetched later and need to sync with useForm\n    form.settings.profile_is_public = settings.profile_is_public;\n    console.log('Settings fetched successfully:', settings.profile_is_public);\n\n  } catch (error) {\n    console.error('Failed to fetch creator settings:', error)\n    // Handle loading state or display error message in UI as needed\n  }\n}\n\n// After fetching settings and updating the `settings` object\nwatch(() => settings.profile_is_public, (newValue) => {\n  form.settings.profile_is_public = newValue;\n}, { immediate: true });\n\n// Fetch settings immediately when the component is created/mounted\nonMounted(fetchCreatorSettings)\n\n\n\nconst updateCreatorSettings = () => {\n  console.log('Submitting:', form.settings.profile_is_public);  // Log what is actually being submitted\n  // Check if the profile_is_public property is undefined\n  if (settings.profile_is_public === undefined) {\n    console.error('Cannot update settings because they have not been fetched yet.');\n    return;\n  }\n\n  const userId = props.auth.user.id  // Ensure userId is available\n  form.patch(`/user/creator/update-settings/${userId}`, {\n    onSuccess: (response) => {\n      console.log('Settings updated successfully!', response.message)\n      savedMessage.value = true; // Update local data to show message\n      setTimeout(() => {\n        savedMessage.value = false  // Optionally clear the message after a few seconds\n      }, 3000)\n    },\n    onFinish: () => {\n      form.reset('settings')  // Reset the settings field after successful update\n      console.log('Form has been reset.')\n    },\n    onError: (errors) => console.error(\"Update errors:\", errors),\n    preserveScroll: true,\n    errorBag: 'updateCreatorSettings'\n  })\n}\n\n</script>\n\n<style>\n.fade-enter-active, .fade-leave-active {\n  transition: opacity 0.5s;\n}\n.fade-enter, .fade-leave-to /* .fade-leave-active in <2.1.8 */ {\n  opacity: 0;\n}\n</style>\n","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-10.use[1]!../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-10.use[2]!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./UpdateCreatorSettings.vue?vue&type=style&index=0&id=3bfd795f&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./UpdateCreatorSettings.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./UpdateCreatorSettings.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./UpdateCreatorSettings.vue?vue&type=style&index=0&id=3bfd795f&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <JetFormSection @submitted=\"updateNewsPersonSettings\">\n    <template #title>\n      News Profile Settings<br><span class=\"text-yellow-500 tracking-wide\">(news people only)</span>\n    </template>\n\n    <template #description>\n      Here you can customize your news profile settings. Adjust visibility preferences, manage notification settings,\n      and update other personal options to tailor how you interact with the platform and how others see your profile.\n    </template>\n\n    <template #form>\n      <!-- List Profile Roles -->\n      <div class=\"col-span-6 sm:col-span-4\">\n        <h3 class=\"text-lg font-semibold mb-2\">Your News Roles</h3>\n        <ul class=\"list-disc list-inside\">\n          <li v-for=\"role in roles\" :key=\"role.id\">\n            {{ role.name }}\n          </li>\n        </ul>\n      </div>\n\n      <!-- Profile Image Section -->\n      <div class=\"col-span-6 sm:col-span-4\">\n        <button @click.prevent=\"toggleSection('profileImage')\" class=\"toggle-button\">\n          Profile Image\n        </button>\n        <div v-show=\"sections.profileImage\" class=\"transition-all duration-500 ease-in-out mt-2\">\n          <SingleImageWithModal v-if=\"image\"\n                                :image=\"image\"\n                                :key=\"image.id\"\n                                :alt=\"`News Profile Image`\"\n                                :class=\"`w-20 h-20 rounded-lg object-cover mb-6`\"/>\n          <JetLabel for=\"news_profile_image\" value=\"Upload News Person Profile Picture (optional):\"/>\n          <ImageUpload :modelType=\"'newsPerson'\"\n                       :modelId=\"newsPersonId\"\n                       :name=\"''\"\n                       :maxSize=\"'30MB'\"\n                       :fileTypes=\"'image/jpg, image/jpeg, image/png'\"\n                       @imageUploaded=\"updateImage\"\n          />\n        </div>\n      </div>\n\n      <!-- Biography Section -->\n      <div class=\"col-span-6 sm:col-span-4\">\n        <button @click.prevent=\"toggleSection('biography')\" class=\"toggle-button\">\n          Biography\n        </button>\n        <div v-show=\"sections.biography\" class=\"transition-all duration-500 ease-in-out mt-2\">\n          <JetLabel for=\"biography\" value=\"Biography\"/>\n          <TabbableTextarea id=\"biography\" class=\"mt-1 block w-full\" v-model=\"form.biography\"/>\n          <JetInputError :message=\"form.errors.biography\" class=\"mt-2\"/>\n        </div>\n      </div>\n\n      <!-- Contact Info Section -->\n      <div class=\"col-span-6 sm:col-span-4\">\n        <button @click.prevent=\"toggleSection('contactInfo')\" class=\"toggle-button\">\n          Contact Info\n        </button>\n        <div v-show=\"sections.contactInfo\" class=\"transition-all duration-500 ease-in-out mt-2\">\n          <JetLabel for=\"contact_info\" value=\"Contact Info\"/>\n          <TabbableTextarea id=\"contact_info\" class=\"mt-1 block w-full\" v-model=\"form.contact_info\"/>\n          <JetInputError :message=\"form.errors.contact_info\" class=\"mt-2\"/>\n        </div>\n      </div>\n\n      <!-- Other Details Section -->\n      <div class=\"col-span-6 sm:col-span-4\">\n        <button @click.prevent=\"toggleSection('otherDetails')\" class=\"toggle-button\">\n          Other Details\n        </button>\n        <div v-show=\"sections.otherDetails\" class=\"transition-all duration-500 ease-in-out mt-2\">\n          <JetLabel for=\"other_details\" value=\"Other Details\"/>\n          <TabbableTextarea id=\"other_details\" class=\"mt-1 block w-full\" v-model=\"form.other_details\"/>\n          <JetInputError :message=\"form.errors.other_details\" class=\"mt-2\"/>\n        </div>\n      </div>\n\n      <!-- Social Media Section -->\n      <div class=\"col-span-6 sm:col-span-4\">\n        <button @click.prevent=\"toggleSection('socialMedia')\" class=\"toggle-button\">\n          Social Media\n        </button>\n        <div v-show=\"sections.socialMedia\" class=\"transition-all duration-500 ease-in-out mt-2\">\n          <JetLabel for=\"facebook\" value=\"Facebook\"/>\n          <JetInput id=\"facebook\" type=\"text\" class=\"mt-1 block w-full\" v-model=\"form.social_media.facebook\"/>\n          <JetInputError :message=\"form.errors.social_media?.facebook\" class=\"mt-2\"/>\n\n          <JetLabel for=\"twitter\" value=\"X (Twitter)\" class=\"mt-4\"/>\n          <JetInput id=\"twitter\" type=\"text\" class=\"mt-1 block w-full\" v-model=\"form.social_media.twitter\"/>\n          <JetInputError :message=\"form.errors.social_media?.twitter\" class=\"mt-2\"/>\n\n          <JetLabel for=\"instagram\" value=\"Instagram\" class=\"mt-4\"/>\n          <JetInput id=\"instagram\" type=\"text\" class=\"mt-1 block w-full\" v-model=\"form.social_media.instagram\"/>\n          <JetInputError :message=\"form.errors.social_media?.instagram\" class=\"mt-2\"/>\n\n          <JetLabel for=\"linkedin\" value=\"LinkedIn\" class=\"mt-4\"/>\n          <JetInput id=\"linkedin\" type=\"text\" class=\"mt-1 block w-full\" v-model=\"form.social_media.linkedin\"/>\n          <JetInputError :message=\"form.errors.social_media?.linkedin\" class=\"mt-2\"/>\n\n          <JetLabel for=\"snapchat\" value=\"Snapchat\" class=\"mt-4\"/>\n          <JetInput id=\"snapchat\" type=\"text\" class=\"mt-1 block w-full\" v-model=\"form.social_media.snapchat\"/>\n          <JetInputError :message=\"form.errors.social_media?.snapchat\" class=\"mt-2\"/>\n\n          <JetLabel for=\"discord\" value=\"Discord\" class=\"mt-4\"/>\n          <JetInput id=\"discord\" type=\"text\" class=\"mt-1 block w-full\" v-model=\"form.social_media.discord\"/>\n          <JetInputError :message=\"form.errors.social_media?.discord\" class=\"mt-2\"/>\n\n          <JetLabel for=\"substack\" value=\"Substack\" class=\"mt-4\"/>\n          <JetInput id=\"substack\" type=\"text\" class=\"mt-1 block w-full\" v-model=\"form.social_media.substack\"/>\n          <JetInputError :message=\"form.errors.social_media?.substack\" class=\"mt-2\"/>\n        </div>\n      </div>\n    </template>\n\n    <template #actions>\n      <JetActionMessage :on=\"savedMessage\" class=\"mr-3\">\n        <span class=\"text-green-500\">Saved.</span>\n      </JetActionMessage>\n\n      <JetButton :class=\"{ 'opacity-25': form.processing }\" :disabled=\"form.processing\">\n        Save\n      </JetButton>\n    </template>\n  </JetFormSection>\n</template>\n\n<script setup>\nimport { computed, onMounted, reactive, ref, watch } from 'vue'\nimport { router } from '@inertiajs/vue3'\nimport { usePage } from '@inertiajs/vue3'\nimport { Link, useForm } from '@inertiajs/vue3'\nimport JetButton from '@/Jetstream/Button.vue'\nimport JetFormSection from '@/Jetstream/FormSection.vue'\nimport JetInput from '@/Jetstream/Input.vue'\nimport JetInputError from '@/Jetstream/InputError.vue'\nimport JetLabel from '@/Jetstream/Label.vue'\nimport JetActionMessage from '@/Jetstream/ActionMessage.vue'\nimport JetSecondaryButton from '@/Jetstream/SecondaryButton.vue'\nimport ImageUpload from '@/Components/Global/Uploaders/ImageUpload.vue'\nimport TabbableTextarea from '@/Components/Global/TextEditor/TabbableTextarea.vue'\nimport SingleImageWithModal from '@/Components/Global/Multimedia/SingleImageWithModal.vue'\n\nconst props = usePage().props\nconst savedMessage = ref(false)\nconst newsPersonId = Number(props.user.newsPersonId)\nconst newsPersonSlug = props.user.newsPersonSlug\n\nconst socialMedia = reactive({\n  profile_is_public: null, // Default value until fetched from server\n})\n\nlet roles = reactive([])\n\n// Use reactive for the image object\nlet image = ref()\n\n// Initialize the form with useForm, include initial settings possibly coming from props\nconst form = useForm({\n  biography: '',\n  contact_info: '',\n  other_details: '',\n  social_media: {\n    facebook: '',\n    twitter: '',\n    instagram: '',\n    linkedin: '',\n    snapchat: '',\n    discord: '',\n    substack: '',\n  },\n})\n\nconst fetchNewsPersonSettings = async () => {\n  try {\n    console.log(`Fetching settings for News Person ID: ${newsPersonId}`) // Debug log\n    const response = await axios.get(`/api/news/news-person-fetch-settings/${newsPersonSlug}`)\n    const data = response.data\n    image = data.image\n    roles.splice(0, roles.length, ...data.roles || [])\n    form.biography = data.biography\n    form.contact_info = data.contact_info\n    form.other_details = data.other_details\n    form.social_media.facebook = data.social_media.facebook\n    form.social_media.twitter = data.social_media.twitter\n    form.social_media.instagram = data.social_media.instagram\n    form.social_media.linkedin = data.social_media.linkedin\n    form.social_media.snapchat = data.social_media.snapchat\n    form.social_media.discord = data.social_media.discord\n    form.social_media.substack = data.social_media.substack\n    console.log('News Person Settings fetched successfully.')\n  } catch (error) {\n    console.error('Failed to fetch News Person settings:', error)\n    // Handle loading state or display error message in UI as needed\n  }\n}\n\n// Fetch settings immediately when the component is created/mounted\nonMounted(fetchNewsPersonSettings)\n\nconst updateNewsPersonSettings = () => {\n  form.patch(route('newsPerson.update', newsPersonSlug), {\n    onSuccess: (response) => {\n      console.log('Settings updated successfully!', response.message)\n      savedMessage.value = true // Update local data to show message\n      setTimeout(() => {\n        savedMessage.value = false  // Optionally clear the message after a few seconds\n      }, 3000)\n    },\n    onFinish: () => {\n      // form.reset('settings')  // Reset the settings field after successful update\n      // console.log('Form has been reset.')\n    },\n    onError: (errors) => console.error(\"Update errors:\", errors),\n    preserveScroll: true,\n    errorBag: 'updateNewsPersonSettings'\n  })\n}\n\n// Watch for changes to the image object and log changes\nwatch(() => image, (newImage) => {\n  console.log('Image updated:', newImage)\n}, { deep: true })\n\n// Function to handle image updates\nconst updateImage = (newImage) => {\n  console.log('Image uploaded successfully:', newImage)\n  Object.assign(image, newImage)  // Use Object.assign to ensure reactivity\n}\n\nconst removeImage = async () => {\n  try {\n    await axios.post('/api/remove-image', {\n      modelId: newsPersonId,\n      modelType: 'newsPerson',\n      imageId: image.id,\n    })\n    image = null\n    notificationStore.setToastNotification('Image removed.', 'info')\n  } catch (error) {\n    console.error('Error removing image:', error)\n  }\n}\n\n// watch(() => image, (newValue) => {\n//   image = newValue;\n// }, { immediate: true });\n\n// Collapsible sections state\nconst sections = reactive({\n  profileImage: false,\n  biography: false,\n  contactInfo: false,\n  otherDetails: false,\n  socialMedia: false,\n})\n\nconst toggleSection = (section) => {\n  const currentState = sections[section]\n  Object.keys(sections).forEach(key => {\n    sections[key] = false\n  })\n  sections[section] = !currentState\n}\n</script>\n\n<style>\n.fade-enter-active, .fade-leave-active {\n  transition: opacity 0.5s;\n}\n\n.fade-enter, .fade-leave-to /* .fade-leave-active in <2.1.8 */\n{\n  opacity: 0;\n}\n\n.toggle-button {\n  background-color: #4a90e2;\n  color: white;\n  padding: 0.5rem 1rem;\n  border-radius: 0.25rem;\n  transition: background-color 0.3s ease;\n}\n\n.toggle-button:hover {\n  background-color: #357ab8;\n}\n</style>\n","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-10.use[1]!../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-10.use[2]!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./UpdateNewsPersonSettings.vue?vue&type=style&index=0&id=7cce2ed9&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./UpdateNewsPersonSettings.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./UpdateNewsPersonSettings.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./UpdateNewsPersonSettings.vue?vue&type=style&index=0&id=7cce2ed9&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./UpdatePasswordForm.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./UpdatePasswordForm.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { ref } from 'vue';\nimport { useForm } from '@inertiajs/vue3';\nimport JetActionMessage from '@/Jetstream/ActionMessage.vue';\nimport JetButton from '@/Jetstream/Button.vue';\nimport JetFormSection from '@/Jetstream/FormSection.vue';\nimport JetInput from '@/Jetstream/Input.vue';\nimport JetInputError from '@/Jetstream/InputError.vue';\nimport JetLabel from '@/Jetstream/Label.vue';\n\nconst passwordInput = ref(null);\nconst currentPasswordInput = ref(null);\n\nconst form = useForm({\n    current_password: '',\n    password: '',\n    password_confirmation: '',\n});\n\nconst updatePassword = () => {\n    form.put(route('user-password.update'), {\n        errorBag: 'updatePassword',\n        preserveScroll: true,\n        onSuccess: () => form.reset(),\n        onError: () => {\n            if (form.errors.password) {\n                form.reset('password', 'password_confirmation');\n                passwordInput.value.focus();\n            }\n\n            if (form.errors.current_password) {\n                form.reset('current_password');\n                currentPasswordInput.value.focus();\n            }\n        },\n    });\n};\n</script>\n\n<template>\n    <JetFormSection @submitted=\"updatePassword\">\n        <template #title>\n            Update Password\n        </template>\n\n        <template #description>\n            Ensure your account is using a long, random password to stay secure.\n        </template>\n\n        <template #form>\n            <div class=\"col-span-6 sm:col-span-4\">\n                <JetLabel for=\"current_password\" value=\"Current Password\" />\n                <JetInput\n                    id=\"current_password\"\n                    ref=\"currentPasswordInput\"\n                    v-model=\"form.current_password\"\n                    type=\"password\"\n                    class=\"mt-1 block w-full\"\n                    autocomplete=\"current-password\"\n                />\n                <JetInputError :message=\"form.errors.current_password\" class=\"mt-2\" />\n            </div>\n\n            <div class=\"col-span-6 sm:col-span-4\">\n                <JetLabel for=\"password\" value=\"New Password\" />\n                <JetInput\n                    id=\"password\"\n                    ref=\"passwordInput\"\n                    v-model=\"form.password\"\n                    type=\"password\"\n                    class=\"mt-1 block w-full\"\n                    autocomplete=\"new-password\"\n                />\n                <JetInputError :message=\"form.errors.password\" class=\"mt-2\" />\n            </div>\n\n            <div class=\"col-span-6 sm:col-span-4\">\n                <JetLabel for=\"password_confirmation\" value=\"Confirm Password\" />\n                <JetInput\n                    id=\"password_confirmation\"\n                    v-model=\"form.password_confirmation\"\n                    type=\"password\"\n                    class=\"mt-1 block w-full\"\n                    autocomplete=\"new-password\"\n                />\n                <JetInputError :message=\"form.errors.password_confirmation\" class=\"mt-2\" />\n            </div>\n        </template>\n\n        <template #actions>\n            <JetActionMessage :on=\"form.recentlySuccessful\" class=\"mr-3\">\n              <span class=\"text-green-500\">Saved.</span>\n            </JetActionMessage>\n\n            <JetButton :class=\"{ 'opacity-25': form.processing }\" :disabled=\"form.processing\">\n                Save\n            </JetButton>\n        </template>\n    </JetFormSection>\n</template>\n","import script from \"./UpdateProfileInformationForm.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./UpdateProfileInformationForm.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { ref } from 'vue';\nimport { router } from '@inertiajs/vue3';\nimport { Link, useForm } from '@inertiajs/vue3';\nimport JetButton from '@/Jetstream/Button.vue';\nimport JetFormSection from '@/Jetstream/FormSection.vue';\nimport JetInput from '@/Jetstream/Input.vue';\nimport JetInputError from '@/Jetstream/InputError.vue';\nimport JetLabel from '@/Jetstream/Label.vue';\nimport JetActionMessage from '@/Jetstream/ActionMessage.vue';\nimport JetSecondaryButton from '@/Jetstream/SecondaryButton.vue';\n\nconst props = defineProps({\n    user: Object,\n});\n\nconst form = useForm({\n    _method: 'PUT',\n    name: props.user.name,\n    email: props.user.email,\n    photo: null,\n});\n\nconst verificationLinkSent = ref(null);\nconst photoPreview = ref(null);\nconst photoInput = ref(null);\n\nconst updateProfileInformation = () => {\n    if (photoInput.value) {\n        form.photo = photoInput.value.files[0];\n    }\n\n    form.post(route('user-profile-information.update'), {\n        errorBag: 'updateProfileInformation',\n        preserveScroll: true,\n        onSuccess: () => clearPhotoFileInput(),\n    });\n};\n\nconst sendEmailVerification = () => {\n    verificationLinkSent.value = true;\n};\n\nconst selectNewPhoto = () => {\n    photoInput.value.click();\n};\n\nconst updatePhotoPreview = () => {\n    const photo = photoInput.value.files[0];\n\n    if (! photo) return;\n\n    const reader = new FileReader();\n\n    reader.onload = (e) => {\n        photoPreview.value = e.target.result;\n    };\n\n    reader.readAsDataURL(photo);\n};\n\nconst deletePhoto = () => {\n    router.delete(route('current-user-photo.destroy'), {\n        preserveScroll: true,\n        onSuccess: () => {\n            photoPreview.value = null;\n            clearPhotoFileInput();\n        },\n    });\n};\n\nconst clearPhotoFileInput = () => {\n    if (photoInput.value?.value) {\n        photoInput.value.value = null;\n    }\n};\n</script>\n\n<template>\n    <JetFormSection @submitted=\"updateProfileInformation\">\n        <template #title>\n            Profile Information\n        </template>\n\n        <template #description>\n            Update your account's profile information and email address.\n        </template>\n\n        <template #form>\n            <!-- Profile Photo -->\n            <div v-if=\"$page.props.jetstream.managesProfilePhotos\" class=\"col-span-6 sm:col-span-4\">\n                <!-- Profile Photo File Input -->\n                <input\n                    ref=\"photoInput\"\n                    type=\"file\"\n                    class=\"hidden\"\n                    @change=\"updatePhotoPreview\"\n                >\n\n                <JetLabel for=\"photo\" value=\"Photo\" />\n\n                <!-- Current Profile Photo -->\n                <div v-show=\"! photoPreview\" class=\"mt-2\">\n                    <img :src=\"user.profile_photo_url\" :alt=\"user.name\" class=\"rounded-full h-20 w-20 object-cover\">\n                </div>\n\n                <!-- New Profile Photo Preview -->\n                <div v-show=\"photoPreview\" class=\"mt-2\">\n                    <span\n                        class=\"block rounded-full w-20 h-20 bg-cover bg-no-repeat bg-center\"\n                        :style=\"'background-image: url(\\'' + photoPreview + '\\');'\"\n                    />\n                </div>\n\n                <JetSecondaryButton class=\"mt-2 mr-2\" type=\"button\" @click.prevent=\"selectNewPhoto\">\n                    Select A New Photo\n                </JetSecondaryButton>\n\n                <JetSecondaryButton\n                    v-if=\"user.profile_photo_path\"\n                    type=\"button\"\n                    class=\"mt-2\"\n                    @click.prevent=\"deletePhoto\"\n                >\n                    Remove Photo\n                </JetSecondaryButton>\n\n                <JetInputError :message=\"form.errors.photo\" class=\"mt-2\" />\n            </div>\n\n            <!-- Name -->\n            <div class=\"col-span-6 sm:col-span-4\">\n                <JetLabel for=\"name\" value=\"Name\" />\n                <JetInput\n                    id=\"name\"\n                    v-model=\"form.name\"\n                    type=\"text\"\n                    class=\"mt-1 block w-full\"\n                    autocomplete=\"name\"\n                />\n                <JetInputError :message=\"form.errors.name\" class=\"mt-2\" />\n            </div>\n\n            <!-- Email -->\n            <div class=\"col-span-6 sm:col-span-4\">\n                <JetLabel for=\"email\" value=\"Email\" />\n                <JetInput\n                    id=\"email\"\n                    v-model=\"form.email\"\n                    type=\"email\"\n                    class=\"mt-1 block w-full\"\n                />\n                <JetInputError :message=\"form.errors.email\" class=\"mt-2\" />\n\n                <div v-if=\"$page.props.jetstream.hasEmailVerification && user.email_verified_at === null\">\n                    <p class=\"text-sm mt-2\">\n                        Your email address is unverified.\n\n                        <Link\n                            :href=\"route('verification.send')\"\n                            method=\"post\"\n                            as=\"button\"\n                            class=\"underline text-gray-600 hover:text-gray-900\"\n                            @click.prevent=\"sendEmailVerification\"\n                        >\n                            Click here to re-send the verification email.\n                        </Link>\n                    </p>\n\n                    <div v-show=\"verificationLinkSent\" class=\"mt-2 font-medium text-sm text-green-600\">\n                        A new verification link has been sent to your email address.\n                    </div>\n                </div>\n            </div>\n        </template>\n\n        <template #actions>\n            <JetActionMessage :on=\"form.recentlySuccessful\" class=\"mr-3\">\n              <span class=\"text-green-500\">Saved.</span>\n            </JetActionMessage>\n\n            <JetButton :class=\"{ 'opacity-25': form.processing }\" :disabled=\"form.processing\">\n                Save\n            </JetButton>\n        </template>\n    </JetFormSection>\n</template>\n","import script from \"./Show.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Show.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <Head title=\"Settings\"/>\n  <!--    <AppLayout>-->\n  <div id=\"topDiv\" class=\"mt-10 z-10\">\n\n    <!--        <template #header>-->\n    <h2 class=\"font-semibold text-4xl text-gray-200 text-center leading-tight\">\n      Settings\n    </h2>\n    <!--        </template>-->\n    <div class=\"place-self-center flex flex-col gap-y-3\">\n      <div class=\"text-black p-5 mb-10\">\n\n        <div class=\"text-black\">\n          <div class=\"max-w-7xl mx-auto pb-10 sm:px-6 lg:px-8\">\n            <div v-if=\"$page.props.jetstream.canUpdateProfileInformation\">\n              <UpdateProfileInformationForm :user=\"$page.props.auth.user\"/>\n\n              <JetSectionBorder/>\n            </div>\n            <div v-if=\"$page.props.jetstream.canUpdatePassword\">\n              <UpdatePasswordForm class=\"mt-10 sm:mt-0\"/>\n\n              <JetSectionBorder/>\n            </div>\n\n            <div v-if=\"$page.props.user.isCreator\">\n              <UpdateCreatorSettings class=\"pt-10\" />\n\n              <JetSectionBorder/>\n            </div>\n\n            <div v-if=\"$page.props.user.newsPersonId\">\n              <UpdateNewsPersonSettings class=\"pt-10\" />\n\n              <JetSectionBorder/>\n            </div>\n\n\n\n            <div>\n              <UpdateContactInformationForm class=\"pt-10\"/>\n\n              <JetSectionBorder/>\n            </div>\n\n            <div v-if=\"$page.props.jetstream.canManageTwoFactorAuthentication\">\n              <TwoFactorAuthenticationForm\n                  :requires-confirmation=\"confirmsTwoFactorAuthentication\"\n                  class=\"mt-10 sm:mt-0\"\n              />\n\n              <JetSectionBorder/>\n            </div>\n\n            <LogoutOtherBrowserSessionsForm :sessions=\"sessions\" class=\"mt-10 sm:mt-0\"/>\n\n            <template v-if=\"$page.props.jetstream.hasAccountDeletionFeatures\">\n              <JetSectionBorder/>\n\n              <DeleteUserForm class=\"mt-10 sm:mt-0\"/>\n            </template>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <!--    </AppLayout>-->\n</template>\n\n<script setup>\nimport { usePageSetup } from '@/Utilities/PageSetup'\nimport { useUserStore } from \"@/Stores/UserStore\"\nimport DeleteUserForm from '@/Pages/Profile/Partials/DeleteUserForm'\nimport JetSectionBorder from '@/Jetstream/SectionBorder'\nimport LogoutOtherBrowserSessionsForm from '@/Pages/Profile/Partials/LogoutOtherBrowserSessionsForm'\nimport TwoFactorAuthenticationForm from '@/Pages/Profile/Partials/TwoFactorAuthenticationForm'\nimport UpdatePasswordForm from '@/Pages/Profile/Partials/UpdatePasswordForm'\nimport UpdateProfileInformationForm from '@/Pages/Profile/Partials/UpdateProfileInformationForm'\nimport UpdateContactInformationForm from '@/Pages/Profile/Partials/UpdateContactInformationForm'\nimport UpdateCreatorSettings from '@/Pages/Profile/Partials/UpdateCreatorSettings.vue'\nimport UpdateNewsPersonSettings from '@/Pages/Profile/Partials/UpdateNewsPersonSettings.vue'\n\nconst userStore = useUserStore()\n\nusePageSetup('/user/profile')\n\ndefineProps({\n  confirmsTwoFactorAuthentication: Boolean,\n  sessions: Array,\n});\n</script>\n\n\n"],"names":["usePageSetup","pageName","userStore","useUserStore","appSettingStore","useAppSettingStore","videoPlayerStore","useVideoPlayerStore","currentPage","showFlashMessage","pageIsHidden","isMobile","window","innerWidth","fullPage","ott","showOttButtons","makeVideoTopRight","pageReload","pageWasReloaded","location","reload","router","on","event","search","shouldScrollToTop","requestAnimationFrame","topDiv","document","getElementById","scrollIntoView","behavior","scrollTo","setPrevUrl","noLayout","watch","isSmallScreen","newValue","immediate","___CSS_LOADER_EXPORT___","push","module","id","props","__props","setImage","imageUrl","imageAlt","console","log","imageLightboxModal","showImageLightboxModal","emit","onInput","target","value","onTabPress","e","textarea","val","start","selectionStart","end","selectionEnd","substring","notificationStore","useNotificationStore","ref","__emit","FilePond","vueFilePond","FilePondPluginFileValidateType","FilePondPluginFileValidateSize","FilePondPluginImagePreview","removeExif","maxSize","fileTypes","csrfToken","querySelector","getAttribute","serverOptions","process","url","concat","modelType","modelId","method","headers","withCredentials","onload","response","jsonResponse","JSON","parse","error","Error","onerror","setGeneralServiceNotification","handleFilePondInit","handleProcessedFile","file","options","locals","close","hasActions","computed","useSlots","actions","input","onMounted","hasAttribute","focus","__expose","show","body","style","overflow","closeable","closeOnEscape","key","addEventListener","onUnmounted","removeEventListener","maxWidthClass","maxWidth","class","_createElementVNode","script","_createElementBlock","_hoisted_1","_hoisted_3","_hoisted_2","_renderSlot","_ctx","$slots","_hoisted_4","_hoisted_5","confirmingUserDeletion","passwordInput","form","useForm","password","confirmUserDeletion","setTimeout","deleteUser","route","preserveScroll","onSuccess","closeModal","onError","onFinish","reset","confirmingLogout","confirmLogout","logoutOtherBrowserSessions","confirmingPassword","reactive","processing","startConfirmingPassword","axios","get","then","data","confirmed","confirmPassword","post","nextTick","errors","enabling","confirming","disabling","qrCode","setupKey","recoveryCodes","confirmationForm","code","twoFactorEnabled","_usePage$props$auth$u","usePage","auth","user","two_factor_enabled","clearErrors","enableTwoFactorAuthentication","Promise","all","showQrCode","showSetupKey","showRecoveryCodes","requiresConfirmation","svg","secretKey","confirmTwoFactorAuthentication","errorBag","preserveState","regenerateRecoveryCodes","disableTwoFactorAuthentication","_method","address1","address2","city","province","country","postalCode","phone","countries","_asyncToGenerator","_regeneratorRuntime","mark","_callee","countryResponse","userResponse","userData","wrap","_context","prev","next","fetch","sent","ok","json","t0","message","stop","updateProfileInformation","patch","settings","profile_is_public","checkboxRef","handleCheckboxClick","blur","savedMessage","profileIsPublic","set","fetchCreatorSettings","_ref","userId","hasOwnProperty","apply","arguments","updateCreatorSettings","undefined","newsPersonId","Number","newsPersonSlug","roles","image","biography","contact_info","other_details","social_media","facebook","twitter","instagram","linkedin","snapchat","discord","substack","fetchNewsPersonSettings","splice","length","_toConsumableArray","updateNewsPersonSettings","newImage","deep","updateImage","Object","assign","sections","profileImage","contactInfo","otherDetails","socialMedia","toggleSection","section","currentState","keys","forEach","currentPasswordInput","current_password","password_confirmation","updatePassword","put","name","email","photo","verificationLinkSent","photoPreview","photoInput","files","clearPhotoFileInput","sendEmailVerification","selectNewPhoto","click","updatePhotoPreview","reader","FileReader","result","readAsDataURL","deletePhoto","_photoInput$value"],"sourceRoot":""}
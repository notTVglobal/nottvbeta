{"version":3,"file":"js/272.js","mappings":"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","sources":["webpack://nottvbeta/./resources/js/Utilities/BroadcastUtils.js","webpack://nottvbeta/./resources/js/Stores/TeamStore.js","webpack://nottvbeta/./resources/js/Utilities/PageSetup.js","webpack://nottvbeta/./resources/js/Components/Global/TextEditor/TipTapDescriptionEditor.vue?830c","webpack://nottvbeta/./resources/js/Components/Global/Uploaders/ImageUpload.vue?1430","webpack://nottvbeta/./resources/js/Components/Global/Buttons/CancelButton.vue?b7c6","webpack://nottvbeta/./resources/js/Components/Global/Buttons/CancelButton.vue","webpack://nottvbeta/./resources/js/Components/Global/Modals/Messages.vue?dfe9","webpack://nottvbeta/./resources/js/Components/Global/Modals/Messages.vue","webpack://nottvbeta/./resources/js/Components/Global/SocialMedia/SocialMediaLinksStoreUpdateForForm.vue","webpack://nottvbeta/./resources/js/Components/Global/TextEditor/TabbableTextarea.vue?4db8","webpack://nottvbeta/./resources/js/Components/Global/TextEditor/TabbableTextarea.vue","webpack://nottvbeta/./resources/js/Components/Global/TextEditor/TipTapDescriptionEditor.vue","webpack://nottvbeta/./resources/js/Components/Global/TextEditor/TipTapDescriptionEditor.vue?9c42","webpack://nottvbeta/./resources/js/Components/Global/TextEditor/TipTapDescriptionEditor.vue?852c","webpack://nottvbeta/./resources/js/Components/Global/Uploaders/ImageUpload.vue","webpack://nottvbeta/./resources/js/Components/Global/Uploaders/ImageUpload.vue?b1d4","webpack://nottvbeta/./resources/js/Components/Global/Uploaders/ImageUpload.vue?55d5","webpack://nottvbeta/./resources/js/Jetstream/ValidationErrors.vue?5fdc","webpack://nottvbeta/./resources/js/Jetstream/ValidationErrors.vue","webpack://nottvbeta/./resources/js/Components/Pages/Teams/Edit/TeamEditHeader.vue?a626","webpack://nottvbeta/./resources/js/Components/Pages/Teams/Edit/TeamEditHeader.vue","webpack://nottvbeta/./resources/js/Pages/Teams/{$id}/Edit.vue?7e3a","webpack://nottvbeta/./resources/js/Pages/Teams/{$id}/Edit.vue"],"sourcesContent":["import dayjs from 'dayjs'\nimport utc from 'dayjs-plugin-utc'\nimport timezone from 'dayjs/plugin/timezone'\n\ndayjs.extend(utc)\ndayjs.extend(timezone)\n\nexport function filterAndSortBroadcasts(broadcasts, nextBroadcastLoaded, userTimezone) {\n    const nowInUserTimezone = dayjs().tz(userTimezone);\n\n    return broadcasts\n        .filter(broadcast => {\n            // Calculate broadcastEndTime for the current broadcast\n            const broadcastEndTime = dayjs(broadcast.broadcastDate)\n                .add(broadcast.broadcastDetails.duration_minutes, 'minute')\n                .utc()\n                .tz(userTimezone);\n\n            // Filter out broadcasts that have already ended\n            const isAfterNow = nowInUserTimezone.isBefore(broadcastEndTime);\n\n            // Exclude if it matches nextBroadcastLoaded.broadcastDate && broadcastEndTime\n            const isNotLoadedBroadcast = !(\n                nextBroadcastLoaded &&\n                nextBroadcastLoaded.broadcastDate === broadcast.broadcastDate &&\n                dayjs(nextBroadcastLoaded.broadcastDate)\n                    .add(nextBroadcastLoaded.broadcastDetails?.duration_minutes || 0, 'minute')\n                    .utc()\n                    .tz(userTimezone)\n                    .isSame(broadcastEndTime)\n            );\n\n            return isAfterNow && isNotLoadedBroadcast;\n        })\n        .sort((a, b) => dayjs(a.broadcastDate).tz(userTimezone).diff(dayjs(b.broadcastDate).tz(userTimezone)))\n        .map(broadcast => ({\n            ...broadcast,\n            localDate: dayjs(broadcast.broadcastDate).tz(userTimezone).format(),\n        }));\n}\n","import { defineStore } from 'pinia'\nimport dayjs from 'dayjs'\nimport utc from 'dayjs-plugin-utc'\nimport timezone from 'dayjs/plugin/timezone'\nimport { useUserStore } from '@/Stores/UserStore'\nimport { useNotificationStore } from '@/Stores/NotificationStore'\nimport { filterAndSortBroadcasts } from '@/Utilities/BroadcastUtils'\n\ndayjs.extend(utc)\ndayjs.extend(timezone)\n\nconst initialState = () => ({\n    team: {},\n    shows: {},\n    contributors: {},\n    members: {\n        pages: {}, // Cache for member pages\n        current_page: 1,\n        last_page: 1,\n        per_page: 5,\n        total: 0,\n        data: [], // Current page data\n    },\n    managers: [],\n    creators: [],\n    teamOwner: [],\n    teamLeader: [],\n    can: {},\n    id: 0,\n    name: '',\n    description: '',\n    slug: '',\n    totalSpots: '',\n    memberSpots: '',\n    activeShow: [],\n    activeEpisode: [],\n    showModal: Boolean,\n    confirmDialog: false,\n    confirmManagerDialog: false,\n    selectedManagerName: '',\n    selectedManagerId: 0,\n    addManager: false,\n    removeManager: false,\n    deleteMemberName: '',\n    deleteMemberId: 0,\n    noteEdit: 0,\n    note: '',\n    noteKey: 0,\n    saveNoteProcessing: Boolean,\n    // on the show episode manage page\n    // turn on the go live div\n    goLiveDisplay: false,\n    openComponent: 'teamShows',\n    nextBroadcastLoaded: {\n        scheduleIndexId: null,\n        broadcastDate: null,\n        broadcastDetails: {},\n        type: '',\n        image: null,\n        category: null,\n        subCategory: null,\n        slug: null,\n        name: null,\n        description: null,\n    },\n    nextBroadcastZoomLink: '',\n})\n\nexport const useTeamStore = defineStore('teamStore', {\n    state: initialState,\n    actions: {\n        reset() {\n            // Reset the store to its original state (clear all data)\n            Object.assign(this, initialState())\n        },\n        // async fill() {\n        //     let r = await import('@/Json/team.json');\n        //     this.$state = r.default;\n        // },\n        initializeTeam(team) {\n            // const userStore = useUserStore()\n\n            // // Ensure nextBroadcast is an array and has at least one element\n            // if (Array.isArray(team.nextBroadcast) && team.nextBroadcast.length > 0) {\n            //     const firstBroadcast = team.nextBroadcast[0]\n            //\n            //     if (firstBroadcast.broadcastDetails) {\n            //\n            //\n            //         // Ensure broadcastDetails is an array and has the zoomLink object\n            //         // this.nextBroadcastLoaded.broadcastDetails = []\n            //         // if (!Array.isArray(this.nextBroadcastLoaded.broadcastDetails)) {\n            //         //     this.nextBroadcastLoaded.broadcastDetails = []\n            //         // }\n            //\n            //         // let zoomLinkObj = this.nextBroadcastLoaded.broadcastDetails.find(detail => detail.zoomLink !== undefined)\n            //         // if (!zoomLinkObj) {\n            //         //     zoomLinkObj = {zoomLink: ''}\n            //         //     this.nextBroadcastLoaded.broadcastDetails.push(zoomLinkObj)\n            //         // }\n            //\n            //         team.nextBroadcast = team.nextBroadcast.map(broadcast => ({\n            //             ...broadcast,\n            //             broadcastDate: userStore.convertUtcToUserTimezone(broadcast.broadcastDate),\n            //         }))\n            //     }\n            // } else {\n            //     // Handle the case where nextBroadcast is not an array or is empty\n            //     this.nextBroadcastLoaded = null\n            //     this.nextBroadcastZoomLink = null\n            // }\n            this.members = team.members ? team.members.data : [] // Directly set members\n            this.managers = team.managers || []\n            this.team = team || {}\n            // this.setActiveTeam(team)\n        },\n        initializeShows(shows) {\n            this.shows = shows || {}\n        },\n        initializeContributors(contributors) {\n            this.contributors = contributors || {}\n        },\n        setCan(can) {\n            this.can = can || {}\n        },\n        setActiveTeam(team) {\n            this.team.id = team.id\n            this.team.name = team.name\n            this.team.description = team.description\n            this.team.slug = team.slug\n            this.team.totalSpots = team.totalSpots\n        },\n        setActiveShow(show) {\n            this.activeShow = show\n        },\n        setActiveEpisode(episode) {\n            this.activeShow = episode\n        },\n        async fetchPaginatedTeamMembers(page = 1) {\n            // Ensure team.members is defined\n            if (!this.team.members) {\n                this.team.members = {\n                    current_page: 1,\n                    last_page: 1,\n                    per_page: 5,\n                    total: 0,\n                    data: [],\n                    links: {},\n                };\n                console.log('Initialized team.members:', this.team.members);\n            }\n\n            try {\n                // Fetch the paginated members data\n                const response = await axios.get(`/teams/${this.team.slug}/fetch-paginated-team-members?members=${page}`);\n\n                // Extract meta data and the list of members\n                const meta = response.data.meta;\n                const data = response.data.data;\n                const links = response.data.links;\n\n                // If the requested page exceeds the total pages, adjust to the last valid page\n                if (page > meta.last_page) {\n                    console.log(`Page ${page} exceeds total pages. Adjusting to page ${meta.last_page}.`);\n                    // Fetch the last valid page\n                    return await this.fetchPaginatedTeamMembers(meta.last_page);\n                }\n\n                // Update the team.members state with the paginated response\n                this.team.members.current_page = meta.current_page;\n                this.team.members.last_page = meta.last_page;\n                this.team.members.per_page = meta.per_page;\n                this.team.members.total = meta.total;\n                this.team.members.data = data; // Store the current page's data\n                this.team.members.links = links; // Store the pagination links\n\n            } catch (error) {\n                console.error('Failed to fetch team members:', error);\n            }\n        },\n        async addMember(member) {\n            // this.team.members.data.push(member)\n            this.team.memberCount++\n            // Refresh the current page of members\n            await this.fetchPaginatedTeamMembers(this.team.members.current_page) // Use the current page from the prop\n\n        },\n        async removeMember(memberId) {\n            // this.members = this.members.filter(member => member.id !== memberId)\n            // this.team.members.data = this.team.members.data.filter(member => member.id !== memberId)\n            // this.team.members.data = this.members\n            this.team.memberCount--\n            // Refresh the current page of members\n            await this.fetchPaginatedTeamMembers(this.team.members.current_page) // Use the current page from the prop\n            // Ensure the members array is updated by reassigning it\n            this.team.members = {\n                ...this.team.members,\n                data: [...this.team.members.data] // Force Vue to recognize the change\n            };\n\n        },\n        updateCreatorTeams(creatorId, teamId, remove = false) {\n            const creator = this.creators.find(c => c.id === creatorId)\n            if (creator) {\n                if (remove) {\n                    creator.teams = creator.teams.filter(team => team.id !== teamId)\n                } else {\n                    creator.teams.push({id: teamId, is_manager: false}) // Add the new team to the creator's teams\n                }\n            }\n        },\n        // getCreators() {\n        //     router.reload({ only: ['creators'] })\n        // },\n        deleteTeamMemberCancel() {\n            this.confirmDialog = false\n        },\n        confirmTeamManagerCancel() {\n            this.confirmManagerDialog = false\n        },\n        // loadTeamMembers(members){\n        //     this.members = members;\n        // }\n        // deleteTeamMember() {\n        //     router.visit(route('teams.removeTeamMember'), {\n        //         method: 'post',\n        //         data: {\n        //             user_id: this.deleteMemberId,\n        //             team_id: this.id,\n        //             team_slug: this.slug,\n        //         },\n        //     })\n        // },\n        async deleteTeamMember() {\n            const notificationStore = useNotificationStore()\n            const payload = {\n                user_id: this.deleteMemberId,\n                team_id: this.team.id,\n            }\n\n            try {\n                const response = await axios.post(route('teams.removeTeamMember'), payload)\n                if (response.status === 200) {\n                    this.removeMember(this.deleteMemberId)\n                    this.updateCreatorTeams(this.deleteMemberId, this.team.id, true) // Remove the team from the creator's teams\n                    this.confirmDialog = false\n                    notificationStore.setToastNotification(response.data.message, 'success')\n                } else {\n                    this.confirmDialog = false\n                    notificationStore.setToastNotification('Failed to remove member from the team.', 'warning')\n                }\n            } catch (error) {\n                console.error(error)\n                this.confirmDialog = false\n                notificationStore.setToastNotification('An error occurred while removing the member from the team.', 'error')\n            }\n        },\n        async addTeamManager() {\n            const notificationStore = useNotificationStore()\n            const payload = {\n                user_id: this.selectedManagerId,\n                team_id: this.team.id,\n                team_slug: this.team.slug,\n            }\n            try {\n                const response = await axios.post(route('teams.addTeamManager'), payload)\n                if (response.status === 200) {\n                    // Add any additional logic if needed, e.g., updating team data in the store\n                    this.team.managers.push(response.data.manager)\n                    this.confirmManagerDialog = false\n                    notificationStore.setToastNotification(response.data.message, 'success')\n                } else {\n                    this.confirmManagerDialog = false\n                    notificationStore.setToastNotification('Failed to add manager to the team.', 'warning')\n                }\n            } catch (error) {\n                console.error(error)\n                this.confirmManagerDialog = false\n                notificationStore.setToastNotification('An error occurred while adding the manager to the team.', 'error')\n            }\n        },\n        async removeTeamManager() {\n            const notificationStore = useNotificationStore()\n            const payload = {\n                user_id: this.selectedManagerId,\n                team_id: this.team.id,\n                team_slug: this.team.slug,\n            }\n\n            try {\n                const response = await axios.post(route('teams.removeTeamManager'), payload)\n                if (response.status === 200) {\n                    // Remove the manager from the team.managers array\n                    this.team.managers = this.team.managers.filter(manager => manager.id !== this.selectedManagerId)\n                    this.confirmManagerDialog = false\n                    notificationStore.setToastNotification(response.data.message, 'success')\n                } else {\n                    this.confirmManagerDialog = false\n                    notificationStore.setToastNotification('Failed to remove manager from the team.', 'warning')\n                }\n            } catch (error) {\n                console.error(error)\n                this.confirmManagerDialog = false\n                notificationStore.setToastNotification('An error occurred while removing the manager from the team.', 'error')\n            }\n        },\n        toggleGoLiveDisplay() {\n            this.goLiveDisplay = !this.goLiveDisplay\n        },\n        setCreators(creators) {\n            this.creators = creators\n        },\n        updatePublicMessage(html) {\n            this.team.public_message = html\n        },\n    },\n\n    getters: {\n        spotsRemaining(state) {\n            if (!state.team.memberCount) {\n                return state.team.totalSpots // Assume no members if state.members is not defined\n            } else if (state.team.memberCount) {\n                this.totalSpots = state.team.totalSpots\n                return Math.max(state.team.totalSpots - state.team.memberCount, 0)\n            }\n        },\n        membersCount(state) {\n            if (!state.team.memberCount) {\n                return 0 // Assume no members if state.members is not defined\n            } else if (state.team.memberCount) {\n                state.memberSpots = state.team.memberCount\n                return state.team.memberCount\n            }\n        },\n        membersCountDisplay(state) {\n            if (state.team.memberCount) {\n                return state.team.memberCount > 99 ? '99+' : state.team.memberCount\n            }\n        },\n        // nextBroadcast(state) {\n        //     const {team} = state\n        //     if (!team.nextBroadcast || team.nextBroadcast.length === 0) {\n        //         return null\n        //     }\n        //\n        //     const userStore = useUserStore()\n        //     const today = dayjs().tz(userStore.timezone)\n        //\n        //     return team.nextBroadcast.reduce((closest, broadcast) => {\n        //         // Check if broadcastDate is valid\n        //         const broadcastDateString = broadcast.broadcastDate\n        //         const isValidDate = broadcastDateString && !isNaN(Date.parse(broadcastDateString)) && broadcastDateString !== 'No broadcast date'\n        //\n        //         if (!isValidDate) {\n        //             return closest\n        //         }\n        //\n        //         const broadcastDate = dayjs(broadcastDateString).tz(userStore.timezone)\n        //         if (!closest || Math.abs(broadcastDate - today) < Math.abs(dayjs(closest.broadcastDate).tz(userStore.timezone) - today)) {\n        //             return broadcast\n        //         }\n        //         return closest\n        //     }, null)\n        // },\n        nextBroadcast(state) {\n            // Leverage the sortedBroadcasts array and return the first item\n            const sorted = this.sortedBroadcasts\n            return sorted.length > 0 ? sorted[0] : null\n        },\n        // nextBroadcastIsOver: (state) => {\n        //     const userStore = useUserStore()\n        //     const nowInUserTimezone = dayjs().utc().tz(userStore.timezone)\n        //\n        //     const nextBroadcast = state.nextBroadcastLoaded\n        //\n        //     if (!nextBroadcast || !nextBroadcast.broadcastDate || !nextBroadcast.broadcastDetails?.duration_minutes) {\n        //         return false // Handle cases where the necessary data is missing\n        //     }\n        //\n        //     const broadcastEndTime = dayjs(nextBroadcast.broadcastDate)\n        //         .add(nextBroadcast.broadcastDetails.duration_minutes, 'minute')\n        //         .utc()\n        //         .tz(userStore.timezone)\n        //\n        //     return nowInUserTimezone.isAfter(broadcastEndTime)\n        // },\n        nextBroadcastIsOver(state) {\n            const userStore = useUserStore()\n            const nowInUserTimezone = dayjs().tz(userStore.timezone)\n\n            const nextBroadcast = this.nextBroadcast\n\n            if (!nextBroadcast || !nextBroadcast.broadcastDate || !nextBroadcast.broadcastDetails?.duration_minutes) {\n                return false // Handle cases where the necessary data is missing\n            }\n\n            const broadcastEndTime = dayjs(nextBroadcast.broadcastDate)\n                .add(nextBroadcast.broadcastDetails.duration_minutes, 'minute')\n                .tz(userStore.timezone)\n\n            return nowInUserTimezone.isAfter(broadcastEndTime)\n        },\n        setTeamNextBroadcast(state, broadcasts) {\n            const userStore = useUserStore()\n\n            state.team.nextBroadcast = broadcasts.map(broadcast => ({\n                ...broadcast,\n                broadcastDate: userStore.convertUtcToUserTimezone(broadcast.broadcastDate),\n            }))\n        },\n        sortedBroadcasts(state) {\n            if (!state.team.nextBroadcast || state.team.nextBroadcast.length === 0) {\n                return []\n            }\n\n            const userStore = useUserStore()\n            const sortedBroadcasts = filterAndSortBroadcasts(state.team.nextBroadcast, state.nextBroadcastLoaded, userStore.timezone)\n\n            // Set the first broadcast as the nextBroadcastLoaded\n            if (sortedBroadcasts.length > 0) {\n                const firstBroadcast = sortedBroadcasts[0]\n                state.nextBroadcastLoaded = firstBroadcast\n\n                // Check if the zoomLink is available and set it\n                if (firstBroadcast.broadcastDetails && firstBroadcast.broadcastDetails.zoomLink) {\n                    state.nextBroadcastZoomLink = firstBroadcast.broadcastDetails.zoomLink\n                } else {\n                    state.nextBroadcastZoomLink = null  // Reset if no zoomLink is found\n                }\n            } else {\n                state.nextBroadcastLoaded = null\n                state.nextBroadcastZoomLink = null  // Reset if no broadcasts are found\n            }\n\n            return sortedBroadcasts\n        },\n        futureBroadcasts(state) {\n            if (!state.team.nextBroadcast || state.team.nextBroadcast.length === 0) {\n                return []\n            }\n\n            const userStore = useUserStore()\n            const sortedAndFilteredBroadcasts = filterAndSortBroadcasts(state.team.nextBroadcast, state.nextBroadcastLoaded, userStore.timezone)\n\n            // Exclude the first item in the sorted array\n            return sortedAndFilteredBroadcasts.slice(1)\n        },\n        // sortedBroadcasts(state) {\n        //     if (!state.team.nextBroadcast || state.team.nextBroadcast.length === 0) {\n        //         return []\n        //     }\n        //\n        //     const userStore = useUserStore()\n        //     const nowInUserTimezone = dayjs().tz(userStore.timezone)\n        //\n        //     return state.team.nextBroadcast\n        //         .filter(broadcast => {\n        //             // Calculate broadcastEndTime for the current broadcast\n        //             const broadcastEndTime = dayjs(broadcast.broadcastDate)\n        //                 .add(broadcast.broadcastDetails.duration_minutes, 'minute')\n        //                 .utc()\n        //                 .tz(userStore.timezone)\n        //\n        //             // Filter out broadcasts that have already ended\n        //             const isAfterNow = nowInUserTimezone.isBefore(broadcastEndTime)\n        //\n        //             // Exclude if it matches state.nextBroadcastLoaded.broadcastDate && broadcastEndTime\n        //             const isNotLoadedBroadcast = !(\n        //                 state.nextBroadcastLoaded &&\n        //                 state.nextBroadcastLoaded.broadcastDate === broadcast.broadcastDate &&\n        //                 dayjs(state.nextBroadcastLoaded.broadcastDate)\n        //                     .add(state.nextBroadcastLoaded.broadcastDetails?.duration_minutes || 0, 'minute')\n        //                     .utc()\n        //                     .tz(userStore.timezone)\n        //                     .isSame(broadcastEndTime)\n        //             )\n        //\n        //             return isAfterNow && isNotLoadedBroadcast\n        //         })\n        //         .sort((a, b) => dayjs(a.broadcastDate).tz(userStore.timezone).diff(dayjs(b.broadcastDate).tz(userStore.timezone)))\n        //         .map(broadcast => ({\n        //             ...broadcast,\n        //             localDate: dayjs(broadcast.broadcastDate).tz(userStore.timezone).format(),\n        //         }))\n        // },\n        // futureBroadcasts(state) {\n        //     const nextBroadcast = this.nextBroadcast\n        //     if (!state.team.nextBroadcast || state.team.nextBroadcast.length === 0) {\n        //         return []\n        //     }\n        //\n        //     const userStore = useUserStore()\n        //     const nowInUserTimezone = dayjs().tz(userStore.timezone)\n        //\n        //     // Apply similar logic to sortedBroadcasts\n        //     const sortedAndFilteredBroadcasts = state.team.nextBroadcast\n        //         .filter(broadcast => {\n        //             // Calculate broadcastEndTime for the current broadcast\n        //             const broadcastEndTime = dayjs(broadcast.broadcastDate)\n        //                 .add(broadcast.broadcastDetails.duration_minutes, 'minute')\n        //                 .utc()\n        //                 .tz(userStore.timezone)\n        //\n        //             // Filter out broadcasts that have already ended\n        //             const isAfterNow = nowInUserTimezone.isBefore(broadcastEndTime)\n        //\n        //             // Exclude if it matches state.nextBroadcastLoaded.broadcastDate && broadcastEndTime\n        //             const isNotLoadedBroadcast = !(\n        //                 state.nextBroadcastLoaded &&\n        //                 state.nextBroadcastLoaded.broadcastDate === broadcast.broadcastDate &&\n        //                 dayjs(state.nextBroadcastLoaded.broadcastDate)\n        //                     .add(state.nextBroadcastLoaded.broadcastDetails?.duration_minutes || 0, 'minute')\n        //                     .utc()\n        //                     .tz(userStore.timezone)\n        //                     .isSame(broadcastEndTime)\n        //             )\n        //\n        //             return isAfterNow && isNotLoadedBroadcast\n        //         })\n        //         .sort((a, b) => dayjs(a.broadcastDate).tz(userStore.timezone).diff(dayjs(b.broadcastDate).tz(userStore.timezone)))\n        //         .map(broadcast => ({\n        //             ...broadcast,\n        //             localDate: dayjs(broadcast.broadcastDate).tz(userStore.timezone).format(),\n        //         }))\n        //\n        //     // Exclude the first item in the sorted array\n        //     return sortedAndFilteredBroadcasts.slice(1)\n        // },\n    },\n})\n\n\n// Another option for declaring specific data to return:\n// let data = r.default;\n//\n// import('@/Json/team.json').then(r => {\n// this.$patch({\n//     name: data.name,\n//     spots: data.spots,\n//     members: data.members\n// });\n// });\n","import { onBeforeMount, onMounted, watch } from 'vue'\nimport { useUserStore } from \"@/Stores/UserStore\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useVideoPlayerStore } from \"@/Stores/VideoPlayerStore\"\nimport { router } from '@inertiajs/vue3'\n\nexport function usePageSetup(pageName) {\n    const userStore = useUserStore()\n    const appSettingStore = useAppSettingStore()\n    const videoPlayerStore = useVideoPlayerStore()\n\n    appSettingStore.currentPage = pageName\n    appSettingStore.showFlashMessage = true\n    appSettingStore.pageIsHidden = false\n\n// PageSetup utility\n    if (userStore.isMobile || window.innerWidth < 1024) {\n        appSettingStore.ott = 0; // Close all panels on mobile devices\n    } else if (appSettingStore.fullPage) {\n        appSettingStore.ott = 0; // Default to closed in fullPage mode\n    } else {\n        if (appSettingStore.ott === 0) {\n            appSettingStore.ott = 4\n        }\n        // appSettingStore.ott = 4; // Open OttChat by default on larger screens\n        appSettingStore.showOttButtons = true;\n    }\n\n    videoPlayerStore.makeVideoTopRight()\n\n    if (appSettingStore.pageReload) {\n        appSettingStore.pageReload = false\n        appSettingStore.pageWasReloaded = true\n        window.location.reload();\n    }\n    // Check if the URL contains query strings\n\n\n    // Only scroll into view if there are no query strings\n\n        // const topDiv = document.getElementById(\"topDiv\")\n        // if (topDiv) {\n        //     topDiv.scrollIntoView()\n        // }\n        router.on('navigate', (event) => {\n            // Ensure OTT panels do not open automatically on mobile devices\n            if (userStore.isMobile || window.innerWidth < 1024 || appSettingStore.fullPage) {\n                appSettingStore.ott = 0; // Close all panels on mobile devices\n            } else {\n                if (appSettingStore.ott === 0) {\n                    appSettingStore.ott = 4\n                }\n                // appSettingStore.ott = 0; // Default to closed on larger screens\n            }\n            const hasQueryStrings = window.location.search !== '';\n            if (!hasQueryStrings || appSettingStore.shouldScrollToTop) {\n                requestAnimationFrame(() => {\n                    const topDiv = document.getElementById(\"topDiv\");\n                    if (topDiv) {\n                        topDiv.scrollIntoView({behavior: 'auto'});\n                    } else {\n                        window.scrollTo(0, 0);\n                    }\n                });\n            }\n            appSettingStore.shouldScrollToTop = false;\n        })\n    // Only update if we're not already on this page to avoid overwriting with the current URL\n    appSettingStore.setPrevUrl()\n    appSettingStore.showOttButtons = true\n    appSettingStore.noLayout = false\n\n    // router.reload()\n\n    watch(\n        () => appSettingStore.isSmallScreen,\n        (newValue) => {\n            if (newValue) {\n                appSettingStore.ott = 0;\n            } else {\n                appSettingStore.ott = 4;\n            }\n        },\n        { immediate: true } // This option ensures the watch executes immediately with the current value\n    );\n\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".toolbar[data-v-8d561fda]{display:flex;flex-wrap:wrap;gap:8px}.icon-btn[data-v-8d561fda]{align-items:center;background-color:#4a5568;border:none;border-radius:4px;color:#fff;cursor:pointer;display:flex;height:40px;justify-content:center;padding:8px;transition:background-color .3s,transform .3s;width:40px}.icon-btn.active[data-v-8d561fda],.icon-btn[data-v-8d561fda]:hover{background-color:#2d3748}.icon-btn[data-v-8d561fda]:hover{transform:scale(1.1)}.icon-btn.disabled[data-v-8d561fda]{background-color:#a0aec0;cursor:not-allowed}.icon-btn i[data-v-8d561fda]{font-size:16px}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/Components/Global/TextEditor/TipTapDescriptionEditor.vue\"],\"names\":[],\"mappings\":\"AAsMA,0BACE,YAAa,CAEb,cAAe,CADf,OAEF,CAEA,2BAQE,kBAAmB,CAPnB,wBAAyB,CAGzB,WAAY,CACZ,iBAAkB,CAHlB,UAAY,CAIZ,cAAe,CACf,YAAa,CAIb,WAAY,CAFZ,sBAAuB,CANvB,WAAY,CASZ,6CAAiD,CAFjD,UAGF,CAMA,mEAHE,wBAMF,CAHA,iCAEE,oBACF,CAEA,oCACE,wBAAyB,CACzB,kBACF,CAEA,6BACE,cACF\",\"sourcesContent\":[\"<template>\\n  <div>\\n    <div class=\\\"toolbar mb-2\\\">\\n      <button @click.prevent=\\\"toggleBold\\\" class=\\\"icon-btn\\\" :class=\\\"{ 'active': isBoldActive }\\\">\\n        <font-awesome-icon :icon=\\\"['fas', 'bold']\\\" />\\n      </button>\\n      <button @click.prevent=\\\"toggleItalic\\\" class=\\\"icon-btn\\\" :class=\\\"{ 'active': isItalicActive }\\\">\\n        <font-awesome-icon :icon=\\\"['fas', 'italic']\\\" />\\n      </button>\\n      <button @click.prevent=\\\"toggleUnderline\\\" class=\\\"icon-btn\\\" :class=\\\"{ 'active': isUnderlineActive }\\\">\\n        <font-awesome-icon :icon=\\\"['fas', 'underline']\\\" />\\n      </button>\\n      <button @click.prevent=\\\"toggleSuperscript\\\" class=\\\"icon-btn\\\" :class=\\\"{ 'active': isSuperscriptActive }\\\">\\n        <font-awesome-icon :icon=\\\"['fas', 'superscript']\\\" />\\n      </button>\\n      <button @click.prevent=\\\"toggleSubscript\\\" class=\\\"icon-btn\\\" :class=\\\"{ 'active': isSubscriptActive }\\\">\\n        <font-awesome-icon :icon=\\\"['fas', 'subscript']\\\" />\\n      </button>\\n      <button @click.prevent=\\\"toggleBulletList\\\" class=\\\"icon-btn\\\" :class=\\\"{ 'active': isBulletListActive }\\\">\\n        <font-awesome-icon :icon=\\\"['fas', 'list-ul']\\\" />\\n      </button>\\n      <button @click.prevent=\\\"toggleOrderedList\\\" class=\\\"icon-btn\\\" :class=\\\"{ 'active': isOrderedListActive }\\\">\\n        <font-awesome-icon :icon=\\\"['fas', 'list-ol']\\\" />\\n      </button>\\n      <button @click.prevent=\\\"setLink\\\" class=\\\"icon-btn\\\" :class=\\\"{ 'active': isLinkActive }\\\">\\n        <font-awesome-icon :icon=\\\"['fas', 'link']\\\" />\\n      </button>\\n      <button @click.prevent=\\\"unsetLink\\\" class=\\\"icon-btn\\\" :class=\\\"{ 'disabled': !isLinkActive }\\\" :disabled=\\\"!isLinkActive\\\">\\n        <font-awesome-icon :icon=\\\"['fas', 'unlink']\\\" />\\n      </button>\\n\\n    </div>\\n    <div\\n        class=\\\"editor-textarea editor-container bg-gray-50 border border-gray-400 text-gray-900 text-sm w-full rounded-lg focus-within:ring-blue-500 focus-within:border-blue-500\\\"\\n        @click=\\\"focusEditor\\\">\\n      <EditorContent :editor=\\\"editor\\\"/>\\n    </div>\\n  </div>\\n</template>\\n\\n<script setup>\\nimport { useEditor, EditorContent } from '@tiptap/vue-3'\\nimport StarterKit from '@tiptap/starter-kit'\\nimport Document from '@tiptap/extension-document'\\nimport Text from '@tiptap/extension-text'\\nimport TextStyle from '@tiptap/extension-text-style'\\nimport FontFamily from '@tiptap/extension-font-family'\\nimport Color from '@tiptap/extension-color'\\nimport Typography from '@tiptap/extension-typography'\\nimport Underline from '@tiptap/extension-underline'\\nimport Subscript from '@tiptap/extension-subscript'\\nimport Superscript from '@tiptap/extension-superscript'\\nimport BulletList from '@tiptap/extension-bullet-list'\\nimport OrderedList from '@tiptap/extension-ordered-list'\\nimport Link from '@tiptap/extension-link'\\nimport { computed, onBeforeUnmount, onMounted, onUnmounted, ref } from 'vue'\\n\\nconst emits = defineEmits(['updateContent'])\\n\\nconst props = defineProps({\\n  description: String,\\n  placeholder: String,\\n  isFocused: {\\n    type: Boolean,\\n    default: true\\n  },\\n})\\n\\nconst initialContent = props.description\\n    ? props.description\\n    : (props.placeholder ? props.placeholder : '<p>Start typing the description...</p>')\\n\\nconst editor = useEditor({\\n  extensions: [\\n    StarterKit,\\n    TextStyle,\\n    FontFamily,\\n    Color,\\n    Typography,\\n    Underline,\\n    Subscript,\\n    Superscript,\\n    Link.configure({openOnClick: false}),\\n  ],\\n  content: initialContent,\\n  onUpdate: ({editor}) => {\\n    const htmlOutput = editor.getHTML()\\n    emits('updateContent', htmlOutput)\\n  },\\n})\\n\\nconst hasFocused = ref(false) // State to track if the editor has been focused\\n\\nconst focusEditor = (event) => {\\n  if (!hasFocused.value) {\\n    if (!props.description) {\\n      // Clear the editor the first time it's focused\\n      editor.value.commands.clearContent()\\n    }\\n    hasFocused.value = true\\n  }\\n  editor.value.commands.focus()\\n}\\nconst toggleBold = () => {\\n  editor.value.chain().focus().toggleBold().run()\\n}\\n\\nconst toggleItalic = () => {\\n  editor.value.chain().focus().toggleItalic().run()\\n}\\n\\nconst toggleUnderline = () => {\\n  editor.value.chain().focus().toggleUnderline().run()\\n}\\n\\nconst toggleSuperscript = () => {\\n  editor.value.chain().focus().toggleSuperscript().run()\\n}\\n\\nconst toggleSubscript = () => {\\n  editor.value.chain().focus().toggleSubscript().run()\\n}\\n\\nconst toggleBulletList = () => {\\n  editor.value.chain().focus().toggleBulletList().run()\\n}\\n\\nconst toggleOrderedList = () => {\\n  editor.value.chain().focus().toggleOrderedList().run()\\n}\\n\\n\\nconst setLink = () => {\\n  const previousUrl = editor.value.getAttributes('link').href\\n  const url = window.prompt('URL', previousUrl)\\n  if (url === null) return\\n\\n  if (url === '') {\\n    editor.value.chain().focus().extendMarkRange('link').unsetLink().run()\\n  } else {\\n    editor.value.chain().focus().extendMarkRange('link').setLink({ href: url }).run()\\n  }\\n}\\n\\nconst unsetLink = () => {\\n  if (editor.value) {\\n    editor.value.chain().focus().extendMarkRange('link').unsetLink().run()\\n  }\\n}\\n\\nconst isBoldActive = computed(() => editor.value && editor.value.isActive('bold'))\\nconst isItalicActive = computed(() => editor.value && editor.value.isActive('italic'))\\nconst isUnderlineActive = computed(() => editor.value && editor.value.isActive('underline'))\\nconst isSuperscriptActive = computed(() => editor.value && editor.value.isActive('superscript'))\\nconst isSubscriptActive = computed(() => editor.value && editor.value.isActive('subscript'))\\nconst isBulletListActive = computed(() => editor.value && editor.value.isActive('bulletList'))\\nconst isOrderedListActive = computed(() => editor.value && editor.value.isActive('orderedList'))\\nconst isLinkActive = computed(() => editor.value && editor.value.isActive('link'))\\n\\n\\n// const submitDescription = () => {\\n//   if (editor) {\\n//     const htmlOutput = editor.getHTML();\\n//     // Emit or use an API call to send `htmlOutput` to your backend\\n//     console.log(htmlOutput);\\n//     // Example: emit to parent component or handle form submission\\n//     emit('update:description', htmlOutput);\\n//   }\\n// }\\n\\nonMounted(() => {\\n  // Ensure the editor is focused when needed and adjusts height accordingly\\n  editor.value?.commands.focus()\\n  adjustHeight()\\n  const editorElement = document.querySelector('.ProseMirror')  // Adjust the selector as needed\\n\\n})\\n\\nconst adjustHeight = () => {\\n  const content = editor.value.view.dom // Access the editor's content DOM node\\n  if (content) {\\n    content.style.minHeight = 'auto' // Reset minHeight to calculate potentially smaller size\\n    content.style.minHeight = `${Math.max(content.scrollHeight, 150)}px` // Set minHeight based on content or minimum\\n  }\\n}\\n\\n// Add this as a handler for content updates\\neditor.value?.on('update', adjustHeight)\\n\\n// Ensure editor is destroyed properly on component unmount\\nonBeforeUnmount(() => {\\n  if (editor.value) {\\n    editor.value.destroy()\\n  }\\n})\\n\\n</script>\\n<style scoped>\\n.toolbar {\\n  display: flex;\\n  gap: 8px;\\n  flex-wrap: wrap;\\n}\\n\\n.icon-btn {\\n  background-color: #4a5568;\\n  color: white;\\n  padding: 8px;\\n  border: none;\\n  border-radius: 4px;\\n  cursor: pointer;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  width: 40px;\\n  height: 40px;\\n  transition: background-color 0.3s, transform 0.3s;\\n}\\n\\n.icon-btn.active {\\n  background-color: #2d3748;\\n}\\n\\n.icon-btn:hover {\\n  background-color: #2d3748;\\n  transform: scale(1.1);\\n}\\n\\n.icon-btn.disabled {\\n  background-color: #a0aec0;\\n  cursor: not-allowed;\\n}\\n\\n.icon-btn i {\\n  font-size: 16px;\\n}\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".checkbox-container[data-v-7d10230e]{align-items:center;display:flex}.checkbox[data-v-7d10230e]{margin-right:8px}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/Components/Global/Uploaders/ImageUpload.vue\"],\"names\":[],\"mappings\":\"AAkGA,qCAEE,kBAAmB,CADnB,YAEF,CAEA,2BACE,gBACF\",\"sourcesContent\":[\"<template>\\n  <div class=\\\"\\\">\\n    <div class=\\\"max-full mx-auto mt-2 mb-6 bg-gray-200 p-6 text-black\\\">\\n      <h2 class=\\\"text-xl font-semibold\\\">{{ name }}</h2>\\n      <ul class=\\\"pb-4\\\">\\n        <li>Max File Size: <span class=\\\"text-orange-400\\\">{{ maxSize }}</span></li>\\n        <li>File Types accepted: <span class=\\\"text-orange-400\\\">{{ fileTypes }}</span></li>\\n      </ul>\\n\\n      <div class=\\\"checkbox-container mb-4\\\">\\n        <input type=\\\"checkbox\\\" id=\\\"removeExif\\\" v-model=\\\"removeExif\\\" class=\\\"checkbox checkbox-md\\\">\\n        <label for=\\\"removeExif\\\" class=\\\"checkbox-label\\\">Remove EXIF data</label>\\n      </div>\\n\\n      <file-pond\\n          name=\\\"image\\\"\\n          ref=\\\"pond\\\"\\n          class-name=\\\"my-pond\\\"\\n          allow-multiple=\\\"false\\\"\\n          label-idle=\\\"Click to choose file, or drag here...\\\"\\n          :server=\\\"`/api/image-upload?modelType=${props.modelType}&modelId=${props.modelId}&removeExif=${removeExif.value}`\\\"\\n          accepted-file-types=\\\"image/jpeg, image/png\\\"\\n          @init=\\\"filepondInitialized\\\"\\n          @processfile=\\\"handleProcessedFile\\\"\\n          :max-file-size=\\\"maxSize\\\"\\n          allowRemove=\\\"false\\\"\\n          allowRevert=\\\"false\\\"\\n      />\\n    </div>\\n  </div>\\n\\n</template>\\n\\n<script setup>\\nimport vueFilePond from 'vue-filepond'\\nimport FilePondPluginFileValidateType from 'filepond-plugin-file-validate-type'\\nimport FilePondPluginFileValidateSize from 'filepond-plugin-file-validate-size'\\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview'\\nimport 'filepond/dist/filepond.min.css'\\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.min.css'\\nimport { ref } from 'vue'\\n\\nconst props = defineProps({\\n  name: String,\\n  metadataKey: String,\\n  metadataValue: String,\\n  modelType: {\\n    type: String,\\n    default: null\\n  },\\n  modelId: {\\n    type: [Number, String],\\n    default: null\\n  },\\n  maxSize: String,\\n  fileTypes: String,\\n})\\n\\n// const myFiles = ref([''])\\n\\nconst emit = defineEmits(['reloadImage', 'imageUploaded'])\\n\\nconst FilePond = vueFilePond(\\n    FilePondPluginFileValidateType,\\n    FilePondPluginFileValidateSize,\\n    FilePondPluginImagePreview,\\n)\\n\\n// Define reactive variables\\nconst removeExif = ref(false)\\nconst maxSize = ref('30MB')\\nconst fileTypes = ref(['image/png', 'image/jpeg'])\\n// const modelType = 'yourModelType'; // Replace with your actual model type\\n// const modelId = 'yourModelId'; // Replace with your actual model ID\\n\\nfunction filepondInitialized() {\\n  console.log('Filepond is ready!')\\n}\\n//\\n// function handleFilePondInit() {\\n//   console.log('FilePond has initialized')\\n// }\\n\\nfunction handleProcessedFile(error, file) {\\n  if (error) {\\n    console.log('FilePond processed file error:', error);\\n    return;\\n  }\\n  emit('reloadImage')\\n\\n  // const response = JSON.parse(file.serverId)\\n  // emit('imageUploaded', response)\\n}\\n\\n\\n</script>\\n\\n<style scoped>\\n.checkbox-container {\\n  display: flex;\\n  align-items: center; /* Align items vertically */\\n}\\n\\n.checkbox {\\n  margin-right: 8px; /* Space between the checkbox and the label */\\n}\\n</style>\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import script from \"./CancelButton.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CancelButton.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n    <button\n        @click.prevent=\"cancel\"\n        class=\"ml-2 px-4 py-2 text-white bg-orange-600 hover:bg-orange-500 rounded-lg\"\n    >Cancel\n    </button>\n  </div>\n</template>\n\n<script setup>\nimport { router } from '@inertiajs/vue3'\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useUserStore } from '@/Stores/UserStore'\n\nconst appSettingStore = useAppSettingStore()\nconst userStore = useUserStore()\n\nlet props = defineProps({\n  url: String\n})\n\nfunction cancel() {\n  if (appSettingStore.prevUrl) {\n    if (props.url) {\n      router.visit(props.url)\n    } else {\n      router.visit(appSettingStore.prevUrl)\n    }\n  } else {\n    if (props.url) {\n      router.visit(props.url)\n    } else {\n      // Fallback if prevUrl is not available\n      let prevUrl = userStore.isCreator ? '/dashboard' : '/';\n      router.visit(prevUrl);\n    }\n  }\n}\n</script>\n","import script from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"mx-4 my-4\">\n    <div class=\"alert alert-info mt-4\"\n         v-if=\"props.flash.message\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" class=\"stroke-current shrink-0 w-6 h-6\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n      </svg>\n      <span>{{ props.flash.message }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-success mt-4 mx-3\"\n         v-if=\"props.flash.success\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.success }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-warning mt-4 mx-3\"\n         v-if=\"props.flash.warning\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"/>\n      </svg>\n      <span>{{ props.flash.warning }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-error mt-4 mx-3\"\n         v-if=\"props.flash.error\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.error }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n  </div>\n\n</template>\n\n<script setup>\nimport { router } from '@inertiajs/vue3'\nimport { computed } from \"vue\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\n\nconst appSettingStore = useAppSettingStore()\n\nappSettingStore.showFlashMessage = true\n\nlet props = defineProps({\n  flash: Object,\n\n})\n\nconst messageType = computed(() => ({\n  'text-green-700 bg-green-100 dark:bg-green-200 dark:text-green-800': props.flash.success,\n  'text-blue-700 bg-blue-100 dark:bg-blue-200 dark:text-blue-800': props.flash.message,\n  'text-orange-700 bg-orange-100 dark:bg-orange-200 dark:text-orange-800': props.flash.warning,\n  'text-red-700 bg-red-100 dark:bg-red-200 dark:text-red-800': props.flash.error,\n}))\n\nconst clearFlashMessage = async () => {\n  await router.post(route('flash.clear'));\n  router.reload();\n};\n</script>\n","import script from \"./SocialMediaLinksStoreUpdateForForm.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./SocialMediaLinksStoreUpdateForForm.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./TabbableTextarea.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TabbableTextarea.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n<!--    <textarea-->\n<!--        @keydown.tab.prevent=\"onTabPress\"-->\n<!--        @keyup=\"emit('update:modelValue', $event.target.value)\"-->\n<!--        v-text=\"modelValue\"-->\n<!--        :placeholder=\"placeholder\" />-->\n  <textarea\n      @keydown.tab.prevent=\"onTabPress\"\n      @input=\"onInput\"\n      :value=\"modelValue\"\n      :placeholder=\"placeholder\"\n      class=\"textarea textarea-bordered text-black bg-white dark:bg-gray-800 dark:text-white\"\n  />\n</template>\n\n<script setup>\ndefineProps({\n  modelValue: String,\n  placeholder: String\n});\n\nconst emit = defineEmits(['update:modelValue']);\n// let emit = defineEmits(['update:modelValue']);\n\nconst onInput = (event) => {\n  emit('update:modelValue', event.target.value);\n};\n\nfunction onTabPress(e) {\n  let textarea = e.target;\n\n  // get caret position/selection\n  let val = textarea.value,\n      start = textarea.selectionStart,\n      end = textarea.selectionEnd;\n\n  // set textarea value to: text before caret + tab + text after caret\n  textarea.value = val.substring(0, start) + \"\\t\" + val.substring(end);\n\n  // put caret at right position again\n  textarea.selectionStart = textarea.selectionEnd = start + 1;\n}\n\n</script>\n","<template>\n  <div>\n    <div class=\"toolbar mb-2\">\n      <button @click.prevent=\"toggleBold\" class=\"icon-btn\" :class=\"{ 'active': isBoldActive }\">\n        <font-awesome-icon :icon=\"['fas', 'bold']\" />\n      </button>\n      <button @click.prevent=\"toggleItalic\" class=\"icon-btn\" :class=\"{ 'active': isItalicActive }\">\n        <font-awesome-icon :icon=\"['fas', 'italic']\" />\n      </button>\n      <button @click.prevent=\"toggleUnderline\" class=\"icon-btn\" :class=\"{ 'active': isUnderlineActive }\">\n        <font-awesome-icon :icon=\"['fas', 'underline']\" />\n      </button>\n      <button @click.prevent=\"toggleSuperscript\" class=\"icon-btn\" :class=\"{ 'active': isSuperscriptActive }\">\n        <font-awesome-icon :icon=\"['fas', 'superscript']\" />\n      </button>\n      <button @click.prevent=\"toggleSubscript\" class=\"icon-btn\" :class=\"{ 'active': isSubscriptActive }\">\n        <font-awesome-icon :icon=\"['fas', 'subscript']\" />\n      </button>\n      <button @click.prevent=\"toggleBulletList\" class=\"icon-btn\" :class=\"{ 'active': isBulletListActive }\">\n        <font-awesome-icon :icon=\"['fas', 'list-ul']\" />\n      </button>\n      <button @click.prevent=\"toggleOrderedList\" class=\"icon-btn\" :class=\"{ 'active': isOrderedListActive }\">\n        <font-awesome-icon :icon=\"['fas', 'list-ol']\" />\n      </button>\n      <button @click.prevent=\"setLink\" class=\"icon-btn\" :class=\"{ 'active': isLinkActive }\">\n        <font-awesome-icon :icon=\"['fas', 'link']\" />\n      </button>\n      <button @click.prevent=\"unsetLink\" class=\"icon-btn\" :class=\"{ 'disabled': !isLinkActive }\" :disabled=\"!isLinkActive\">\n        <font-awesome-icon :icon=\"['fas', 'unlink']\" />\n      </button>\n\n    </div>\n    <div\n        class=\"editor-textarea editor-container bg-gray-50 border border-gray-400 text-gray-900 text-sm w-full rounded-lg focus-within:ring-blue-500 focus-within:border-blue-500\"\n        @click=\"focusEditor\">\n      <EditorContent :editor=\"editor\"/>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { useEditor, EditorContent } from '@tiptap/vue-3'\nimport StarterKit from '@tiptap/starter-kit'\nimport Document from '@tiptap/extension-document'\nimport Text from '@tiptap/extension-text'\nimport TextStyle from '@tiptap/extension-text-style'\nimport FontFamily from '@tiptap/extension-font-family'\nimport Color from '@tiptap/extension-color'\nimport Typography from '@tiptap/extension-typography'\nimport Underline from '@tiptap/extension-underline'\nimport Subscript from '@tiptap/extension-subscript'\nimport Superscript from '@tiptap/extension-superscript'\nimport BulletList from '@tiptap/extension-bullet-list'\nimport OrderedList from '@tiptap/extension-ordered-list'\nimport Link from '@tiptap/extension-link'\nimport { computed, onBeforeUnmount, onMounted, onUnmounted, ref } from 'vue'\n\nconst emits = defineEmits(['updateContent'])\n\nconst props = defineProps({\n  description: String,\n  placeholder: String,\n  isFocused: {\n    type: Boolean,\n    default: true\n  },\n})\n\nconst initialContent = props.description\n    ? props.description\n    : (props.placeholder ? props.placeholder : '<p>Start typing the description...</p>')\n\nconst editor = useEditor({\n  extensions: [\n    StarterKit,\n    TextStyle,\n    FontFamily,\n    Color,\n    Typography,\n    Underline,\n    Subscript,\n    Superscript,\n    Link.configure({openOnClick: false}),\n  ],\n  content: initialContent,\n  onUpdate: ({editor}) => {\n    const htmlOutput = editor.getHTML()\n    emits('updateContent', htmlOutput)\n  },\n})\n\nconst hasFocused = ref(false) // State to track if the editor has been focused\n\nconst focusEditor = (event) => {\n  if (!hasFocused.value) {\n    if (!props.description) {\n      // Clear the editor the first time it's focused\n      editor.value.commands.clearContent()\n    }\n    hasFocused.value = true\n  }\n  editor.value.commands.focus()\n}\nconst toggleBold = () => {\n  editor.value.chain().focus().toggleBold().run()\n}\n\nconst toggleItalic = () => {\n  editor.value.chain().focus().toggleItalic().run()\n}\n\nconst toggleUnderline = () => {\n  editor.value.chain().focus().toggleUnderline().run()\n}\n\nconst toggleSuperscript = () => {\n  editor.value.chain().focus().toggleSuperscript().run()\n}\n\nconst toggleSubscript = () => {\n  editor.value.chain().focus().toggleSubscript().run()\n}\n\nconst toggleBulletList = () => {\n  editor.value.chain().focus().toggleBulletList().run()\n}\n\nconst toggleOrderedList = () => {\n  editor.value.chain().focus().toggleOrderedList().run()\n}\n\n\nconst setLink = () => {\n  const previousUrl = editor.value.getAttributes('link').href\n  const url = window.prompt('URL', previousUrl)\n  if (url === null) return\n\n  if (url === '') {\n    editor.value.chain().focus().extendMarkRange('link').unsetLink().run()\n  } else {\n    editor.value.chain().focus().extendMarkRange('link').setLink({ href: url }).run()\n  }\n}\n\nconst unsetLink = () => {\n  if (editor.value) {\n    editor.value.chain().focus().extendMarkRange('link').unsetLink().run()\n  }\n}\n\nconst isBoldActive = computed(() => editor.value && editor.value.isActive('bold'))\nconst isItalicActive = computed(() => editor.value && editor.value.isActive('italic'))\nconst isUnderlineActive = computed(() => editor.value && editor.value.isActive('underline'))\nconst isSuperscriptActive = computed(() => editor.value && editor.value.isActive('superscript'))\nconst isSubscriptActive = computed(() => editor.value && editor.value.isActive('subscript'))\nconst isBulletListActive = computed(() => editor.value && editor.value.isActive('bulletList'))\nconst isOrderedListActive = computed(() => editor.value && editor.value.isActive('orderedList'))\nconst isLinkActive = computed(() => editor.value && editor.value.isActive('link'))\n\n\n// const submitDescription = () => {\n//   if (editor) {\n//     const htmlOutput = editor.getHTML();\n//     // Emit or use an API call to send `htmlOutput` to your backend\n//     console.log(htmlOutput);\n//     // Example: emit to parent component or handle form submission\n//     emit('update:description', htmlOutput);\n//   }\n// }\n\nonMounted(() => {\n  // Ensure the editor is focused when needed and adjusts height accordingly\n  editor.value?.commands.focus()\n  adjustHeight()\n  const editorElement = document.querySelector('.ProseMirror')  // Adjust the selector as needed\n\n})\n\nconst adjustHeight = () => {\n  const content = editor.value.view.dom // Access the editor's content DOM node\n  if (content) {\n    content.style.minHeight = 'auto' // Reset minHeight to calculate potentially smaller size\n    content.style.minHeight = `${Math.max(content.scrollHeight, 150)}px` // Set minHeight based on content or minimum\n  }\n}\n\n// Add this as a handler for content updates\neditor.value?.on('update', adjustHeight)\n\n// Ensure editor is destroyed properly on component unmount\nonBeforeUnmount(() => {\n  if (editor.value) {\n    editor.value.destroy()\n  }\n})\n\n</script>\n<style scoped>\n.toolbar {\n  display: flex;\n  gap: 8px;\n  flex-wrap: wrap;\n}\n\n.icon-btn {\n  background-color: #4a5568;\n  color: white;\n  padding: 8px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 40px;\n  height: 40px;\n  transition: background-color 0.3s, transform 0.3s;\n}\n\n.icon-btn.active {\n  background-color: #2d3748;\n}\n\n.icon-btn:hover {\n  background-color: #2d3748;\n  transform: scale(1.1);\n}\n\n.icon-btn.disabled {\n  background-color: #a0aec0;\n  cursor: not-allowed;\n}\n\n.icon-btn i {\n  font-size: 16px;\n}\n</style>\n","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-10.use[1]!../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-10.use[2]!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./TipTapDescriptionEditor.vue?vue&type=style&index=0&id=8d561fda&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./TipTapDescriptionEditor.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TipTapDescriptionEditor.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./TipTapDescriptionEditor.vue?vue&type=style&index=0&id=8d561fda&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-8d561fda\"]])\n\nexport default __exports__","<template>\n  <div class=\"\">\n    <div class=\"max-full mx-auto mt-2 mb-6 bg-gray-200 p-6 text-black\">\n      <h2 class=\"text-xl font-semibold\">{{ name }}</h2>\n      <ul class=\"pb-4\">\n        <li>Max File Size: <span class=\"text-orange-400\">{{ maxSize }}</span></li>\n        <li>File Types accepted: <span class=\"text-orange-400\">{{ fileTypes }}</span></li>\n      </ul>\n\n      <div class=\"checkbox-container mb-4\">\n        <input type=\"checkbox\" id=\"removeExif\" v-model=\"removeExif\" class=\"checkbox checkbox-md\">\n        <label for=\"removeExif\" class=\"checkbox-label\">Remove EXIF data</label>\n      </div>\n\n      <file-pond\n          name=\"image\"\n          ref=\"pond\"\n          class-name=\"my-pond\"\n          allow-multiple=\"false\"\n          label-idle=\"Click to choose file, or drag here...\"\n          :server=\"`/api/image-upload?modelType=${props.modelType}&modelId=${props.modelId}&removeExif=${removeExif.value}`\"\n          accepted-file-types=\"image/jpeg, image/png\"\n          @init=\"filepondInitialized\"\n          @processfile=\"handleProcessedFile\"\n          :max-file-size=\"maxSize\"\n          allowRemove=\"false\"\n          allowRevert=\"false\"\n      />\n    </div>\n  </div>\n\n</template>\n\n<script setup>\nimport vueFilePond from 'vue-filepond'\nimport FilePondPluginFileValidateType from 'filepond-plugin-file-validate-type'\nimport FilePondPluginFileValidateSize from 'filepond-plugin-file-validate-size'\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview'\nimport 'filepond/dist/filepond.min.css'\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.min.css'\nimport { ref } from 'vue'\n\nconst props = defineProps({\n  name: String,\n  metadataKey: String,\n  metadataValue: String,\n  modelType: {\n    type: String,\n    default: null\n  },\n  modelId: {\n    type: [Number, String],\n    default: null\n  },\n  maxSize: String,\n  fileTypes: String,\n})\n\n// const myFiles = ref([''])\n\nconst emit = defineEmits(['reloadImage', 'imageUploaded'])\n\nconst FilePond = vueFilePond(\n    FilePondPluginFileValidateType,\n    FilePondPluginFileValidateSize,\n    FilePondPluginImagePreview,\n)\n\n// Define reactive variables\nconst removeExif = ref(false)\nconst maxSize = ref('30MB')\nconst fileTypes = ref(['image/png', 'image/jpeg'])\n// const modelType = 'yourModelType'; // Replace with your actual model type\n// const modelId = 'yourModelId'; // Replace with your actual model ID\n\nfunction filepondInitialized() {\n  console.log('Filepond is ready!')\n}\n//\n// function handleFilePondInit() {\n//   console.log('FilePond has initialized')\n// }\n\nfunction handleProcessedFile(error, file) {\n  if (error) {\n    console.log('FilePond processed file error:', error);\n    return;\n  }\n  emit('reloadImage')\n\n  // const response = JSON.parse(file.serverId)\n  // emit('imageUploaded', response)\n}\n\n\n</script>\n\n<style scoped>\n.checkbox-container {\n  display: flex;\n  align-items: center; /* Align items vertically */\n}\n\n.checkbox {\n  margin-right: 8px; /* Space between the checkbox and the label */\n}\n</style>","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-10.use[1]!../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-10.use[2]!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./ImageUpload.vue?vue&type=style&index=0&id=7d10230e&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./ImageUpload.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ImageUpload.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ImageUpload.vue?vue&type=style&index=0&id=7d10230e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-7d10230e\"]])\n\nexport default __exports__","import script from \"./ValidationErrors.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ValidationErrors.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { computed } from 'vue';\nimport { usePage } from '@inertiajs/vue3';\n\nconst errors = computed(() => usePage().props.errors);\nconst hasErrors = computed(() => Object.keys(errors.value).length > 0);\n</script>\n\n<template>\n    <div v-if=\"hasErrors\">\n        <div class=\"font-medium text-red-600\">\n            Whoops! Something went wrong.\n        </div>\n\n        <ul class=\"mt-3 list-disc list-inside text-sm text-red-600\">\n            <li v-for=\"(error, key) in errors\" :key=\"key\">\n                {{ error }}\n            </li>\n        </ul>\n    </div>\n</template>\n","import script from \"./TeamEditHeader.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TeamEditHeader.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <header>\n    <div class=\"flex justify-between mb-6 pt-6\">\n\n      <div>\n        <div class=\"font-bold mb-4 text-red-700\">EDIT TEAM</div>\n        <h1 class=\"text-3xl\">\n          <Link :href=\"`/teams/${team.slug}`\" class=\"text-red-700 font-bold uppercase\">{{ team.name }}</Link>\n        </h1>\n      </div>\n      <div class=\"flex flex-row\">\n        <button\n            @click.prevent=\"submit\"\n            class=\"h-fit bg-blue-600 hover:bg-blue-500 text-white rounded-lg py-2 px-4\"\n            :disabled=\"form.processing\"\n        >\n          Save\n        </button>\n        <CancelButton/>\n      </div>\n\n    </div>\n  </header>\n\n  <div class=\"mb-6\">\n    <div><span class=\"text-xs uppercase font-semibold\">Team Creator: </span>\n      <span class=\"font-bold\">{{ teamCreator.name }}</span>\n    </div>\n    <div><span class=\"text-xs uppercase font-semibold\">Team Status: </span>\n      <span class=\"font-bold\">{{ team.team_status_name }}</span>\n    </div>\n  </div>\n\n\n</template>\n\n<script setup>\nimport CancelButton from \"@/Components/Global/Buttons/CancelButton\"\n\ndefineProps({\n  team: Object,\n  teamCreator: Object,\n  form: Object,\n})\n\nconst emit = defineEmits(['submit']);\n\nconst submit = () => {\n  emit('submit');\n};\n\n</script>\n","import script from \"./Edit.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Edit.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n\n  <Head :title=\"`Edit Team: ${props.team.name}`\"/>\n\n  <div class=\"place-self-center flex flex-col gap-y-3\">\n    <div id=\"topDiv\" class=\"bg-white text-black dark:bg-gray-800 p-5 mb-10\">\n\n      <Message v-if=\"appSettingStore.showFlashMessage\" :flash=\"$page.props.flash\"/>\n\n      <TeamEditHeader :team=\"props.team\" :teamCreator=\"props.teamCreator\" :form=\"form\" @submit=\"submit\"/>\n\n\n      <div class=\"flex flex-col\">\n        <div class=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\n          <div class=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\n            <div class=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\n\n              <!--                            <TeamEditBody-->\n              <!--                                :team=\"props.team\"-->\n              <!--                                :logo=\"props.logo\"-->\n              <!--                                :images=\"props.images\"-->\n              <!--                            />-->\n\n\n              <div v-if=\"form.errors.name\" v-text=\"form.errors.name\"\n                   class=\"bg-red-600 p-2 w-full text-white font-semibold mt-1\"></div>\n              <div v-if=\"form.errors.description\" v-text=\"form.errors.description\"\n                   class=\"bg-red-600 p-2 w-full text-white font-semibold mt-1\"></div>\n              <div v-if=\"form.errors.totalSpots\" v-text=\"form.errors.totalSpots\"\n                   class=\"bg-red-600 p-2 w-full text-white font-semibold mt-1\"></div>\n\n              <!-- Begin grid 2-col -->\n              <div class=\"grid grid-cols-1 sm:grid-cols-2 space-x-6 p-6\">\n\n                <!--Left Column-->\n                <div>\n                  <div class=\"flex space-y-3\">\n                    <div class=\"mb-6\">\n                      <SingleImage :image=\"image\" :key=\"image\" :alt=\"'team logo'\" class=\"\"/>\n                      <!--                                            <img :src=\"'/storage/images/' + props.logo\" :key=\"logo\"/>-->\n                    </div>\n                  </div>\n\n                  <div>\n\n                    <label class=\"block mb-2 uppercase text-sm font-bold dark:text-gray-200\"\n                           for=\"name\"\n                    >\n                      Change Team Logo\n                    </label>\n                    <ImageUpload :image=\"image\"\n                                 :modelType=\"'team'\"\n                                 :modelId=\"`${team.id}`\"\n                                 :name=\"'Upload Team Logo'\"\n                                 :maxSize=\"'10MB'\"\n                                 :fileTypes=\"'image/jpg, image/jpeg, image/png'\"\n                                 @reloadImage=\"reloadImage\"\n                    />\n\n                  </div>\n\n                </div>\n\n                <!--Right Column-->\n                <div>\n                  <!--            Replace this with TeamLogoUpload -->\n                  <!--                                    <TeamLogoUpload-->\n                  <!--                                        :team=\"props.team\"-->\n                  <!--                                        :images=\"props.images\"-->\n                  <!--                                    />-->\n\n\n                  <form @submit.prevent=\"submit\">\n                    <div class=\"mb-6\">\n                    </div>\n\n                    <div class=\"mb-6\">\n                      <label class=\"block mb-2 uppercase font-bold dark:text-gray-200\"\n                             for=\"name\"\n                      >\n                        Team Name <span :class=\"form.errors.name ? 'text-red-500' : 'text-indigo-500'\">* REQUIRED</span>\n                      </label>\n\n                      <input v-model=\"form.name\"\n                             class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                             type=\"text\"\n                             name=\"name\"\n                             id=\"name\"\n                             required\n                      >\n                      <div v-if=\"form.errors.name\" v-text=\"form.errors.name\"\n                           class=\"text-xs text-red-600 mt-1\"></div>\n                    </div>\n\n                    <div class=\"mb-6\">\n                      <label\n                          class=\"block mb-2 uppercase font-bold dark:text-gray-200\"\n                          for=\"description\"\n                      >\n                        Description <span :class=\"form.errors.description ? 'text-red-500' : 'text-indigo-500'\">* REQUIRED</span>\n                      </label>\n                      <!--                      <TabbableTextarea v-model=\"form.description\"-->\n                      <!--                                        class=\"border border-gray-400 p-2 w-full rounded-lg text-black bg-white dark:bg-gray-800 dark:text-white text-black bg-white dark:bg-gray-800 dark:text-white\"-->\n                      <!--                                        name=\"description\"-->\n                      <!--                                        id=\"description\"-->\n                      <!--                                        rows=\"10\" cols=\"30\"-->\n                      <!--                                        required-->\n                      <!--                      />-->\n                      <tip-tap-description-editor @updateContent=\"handleContentUpdate\"\n                                                  :description=\"team?.description\"/>\n                      <div v-if=\"form.errors.description\" v-text=\"form.errors.description\"\n                           class=\"text-xs text-red-600 mt-1\"></div>\n                    </div>\n\n                    <!--                                        tec21: this is to become a searchable list to select a team leader -->\n                    <!--                                        <div class=\"mb-6\">-->\n                    <!--                                            <label class=\"block mb-2 uppercase font-bold text-xs text-gray-700\"-->\n                    <!--                                                   for=\"teamLeader\"-->\n                    <!--                                            >-->\n                    <!--                                                Team Leader-->\n                    <!--                                            </label>-->\n                    <!--                                            <input v-model=\"form.teamLeader\"-->\n                    <!--                                                   class=\"border border-gray-400 p-2 w-full rounded-lg\"-->\n                    <!--                                                   type=\"text\"-->\n                    <!--                                                   name=\"teamLeader\"-->\n                    <!--                                                   id=\"teamLeader\"-->\n                    <!--                                            />-->\n                    <!--                                            <div v-if=\"form.errors.teamLeader\" v-text=\"form.errors.teamLeader\"-->\n                    <!--                                                 class=\"text-xs text-red-600 mt-1\"></div>-->\n                    <!--                                        </div>-->\n\n                    <div class=\"mb-6\">\n                      <label class=\"block mb-2 uppercase font-bold dark:text-gray-200\"\n                             for=\"teamLeader\"\n                      >\n                        Team Leader <span :class=\"form.errors.teamLeader ? 'text-red-500' : 'text-indigo-500'\">* REQUIRED</span>\n                      </label>\n                      <select\n                          class=\"border border-gray-400 p-2 w-full rounded-lg block mb-2 font-semibold text-gray-800\"\n                          v-model=\"selectedTeamLeader\"\n                      >\n                        <option\n                            v-if=\"props.possibleTeamLeaders && props.possibleTeamLeaders.length > 0\"\n                            v-for=\"leader in props.possibleTeamLeaders\"\n                            :key=\"leader.id\"\n                            :value=\"leader.id\"\n                            class=\"bg-white text-black border-b dark:text-gray-50 dark:bg-gray-800 dark:border-gray-600\"\n                        >\n                          {{ leader.name }} ({{ leader.role }})\n                        </option>\n                        <option v-else disabled>\n                          There are no eligible team leaders.\n                        </option>\n\n                      </select>\n\n                      <div class=\"text-xs\">Only the team creator and team managers are listed, if their creator accounts\n                        are in good standing.\n                      </div>\n\n                      <div v-if=\"form.errors.teamLeader\" v-text=\"form.errors.teamLeader\"\n                           class=\"text-xs text-red-600 mt-1\"></div>\n\n\n                    </div>\n\n                    <div class=\"mb-6\">\n                      <label class=\"block mb-2 uppercase font-bold dark:text-gray-200\"\n                             for=\"description\"\n                      >\n                        Maximum # of Team Members <span :class=\"form.errors.totalSpots ? 'text-red-500' : 'text-indigo-500'\">* REQUIRED</span>\n                      </label>\n                      <input v-model=\"form.totalSpots\"\n                             class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                             type=\"text\"\n                             name=\"totalSpots\"\n                             id=\"totalSpots\"\n                      />\n                      <div v-if=\"form.errors.totalSpots\" v-text=\"form.errors.totalSpots\"\n                           class=\"text-xs text-red-600 mt-1\"></div>\n                    </div>\n\n                    <SocialMediaLinksStoreUpdateForForm v-model:form=\"form\"/>\n\n                    <div class=\"flex justify-end mb-6\">\n                      <JetValidationErrors class=\"mr-4\"/>\n                      <button\n                          type=\"submit\"\n                          class=\"h-fit bg-blue-600 hover:bg-blue-500 text-white rounded-lg py-2 px-4 \"\n                          :disabled=\"form.processing\"\n                      >\n                        Save\n                      </button>\n                    </div>\n                  </form>\n\n                </div>\n                <!-- End Right Column -->\n              </div>\n              <!-- End grid 2-col -->\n\n\n            </div>\n          </div>\n        </div>\n      </div>\n\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { router } from '@inertiajs/vue3'\nimport { ref, watch } from 'vue'\nimport { useForm } from '@inertiajs/vue3'\nimport { usePageSetup } from '@/Utilities/PageSetup'\nimport { useTeamStore } from '@/Stores/TeamStore'\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\nimport { useNotificationStore } from '@/Stores/NotificationStore'\nimport JetValidationErrors from '@/Jetstream/ValidationErrors'\nimport TeamEditHeader from '@/Components/Pages/Teams/Edit/TeamEditHeader'\nimport TeamEditBody from '@/Components/Pages/Teams/Edit/TeamEditBody'\nimport TeamLogoUpload from '@/Components/Global/FilePond/TeamLogoUpload'\nimport TabbableTextarea from '@/Components/Global/TextEditor/TabbableTextarea'\nimport ImageUpload from '@/Components/Global/Uploaders/ImageUpload'\nimport Message from '@/Components/Global/Modals/Messages'\nimport SingleImage from '@/Components/Global/Multimedia/SingleImage'\nimport SocialMediaLinksStoreUpdateForForm from '@/Components/Global/SocialMedia/SocialMediaLinksStoreUpdateForForm.vue'\nimport TipTapDescriptionEditor from '@/Components/Global/TextEditor/TipTapDescriptionEditor.vue'\n\nusePageSetup('teams/slug/edit')\n\nconst appSettingStore = useAppSettingStore()\nconst teamStore = useTeamStore()\nconst notificationStore = useNotificationStore()\n\nlet props = defineProps({\n  team: Object,\n  teamCreator: Object,\n  possibleTeamLeaders: Array,\n  teamLeader: Object,\n  // possibleTeamLeaders: {\n  //     type: Object,\n  //     default: () => ({ data: [] }) // Provide a default value\n  // },\n  image: Object,\n})\n\n// const selectedTeamLeader = ref(props.teamLeader ? props.teamLeader.id : null);\n// const selectedTeamLeader = ref(null);\n\n// watchEffect(() => {\n//     if (props.possibleTeamLeaders && props.possibleTeamLeaders.data && props.teamLeader) {\n//         const teamLeaderExists = props.possibleTeamLeaders.data.some(leader => leader.id === props.teamLeader.id);\n//         if (!teamLeaderExists) {\n//             props.possibleTeamLeaders.data.push(props.teamLeader);\n//         }\n//         selectedTeamLeader.value = props.teamLeader.id;\n//     }\n// });\nconst description = ref(props.team.description)\n\n\nconst handleContentUpdate = (html) => {\n  description.value = html\n  form.description = html\n}\n\nwatch(() => props.team.description, (newDescription) => {\n  description.value = newDescription\n  form.description = newDescription\n})\n\n\nlet form = useForm({\n  id: props.team.id,\n  name: props.team.name,\n  description: description.value,\n  totalSpots: props.team.totalSpots,\n  teamLeader: props.teamLeader ? props.teamLeader.id : null,\n  www_url: props.team.socialMediaLinks.www_url,\n  instagram_name: props.team.socialMediaLinks.instagram_name,\n  telegram_url: props.team.socialMediaLinks.telegram_url,\n  twitter_handle: props.team.socialMediaLinks.twitter_handle,\n})\n\nconst selectedTeamLeader = ref(props.teamLeader ? props.teamLeader.id : null)\n\n// Watch for changes in selectedTeamLeader and update the form\nwatch(selectedTeamLeader, (newValue) => {\n  form.teamLeader = newValue\n})\n\nlet reloadImage = () => {\n  router.reload({\n    only: ['image'],\n  })\n}\n\nlet submit = () => {\n  if (teamStore.membersCount > form.totalSpots) {\n    const message = `Your team has ${teamStore.membersCount} members, which exceeds the available spots (${form.totalSpots}). Please adjust the total spots or remove some members.`;\n    notificationStore.setGeneralServiceNotification('Team Capacity Alert', message);\n    return;\n  }\n  form.patch(route('teams.update', props.team.slug))\n}\n\nteamStore.setActiveTeam(props.team)\nteamStore.logoName = props.image.name\n\n</script>\n\n\n"],"names":["filterAndSortBroadcasts","broadcasts","nextBroadcastLoaded","userTimezone","nowInUserTimezone","dayjs","tz","filter","broadcast","_nextBroadcastLoaded$","broadcastEndTime","broadcastDate","add","broadcastDetails","duration_minutes","utc","isAfterNow","isBefore","isNotLoadedBroadcast","isSame","sort","a","b","diff","map","_objectSpread","localDate","format","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","timezone","initialState","team","shows","contributors","members","pages","current_page","last_page","per_page","total","data","managers","creators","teamOwner","teamLeader","can","id","description","slug","totalSpots","memberSpots","activeShow","activeEpisode","showModal","Boolean","confirmDialog","confirmManagerDialog","selectedManagerName","selectedManagerId","addManager","removeManager","deleteMemberName","deleteMemberId","noteEdit","note","noteKey","saveNoteProcessing","goLiveDisplay","openComponent","scheduleIndexId","image","category","subCategory","nextBroadcastZoomLink","useTeamStore","defineStore","state","actions","assign","this","initializeTeam","initializeShows","initializeContributors","setCan","setActiveTeam","setActiveShow","show","setActiveEpisode","episode","fetchPaginatedTeamMembers","_arguments","_this","_callee","page","response","meta","links","_context","undefined","console","log","axios","get","concat","t0","error","addMember","member","_this2","_callee2","_context2","memberCount","removeMember","memberId","_this3","_callee3","_context3","_toConsumableArray","updateCreatorTeams","creatorId","teamId","remove","creator","find","teams","is_manager","deleteTeamMemberCancel","confirmTeamManagerCancel","deleteTeamMember","_this4","_callee4","notificationStore","payload","_context4","useNotificationStore","user_id","team_id","post","route","status","setToastNotification","message","addTeamManager","_this5","_callee5","_context5","team_slug","manager","removeTeamManager","_this6","_callee6","_context6","toggleGoLiveDisplay","setCreators","updatePublicMessage","html","public_message","getters","spotsRemaining","Math","max","membersCount","membersCountDisplay","nextBroadcast","sorted","sortedBroadcasts","nextBroadcastIsOver","_nextBroadcast$broadc","userStore","useUserStore","isAfter","setTeamNextBroadcast","convertUtcToUserTimezone","firstBroadcast","zoomLink","futureBroadcasts","usePageSetup","pageName","appSettingStore","useAppSettingStore","videoPlayerStore","useVideoPlayerStore","currentPage","showFlashMessage","pageIsHidden","isMobile","window","innerWidth","fullPage","ott","showOttButtons","makeVideoTopRight","pageReload","pageWasReloaded","location","reload","router","on","event","search","shouldScrollToTop","requestAnimationFrame","topDiv","document","getElementById","scrollIntoView","behavior","scrollTo","setPrevUrl","noLayout","watch","isSmallScreen","newValue","immediate","___CSS_LOADER_EXPORT___","module","props","__props","cancel","prevUrl","url","visit","isCreator","clearFlashMessage","computed","flash","success","warning","_ref","emit","onInput","target","onTabPress","textarea","val","start","selectionStart","end","selectionEnd","substring","emits","initialContent","placeholder","editor","useEditor","extensions","StarterKit","TextStyle","FontFamily","Color","Typography","Underline","Subscript","Superscript","Link","configure","openOnClick","content","onUpdate","_ref2","htmlOutput","getHTML","hasFocused","ref","focusEditor","commands","clearContent","focus","toggleBold","chain","run","toggleItalic","toggleUnderline","toggleSuperscript","toggleSubscript","toggleBulletList","toggleOrderedList","setLink","previousUrl","getAttributes","href","prompt","extendMarkRange","unsetLink","isBoldActive","isActive","isItalicActive","isUnderlineActive","isSuperscriptActive","isSubscriptActive","isBulletListActive","isOrderedListActive","isLinkActive","onMounted","_editor$value","adjustHeight","querySelector","view","dom","style","minHeight","scrollHeight","_editor$value2","onBeforeUnmount","destroy","options","locals","__emit","FilePond","vueFilePond","FilePondPluginFileValidateType","FilePondPluginFileValidateSize","FilePondPluginImagePreview","removeExif","maxSize","fileTypes","filepondInitialized","handleProcessedFile","file","errors","usePage","hasErrors","submit","teamStore","handleContentUpdate","form","newDescription","useForm","www_url","socialMediaLinks","instagram_name","telegram_url","twitter_handle","selectedTeamLeader","reloadImage","only","setGeneralServiceNotification","patch","logoName"],"sourceRoot":""}
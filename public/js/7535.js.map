{"version":3,"file":"js/7535.js","mappings":"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","sources":["webpack:///./resources/js/Stores/TeamStore.js","webpack:///./resources/js/Stores/UploadStore.js","webpack:///./resources/js/Utilities/PageSetup.js","webpack:///./resources/js/Components/Global/TextEditor/TipTapDescriptionEditor.vue?ee0b","webpack:///./resources/js/Components/Global/Uploaders/VideoUpload.vue?37a3","webpack:///./resources/js/Components/Pages/ShowEpisodes/Elements/EpisodeVideo.vue?e457","webpack:///./resources/js/Components/Global/Buttons/CancelButton.vue?b7c6","webpack:///./resources/js/Components/Global/Buttons/CancelButton.vue","webpack:///./resources/js/Components/Global/Calendar/DateTimePickerSelect.vue?a94f","webpack:///./resources/js/Components/Global/Calendar/DateTimePickerSelect.vue","webpack:///./resources/js/Components/Global/Modals/Messages.vue?dfe9","webpack:///./resources/js/Components/Global/Modals/Messages.vue","webpack:///./resources/js/Components/Global/TextEditor/TabbableTextarea.vue?4db8","webpack:///./resources/js/Components/Global/TextEditor/TabbableTextarea.vue","webpack:///./resources/js/Components/Global/TextEditor/TipTapDescriptionEditor.vue","webpack:///./resources/js/Components/Global/TextEditor/TipTapDescriptionEditor.vue?bd8c","webpack:///./resources/js/Components/Global/TextEditor/TipTapDescriptionEditor.vue?852c","webpack:///./resources/js/Components/Global/Uploaders/ImageUpload.vue?55d5","webpack:///./resources/js/Components/Global/Uploaders/ImageUpload.vue","webpack:///./resources/js/Components/Global/Uploaders/VideoUpload.vue","webpack:///./resources/js/Components/Global/Uploaders/VideoUpload.vue?53c3","webpack:///./resources/js/Components/Global/Uploaders/VideoUpload.vue?b223","webpack:///./resources/js/Components/Pages/ShowEpisodes/Elements/EpisodeVideo.vue?cb52","webpack:///./resources/js/Components/Pages/ShowEpisodes/Elements/EpisodeVideo.vue","webpack:///./resources/js/Components/Pages/ShowEpisodes/Layout/EpisodeFooter.vue?56db","webpack:///./resources/js/Components/Pages/ShowEpisodes/Layout/EpisodeFooter.vue","webpack:///./resources/js/Jetstream/ValidationErrors.vue?5fdc","webpack:///./resources/js/Jetstream/ValidationErrors.vue","webpack:///./resources/js/Components/Pages/ShowEpisodes/Layout/EditShowEpisodeHeader.vue","webpack:///./resources/js/Pages/Shows/{$id}/Episodes/{$id}/Edit.vue?6515","webpack:///./resources/js/Pages/Shows/{$id}/Episodes/{$id}/Edit.vue"],"sourcesContent":["import {defineStore} from \"pinia\";\nimport {Inertia} from \"@inertiajs/inertia\";\n\nconst initialState = () => ({\n    id: 0,\n    name: '',\n    description: '',\n    slug: '',\n    totalSpots: '',\n    memberSpots: '',\n    teamCreator: [],\n    teamLeader: [],\n    members: [],\n    managers: [],\n    activeShow: [],\n    activeEpisode: [],\n    creators: [],\n    showModal: Boolean,\n    confirmDialog: false,\n    confirmManagerDialog: false,\n    selectedManagerName: '',\n    selectedManagerId: 0,\n    addManager: false,\n    removeManager: false,\n    deleteMemberName: '',\n    deleteMemberId: 0,\n    noteEdit: 0,\n    note: '',\n    saveNoteProcessing: Boolean,\n    // on the show episode manage page\n    // turn on the go live div\n    goLiveDisplay: false,\n    can: [],\n    openComponent: 'teamShows',\n})\n\nexport const useTeamStore = defineStore('teamStore', {\n    state: initialState,\n    actions: {\n        reset() {\n            // Reset the store to its original state (clear all data)\n            Object.assign(this, initialState());\n        },\n        // async fill() {\n        //     let r = await import('@/Json/team.json');\n        //     this.$state = r.default;\n        // },\n        setActiveTeam(team) {\n            this.id = team.id;\n            this.name = team.name;\n            this.description = team.description;\n            this.slug = team.slug;\n            this.totalSpots = team.totalSpots;\n            this.memberSpots = team.memberSpots;\n        },\n        setActiveShow(show) {\n            this.activeShow = show;\n        },\n        setActiveEpisode(episode) {\n            this.activeShow = episode;\n        },\n        // getCreators() {\n        //     Inertia.reload({ only: ['creators'] })\n        // },\n        deleteTeamMemberCancel() {\n            this.confirmDialog = false;\n        },\n        confirmTeamManagerCancel() {\n            this.confirmManagerDialog = false;\n        },\n        // loadTeamMembers(members){\n        //     this.members = members;\n        // }\n        deleteTeamMember() {\n            Inertia.visit(route('teams.removeTeamMember'), {\n                method: 'post',\n                data: {\n                    user_id: this.deleteMemberId,\n                    team_id: this.id,\n                    team_slug: this.slug\n                },\n            })\n        },\n        addTeamManager() {\n            Inertia.visit(route('teams.addTeamManager'), {\n                method: 'post',\n                data: {\n                    user_id: this.selectedManagerId,\n                    team_id: this.id,\n                    team_slug: this.slug\n                },\n            })\n            this.confirmManagerDialog = false;\n        },\n        removeTeamManager() {\n            Inertia.visit(route('teams.removeTeamManager'), {\n                method: 'post',\n                data: {\n                    user_id: this.selectedManagerId,\n                    team_id: this.id,\n                    team_slug: this.slug\n                },\n            })\n            this.confirmManagerDialog = false;\n        },\n        toggleGoLiveDisplay() {\n            this.goLiveDisplay = ! this.goLiveDisplay;\n        },\n        async fetchTeamMembers() {\n            await axios.get('/team/team-members').then().error()\n        },\n        setCreators(creators) {\n            this.creators = creators;\n        },\n    },\n\n    getters: {\n        spotsRemaining() {\n            if (this.totalSpots - this.memberSpots < 1){\n                return 0\n            }\n            return this.totalSpots - this.memberSpots;\n        },\n    }\n});\n\n\n// Another option for declaring specific data to return:\n// let data = r.default;\n//\n// import('@/Json/team.json').then(r => {\n// this.$patch({\n//     name: data.name,\n//     spots: data.spots,\n//     members: data.members\n// });\n// });\n","import { defineStore } from 'pinia'\n\nconst initialState = () => ({\n    videoId: null,\n    uploadStatus: 'idle', // Possible values: 'idle', 'uploading', 'processing', 'completed', 'error'\n})\n\nexport const useUploadStore = defineStore('uploadStore', {\n    state: initialState,\n    actions: {\n        reset() {\n            // Reset the store to its original state (clear all data)\n            Object.assign(this, initialState())\n        },\n        setVideoId(id) {\n            this.videoId = id;\n        },\n        setUploadStatus(status) {\n            this.uploadStatus = status;\n        },\n    },\n})","import { onBeforeMount, onMounted } from 'vue'\nimport { useUserStore } from \"@/Stores/UserStore\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useVideoPlayerStore } from \"@/Stores/VideoPlayerStore\"\nimport { Inertia } from '@inertiajs/inertia'\n\nexport function usePageSetup(pageName) {\n    const userStore = useUserStore()\n    const appSettingStore = useAppSettingStore()\n    const videoPlayerStore = useVideoPlayerStore()\n\n    appSettingStore.currentPage = pageName\n    appSettingStore.showFlashMessage = true\n    appSettingStore.pageIsHidden = false\n\n    if (userStore.isMobile || window.innerWidth < 1024 || appSettingStore.fullPage) {\n        appSettingStore.ott = 0;\n    } else {\n        appSettingStore.ott = 1;\n        appSettingStore.showOttButtons = true;\n    }\n\n    videoPlayerStore.makeVideoTopRight()\n\n    if (appSettingStore.pageReload) {\n        appSettingStore.pageReload = false\n        appSettingStore.pageWasReloaded = true\n        window.location.reload();\n    }\n    // Check if the URL contains query strings\n\n\n    // Only scroll into view if there are no query strings\n\n        // const topDiv = document.getElementById(\"topDiv\")\n        // if (topDiv) {\n        //     topDiv.scrollIntoView()\n        // }\n        Inertia.on('navigate', (event) => {\n            if (userStore.isMobile || window.innerWidth < 1024 || appSettingStore.fullPage) {\n                appSettingStore.ott = 0;\n            } else {\n                appSettingStore.ott = 1;\n            }\n            const hasQueryStrings = window.location.search !== '';\n            if (!hasQueryStrings || appSettingStore.shouldScrollToTop) {\n                requestAnimationFrame(() => {\n                    const topDiv = document.getElementById(\"topDiv\");\n                    if (topDiv) {\n                        topDiv.scrollIntoView({behavior: 'auto'});\n                    } else {\n                        window.scrollTo(0, 0);\n                    }\n                });\n            }\n            appSettingStore.shouldScrollToTop = false;\n        })\n    // Only update if we're not already on this page to avoid overwriting with the current URL\n    appSettingStore.setPrevUrl()\n    appSettingStore.showOttButtons = true\n    appSettingStore.noLayout = false\n\n    // Inertia.reload()\n\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".toolbar[data-v-527ae6c1]{display:flex;gap:8px}.btn[data-v-527ae6c1]{background-color:#4a5568;border:none;border-radius:4px;color:#fff;cursor:pointer;padding:8px 12px}.btn[data-v-527ae6c1]:hover{background-color:#2d3748}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/Components/Global/TextEditor/TipTapDescriptionEditor.vue\"],\"names\":[],\"mappings\":\"AAuIA,0BACE,YAAa,CACb,OACF,CAEA,sBACE,wBAAyB,CAGzB,WAAY,CACZ,iBAAkB,CAHlB,UAAY,CAIZ,cAAe,CAHf,gBAIF,CAEA,4BACE,wBACF\",\"sourcesContent\":[\"<template>\\n  <div>\\n    <div class=\\\"toolbar mb-2\\\">\\n      <button @click.prevent=\\\"toggleBold\\\" class=\\\"btn\\\">Bold</button>\\n      <button @click.prevent=\\\"toggleItalic\\\" class=\\\"btn\\\">Italic</button>\\n      <button @click.prevent=\\\"toggleUnderline\\\" class=\\\"btn\\\">Underline</button>\\n      <button @click.prevent=\\\"toggleSuperscript\\\" class=\\\"btn\\\">Superscript</button>\\n      <button @click.prevent=\\\"toggleSubscript\\\" class=\\\"btn\\\">Subscript</button>\\n    </div>\\n    <div\\n        class=\\\"editor-textarea editor-container bg-gray-50 border border-gray-400 text-gray-900 text-sm w-full rounded-lg focus-within:ring-blue-500 focus-within:border-blue-500\\\"\\n        @click=\\\"focusEditor\\\">\\n      <EditorContent :editor=\\\"editor\\\"/>\\n    </div>\\n  </div>\\n</template>\\n\\n<script setup>\\nimport { useEditor, EditorContent } from '@tiptap/vue-3'\\nimport StarterKit from '@tiptap/starter-kit'\\nimport Document from '@tiptap/extension-document'\\nimport Text from '@tiptap/extension-text'\\nimport TextStyle from '@tiptap/extension-text-style'\\nimport FontFamily from '@tiptap/extension-font-family'\\nimport Color from '@tiptap/extension-color'\\nimport Typography from '@tiptap/extension-typography'\\nimport Underline from '@tiptap/extension-underline'\\nimport Subscript from '@tiptap/extension-subscript'\\nimport Superscript from '@tiptap/extension-superscript'\\nimport Link from '@tiptap/extension-link'\\nimport { onBeforeUnmount, onMounted, onUnmounted, ref } from 'vue'\\n\\nconst emits = defineEmits(['updateContent'])\\n\\nconst props = defineProps({\\n  description: String,\\n})\\n\\nconst initialContent = props.description ? props.description : '<p>Start typing the description...</p>'\\n\\nconst editor = useEditor({\\n  autofocus: true, // Setting autofocus to true\\n  extensions: [\\n    StarterKit,\\n    Document,\\n    Text,\\n    TextStyle,\\n    FontFamily,\\n    Color,\\n    Typography,\\n    Underline,\\n    Subscript,\\n    Superscript,\\n    Link.configure({openOnClick: false}),\\n\\n  ],\\n  content: initialContent,\\n  onUpdate: ({editor}) => {\\n    const htmlOutput = editor.getHTML()\\n    emits('updateContent', htmlOutput)\\n  },\\n})\\n\\n\\nconst hasFocused = ref(false) // State to track if the editor has been focused\\n\\nconst focusEditor = (event) => {\\n  if (!hasFocused.value) {\\n    if (!props.description) {\\n      // Clear the editor the first time it's focused\\n      editor.value.commands.clearContent()\\n    }\\n    hasFocused.value = true\\n  }\\n  editor.value.commands.focus()\\n}\\nconst toggleBold = () => {\\n  editor.value.chain().focus().toggleBold().run()\\n}\\n\\nconst toggleItalic = () => {\\n  editor.value.chain().focus().toggleItalic().run()\\n}\\n\\nconst toggleUnderline = () => {\\n  editor.value.chain().focus().toggleUnderline().run()\\n}\\n\\nconst toggleSuperscript = () => {\\n  editor.value.chain().focus().toggleSuperscript().run()\\n}\\n\\nconst toggleSubscript = () => {\\n  editor.value.chain().focus().toggleSubscript().run()\\n}\\n\\n\\n// const submitDescription = () => {\\n//   if (editor) {\\n//     const htmlOutput = editor.getHTML();\\n//     // Emit or use an API call to send `htmlOutput` to your backend\\n//     console.log(htmlOutput);\\n//     // Example: emit to parent component or handle form submission\\n//     emit('update:description', htmlOutput);\\n//   }\\n// }\\n\\nonMounted(() => {\\n  // Ensure the editor is focused when needed and adjusts height accordingly\\n  editor.value?.commands.focus()\\n  adjustHeight()\\n  const editorElement = document.querySelector('.ProseMirror')  // Adjust the selector as needed\\n\\n})\\n\\nconst adjustHeight = () => {\\n  const content = editor.value.view.dom // Access the editor's content DOM node\\n  if (content) {\\n    content.style.minHeight = 'auto' // Reset minHeight to calculate potentially smaller size\\n    content.style.minHeight = `${Math.max(content.scrollHeight, 150)}px` // Set minHeight based on content or minimum\\n  }\\n}\\n\\n// Add this as a handler for content updates\\neditor.value?.on('update', adjustHeight)\\n\\n// Ensure editor is destroyed properly on component unmount\\nonBeforeUnmount(() => {\\n  if (editor.value) {\\n    editor.value.destroy()\\n  }\\n})\\n\\n</script>\\n<style scoped>\\n.toolbar {\\n  display: flex;\\n  gap: 8px;\\n}\\n\\n.btn {\\n  background-color: #4a5568;\\n  color: white;\\n  padding: 8px 12px;\\n  border: none;\\n  border-radius: 4px;\\n  cursor: pointer;\\n}\\n\\n.btn:hover {\\n  background-color: #2d3748;\\n}\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".dropzone[data-v-21826cbb]{align-items:center;background-color:#fce4bb;border:2px dashed #000;display:flex;flex-direction:column;justify-content:center;row-gap:16px;transition:all .3s ease}label[data-v-21826cbb]{padding:8px 12px;transition:all .3s ease}.active-dropzone[data-v-21826cbb],label[data-v-21826cbb]{background-color:#4bb1b1;color:#fff}.active-dropzone[data-v-21826cbb]{border-color:#fff}.active-dropzone label[data-v-21826cbb]{background-color:#fff;color:#4bb1b1}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/Components/Global/Uploaders/VideoUpload.vue\"],\"names\":[],\"mappings\":\"AA4KA,2BAIE,kBAAmB,CAGnB,wBAAyB,CADzB,sBAA0B,CAL1B,YAAa,CACb,qBAAsB,CACtB,sBAAuB,CAEvB,YAAa,CAGb,uBACF,CAEA,uBACE,gBAAiB,CAGjB,uBACF,CAEA,yDAJE,wBAAyB,CADzB,UASF,CAJA,kCAEE,iBAEF,CAEA,wCACE,qBAAsB,CACtB,aACF\",\"sourcesContent\":[\"<template>\\n  <div>\\n\\n    <progress v-show=\\\"userStore.uploadPercentage !== 0\\\" max=\\\"100\\\" :value=\\\"userStore.uploadPercentage\\\" class=\\\"w-full\\\"/>\\n    <div v-show=\\\"userStore.uploadPercentage !== 0\\\" class=\\\"w-full mb-4\\\">{{ userStore.uploadPercentageRounded }}%</div>\\n\\n    <div v-show=\\\"uploadingMessage\\\" class=\\\"mb-4 font-bold text-center\\\">Please stay on this screen until upload is\\n      complete.\\n    </div>\\n    <div v-show=\\\"uploadComplete\\\" class=\\\"mb-4 font-bold text-center\\\">Upload is complete. The video is now\\n      processing.\\n    </div>\\n    <form v-show=\\\"!isHidden\\\" id=\\\"videoUploadForm\\\" action=\\\"/videoupload\\\"\\n          class=\\\"dropzone dropzoneFile border border-black rounded w-full h-48 max-w-md px-2 py-2 mb-6\\\">\\n      <!--                            add input fields and a submit button to send data back to Laravel -->\\n      <input hidden name=\\\"movieId\\\" v-model=\\\"form.movieId\\\">\\n      <!--            <input hidden name=\\\"movieTrailerId\\\" v-model=\\\"form.movieTrailerId\\\">-->\\n      <input hidden name=\\\"showEpisodeId\\\" v-model=\\\"form.showEpisodeId\\\">\\n    </form>\\n\\n  </div>\\n</template>\\n\\n<script setup>\\nimport { Inertia } from \\\"@inertiajs/inertia\\\"\\nimport { onMounted, ref } from \\\"vue\\\"\\nimport { useForm } from \\\"@inertiajs/inertia-vue3\\\"\\nimport { Dropzone } from \\\"dropzone\\\"\\nimport { useUserStore } from \\\"@/Stores/UserStore\\\"\\nimport { useUploadStore } from \\\"@/Stores/UploadStore\\\"\\n\\nconst userStore = useUserStore()\\nconst uploadStore = useUploadStore()\\n\\nlet uploadPercentage = ref(0)\\nlet uploadingMessage = ref(false)\\nlet uploadComplete = ref(false)\\nlet isHidden = ref(false)\\n\\nconst emits = defineEmits(['upload-start', 'upload-finished']);\\n\\nconst uploadCompleteMessage = () => {\\n  uploadingMessage = false\\n  uploadComplete = true\\n}\\n\\nconst uploadStarted = () => {\\n  uploadingMessage = true\\n  emits('upload-start');\\n}\\n\\nfunction onUploadSuccess(videoId) {\\n  emits('upload-finished', videoId);\\n  uploadStore.setVideoId(videoId);\\n  uploadStore.setUploadStatus('processing');\\n}\\n\\nonMounted(() => {\\n  // Make sure the element with the ID \\\"videoUploadForm\\\" is available in the DOM.\\n  const videoUploadForm = document.getElementById('videoUploadForm');\\n\\n  if (videoUploadForm) {\\n    // Initialize Dropzone on the element.\\n\\n    // see options for Dropzone here: https://github.com/dropzone/dropzone/blob/main/src/options.js\\n    let myDropzone = new Dropzone(\\\"#videoUploadForm\\\", {\\n      url: \\\"/videoupload\\\",\\n      paramName: \\\"file\\\", // The name that will be used to transfer the file\\n      maxFilesize: '25 GB', // MB\\n      chunking: true,\\n      chunkSize: 2 * 1024 * 1024,\\n      parallelChunkUploads: false,\\n      retryChunks: true,\\n      retryChunksLimit: 10,\\n      capture: null,\\n      // can set the capture method as camera, microphone or video\\n      // for mobile devices to skip the file selection and choose the\\n      // recording device instead.\\n      acceptedFiles: 'video/*, audio/*',\\n      uploadprogress: function (file, progress, bytesSent) {\\n        userStore.uploadPercentage = progress;\\n        console.log(userStore.uploadPercentage);\\n        if (userStore.uploadPercentage !== 100) {\\n          isHidden = true;\\n        }\\n      },\\n      dictDefaultMessage: \\\"Click here or Drop video here to upload <br>(Max video file size is 25GB)\\\",\\n      forceFallback: false, // for testing, set to true.\\n      accept: function (file, done) {\\n        if (file.name === \\\"\\\") {\\n          done(\\\"Need a file.\\\");\\n        } else if (file.size > 25000000000) {\\n          console.log(file.size)\\n          done(\\\"Video file too big.\\\");\\n          alert('Video file must be smaller than 25GB');\\n        } else {\\n          done();\\n        }\\n      }\\n    });\\n\\n    myDropzone.on(\\\"addedfile\\\", file => {\\n      uploadStarted()\\n      console.log(`File added: ${file.name}`);\\n    });\\n\\n    myDropzone.on(\\\"success\\\", function(file, response) {\\n      // Assuming 'response' contains the videoId after the file is uploaded\\n      if (response.videoId) {\\n        console.log(response.videoId)\\n        const videoId = response.videoId;\\n        if (videoId) {\\n          onUploadSuccess(videoId);\\n          // onUploadSuccess(response.videoId);\\n        }\\n      }\\n    });\\n\\n    myDropzone.on(\\\"complete\\\", function (file, response) {\\n      uploadCompleteMessage()\\n      myDropzone.removeFile(file);\\n      userStore.uploadPercentage = 0;\\n      isHidden = false;\\n      Inertia.reload({\\n        only: [\\\"videos\\\"],\\n      });\\n    });\\n\\n  } else {\\n    console.error('Element with ID \\\"videoUploadForm\\\" not found in the DOM.');\\n  }\\n})\\n\\nlet props = defineProps({\\n  movieId: Number,\\n  movieTrailerId: Number,\\n  showEpisodeId: Number,\\n})\\n\\nfunction setMovieOrEpisodeId() {\\n  if (props.movieId !== null) {\\n    userStore.uploadMovieId = props.mov;\\n  } else if (props.movieTrailerId !== null) {\\n    userStore.movieTrailerId = props.movieTrailerId;\\n  } else if (props.showEpisodeId !== null) {\\n    userStore.uploadShowEpisodeId = props.showEpisodeId;\\n  }\\n}\\n\\nsetMovieOrEpisodeId()\\n\\nlet form = useForm({\\n  file: [],\\n  // movieId: userStore.uploadMovieId,\\n  movieId: props.movieId,\\n  movieTrailerId: props.movieId,\\n  showEpisodeId: props.showEpisodeId,\\n});\\n\\n// let props = defineProps({\\n//     filters: Object,\\n//     can: Object,\\n//     videos: Object,\\n//     message: String,\\n//     errors: ref(''),\\n//     isHidden: ref(false),\\n//     done: ref(),\\n// });\\n\\n</script>\\n<style scoped>\\n\\n.dropzone {\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: center;\\n  row-gap: 16px;\\n  border: 2px dashed #000000;\\n  background-color: #fce4bb;\\n  transition: 0.3s ease all;\\n}\\n\\nlabel {\\n  padding: 8px 12px;\\n  color: #fff;\\n  background-color: #4bb1b1;\\n  transition: 0.3s ease all;\\n}\\n\\n.active-dropzone {\\n  color: #fff;\\n  border-color: #fff;\\n  background-color: #4bb1b1;\\n}\\n\\n.active-dropzone label {\\n  background-color: #fff;\\n  color: #4bb1b1;\\n}\\n\\n/*6b7280*/\\n/*4bb1b1*/\\n\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".video-container[data-v-69b8d0bc]{background-color:#000;padding-top:56.25%;position:relative;width:100%}.video-container video[data-v-69b8d0bc]{height:100%;left:0;position:absolute;top:0;width:100%}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/Components/Pages/ShowEpisodes/Elements/EpisodeVideo.vue\"],\"names\":[],\"mappings\":\"AA+EA,kCACE,qBAAuB,CAEvB,kBAAmB,CACnB,iBAAkB,CAFlB,UAGF,CAEA,wCAKE,WAAY,CAFZ,MAAO,CAFP,iBAAkB,CAClB,KAAM,CAEN,UAEF\",\"sourcesContent\":[\"<template>\\n  <div>\\n    <!-- Conditional rendering for the video section -->\\n      <!-- Episode Video Label -->\\n      <div v-if=\\\"!episode.video?.id && !episode.video?.video_url\\\" class=\\\"mt-6 px-5 flex justify-center w-full\\\">\\n        <div class=\\\"bg-black text-white text-center uppercase font-bold text-xs p-5 mb-2 w-full\\\">\\n          No Video\\n        </div>\\n      </div>\\n\\n    <div v-if=\\\"episode?.video?.id && episode.video?.storage_location === 'spaces' && episode.video?.upload_status !== 'processing'\\\" class=\\\"\\\">\\n\\n      <!-- Video Player -->\\n      <video id=\\\"episodeEditPlayer\\\"\\n             controls\\n             class=\\\"w-full h-auto\\\"\\n             :src=\\\"episode.video?.cdn_endpoint + episode.video?.cloud_folder + episode?.video.folder + '/' + episode.video?.file_name\\\">\\n        Your browser does not support the video tag.\\n      </video>\\n    </div>\\n\\n\\n\\n    <!-- Processing or external storage placeholder -->\\n    <div v-if=\\\"episode.video?.storage_location === 'external' || episode.video?.upload_status === 'processing'\\\" class=\\\"flex justify-center shadow overflow-hidden border-b border-gray-200 bg-white dark:bg-black text-2xl sm:rounded-lg p-5\\\">\\n      <div v-if=\\\"episode.video?.video_url === ''\\\">NO VIDEO</div>\\n      <video v-else id=\\\"episodeEditVideoPlayer\\\" class=\\\"video-js w-full h-auto\\\" controls>\\n        <source :src=\\\"episode.video?.video_url\\\" :type=\\\"episode.video?.type\\\">\\n      </video>\\n    </div>\\n  </div>\\n\\n\\n<!--  <div>-->\\n<!--    <div-->\\n<!--        v-if=\\\"episode.video?.storage_location === 'external'\\\"-->\\n<!--        class=\\\"flex justify-center shadow overflow-hidden border-b border-gray-200 bg-white dark:bg-black text-2xl sm:rounded-lg p-5\\\">-->\\n\\n<!--      <div v-if=\\\"episode.video?.video_url === ''\\\">NO VIDEO</div>-->\\n<!--      <video id=\\\"episodeEditVideoPlayer\\\" v-if=\\\"episode.video?.video_url\\\"-->\\n<!--             class=\\\"video-js w-fit\\\" controls>-->\\n<!--        <source :src=\\\"`${episode.video?.video_url}`\\\" :type=\\\"`${episode.video?.type}`\\\">-->\\n<!--      </video>-->\\n\\n<!--      &lt;!&ndash;                    <iframe v-if=\\\"episode.video_url\\\"&ndash;&gt;-->\\n<!--      &lt;!&ndash;                            class=\\\"rumble\\\" width=\\\"w-fit\\\" height=\\\"\\\" :src=\\\"`${episode.video_url}`\\\" frameborder=\\\"0\\\" allowfullscreen>&ndash;&gt;-->\\n<!--      &lt;!&ndash;                    </iframe>&ndash;&gt;-->\\n<!--    </div>-->\\n\\n<!--    <div v-if=\\\"!episode?.video_id\\\"-->\\n<!--         class=\\\"flex justify-center shadow overflow-hidden border-b border-gray-200 bg-white dark:bg-black text-2xl sm:rounded-lg p-5 mt-6\\\">-->\\n<!--      NO VIDEO</div>-->\\n<!--    <div v-else class=\\\"flex flex-col justify-center text-center mb-6 bg-black w-full px-6 py-3\\\">-->\\n<!--      <div class=\\\"block mb-2 uppercase font-bold text-xs text-white\\\"-->\\n<!--           for=\\\"name\\\"-->\\n<!--      >-->\\n<!--        Episode Video-->\\n<!--      </div>-->\\n<!--      <div-->\\n<!--          v-if=\\\"episode.video?.upload_status === 'processing'\\\"-->\\n<!--          class=\\\"text-center place-self-center font-semibold text-xl\\\">Video processing...-->\\n<!--      </div>-->\\n\\n<!--      <video v-if=\\\"episode.video?.storage_location === 'spaces' && episode.video?.upload_status !== 'processing'\\\"-->\\n<!--             id=\\\"episodeEditPlayer\\\"-->\\n<!--             :src=\\\"episode.video?.cdn_endpoint+episode.video?.cloud_folder+episode?.video.folder+'/'+episode.video?.file_name\\\"-->\\n<!--             controls></video>-->\\n<!--    </div>-->\\n<!--  </div>-->\\n\\n</template>\\n\\n<script setup>\\ndefineProps({\\n  episode: Object,\\n})\\n</script>\\n\\n<style scoped>\\n.video-container {\\n  background-color: black; /* Black background */\\n  width: 100%; /* Full width of its parent */\\n  padding-top: 56.25%; /* Aspect ratio of 16:9 */\\n  position: relative; /* For absolute positioning of the video */\\n}\\n\\n.video-container video {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 100%; /* Video fills the width of the container */\\n  height: 100%; /* Video fills the height of the container */\\n}\\n</style>\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import script from \"./CancelButton.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CancelButton.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n    <button\n        @click.prevent=\"cancel\"\n        class=\"ml-2 px-4 py-2 text-white bg-orange-600 hover:bg-orange-500 rounded-lg\"\n    >Cancel\n    </button>\n  </div>\n</template>\n\n<script setup>\nimport { Inertia } from \"@inertiajs/inertia\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useUserStore } from '@/Stores/UserStore'\n\nconst appSettingStore = useAppSettingStore()\nconst userStore = useUserStore()\n\nlet props = defineProps({\n  url: String\n})\n\nfunction cancel() {\n  if (appSettingStore.prevUrl) {\n    if (props.url) {\n      Inertia.visit(props.url)\n    } else {\n      Inertia.visit(appSettingStore.prevUrl)\n    }\n  } else {\n    if (props.url) {\n      Inertia.visit(props.url)\n    } else {\n      // Fallback if prevUrl is not available\n      let prevUrl = userStore.isCreator ? '/dashboard' : '/';\n      Inertia.visit(prevUrl);\n    }\n  }\n}\n</script>\n","import script from \"./DateTimePickerSelect.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./DateTimePickerSelect.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n    <!--        &lt;!&ndash; Date Picker &ndash;&gt;-->\n    <!--        <v-date-picker-->\n    <!--            v-model=\"selectedDate\"-->\n    <!--            is-inline-->\n    <!--            :attributes=\"{-->\n    <!--        placeholder: 'Select a Date',-->\n    <!--      }\"-->\n    <!--        />-->\n\n    <!--        &lt;!&ndash; Time Picker &ndash;&gt;-->\n    <!--        <v-time-picker-->\n    <!--            v-model=\"selectedTime\"-->\n    <!--            :step-minutes=\"15\"-->\n    <!--            :format=\"12\"-->\n    <!--            :min-time=\"'00:00:00'\"-->\n    <!--            :max-time=\"'23:59:59'\"-->\n    <!--            :attributes=\"{-->\n    <!--        placeholder: 'Select a Time',-->\n    <!--      }\"-->\n    <!--        />-->\n\n\n    <!--        <template>-->\n    <!--            <Calendar />-->\n    <!--&lt;!&ndash;            <DatePicker v-model=\"date\" />&ndash;&gt;-->\n    <!--            <VDatePicker v-model=\"date\" mode=\"dateTime\" :popover=\"false\" hide-time-header>-->\n    <!--                <template #default=\"{ togglePopover, inputValue, inputEvents }\">-->\n    <!--                    <div-->\n    <!--                        class=\"flex rounded-lg border border-gray-300 dark:border-gray-600 overflow-hidden\"-->\n    <!--                    >-->\n    <!--                        <button-->\n    <!--                            class=\"flex justify-center items-center px-2 bg-accent-100 hover:bg-accent-200 text-accent-700 border-r border-gray-300 dark:bg-gray-700 dark:text-accent-300 dark:border-gray-600 dark:hover:bg-gray-600\"-->\n    <!--                            @click=\"() => togglePopover()\"-->\n    <!--                        >-->\n    <!--                            <IconCalendar class=\"w-5 h-5\" />-->\n    <!--                        </button>-->\n    <!--                        <input-->\n    <!--                            :value=\"inputValue\"-->\n    <!--                            v-on=\"inputEvents\"-->\n    <!--                            class=\"flex-grow px-2 py-1 bg-white dark:bg-gray-700\"-->\n    <!--                        />-->\n    <!--                    </div>-->\n    <!--                </template>-->\n    <!--            </VDatePicker>-->\n    <!--        </template>-->\n\n    <DatePicker v-model=\"date\" mode=\"dateTime\" hide-time-header>\n      <template #default=\"{ togglePopover }\">\n        <button\n            class=\"px-3 py-2 bg-blue-500 text-sm text-white font-semibold rounded-md\"\n            @click.prevent=\"togglePopover\"\n        >\n          <slot name=\"buttonName\">Select date</slot>\n        </button>\n      </template>\n    </DatePicker>\n\n  </div>\n</template>\n\n<script setup>\nimport { ref, defineProps, defineEmits, watch } from 'vue'\nimport VDatePicker from 'v-calendar'\n// import VCalendar from 'v-calendar'\nimport { Calendar, DatePicker } from 'v-calendar'\nimport 'v-calendar/style.css'\n\nconst props = defineProps({\n  // initialDate: Date,\n  // initialTime: String,\n  inputValue: String,\n  date: String,\n});\n\nconst emits = defineEmits();\n\n// let date = new Date();\n// let date = ref(new Date());\nlet date = ref(props.date);\nconst calendar = ref(null);\nconst inputValue = ref(props.inputValue || null);\n\n// Define refs to store selected date and time\n// const selectedDate = ref(props.initialDate || null);\n// const selectedTime = ref(props.initialTime || null);\n\n\n// Watch for changes in selected dateTime emit it\nwatch([date], ([newDate]) => {\n  emits('date-time-selected', {date: newDate});\n});\n</script>\n","import script from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"mx-4 my-4\">\n    <div class=\"alert alert-info mt-4\"\n         v-if=\"props.flash.message\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" class=\"stroke-current shrink-0 w-6 h-6\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n      </svg>\n      <span>{{ props.flash.message }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-success mt-4 mx-3\"\n         v-if=\"props.flash.success\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.success }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-warning mt-4 mx-3\"\n         v-if=\"props.flash.warning\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"/>\n      </svg>\n      <span>{{ props.flash.warning }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-error mt-4 mx-3\"\n         v-if=\"props.flash.error\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.error }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n  </div>\n\n</template>\n\n<script setup>\nimport { Inertia } from \"@inertiajs/inertia\"\nimport { computed } from \"vue\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\n\nconst appSettingStore = useAppSettingStore()\n\nappSettingStore.showFlashMessage = true\n\nlet props = defineProps({\n  flash: Object,\n\n})\n\nconst messageType = computed(() => ({\n  'text-green-700 bg-green-100 dark:bg-green-200 dark:text-green-800': props.flash.success,\n  'text-blue-700 bg-blue-100 dark:bg-blue-200 dark:text-blue-800': props.flash.message,\n  'text-orange-700 bg-orange-100 dark:bg-orange-200 dark:text-orange-800': props.flash.warning,\n  'text-red-700 bg-red-100 dark:bg-red-200 dark:text-red-800': props.flash.error,\n}))\n\nconst clearFlashMessage = async () => {\n  await Inertia.post(route('flash.clear'));\n  Inertia.reload();\n};\n</script>\n","import script from \"./TabbableTextarea.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TabbableTextarea.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n<!--    <textarea-->\n<!--        @keydown.tab.prevent=\"onTabPress\"-->\n<!--        @keyup=\"emit('update:modelValue', $event.target.value)\"-->\n<!--        v-text=\"modelValue\"-->\n<!--        :placeholder=\"placeholder\" />-->\n  <textarea\n      @keydown.tab.prevent=\"onTabPress\"\n      @input=\"onInput\"\n      :value=\"modelValue\"\n      :placeholder=\"placeholder\"\n      class=\"textarea textarea-bordered text-black bg-white dark:bg-gray-800 dark:text-white\"\n  />\n</template>\n\n<script setup>\ndefineProps({\n  modelValue: String,\n  placeholder: String\n});\n\nconst emit = defineEmits(['update:modelValue']);\n// let emit = defineEmits(['update:modelValue']);\n\nconst onInput = (event) => {\n  emit('update:modelValue', event.target.value);\n};\n\nfunction onTabPress(e) {\n  let textarea = e.target;\n\n  // get caret position/selection\n  let val = textarea.value,\n      start = textarea.selectionStart,\n      end = textarea.selectionEnd;\n\n  // set textarea value to: text before caret + tab + text after caret\n  textarea.value = val.substring(0, start) + \"\\t\" + val.substring(end);\n\n  // put caret at right position again\n  textarea.selectionStart = textarea.selectionEnd = start + 1;\n}\n\n</script>\n","<template>\n  <div>\n    <div class=\"toolbar mb-2\">\n      <button @click.prevent=\"toggleBold\" class=\"btn\">Bold</button>\n      <button @click.prevent=\"toggleItalic\" class=\"btn\">Italic</button>\n      <button @click.prevent=\"toggleUnderline\" class=\"btn\">Underline</button>\n      <button @click.prevent=\"toggleSuperscript\" class=\"btn\">Superscript</button>\n      <button @click.prevent=\"toggleSubscript\" class=\"btn\">Subscript</button>\n    </div>\n    <div\n        class=\"editor-textarea editor-container bg-gray-50 border border-gray-400 text-gray-900 text-sm w-full rounded-lg focus-within:ring-blue-500 focus-within:border-blue-500\"\n        @click=\"focusEditor\">\n      <EditorContent :editor=\"editor\"/>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { useEditor, EditorContent } from '@tiptap/vue-3'\nimport StarterKit from '@tiptap/starter-kit'\nimport Document from '@tiptap/extension-document'\nimport Text from '@tiptap/extension-text'\nimport TextStyle from '@tiptap/extension-text-style'\nimport FontFamily from '@tiptap/extension-font-family'\nimport Color from '@tiptap/extension-color'\nimport Typography from '@tiptap/extension-typography'\nimport Underline from '@tiptap/extension-underline'\nimport Subscript from '@tiptap/extension-subscript'\nimport Superscript from '@tiptap/extension-superscript'\nimport Link from '@tiptap/extension-link'\nimport { onBeforeUnmount, onMounted, onUnmounted, ref } from 'vue'\n\nconst emits = defineEmits(['updateContent'])\n\nconst props = defineProps({\n  description: String,\n})\n\nconst initialContent = props.description ? props.description : '<p>Start typing the description...</p>'\n\nconst editor = useEditor({\n  autofocus: true, // Setting autofocus to true\n  extensions: [\n    StarterKit,\n    Document,\n    Text,\n    TextStyle,\n    FontFamily,\n    Color,\n    Typography,\n    Underline,\n    Subscript,\n    Superscript,\n    Link.configure({openOnClick: false}),\n\n  ],\n  content: initialContent,\n  onUpdate: ({editor}) => {\n    const htmlOutput = editor.getHTML()\n    emits('updateContent', htmlOutput)\n  },\n})\n\n\nconst hasFocused = ref(false) // State to track if the editor has been focused\n\nconst focusEditor = (event) => {\n  if (!hasFocused.value) {\n    if (!props.description) {\n      // Clear the editor the first time it's focused\n      editor.value.commands.clearContent()\n    }\n    hasFocused.value = true\n  }\n  editor.value.commands.focus()\n}\nconst toggleBold = () => {\n  editor.value.chain().focus().toggleBold().run()\n}\n\nconst toggleItalic = () => {\n  editor.value.chain().focus().toggleItalic().run()\n}\n\nconst toggleUnderline = () => {\n  editor.value.chain().focus().toggleUnderline().run()\n}\n\nconst toggleSuperscript = () => {\n  editor.value.chain().focus().toggleSuperscript().run()\n}\n\nconst toggleSubscript = () => {\n  editor.value.chain().focus().toggleSubscript().run()\n}\n\n\n// const submitDescription = () => {\n//   if (editor) {\n//     const htmlOutput = editor.getHTML();\n//     // Emit or use an API call to send `htmlOutput` to your backend\n//     console.log(htmlOutput);\n//     // Example: emit to parent component or handle form submission\n//     emit('update:description', htmlOutput);\n//   }\n// }\n\nonMounted(() => {\n  // Ensure the editor is focused when needed and adjusts height accordingly\n  editor.value?.commands.focus()\n  adjustHeight()\n  const editorElement = document.querySelector('.ProseMirror')  // Adjust the selector as needed\n\n})\n\nconst adjustHeight = () => {\n  const content = editor.value.view.dom // Access the editor's content DOM node\n  if (content) {\n    content.style.minHeight = 'auto' // Reset minHeight to calculate potentially smaller size\n    content.style.minHeight = `${Math.max(content.scrollHeight, 150)}px` // Set minHeight based on content or minimum\n  }\n}\n\n// Add this as a handler for content updates\neditor.value?.on('update', adjustHeight)\n\n// Ensure editor is destroyed properly on component unmount\nonBeforeUnmount(() => {\n  if (editor.value) {\n    editor.value.destroy()\n  }\n})\n\n</script>\n<style scoped>\n.toolbar {\n  display: flex;\n  gap: 8px;\n}\n\n.btn {\n  background-color: #4a5568;\n  color: white;\n  padding: 8px 12px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.btn:hover {\n  background-color: #2d3748;\n}\n</style>\n","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-10.use[1]!../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-10.use[2]!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./TipTapDescriptionEditor.vue?vue&type=style&index=0&id=527ae6c1&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./TipTapDescriptionEditor.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TipTapDescriptionEditor.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./TipTapDescriptionEditor.vue?vue&type=style&index=0&id=527ae6c1&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-527ae6c1\"]])\n\nexport default __exports__","import script from \"./ImageUpload.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ImageUpload.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"\">\n    <div class=\"max-full mx-auto mt-2 mb-6 bg-gray-200 p-6 text-black\">\n      <h2 class=\"text-xl font-semibold\">{{ name }}</h2>\n\n      <ul class=\"pb-4\">\n        <li>Max File Size: <span class=\"text-orange-400\">{{ maxSize }}</span></li>\n        <li>File Types accepted: <span class=\"text-orange-400\">{{ fileTypes }}</span></li>\n      </ul>\n      <file-pond\n          name=\"image\"\n          ref=\"pond\"\n          label-idle=\"Click to choose file, or drag here...\"\n          @init=\"filepondInitialized\"\n          :server=\"serverOptions\"\n          :accepted-file-types=\"fileTypes\"\n          @processfile=\"handleProcessedFile\"\n          :max-file-size=\"maxSize\"\n      />\n      <!--        <file-pond-->\n      <!--            ref=\"filePond\"-->\n      <!--            :files=\"files\"-->\n      <!--            :server=\"serverOptions\"-->\n      <!--            @init=\"handleFilePondInit\"-->\n      <!--            @beforeaddfile=\"handleBeforeAddFile\"-->\n      <!--            @processfile=\"handleProcessedFile\"-->\n      <!--        />-->\n    </div>\n  </div>\n\n</template>\n\n<script setup>\nimport { useNotificationStore } from '@/Stores/NotificationStore'\nimport vueFilePond, { setOptions } from 'vue-filepond'\nimport FilePondPluginFileValidateType from \"filepond-plugin-file-validate-type\"\nimport FilePondPluginFileValidateSize from \"filepond-plugin-file-validate-size\"\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\"\nimport FilePondPluginFileMetadata from \"filepond-plugin-file-metadata\"\nimport 'filepond/dist/filepond.min.css'\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.min.css'\n\nconst notificationStore = useNotificationStore()\n\nlet props = defineProps({\n  image: Object,\n  name: String,\n  metadataKey: String,\n  metadataValue: String,\n  modelType: String,\n  modelId: String,\n  maxSize: String,\n  fileTypes: String,\n})\n\n\n// // Initialize FilePond with the File Metadata plugin\n// const filePondOptions = {\n//     allowMultiple: false,\n//     labelIdle: \"Drop files here or click to upload\",\n//     plugins: [FilePondPluginFileMetadata()],\n// };\n\n\n// Files array to store uploaded files\n// const files = ref([]);\n\nconst metadataKey = props.metadataKey\nconst metadataValue = props.metadataValue\nconst customMetadata = {\n  [metadataKey]: metadataValue\n};\n// customMetadata.value[props.metadataKey] = 'bar';\n// customMetadata.value[props.metadataKey] = props.metadataValue;\n// const customMetadata = ref({ [props.metadataKey]: props.metadataValue });\n// const customMetadata = computed(() => ({\n//     [props.metadataKey]: props.metadataValue,\n// }));\n\n// FilePond server options (you can customize this)\nconst serverOptions = {\n  process: (fieldName, file, metadata, load, error, progress, abort) => {\n    const formData = new FormData();\n    formData.append('image', file, file.name); // Attach the file\n    // Append modelType and modelId if it's part of your component\n    if (props.modelType) {\n      formData.append('modelType', props.modelType);\n    }\n    if (props.modelId) {\n      formData.append('modelId', props.modelId);\n    }\n\n    // Axios request configuration\n    const config = {\n      onUploadProgress: (event) => {\n        // Calculate and update progress\n        progress(event.lengthComputable, event.loaded, event.total);\n      },\n    };\n\n    // Perform the Axios POST request\n    axios.post('/api/image-upload', formData, config)\n        .then(response => {\n          // FilePond expects the server to return a file ID on successful upload,\n          // but you can adjust this based on your response structure.\n          load(response.data.fileId);\n        })\n        .catch(err => {\n          // Default error message and title in case err.response is undefined\n          let errorMessage = 'An unexpected error occurred during the upload. Please try again.';\n          let errorTitle = 'Upload Error';\n\n          // Check if the error response exists and has data\n          if (err.response && err.response.data) {\n            // Example: Extracting error message from server response\n            // Adjust based on your server's error response structure\n            if (typeof err.response.data === 'object' && err.response.data.errors) {\n              // If the errors are in object format, you might want to convert them to a string\n              const errors = err.response.data.errors;\n              const errorMessages = Object.keys(errors).map(key => `${key}: ${errors[key].join(', ')}`).join('\\n');\n              errorMessage = `Upload failed with errors:\\n${errorMessages}`;\n            } else if (typeof err.response.data === 'string') {\n              // Directly use the error string as the message\n              errorMessage = err.response.data;\n            }\n          }\n\n          // Use the errorMessage and errorTitle in your notification\n          notificationStore.setGeneralServiceNotification(errorTitle, errorMessage);\n\n          // Pass a generic error message to FilePond's error handler to avoid displaying sensitive or detailed information directly in the UI\n          error('An error occurred during the upload.');\n        });\n\n\n    // Return an abort function to stop the upload if needed\n    return {\n      abort: () => {\n        // This function is called if the user aborts the upload\n        console.log(\"Upload aborted by the user.\");\n        abort();\n      }\n    };\n  },\n};\n\n\n// Initialize FilePond\n// const handleFilePondInit = () => {\n//     // FilePond has been initialized\n//     console.log(\"FilePond is ready\");\n// };\n\n// Handle the beforeaddfile event\n// const handleBeforeAddFile = (file) => {\n//     // Add metadata to the file object\n//     file.setMetadata(\"key\", \"value\");\n//     // You can set multiple metadata fields as needed\n//     // file.setMetadata(\"anotherKey\", \"anotherValue\");\n// };\n\n\nconst FilePond = vueFilePond(\n    FilePondPluginFileValidateType,\n    FilePondPluginFileValidateSize,\n    FilePondPluginImagePreview,\n    FilePondPluginFileMetadata\n);\n\n// Handle the beforeaddfile event\n// const handleBeforeAddFile = (file) => {\n//     // Add metadata to the file object\n//     file.setMetadata(\"show_id\", \"1\");\n//     // You can set multiple metadata fields as needed\n//     // file.setMetadata(\"anotherKey\", \"anotherValue\");\n// };\n\n// FilePond.registerPlugin(FilePondPluginFileMetadata);\nFilePond.setOptions = ({\n  fileMetadataObject: {\n    show_id: '1',\n  },\n});\n\n\n// Initialize FilePond with the File Metadata plugin\n// const filePondOptions = {\n//     allowMultiple: true,\n//     labelIdle: \"Drop files here or click to upload\",\n//     plugins: [FilePondPluginFileMetadata()],\n// };\n\nfunction filepondInitialized() {\n  console.log(\"Filepond is ready!\");\n  // console.log('Filepond object:', FilePond);\n\n}\n\nconst emit = defineEmits(['reloadImage'])\n\nfunction handleProcessedFile(error, file) {\n  if (error) {\n    console.log(\"Filepond processed file\");\n    console.log(error);\n    console.log(file);\n    return;\n  }\n\n  emit('reloadImage')\n\n  // Inertia.reload({\n  //     only: ['image'],\n  // });\n}\n\n</script>\n","<template>\n  <div>\n\n    <progress v-show=\"userStore.uploadPercentage !== 0\" max=\"100\" :value=\"userStore.uploadPercentage\" class=\"w-full\"/>\n    <div v-show=\"userStore.uploadPercentage !== 0\" class=\"w-full mb-4\">{{ userStore.uploadPercentageRounded }}%</div>\n\n    <div v-show=\"uploadingMessage\" class=\"mb-4 font-bold text-center\">Please stay on this screen until upload is\n      complete.\n    </div>\n    <div v-show=\"uploadComplete\" class=\"mb-4 font-bold text-center\">Upload is complete. The video is now\n      processing.\n    </div>\n    <form v-show=\"!isHidden\" id=\"videoUploadForm\" action=\"/videoupload\"\n          class=\"dropzone dropzoneFile border border-black rounded w-full h-48 max-w-md px-2 py-2 mb-6\">\n      <!--                            add input fields and a submit button to send data back to Laravel -->\n      <input hidden name=\"movieId\" v-model=\"form.movieId\">\n      <!--            <input hidden name=\"movieTrailerId\" v-model=\"form.movieTrailerId\">-->\n      <input hidden name=\"showEpisodeId\" v-model=\"form.showEpisodeId\">\n    </form>\n\n  </div>\n</template>\n\n<script setup>\nimport { Inertia } from \"@inertiajs/inertia\"\nimport { onMounted, ref } from \"vue\"\nimport { useForm } from \"@inertiajs/inertia-vue3\"\nimport { Dropzone } from \"dropzone\"\nimport { useUserStore } from \"@/Stores/UserStore\"\nimport { useUploadStore } from \"@/Stores/UploadStore\"\n\nconst userStore = useUserStore()\nconst uploadStore = useUploadStore()\n\nlet uploadPercentage = ref(0)\nlet uploadingMessage = ref(false)\nlet uploadComplete = ref(false)\nlet isHidden = ref(false)\n\nconst emits = defineEmits(['upload-start', 'upload-finished']);\n\nconst uploadCompleteMessage = () => {\n  uploadingMessage = false\n  uploadComplete = true\n}\n\nconst uploadStarted = () => {\n  uploadingMessage = true\n  emits('upload-start');\n}\n\nfunction onUploadSuccess(videoId) {\n  emits('upload-finished', videoId);\n  uploadStore.setVideoId(videoId);\n  uploadStore.setUploadStatus('processing');\n}\n\nonMounted(() => {\n  // Make sure the element with the ID \"videoUploadForm\" is available in the DOM.\n  const videoUploadForm = document.getElementById('videoUploadForm');\n\n  if (videoUploadForm) {\n    // Initialize Dropzone on the element.\n\n    // see options for Dropzone here: https://github.com/dropzone/dropzone/blob/main/src/options.js\n    let myDropzone = new Dropzone(\"#videoUploadForm\", {\n      url: \"/videoupload\",\n      paramName: \"file\", // The name that will be used to transfer the file\n      maxFilesize: '25 GB', // MB\n      chunking: true,\n      chunkSize: 2 * 1024 * 1024,\n      parallelChunkUploads: false,\n      retryChunks: true,\n      retryChunksLimit: 10,\n      capture: null,\n      // can set the capture method as camera, microphone or video\n      // for mobile devices to skip the file selection and choose the\n      // recording device instead.\n      acceptedFiles: 'video/*, audio/*',\n      uploadprogress: function (file, progress, bytesSent) {\n        userStore.uploadPercentage = progress;\n        console.log(userStore.uploadPercentage);\n        if (userStore.uploadPercentage !== 100) {\n          isHidden = true;\n        }\n      },\n      dictDefaultMessage: \"Click here or Drop video here to upload <br>(Max video file size is 25GB)\",\n      forceFallback: false, // for testing, set to true.\n      accept: function (file, done) {\n        if (file.name === \"\") {\n          done(\"Need a file.\");\n        } else if (file.size > 25000000000) {\n          console.log(file.size)\n          done(\"Video file too big.\");\n          alert('Video file must be smaller than 25GB');\n        } else {\n          done();\n        }\n      }\n    });\n\n    myDropzone.on(\"addedfile\", file => {\n      uploadStarted()\n      console.log(`File added: ${file.name}`);\n    });\n\n    myDropzone.on(\"success\", function(file, response) {\n      // Assuming 'response' contains the videoId after the file is uploaded\n      if (response.videoId) {\n        console.log(response.videoId)\n        const videoId = response.videoId;\n        if (videoId) {\n          onUploadSuccess(videoId);\n          // onUploadSuccess(response.videoId);\n        }\n      }\n    });\n\n    myDropzone.on(\"complete\", function (file, response) {\n      uploadCompleteMessage()\n      myDropzone.removeFile(file);\n      userStore.uploadPercentage = 0;\n      isHidden = false;\n      Inertia.reload({\n        only: [\"videos\"],\n      });\n    });\n\n  } else {\n    console.error('Element with ID \"videoUploadForm\" not found in the DOM.');\n  }\n})\n\nlet props = defineProps({\n  movieId: Number,\n  movieTrailerId: Number,\n  showEpisodeId: Number,\n})\n\nfunction setMovieOrEpisodeId() {\n  if (props.movieId !== null) {\n    userStore.uploadMovieId = props.mov;\n  } else if (props.movieTrailerId !== null) {\n    userStore.movieTrailerId = props.movieTrailerId;\n  } else if (props.showEpisodeId !== null) {\n    userStore.uploadShowEpisodeId = props.showEpisodeId;\n  }\n}\n\nsetMovieOrEpisodeId()\n\nlet form = useForm({\n  file: [],\n  // movieId: userStore.uploadMovieId,\n  movieId: props.movieId,\n  movieTrailerId: props.movieId,\n  showEpisodeId: props.showEpisodeId,\n});\n\n// let props = defineProps({\n//     filters: Object,\n//     can: Object,\n//     videos: Object,\n//     message: String,\n//     errors: ref(''),\n//     isHidden: ref(false),\n//     done: ref(),\n// });\n\n</script>\n<style scoped>\n\n.dropzone {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  row-gap: 16px;\n  border: 2px dashed #000000;\n  background-color: #fce4bb;\n  transition: 0.3s ease all;\n}\n\nlabel {\n  padding: 8px 12px;\n  color: #fff;\n  background-color: #4bb1b1;\n  transition: 0.3s ease all;\n}\n\n.active-dropzone {\n  color: #fff;\n  border-color: #fff;\n  background-color: #4bb1b1;\n}\n\n.active-dropzone label {\n  background-color: #fff;\n  color: #4bb1b1;\n}\n\n/*6b7280*/\n/*4bb1b1*/\n\n</style>\n","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-10.use[1]!../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-10.use[2]!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./VideoUpload.vue?vue&type=style&index=0&id=21826cbb&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./VideoUpload.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./VideoUpload.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./VideoUpload.vue?vue&type=style&index=0&id=21826cbb&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-21826cbb\"]])\n\nexport default __exports__","import api from \"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-10.use[1]!../../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-10.use[2]!../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./EpisodeVideo.vue?vue&type=style&index=0&id=69b8d0bc&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./EpisodeVideo.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./EpisodeVideo.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./EpisodeVideo.vue?vue&type=style&index=0&id=69b8d0bc&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-69b8d0bc\"]])\n\nexport default __exports__","import script from \"./EpisodeFooter.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./EpisodeFooter.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n\n  <div class=\"flex justify-between mt-6\">\n    <!-- Paginator -->\n    <!--                            <Pagination :links=\"`#`\" class=\"mt-6\"/>-->\n    <div>\n      <div><span class=\"text-xs uppercase font-semibold\">Episode ID: </span><span\n          class=\"text-xs\">{{ episode.ulid }}</span></div>\n    </div>\n    <div>\n      <Link :href=\"`/shows/${show.slug}`\" class=\"text-blue-500 hover:text-blue-700 ml-2 uppercase\">\n        {{ show.name }}&nbsp;\n      </Link>\n\n      <span v-if=\"episode?.creative_commons?.name\"\n            class=\"text-xs font-semibold text-gray-500\">&nbsp;{{ episode?.creative_commons?.name }}&nbsp;<span v-if=\"!episode?.creative_commons?.id === 7\">&bull;&nbsp;</span></span>\n\n      <span class=\"text-xs font-semibold text-gray-500\"\n            v-if=\"episode?.creative_commons?.id === 7\">&nbsp;&copy;&nbsp;</span>\n\n      <!--                    If there is a copyright year display it... we need to remove the &copy; and replace it with whichever creative commons icon it needs -->\n      <span class=\"text-xs font-semibold text-gray-500\" v-if=\"show?.last_release_year > 0\">{{ show?.first_release_year }}-{{ show?.last_release_year }}</span>\n      <span class=\"text-xs font-semibold text-gray-500\" v-if=\"!show?.last_release_year && show?.first_release_year\">{{ show?.first_release_year }}</span>\n      <span class=\"text-xs font-semibold text-gray-500\"\n            v-if=\"!show?.last_release_year && !show?.first_release_year && episode?.copyrightYear\">{{\n          episode.copyrightYear\n        }}</span>\n\n      <!--                    If there is no copyright year then it's probably public domain... so we'll just display the creative commons name-->\n\n\n\n    </div>\n  </div>\n\n</template>\n\n<script setup>\n\ndefineProps({\n  team: Object,\n  episode: Object,\n  show: Object,\n  can: Object,\n})\n\nlet currentYear = new Date().getFullYear()\n\n</script>\n","import script from \"./ValidationErrors.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ValidationErrors.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { computed } from 'vue';\nimport { usePage } from '@inertiajs/inertia-vue3';\n\nconst errors = computed(() => usePage().props.value.errors);\nconst hasErrors = computed(() => Object.keys(errors.value).length > 0);\n</script>\n\n<template>\n    <div v-if=\"hasErrors\">\n        <div class=\"font-medium text-red-600\">\n            Whoops! Something went wrong.\n        </div>\n\n        <ul class=\"mt-3 list-disc list-inside text-sm text-red-600\">\n            <li v-for=\"(error, key) in errors\" :key=\"key\">\n                {{ error }}\n            </li>\n        </ul>\n    </div>\n</template>\n","import script from \"./EditShowEpisodeHeader.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./EditShowEpisodeHeader.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./Edit.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Edit.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n\n  <Head :title=\"`Edit Episode: ${props.episode.name}`\"/>\n\n  <div id=\"topDiv\" class=\"place-self-center flex flex-col gap-y-3\">\n    <div class=\"bg-white dark:bg-gray-800 text-black light:text-black dark:text-white px-5 mb-10\">\n\n      <Message v-if=\"appSettingStore.showFlashMessage\" :flash=\"$page.props.flash\"/>\n      <div class=\"alert alert-error mt-4 mx-3\"\n           v-if=\"showStore.errorMessage\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n        </svg>\n        <span>{{ showStore.errorMessage }}</span>\n        <button class=\"text-xs ml-12\" @click=\"showStore.errorMessage = ''\"> Close</button>\n      </div>\n\n      <header>\n        <ShowEpisodeEditHeader :show=\"props.show\" :team=\"props.team\" :episode=\"props.episode\"/>\n      </header>\n\n      <div class=\"flex flex-col\">\n        <div class=\"-my-2 overflow-x-none\">\n          <div class=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\n            <div class=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\n\n              <div v-if=\"form.errors.name\" v-text=\"form.errors.name\"\n                   class=\"bg-red-600 p-2 w-full text-white font-semibold mt-1\"></div>\n              <div v-if=\"form.errors.description\" v-text=\"form.errors.description\"\n                   class=\"bg-red-600 p-2 w-full text-white font-semibold mt-1\"></div>\n              <div v-if=\"form.errors.episode_number\" v-text=\"form.errors.episode_number\"\n                   class=\"bg-red-600 p-2 w-full text-white font-semibold mt-1\"></div>\n              <div v-if=\"form.errors.notes\" v-text=\"form.errors.notes\"\n                   class=\"bg-red-600 p-2 w-full text-white font-semibold mt-1\"></div>\n              <div v-if=\"form.errors.video_file_url\" v-text=\"form.errors.video_file_url\"\n                   class=\"bg-red-600 p-2 w-full text-white font-semibold mt-1\"></div>\n              <!--                            <div v-if=\"form.errors.youtube_url\" v-text=\"form.errors.youtube_url\"-->\n              <!--                                 class=\"bg-red-600 p-2 w-full text-white font-semibold mt-1\"></div>-->\n              <div v-if=\"form.errors.video_embed_code\" v-text=\"form.errors.video_embed_code\"\n                   class=\"bg-red-600 p-2 w-full text-white font-semibold mt-1\"></div>\n\n\n              <form @submit.prevent=\"submit\">\n                <!--                                <div class=\"flex justify-end mr-2 mb-6\">-->\n                <!--                                    <button-->\n                <!--                                        @click=\"submit\"-->\n                <!--                                        class=\"bg-blue-600 hover:bg-blue-500 text-white rounded py-2 px-4\"-->\n                <!--                                        :disabled=\"form.processing\"-->\n                <!--                                    >-->\n                <!--                                        Save-->\n                <!--                                    </button>-->\n                <!--                                </div>-->\n\n\n                <!-- Begin grid 2-col -->\n                <div class=\"grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 space-x-6 p-6\">\n\n                  <!--Left Column-->\n                  <div class=\"xl:col-span-2\">\n\n                    <div class=\"mb-6\">\n                      <label class=\"block mb-2 uppercase font-bold text-xs text-red-700\"\n                             for=\"notes\"\n                      >\n                        Episode Notes (only the team members see the notes)\n                      </label>\n\n                      <input v-model=\"form.notes\"\n                             class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                             type=\"text\"\n                             name=\"notes\"\n                             id=\"notes\"\n                      >\n                      <div v-if=\"form.errors.notes\" v-text=\"form.errors.notes\"\n                           class=\"text-xs text-red-600 mt-1\"></div>\n                    </div>\n\n                    <div class=\"mb-6 w-64\">\n                      <label class=\"block mb-2 uppercase font-bold text-xs text-red-700\"\n                             for=\"creative_commons\"\n                      >\n                        Creative Commons / Copyright\n                      </label>\n\n                      <select class=\"border border-gray-400 text-gray-800 py-2 pl-2 pr-8 w-fit rounded-lg block mb-2 uppercase font-bold text-xs\"\n                              v-model=\"selectedCreativeCommons\" @change=\"handleCreativeCommonsChange\">\n                        <option v-for=\"cc in creative_commons\" :key=\"cc.id\" :value=\"cc.id\">{{ cc.name }}</option>\n                      </select>\n\n                      <div class=\"\">{{ selectedCreativeCommonsDescription }}</div>\n\n                      <div v-if=\"form.errors.creative_commons_id\" v-text=\"form.errors.creative_commons_idA\"\n                           class=\"text-xs text-red-600 mt-1\"></div>\n\n                    </div>\n\n                    <div v-if=\"selectedCreativeCommons\" class=\"mb-6 w-64\">\n\n                      <div v-if=\"selectedCreativeCommons === 8\">\n                        <input class=\"hidden border border-gray-400 text-black font-semibold p-2 w-1/2 rounded-lg\"\n                               type=\"hidden\"\n                               v-model=\"selectedCopyrightYear\"\n                               value=\"null\">\n                      </div>\n                      <div v-else>\n                        <label class=\"block mb-2 uppercase font-bold text-xs text-red-700\"\n                               for=\"copyrightYear\"\n                        >\n                          Copyright Year\n                        </label>\n                        <input class=\"border border-gray-400 text-black font-semibold p-2 w-1/2 rounded-lg\"\n                               type=\"number\"\n                               minlength=\"4\"\n                               maxlength=\"4\"\n                               v-model=\"selectedCopyrightYear\">\n                      </div>\n\n                      <div v-if=\"form.errors.copyrightYear\" v-text=\"form.errors.copyrightYear\"\n                           class=\"text-xs text-red-600 mt-1\"></div>\n                    </div>\n\n\n                    <div v-if=\"props.episode.status.id < 7\" class=\"mb-6\">\n                      <label class=\"block mb-2 uppercase font-bold text-xs text-red-700\"\n                             for=\"releaseDate\"\n                      >\n                                            <span v-if=\"props.episode.scheduled_release_dateTime\">\n                                                Scheduled Release Date</span>\n                        <span v-else>\n                                                Schedule Release</span>\n                      </label>\n\n                      <div v-if=\"!cancelScheduledReleaseDate\">\n                        <div v-if=\"props.episode.scheduled_release_dateTime && !selectedScheduledDateTime\"\n                             class=\"mb-2\">\n                          {{ formatDate(props.episode.scheduled_release_dateTime) }}\n                        </div>\n                        <div v-if=\"selectedScheduledDateTime\"\n                             class=\"mb-2\">\n                          {{ formatDate(selectedScheduledDateTime.date) }}\n                        </div>\n                      </div>\n                      <div v-else class=\"mb-2\">\n                        <span class=\"italic\">Scheduled release cancelled. Please save the changes.</span>\n                      </div>\n\n                      <div class=\"flex flex-row flex-wrap space-x-2\">\n                        <DateTimePickerSelect :date=\"props.episode.scheduled_release_dateTime\"\n                                              @date-time-selected=\"handleScheduledDateTime\"/>\n                        <!-- Display the selected date and time received from DateTimePicker -->\n                        <button v-if=\"props.episode.scheduled_release_dateTime\"\n                                class=\"px-3 py-2 bg-blue-500 text-sm text-white font-semibold rounded-md\"\n                                @click.prevent=\"cancelScheduledRelease\">Cancel Release\n                        </button>\n                      </div>\n\n\n                    </div>\n\n                    <div v-if=\"props.episode.status.id === 7\" class=\"mb-6\">\n                      <label class=\"block mb-2 uppercase font-bold text-xs text-red-700\"\n                             for=\"releaseDate\"\n                      >\n                        Release Date\n                      </label>\n\n                      <div v-if=\"props.episode.release_dateTime && !selectedReleaseDateTime\"\n                           class=\"mb-2\">\n                        {{ formatDate(props.episode.release_dateTime) }}\n                      </div>\n                      <div v-if=\"selectedReleaseDateTime\"\n                           class=\"mb-2\">\n                        {{ formatDate(selectedReleaseDateTime.date) }}\n                      </div>\n\n\n                      <DateTimePickerSelect v-if=\"can.editShow\" :date=\"props.episode.release_dateTime\"\n                                            @date-time-selected=\"handleReleaseDateTime\">\n                        <template v-slot:buttonName>\n                          Change date\n                        </template>\n                      </DateTimePickerSelect>\n                      <!-- Display the selected date and time received from DateTimePicker -->\n\n\n                    </div>\n\n                    <div class=\"mb-6\">\n                      <label class=\"block mb-2 uppercase font-bold text-xs text-red-700\"\n                             for=\"name\"\n                      >\n                        Episode Name\n                      </label>\n\n                      <input v-model=\"form.name\"\n                             class=\"border border-gray-400 text-gray-800 p-2 w-1/2 rounded-lg\"\n                             type=\"text\"\n                             name=\"name\"\n                             id=\"name\"\n                             required\n                      >\n                      <div v-if=\"form.errors.name\" v-text=\"form.errors.name\"\n                           class=\"text-xs text-red-600 mt-1\"></div>\n                    </div>\n\n                    <div class=\"mb-6\">\n                      <label class=\"block mb-2 uppercase font-bold text-xs text-red-700\"\n                             for=\"episode_number\"\n                      >\n                        Episode Number\n                      </label>\n\n                      <input v-model=\"form.episode_number\"\n                             class=\"border border-gray-400 text-gray-800 p-2 w-1/2 rounded-lg\"\n                             type=\"text\"\n                             :placeholder=\"props.episode.id\"\n                             name=\"episode_number\"\n                             id=\"episode_number\"\n                      >\n                      <div v-if=\"form.errors.episode_number\" v-text=\"form.errors.episode_number\"\n                           class=\"text-xs text-red-600 mt-1\"></div>\n                    </div>\n\n\n                    <div class=\"mb-6 w-full\">\n                      <label class=\"block mb-2 uppercase font-bold text-xs text-light text-red-700\"\n                             for=\"description\"\n                      >\n                        Description\n                      </label>\n                      <tip-tap-description-editor @updateContent=\"handleContentUpdate\" :description=\"episode?.description\"/>\n<!--                      <TabbableTextarea v-model=\"form.description\"-->\n<!--                                        class=\"border border-gray-400 text-gray-800 p-2 w-full rounded-lg\"-->\n<!--                                        name=\"description\"-->\n<!--                                        id=\"description\"-->\n<!--                                        rows=\"10\" cols=\"30\"-->\n<!--                                        required-->\n<!--                      />-->\n                      <div v-if=\"form.errors.description\" v-text=\"form.errors.description\"\n                           class=\"text-xs text-red-600 mt-1\"></div>\n                    </div>\n\n                    <!--                                    <div class=\"mb-6\">-->\n                    <!--                                        <label class=\"block mb-2 uppercase font-bold text-xs text-white\"-->\n                    <!--                                               for=\"video_file_url\"-->\n                    <!--                                        >-->\n                    <!--                                            YouTube URL-->\n                    <!--                                        </label>-->\n\n                    <!--                                        <input v-model=\"form.youtube_url\"-->\n                    <!--                                               class=\"border border-gray-400 text-gray-800 p-2 w-full rounded-lg\"-->\n                    <!--                                               type=\"text\"-->\n                    <!--                                               name=\"youtube_url\"-->\n                    <!--                                               id=\"youtube_url\"-->\n                    <!--                                        >-->\n                    <!--                                        <div v-if=\"form.errors.youtube_url\" v-text=\"form.errors.youtube_url\"-->\n                    <!--                                             class=\"text-xs text-red-600 mt-1\"></div>-->\n                    <!--                                    </div>-->\n\n                    <div class=\"mb-6\">\n                      <label class=\"block mb-2 uppercase font-bold text-xs text-red-700\"\n                             for=\"video_file_url\"\n                      >\n                        Video URL (External MP4 only)\n                      </label>\n\n                      <input v-model=\"form.video_url\"\n                             class=\"border border-gray-400 text-gray-800 p-2 w-full rounded-lg\"\n                             type=\"text\"\n                             name=\"video_url\"\n                             id=\"video_url\"\n                      >\n                      <div class=\"text-xs mt-1\">\n                        Example: <span class=\"underline\">https://domainname.com/filename.mp4</span>\n                      </div>\n                      <div v-if=\"form.errors.video_url\" v-text=\"form.errors.video_url\"\n                           class=\"text-xs text-red-600 mt-1\"></div>\n                    </div>\n\n                    <div class=\"mb-6\">\n                      <label class=\"block mb-2 uppercase font-bold text-xs text-red-700\"\n                             for=\"video_embed_code\"\n                      >\n                        Embed Code (Rumble or Bitchute only) <span class=\"\">*</span>\n                      </label>\n\n                      <TabbableTextarea v-model=\"form.video_embed_code\"\n                                        class=\"border border-gray-400 text-gray-800 p-2 w-full rounded-lg\"\n                                        type=\"text\"\n                                        name=\"video_embed_code\"\n                                        id=\"video_embed_code\"\n                                        rows=\"10\" cols=\"30\"\n                      />\n                      <div v-if=\"form.errors.video_embed_code\" v-text=\"form.errors.video_embed_code\"\n                           class=\"text-xs mt-1\"></div>\n                    </div>\n\n                    <div class=\"mt-2 mb-6 pb-4 border-b\">\n                      <div class=\"mb-2 block uppercase font-bold text-xs text-red-700\">\n                        * Notes about video embedding:\n                      </div>\n                      <ul class=\"list-decimal pb-2 ml-2\">\n                        <li>\n                          If both URL and Embed Code are provided the system will attempt to get the Video Url from the\n                          Embed Code.\n                        </li>\n                        <li>\n                          We have <span class=\"font-bold\">not</span> enabled the use of Facebook videos for security\n                          purposes.\n                        </li>\n                        <li>\n                          If you want to use YouTube, enter the YouTube video URL above in the YouTube URL field. This\n                          option is least preferable, due to a lower quality user experience.\n                        </li>\n                      </ul>\n                    </div>\n\n\n                  </div>\n                  <!-- End Left Column -->\n\n                  <!--Right Column-->\n                  <div>\n                    <div class=\"mb-4\">\n                      <label class=\"block mb-2 uppercase font-bold text-xs text-red-700\"\n                             for=\"episodeVideo\"\n                      >\n                        Attach Recording\n                      </label>\n\n                      <select class=\"rounded-lg\">\n                        <option>No recordings available</option>\n                        <option>Select recording...</option>\n                      </select>\n\n\n                    </div>\n\n\n                    <div>\n                      <label class=\"block mb-2 uppercase font-bold text-xs text-red-700\"\n                             for=\"episodeVideo\"\n                      >\n                        Upload Episode\n                      </label>\n                      <div class=\"max-full mx-auto mt-2 mb-6 bg-gray-200 p-6\">\n                        <h2 class=\"text-xl font-semibold text-gray-800\">Upload Video</h2>\n\n                        <ul class=\"pb-4 text-gray-800\">\n                          <li>Max Video Length: <span class=\"text-orange-400\">4 hours</span>\n                          </li>\n                          <li>File Types accepted: <span class=\"text-orange-400\">mp4, webm, ogg</span>\n                          </li>\n                        </ul>\n\n                        <VideoUpload :showEpisodeId=\"episode.id\" class=\"text-black\" @upload-start=\"handleUploadStart\" @upload-finished=\"handleUploadEnd\" />\n\n                      </div>\n\n                    </div>\n\n\n                    <div>\n                      <label class=\"block mb-2 uppercase font-bold text-xs text-red-700\"\n                             for=\"name\"\n                      >\n                        Change Episode Poster\n                      </label>\n                      <div class=\"max-full mx-auto mt-2 mb-6 bg-gray-200 p-6\">\n\n                        <ImageUpload :image=\"props.image\"\n                                     :modelType=\"'showEpisode'\"\n                                     :modelId=\"episode.id\"\n                                     :name=\"'Upload Episode Poster'\"\n                                     :maxSize=\"'20MB'\"\n                                     :fileTypes=\"'image/jpg, image/jpeg, image/png'\"\n                                     @reloadImage=\"reloadImage\"\n                        />\n\n                        <div class=\"flex space-y-3\">\n                          <div class=\"mb-6\">\n                            <SingleImage :image=\"props.image\" :key=\"props.image\"/>\n                          </div>\n                        </div>\n\n\n                      </div>\n\n                    </div>\n\n\n                  </div>\n\n\n                  <!-- End Right Column -->\n                </div>\n                <!-- End grid 2-col -->\n\n                <div class=\"flex justify-end mb-6\">\n                  <JetValidationErrors class=\"mr-4\"/>\n                  <div v-if=\"isUploading\" class=\"mr-2 font-semibold bg-black text-white px-3 py-2\">Please wait until uploading completes to save the form... </div>\n                  <button\n                      @click.prevent=\"submit\"\n                      class=\"h-fit bg-blue-600 hover:bg-blue-500 text-white rounded py-2 px-4 mr-5 disabled:bg-gray-500 disabled:cursor-not-allowed\"\n                      :disabled=\"form.processing || isUploading\"\n                  >\n                    Save\n                  </button>\n                </div>\n\n              </form>\n\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <EpisodeFooter :can=\"can\" :team=\"team\" :episode=\"episode\" :show=\"show\"/>\n\n    </div>\n  </div>\n\n</template>\n\n<script setup>\nimport { Inertia } from \"@inertiajs/inertia\"\nimport { computed, onMounted, onUnmounted, ref, watch } from 'vue'\nimport { useForm } from \"@inertiajs/inertia-vue3\"\nimport { format } from 'date-fns'\nimport { usePageSetup } from '@/Utilities/PageSetup'\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useTeamStore } from \"@/Stores/TeamStore\"\nimport { useShowStore } from \"@/Stores/ShowStore\"\nimport { useUserStore } from \"@/Stores/UserStore\"\nimport JetValidationErrors from '@/Jetstream/ValidationErrors'\nimport ShowEpisodeEditHeader from \"@/Components/Pages/ShowEpisodes/Layout/EditShowEpisodeHeader\"\n\nimport DateTimePickerSelect from \"@/Components/Global/Calendar/DateTimePickerSelect\"\nimport TabbableTextarea from \"@/Components/Global/TextEditor/TabbableTextarea\"\n\nimport Message from \"@/Components/Global/Modals/Messages\"\nimport ImageUpload from \"@/Components/Global/Uploaders/ImageUpload\"\nimport SingleImage from \"@/Components/Global/Multimedia/SingleImage\"\nimport VideoUpload from \"@/Components/Global/Uploaders/VideoUpload\"\nimport EpisodeFooter from '@/Components/Pages/ShowEpisodes/Layout/EpisodeFooter.vue'\nimport TipTapDescriptionEditor from '@/Components/Global/TextEditor/TipTapDescriptionEditor.vue'\n\n// import {DatePicker} from \"v-calendar\";\n// import 'v-calendar/style.css';\n\nusePageSetup('shows/slug/episodes/slug')\n\nconst appSettingStore = useAppSettingStore()\nconst teamStore = useTeamStore()\nconst showStore = useShowStore()\nconst userStore = useUserStore()\n\nlet props = defineProps({\n  show: Object,\n  team: Object,\n  episode: Object,\n  image: Object,\n  creative_commons: Object,\n  can: Object,\n});\n\nteamStore.setActiveTeam(props.team);\nteamStore.setActiveShow(props.show);\nshowStore.episodePoster = props.image.name;\n\nconst isUploading = ref(false);\n// const selectedCreativeCommons = ref(props.episode?.creative_commons?.id);\n// Initialize selectedCreativeCommons with a default value of 7 if the id is null\nconst selectedCreativeCommons = ref(props.episode?.creative_commons?.id || 7);\nlet selectedCopyrightYear = ref(props.episode?.copyrightYear);\nconst currentYear = new Date().getFullYear();\n\nlet scheduledDateTime = ref(''); // This will hold the selected date and time in ISO format\nlet releaseDateTime = ref(''); // This will hold the selected date and time in ISO format\n\n// Define a ref to store selected date and time received from DateTimePicker\nlet selectedReleaseDateTime = ref('');\nlet selectedScheduledDateTime = ref('');\nlet cancelScheduledReleaseDate = ref(false);\n\nlet formattedReleaseDateTime = ref(''); // This will display the formatted date and time\nlet formattedScheduledDateTime = ref(''); // This will display the formatted date and time\n\nlet userReleaseDateTime = ref(''); // This will display the date and time in the user's timezone\nlet userScheduledDateTime = ref(''); // This will display the date and time in the user's timezone\n\nconst userTimezone = ref('');\n\n// TODO: convert this to the user's local time\nreleaseDateTime = props.episode.release_dateTime\nscheduledDateTime = props.episode.scheduled_release_dateTime\n\nfunction handleUploadStart() {\n  isUploading.value = true;\n}\n\nconst videoId = ref('');\n\nfunction handleUploadEnd(id) {\n  videoId.value = id;\n  console.log(`Received videoId: ${videoId.value}`);\n  console.log('It\\'s a DUCK!')\n  console.log(`Received videoId: ${videoId.value}`);\n  isUploading.value = false;\n}\n\n\n\nconst getUserTimezone = () => {\n  // Use the Intl object to get the user's timezone\n  userTimezone.value = Intl.DateTimeFormat().resolvedOptions().timeZone;\n};\n\nconst convertToTimeZone = (dateTime, userTimezone) => {\n  return format(dateTime, 'yyyy-MM-dd HH:mm:ssXXX', {userTimezone});\n};\n\nif (releaseDateTime) {\n  userReleaseDateTime.value = convertToTimeZone(\n      new Date(releaseDateTime),\n      userTimezone.value);\n  console.log('user release dateTime: ' + userReleaseDateTime.value)\n}\n\nif (scheduledDateTime) {\n  userScheduledDateTime.value = convertToTimeZone(\n      new Date(scheduledDateTime),\n      userTimezone.value);\n  console.log('user scheduled dateTime: ' + userScheduledDateTime.value)\n}\n\nconst handleCreativeCommonsChange = () => {\n  if (selectedCreativeCommons.value === 8) {\n    selectedCopyrightYear.value = null;\n  } else if (selectedCopyrightYear.value === null) {\n    // Pre-populate with current year only if copyrightYear is null\n    selectedCopyrightYear.value = currentYear;\n  }\n};\n\nconst selectedCreativeCommonsDescription = computed(() => {\n  const selectedCC = props.creative_commons.find((cc) => cc.id === selectedCreativeCommons.value);\n  return selectedCC ? selectedCC.description : '';\n});\n\nconst description = ref(props.team.description)\n\n\nconst handleContentUpdate = (html) => {\n  description.value = html\n  form.description = html\n}\n\nwatch(() => props.team.description, (newDescription) => {\n  description.value = newDescription\n  form.description = newDescription\n})\n\n\nlet form = useForm({\n  id: props.episode.id,\n  name: props.episode.name,\n  episode_number: props.episode.episode_number,\n  description: description.value,\n  notes: props.episode.notes,\n  copyrightYear: selectedCopyrightYear,\n  creative_commons_id: selectedCreativeCommons.value,\n  show_id: props.episode.show_id,\n  video_url: props.episode.video.video_url,\n  youtube_url: props.episode.youtube_url,\n  video_embed_code: props.episode.video_embed_code,\n  release_dateTime: props.episode.release_dateTime,\n  scheduled_release_dateTime: props.episode.scheduled_release_dateTime,\n});\n\nlet reloadImage = () => {\n  Inertia.reload({\n    only: ['image'],\n  });\n};\n\nlet submit = () => {\n  if (form.video_embed_code !== props.episode.video_embed_code && form.video_url) {\n    addEmbedCodeConfirm();\n  } else\n    form.copyrightYear = selectedCopyrightYear;\n    form.creative_commons_id = selectedCreativeCommons.value;\n    form.patch(route('showEpisodes.update', props.episode.slug));\n};\n\n// Compare the converted date to the current date in the user's timezone\nconst currentDate = convertToTimeZone(\n    new Date(),\n    userTimezone.value\n);\n\nconst handleReleaseDateTime = (newDate) => {\n  let changedDate = convertToTimeZone(\n      newDate.date,\n      userTimezone.value\n  )\n  console.log(changedDate)\n  console.log(currentDate)\n  // if release dateTime is in the future, alert and return\n  if (changedDate > currentDate) {\n    // selectedReleaseDateTime.value = props.episode.release_dateTime\n    return alert(\"The selected release date and time is in the future! Please select a date/time in the past.\");\n  } else {\n    // else proceed\n    selectedReleaseDateTime.value = newDate;\n    releaseDateTime = newDate.date;\n    // console.log(releaseDateTime)\n    updateReleaseDateTime()\n    console.log(formattedReleaseDateTime.value)\n    form.release_dateTime = formattedReleaseDateTime\n    form.scheduled_release_dateTime = null\n  }\n}\nconst handleScheduledDateTime = (newDate) => {\n  selectedScheduledDateTime.value = newDate;\n  scheduledDateTime = newDate.date;\n  // console.log(scheduledDateTime)\n  updateScheduledDateTime()\n  console.log(formattedScheduledDateTime.value)\n\n  form.scheduled_release_dateTime = formattedScheduledDateTime\n  form.release_dateTime = null\n}\n\nfunction cancelScheduledRelease() {\n  cancelScheduledReleaseDate.value = true;\n  selectedScheduledDateTime.value = null;\n  form.scheduled_release_dateTime = null;\n}\n\nconst updateReleaseDateTime = () => {\n  if (selectedReleaseDateTime.value) {\n    // Convert the selected date and time to the desired time zone\n    // const timeZone = 'UTC'; // Change this to your desired time zone\n    formattedReleaseDateTime.value = convertToTimeZone(\n        new Date(releaseDateTime),\n        userTimezone.value\n    );\n\n    // Compare the converted date to the current date in the user's timezone\n    // const currentDate = convertToTimeZone(\n    //     new Date(),\n    //     userTimezone.value\n    // );\n    //\n    // if (formattedReleaseDateTime.value > currentDate) {\n    //     props.episode.release_dateTime = userReleaseDateTime.value\n    //     alert(\"The selected release date and time is in the future!\");\n    // }\n\n  } else {\n    formattedReleaseDateTime.value = '';\n  }\n};\n\nconst updateScheduledDateTime = () => {\n  if (selectedScheduledDateTime.value) {\n    // Convert the selected date and time to the desired time zone\n    // const timeZone = 'UTC'; // Change this to your desired time zone\n    formattedScheduledDateTime.value = convertToTimeZone(\n        new Date(scheduledDateTime),\n        userTimezone.value\n    );\n  } else {\n    formattedScheduledDateTime.value = '';\n  }\n};\n\nonMounted(() => {\n  getUserTimezone()\n  console.log(userTimezone.value)\n  watch(() => props.episode?.creative_commons?.id, (newVal) => {\n    // selectedCreativeCommons.value = newVal;\n    // Set selectedCreativeCommons to newVal if it's not null, otherwise default to 7\n    selectedCreativeCommons.value = newVal !== null ? newVal : 7;\n    handleCreativeCommonsChange();\n  });\n  // Call handleCreativeCommonsChange immediately to handle the initial value\n  handleCreativeCommonsChange();\n});\n\nonUnmounted(() => {\n  showStore.errorMessage = ''\n})\n\nfunction addEmbedCodeConfirm() {\n  if (confirm(\"Are you sure you want to add this embed code? It will override the video url.\")) {\n    form.patch(route('showEpisodes.update', props.episode.slug));\n  }\n}\n\n</script>\n"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","initialState","id","description","slug","totalSpots","memberSpots","teamCreator","teamLeader","members","managers","activeShow","activeEpisode","creators","showModal","Boolean","confirmDialog","confirmManagerDialog","selectedManagerName","selectedManagerId","addManager","removeManager","deleteMemberName","deleteMemberId","noteEdit","note","saveNoteProcessing","goLiveDisplay","can","openComponent","useTeamStore","defineStore","state","actions","assign","this","setActiveTeam","team","setActiveShow","show","setActiveEpisode","episode","deleteTeamMemberCancel","confirmTeamManagerCancel","deleteTeamMember","Inertia","visit","route","data","user_id","team_id","team_slug","addTeamManager","removeTeamManager","toggleGoLiveDisplay","fetchTeamMembers","fn","_callee","_context","axios","get","self","args","arguments","apply","err","undefined","setCreators","getters","spotsRemaining","videoId","uploadStatus","useUploadStore","setVideoId","setUploadStatus","status","usePageSetup","pageName","userStore","useUserStore","appSettingStore","useAppSettingStore","videoPlayerStore","useVideoPlayerStore","currentPage","showFlashMessage","pageIsHidden","isMobile","window","innerWidth","fullPage","ott","showOttButtons","makeVideoTopRight","pageReload","pageWasReloaded","location","reload","on","event","search","shouldScrollToTop","requestAnimationFrame","topDiv","document","getElementById","scrollIntoView","behavior","scrollTo","setPrevUrl","noLayout","___CSS_LOADER_EXPORT___","module","props","__props","cancel","prevUrl","url","isCreator","emits","date","ref","inputValue","watch","_ref2","newDate","_slicedToArray","clearFlashMessage","computed","flash","success","message","warning","_ref","post","emit","onInput","target","onTabPress","textarea","val","start","selectionStart","end","selectionEnd","substring","initialContent","editor","useEditor","autofocus","extensions","StarterKit","Document","Text","TextStyle","FontFamily","Color","Typography","Underline","Subscript","Superscript","Link","configure","openOnClick","content","onUpdate","htmlOutput","getHTML","hasFocused","focusEditor","commands","clearContent","focus","toggleBold","chain","run","toggleItalic","toggleUnderline","toggleSuperscript","toggleSubscript","onMounted","_editor$value","adjustHeight","querySelector","view","dom","style","minHeight","concat","Math","max","scrollHeight","_editor$value2","onBeforeUnmount","destroy","options","locals","notificationStore","useNotificationStore","serverOptions","_defineProperty","metadataKey","metadataValue","process","fieldName","file","metadata","load","progress","abort","formData","FormData","append","modelType","modelId","config","onUploadProgress","lengthComputable","loaded","total","response","fileId","errorMessage","errors","errorMessages","map","join","setGeneralServiceNotification","console","log","FilePond","vueFilePond","FilePondPluginFileValidateType","FilePondPluginFileValidateSize","FilePondPluginImagePreview","FilePondPluginFileMetadata","filepondInitialized","setOptions","fileMetadataObject","show_id","__emit","handleProcessedFile","uploadStore","uploadingMessage","uploadComplete","isHidden","myDropzone","Dropzone","paramName","maxFilesize","chunking","chunkSize","parallelChunkUploads","retryChunks","retryChunksLimit","capture","acceptedFiles","uploadprogress","bytesSent","uploadPercentage","dictDefaultMessage","forceFallback","accept","size","alert","onUploadSuccess","removeFile","only","movieId","uploadMovieId","mov","movieTrailerId","showEpisodeId","uploadShowEpisodeId","form","useForm","Date","getFullYear","usePage","hasErrors","teamStore","showStore","useShowStore","episodePoster","image","isUploading","selectedCreativeCommons","_props$episode","creative_commons","selectedCopyrightYear","_props$episode2","copyrightYear","currentYear","scheduledDateTime","releaseDateTime","selectedReleaseDateTime","selectedScheduledDateTime","cancelScheduledReleaseDate","formattedReleaseDateTime","formattedScheduledDateTime","userReleaseDateTime","userScheduledDateTime","userTimezone","handleUploadStart","release_dateTime","scheduled_release_dateTime","handleUploadEnd","convertToTimeZone","dateTime","format","handleCreativeCommonsChange","selectedCreativeCommonsDescription","selectedCC","find","cc","handleContentUpdate","html","newDescription","episode_number","notes","creative_commons_id","video_url","video","youtube_url","video_embed_code","reloadImage","submit","confirm","patch","currentDate","handleReleaseDateTime","changedDate","updateReleaseDateTime","handleScheduledDateTime","updateScheduledDateTime","cancelScheduledRelease","Intl","DateTimeFormat","resolvedOptions","timeZone","_props$episode3","newVal","onUnmounted"],"sourceRoot":""}
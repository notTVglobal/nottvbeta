{"version":3,"file":"js/9539.js","mappings":"kLAMO,SAASA,EAAaC,GACzB,IAAMC,GAAYC,EAAAA,EAAAA,gBACZC,GAAkBC,EAAAA,EAAAA,sBAClBC,GAAmBC,EAAAA,EAAAA,uBAEzBH,EAAgBI,YAAcP,EAC9BG,EAAgBK,kBAAmB,EACnCL,EAAgBM,cAAe,EAG3BR,EAAUS,UAAYC,OAAOC,WAAa,MAEnCT,EAAgBU,SADvBV,EAAgBW,IAAM,GAIM,IAAxBX,EAAgBW,MAChBX,EAAgBW,IAAM,GAG1BX,EAAgBY,gBAAiB,GAGrCV,EAAiBW,oBAEbb,EAAgBc,aAChBd,EAAgBc,YAAa,EAC7Bd,EAAgBe,iBAAkB,EAClCP,OAAOQ,SAASC,UAWhBC,EAAAA,GAAOC,GAAG,YAAY,SAACC,GAEftB,EAAUS,UAAYC,OAAOC,WAAa,MAAQT,EAAgBU,SAClEV,EAAgBW,IAAM,EAEM,IAAxBX,EAAgBW,MAChBX,EAAgBW,IAAM,GAIqB,KAA3BH,OAAOQ,SAASK,SAChBrB,EAAgBsB,mBACpCC,uBAAsB,WAClB,IAAMC,EAASC,SAASC,eAAe,UACnCF,EACAA,EAAOG,eAAe,CAACC,SAAU,SAEjCpB,OAAOqB,SAAS,EAAG,EAE3B,IAEJ7B,EAAgBsB,mBAAoB,CACxC,IAEJtB,EAAgB8B,aAChB9B,EAAgBY,gBAAiB,EACjCZ,EAAgB+B,UAAW,GAI3BC,EAAAA,EAAAA,QACI,kBAAMhC,EAAgBiC,aAAa,IACnC,SAACC,GAEOlC,EAAgBW,IADhBuB,EACsB,EAEA,CAE9B,GACA,CAAEC,WAAW,GAGrB,C,gHCjFA,E,qECMAvC,EAAAA,EAAAA,GAAa,kBAEb,IAAMI,GAAkBC,EAAAA,EAAAA,sBAClBC,GAAmBC,EAAAA,EAAAA,uBACnBL,GAAYC,EAAAA,EAAAA,gBAEZqC,EAAQC,E,OAIdrC,EAAgBsC,KAAM,EACtBtC,EAAgBY,gBAAiB,EACjCZ,EAAgBuC,SAAU,EAC1BvC,EAAgBwC,QAAQC,GAAI,EAC5BzC,EAAgBwC,QAAQE,GAAI,EAC5B1C,EAAgBwC,QAAQG,GAAI,EAC5B3C,EAAgBwC,QAAQI,GAAI,EAC5B1C,EAAiB2C,oBACjB3C,EAAiB4C,UAAW,GAE5BC,EAAAA,EAAAA,YAAU,WACR/C,EAAgBgD,yBAA0B,EAC1ChD,EAAgBiD,0BAA2B,EAC3CnD,EAAUoD,KAAKC,KAAOf,EAAMgB,SAC9B,KAEAC,EAAAA,EAAAA,cAAY,WACVrD,EAAgBgD,yBAA0B,CAC5C,I","sources":["webpack://nottvbeta/./resources/js/Utilities/PageSetup.js","webpack://nottvbeta/./resources/js/Pages/CreatorWelcome.vue?9643","webpack://nottvbeta/./resources/js/Pages/CreatorWelcome.vue"],"sourcesContent":["import { onBeforeMount, onMounted, watch } from 'vue'\nimport { useUserStore } from \"@/Stores/UserStore\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useVideoPlayerStore } from \"@/Stores/VideoPlayerStore\"\nimport { router } from '@inertiajs/vue3'\n\nexport function usePageSetup(pageName) {\n    const userStore = useUserStore()\n    const appSettingStore = useAppSettingStore()\n    const videoPlayerStore = useVideoPlayerStore()\n\n    appSettingStore.currentPage = pageName\n    appSettingStore.showFlashMessage = true\n    appSettingStore.pageIsHidden = false\n\n// PageSetup utility\n    if (userStore.isMobile || window.innerWidth < 1024) {\n        appSettingStore.ott = 0; // Close all panels on mobile devices\n    } else if (appSettingStore.fullPage) {\n        appSettingStore.ott = 0; // Default to closed in fullPage mode\n    } else {\n        if (appSettingStore.ott === 0) {\n            appSettingStore.ott = 4\n        }\n        // appSettingStore.ott = 4; // Open OttChat by default on larger screens\n        appSettingStore.showOttButtons = true;\n    }\n\n    videoPlayerStore.makeVideoTopRight()\n\n    if (appSettingStore.pageReload) {\n        appSettingStore.pageReload = false\n        appSettingStore.pageWasReloaded = true\n        window.location.reload();\n    }\n    // Check if the URL contains query strings\n\n\n    // Only scroll into view if there are no query strings\n\n        // const topDiv = document.getElementById(\"topDiv\")\n        // if (topDiv) {\n        //     topDiv.scrollIntoView()\n        // }\n        router.on('navigate', (event) => {\n            // Ensure OTT panels do not open automatically on mobile devices\n            if (userStore.isMobile || window.innerWidth < 1024 || appSettingStore.fullPage) {\n                appSettingStore.ott = 0; // Close all panels on mobile devices\n            } else {\n                if (appSettingStore.ott === 0) {\n                    appSettingStore.ott = 4\n                }\n                // appSettingStore.ott = 0; // Default to closed on larger screens\n            }\n            const hasQueryStrings = window.location.search !== '';\n            if (!hasQueryStrings || appSettingStore.shouldScrollToTop) {\n                requestAnimationFrame(() => {\n                    const topDiv = document.getElementById(\"topDiv\");\n                    if (topDiv) {\n                        topDiv.scrollIntoView({behavior: 'auto'});\n                    } else {\n                        window.scrollTo(0, 0);\n                    }\n                });\n            }\n            appSettingStore.shouldScrollToTop = false;\n        })\n    // Only update if we're not already on this page to avoid overwriting with the current URL\n    appSettingStore.setPrevUrl()\n    appSettingStore.showOttButtons = true\n    appSettingStore.noLayout = false\n\n    // router.reload()\n\n    watch(\n        () => appSettingStore.isSmallScreen,\n        (newValue) => {\n            if (newValue) {\n                appSettingStore.ott = 0;\n            } else {\n                appSettingStore.ott = 4;\n            }\n        },\n        { immediate: true } // This option ensures the watch executes immediately with the current value\n    );\n\n}\n","import script from \"./CreatorWelcome.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CreatorWelcome.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <Head title=\"Welcome\" />\n</template>\n\n<script setup>\nimport { usePageSetup } from '@/Utilities/PageSetup'\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\nimport { useVideoPlayerStore } from '@/Stores/VideoPlayerStore'\nimport { useUserStore } from '@/Stores/UserStore'\nimport { onMounted, onUnmounted } from 'vue'\n\nusePageSetup('creatorWelcome')\n\nconst appSettingStore = useAppSettingStore()\nconst videoPlayerStore = useVideoPlayerStore()\nconst userStore = useUserStore()\n\nconst props = defineProps({\n  user_name: String\n})\n\nappSettingStore.osd = false\nappSettingStore.showOttButtons = false\nappSettingStore.showOtt = false\nappSettingStore.osdSlot.a = false\nappSettingStore.osdSlot.b = false\nappSettingStore.osdSlot.c = false\nappSettingStore.osdSlot.d = false\nvideoPlayerStore.makeVideoFullPage()\nvideoPlayerStore.controls = false\n\nonMounted(() => {\n  appSettingStore.showCreatorWelcomeModal = true\n  appSettingStore.showOrangeFeedbackButton = false\n  userStore.user.name = props.user_name\n})\n\nonUnmounted(() => {\n  appSettingStore.showCreatorWelcomeModal = false\n})\n</script>"],"names":["usePageSetup","pageName","userStore","useUserStore","appSettingStore","useAppSettingStore","videoPlayerStore","useVideoPlayerStore","currentPage","showFlashMessage","pageIsHidden","isMobile","window","innerWidth","fullPage","ott","showOttButtons","makeVideoTopRight","pageReload","pageWasReloaded","location","reload","router","on","event","search","shouldScrollToTop","requestAnimationFrame","topDiv","document","getElementById","scrollIntoView","behavior","scrollTo","setPrevUrl","noLayout","watch","isSmallScreen","newValue","immediate","props","__props","osd","showOtt","osdSlot","a","b","c","d","makeVideoFullPage","controls","onMounted","showCreatorWelcomeModal","showOrangeFeedbackButton","user","name","user_name","onUnmounted"],"sourceRoot":""}
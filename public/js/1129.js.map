{"version":3,"file":"js/1129.js","mappings":"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","sources":["webpack:///./resources/js/Utilities/PageSetup.js","webpack:///./resources/js/Components/Global/Modals/Messages.vue?dfe9","webpack:///./resources/js/Components/Global/Modals/Messages.vue","webpack:///./resources/js/Jetstream/ValidationErrors.vue?5fdc","webpack:///./resources/js/Jetstream/ValidationErrors.vue","webpack:///./resources/js/Components/Pages/Admin/ServerTime.vue?93d0","webpack:///./resources/js/Components/Pages/Admin/ServerTime.vue","webpack:///./resources/js/Pages/Admin/Settings.vue?277d","webpack:///./resources/js/Pages/Admin/Settings.vue"],"sourcesContent":["import { onBeforeMount, onMounted } from 'vue'\nimport { useUserStore } from \"@/Stores/UserStore\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useVideoPlayerStore } from \"@/Stores/VideoPlayerStore\"\nimport { Inertia } from \"@inertiajs/inertia\"\n\nexport function usePageSetup(pageName) {\n    const userStore = useUserStore()\n    const appSettingStore = useAppSettingStore()\n    const videoPlayerStore = useVideoPlayerStore()\n\n    appSettingStore.currentPage = pageName\n    appSettingStore.showFlashMessage = true\n    appSettingStore.pageIsHidden = false\n\n    if (userStore.isMobile) {\n        appSettingStore.ott = 0\n    }\n\n    videoPlayerStore.makeVideoTopRight()\n\n    let reloadPage = () => {\n        if (appSettingStore.pageReload) {\n            appSettingStore.pageReload = false\n            window.location.reload(true);\n        }\n    };\n\n    onBeforeMount(() => {\n        reloadPage()\n    });\n\n    onMounted(() => {\n        // Check if the URL contains query strings\n        const hasQueryStrings = window.location.search !== '';\n\n        // Only scroll into view if there are no query strings\n        if (!hasQueryStrings) {\n            const topDiv = document.getElementById(\"topDiv\")\n            if (topDiv) {\n                topDiv.scrollIntoView()\n            }\n        }\n        // Only update if we're not already on this page to avoid overwriting with the current URL\n        appSettingStore.setPrevUrl()\n        appSettingStore.noLayout = false\n        Inertia.reload()\n\n    });\n}\n","import script from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"mx-4 my-4\">\n    <div class=\"alert alert-info mt-4\"\n         v-if=\"props.flash.message\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" class=\"stroke-current shrink-0 w-6 h-6\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n      </svg>\n      <span>{{ props.flash.message }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-success mt-4 mx-3\"\n         v-if=\"props.flash.success\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.success }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-warning mt-4 mx-3\"\n         v-if=\"props.flash.warning\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"/>\n      </svg>\n      <span>{{ props.flash.warning }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-error mt-4 mx-3\"\n         v-if=\"props.flash.error\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.error }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n  </div>\n\n</template>\n\n<script setup>\nimport { Inertia } from \"@inertiajs/inertia\"\nimport { computed } from \"vue\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\n\nconst appSettingStore = useAppSettingStore()\n\nappSettingStore.showFlashMessage = true\n\nlet props = defineProps({\n  flash: Object,\n\n})\n\nconst messageType = computed(() => ({\n  'text-green-700 bg-green-100 dark:bg-green-200 dark:text-green-800': props.flash.success,\n  'text-blue-700 bg-blue-100 dark:bg-blue-200 dark:text-blue-800': props.flash.message,\n  'text-orange-700 bg-orange-100 dark:bg-orange-200 dark:text-orange-800': props.flash.warning,\n  'text-red-700 bg-red-100 dark:bg-red-200 dark:text-red-800': props.flash.error,\n}))\n\nconst clearFlashMessage = async () => {\n  await Inertia.post(route('flash.clear'));\n  Inertia.reload();\n};\n</script>\n","import script from \"./ValidationErrors.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ValidationErrors.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { computed } from 'vue';\nimport { usePage } from '@inertiajs/inertia-vue3';\n\nconst errors = computed(() => usePage().props.value.errors);\nconst hasErrors = computed(() => Object.keys(errors.value).length > 0);\n</script>\n\n<template>\n    <div v-if=\"hasErrors\">\n        <div class=\"font-medium text-red-600\">\n            Whoops! Something went wrong.\n        </div>\n\n        <ul class=\"mt-3 list-disc list-inside text-sm text-red-600\">\n            <li v-for=\"(error, key) in errors\" :key=\"key\">\n                {{ error }}\n            </li>\n        </ul>\n    </div>\n</template>\n","import script from \"./ServerTime.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ServerTime.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n    <p class=\"mb-2\">\n      Server Time: {{ serverTime }}\n    </p>\n    <p class=\"mb-2\">\n      Local Time: {{ localTime }}\n    </p>\n    <p class=\"mb-2\">\n      User's Timezone: {{ userTimezone }}\n    </p>\n  </div>\n</template>\n\n<script setup>\nimport { onMounted, ref } from \"vue\"\n\nlet serverTime = ref('')\nlet localTime = ref('')\n\nconst updateLocalTime = () => {\n  const userLocalDate = new Date()\n  localTime.value = userLocalDate.toLocaleString() // Format as desired\n};\n\nasync function fetchServerTime() {\n  try {\n    const response = await axios.get('/admin/server-time') // Replace with your actual API endpoint\n    // Assuming your server returns the time as a string\n    serverTime.value = response.data.serverTime\n    console.log(serverTime.value)\n  } catch (error) {\n    console.error('Error fetching server time', error)\n  }\n}\n\nonMounted(() => {\n  fetchServerTime()\n  updateLocalTime()\n  getUserTimezone()\n})\n\nconst userTimezone = ref('')\n\nconst getUserTimezone = () => {\n  // Use the Intl object to get the user's timezone\n  userTimezone.value = Intl.DateTimeFormat().resolvedOptions().timeZone\n};\n\n</script>\n","import script from \"./Settings.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Settings.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n\n  <Head :title=\"`Administrative Settings`\"/>\n\n  <div id=\"topDiv\" class=\"place-self-center flex flex-col gap-y-3\">\n    <div\n        class=\"w-fit lg:w-3/4 left-0 right-0 mx-auto bg-white dark:bg-gray-800 rounded text-black dark:text-gray-50 mt-6 p-5\">\n\n      <Message v-if=\"appSettingStore.showFlashMessage\" :flash=\"$page.props.flash\"/>\n\n      <header>\n        <div class=\"flex justify-between mb-3\">\n          <div class=\"mb-4\">\n            <h1 class=\"text-3xl font-semibold\">Administrative Settings</h1>\n          </div>\n          <div>\n            <div>\n              <button\n                  @click=\"appSettingStore.btnRedirect('/dashboard')\"\n                  class=\"bg-black hover:bg-gray-800 text-white font-semibold ml-2 mt-2 px-4 py-2 rounded disabled:bg-gray-400 h-max w-max\"\n              >Dashboard\n              </button>\n            </div>\n          </div>\n        </div>\n      </header>\n\n      <ServerTime/>\n\n      <div class=\"bg-gray-300 dark:bg-gray-900 rounded pb-8 p-3 mb-6 mx-2 border-b border-2\">\n        <div class=\"font-semibold text-xl pb-2\">Administrator only links</div>\n        <div class=\"flex flex-wrap md:flex-row justify-items-start gap-2\">\n          <button\n              @click=\"appSettingStore.btnRedirect(`/users`)\"\n              class=\"bg-blue-600 hover:bg-blue-500 text-white mt-1 p-2 col-span-1 rounded disabled:bg-gray-400\"\n          >All Users\n          </button>\n          <button\n              @click=\"appSettingStore.btnRedirect(`/admin/episodes`)\"\n              class=\"bg-blue-600 hover:bg-blue-500 text-white mt-1 p-2 col-span-1 rounded disabled:bg-gray-400\"\n          >All Episodes\n          </button>\n          <button\n              @click=\"appSettingStore.btnRedirect(`/admin/shows`)\"\n              class=\"bg-blue-600 hover:bg-blue-500 text-white mt-1 p-2 col-span-1 rounded disabled:bg-gray-400\"\n          >All Shows\n          </button>\n          <button\n              @click=\"appSettingStore.btnRedirect(`/admin/teams`)\"\n              class=\"bg-blue-600 hover:bg-blue-500 text-white mt-1 p-2 col-span-1 rounded disabled:bg-gray-400\"\n          >All Teams\n          </button>\n          <button\n              @click=\"appSettingStore.btnRedirect(`/admin/channels`)\"\n              class=\"bg-blue-600 hover:bg-blue-500 text-white mt-1 p-2 rounded disabled:bg-gray-400\"\n          >All Channels\n          </button>\n          <button\n              @click=\"appSettingStore.btnRedirect(`/admin/mistServerApi`)\"\n              class=\"bg-blue-600 hover:bg-blue-500 text-white mt-1 p-2 rounded disabled:bg-gray-400\"\n          >MistServer API\n          </button>\n          <a\n              :href=\"`http://`+props.mist_server_ip+`:4242`\" target=\"_blank\"\n              class=\"bg-blue-600 hover:bg-blue-500 text-white mt-1 p-2 rounded disabled:bg-gray-400\"\n          >MistServer Interface</a>\n          <button\n              @click=\"appSettingStore.btnRedirect(`/admin/images`)\"\n              class=\"bg-blue-600 hover:bg-blue-500 text-white mt-1 p-2 rounded disabled:bg-gray-400\"\n          >Images\n          </button>\n          <button\n              @click=\"appSettingStore.btnRedirect(`/videoupload`)\"\n              class=\"bg-blue-600 hover:bg-blue-500 text-white mt-1 p-2 rounded disabled:bg-gray-400\"\n          >Video Upload\n          </button>\n          <button\n              @click=\"appSettingStore.btnRedirect(`/movies/create`)\"\n              class=\"bg-blue-600 hover:bg-blue-500 text-white mt-1 mx-2 px-4 py-2 rounded disabled:bg-gray-400\"\n          >Add a Movie\n          </button>\n          <button\n              @click=\"appSettingStore.btnRedirect(`/admin/invite_codes`)\"\n              class=\"bg-blue-600 hover:bg-blue-500 text-white mt-1 mx-2 px-4 py-2 rounded disabled:bg-gray-400\"\n          >Invite Codes\n          </button>\n          <button\n              @click=\"getEpisodesFromEmbedCodes\"\n              class=\"bg-blue-600 hover:bg-blue-500 text-white mt-1 mx-2 px-4 py-2 rounded disabled:bg-gray-400 disabled:no-cursor\"\n              :disabled=\"!getAllEpisodesButtonActive\"\n          >Get All Episode Videos From Embed Codes\n          </button>\n          <!--                    <Link-->\n          <!--                        :href=\"`/admin/phpmyinfo`\"><button-->\n          <!--                        class=\"bg-blue-600 hover:bg-blue-500 text-white mt-1 mx-2 px-4 py-2 rounded disabled:bg-gray-400\"-->\n          <!--                    >phpinfo()</button>-->\n          <!--                    </Link>-->\n\n        </div>\n\n      </div>\n\n      <div>\n        <form @submit.prevent=\"submit\">\n          <div class=\"mb-6\">\n            <label class=\"block mb-2 uppercase font-bold text-xs text-gray-700 dark:text-gray-300\"\n                   for=\"cdn_endpoint\"\n            >\n              CDN ENDPOINT\n            </label>\n\n            <input v-model=\"form.cdn_endpoint\"\n                   class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                   type=\"text\"\n                   name=\"cdn_endpoint\"\n                   id=\"cdn_endpoint\"\n            >\n            <div v-if=\"form.errors.cdn_endpoint\" v-text=\"form.errors.cdn_endpoint\"\n                 class=\"text-xs text-red-600 mt-1\"></div>\n          </div>\n          <div class=\"mb-6\">\n            <label class=\"block mb-2 uppercase font-bold text-xs text-gray-700 dark:text-gray-300\"\n                   for=\"cloud_folder\"\n            >\n              CLOUD FOLDER\n            </label>\n\n            <div class=\"flex flex-row\">\n              <span class=\"pt-2 mr-2\">/ </span>\n              <input v-model=\"form.cloud_folder\"\n                     class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                     type=\"text\"\n                     name=\"cloud_folder\"\n                     id=\"cloud_folder\"\n              >\n            </div>\n            <span\n                class=\"text-xs\">NOTE: The forward slash is already entered in the backend. Just type the folder name.</span>\n\n            <div v-if=\"form.errors.cloud_folder\" v-text=\"form.errors.cloud_folder\"\n                 class=\"text-xs text-red-600 mt-1\"></div>\n          </div>\n          <div class=\"mb-6\">\n            <label class=\"block mb-2 uppercase font-bold text-xs text-gray-700 dark:text-gray-300\"\n                   for=\"cloud_folder\"\n            >\n              FIRST PLAY VIDEO SOURCE\n            </label>\n\n            <div class=\"flex flex-row\">\n              <input v-model=\"form.first_play_video_source\"\n                     class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                     type=\"text\"\n                     name=\"first_play_video_source\"\n                     id=\"first_play_video_source\"\n              >\n            </div>\n            <span class=\"text-xs\"></span>\n\n            <div v-if=\"form.errors.first_play_video_source\" v-text=\"form.errors.first_play_video_source\"\n                 class=\"text-xs text-red-600 mt-1\"></div>\n          </div>\n          <div class=\"mb-6\">\n            <label class=\"block mb-2 uppercase font-bold text-xs text-gray-700 dark:text-gray-300\"\n                   for=\"cloud_folder\"\n            >\n              FIRST PLAY VIDEO SOURCE TYPE\n            </label>\n\n            <div class=\"flex flex-row\">\n              <input v-model=\"form.first_play_video_source_type\"\n                     class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                     type=\"text\"\n                     name=\"first_play_video_source\"\n                     id=\"first_play_video_source\"\n              >\n            </div>\n            <span class=\"text-xs\">e.g., video/mp4 or application/x-mpegURL</span>\n\n            <div v-if=\"form.errors.first_play_video_source\" v-text=\"form.errors.first_play_video_source\"\n                 class=\"text-xs text-red-600 mt-1\"></div>\n          </div>\n          <div class=\"mb-6\">\n            <label class=\"block mb-2 uppercase font-bold text-xs text-gray-700 dark:text-gray-300\"\n                   for=\"cloud_folder\"\n            >\n              VIDEO NAME\n            </label>\n\n            <div class=\"flex flex-row\">\n              <input v-model=\"form.first_play_video_name\"\n                     class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                     type=\"text\"\n                     name=\"first_play_video_name\"\n                     id=\"first_play_video_name\"\n              >\n            </div>\n            <span class=\"text-xs\"></span>\n\n            <div v-if=\"form.errors.first_play_video_name\" v-text=\"form.errors.first_play_video_name\"\n                 class=\"text-xs text-red-600 mt-1\"></div>\n          </div>\n          <div class=\"mb-6\">\n            <label class=\"block mb-2 uppercase font-bold text-xs text-gray-700 dark:text-gray-300\"\n                   for=\"cloud_folder\"\n            >\n              CHANNEL ID\n            </label>\n\n            <div class=\"flex flex-row\">\n              <input v-model=\"form.first_play_channel_id\"\n                     class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                     type=\"text\"\n                     name=\"first_play_channel_id\"\n                     id=\"first_play_channel_id\"\n              >\n            </div>\n            <span class=\"text-xs text-orange-500\">This needs to become a dropdown of channels to select.</span>\n\n            <div v-if=\"form.errors.first_play_channel_id\" v-text=\"form.errors.first_play_channel_id\"\n                 class=\"text-xs text-red-600 mt-1\"></div>\n          </div>\n          <div class=\"mb-6\">\n            <label class=\"block mb-2 uppercase font-bold text-xs text-gray-700 dark:text-gray-300\"\n                   for=\"mist_server_ip\"\n            >\n              MIST SERVER IP ADDRESS\n            </label>\n\n            <div class=\"flex flex-row\">\n              <input v-model=\"form.mist_server_ip\"\n                     class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                     type=\"text\"\n                     name=\"mist_server_ip\"\n                     id=\"mist_server_ip\"\n              >\n            </div>\n            <div v-if=\"form.errors.mist_server_ip\" v-text=\"form.errors.mist_server_ip\"\n                 class=\"text-xs text-red-600 mt-1\"></div>\n          </div>\n          <div class=\"mb-6\">\n            <label class=\"block mb-2 uppercase font-bold text-xs text-gray-700 dark:text-gray-300\"\n                   for=\"mist_server_api_url\"\n            >\n              MIST SERVER API URL\n            </label>\n\n            <div class=\"flex flex-row\">\n              <input v-model=\"form.mist_server_api_url\"\n                     class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                     type=\"text\"\n                     name=\"mist_server_api_url\"\n                     id=\"mist_server_api_url\"\n              >\n            </div>\n            <div v-if=\"form.errors.mist_server_api_url\" v-text=\"form.errors.mist_server_api_url\"\n                 class=\"text-xs text-red-600 mt-1\"></div>\n          </div>\n          <div class=\"mb-6\">\n            <label class=\"block mb-2 uppercase font-bold text-xs text-gray-700 dark:text-gray-300\"\n                   for=\"mist_server_username\"\n            >\n              MIST SERVER USERNAME\n            </label>\n\n            <div class=\"flex flex-row\">\n              <input v-model=\"form.mist_server_username\"\n                     class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                     type=\"text\"\n                     name=\"mist_server_username\"\n                     id=\"mist_server_username\"\n              >\n            </div>\n            <div v-if=\"form.errors.mist_server_username\" v-text=\"form.errors.mist_server_username\"\n                 class=\"text-xs text-red-600 mt-1\"></div>\n          </div>\n          <div class=\"mb-6\">\n            <label class=\"block mb-2 uppercase font-bold text-xs text-gray-700 dark:text-gray-300\"\n                   for=\"mist_server_password\"\n            >\n              MIST SERVER PASSWORD\n            </label>\n\n            <div class=\"flex flex-row\">\n              <input v-model=\"form.mist_server_password\"\n                     class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                     type=\"password\"\n                     name=\"mist_server_password\"\n                     id=\"mist_server_password\"\n              >\n            </div>\n            <div v-if=\"form.errors.mist_server_password\" v-text=\"form.errors.mist_server_password\"\n                 class=\"text-xs text-red-600 mt-1\"></div>\n          </div>\n\n          <div class=\"flex justify-end my-6 mr-6\">\n            <JetValidationErrors class=\"mr-4\"/>\n            <button\n                @click=\"submit\"\n                class=\"bg-blue-600 hover:bg-blue-500 text-white rounded py-2 px-4\"\n                :disabled=\"form.processing\"\n            >\n              Save\n            </button>\n          </div>\n\n        </form>\n\n\n        <div class=\"w-full flex flex-wrap mb-4 p-2 bg-amber-800 text-white\">\n          <span>Change Max Video Upload Size. convert Bytes to KB, MB, GB, TB.</span>\n          <span>Update Video Uploader with the size.</span>\n        </div>\n\n        <div class=\"w-full flex flex-wrap mb-4 p-2 bg-amber-800 text-white\">\n          Content licenses\n        </div>\n\n        <div class=\"w-full flex flex-wrap mb-4 p-2 bg-amber-800 text-white\">\n          Episode Statuses\n        </div>\n\n        <div class=\"w-full flex flex-wrap mb-4 p-2 bg-amber-800 text-white\">\n          Show Statuses\n        </div>\n\n        <div class=\"w-full flex flex-wrap mb-4 p-2 bg-amber-800 text-white\">\n          Channels. Display list of channels. Click channel name to go to the channel playlist edit page.\n          Grid style, 1 column mobile, 2 column tablet, 3 column lg, 4 column xl\n          Rows: Times (next 24 hours) --> can scroll up to 72 hours ahead or 72 hours back.\n          Columns: Days (next 7 days). Need new Pages folder: Channels/Index, Channels/Create, Channels/Edit,\n          ch/channelId (e.g., ch/01).\n\n        </div>\n      </div>\n\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { Inertia } from \"@inertiajs/inertia\"\nimport { ref } from \"vue\"\nimport { useForm } from \"@inertiajs/inertia-vue3\"\nimport { usePageSetup } from '@/Utilities/PageSetup'\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport JetValidationErrors from '@/Jetstream/ValidationErrors'\nimport ServerTime from \"@/Components/Pages/Admin/ServerTime\"\nimport Message from \"@/Components/Global/Modals/Messages\"\n\nusePageSetup('Admin/Settings')\n\nconst appSettingStore = useAppSettingStore()\n\nlet props = defineProps({\n  id: Number,\n  cdn_endpoint: String,\n  cloud_folder: String,\n  first_play_video_source: String,\n  first_play_video_source_type: String,\n  first_play_video_name: String,\n  first_play_channel_id: String,\n  mist_server_ip: String,\n  mist_server_api_url: String,\n  mist_server_username: String,\n  mist_server_password: String,\n  messageType: String,\n});\n\nlet form = useForm({\n  id: props.id,\n  cdn_endpoint: props.cdn_endpoint,\n  cloud_folder: props.cloud_folder,\n  first_play_video_source: props.first_play_video_source,\n  first_play_video_source_type: props.first_play_video_source_type,\n  first_play_video_name: props.first_play_video_name,\n  mist_server_ip: props.mist_server_ip,\n  mist_server_api_url: props.mist_server_api_url,\n  mist_server_username: props.mist_server_username,\n  mist_server_password: props.mist_server_password,\n})\n\nlet submit = () => {\n  form.put(route('admin.settings'));\n};\n\nlet getAllEpisodesButtonActive = ref(false);\n\nfunction getEpisodesFromEmbedCodes() {\n  Inertia.post('getVideosFromEmbedCodes')\n  getAllEpisodesButtonActive = false;\n}\n\n</script>\n"],"names":["usePageSetup","pageName","userStore","useUserStore","appSettingStore","useAppSettingStore","videoPlayerStore","useVideoPlayerStore","currentPage","showFlashMessage","pageIsHidden","isMobile","ott","makeVideoTopRight","onBeforeMount","pageReload","window","location","reload","onMounted","search","topDiv","document","getElementById","scrollIntoView","setPrevUrl","noLayout","Inertia","props","__props","clearFlashMessage","computed","flash","success","message","warning","error","_ref","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","post","route","stop","apply","arguments","errors","usePage","value","hasErrors","Object","keys","length","serverTime","ref","localTime","_fetchServerTime","response","axios","get","sent","data","console","log","t0","userLocalDate","fetchServerTime","Date","toLocaleString","getUserTimezone","userTimezone","Intl","DateTimeFormat","resolvedOptions","timeZone","form","useForm","id","cdn_endpoint","cloud_folder","first_play_video_source","first_play_video_source_type","first_play_video_name","mist_server_ip","mist_server_api_url","mist_server_username","mist_server_password","submit","put","getAllEpisodesButtonActive","getEpisodesFromEmbedCodes"],"sourceRoot":""}
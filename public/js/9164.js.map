{"version":3,"file":"js/9164.js","mappings":";uUACA,gjNACO,IAAIA,GAAeC,UAAAA,IAAY,YAAa,CAC/CC,MAAO,iBAAO,CACVC,GAAI,EACJC,KAAM,GACNC,YAAa,EACbC,gBAAiB,EACjBC,qBAAsB,GACtBC,eAAgB,GAChBC,YAAa,GACbC,WAAY,GACZC,SAAU,CAAC,GACXC,SAAU,GACVC,QAAS,UACTC,cAAe,GACfC,SAAU,EACVC,KAAM,GACNC,mBAAoBC,QAEvB,EAEDC,QAAS,CACCC,KAAI,WAAG,IAtBrB,EAsBqB,cAtBrB,EAsBqB,8GACK,oCAA0B,OAApCC,EAAI,EAAH,KACL,EAAKC,OAASD,EAAC,QAAS,0CAxBpC,gLAyBQ,GAGJE,QAAS,CACL,8qECzBR,2GC6JIC,GAAmBC,EAAAA,EAAAA,KACnBC,GAAYC,EAAAA,EAAAA,KACZC,GAAY5B,EAAAA,EAAAA,KACZ6B,GAAYC,EAAAA,EAAAA,KAEhBN,EAAiBO,YAAc,YAE/BC,EAAAA,EAAAA,gBAAc,WACVH,EAAUI,mBAAqB,CACnC,KAEAC,EAAAA,EAAAA,YAAU,WACNV,EAAiBW,oBACoB,IAAjCN,EAAUI,qBACVG,SAASC,eAAe,UAAUC,iBAClCT,EAAUI,qBAElB,IASiBM,IACbC,IACAC,IACAC,IACAC,KAiCJjB,EAAUkB,cAAcC,EAAMC,MAC9BpB,EAAUqB,cAAcF,EAAMG,MAC9BpB,EAAUd,cAAgB+B,EAAMI,OAEhC,IAAIC,GAAOC,EAAAA,EAAAA,IAAQ,CACfhD,GAAI0C,EAAMO,QAAQjD,GAClBC,KAAMyC,EAAMO,QAAQhD,KACpBiD,eAAgBR,EAAMO,QAAQC,eAC9B5C,YAAaoC,EAAMO,QAAQ3C,YAC3B6C,MAAOT,EAAMO,QAAQE,MACrBC,QAASV,EAAMO,QAAQG,QACvBC,gBAAiBX,EAAMO,QAAQI,gBAC/BC,eAAgBZ,EAAMO,QAAQK,eAC9BC,sBAAuBb,EAAMO,QAAQM","sources":["webpack:///./resources/js/Stores/ShowStore.js","webpack:///./resources/js/Pages/Shows/{$id}/Episodes/{$id}/Upload.vue?d1e3","webpack:///./resources/js/Pages/Shows/{$id}/Episodes/{$id}/Upload.vue"],"sourcesContent":["import { defineStore } from \"pinia\";\n\nexport let useShowStore = defineStore('showStore', {\n    state: () => ({\n        id: 0,\n        name: '',\n        category_id: 0,\n        category_sub_id: 0,\n        category_description: '',\n        sub_categories: [],\n        description: '',\n        posterName: [],\n        posterId: [0],\n        episodes: [],\n        team_id: 'team id',\n        episodePoster: '',\n        noteEdit: 0,\n        note: '',\n        saveNoteProcessing: Boolean,\n\n    }),\n\n    actions: {\n        async fill() {\n            let r = await import('@/Json/show.json');\n            this.$state = r.default;\n        }\n    },\n\n    getters: {\n        //\n    }\n});\n","import script from \"./Upload.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Upload.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n\n    <Head :title=\"`Upload Video for ${props.episode.name}`\"/>\n\n    <div id=\"topDiv\"></div>\n    <div class=\"place-self-center flex flex-col gap-y-3\">\n        <div class=\"bg-dark text-light p-5 mb-10\">\n\n            <div class=\"bg-black text-red-600 font-bold text-xl p-4 mb-4 w-full text-center\">\n                This page will be removed.\n            </div>\n\n            <header>\n\n                <div class=\"p-4 mb-4 text-sm text-green-700 bg-green-100 rounded-lg dark:bg-green-200 dark:text-green-800\"\n                role=\"alert\"\n                v-if=\"props.message\">\n                <span class=\"font-medium\">\n                                    {{ props.message }}\n                                </span>\n                </div>\n\n                <div class=\"flex justify-between mb-6\">\n                    <div>\n                        <div class=\"font-bold mb-4 text-orange-700\">UPLOAD VIDEO</div>\n                        <h1 class=\"text-3xl\">\n                            <Link :href=\"`/shows/${show.slug}/episode/${episode.slug}`\" class=\"text-orange-700 font-bold\">{{ episode.name }}</Link>\n                        </h1>\n                    </div>\n                    <div>\n                        <Link :href=\"`/shows/${show.slug}/episode/${episode.slug}/manage`\">\n                            <button\n                                class=\"px-4 py-2 text-white bg-orange-600 hover:bg-orange-500 rounded-lg\"\n                            >Cancel\n                            </button>\n                        </Link>\n\n                    </div>\n                </div>\n\n\n                <div>\n                    <div class=\"\"><span class=\"text-xs uppercase font-semibold\">Show: </span>\n                        <Link :href=\"`/shows/${show.slug}/manage`\">\n                            {{ show.name }}\n                        </Link>\n                    </div>\n                    <div class=\"\"><span class=\"text-xs uppercase font-semibold\">Team: </span>\n                        <Link :href=\"`/teams/${team.slug}/manage`\">\n                            {{ team.name }}\n                        </Link>\n                    </div>\n                    <div class=\"mb-6\"><span class=\"text-xs uppercase font-semibold\">Episode #: </span>\n                        <span v-if=\"episode.episode_number\">{{ episode.episode_number }}</span>\n                        <span v-if=\"!episode.episode_number\">{{ episode.id }}</span>\n                    </div>\n                </div>\n\n\n            </header>\n\n\n            <div class=\"flex flex-col\">\n                <div class=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\n                    <div class=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\n                        <div class=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\n\n\n                            <div v-if=\"form.errors.name\" v-text=\"form.errors.name\"\n                                 class=\"bg-red-600 p-2 w-full text-white font-semibold mt-1\"></div>\n                            <div v-if=\"form.errors.description\" v-text=\"form.errors.description\"\n                                 class=\"bg-red-600 p-2 w-full text-white font-semibold mt-1\"></div>\n                            <div v-if=\"form.errors.episode_number\" v-text=\"form.errors.episode_number\"\n                                 class=\"bg-red-600 p-2 w-full text-white font-semibold mt-1\"></div>\n                            <div v-if=\"form.errors.notes\" v-text=\"form.errors.notes\"\n                                 class=\"bg-red-600 p-2 w-full text-white font-semibold mt-1\"></div>\n                            <div v-if=\"form.errors.video_file_url\" v-text=\"form.errors.video_file_url\"\n                                 class=\"bg-red-600 p-2 w-full text-white font-semibold mt-1\"></div>\n                            <div v-if=\"form.errors.video_file_embed_code\" v-text=\"form.errors.video_file_embed_code\"\n                                 class=\"bg-red-600 p-2 w-full text-white font-semibold mt-1\"></div>\n\n\n\n\n<!-- Begin grid 2-col -->\n                            <div class=\"grid grid-cols-1 sm:grid-cols-2 space-x-6 p-6\">\n\n<!--Right Column-->\n                                <div>\n                                    <div>\n                                        <div class=\"max-full mx-auto mt-2 mb-6 bg-gray-200 p-6 text-dark\">\n                                            <div class=\"mb-3 bg-orange-300 py-1 px-2 text-xs font-semibold text-red-800\">\n                                                In development. Not currently working.\n                                            </div>\n                                            <h2 class=\"text-xl font-semibold text-gray-800\">Upload Video</h2>\n\n                                            <ul class=\"pb-4 text-gray-800\">\n                                                <li>Max Video Length: <span class=\"text-orange-400\">4 hours</span></li>\n                                                <li>File Types accepted: <span class=\"text-orange-400\">mp4, webm, ogg</span></li>\n                                            </ul>\n                                            <div class=\"flex space-y-3\">\n                                                <div class=\"mb-6\">\n                                                    <img v-if=\"!props.episode.video_thumbnail\"\n                                                         :src=\"'/storage/images/EBU_Colorbars.svg.png'\"\n                                                         :key=\"video_thumbnail\" />\n\n                                                    <img v-if=\"props.episode.video_thumbnail\"\n                                                         :src=\"'/storage/images/' + props.episode.video_thumbnail\"\n                                                         :key=\"video_thumbnail\" />\n                                                </div>\n                                            </div>\n\n<!--                                            <file-pond-->\n<!--                                                name=\"poster\"-->\n<!--                                                ref=\"pond\"-->\n<!--                                                label-idle=\"Click to choose video, or drag here...\"-->\n<!--                                                @init=\"filepondInitialized\"-->\n<!--                                                server=\"/showEpisodesUploadPoster\"-->\n<!--                                                accepted-file-types=\"image/jpg, image/jpeg, image/png\"-->\n<!--                                                @processfile=\"handleProcessedFile\"-->\n<!--                                                max-file-size=\"10MB\"-->\n<!--                                            />-->\n                                        </div>\n\n                                    </div>\n\n                                </div>\n<!-- End Right Column -->\n                            </div>\n<!-- End grid 2-col -->\n\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n\n\n        </div>\n    </div>\n\n</template>\n\n<script setup>\nimport {onBeforeMount, onMounted} from \"vue\"\nimport {useForm} from \"@inertiajs/inertia-vue3\"\n\nimport { Inertia } from \"@inertiajs/inertia\"\nimport { useVideoPlayerStore } from \"@/Stores/VideoPlayerStore.js\"\nimport { useTeamStore } from \"@/Stores/TeamStore.js\"\nimport { useShowStore } from \"@/Stores/ShowStore.js\"\n\nimport vueFilePond, { setOptions } from 'vue-filepond'\nimport FilePondPluginFileValidateType from \"filepond-plugin-file-validate-type\"\nimport FilePondPluginFileValidateSize from \"filepond-plugin-file-validate-size\"\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\"\nimport FilePondPluginFileMetadata from \"filepond-plugin-file-metadata\"\nimport 'filepond/dist/filepond.min.css'\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.min.css'\nimport {useUserStore} from \"@/Stores/UserStore\";\n\nlet videoPlayerStore = useVideoPlayerStore()\nlet teamStore = useTeamStore()\nlet showStore = useShowStore()\nlet userStore = useUserStore()\n\nvideoPlayerStore.currentPage = 'episodes'\n\nonBeforeMount(() => {\n    userStore.scrollToTopCounter = 0;\n})\n\nonMounted(() => {\n    videoPlayerStore.makeVideoTopRight();\n    if (userStore.scrollToTopCounter === 0 ) {\n        document.getElementById(\"topDiv\").scrollIntoView()\n        userStore.scrollToTopCounter ++;\n    }\n});\n\nlet props = defineProps({\n    episode: Object,\n    show: Object,\n    team: Object,\n    poster: String,\n});\n\nconst FilePond = vueFilePond(\n    FilePondPluginFileValidateType,\n    FilePondPluginFileValidateSize,\n    FilePondPluginImagePreview,\n    FilePondPluginFileMetadata\n);\n\n////////\n// tec21: this isn't working...\n// I wasn't able to set metadata\n// or get metadata back from filepond.\n//\n// FilePond.setOptions = ({\n//     fileMetadataObject: {\n//         episode_id: '1',\n//     },\n// });\n\nfunction filepondInitialized() {\n    console.log(\"Filepond is ready!\");\n    console.log('Filepond object:', FilePond);\n}\n\nfunction handleProcessedFile(error, file) {\n    if (error) {\n        console.log(\"Filepond processed file\");\n        console.log(error);\n        console.log(file);\n        return;\n    }\n\n    Inertia.reload({\n        only: ['poster'],\n    });\n\n}\n\nteamStore.setActiveTeam(props.team);\nteamStore.setActiveShow(props.show);\nshowStore.episodePoster = props.poster;\n\nlet form = useForm({\n    id: props.episode.id,\n    name: props.episode.name,\n    episode_number: props.episode.episode_number,\n    description: props.episode.description,\n    notes: props.episode.notes,\n    show_id: props.episode.show_id,\n    video_thumbnail: props.episode.video_thumbnail,\n    video_file_url: props.episode.video_file_url,\n    video_file_embed_code: props.episode.video_file_embed_code,\n});\n\nlet submit = () => {\n    form.put(route('showEpisodes.update', props.episode.slug));\n};\n\n\n</script>\n"],"names":["useShowStore","defineStore","state","id","name","category_id","category_sub_id","category_description","sub_categories","description","posterName","posterId","episodes","team_id","episodePoster","noteEdit","note","saveNoteProcessing","Boolean","actions","fill","r","$state","getters","videoPlayerStore","useVideoPlayerStore","teamStore","useTeamStore","showStore","userStore","useUserStore","currentPage","onBeforeMount","scrollToTopCounter","onMounted","makeVideoTopRight","document","getElementById","scrollIntoView","vueFilePond","FilePondPluginFileValidateType","FilePondPluginFileValidateSize","FilePondPluginImagePreview","FilePondPluginFileMetadata","setActiveTeam","props","team","setActiveShow","show","poster","form","useForm","episode","episode_number","notes","show_id","video_thumbnail","video_file_url","video_file_embed_code"],"sourceRoot":""}
{"version":3,"file":"js/6231.js","mappings":"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","sources":["webpack:///./resources/js/Stores/TeamStore.js","webpack:///./resources/js/Stores/VideoAuxPlayerStore.js","webpack:///./resources/js/Utilities/PageSetup.js","webpack:///./resources/js/Components/Pages/ShowEpisodes/Elements/EpisodeVideo.vue?3745","webpack:///./resources/js/Components/Pages/ShowEpisodes/Layout/ManageShowEpisodeTopBanner.vue?4950","webpack:///./resources/js/Components/Global/Modals/Messages.vue?dfe9","webpack:///./resources/js/Components/Global/Modals/Messages.vue","webpack:///./resources/js/Components/Global/Modals/PopUpModal.vue","webpack:///./resources/js/Components/Global/VideoPlayer/VideoJs/VideoJsAux.vue?cfd4","webpack:///./resources/js/Components/Global/VideoPlayer/VideoJs/VideoJsAux.vue","webpack:///./resources/js/Components/Pages/ShowEpisodes/Elements/EpisodeVideo.vue?ed00","webpack:///./resources/js/Components/Pages/ShowEpisodes/Elements/EpisodeVideo.vue","webpack:///./resources/js/Components/Pages/ShowEpisodes/Elements/ManageShowEpisodeNoticeModals.vue","webpack:///./resources/js/Components/Pages/ShowEpisodes/Layout/EpisodeFooter.vue?56db","webpack:///./resources/js/Components/Pages/ShowEpisodes/Layout/EpisodeFooter.vue","webpack:///./resources/js/Components/Pages/ShowEpisodes/Elements/ManageShowEpisodeDescription.vue","webpack:///./resources/js/Components/Pages/ShowEpisodes/Elements/ManageShowEpisodeBonusContent.vue","webpack:///./resources/js/Components/Pages/ShowEpisodes/Elements/ManageShowEpisodeBonusContent.vue?6499","webpack:///./resources/js/Components/Pages/ShowEpisodes/Layout/ManageShowEpisodeTopBanner.vue","webpack:///./resources/js/Components/Pages/ShowEpisodes/Layout/ManageShowEpisodeTopBanner.vue?5b99","webpack:///./resources/js/Components/Pages/ShowEpisodes/Layout/ManageShowEpisodeTopBanner.vue?8bad","webpack:///./resources/js/Components/Pages/ShowEpisodes/Layout/EpisodeHeader.vue?cda5","webpack:///./resources/js/Components/Pages/ShowEpisodes/Layout/EpisodeHeader.vue","webpack:///./resources/js/Components/Pages/ShowEpisodes/Layout/ManageShowEpisodeHeader.vue?4691","webpack:///./resources/js/Components/Pages/ShowEpisodes/Layout/ManageShowEpisodeHeader.vue","webpack:///./resources/js/Components/Pages/ShowEpisodes/Elements/ManageShowEpisodeRundown.vue","webpack:///./resources/js/Components/Pages/ShowEpisodes/Elements/ManageShowEpisodeNotes.vue","webpack:///./resources/js/Components/Global/VideoPlayer/VideoPlayerAux.vue","webpack:///./resources/js/Components/Global/VideoPlayer/VideoPlayerAux.vue?160b","webpack:///./resources/js/Components/Pages/ShowEpisodes/Elements/ManageShowEpisodeGoLive.vue?8d21","webpack:///./resources/js/Components/Pages/ShowEpisodes/Elements/ManageShowEpisodeGoLive.vue","webpack:///./resources/js/Pages/Shows/{$id}/Episodes/{$id}/Manage.vue?9504","webpack:///./resources/js/Pages/Shows/{$id}/Episodes/{$id}/Manage.vue"],"sourcesContent":["import {defineStore} from \"pinia\";\nimport {Inertia} from \"@inertiajs/inertia\";\n\nconst initialState = () => ({\n    id: 0,\n    name: '',\n    description: '',\n    slug: '',\n    totalSpots: '',\n    memberSpots: '',\n    teamCreator: [],\n    teamLeader: [],\n    members: [],\n    managers: [],\n    activeShow: [],\n    activeEpisode: [],\n    creators: [],\n    showModal: Boolean,\n    confirmDialog: false,\n    confirmManagerDialog: false,\n    selectedManagerName: '',\n    selectedManagerId: 0,\n    addManager: false,\n    removeManager: false,\n    deleteMemberName: '',\n    deleteMemberId: 0,\n    noteEdit: 0,\n    note: '',\n    saveNoteProcessing: Boolean,\n    // on the show episode manage page\n    // turn on the go live div\n    goLiveDisplay: false,\n    can: [],\n    openComponent: 'teamShows',\n})\n\nexport const useTeamStore = defineStore('teamStore', {\n    state: initialState,\n    actions: {\n        reset() {\n            // Reset the store to its original state (clear all data)\n            Object.assign(this, initialState());\n        },\n        // async fill() {\n        //     let r = await import('@/Json/team.json');\n        //     this.$state = r.default;\n        // },\n        setActiveTeam(team) {\n            this.id = team.id;\n            this.name = team.name;\n            this.description = team.description;\n            this.slug = team.slug;\n            this.totalSpots = team.totalSpots;\n            this.memberSpots = team.memberSpots;\n        },\n        setActiveShow(show) {\n            this.activeShow = show;\n        },\n        setActiveEpisode(episode) {\n            this.activeShow = episode;\n        },\n        // getCreators() {\n        //     Inertia.reload({ only: ['creators'] })\n        // },\n        deleteTeamMemberCancel() {\n            this.confirmDialog = false;\n        },\n        confirmTeamManagerCancel() {\n            this.confirmManagerDialog = false;\n        },\n        // loadTeamMembers(members){\n        //     this.members = members;\n        // }\n        deleteTeamMember() {\n            Inertia.visit(route('teams.removeTeamMember'), {\n                method: 'post',\n                data: {\n                    user_id: this.deleteMemberId,\n                    team_id: this.id,\n                    team_slug: this.slug\n                },\n            })\n        },\n        addTeamManager() {\n            Inertia.visit(route('teams.addTeamManager'), {\n                method: 'post',\n                data: {\n                    user_id: this.selectedManagerId,\n                    team_id: this.id,\n                    team_slug: this.slug\n                },\n            })\n            this.confirmManagerDialog = false;\n        },\n        removeTeamManager() {\n            Inertia.visit(route('teams.removeTeamManager'), {\n                method: 'post',\n                data: {\n                    user_id: this.selectedManagerId,\n                    team_id: this.id,\n                    team_slug: this.slug\n                },\n            })\n            this.confirmManagerDialog = false;\n        },\n        toggleGoLiveDisplay() {\n            this.goLiveDisplay = ! this.goLiveDisplay;\n        }\n    },\n\n    getters: {\n        spotsRemaining() {\n            if (this.totalSpots - this.memberSpots < 1){\n                return 0\n            }\n            return this.totalSpots - this.memberSpots;\n        },\n    }\n});\n\n\n// Another option for declaring specific data to return:\n// let data = r.default;\n//\n// import('@/Json/team.json').then(r => {\n// this.$patch({\n//     name: data.name,\n//     spots: data.spots,\n//     members: data.members\n// });\n// });\n","import { defineStore } from 'pinia'\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\nimport { useStreamStore } from '@/Stores/StreamStore'\nimport { useUserStore } from '@/Stores/UserStore'\nimport { useChannelStore } from '@/Stores/ChannelStore'\nimport { useShowStore } from '@/Stores/ShowStore'\nimport { useAudioStore } from '@/Stores/AudioStore'\nimport videojs from 'video.js'\nimport { usePage } from '@inertiajs/inertia-vue3'\nimport { nextTick } from 'vue'\nimport { useNotificationStore } from '@/Stores/NotificationStore'\n\nconst initialState = () => ({\n    mistServerUri: 'https://mist.nottv.io/', // tec21: 2024-02-09, if we don't start with the address here changing channels is really slow and buggy. Address for the MistServer listed in the Admin Settings saved in AppSetting\n    player: null, // Video.js player instance\n    eventListenersAttached: false, // Track if listeners are attached\n    videoPlayerLoaded: false,\n    class: '',\n    videoContainerClass: '',\n    // ottClass: 'OttClose',\n    videoSourceIdSrc1: '',\n    videoSourceIdSrc2: '',\n    videoSourceIdSrc3: '',\n    videoSourceTypeSrc1: '',\n    videoSourceTypeSrc2: '',\n    videoSourceTypeSrc3: '',\n    firstPlayVideoSourceType: '',\n    firstPlayVideoSource: '',\n    key: '',\n    videoName: '',\n    videoSource: '',\n    videoSourceType: '',\n    videoPoster: '',\n    nextSource: '',\n    previousSource: '',\n    currentView: '',\n    currentChannelId: 0,\n    currentChannelName: '',\n    currentShow: {},\n    currentShowEpisode: {},\n    currentVideo: {},\n    hasVideo: false,\n    controls: true,\n    muted: true,\n    paused: true,\n    // videoCurrentTime: '',\n    currentTime: 0, // Current playback time in seconds\n    duration: 0, // Total video duration in seconds\n    formattedTime: '00:00 / 00:00', // Formatted time string\n    blue: false, // DO NOT REMOVE\n    videoIsYoutube: false,\n    videoUploadComplete: false,\n})\n\nexport const useVideoAuxPlayerStore = defineStore('videoAuxPlayerStore', {\n    state: initialState,\n    actions: {\n        reset() {\n            // Reset the store to its original state (clear all data)\n            Object.assign(this, initialState())\n        },\n\n        async getMistServerUri() {\n            try {\n                let response = await axios.get('/mist-server/uri')\n                this.mistServerUri = response.data\n            } catch (error) {\n                console.error(error)\n            }\n        },\n\n        // Initialize or update the player instance\n        setPlayer(playerInstance) {\n            this.player = playerInstance\n            this.initializePlayer().then(() => {\n                this.attachEventListeners() // Attach event listeners after initialization\n            }).catch(error => {\n                console.error('Error during video player initialization:', error)\n            })\n        },\n\n        // Initialize the player with necessary settings and start playback\n        async initializePlayer() {\n            if (!this.player) {\n                console.error('Video.js player is not initialized.')\n                return\n            }\n\n            await nextTick() // Ensure Vue's DOM updates are processed\n\n            // Perform any necessary audio context and node setup\n            await useAudioStore().ensureAudioContextAndNodesReady(this.player)\n\n            // Apply initial player settings\n            this.player.controls(false)\n            this.player.muted(this.muted)\n\n            // Attempt to start playback\n            this.player.ready(() => {\n                this.player.play().then(() => {\n                    console.log('Playback started successfully')\n                }).catch(error => {\n                    console.error('Error trying to play the video:', error)\n                    // Handle the error (e.g., showing a user-friendly message)\n                })\n            })\n        },\n\n        // Attach event listeners to the player\n        attachEventListeners() {\n            if (!this.player || this.eventListenersAttached) {\n                console.log('Event listeners are already attached or video player is not initialized.')\n                return\n            }\n\n            this.player.on('timeupdate', this.handleTimeUpdate)\n            this.player.on('fullscreenchange', this.handleFullscreenChange)\n            this.player.on('play', this.handlePlay)\n            this.player.on('pause', this.handlePause)\n            this.player.on('error', this.handleError)\n\n            this.eventListenersAttached = true\n            console.log('Event listeners attached.')\n        },\n\n        // Detach event listeners from the player\n        detachEventListeners() {\n            if (!this.player || !this.eventListenersAttached) {\n                console.log('Event listeners are already detached or video player is not initialized.')\n                return\n            }\n\n            useAudioStore().stopAudioLevelMonitoring()\n            this.player.off('timeupdate', this.handleTimeUpdate)\n            this.player.off('fullscreenchange', this.handleFullscreenChange)\n            this.player.off('play', this.handlePlay)\n            this.player.off('pause', this.handlePause)\n            this.player.off('error', this.handleError)\n\n            this.eventListenersAttached = false\n            console.log('Event listeners detached.')\n        },\n\n        // Dispose of the player and perform cleanup\n        disposePlayer() {\n            if (!this.player) {\n                console.error('Video player is not initialized.')\n                return\n            }\n\n            this.detachEventListeners() // Detach event listeners if attached\n            this.player.dispose() // Dispose of the player instance\n            this.player = null // Reset the player state\n\n            // Optionally, stop audio level monitoring if linked to the player lifecycle\n            // const audioStore = useAudioStore();\n            // audioStore.stopAudioLevelMonitoring();\n\n            console.log('Video player disposed and cleaned up.')\n        },\n\n        // New method to prepare for a new video source\n        prepareForNewVideoSource(source) {\n            console.log('Preparing for new video source')\n\n            // Example: Clear any existing channel or video-specific state\n            useChannelStore().clearChannel()\n\n            // Reset or cleanup any existing video playback, if necessary\n            // this.resetPlayback();\n\n            // Load and play the new video source\n            this.loadNewVideo(source)\n        },\n\n        resetPlayback() {\n            if (this.player) {\n                this.player.pause()\n                this.player.muted(true)\n                this.player.currentTime(0) // Optionally reset the time\n                // Further cleanup logic here, if necessary\n                this.detachEventListeners() // Detach event listeners if attached\n            }\n        },\n\n        // Event handlers\n        handleTimeUpdate() {\n            // console.log('Handling timeupdate...');\n            // Implement your logic\n            this.currentTime = this.player.currentTime()\n            this.duration = this.player.duration()\n            const progressPercentage = (this.currentTime / this.duration) * 100\n            this.formattedTime = `${this.formatDuration(this.currentTime)} / ${this.formatDuration(this.duration)}`\n\n            // Update UI elements or emit events as needed\n            // Note: Direct manipulation of the DOM or component refs from the store is not recommended\n\n        },\n        // for the handleTimeUpdate eventHandler\n        formatDuration(durationInSeconds) {\n            const hours = Math.floor(durationInSeconds / 3600)\n            const minutes = Math.floor((durationInSeconds % 3600) / 60)\n            const seconds = Math.floor(durationInSeconds % 60)\n\n            const parts = [hours, minutes, seconds].map(part => part.toString().padStart(2, '0'))\n            return parts.join(':')\n        },\n        handleFullscreenChange() {\n            console.log('Handling fullscreenchange...')\n            // Implement your logic\n            this.player?.on('fullscreenchange', () => {\n                if (this.player.isFullscreen()) {\n                    // Video is entering fullscreen mode\n                    // You can add custom behavior for entering fullscreen here if needed\n                } else {\n                    // Video is exiting fullscreen mode\n                    // Check if the video was playing before entering fullscreen\n                    if (this.player.paused() === false) {\n                        // Resume playback after exiting fullscreen\n                        this.player.play()\n                    }\n                }\n            })\n        },\n        handlePlay() {\n            console.log('Handling play...')\n            // Implement your logic\n            this.player?.on('play', () => {\n                this.paused = false\n            })\n        },\n        handlePause() {\n            console.log('Handling pause...')\n            // Implement your logic\n            this.player?.on('pause', () => {\n                this.paused = true\n            })\n        },\n        handleError() {\n            console.log('Handling error...')\n            // Implement your logic\n            this.player?.on('error', function () {\n                const error = this.player.error()\n                console.error('Video.js Error:', error.code, error.message)\n            })\n        },\n        makeBlue() {\n            // for testing. DO NOT REMOVE.\n            this.blue = true\n        },\n        // Apparently this loadFirstPlay isn't being used...\n        // loadFirstPlay() {\n        //     const {props} = usePage()\n        //     let videoJs = videojs('aux-player')\n        //     const type = props.firstPlayVideoSourceType\n        //     const src = props.firstPlayVideoSource\n        //     videoJs.ready(() => {\n        //         videoJs.src({src, type})\n        //         videoJs.play().then(() => {\n        //             console.log('Playback started successfully')\n        //         }).catch(error => {\n        //             console.error('Error trying to play the video:', error)\n        //             // Handle the error (e.g., showing a user-friendly message)\n        //         })\n        //     })\n        //     console.log(type)\n        //     console.log(src)\n        // },\n        // Toggle mute state\n        toggleMute() {\n            if (this.muted) {\n                this.unMute()\n            } else {\n                this.mute()\n            }\n        },\n        // Mute the video\n        mute() {\n            if (this.player) {\n                this.player.muted(true)\n                this.muted = true\n                console.log('Video muted')\n            }\n        },\n        // Unmute the video\n        unMute() {\n            // const audioStore = useAudioStore()\n\n            if (this.player) {\n                // Prepare audio setup for when it's unmuted\n                // audioStore.userInteractionForAudio()\n\n                // Optionally, if fadeInAudioFromMuted is a gradual process,\n                // ensure this.player.muted(false) is called within that function.\n                // audioStore.fadeInAudioFromMuted()\n\n                this.player.muted(false)\n                this.muted = false\n                console.log('Video muted')\n            }\n        },\n        togglePlay() {\n            let videoJs = videojs('aux-player')\n\n            if (this.paused) {\n                videoJs.play()\n            } else {\n                videoJs.pause()\n            }\n        },\n        load() {\n            let videoJs = videojs('aux-player')\n            videoJs.load()\n        },\n        loadNewLiveSource(source, sourceType) {\n            let videoJs = videojs('aux-player')\n            let fullSourceUrl = this.mistServerUri + '/hls/' + source + '/index.m3u8'\n            videoJs.src({'src': fullSourceUrl, 'type': sourceType});\n            videoJs.play()\n        },\n        pause() {\n            let videoJs = videojs('aux-player')\n            videoJs.controls(false)\n            videoJs.pause()\n            this.paused = true\n        },\n        play() {\n            let videoJs = videojs('aux-player')\n\n            videoJs.play()\n            videoJs.controls(false)\n            this.paused = false\n        },\n        // next not built yet\n        next() {\n            let videoJs = videojs('aux-player')\n            videoJs.controls(false)\n            videoJs.src(this.nextSource)\n        },\n        // back not built yet\n        back() {\n            let videoJs = videojs('aux-player')\n            videoJs.controls(false)\n            videoJs.src(this.previousSource)\n        },\n        fullscreen() {\n            let videoJs = videojs('aux-player')\n            videoJs.controls(false)\n            // videoJs.fullscreen(this.previousSource)\n            videoJs.requestFullscreen()\n        },\n        getVideoCurrentTime() {\n            let videoJs = videojs('aux-player')\n            videoJs.controls(false)\n            this.videoCurrentTime = videoJs.currentTime\n        },\n\n\n        // This playNewVideo was created to access the audioContext\n        // which our audio compressor uses. This is new as of 2/2/2024\n        // ~ tec21\n\n        // playNewVideo(source) {\n        //     useChannelStore().clearChannel() // Reset or clear channel store\n        //     const videoJs = videojs('aux-player')\n        //     let videoSrc, videoSourceType\n        //     // Determine the source type and construct the source URL if necessary\n        //     if (source.mediaType === 'externalVideo') {\n        //         videoSrc = source.video_url // Direct URL to the video\n        //         videoSourceType = source.type // MIME type, e.g., 'video/youtube', 'video/mp4'\n        //     } else {\n        //         // Construct file path for internal videos\n        //         videoSrc = `${source.cdn_endpoint}${source.cloud_folder}${source.folder}/${source.file_name}`\n        //         videoSourceType = source.type // MIME type, typically 'video/mp4' for file-based sources\n        //     }\n        //     this.resumeAudioContextIfNeeded()\n        //     videoJs.src({src: videoSrc, type: videoSourceType})\n        //     videoJs.muted(false)\n        // },\n\n        // getSourceDetails(source) {\n        //     let videoSrc = source.video_url; // Directly access the video URL\n        //\n        //     // Default to 'video/mp4' if type is falsy ('', null, undefined, etc.)\n        //     let videoSourceType = source.type || 'video/mp4'\n        //\n        //     // Determine the mediaType and construct the source URL if necessary\n        //     if (source.mediaType === 'externalVideo') {\n        //         videoSrc = source.video_url // Direct URL to the video\n        //     } else {\n        //         // Internal video: construct the path, ensuring the file name is encoded\n        //         let encodedFileName = encodeURIComponent(source.file_name);\n        //         console.log(encodedFileName)\n        //         videoSrc = `${source.cdn_endpoint}${source.cloud_folder}${source.folder}/${encodedFileName}`\n        //     }\n        //     // Logic to determine videoSrc and videoSourceType\n        //     console.log(`Video Source: ${videoSrc}, Type: ${videoSourceType}`);\n        //     return { videoSrc, videoSourceType } // Return as an object\n        // },\n\n\n        getSourceDetails(source) {\n            let videoSrc, videoSourceType\n\n            console.log('getSourceDetails called with source:', source);\n\n            // Default to 'video/mp4' if type is not specified or is empty\n            videoSourceType = source.type || 'video/mp4'\n            console.log(`Determined Video Source Type: ${videoSourceType}`);\n\n            if (source.mediaType === 'externalVideo') {\n                // For external videos, use the URL as provided without encoding\n                videoSrc = source.video_url\n                console.log('Using external video source:', videoSrc);\n            } else {\n                console.log('CDN Endpoint:', source.cdn_endpoint);\n                console.log('Cloud Folder:', source.cloud_folder);\n                console.log('Folder:', source.folder);\n                console.log('File Name:', source.file_name);\n                // For internal videos, construct the URL from its components\n                // Here, we assume the cdn_endpoint, cloud_folder, and folder are correctly formatted\n                // and do not require encoding. Only the file_name might need encoding.\n                const basePath = `${source.cdn_endpoint}${source.cloud_folder}${source.folder}/`\n                // const encodedFileName = encodeURIComponent(source.file_name);\n                const fileName = source.file_name\n                videoSrc = basePath + fileName\n                console.log('Constructed internal video source:', videoSrc);\n                // If your server or CDN is configured to handle spaces in URLs without %20 encoding\n                // or if the original working URLs did not use standard URL encoding,\n                // you might adjust the encoding strategy here.\n                // For example, to replace spaces with %20 but leave other characters as-is:\n                // const fileNameForUrl = source.file_name.replace(/ /g, '%20');\n                // videoSrc = basePath + fileNameForUrl;\n            }\n\n            console.log(`Final Constructed Video Source: ${videoSrc}, Type: ${videoSourceType}`);\n            return {videoSrc, videoSourceType}\n        },\n\n\n        loadNewVideo(source) {\n            try {\n                let videoJs = videojs('aux-player');\n                console.log('LOAD NEW VIDEO');\n                const audioStore = useAudioStore();\n                // Correctly destructure the returned object to get videoSrc and videoSourceType\n                const {videoSrc, videoSourceType} = this.getSourceDetails(source);\n\n                // Example: Stopping and cleaning up the current video and audio setup\n                if (videoJs) {\n                    videoJs.src({'src': videoSrc, 'type': videoSourceType});\n\n                    videoJs.ready(() => {\n                        // ensureAudioContextAndNodesReady does the following:\n                        // 1. Resumes AudioContext if suspended.\n                        // 2. (Re)connects MediaElementSource from the video element to AudioContext.\n                        audioStore.deferAudioSetup = false;\n                        audioStore.ensureAudioContextAndNodesReady(videoJs).then(() => {\n                            // Only attempt to play the video after ensuring the AudioContext is ready\n                            videoJs.play().catch(error => {\n                                useNotificationStore().setGeneralServiceNotification('Error', 'Playback initiation error: ' + error)\n                                console.error('Playback initiation error: ', error);\n                            });\n\n                            // Consider toggling mute based on the user's preference or previous state\n                            videoJs.muted(false);\n                            this.muted = false;\n                        });\n                    });\n                }\n            } catch (error) {\n                // Log the error or perform any other error handling\n                useNotificationStore().setGeneralServiceNotification('Error', 'Error loading new video: ' + error)\n                console.error('Error loading new video: ', error);\n            }\n        },\n\n        // loadNewVideo(source) {\n        //     console.log('LOAD NEW VIDEO TTTTTTTTTTTTTTTTTTTTTTTTTS');\n        //     console.log('LOAD NEW VIDEO initiated with source:', source);\n        //     const audioStore = useAudioStore();\n        //     this.unMute();\n        //     // Destructure the returned object to get videoSrc and videoSourceType\n        //     const { videoSrc, videoSourceType } = this.getSourceDetails(source);\n        //     console.log(`Video source details received: Src - ${videoSrc}, Type - ${videoSourceType}`);\n        //\n        //     // Ensure you're using the same player instance (`videoJs` in this context) for consistency\n        //     let videoJs = videojs('aux-player'); // Ensure this ID matches your video player element\n        //     console.log('Video.js player instance created or retrieved.');\n        //\n        //     // Stop and clean up the current video and audio setup if necessary\n        //     videoJs.ready(() => {\n        //         console.log('Video.js player is ready.');\n        //         videoJs.src({ 'src': videoSrc, 'type': videoSourceType });\n        //         console.log(`Video source set: ${videoSrc} of type ${videoSourceType}`);\n        //\n        //         // Ensure AudioContext and nodes are ready\n        //         audioStore.ensureAudioContextAndNodesReady(videoJs).then(() => {\n        //             console.log('Audio context and nodes are ready. Attempting to play video.');\n        //\n        //             videoJs.play().then(() => {\n        //                 console.log('Video playback started successfully.');\n        //             }).catch(error => {\n        //                 console.error('Playback initiation error:', error);\n        //             });\n        //             // Attempt to play the video after ensuring the AudioContext is ready\n        //             // videoJs.play().catch(error => {\n        //             //     console.error('Playback initiation error:', error);\n        //             // });\n        //\n        //             // Apply the unMute logic from loadMistStreamVideo to ensure audio is correctly configured\n        //             this.unMute();\n        //             console.log('Audio unmuted.');\n        //             this.paused = false;\n        //             console.log('Paused flag set to false.');\n        //         }).catch(error => {\n        //             console.error('Error ensuring audio context and nodes are ready:', error);\n        //         });\n        //     });\n        // },\n\n        playNewVideo() {\n            console.log('PLAY NEW VIDEO')\n            if (this.player) {\n                // Wait for the video to be ready before playing\n                this.player.ready(() => {\n                    this.player.play()\n                    // Assuming you want to unmute here; check if this aligns with user interaction policies\n                    this.player.muted(false)\n                    this.muted = false\n                })\n            }\n        },\n\n\n// load video from different types of sources:\n// Url\n// YouTube\n// EmbedCode\n// Mist\n// File\n        loadNewSourceFromYouTube(source) {\n            this.videoIsYoutube = true\n            useChannelStore().clearChannel()\n            let videoJs = videojs('aux-player')\n            this.videoSource = source\n            this.videoSourceType = 'video/youtube'\n            videoJs.src({'src': this.videoSource, 'type': this.videoSourceType})\n            videoJs.controls(false)\n            this.unMute()\n            this.paused = false\n        },\n        loadNewLiveSourceFromRumble(source) {\n            this.videoIsYoutube = true\n            useChannelStore().clearChannel()\n            let videoJs = videojs('aux-player')\n            this.videoSource = source\n            this.videoSourceType = 'application/x-mpegURL'\n            videoJs.src({'src': this.videoSource, 'type': this.videoSourceType})\n            videoJs.controls(false)\n            this.unMute()\n            this.paused = false\n        },\n        loadNewSourceFromUrl(source) {\n            try {\n                this.videoIsYoutube = false;\n                useChannelStore().clearChannel();\n                let videoJs = videojs('aux-player');\n\n                if (!source.video_url || !source.type) {\n                    useNotificationStore().setGeneralServiceNotification('Error', 'Invalid video source.')\n                    throw new Error(\"Invalid video source.\");\n                }\n\n                this.videoSource = source.video_url;\n                this.videoSourceType = source.type;\n                videoJs.src({'src': source.video_url, 'type': source.type});\n\n                this.unMute();\n                this.paused = false;\n            } catch (error) {\n                useNotificationStore().setGeneralServiceNotification('Error', 'Failed to load new source: ' + error)\n                console.error(\"Failed to load new source:\", error);\n                throw error; // Re-throw the error to be caught by the caller\n            }\n        },\n        loadNewSourceFromMist(source) {\n            this.videoIsYoutube = false\n            let videoJs = videojs('aux-player')\n            let filePath = 'https://mist.not.tv/hls/'\n            this.videoSource = filePath + source + '/index.m3u8'\n            this.videoSourceType = 'application/x-mpegURL'\n            videoJs.src({'src': this.videoSource, 'type': this.videoSourceType})\n            this.unMute()\n            this.paused = false\n        },\n        loadNewSourceFromFile(source) {\n            this.videoIsYoutube = false\n            useChannelStore().clearChannel()\n            let videoJs = videojs('aux-player')\n            let filePath = source.cdn_endpoint + source.cloud_folder + source.folder + '/'\n            this.videoSource = source.file_name\n            this.videoSourceType = source.type\n            videoJs.src({'src': filePath + this.videoSource, 'type': this.videoSourceType})\n            this.unMute()\n            this.paused = false\n        },\n\n        // The new load video functions (2024-02-09 tec21 and ChatGPT)\n        loadExternalSourceVideo() {\n\n        },\n        loadPlaylistVideos() {\n\n        },\n        async loadMistStreamVideo(mistStream) {\n            // console.log('Loading Mist Stream Video for:', mistStream.name); // Log which Mist Stream is being loaded\n            // This mistServerUri comes from appSettings\n            if (!this.mistServerUri) {\n                console.log('Mist Server URI not set, fetching...') // Log fetching attempt\n                await this.getMistServerUri()\n            }\n            if (this.mistServerUri) {\n                // console.log('Mist Server URI:', this.mistServerUri); // Log the URI to confirm it's fetched\n                let basePath = this.mistServerUri\n                this.videoSource = basePath + 'hls/' + mistStream.name + '/index.m3u8'\n                // console.log('Video Source Set To:', this.videoSource); // Log the final video source\n\n                this.videoSourceType = 'application/vnd.apple.mpegURL'\n                // console.log('Setting player source to:', this.videoSource, 'of type:', this.videoSourceType); // Log the source setting\n                let videoJs = videojs('aux-player')\n                videoJs.src({'src': this.videoSource, 'type': this.videoSourceType})\n                this.unMute()\n                this.paused = false\n            } else {\n                console.error('Mist Server URI is still not set after fetching.')\n            }\n            // let basePath = this.mistServerUri\n            // this.videoSource = basePath + 'hls/' + mistStream.name + '/index.m3u8'\n            // this.videoSourceType = \"application/vnd.apple.mpegURL\"\n            // this.player.src({'src': this.videoSource, 'type': this.videoSourceType})\n            // this.unMute()\n            // this.paused = false\n        },\n        async loadVideoFromFile(video) {\n            // console.log('Loading Mist Stream Video for:', mistStream.name); // Log which Mist Stream is being loaded\n            // This mistServerUri comes from appSettings\n            // if (!this.mistServerUri) {\n            //     console.log('Mist Server URI not set, fetching...') // Log fetching attempt\n            //     await this.getMistServerUri()\n            // }\n            // if (this.mistServerUri) {\n                // console.log('Mist Server URI:', this.mistServerUri); // Log the URI to confirm it's fetched\n                // let basePath = this.mistServerUri\n                // this.videoSource = basePath + 'hls/' + video.name + '/index.m3u8'\n                // console.log('Video Source Set To:', this.videoSource); // Log the final video source\n\n            // this.videoSourceType = 'video/mp4'\n            console.log('Video Source Type:', video.type);\n            console.log('Video URL:', video.video_url);\n            console.log('CDN Endpoint:', video.cdn_endpoint);\n            console.log('Cloud Folder:', video.cloud_folder);\n            console.log('Folder:', video.folder);\n            console.log('File Name:', video.file_name);\n\n            let videoSource = video.cdn_endpoint + video.cloud_folder + video.folder + '/' + video.file_name\n                // console.log('Setting player source to:', this.videoSource, 'of type:', this.videoSourceType); // Log the source setting\n                let videoJs = videojs('aux-player')\n                videoJs.src({'src': videoSource, 'type': video.type})\n                this.unMute()\n                this.paused = false\n            // } else {\n            //     console.error('Mist Server URI is still not set after fetching.')\n            // }\n            // let basePath = this.mistServerUri\n            // this.videoSource = basePath + 'hls/' + mistStream.name + '/index.m3u8'\n            // this.videoSourceType = \"application/vnd.apple.mpegURL\"\n            // this.player.src({'src': this.videoSource, 'type': this.videoSourceType})\n            // this.unMute()\n            // this.paused = false\n        },\n\n\n        setNowPlayingInfoVideoFile(source) {\n            this.nowPlayingType = 'Video File'\n            this.nowPlayingName = source.file_name\n            useStreamStore().currentChannel = 'On Demand'\n        },\n        setNowPlayingInfoShow(show, episode) {\n            this.clearNowPlayingInfo()\n            const showStore = useShowStore()\n\n            if (show.firstPlayVideo) {\n                showStore.setName(show.firstPlayVideo.name)\n                showStore.setEpisodeUrl(`/shows/${show.slug}/episode/${source.firstPlayVideo.slug}`)\n            } else if (episode) {\n                showStore.setName(show.name)\n                showStore.setUrl(`/shows/${show.slug}`)\n                showStore.setEpisodeName(episode.name)\n                showStore.setEpisodeUrl(`/shows/${show.slug}/episode/${episode.slug}`)\n            } else {\n                showStore.setName(show.name)\n                showStore.setUrl(`/shows/${show.slug}`)\n            }\n        },\n// change video size/position and page layout\n        makeVideoPiP() {\n            // const appSettingStore = useAppSettingStore();\n            // const userStore = useUserStore();\n            //\n            // if (userStore.isMobile) {\n            //     let videoJs = videojs('aux-player')\n            //     videoJs.controls(false)\n            //     if(this.fullPage) {\n            //         this.class = 'pipVideoClassFullPage'\n            //         this.videoContainerClass = 'pipVideoContainerFullPage'\n            //     } else {\n            //         this.class = 'pipVideoClassTopRight'\n            //         this.videoContainerClass = 'pipVideoContainerTopRight'\n            //     }\n            //     appSettingStore.togglePipChatMode()\n            // }\n        },\n        makeVideoFullPage() {\n            const appSettingStore = useAppSettingStore()\n            const userStore = useUserStore()\n\n            // this.fullPage = true; // to be deleted and replaced by appSettingStore.fullPage\n            appSettingStore.fullPage = true\n            // userStore.hidePage = true // to be deleted and replaced by appSettingStore.hidePage\n            appSettingStore.hidePage = true\n            appSettingStore.ott = 0\n\n            this.videoContainerClass = 'fullPageVideoContainer'\n            this.class = 'fullPageVideoClass'\n            this.controls = !userStore.isMobile\n        },\n        makeVideoTopRight() {\n            const appSettingStore = useAppSettingStore()\n\n            // this.fullPage = false // to be deleted and replaced by appSettingStore.fullPage\n            appSettingStore.fullPage = false\n            // userStore.hidePage = false // to be deleted and replaced by appSettingStore.hidePage\n            appSettingStore.hidePage = false\n            // this.currentPageIsStream = false // to be deleted and replaced by appSettingStore.currentPageIsStream\n            appSettingStore.currentPageIsStream = false\n\n            this.videoContainerClass = 'topRightVideoContainer'\n            this.class = 'topRightVideoClass'\n            this.controls = false\n        },\n        makeVideoWelcomePage() {\n            const appSettingStore = useAppSettingStore()\n            this.videoContainerClass = 'welcomeVideoContainer'\n            this.class = 'welcomeVideoClass'\n            appSettingStore.loggedIn = false\n            appSettingStore.fullPage = true\n            appSettingStore.hidePage = false\n        },\n\n\n    },\n\n    getters: {},\n})\n","import { onBeforeMount, onMounted } from 'vue'\nimport { useUserStore } from \"@/Stores/UserStore\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useVideoPlayerStore } from \"@/Stores/VideoPlayerStore\"\nimport { Inertia } from \"@inertiajs/inertia\"\n\nexport function usePageSetup(pageName) {\n    const userStore = useUserStore()\n    const appSettingStore = useAppSettingStore()\n    const videoPlayerStore = useVideoPlayerStore()\n\n    appSettingStore.currentPage = pageName\n    appSettingStore.showFlashMessage = true\n    appSettingStore.pageIsHidden = false\n\n    if (userStore.isMobile) {\n        appSettingStore.ott = 0\n    }\n\n    videoPlayerStore.makeVideoTopRight()\n\n    onBeforeMount(() => {\n        // reload page\n        if (appSettingStore.pageReload) {\n            appSettingStore.pageReload = false\n            window.location.reload(true);\n        }\n    });\n\n    onMounted(() => {\n        // Check if the URL contains query strings\n        const hasQueryStrings = window.location.search !== '';\n\n        // Only scroll into view if there are no query strings\n        if (!hasQueryStrings) {\n            const topDiv = document.getElementById(\"topDiv\")\n            if (topDiv) {\n                topDiv.scrollIntoView()\n            }\n        }\n        // Only update if we're not already on this page to avoid overwriting with the current URL\n        appSettingStore.setPrevUrl()\n        appSettingStore.noLayout = false\n        appSettingStore.showOttButtons = true\n        // Inertia.reload()\n\n    });\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".video-container[data-v-791da7b8]{background-color:#000;padding-top:56.25%;position:relative;width:100%}.video-container video[data-v-791da7b8]{height:100%;left:0;position:absolute;top:0;width:100%}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/Components/Pages/ShowEpisodes/Elements/EpisodeVideo.vue\"],\"names\":[],\"mappings\":\"AA+EA,kCACE,qBAAuB,CAEvB,kBAAmB,CACnB,iBAAkB,CAFlB,UAGF,CAEA,wCAKE,WAAY,CAFZ,MAAO,CAFP,iBAAkB,CAClB,KAAM,CAEN,UAEF\",\"sourcesContent\":[\"<template>\\n  <div>\\n    <!-- Conditional rendering for the video section -->\\n      <!-- Episode Video Label -->\\n      <div v-if=\\\"!episode.video?.video_id && !episode.video?.video_url\\\" class=\\\"mt-6 px-5 flex justify-center w-full\\\">\\n        <div class=\\\"bg-black text-white text-center uppercase font-bold text-xs p-5 mb-2 w-full\\\">\\n          No Video\\n        </div>\\n      </div>\\n\\n    <div v-if=\\\"episode?.video_id && episode.video?.storage_location === 'spaces' && episode.video?.upload_status !== 'processing'\\\" class=\\\"\\\">\\n\\n      <!-- Video Player -->\\n      <video id=\\\"episodeEditPlayer\\\"\\n             controls\\n             class=\\\"w-full h-auto\\\"\\n             :src=\\\"episode.video?.cdn_endpoint + episode.video?.cloud_folder + episode?.video.folder + '/' + episode.video?.file_name\\\">\\n        Your browser does not support the video tag.\\n      </video>\\n    </div>\\n\\n\\n\\n    <!-- Processing or external storage placeholder -->\\n    <div v-if=\\\"episode.video?.storage_location === 'external' || episode.video?.upload_status === 'processing'\\\" class=\\\"flex justify-center shadow overflow-hidden border-b border-gray-200 bg-white dark:bg-black text-2xl sm:rounded-lg p-5\\\">\\n      <div v-if=\\\"episode.video?.video_url === ''\\\">NO VIDEO</div>\\n      <video v-else id=\\\"episodeEditVideoPlayer\\\" class=\\\"video-js w-full h-auto\\\" controls>\\n        <source :src=\\\"episode.video?.video_url\\\" :type=\\\"episode.video?.type\\\">\\n      </video>\\n    </div>\\n  </div>\\n\\n\\n<!--  <div>-->\\n<!--    <div-->\\n<!--        v-if=\\\"episode.video?.storage_location === 'external'\\\"-->\\n<!--        class=\\\"flex justify-center shadow overflow-hidden border-b border-gray-200 bg-white dark:bg-black text-2xl sm:rounded-lg p-5\\\">-->\\n\\n<!--      <div v-if=\\\"episode.video?.video_url === ''\\\">NO VIDEO</div>-->\\n<!--      <video id=\\\"episodeEditVideoPlayer\\\" v-if=\\\"episode.video?.video_url\\\"-->\\n<!--             class=\\\"video-js w-fit\\\" controls>-->\\n<!--        <source :src=\\\"`${episode.video?.video_url}`\\\" :type=\\\"`${episode.video?.type}`\\\">-->\\n<!--      </video>-->\\n\\n<!--      &lt;!&ndash;                    <iframe v-if=\\\"episode.video_url\\\"&ndash;&gt;-->\\n<!--      &lt;!&ndash;                            class=\\\"rumble\\\" width=\\\"w-fit\\\" height=\\\"\\\" :src=\\\"`${episode.video_url}`\\\" frameborder=\\\"0\\\" allowfullscreen>&ndash;&gt;-->\\n<!--      &lt;!&ndash;                    </iframe>&ndash;&gt;-->\\n<!--    </div>-->\\n\\n<!--    <div v-if=\\\"!episode?.video_id\\\"-->\\n<!--         class=\\\"flex justify-center shadow overflow-hidden border-b border-gray-200 bg-white dark:bg-black text-2xl sm:rounded-lg p-5 mt-6\\\">-->\\n<!--      NO VIDEO</div>-->\\n<!--    <div v-else class=\\\"flex flex-col justify-center text-center mb-6 bg-black w-full px-6 py-3\\\">-->\\n<!--      <div class=\\\"block mb-2 uppercase font-bold text-xs text-white\\\"-->\\n<!--           for=\\\"name\\\"-->\\n<!--      >-->\\n<!--        Episode Video-->\\n<!--      </div>-->\\n<!--      <div-->\\n<!--          v-if=\\\"episode.video?.upload_status === 'processing'\\\"-->\\n<!--          class=\\\"text-center place-self-center font-semibold text-xl\\\">Video processing...-->\\n<!--      </div>-->\\n\\n<!--      <video v-if=\\\"episode.video?.storage_location === 'spaces' && episode.video?.upload_status !== 'processing'\\\"-->\\n<!--             id=\\\"episodeEditPlayer\\\"-->\\n<!--             :src=\\\"episode.video?.cdn_endpoint+episode.video?.cloud_folder+episode?.video.folder+'/'+episode.video?.file_name\\\"-->\\n<!--             controls></video>-->\\n<!--    </div>-->\\n<!--  </div>-->\\n\\n</template>\\n\\n<script setup>\\ndefineProps({\\n  episode: Object,\\n})\\n</script>\\n\\n<style scoped>\\n.video-container {\\n  background-color: black; /* Black background */\\n  width: 100%; /* Full width of its parent */\\n  padding-top: 56.25%; /* Aspect ratio of 16:9 */\\n  position: relative; /* For absolute positioning of the video */\\n}\\n\\n.video-container video {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 100%; /* Video fills the width of the container */\\n  height: 100%; /* Video fills the height of the container */\\n}\\n</style>\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".episodeManageBanner[data-v-7c175692]{@apply bg-black text-red-600}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/Components/Pages/ShowEpisodes/Layout/ManageShowEpisodeTopBanner.vue\"],\"names\":[],\"mappings\":\"AAkDA,sCACE,4BACF\",\"sourcesContent\":[\"<template>\\n  <div class=\\\"font-bold text-xl p-4 my-4 w-full text-center\\\"\\n       :class=\\\"goLiveBanner\\\">\\n    <div v-if=\\\"!teamStore.goLiveDisplay\\\">\\n      <div v-if=\\\"episodeStatus.id < 6\\\" class=\\\"text-white uppercase hidden\\\">Create your episode</div>\\n      <div v-if=\\\"episodeStatus.name\\\"><span class=\\\"uppercase text-xs text-white\\\">Status:</span> <span\\n          :class=\\\"episodeStatusClass\\\">{{ episodeStatus.name }}</span></div>\\n    </div>\\n    <div v-else>\\n      <span>You are about to go live.</span>\\n      <!--                    if the episode is scheduled to go live then display the next line instead -->\\n      <!--                    <span v-if=\\\"episode.scheduled_release > now\\\">You are scheduled to go live.</span>-->\\n      <!--                    <span v-if=\\\"episode.isLive\\\">You are now live.</span>-->\\n\\n    </div>\\n  </div>\\n</template>\\n\\n<script setup>\\nimport { computed } from \\\"vue\\\"\\nimport { useTeamStore } from \\\"@/Stores/TeamStore\\\"\\n\\nconst teamStore = useTeamStore()\\n\\nlet props = defineProps({\\n  episode: Object,\\n  episodeStatus: Object,\\n})\\n\\nconst goLiveBanner = computed(() => ({\\n  'bg-red-500 text-white': teamStore.goLiveDisplay,\\n  'bg-black text-red-600': !teamStore.goLiveDisplay\\n}))\\n\\nconst episodeStatusClass = computed(() => ({\\n  'font-semibold text-xl text-orange-400': props.episodeStatus.id === 1,\\n  'text-xl text-green-400': props.episodeStatus.id === 2,\\n  'font-semibold text-xl text-green-600': props.episodeStatus.id === 3,\\n  'font-bold text-xl text-green-600': props.episodeStatus.id === 4,\\n  'font-semibold text-xl text-purple-700': props.episodeStatus.id === 5,\\n  'font-italic text-xl text-pink-500': props.episodeStatus.id === 6,\\n  'font-bold text-xl light:text-black dark:text-white': props.episodeStatus.id === 7,\\n  'font-medium text-xl text-gray-500': props.episodeStatus.id === 8,\\n  'font-semibold font-italic text-xl text-red-700': props.episodeStatus.id === 9,\\n  'font-bold text-xl text-red-800': props.episodeStatus.id === 10,\\n}))\\n</script>\\n\\n<style scoped>\\n\\n.episodeManageBanner {\\n  @apply bg-black text-red-600;\\n}\\n\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import script from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"mx-4 my-4\">\n    <div class=\"alert alert-info mt-4\"\n         v-if=\"props.flash.message\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" class=\"stroke-current shrink-0 w-6 h-6\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n      </svg>\n      <span>{{ props.flash.message }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-success mt-4 mx-3\"\n         v-if=\"props.flash.success\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.success }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-warning mt-4 mx-3\"\n         v-if=\"props.flash.warning\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"/>\n      </svg>\n      <span>{{ props.flash.warning }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-error mt-4 mx-3\"\n         v-if=\"props.flash.error\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.error }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n  </div>\n\n</template>\n\n<script setup>\nimport { Inertia } from \"@inertiajs/inertia\"\nimport { computed } from \"vue\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\n\nconst appSettingStore = useAppSettingStore()\n\nappSettingStore.showFlashMessage = true\n\nlet props = defineProps({\n  flash: Object,\n\n})\n\nconst messageType = computed(() => ({\n  'text-green-700 bg-green-100 dark:bg-green-200 dark:text-green-800': props.flash.success,\n  'text-blue-700 bg-blue-100 dark:bg-blue-200 dark:text-blue-800': props.flash.message,\n  'text-orange-700 bg-orange-100 dark:bg-orange-200 dark:text-orange-800': props.flash.warning,\n  'text-red-700 bg-red-100 dark:bg-red-200 dark:text-red-800': props.flash.error,\n}))\n\nconst clearFlashMessage = async () => {\n  await Inertia.post(route('flash.clear'));\n  Inertia.reload();\n};\n</script>\n","import script from \"./PopUpModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./PopUpModal.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./VideoJsAux.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./VideoJsAux.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"w-full h-fit bg-yellow-400\">\n<!--    <video ref=\"videoPlayerAux\" :id=\"id\" class=\"vjs-layout-tiny w-full\" playsinline controls autoplay-->\n<!--           muted/>-->\n\n    <video-js :id=\"id\"\n              class=\"video-js vjs-layout-tiny w-96 h-64 bg-blue-400\"\n              autoplay\n              muted\n              playsinline\n              crossorigin=\"anonymous\"\n    >\n      <source :src=\"source\"\n              :type=\"sourceType\">\n    </video-js>\n\n\n\n\n  </div>\n\n\n\n\n</template>\n\n\n<script setup>\nimport { onMounted, onBeforeUnmount } from \"vue\"\nimport videojs from 'video.js'\nimport 'video.js/dist/video-js.css'\nimport { useVideoAuxPlayerStore } from \"@/Stores/VideoAuxPlayerStore\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nconst appSettingStore = useAppSettingStore()\nimport { useStreamStore } from \"@/Stores/StreamStore\"\nimport VideoJs from '@/Components/Global/VideoPlayer/VideoJs/VideoJs.vue'\n\nconst videoAuxPlayerStore = useVideoAuxPlayerStore()\nconst streamStore = useStreamStore()\n\nconst props = defineProps({\n  options: Object,\n  id: String,\n  source: String,\n  sourceType: String\n})\n\nonMounted(() => {\n  const videoElementId = props.id\n  const playerOptions = {\n    // Define your player options here\n    controlBar: {\n      audioTrackButton: false,\n      autoHide: true,\n      captionsButton: false,\n      chaptersButton: false,\n      currentTimeDisplay: false,\n      customControlSpacer: false,\n      descriptionsButton: false,\n      durationDisplay: false,\n      fullscreenToggle: false, // Removes the full screen option\n      liveDisplay: false,\n      pictureInPictureToggle: false,\n      playToggle: false,\n      playbackRateMenuButton: false,\n      progressControl: {seekBar: false},\n      remainingTimeDisplay: false,\n      seekToLive: false,\n      subsCapsButton: false,\n      subtitlesButton: false,\n      timeDivider: false,\n      volumePanel: {\n        inline: true,\n        volumeBar: {\n          vertical: false,\n          liveDisplay: false,\n        },\n      },\n    },\n    userActions: {\n      hotkeys: true, // Enable hotkeys to show/hide controls\n    },\n    controls: true,\n    muted: false, // Start muted to comply with autoplay policies\n    inactivityTimeout: 0,\n    autoplay: true,\n    preload: 'auto',\n    // techOrder: ['html5'],\n    html5: {\n      hls: {\n        overrideNative: !videojs.browser.IS_SAFARI, // Override native HLS on non-Safari browsers\n      },\n    },\n  }\n\n  // Initialize Video.js player\n  const videoAuxPlayer = videojs(videoElementId, playerOptions);\n\n  // Use the store to manage the player\n  videoAuxPlayerStore.setPlayer(videoAuxPlayer);\n\n  // Access the video DOM element controlled by VideoJS\n  const videoDomElement = videoAuxPlayer.el();\n\n  // Disable right-click on the video element\n  videoDomElement.addEventListener('contextmenu', (event) => {\n    event.preventDefault();\n  });\n})\n\nonBeforeUnmount(() => {\n  let videoAuxPlayer = videojs(props.id)\n  videoAuxPlayer.dispose()\n})\n\n</script>","import api from \"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-9.use[1]!../../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-9.use[2]!../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./EpisodeVideo.vue?vue&type=style&index=0&id=791da7b8&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./EpisodeVideo.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./EpisodeVideo.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./EpisodeVideo.vue?vue&type=style&index=0&id=791da7b8&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-791da7b8\"]])\n\nexport default __exports__","import script from \"./ManageShowEpisodeNoticeModals.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ManageShowEpisodeNoticeModals.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./EpisodeFooter.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./EpisodeFooter.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n\n  <div class=\"flex justify-between mt-6\">\n    <!-- Paginator -->\n    <!--                            <Pagination :links=\"`#`\" class=\"mt-6\"/>-->\n    <div>\n      <div v-if=\"can.editEpisode\"><span class=\"text-xs uppercase font-semibold\">Episode ID: </span><span\n          class=\"text-xs\">{{ episode.ulid }}</span></div>\n    </div>\n    <div>\n      <Link :href=\"`/teams/${team.slug}`\" class=\"text-blue-500 hover:text-blue-700 ml-2 uppercase\">\n        {{ team.name }}&nbsp;\n      </Link>\n\n      <span v-if=\"episode?.creative_commons?.name\"\n            class=\"text-xs font-semibold text-gray-500\">&nbsp;{{ episode?.creative_commons?.name }}&nbsp;<span v-if=\"!episode?.creative_commons?.id === 7\">&bull;&nbsp;</span></span>\n\n      <span class=\"text-xs font-semibold text-gray-500\"\n            v-if=\"episode?.creative_commons?.id === 7\">&nbsp;&copy;&nbsp;</span>\n\n      <!--                    If there is a copyright year display it... we need to remove the &copy; and replace it with whichever creative commons icon it needs -->\n      <span class=\"text-xs font-semibold text-gray-500\" v-if=\"show?.last_release_year > 0\">{{ show?.first_release_year }}-{{ show?.last_release_year }}</span>\n      <span class=\"text-xs font-semibold text-gray-500\" v-if=\"!show?.last_release_year && show?.first_release_year\">{{ show?.first_release_year }}</span>\n      <span class=\"text-xs font-semibold text-gray-500\"\n            v-if=\"!show?.last_release_year && !show?.first_release_year && episode?.copyrightYear\">{{\n          episode.copyrightYear\n        }}</span>\n\n      <!--                    If there is no copyright year then it's probably public domain... so we'll just display the creative commons name-->\n\n\n\n    </div>\n  </div>\n\n</template>\n\n<script setup>\n\ndefineProps({\n  team: Object,\n  episode: Object,\n  show: Object,\n  can: Object,\n})\n\nlet currentYear = new Date().getFullYear()\n\n</script>\n","import script from \"./ManageShowEpisodeDescription.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ManageShowEpisodeDescription.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"shadow overflow-hidden bg-gray-50 border-b border-gray-200 sm:rounded-lg p-5\">\n\n    <div class=\"flex flex-col my-6 ml-10 md:w-3/4 space-x-2 space-y-2\">\n      <div class=\"text-sm font-semibold uppercase mb-2\">Bonus Content\n        <div class=\"badge bg-orange-500 text-white text-xs ml-1 -mt-3\">Coming Soon!</div>\n      </div>\n      <div>\n      </div>\n      <div>Add videos, images, links and documents for the audience.</div>\n    </div>\n    <div class=\"mt-8 ml-10\">\n      <button\n          onclick=\"addBonusContentNotice.showModal()\"\n          class=\"bg-orange-600 hover:bg-orange-500 text-white font-semibold rounded-lg px-4 py-2\"\n      >Add Bonus Content\n      </button>\n    </div>\n\n\n    <!--                <div class=\"flex flex-row flex-wrap my-6 ml-10 md:w-3/4 space-x-2 space-y-2\">-->\n    <!--                    <div></div>-->\n    <!--                    <button onclick=\"teleprompterNotice.showModal()\" class=\"bg-blue-600 hover:bg-blue-500 text-white font-semibold rounded-lg px-4 py-2\">Open Teleprompter</button>-->\n    <!--                    <button onclick=\"vtrNotice.showModal()\" class=\"bg-blue-600 hover:bg-blue-500 text-white font-semibold rounded-lg px-4 py-2\">Open VTR</button>-->\n    <!--                    <button onclick=\"graphicsNotice.showModal()\" class=\"bg-blue-600 hover:bg-blue-500 text-white font-semibold rounded-lg px-4 py-2\">Open Graphics</button>-->\n    <!--                </div>-->\n\n\n  </div>\n\n</template>\n\n<script setup>\n\n</script>\n","import { render } from \"./ManageShowEpisodeBonusContent.vue?vue&type=template&id=1d50b7f0\"\nconst script = {}\n\nimport exportComponent from \"../../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"font-bold text-xl p-4 my-4 w-full text-center\"\n       :class=\"goLiveBanner\">\n    <div v-if=\"!teamStore.goLiveDisplay\">\n      <div v-if=\"episodeStatus.id < 6\" class=\"text-white uppercase hidden\">Create your episode</div>\n      <div v-if=\"episodeStatus.name\"><span class=\"uppercase text-xs text-white\">Status:</span> <span\n          :class=\"episodeStatusClass\">{{ episodeStatus.name }}</span></div>\n    </div>\n    <div v-else>\n      <span>You are about to go live.</span>\n      <!--                    if the episode is scheduled to go live then display the next line instead -->\n      <!--                    <span v-if=\"episode.scheduled_release > now\">You are scheduled to go live.</span>-->\n      <!--                    <span v-if=\"episode.isLive\">You are now live.</span>-->\n\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { computed } from \"vue\"\nimport { useTeamStore } from \"@/Stores/TeamStore\"\n\nconst teamStore = useTeamStore()\n\nlet props = defineProps({\n  episode: Object,\n  episodeStatus: Object,\n})\n\nconst goLiveBanner = computed(() => ({\n  'bg-red-500 text-white': teamStore.goLiveDisplay,\n  'bg-black text-red-600': !teamStore.goLiveDisplay\n}))\n\nconst episodeStatusClass = computed(() => ({\n  'font-semibold text-xl text-orange-400': props.episodeStatus.id === 1,\n  'text-xl text-green-400': props.episodeStatus.id === 2,\n  'font-semibold text-xl text-green-600': props.episodeStatus.id === 3,\n  'font-bold text-xl text-green-600': props.episodeStatus.id === 4,\n  'font-semibold text-xl text-purple-700': props.episodeStatus.id === 5,\n  'font-italic text-xl text-pink-500': props.episodeStatus.id === 6,\n  'font-bold text-xl light:text-black dark:text-white': props.episodeStatus.id === 7,\n  'font-medium text-xl text-gray-500': props.episodeStatus.id === 8,\n  'font-semibold font-italic text-xl text-red-700': props.episodeStatus.id === 9,\n  'font-bold text-xl text-red-800': props.episodeStatus.id === 10,\n}))\n</script>\n\n<style scoped>\n\n.episodeManageBanner {\n  @apply bg-black text-red-600;\n}\n\n</style>\n","import api from \"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-9.use[1]!../../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-9.use[2]!../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./ManageShowEpisodeTopBanner.vue?vue&type=style&index=0&id=7c175692&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./ManageShowEpisodeTopBanner.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ManageShowEpisodeTopBanner.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ManageShowEpisodeTopBanner.vue?vue&type=style&index=0&id=7c175692&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-7c175692\"]])\n\nexport default __exports__","import script from \"./EpisodeHeader.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./EpisodeHeader.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n\n  <div class=\"inline-flex items-center text-3xl font-semibold relative\">\n    <Link :href=\"`/shows/${show.slug}/episode/${episode.slug}`\" class=\"uppercase\">\n      <div class=\"flex flex-row space-x-2\">\n        <!--                <img :src=\"'/storage/images/' + show.poster\" alt=\"\" class=\"w-20 mr-2 justify-left\">-->\n        <SingleImage :image=\"episode.image\" alt=\"'episode poster'\"\n                     class=\"h-50 w-80 object-cover\"/>\n        <span class=\"hover:text-blue-700 pl-4 inline-flex items-center text-3xl font-semibold relative\">{{ episode.name }}</span>\n      </div>\n    </Link>\n\n  </div>\n\n\n</template>\n\n<script setup>\nimport { useShowStore } from \"@/Stores/ShowStore\"\nimport { useTeamStore } from \"@/Stores/TeamStore\"\nimport SingleImage from \"@/Components/Global/Multimedia/SingleImage\"\n\nconst showStore = useShowStore()\nconst teamStore = useTeamStore()\n\ndefineProps({\n  episode: Object,\n  show: Object,\n  team: Object,\n})\n\n</script>\n","import script from \"./ManageShowEpisodeHeader.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ManageShowEpisodeHeader.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n    <ShowEpisodeManageTopBanner :episode=\"episode\" :episodeStatus=\"episodeStatus\"/>\n\n    <header class=\"bg-gradient-to-r from-green-100 via-white to-transparent p-4 text-black rounded-lg\">\n      <div class=\"flex justify-between my-3\">\n        <div class=\"gap-2\">\n          <div class=\"font-bold mb-4 text-black\">MANAGE EPISODE</div>\n        </div>\n        <div class=\"flex flex-wrap-reverse justify-end gap-2\">\n          <div class=\"\" v-if=\"teamStore.can.goLive && !episode.video_file_url\">\n            <button\n                v-if=\"!teamStore.goLiveDisplay\"\n                @click=\"teamStore.toggleGoLiveDisplay()\"\n                :disabled=\"episode.show_episode_status_id > 6\"\n                class=\"px-4 py-2 text-white bg-red-600 hover:bg-red-500 rounded-lg disabled:bg-gray-400\"\n            >Go Live\n            </button>\n            <button\n                v-if=\"teamStore.goLiveDisplay\"\n                @click=\"teamStore.toggleGoLiveDisplay()\"\n                class=\"px-4 py-2 text-white bg-red-600 hover:bg-red-500 rounded-lg disabled:bg-gray-400\"\n            >Cancel\n            </button>\n          </div>\n          <div>\n            <button\n                v-if=\"teamStore.can.editEpisode\"\n                @click=\"appSettingStore.btnRedirect(`/shows/${show.slug}/episode/${episode.slug}/edit`)\"\n                :disabled=\"teamStore.goLiveDisplay\"\n                class=\"px-4 py-2 text-white bg-blue-600 hover:bg-blue-500 rounded-lg disabled:bg-gray-400\"\n            >Edit\n            </button>\n          </div>\n          <div>\n            <button\n                :disabled=\"teamStore.goLiveDisplay\"\n                @click=\"appSettingStore.btnRedirect(`/shows/${show.slug}/manage`)\"\n                class=\"px-4 py-2 text-white bg-orange-600 hover:bg-orange-500 rounded-lg disabled:bg-gray-400\"\n            >Manage Show\n            </button>\n          </div>\n          <div>\n            <button\n                :disabled=\"teamStore.goLiveDisplay\"\n                @click=\"appSettingStore.btnRedirect('/dashboard')\"\n                class=\"bg-black hover:bg-gray-800 text-white font-semibold px-4 py-2 rounded-lg disabled:bg-gray-400\"\n            >Dashboard\n            </button>\n\n          </div>\n        </div>\n      </div>\n      <div class=\"flex w-full justify-end gap-x-2\">\n        <div>\n          <button\n              hidden\n              v-if=\"!episode.video_file_url\"\n              @click=\"appSettingStore.btnRedirect(`/shows/${show.slug}/episode/${episode.slug}/upload`)\"\n              :disabled=\"teamStore.goLiveDisplay\"\n              class=\"px-4 py-2 text-white font-semibold bg-orange-600 hover:bg-orange-500 rounded-lg disabled:bg-gray-400\"\n          >Upload Video\n          </button>\n        </div>\n\n      </div>\n\n      <div class=\"flex justify-between flex-wrap mt-2 align-top\">\n        <div class=\"min-w-[12rem]\">\n          <EpisodeHeader\n              :episode=\"episode\"\n              :show=\"show\"\n              :team=\"team\"\n          />\n        </div>\n\n        <div class=\"flex flex-row flex-wrap justify-between w-full\">\n\n          <div class=\"flex flex-col pt-6\">\n\n            <div><span class=\"text-xs capitalize font-semibold\">Show: </span>\n              <button :disabled=\"teamStore.goLiveDisplay\" @click=\"appSettingStore.btnRedirect(`/shows/${show.slug}/manage`)\"\n                      class=\"hover:text-blue-700 text-blue-500 ml-2 uppercase disabled:text-black\">\n                {{ show.name }}\n              </button>\n            </div>\n            <div><span class=\"text-xs capitalize font-semibold mr-2\">Show Runner: </span>\n              {{ show.showRunner }}\n            </div>\n\n            <div>\n              <span class=\"text-xs capitalize font-semibold mr-2\">Episode Number: </span>\n              <span v-if=\"episode.episode_number\">{{ episode.episode_number }}</span>\n              <span v-if=\"!episode.episode_number\">{{ episode.id }}</span>\n            </div>\n            <div v-if=\"releaseDateTime\">\n              <span class=\"text-xs capitalize font-semibold mr-2\">\n                {{ formatDate(releaseDateTime) }}\n              </span>\n            </div>\n          </div>\n\n          <div class=\"upcomingDateTime\">\n\n            <div class=\"text-center mb-3 pr-3 pt-6\">\n              <button :disabled=\"teamStore.goLiveDisplay\" v-if=\"episode.status.id === 5\"\n                      onclick=\"scheduleReleaseNotice.showModal()\"\n                      class=\"bg-green-600 hover:bg-green-500 text-white rounded-lg font-semibold px-4 py-2 mb-4 mr-2 disabled:bg-gray-400\">\n                Schedule Release\n              </button>\n              <br/>\n              <div v-if=\"episode.status.id === 6\">\n                <span class=\"text-2xl capitalize font-semibold\">Scheduled Release:</span><br/>\n                <span class=\"text-3xl capitalize font-semibold\">{{ timeAgo }}</span>\n              </div>\n            </div>\n\n          </div>\n        </div>\n      </div>\n    </header>\n\n  </div>\n</template>\n\n<script setup>\nimport { useTimeAgo } from '@vueuse/core'\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useTeamStore } from \"@/Stores/TeamStore\"\nimport Button from \"@/Jetstream/Button.vue\"\nimport ShowEpisodeManageTopBanner from \"@/Components/Pages/ShowEpisodes/Layout/ManageShowEpisodeTopBanner\"\nimport EpisodeHeader from \"@/Components/Pages/ShowEpisodes/Layout/EpisodeHeader\"\n\nconst appSettingStore = useAppSettingStore()\nconst teamStore = useTeamStore()\n\nlet props = defineProps({\n  show: Object,\n  team: Object,\n  episode: Object,\n  episodeStatus: Object,\n  scheduledDateTime: String,\n  releaseDateTime: String,\n})\n\nconst timeAgo = useTimeAgo(props.scheduledDateTime)\n\n\n</script>\n","import script from \"./ManageShowEpisodeRundown.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ManageShowEpisodeRundown.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./ManageShowEpisodeNotes.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ManageShowEpisodeNotes.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n<!--  <div class=\"max-w-[12rem]\">-->\n  <div class=\"w-100\">\n<!--    <div class=\"max-w-[12rem]\">-->\n    <div class=\"w-100\">\n      <video-player :id=\"`aux-player`\" :options=\"videoOptions\"/>\n    </div>\n  </div>\n\n</template>\n\n<script setup>\nimport { useVideoPlayerStore } from \"@/Stores/VideoPlayerStore\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nconst appSettingStore = useAppSettingStore()\n\nconst videoPlayerStore = useVideoPlayerStore()\n\nlet playerName = 'aux-player'\n\n// let props = defineProps({\n//     id: String,\n//     src: String,\n//     type: String,\n// })\n\n</script>\n\n\n<script>\nimport VideoPlayer from '@/Components/Global/VideoPlayer/VideoJs/VideoJsAux'\n\nlet videoSource = 'https://mist.nottv.io/hls/test/index.m3u8'\nlet videoSourceType = 'application/x-mpegURL'\n\nexport default {\n  name: 'VideoPlayer',\n  components: {\n    VideoPlayer\n  },\n  data() {\n    return {\n      videoOptions: {\n        autoplay: true,\n        muted: true,\n        controls: true,\n        fill: true,\n        sources: [\n          {\n            src: videoSource,\n            type: videoSourceType,\n          }\n        ]\n      }\n    };\n  },\n  props: {\n    id: String,\n    src: String,\n    type: String,\n  },\n  setup(props) {\n\n  }\n};\n\n\n</script>\n","import script from \"./VideoPlayerAux.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./VideoPlayerAux.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./ManageShowEpisodeGoLive.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ManageShowEpisodeGoLive.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n    <div v-if=\"teamStore.goLiveDisplay\" class=\"mx-4 mt-4 mb-2 px-6 py-1 \">\n      <div\n          class=\"text-sm font-semibold bg-red-600 text-white text-center w-full border-2 border-red-600 rounded uppercase px-6 py-1 \">\n        Go Live Instructions\n      </div>\n      <div class=\"shadow bg-red-100 overflow-hidden border-2 border-red-600 rounded p-6\">\n        <div>RTMP full url: <span class=\"font-bold\">rtmp://streams.not.tv/live/{YOUR STREAM KEY}</span></div>\n        <div>RTMP url: <span class=\"font-bold\">rtmp://streams.not.tv/live/</span></div>\n        <div>RTMP stream key: <span class=\"font-bold\">{YOUR STREAM KEY}</span></div>\n        <div>\n          <span class=\"italic\">Your stream key is using showName+UUID.</span>\n        </div>\n        <div class=\"flex flex-row flex-wrap space-x-2 space-y-2 w-2/3 justify-between pt-10 mx-auto\">\n          <div></div>\n          <div class=\"flex flex-col justify-center text-center space-y-2\">\n            <div v-if=\"episode.show_episode_status_id === 6\">\n              <div>Countdown to scheduled live:</div>\n              <div>{{ timeAgo }}</div>\n            </div>\n            <button onclick=\"startCountdownNotice.showModal()\"\n                    class=\"bg-blue-600 hover:bg-blue-500 text-white font-semibold rounded-lg px-4 py-2\">Start Countdown\n            </button>\n            <div class=\"text-xs font-bold\">or</div>\n            <button onclick=\"startLiveStreamNotice.showModal()\"\n                    class=\"bg-red-600 hover:bg-red-500 text-white font-semibold rounded-lg px-4 py-2\">Go Live Now\n            </button>\n          </div>\n          <div class=\"flex flex-col justify-center\">\n            <div>VIDEO STREAM</div>\n            <div class=\"bg-black px-10 py-10\">\n              <video-player-aux/>\n            </div>\n\n          </div>\n\n        </div>\n\n        <div class=\"mx-4 mt-4 mb-2 px-6 py-1 \">\n          <div\n              class=\"text-sm font-semibold bg-blue-600 text-white text-center w-full border-2 border-blue-600 rounded uppercase px-6 py-1 \">\n            Push Destinations\n          </div>\n          <div class=\"shadow bg-blue-100 overflow-hidden border-2 border-blue-600 rounded p-6 space-y-3\">\n            <div></div>\n            <div>Set up <span class=\"font-bold\">push destinations:</span></div>\n            <div>Here you can set additional streaming destinations such as Facebook, YouTube, Rumble, Twitch, etc. and\n              notTV will automatically start pushing to those destinations when you go live.\n            </div>\n            <div class=\"w-full flex justify-center pt-4\">\n              <button onclick=\"setPushDestinationsNotice.showModal()\"\n                      class=\"bg-blue-600 hover:bg-blue-500 text-white font-semibold rounded-lg px-4 py-2\">Set Push\n                Destinations\n              </button>\n            </div>\n          </div>\n\n        </div>\n\n      </div>\n\n    </div>\n\n    <div v-if=\"teamStore.goLiveDisplay\" class=\"mx-4 mt-4 mb-8 px-6 py-1 \">\n      <div\n          class=\"text-sm font-semibold bg-orange-600 text-white text-center w-full border-2 border-orange-600 rounded uppercase px-6 py-1 \">\n        Commercial Breaks\n      </div>\n      <div class=\"shadow bg-orange-100 overflow-hidden border-2 border-orange-600 rounded p-6 space-y-3\">\n        <div></div>\n        <div>Click the <span class=\"font-bold\">Trigger Commercial Break</span> button below to go to commercial.</div>\n        <div>You will see a countdown timer until the show resumes. This will be 1-2 minutes.</div>\n        <div>As a notTV creator, your voice matters. How can this feature be improved to better serve you and your\n          sponsors?\n          Please email and let us know: <a href=\"mailto:hello@not.tv\" target=\"_blank\"\n                                           class=\"text-blue-500 hover:text-blue-600\">hello@not.tv</a>\n        </div>\n        <div class=\"w-full flex justify-center pt-4\">\n          <button onclick=\"setCommercialBreakNotice.showModal()\"\n                  class=\"bg-orange-600 hover:bg-orange-500 text-white font-semibold rounded-lg px-4 py-2\">Trigger\n            Commercial Break\n          </button>\n        </div>\n      </div>\n\n    </div>\n\n  </div>\n\n\n</template>\n\n<script setup>\nimport { useTimeAgo } from '@vueuse/core'\nimport { useTeamStore } from \"@/Stores/TeamStore\"\nimport VideoPlayerAux from \"@/Components/Global/VideoPlayer/VideoPlayerAux\"\n\nconst teamStore = useTeamStore()\n\nlet props = defineProps({\n  episode: Object,\n  // scheduledDateTime: String,\n})\n\nlet playerName = 'aux-player';\n// let videoEmbedCode = props.episode.video_file_embed_code;\n\n// const timeAgo = useTimeAgo(new Date(2023, 10, 5))\nconst timeAgo = useTimeAgo(props.episode.scheduledDateTime)\n</script>\n","import script from \"./Manage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Manage.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n\n  <Head :title=\"`Manage Episode: ${props.episode.name}`\"/>\n\n  <div id=\"topDiv\" class=\"place-self-center flex flex-col gap-y-3\">\n    <div class=\"bg-white rounded text-black p-5\"\n         :class=\"goLive\">\n\n      <Message v-if=\"appSettingStore.showFlashMessage\" :flash=\"$page.props.flash\"/>\n\n      <ShowEpisodeManageNoticeModals/>\n\n      <ShowEpisodeManageHeader\n          :episode=\"episode\"\n          :episodeStatus=\"episodeStatus\"\n          :show=\"show\"\n          :team=\"team\"\n          :scheduledDateTime=\"scheduledDateTime\"\n          :releaseDateTime=\"releaseDateTime\"\n      />\n\n      <GoLive :episode=\"episode\" :scheduledDateTime=\"scheduledDateTime\"/>\n\n      <EpisodeVideo :episode=\"episode\"/>\n\n      <EpisodeNotes :episode=\"episode\"/>\n\n      <ShowEpisodeManageEpisodeDescription :episode=\"episode\"/>\n\n      <EpisodeRundown hidden/>\n\n      <ShowEpisodeManageBonusContent/>\n\n      <EpisodeFooter :can=\"can\" :team=\"team\" :episode=\"episode\" :show=\"show\"/>\n\n    </div>\n  </div>\n\n</template>\n\n<script setup>\nimport { computed, onMounted } from 'vue'\nimport { useTimeAgo } from '@vueuse/core'\nimport { usePageSetup } from '@/Utilities/PageSetup'\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\nimport { useShowStore } from '@/Stores/ShowStore'\nimport { useTeamStore } from '@/Stores/TeamStore'\n\nimport ShowEpisodeManageEpisodeDescription from '@/Components/Pages/ShowEpisodes/Elements/ManageShowEpisodeDescription'\nimport ShowEpisodeManageBonusContent from '@/Components/Pages/ShowEpisodes/Elements/ManageShowEpisodeBonusContent'\nimport ShowEpisodeManageNoticeModals from '@/Components/Pages/ShowEpisodes/Elements/ManageShowEpisodeNoticeModals'\nimport ShowEpisodeManageHeader from '@/Components/Pages/ShowEpisodes/Layout/ManageShowEpisodeHeader'\nimport EpisodeRundown from '@/Components/Pages/ShowEpisodes/Elements/ManageShowEpisodeRundown'\nimport EpisodeNotes from '@/Components/Pages/ShowEpisodes/Elements/ManageShowEpisodeNotes'\nimport GoLive from '@/Components/Pages/ShowEpisodes/Elements/ManageShowEpisodeGoLive'\nimport EpisodeVideo from '@/Components/Pages/ShowEpisodes/Elements/EpisodeVideo'\nimport EpisodeFooter from '@/Components/Pages/ShowEpisodes/Layout/EpisodeFooter'\nimport Message from '@/Components/Global/Modals/Messages'\n\nusePageSetup('showEpisodesManage')\n\nconst appSettingStore = useAppSettingStore()\nconst showStore = useShowStore()\nconst teamStore = useTeamStore()\n\nlet props = defineProps({\n  show: Object,\n  team: Object,\n  episode: Object,\n  episodeStatus: Object,\n  releaseDateTime: String,\n  scheduledDateTime: String,\n  can: Object,\n})\n\n// const timeAgo = useTimeAgo(new Date(2023, 10, 5))\nconst timeAgo = useTimeAgo(props.scheduledDateTime)\n\nteamStore.can = props.can\n\n// let showGoLive = ref(false)\n\nconst goLive = computed(() => ({\n  'border-4 border-red-500': teamStore.goLiveDisplay,\n}))\n\n</script>\n\n\n"],"names":["initialState","id","name","description","slug","totalSpots","memberSpots","teamCreator","teamLeader","members","managers","activeShow","activeEpisode","creators","showModal","Boolean","confirmDialog","confirmManagerDialog","selectedManagerName","selectedManagerId","addManager","removeManager","deleteMemberName","deleteMemberId","noteEdit","note","saveNoteProcessing","goLiveDisplay","can","openComponent","useTeamStore","defineStore","state","actions","reset","Object","assign","this","setActiveTeam","team","setActiveShow","show","setActiveEpisode","episode","deleteTeamMemberCancel","confirmTeamManagerCancel","deleteTeamMember","Inertia","visit","route","method","data","user_id","team_id","team_slug","addTeamManager","removeTeamManager","toggleGoLiveDisplay","getters","spotsRemaining","_regeneratorRuntime","e","t","r","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","isNaN","length","displayName","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","mistServerUri","player","eventListenersAttached","videoPlayerLoaded","class","videoContainerClass","videoSourceIdSrc1","videoSourceIdSrc2","videoSourceIdSrc3","videoSourceTypeSrc1","videoSourceTypeSrc2","videoSourceTypeSrc3","firstPlayVideoSourceType","firstPlayVideoSource","videoName","videoSource","videoSourceType","videoPoster","nextSource","previousSource","currentView","currentChannelId","currentChannelName","currentShow","currentShowEpisode","currentVideo","hasVideo","controls","muted","paused","currentTime","duration","formattedTime","blue","videoIsYoutube","videoUploadComplete","useVideoAuxPlayerStore","getMistServerUri","_this","_callee","response","_context","axios","get","t0","console","setPlayer","playerInstance","_this2","initializePlayer","attachEventListeners","_this3","_callee2","_context2","nextTick","useAudioStore","ensureAudioContextAndNodesReady","ready","play","log","on","handleTimeUpdate","handleFullscreenChange","handlePlay","handlePause","handleError","detachEventListeners","stopAudioLevelMonitoring","off","disposePlayer","dispose","prepareForNewVideoSource","source","useChannelStore","clearChannel","loadNewVideo","resetPlayback","pause","concat","formatDuration","durationInSeconds","Math","floor","map","part","toString","padStart","join","_this$player","_this4","isFullscreen","_this$player2","_this5","_this$player3","_this6","_this$player4","code","message","makeBlue","toggleMute","unMute","mute","togglePlay","videoJs","videojs","load","loadNewLiveSource","sourceType","fullSourceUrl","src","back","fullscreen","requestFullscreen","getVideoCurrentTime","videoCurrentTime","getSourceDetails","videoSrc","mediaType","video_url","cdn_endpoint","cloud_folder","folder","file_name","_this7","audioStore","_this$getSourceDetail","deferAudioSetup","useNotificationStore","setGeneralServiceNotification","playNewVideo","_this8","loadNewSourceFromYouTube","loadNewLiveSourceFromRumble","loadNewSourceFromUrl","loadNewSourceFromMist","loadNewSourceFromFile","filePath","loadExternalSourceVideo","loadPlaylistVideos","loadMistStreamVideo","mistStream","_this9","_callee3","basePath","_context3","loadVideoFromFile","video","_this10","_callee4","_context4","setNowPlayingInfoVideoFile","nowPlayingType","nowPlayingName","useStreamStore","currentChannel","setNowPlayingInfoShow","clearNowPlayingInfo","showStore","useShowStore","firstPlayVideo","setName","setEpisodeUrl","setUrl","setEpisodeName","makeVideoPiP","makeVideoFullPage","appSettingStore","useAppSettingStore","userStore","useUserStore","fullPage","hidePage","ott","isMobile","makeVideoTopRight","currentPageIsStream","makeVideoWelcomePage","loggedIn","usePageSetup","pageName","videoPlayerStore","useVideoPlayerStore","currentPage","showFlashMessage","pageIsHidden","onBeforeMount","pageReload","window","location","reload","onMounted","search","topDiv","document","getElementById","scrollIntoView","setPrevUrl","noLayout","showOttButtons","___CSS_LOADER_EXPORT___","module","props","__props","clearFlashMessage","computed","flash","success","warning","_ref","post","videoAuxPlayerStore","videoElementId","playerOptions","controlBar","audioTrackButton","autoHide","captionsButton","chaptersButton","currentTimeDisplay","customControlSpacer","descriptionsButton","durationDisplay","fullscreenToggle","liveDisplay","pictureInPictureToggle","playToggle","playbackRateMenuButton","progressControl","seekBar","remainingTimeDisplay","seekToLive","subsCapsButton","subtitlesButton","timeDivider","volumePanel","inline","volumeBar","vertical","userActions","hotkeys","inactivityTimeout","autoplay","preload","html5","hls","overrideNative","browser","IS_SAFARI","videoAuxPlayer","el","addEventListener","event","preventDefault","onBeforeUnmount","options","locals","Date","getFullYear","_createElementVNode","_createTextVNode","onclick","script","_createElementBlock","_hoisted_1","_hoisted_4","teamStore","goLiveBanner","episodeStatusClass","episodeStatus","timeAgo","useTimeAgo","scheduledDateTime","__default__","components","VideoPlayer","videoOptions","fill","sources","String","setup","goLive"],"sourceRoot":""}
{"version":3,"file":"js/8240.js","mappings":"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","sources":["webpack:///./resources/js/Utilities/PageSetup.js","webpack:///./resources/js/Pages/Movies/Create.vue?4878","webpack:///./resources/js/Components/Global/Buttons/CancelButton.vue?b7c6","webpack:///./resources/js/Components/Global/Buttons/CancelButton.vue","webpack:///./resources/js/Components/Global/Modals/Messages.vue?dfe9","webpack:///./resources/js/Components/Global/Modals/Messages.vue","webpack:///./resources/js/Jetstream/ValidationErrors.vue?5fdc","webpack:///./resources/js/Jetstream/ValidationErrors.vue","webpack:///./resources/js/Pages/Movies/Create.vue","webpack:///./resources/js/Pages/Movies/Create.vue?3aad","webpack:///./resources/js/Pages/Movies/Create.vue?199b"],"sourcesContent":["import { onBeforeMount, onMounted } from 'vue'\nimport { useUserStore } from \"@/Stores/UserStore\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useVideoPlayerStore } from \"@/Stores/VideoPlayerStore\"\nimport { Inertia } from '@inertiajs/inertia'\n\nexport function usePageSetup(pageName) {\n    const userStore = useUserStore()\n    const appSettingStore = useAppSettingStore()\n    const videoPlayerStore = useVideoPlayerStore()\n\n    appSettingStore.currentPage = pageName\n    appSettingStore.showFlashMessage = true\n    appSettingStore.pageIsHidden = false\n\n    if (userStore.isMobile || window.innerWidth < 1024 || appSettingStore.fullPage) {\n        appSettingStore.ott = 0;\n    } else {\n        appSettingStore.ott = 1;\n        appSettingStore.showOttButtons = true;\n    }\n\n    videoPlayerStore.makeVideoTopRight()\n\n    if (appSettingStore.pageReload) {\n        appSettingStore.pageReload = false\n        window.location.reload(true);\n    }\n    // Check if the URL contains query strings\n\n\n    // Only scroll into view if there are no query strings\n\n        // const topDiv = document.getElementById(\"topDiv\")\n        // if (topDiv) {\n        //     topDiv.scrollIntoView()\n        // }\n        Inertia.on('navigate', (event) => {\n            if (userStore.isMobile || window.innerWidth < 1024 || appSettingStore.fullPage) {\n                appSettingStore.ott = 0;\n            } else {\n                appSettingStore.ott = 1;\n            }\n            const hasQueryStrings = window.location.search !== '';\n            if (!hasQueryStrings || appSettingStore.shouldScrollToTop) {\n                requestAnimationFrame(() => {\n                    const topDiv = document.getElementById(\"topDiv\");\n                    if (topDiv) {\n                        topDiv.scrollIntoView({behavior: 'auto'});\n                    } else {\n                        window.scrollTo(0, 0);\n                    }\n                });\n            }\n            appSettingStore.shouldScrollToTop = false;\n        })\n    // Only update if we're not already on this page to avoid overwriting with the current URL\n    appSettingStore.setPrevUrl()\n    appSettingStore.showOttButtons = true\n    appSettingStore.noLayout = false\n\n    // Inertia.reload()\n\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".dropzone[data-v-01b13820]{align-items:center;border:2px dashed #6b7280;display:flex;flex-direction:column;height:200px;justify-content:center;row-gap:16px;transition:all .3s ease;width:400px}label[data-v-01b13820]{padding:8px 12px;transition:all .3s ease}.active-dropzone[data-v-01b13820],label[data-v-01b13820]{background-color:#4bb1b1;color:#fff}.active-dropzone[data-v-01b13820]{border-color:#fff}.active-dropzone label[data-v-01b13820]{background-color:#fff;color:#4bb1b1}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/Pages/Movies/Create.vue\"],\"names\":[],\"mappings\":\"AAiPA,2BAME,kBAAmB,CAEnB,yBAA0B,CAL1B,YAAa,CACb,qBAAsB,CAFtB,YAAa,CAGb,sBAAuB,CAEvB,YAAa,CAEb,uBAAyB,CARzB,WASF,CAEA,uBACE,gBAAiB,CAGjB,uBACF,CAEA,yDAJE,wBAAyB,CADzB,UASF,CAJA,kCAEE,iBAEF,CAEA,wCACE,qBAAsB,CACtB,aACF\",\"sourcesContent\":[\"<template>\\n\\n  <Head :title=\\\"`Upload Movie`\\\"/>\\n\\n  <header id=\\\"topDiv\\\" class=\\\"\\\">\\n\\n    <Message v-if=\\\"appSettingStore.showFlashMessage\\\" :flash=\\\"$page.props.flash\\\"/>\\n\\n    <div\\n        class=\\\"flex justify-between p-4 m-4 text-sm text-red-700 bg-red-100 rounded-lg dark:bg-red-200 dark:text-red-800\\\"\\n        role=\\\"alert\\\"\\n        v-if=\\\"props.errors.video\\\">\\n                <span class=\\\"font-medium\\\">\\n                    {{ props.errors.video }}\\n                </span>\\n    </div>\\n\\n  </header>\\n\\n\\n  <div class=\\\"place-self-center flex flex-col gap-y-3\\\">\\n    <div class=\\\"bg-white text-black p-5 mb-10\\\">\\n\\n      <div class=\\\"flex justify-between mb-3\\\">\\n        <div class=\\\"mb-4\\\">\\n          <h1 class=\\\"text-3xl font-semibold\\\">Add a Movie</h1>\\n        </div>\\n        <div>\\n          <div class=\\\"flex flex-wrap-reverse justify-end gap-2\\\">\\n            <CancelButton/>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div>\\n        <form @submit.prevent=\\\"submit\\\" enctype=\\\"multipart/form-data\\\">\\n          <div class=\\\"bg-orange-800 text-white p-4 mb-6\\\"><span class=\\\"font-semibold\\\">Note:</span> File uploads are\\n            limited to 500 MB until we implement a chunk method.\\n            TO DO: process video uploads (transcode and encrypt) using FFMPEG then upload it to our destination(s),\\n            whether that is a cloud service, an attached volume, remote server,\\n            or a peer-to-peer distribution network.<br>\\n            <!--                    For more info about chunking go to:-->\\n            <!--                        <a href=\\\"https://github.com/pionl/laravel-chunk-upload\\\" class=\\\"text-blue-400 hover:text-blue-200\\\" target=\\\"_blank\\\">-->\\n            <!--                            https://github.com/pionl/laravel-chunk-upload</a>-->\\n            <!--                        <br><br>-->\\n            <!--                        Also look at: <a href=\\\"https://pineco.de/chunked-file-upload-with-laravel-and-vue/\\\" class=\\\"text-blue-400 hover:text-blue-200\\\" target=\\\"_blank\\\">-->\\n            <!--                            https://pineco.de/chunked-file-upload-with-laravel-and-vue/-->\\n            <!--                        </a>-->\\n          </div>\\n          <input\\n              v-model=\\\"form.name\\\"\\n              type=\\\"text\\\"\\n              name=\\\"name\\\"\\n              id=\\\"name\\\"\\n              class=\\\"border border-gray-400 rounded w-full px-2 py-2 my-2\\\"\\n              placeholder=\\\"Movie Title\\\"\\n          />\\n          <div v-if=\\\"form.errors.name\\\" v-text=\\\"form.errors.name\\\"\\n               class=\\\"bg-red-600 p-2 w-full text-white font-semibold mt-1\\\"></div>\\n          <input\\n              v-model=\\\"form.logline\\\"\\n              type=\\\"text\\\"\\n              name=\\\"logline\\\"\\n              id=\\\"logline\\\"\\n              class=\\\"border border-gray-400 rounded w-full px-2 py-2 my-2\\\"\\n              placeholder=\\\"Logline\\\"\\n          />\\n          <div v-if=\\\"form.errors.logline\\\" v-text=\\\"form.errors.logline\\\"\\n               class=\\\"bg-red-600 p-2 w-full text-white font-semibold mt-1\\\"></div>\\n          <textarea\\n              v-model=\\\"form.description\\\"\\n              type=\\\"text\\\"\\n              name=\\\"description\\\"\\n              id=\\\"description\\\"\\n              cols=\\\"30\\\"\\n              row=\\\"20\\\"\\n              class=\\\"border border-gray-400 rounded w-full px-2 py-2 my-2\\\"\\n              placeholder=\\\"Description\\\"\\n          />\\n          <div v-if=\\\"form.errors.description\\\" v-text=\\\"form.errors.description\\\"\\n               class=\\\"bg-red-600 p-2 w-full text-white font-semibold mt-1\\\"></div>\\n          <input\\n              v-model=\\\"form.video_url\\\"\\n              type=\\\"text\\\"\\n              name=\\\"video_url\\\"\\n              id=\\\"video_url\\\"\\n              class=\\\"border border-gray-400 rounded w-full px-2 py-2 my-2\\\"\\n              placeholder=\\\"Link to existing video file (optional)\\\"\\n          />\\n          <div v-if=\\\"form.errors.video_url\\\" v-text=\\\"form.errors.video_url\\\"\\n               class=\\\"bg-red-600 p-2 w-full text-white font-semibold mt-1\\\"></div>\\n\\n          <div v-if=\\\"message\\\" v-text=\\\"message\\\"\\n               class=\\\"bg-red-600 p-2 w-full text-white font-semibold mt-1\\\"></div>\\n\\n          <div class=\\\" flex justify-start\\\">\\n            <button\\n                @click=\\\"submit\\\"\\n                class=\\\"bg-green-600 hover:bg-green-500 text-white rounded py-2 px-4 mt-2\\\"\\n                :disabled=\\\"form.processing\\\"\\n            >\\n              Save\\n            </button>\\n            <JetValidationErrors class=\\\"ml-4\\\"/>\\n          </div>\\n\\n        </form>\\n\\n        <!--                    <div class=\\\"border-t border-gray-800 py-8 mt-8\\\">-->\\n\\n        <!--                    <div-->\\n        <!--                        @dragenter.prevent=\\\"toggleActive\\\"-->\\n        <!--                        @dragleave.prevent=\\\"toggleActive\\\"-->\\n        <!--                        @dragover.prevent-->\\n        <!--                        @drop.prevent=\\\"drop\\\"-->\\n        <!--                        :class=\\\"{ 'active-dropzone': active }\\\"-->\\n        <!--                        class=\\\"dropzone mt-4\\\">-->\\n        <!--                        <span>Drag or Drop Video</span>-->\\n        <!--                        <span>OR</span>-->\\n        <!--                        <label for=\\\"dropzoneFile\\\" class=\\\"cursor-pointer hover:bg-gray-600\\\">Select Video</label>-->\\n        <!--                        <input-->\\n        <!--                            type=\\\"file\\\"-->\\n        <!--                            name=\\\"video\\\"-->\\n        <!--                            id=\\\"dropzoneFile\\\"-->\\n        <!--                            class=\\\"dropzoneFile border border-gray-400 rounded w-full px-2 py-2 my-2\\\"-->\\n        <!--                            @change=\\\"selectedFile\\\"-->\\n        <!--                            ref=\\\"fileInput\\\"-->\\n        <!--                            accept=\\\"video/*\\\"-->\\n        <!--                            @input=\\\"form.video = $event.target.files[0]\\\"-->\\n        <!--                            style=\\\"display: none\\\"/>-->\\n        <!--                    </div>-->\\n\\n        <!--                    <div class=\\\"mt-2\\\">File: {{ dropzoneFile.name }}</div>-->\\n\\n        <!--                    <div v-if=\\\"form.errors.video\\\" v-text=\\\"form.errors.video\\\"-->\\n        <!--                         class=\\\"bg-red-600 p-2 w-full text-white font-semibold mt-1\\\"></div>-->\\n\\n\\n        <!--                    </div>-->\\n\\n\\n      </div>\\n\\n\\n\\n      <section>\\n        <div class=\\\"flex w-fit mx-auto px-6 py-1 my-6 bg-gray-300 text-black font-semibold justify-center\\\">A NOTE TO THE DEVELOPERS:</div>\\n        <div class=\\\"w-fit mx-auto px-6 py-1 my-6 bg-gray-100 text-black justify-center space-y-4\\\">\\n          <h1>Designing an Effective Movie Database</h1>\\n          <h2>For Users: Cross-Category Accessibility</h2>\\n          <ul>\\n            <li><strong>Multiple Tags/Labels:</strong> Films can be tagged with multiple categories and sub-categories.</li>\\n            <li><strong>Advanced Search and Filtering:</strong> Implement a robust system for users to find films based on multiple criteria.</li>\\n            <li><strong>Recommendation System:</strong> A recommendation algorithm that suggests films based on user preferences.</li>\\n            <li><strong>User-Centric Interface:</strong> Design the UI to showcase movies in multiple relevant categories.</li>\\n          </ul>\\n\\n          <h2>For Film Producers: Categorization Process</h2>\\n          <ul>\\n            <li><strong>Primary Category Selection:</strong> Producers choose a primary category for their film.</li>\\n            <li><strong>Secondary/Tertiary Tags:</strong> Option to select additional categories or sub-categories.</li>\\n            <li><strong>Automated Suggestions:</strong> AI-driven tool for suggesting additional categorizations.</li>\\n            <li><strong>Editorial Oversight:</strong> Reviews by editors or curators for accurate classification.</li>\\n            <li><strong>Feedback Loop:</strong> Producers receive analytics on film discovery and viewing.</li>\\n          </ul>\\n\\n          <h2>Balancing Database Structure with User Experience</h2>\\n          <ul>\\n            <li><strong>Avoid Over-Categorization:</strong> Maintain a balance between comprehensiveness and simplicity.</li>\\n            <li><strong>Regular Updates and Maintenance:</strong> Periodically review the categorization system for relevance.</li>\\n            <li><strong>User Feedback:</strong> Collect and analyze user feedback for system improvements.</li>\\n          </ul>\\n        </div>\\n      </section>\\n\\n\\n\\n    </div>\\n  </div>\\n\\n</template>\\n\\n<script setup>\\nimport { ref } from 'vue'\\nimport { useForm } from '@inertiajs/inertia-vue3'\\nimport { usePageSetup } from '@/Utilities/PageSetup'\\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\\nimport JetValidationErrors from '@/Jetstream/ValidationErrors'\\nimport Message from '@/Components/Global/Modals/Messages'\\nimport CancelButton from '@/Components/Global/Buttons/CancelButton'\\n\\nusePageSetup('movies/create')\\n\\nconst appSettingStore = useAppSettingStore()\\n\\nlet props = defineProps({\\n  errors: ref(''),\\n  isHidden: ref(false),\\n  // filters: Object,\\n})\\n\\nlet form = useForm({\\n  name: '',\\n  description: '',\\n  video: '',\\n  video_url: '',\\n})\\n\\nlet save = () => {\\n  axios.post(route('movies.store', form.data))\\n}\\n\\nlet submit = () => {\\n  // form.append('form', json);\\n  // axios.post(\\\"/api/movies/upload\\\", form.data);\\n  form.post(route('movies.store', form))\\n}\\n\\nlet dropzoneFile = ref([])\\n\\nconst active = ref(false)\\n\\nconst toggleActive = () => {\\n  active.value = !active.value\\n}\\n\\nconst drop = (e) => {\\n  dropzoneFile.value = e.dataTransfer.files[0]\\n  active.value = !active.value\\n}\\n\\nconst selectedFile = () => {\\n  dropzoneFile.value = document.querySelector('.dropzoneFile').files[0]\\n}\\n\\n// Dropzone tutorial: https://www.youtube.com/watch?v=wWKhKPN_Pmw\\n\\n\\n</script>\\n\\n<style scoped>\\n.dropzone {\\n  width: 400px;\\n  height: 200px;\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: center;\\n  row-gap: 16px;\\n  border: 2px dashed #6b7280;\\n  transition: 0.3s ease all;\\n}\\n\\nlabel {\\n  padding: 8px 12px;\\n  color: #fff;\\n  background-color: #4bb1b1;\\n  transition: 0.3s ease all;\\n}\\n\\n.active-dropzone {\\n  color: #fff;\\n  border-color: #fff;\\n  background-color: #4bb1b1;\\n}\\n\\n.active-dropzone label {\\n  background-color: #fff;\\n  color: #4bb1b1;\\n}\\n\\n\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import script from \"./CancelButton.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CancelButton.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n    <button\n        @click.prevent=\"cancel\"\n        class=\"ml-2 px-4 py-2 text-white bg-orange-600 hover:bg-orange-500 rounded-lg\"\n    >Cancel\n    </button>\n  </div>\n</template>\n\n<script setup>\nimport { Inertia } from \"@inertiajs/inertia\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useUserStore } from '@/Stores/UserStore'\n\nconst appSettingStore = useAppSettingStore()\nconst userStore = useUserStore()\n\nlet props = defineProps({\n  url: String\n})\n\nfunction cancel() {\n  if (appSettingStore.prevUrl) {\n    if (props.url) {\n      Inertia.visit(props.url)\n    } else {\n      Inertia.visit(appSettingStore.prevUrl)\n    }\n  } else {\n    if (props.url) {\n      Inertia.visit(props.url)\n    } else {\n      // Fallback if prevUrl is not available\n      let prevUrl = userStore.isCreator ? '/dashboard' : '/';\n      Inertia.visit(prevUrl);\n    }\n  }\n}\n</script>\n","import script from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"mx-4 my-4\">\n    <div class=\"alert alert-info mt-4\"\n         v-if=\"props.flash.message\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" class=\"stroke-current shrink-0 w-6 h-6\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n      </svg>\n      <span>{{ props.flash.message }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-success mt-4 mx-3\"\n         v-if=\"props.flash.success\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.success }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-warning mt-4 mx-3\"\n         v-if=\"props.flash.warning\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"/>\n      </svg>\n      <span>{{ props.flash.warning }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-error mt-4 mx-3\"\n         v-if=\"props.flash.error\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.error }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n  </div>\n\n</template>\n\n<script setup>\nimport { Inertia } from \"@inertiajs/inertia\"\nimport { computed } from \"vue\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\n\nconst appSettingStore = useAppSettingStore()\n\nappSettingStore.showFlashMessage = true\n\nlet props = defineProps({\n  flash: Object,\n\n})\n\nconst messageType = computed(() => ({\n  'text-green-700 bg-green-100 dark:bg-green-200 dark:text-green-800': props.flash.success,\n  'text-blue-700 bg-blue-100 dark:bg-blue-200 dark:text-blue-800': props.flash.message,\n  'text-orange-700 bg-orange-100 dark:bg-orange-200 dark:text-orange-800': props.flash.warning,\n  'text-red-700 bg-red-100 dark:bg-red-200 dark:text-red-800': props.flash.error,\n}))\n\nconst clearFlashMessage = async () => {\n  await Inertia.post(route('flash.clear'));\n  Inertia.reload();\n};\n</script>\n","import script from \"./ValidationErrors.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ValidationErrors.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { computed } from 'vue';\nimport { usePage } from '@inertiajs/inertia-vue3';\n\nconst errors = computed(() => usePage().props.value.errors);\nconst hasErrors = computed(() => Object.keys(errors.value).length > 0);\n</script>\n\n<template>\n    <div v-if=\"hasErrors\">\n        <div class=\"font-medium text-red-600\">\n            Whoops! Something went wrong.\n        </div>\n\n        <ul class=\"mt-3 list-disc list-inside text-sm text-red-600\">\n            <li v-for=\"(error, key) in errors\" :key=\"key\">\n                {{ error }}\n            </li>\n        </ul>\n    </div>\n</template>\n","<template>\n\n  <Head :title=\"`Upload Movie`\"/>\n\n  <header id=\"topDiv\" class=\"\">\n\n    <Message v-if=\"appSettingStore.showFlashMessage\" :flash=\"$page.props.flash\"/>\n\n    <div\n        class=\"flex justify-between p-4 m-4 text-sm text-red-700 bg-red-100 rounded-lg dark:bg-red-200 dark:text-red-800\"\n        role=\"alert\"\n        v-if=\"props.errors.video\">\n                <span class=\"font-medium\">\n                    {{ props.errors.video }}\n                </span>\n    </div>\n\n  </header>\n\n\n  <div class=\"place-self-center flex flex-col gap-y-3\">\n    <div class=\"bg-white text-black p-5 mb-10\">\n\n      <div class=\"flex justify-between mb-3\">\n        <div class=\"mb-4\">\n          <h1 class=\"text-3xl font-semibold\">Add a Movie</h1>\n        </div>\n        <div>\n          <div class=\"flex flex-wrap-reverse justify-end gap-2\">\n            <CancelButton/>\n          </div>\n        </div>\n      </div>\n\n      <div>\n        <form @submit.prevent=\"submit\" enctype=\"multipart/form-data\">\n          <div class=\"bg-orange-800 text-white p-4 mb-6\"><span class=\"font-semibold\">Note:</span> File uploads are\n            limited to 500 MB until we implement a chunk method.\n            TO DO: process video uploads (transcode and encrypt) using FFMPEG then upload it to our destination(s),\n            whether that is a cloud service, an attached volume, remote server,\n            or a peer-to-peer distribution network.<br>\n            <!--                    For more info about chunking go to:-->\n            <!--                        <a href=\"https://github.com/pionl/laravel-chunk-upload\" class=\"text-blue-400 hover:text-blue-200\" target=\"_blank\">-->\n            <!--                            https://github.com/pionl/laravel-chunk-upload</a>-->\n            <!--                        <br><br>-->\n            <!--                        Also look at: <a href=\"https://pineco.de/chunked-file-upload-with-laravel-and-vue/\" class=\"text-blue-400 hover:text-blue-200\" target=\"_blank\">-->\n            <!--                            https://pineco.de/chunked-file-upload-with-laravel-and-vue/-->\n            <!--                        </a>-->\n          </div>\n          <input\n              v-model=\"form.name\"\n              type=\"text\"\n              name=\"name\"\n              id=\"name\"\n              class=\"border border-gray-400 rounded w-full px-2 py-2 my-2\"\n              placeholder=\"Movie Title\"\n          />\n          <div v-if=\"form.errors.name\" v-text=\"form.errors.name\"\n               class=\"bg-red-600 p-2 w-full text-white font-semibold mt-1\"></div>\n          <input\n              v-model=\"form.logline\"\n              type=\"text\"\n              name=\"logline\"\n              id=\"logline\"\n              class=\"border border-gray-400 rounded w-full px-2 py-2 my-2\"\n              placeholder=\"Logline\"\n          />\n          <div v-if=\"form.errors.logline\" v-text=\"form.errors.logline\"\n               class=\"bg-red-600 p-2 w-full text-white font-semibold mt-1\"></div>\n          <textarea\n              v-model=\"form.description\"\n              type=\"text\"\n              name=\"description\"\n              id=\"description\"\n              cols=\"30\"\n              row=\"20\"\n              class=\"border border-gray-400 rounded w-full px-2 py-2 my-2\"\n              placeholder=\"Description\"\n          />\n          <div v-if=\"form.errors.description\" v-text=\"form.errors.description\"\n               class=\"bg-red-600 p-2 w-full text-white font-semibold mt-1\"></div>\n          <input\n              v-model=\"form.video_url\"\n              type=\"text\"\n              name=\"video_url\"\n              id=\"video_url\"\n              class=\"border border-gray-400 rounded w-full px-2 py-2 my-2\"\n              placeholder=\"Link to existing video file (optional)\"\n          />\n          <div v-if=\"form.errors.video_url\" v-text=\"form.errors.video_url\"\n               class=\"bg-red-600 p-2 w-full text-white font-semibold mt-1\"></div>\n\n          <div v-if=\"message\" v-text=\"message\"\n               class=\"bg-red-600 p-2 w-full text-white font-semibold mt-1\"></div>\n\n          <div class=\" flex justify-start\">\n            <button\n                @click=\"submit\"\n                class=\"bg-green-600 hover:bg-green-500 text-white rounded py-2 px-4 mt-2\"\n                :disabled=\"form.processing\"\n            >\n              Save\n            </button>\n            <JetValidationErrors class=\"ml-4\"/>\n          </div>\n\n        </form>\n\n        <!--                    <div class=\"border-t border-gray-800 py-8 mt-8\">-->\n\n        <!--                    <div-->\n        <!--                        @dragenter.prevent=\"toggleActive\"-->\n        <!--                        @dragleave.prevent=\"toggleActive\"-->\n        <!--                        @dragover.prevent-->\n        <!--                        @drop.prevent=\"drop\"-->\n        <!--                        :class=\"{ 'active-dropzone': active }\"-->\n        <!--                        class=\"dropzone mt-4\">-->\n        <!--                        <span>Drag or Drop Video</span>-->\n        <!--                        <span>OR</span>-->\n        <!--                        <label for=\"dropzoneFile\" class=\"cursor-pointer hover:bg-gray-600\">Select Video</label>-->\n        <!--                        <input-->\n        <!--                            type=\"file\"-->\n        <!--                            name=\"video\"-->\n        <!--                            id=\"dropzoneFile\"-->\n        <!--                            class=\"dropzoneFile border border-gray-400 rounded w-full px-2 py-2 my-2\"-->\n        <!--                            @change=\"selectedFile\"-->\n        <!--                            ref=\"fileInput\"-->\n        <!--                            accept=\"video/*\"-->\n        <!--                            @input=\"form.video = $event.target.files[0]\"-->\n        <!--                            style=\"display: none\"/>-->\n        <!--                    </div>-->\n\n        <!--                    <div class=\"mt-2\">File: {{ dropzoneFile.name }}</div>-->\n\n        <!--                    <div v-if=\"form.errors.video\" v-text=\"form.errors.video\"-->\n        <!--                         class=\"bg-red-600 p-2 w-full text-white font-semibold mt-1\"></div>-->\n\n\n        <!--                    </div>-->\n\n\n      </div>\n\n\n\n      <section>\n        <div class=\"flex w-fit mx-auto px-6 py-1 my-6 bg-gray-300 text-black font-semibold justify-center\">A NOTE TO THE DEVELOPERS:</div>\n        <div class=\"w-fit mx-auto px-6 py-1 my-6 bg-gray-100 text-black justify-center space-y-4\">\n          <h1>Designing an Effective Movie Database</h1>\n          <h2>For Users: Cross-Category Accessibility</h2>\n          <ul>\n            <li><strong>Multiple Tags/Labels:</strong> Films can be tagged with multiple categories and sub-categories.</li>\n            <li><strong>Advanced Search and Filtering:</strong> Implement a robust system for users to find films based on multiple criteria.</li>\n            <li><strong>Recommendation System:</strong> A recommendation algorithm that suggests films based on user preferences.</li>\n            <li><strong>User-Centric Interface:</strong> Design the UI to showcase movies in multiple relevant categories.</li>\n          </ul>\n\n          <h2>For Film Producers: Categorization Process</h2>\n          <ul>\n            <li><strong>Primary Category Selection:</strong> Producers choose a primary category for their film.</li>\n            <li><strong>Secondary/Tertiary Tags:</strong> Option to select additional categories or sub-categories.</li>\n            <li><strong>Automated Suggestions:</strong> AI-driven tool for suggesting additional categorizations.</li>\n            <li><strong>Editorial Oversight:</strong> Reviews by editors or curators for accurate classification.</li>\n            <li><strong>Feedback Loop:</strong> Producers receive analytics on film discovery and viewing.</li>\n          </ul>\n\n          <h2>Balancing Database Structure with User Experience</h2>\n          <ul>\n            <li><strong>Avoid Over-Categorization:</strong> Maintain a balance between comprehensiveness and simplicity.</li>\n            <li><strong>Regular Updates and Maintenance:</strong> Periodically review the categorization system for relevance.</li>\n            <li><strong>User Feedback:</strong> Collect and analyze user feedback for system improvements.</li>\n          </ul>\n        </div>\n      </section>\n\n\n\n    </div>\n  </div>\n\n</template>\n\n<script setup>\nimport { ref } from 'vue'\nimport { useForm } from '@inertiajs/inertia-vue3'\nimport { usePageSetup } from '@/Utilities/PageSetup'\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\nimport JetValidationErrors from '@/Jetstream/ValidationErrors'\nimport Message from '@/Components/Global/Modals/Messages'\nimport CancelButton from '@/Components/Global/Buttons/CancelButton'\n\nusePageSetup('movies/create')\n\nconst appSettingStore = useAppSettingStore()\n\nlet props = defineProps({\n  errors: ref(''),\n  isHidden: ref(false),\n  // filters: Object,\n})\n\nlet form = useForm({\n  name: '',\n  description: '',\n  video: '',\n  video_url: '',\n})\n\nlet save = () => {\n  axios.post(route('movies.store', form.data))\n}\n\nlet submit = () => {\n  // form.append('form', json);\n  // axios.post(\"/api/movies/upload\", form.data);\n  form.post(route('movies.store', form))\n}\n\nlet dropzoneFile = ref([])\n\nconst active = ref(false)\n\nconst toggleActive = () => {\n  active.value = !active.value\n}\n\nconst drop = (e) => {\n  dropzoneFile.value = e.dataTransfer.files[0]\n  active.value = !active.value\n}\n\nconst selectedFile = () => {\n  dropzoneFile.value = document.querySelector('.dropzoneFile').files[0]\n}\n\n// Dropzone tutorial: https://www.youtube.com/watch?v=wWKhKPN_Pmw\n\n\n</script>\n\n<style scoped>\n.dropzone {\n  width: 400px;\n  height: 200px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  row-gap: 16px;\n  border: 2px dashed #6b7280;\n  transition: 0.3s ease all;\n}\n\nlabel {\n  padding: 8px 12px;\n  color: #fff;\n  background-color: #4bb1b1;\n  transition: 0.3s ease all;\n}\n\n.active-dropzone {\n  color: #fff;\n  border-color: #fff;\n  background-color: #4bb1b1;\n}\n\n.active-dropzone label {\n  background-color: #fff;\n  color: #4bb1b1;\n}\n\n\n</style>\n","import api from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-9.use[1]!../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-9.use[2]!../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./Create.vue?vue&type=style&index=0&id=01b13820&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./Create.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Create.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Create.vue?vue&type=style&index=0&id=01b13820&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-01b13820\"]])\n\nexport default __exports__"],"names":["usePageSetup","pageName","userStore","useUserStore","appSettingStore","useAppSettingStore","videoPlayerStore","useVideoPlayerStore","currentPage","showFlashMessage","pageIsHidden","isMobile","window","innerWidth","fullPage","ott","showOttButtons","makeVideoTopRight","pageReload","location","reload","Inertia","on","event","search","shouldScrollToTop","requestAnimationFrame","topDiv","document","getElementById","scrollIntoView","behavior","scrollTo","setPrevUrl","noLayout","___CSS_LOADER_EXPORT___","push","module","id","props","__props","cancel","prevUrl","url","visit","isCreator","clearFlashMessage","computed","flash","success","message","warning","error","_ref","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","post","route","stop","apply","arguments","errors","usePage","value","hasErrors","Object","keys","length","form","useForm","name","description","video","video_url","submit","ref","options","locals"],"sourceRoot":""}
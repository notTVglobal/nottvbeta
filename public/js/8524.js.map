{"version":3,"file":"js/8524.js","mappings":"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","sources":["webpack:///./resources/js/Stores/ShowStore.js","webpack:///./resources/js/Pages/Movies/Upload.chunk.notWorking.vue?212a","webpack:///./resources/js/Pages/Movies/Upload.chunk.notWorking.vue","webpack:///./resources/js/Pages/Movies/Upload.chunk.notWorking.vue?63d1","webpack:///./resources/js/Pages/Movies/Upload.chunk.notWorking.vue?23c1"],"sourcesContent":["import { defineStore } from \"pinia\";\n\nexport let useShowStore = defineStore('showStore', {\n    state: () => ({\n        id: 0,\n        name: '',\n        category_id: 0,\n        category_sub_id: 0,\n        category_description: '',\n        sub_categories: [],\n        description: '',\n        posterName: [],\n        posterId: [0],\n        episodes: [],\n        team_id: 'team id',\n        episodePoster: '',\n        noteEdit: 0,\n        note: '',\n        saveNoteProcessing: Boolean,\n        errorMessage: '',\n\n    }),\n\n    actions: {\n        async fill() {\n            let r = await import('@/Json/show.json');\n            this.$state = r.default;\n        }\n    },\n\n    getters: {\n        //\n    }\n});\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".dropzone[data-v-6a54bc5e]{align-items:center;border:2px dashed #6b7280;display:flex;flex-direction:column;height:200px;justify-content:center;row-gap:16px;transition:all .3s ease;width:400px}label[data-v-6a54bc5e]{padding:8px 12px;transition:all .3s ease}.active-dropzone[data-v-6a54bc5e],label[data-v-6a54bc5e]{background-color:#4bb1b1;color:#fff}.active-dropzone[data-v-6a54bc5e]{border-color:#fff}.active-dropzone label[data-v-6a54bc5e]{background-color:#fff;color:#4bb1b1}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/Pages/Movies/Upload.chunk.notWorking.vue\"],\"names\":[],\"mappings\":\"AAuTA,2BAMI,kBAAmB,CAEnB,yBAA0B,CAL1B,YAAa,CACb,qBAAsB,CAFtB,YAAa,CAGb,sBAAuB,CAEvB,YAAa,CAEb,uBAAyB,CARzB,WASJ,CAEA,uBACI,gBAAiB,CAGjB,uBACJ,CAEA,yDAJI,wBAAyB,CADzB,UASJ,CAJA,kCAEI,iBAEJ,CAEA,wCACQ,qBAAsB,CACtB,aACJ\",\"sourcesContent\":[\"<template>\\n\\n    <Head :title=\\\"`Upload Movie`\\\"/>\\n\\n    <header id=\\\"topDiv\\\" class=\\\"md:pageWidth pageWidthSmall\\\">\\n\\n        <Message v-if=\\\"userStore.showFlashMessage\\\" :flash=\\\"$page.props.flash\\\"/>\\n\\n        <div class=\\\"flex justify-between p-4 m-4 text-sm text-red-700 bg-red-100 rounded-lg dark:bg-red-200 dark:text-red-800\\\"\\n             role=\\\"alert\\\"\\n             v-if=\\\"props.errors.video\\\">\\n                <span class=\\\"font-medium\\\">\\n                    {{ props.errors.video }}\\n                </span>\\n        </div>\\n\\n    </header>\\n\\n\\n    <div class=\\\"place-self-center flex flex-col gap-y-3\\\">\\n        <div class=\\\"bg-white text-black p-5 mb-10\\\">\\n\\n            <div class=\\\"flex justify-between mb-3\\\">\\n                <div class=\\\"mb-4\\\">\\n                    <h1 class=\\\"text-3xl font-semibold\\\">Movie Upload</h1>\\n                </div>\\n                <div>\\n                    <div class=\\\"flex flex-wrap-reverse justify-end gap-2\\\">\\n                        <Link :href=\\\"`/dashboard`\\\">\\n                            <button\\n                                class=\\\"px-4 py-2 text-white bg-blue-600 hover:bg-blue-500 rounded-lg\\\"\\n                            >Dashboard\\n                            </button>\\n                        </Link>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div>\\n<!--                <form @submit.prevent=\\\"submit\\\" enctype=\\\"multipart/form-data\\\">-->\\n<!--                    <div class=\\\"bg-orange-800 text-white p-4 mb-6\\\"><span class=\\\"font-semibold\\\">Note:</span> File uploads are limited to 500 MB until we implement a chunk method.-->\\n<!--                    This will require storing the uploaded file on the server in a temp directory, then we can process it and encrypt it using-->\\n<!--                    FFMPEG and finally upload it to our destination(s), whether that is Digital Ocean Spaces, an attached volume, remote server,-->\\n<!--                    or a Peer-to-peer distribution network. We also need to implement file validation and restrict the filetypes that can be uploaded.<br>-->\\n<!--                    For more info about chunking go to:-->\\n<!--                        <a href=\\\"https://github.com/pionl/laravel-chunk-upload\\\" class=\\\"text-blue-400 hover:text-blue-200\\\" target=\\\"_blank\\\">-->\\n<!--                            https://github.com/pionl/laravel-chunk-upload</a>-->\\n<!--                        <br><br>-->\\n<!--                        Also look at: <a href=\\\"https://pineco.de/chunked-file-upload-with-laravel-and-vue/\\\" class=\\\"text-blue-400 hover:text-blue-200\\\" target=\\\"_blank\\\">-->\\n<!--                            https://pineco.de/chunked-file-upload-with-laravel-and-vue/-->\\n<!--                        </a>-->\\n<!--                    </div>-->\\n<!--                    <input-->\\n<!--                        v-model=\\\"form.name\\\"-->\\n<!--                        type=\\\"text\\\"-->\\n<!--                        name=\\\"name\\\"-->\\n<!--                        id=\\\"name\\\"-->\\n<!--                        class=\\\"border border-gray-400 rounded w-full px-2 py-2 my-2\\\"-->\\n<!--                        placeholder=\\\"Movie Title\\\"-->\\n<!--                    />-->\\n<!--                    <div v-if=\\\"form.errors.name\\\" v-text=\\\"form.errors.name\\\"-->\\n<!--                         class=\\\"bg-red-600 p-2 w-full text-white font-semibold mt-1\\\"></div>-->\\n<!--                    <textarea-->\\n<!--                        v-model=\\\"form.description\\\"-->\\n<!--                        type=\\\"text\\\"-->\\n<!--                        name=\\\"description\\\"-->\\n<!--                        id=\\\"description\\\"-->\\n<!--                        cols=\\\"30\\\"-->\\n<!--                        row=\\\"20\\\"-->\\n<!--                        class=\\\"border border-gray-400 rounded w-full px-2 py-2 my-2\\\"-->\\n<!--                        placeholder=\\\"Description\\\"-->\\n<!--                    />-->\\n<!--                    <div v-if=\\\"form.errors.description\\\" v-text=\\\"form.errors.description\\\"-->\\n<!--                         class=\\\"bg-red-600 p-2 w-full text-white font-semibold mt-1\\\"></div>-->\\n<!--                    <input-->\\n<!--                        v-model=\\\"form.file_url\\\"-->\\n<!--                        type=\\\"text\\\"-->\\n<!--                        name=\\\"file_url\\\"-->\\n<!--                        id=\\\"file_url\\\"-->\\n<!--                        class=\\\"border border-gray-400 rounded w-full px-2 py-2 my-2\\\"-->\\n<!--                        placeholder=\\\"Link to existing video file (optional)\\\"-->\\n<!--                    />-->\\n<!--                    <div v-if=\\\"form.errors.file_url\\\" v-text=\\\"form.errors.file_url\\\"-->\\n<!--                         class=\\\"bg-red-600 p-2 w-full text-white font-semibold mt-1\\\"></div>-->\\n\\n<!--                    <div-->\\n<!--                        @dragenter.prevent=\\\"toggleActive\\\"-->\\n<!--                        @dragleave.prevent=\\\"toggleActive\\\"-->\\n<!--                        @dragover.prevent-->\\n<!--                        @drop.prevent=\\\"drop\\\"-->\\n<!--                        :class=\\\"{ 'active-dropzone': active }\\\"-->\\n<!--                        class=\\\"dropzone mt-4\\\">-->\\n<!--                        <span>Drag or Drop Video</span>-->\\n<!--                        <span>OR</span>-->\\n<!--                        <label for=\\\"dropzoneFile\\\" class=\\\"cursor-pointer hover:bg-gray-600\\\">Select Video</label>-->\\n<!--                        <input-->\\n<!--                            type=\\\"file\\\"-->\\n<!--                            name=\\\"video\\\"-->\\n<!--                            id=\\\"dropzoneFile\\\"-->\\n<!--                            class=\\\"dropzoneFile border border-gray-400 rounded w-full px-2 py-2 my-2\\\"-->\\n<!--                            @change=\\\"selectedFile\\\"-->\\n<!--                            ref=\\\"fileInput\\\"-->\\n<!--                            accept=\\\"video/*\\\"-->\\n<!--                            @input=\\\"form.video = $event.target.files[0]\\\"-->\\n<!--                            style=\\\"display: none\\\"/>-->\\n<!--                    </div>-->\\n\\n<!--                    <progress :value=\\\"progress\\\"></progress>-->\\n\\n<!--                    <div class=\\\"mt-2\\\">File: {{ dropzoneFile.name }}</div>-->\\n\\n<!--                    <div v-if=\\\"form.errors.video\\\" v-text=\\\"form.errors.video\\\"-->\\n<!--                         class=\\\"bg-red-600 p-2 w-full text-white font-semibold mt-1\\\"></div>-->\\n\\n\\n<!--                    <button-->\\n<!--                        @click=\\\"submit\\\"-->\\n<!--                        class=\\\"bg-green-600 hover:bg-green-500 text-white rounded py-2 px-4 mt-2\\\"-->\\n<!--                        :disabled=\\\"form.processing\\\"-->\\n<!--                    >-->\\n<!--                        Upload-->\\n<!--                    </button>-->\\n\\n<!--                </form>-->\\n\\n                <div> New chunk uploader</div>\\n                <input\\n                    type=\\\"file\\\"\\n                    @change=\\\"select\\\"\\n                    name=\\\"video\\\"\\n                    class=\\\"dropzoneFile border border-gray-400 rounded w-full px-2 py-2 my-2\\\"\\n                    ref=\\\"fileInputChunk\\\"\\n                    accept=\\\"video/*\\\"\\n                    @input=\\\"form.video = $event.target.files[0]\\\"\\n                    />\\n                >\\n                <progress :value=\\\"progress\\\" class=\\\"w-full\\\"></progress>\\n\\n            </div>\\n\\n        </div>\\n    </div>\\n\\n</template>\\n\\n<script setup>\\nimport Message from \\\"@/Components/Modals/Messages\\\"\\nimport {ref, onMounted, onBeforeMount} from \\\"vue\\\"\\n\\nimport { useVideoPlayerStore } from \\\"@/Stores/VideoPlayerStore.js\\\"\\nimport { useTeamStore } from \\\"@/Stores/TeamStore.js\\\"\\nimport { useShowStore } from \\\"@/Stores/ShowStore.js\\\"\\nimport {useUserStore} from \\\"@/Stores/UserStore\\\";\\n\\nlet videoPlayerStore = useVideoPlayerStore()\\nlet teamStore = useTeamStore()\\nlet showStore = useShowStore()\\nlet userStore = useUserStore()\\n\\nvideoPlayerStore.currentPage = 'movies'\\nuserStore.showFlashMessage = true;\\n\\n// onBeforeMount(() => {\\n//     userStore.scrollToTopCounter = 0;\\n// })\\n\\nonMounted(() => {\\n    videoPlayerStore.makeVideoTopRight();\\n    if (userStore.isMobile) {\\n        videoPlayerStore.ottClass = 'ottClose'\\n        videoPlayerStore.ott = 0\\n    }\\n    document.getElementById(\\\"topDiv\\\").scrollIntoView()\\n    // if (userStore.scrollToTopCounter === 0 ) {\\n    //\\n    //     userStore.scrollToTopCounter ++;\\n    // }\\n});\\n\\nlet props = defineProps({\\n    errors: ref(''),\\n    isHidden: ref(false),\\n    // filters: Object,\\n});\\n\\n// let form = useForm({\\n//     name: '',\\n//     description: '',\\n//     video: '',\\n//     file_url: '',\\n// });\\n\\n// Dropzone tutorial: https://www.youtube.com/watch?v=wWKhKPN_Pmw\\n\\n// let dropzoneFile = ref([]);\\n// // let chunks = ref([]);\\n// //\\n// const active = ref(false);\\n// //\\n// const toggleActive = () => {\\n//     active.value = !active.value;\\n// }\\n// //\\n// //\\n// //\\n// const drop = (e) => {\\n//     dropzoneFile.value = e.dataTransfer.files[0];\\n//     active.value = !active.value;\\n// }\\n// //\\n// const selectedFile = () => {\\n//     dropzoneFile.value = document.querySelector('.dropzoneFile').files[0];\\n// }\\n//\\n// const createChunks = (e) => {\\n//     let size = 2048,\\n//         chunks = Math.ceil(e.file.size / size);\\n//\\n//     for ( let i = 0; i < chunks; i++ ) {\\n//         e.chunks.push(e.file.slice(\\n//             i * size, Math.min(i * size + size, e.file.size), e.file.type\\n//         ));\\n//     }\\n// }\\n//\\n// function upload() {\\n//     axios(this.config).then(response => {\\n//         this.chunks.shift();\\n//     }).catch(error => {});\\n// }\\n//\\n\\n//\\nlet submit = () => {\\n    // form.append('form', json);\\n    // axios.post(\\\"/movies/upload\\\", form.data);\\n    form.post(route('movies.store', form));\\n};\\n\\n\\n</script>\\n\\n<script>\\nexport default {\\n    watch: {\\n        chunks(n, o) {\\n            if (n.length > 0) {\\n                this.upload();\\n            }\\n        }\\n    },\\n\\n    data() {\\n        return {\\n            file: null,\\n            chunks: [],\\n            uploaded: 0\\n        };\\n    },\\n\\n    computed: {\\n        progress() {\\n            return Math.floor((this.uploaded * 100) / this.file.size);\\n        },\\n        formData() {\\n            let formData = new FormData;\\n\\n            formData.set('is_last', this.chunks.length === 1);\\n            formData.set('file', this.chunks[0], `${this.file.name}.part`);\\n\\n            return formData;\\n        },\\n        config() {\\n            return {\\n                method: 'POST',\\n                data: this.formData,\\n                url: 'movies/upload',\\n                headers: {\\n                    'Content-Type': 'application/octet-stream'\\n                },\\n                onUploadProgress: event => {\\n                    this.uploaded += event.loaded;\\n                }\\n            };\\n        }\\n    },\\n\\n    methods: {\\n        select(event) {\\n            this.file = event.target.files.item(0);\\n            this.createChunks();\\n        },\\n        upload() {\\n            axios(this.config).then(response => {\\n                this.chunks.shift();\\n            }).catch(error => {});\\n        },\\n        createChunks() {\\n            let size = 2048, chunks = Math.ceil(this.file.size / size);\\n\\n            for (let i = 0; i < chunks; i++) {\\n                this.chunks.push(this.file.slice(\\n                    i * size, Math.min(i * size + size, this.file.size), this.file.type\\n                ));\\n            }\\n        }\\n    }\\n}\\n</script>\\n\\n<style scoped>\\n.dropzone {\\n    width: 400px;\\n    height: 200px;\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: center;\\n    align-items: center;\\n    row-gap: 16px;\\n    border: 2px dashed #6b7280;\\n    transition: 0.3s ease all;\\n}\\n\\nlabel {\\n    padding: 8px 12px;\\n    color: #fff;\\n    background-color: #4bb1b1;\\n    transition: 0.3s ease all;\\n}\\n\\n.active-dropzone {\\n    color: #fff;\\n    border-color: #fff;\\n    background-color: #4bb1b1;\\n}\\n\\n.active-dropzone  label {\\n        background-color: #fff;\\n        color: #4bb1b1;\\n    }\\n\\n\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","<template>\n\n    <Head :title=\"`Upload Movie`\"/>\n\n    <header id=\"topDiv\" class=\"md:pageWidth pageWidthSmall\">\n\n        <Message v-if=\"userStore.showFlashMessage\" :flash=\"$page.props.flash\"/>\n\n        <div class=\"flex justify-between p-4 m-4 text-sm text-red-700 bg-red-100 rounded-lg dark:bg-red-200 dark:text-red-800\"\n             role=\"alert\"\n             v-if=\"props.errors.video\">\n                <span class=\"font-medium\">\n                    {{ props.errors.video }}\n                </span>\n        </div>\n\n    </header>\n\n\n    <div class=\"place-self-center flex flex-col gap-y-3\">\n        <div class=\"bg-white text-black p-5 mb-10\">\n\n            <div class=\"flex justify-between mb-3\">\n                <div class=\"mb-4\">\n                    <h1 class=\"text-3xl font-semibold\">Movie Upload</h1>\n                </div>\n                <div>\n                    <div class=\"flex flex-wrap-reverse justify-end gap-2\">\n                        <Link :href=\"`/dashboard`\">\n                            <button\n                                class=\"px-4 py-2 text-white bg-blue-600 hover:bg-blue-500 rounded-lg\"\n                            >Dashboard\n                            </button>\n                        </Link>\n                    </div>\n                </div>\n            </div>\n\n            <div>\n<!--                <form @submit.prevent=\"submit\" enctype=\"multipart/form-data\">-->\n<!--                    <div class=\"bg-orange-800 text-white p-4 mb-6\"><span class=\"font-semibold\">Note:</span> File uploads are limited to 500 MB until we implement a chunk method.-->\n<!--                    This will require storing the uploaded file on the server in a temp directory, then we can process it and encrypt it using-->\n<!--                    FFMPEG and finally upload it to our destination(s), whether that is Digital Ocean Spaces, an attached volume, remote server,-->\n<!--                    or a Peer-to-peer distribution network. We also need to implement file validation and restrict the filetypes that can be uploaded.<br>-->\n<!--                    For more info about chunking go to:-->\n<!--                        <a href=\"https://github.com/pionl/laravel-chunk-upload\" class=\"text-blue-400 hover:text-blue-200\" target=\"_blank\">-->\n<!--                            https://github.com/pionl/laravel-chunk-upload</a>-->\n<!--                        <br><br>-->\n<!--                        Also look at: <a href=\"https://pineco.de/chunked-file-upload-with-laravel-and-vue/\" class=\"text-blue-400 hover:text-blue-200\" target=\"_blank\">-->\n<!--                            https://pineco.de/chunked-file-upload-with-laravel-and-vue/-->\n<!--                        </a>-->\n<!--                    </div>-->\n<!--                    <input-->\n<!--                        v-model=\"form.name\"-->\n<!--                        type=\"text\"-->\n<!--                        name=\"name\"-->\n<!--                        id=\"name\"-->\n<!--                        class=\"border border-gray-400 rounded w-full px-2 py-2 my-2\"-->\n<!--                        placeholder=\"Movie Title\"-->\n<!--                    />-->\n<!--                    <div v-if=\"form.errors.name\" v-text=\"form.errors.name\"-->\n<!--                         class=\"bg-red-600 p-2 w-full text-white font-semibold mt-1\"></div>-->\n<!--                    <textarea-->\n<!--                        v-model=\"form.description\"-->\n<!--                        type=\"text\"-->\n<!--                        name=\"description\"-->\n<!--                        id=\"description\"-->\n<!--                        cols=\"30\"-->\n<!--                        row=\"20\"-->\n<!--                        class=\"border border-gray-400 rounded w-full px-2 py-2 my-2\"-->\n<!--                        placeholder=\"Description\"-->\n<!--                    />-->\n<!--                    <div v-if=\"form.errors.description\" v-text=\"form.errors.description\"-->\n<!--                         class=\"bg-red-600 p-2 w-full text-white font-semibold mt-1\"></div>-->\n<!--                    <input-->\n<!--                        v-model=\"form.file_url\"-->\n<!--                        type=\"text\"-->\n<!--                        name=\"file_url\"-->\n<!--                        id=\"file_url\"-->\n<!--                        class=\"border border-gray-400 rounded w-full px-2 py-2 my-2\"-->\n<!--                        placeholder=\"Link to existing video file (optional)\"-->\n<!--                    />-->\n<!--                    <div v-if=\"form.errors.file_url\" v-text=\"form.errors.file_url\"-->\n<!--                         class=\"bg-red-600 p-2 w-full text-white font-semibold mt-1\"></div>-->\n\n<!--                    <div-->\n<!--                        @dragenter.prevent=\"toggleActive\"-->\n<!--                        @dragleave.prevent=\"toggleActive\"-->\n<!--                        @dragover.prevent-->\n<!--                        @drop.prevent=\"drop\"-->\n<!--                        :class=\"{ 'active-dropzone': active }\"-->\n<!--                        class=\"dropzone mt-4\">-->\n<!--                        <span>Drag or Drop Video</span>-->\n<!--                        <span>OR</span>-->\n<!--                        <label for=\"dropzoneFile\" class=\"cursor-pointer hover:bg-gray-600\">Select Video</label>-->\n<!--                        <input-->\n<!--                            type=\"file\"-->\n<!--                            name=\"video\"-->\n<!--                            id=\"dropzoneFile\"-->\n<!--                            class=\"dropzoneFile border border-gray-400 rounded w-full px-2 py-2 my-2\"-->\n<!--                            @change=\"selectedFile\"-->\n<!--                            ref=\"fileInput\"-->\n<!--                            accept=\"video/*\"-->\n<!--                            @input=\"form.video = $event.target.files[0]\"-->\n<!--                            style=\"display: none\"/>-->\n<!--                    </div>-->\n\n<!--                    <progress :value=\"progress\"></progress>-->\n\n<!--                    <div class=\"mt-2\">File: {{ dropzoneFile.name }}</div>-->\n\n<!--                    <div v-if=\"form.errors.video\" v-text=\"form.errors.video\"-->\n<!--                         class=\"bg-red-600 p-2 w-full text-white font-semibold mt-1\"></div>-->\n\n\n<!--                    <button-->\n<!--                        @click=\"submit\"-->\n<!--                        class=\"bg-green-600 hover:bg-green-500 text-white rounded py-2 px-4 mt-2\"-->\n<!--                        :disabled=\"form.processing\"-->\n<!--                    >-->\n<!--                        Upload-->\n<!--                    </button>-->\n\n<!--                </form>-->\n\n                <div> New chunk uploader</div>\n                <input\n                    type=\"file\"\n                    @change=\"select\"\n                    name=\"video\"\n                    class=\"dropzoneFile border border-gray-400 rounded w-full px-2 py-2 my-2\"\n                    ref=\"fileInputChunk\"\n                    accept=\"video/*\"\n                    @input=\"form.video = $event.target.files[0]\"\n                    />\n                >\n                <progress :value=\"progress\" class=\"w-full\"></progress>\n\n            </div>\n\n        </div>\n    </div>\n\n</template>\n\n<script setup>\nimport Message from \"@/Components/Modals/Messages\"\nimport {ref, onMounted, onBeforeMount} from \"vue\"\n\nimport { useVideoPlayerStore } from \"@/Stores/VideoPlayerStore.js\"\nimport { useTeamStore } from \"@/Stores/TeamStore.js\"\nimport { useShowStore } from \"@/Stores/ShowStore.js\"\nimport {useUserStore} from \"@/Stores/UserStore\";\n\nlet videoPlayerStore = useVideoPlayerStore()\nlet teamStore = useTeamStore()\nlet showStore = useShowStore()\nlet userStore = useUserStore()\n\nvideoPlayerStore.currentPage = 'movies'\nuserStore.showFlashMessage = true;\n\n// onBeforeMount(() => {\n//     userStore.scrollToTopCounter = 0;\n// })\n\nonMounted(() => {\n    videoPlayerStore.makeVideoTopRight();\n    if (userStore.isMobile) {\n        videoPlayerStore.ottClass = 'ottClose'\n        videoPlayerStore.ott = 0\n    }\n    document.getElementById(\"topDiv\").scrollIntoView()\n    // if (userStore.scrollToTopCounter === 0 ) {\n    //\n    //     userStore.scrollToTopCounter ++;\n    // }\n});\n\nlet props = defineProps({\n    errors: ref(''),\n    isHidden: ref(false),\n    // filters: Object,\n});\n\n// let form = useForm({\n//     name: '',\n//     description: '',\n//     video: '',\n//     file_url: '',\n// });\n\n// Dropzone tutorial: https://www.youtube.com/watch?v=wWKhKPN_Pmw\n\n// let dropzoneFile = ref([]);\n// // let chunks = ref([]);\n// //\n// const active = ref(false);\n// //\n// const toggleActive = () => {\n//     active.value = !active.value;\n// }\n// //\n// //\n// //\n// const drop = (e) => {\n//     dropzoneFile.value = e.dataTransfer.files[0];\n//     active.value = !active.value;\n// }\n// //\n// const selectedFile = () => {\n//     dropzoneFile.value = document.querySelector('.dropzoneFile').files[0];\n// }\n//\n// const createChunks = (e) => {\n//     let size = 2048,\n//         chunks = Math.ceil(e.file.size / size);\n//\n//     for ( let i = 0; i < chunks; i++ ) {\n//         e.chunks.push(e.file.slice(\n//             i * size, Math.min(i * size + size, e.file.size), e.file.type\n//         ));\n//     }\n// }\n//\n// function upload() {\n//     axios(this.config).then(response => {\n//         this.chunks.shift();\n//     }).catch(error => {});\n// }\n//\n\n//\nlet submit = () => {\n    // form.append('form', json);\n    // axios.post(\"/movies/upload\", form.data);\n    form.post(route('movies.store', form));\n};\n\n\n</script>\n\n<script>\nexport default {\n    watch: {\n        chunks(n, o) {\n            if (n.length > 0) {\n                this.upload();\n            }\n        }\n    },\n\n    data() {\n        return {\n            file: null,\n            chunks: [],\n            uploaded: 0\n        };\n    },\n\n    computed: {\n        progress() {\n            return Math.floor((this.uploaded * 100) / this.file.size);\n        },\n        formData() {\n            let formData = new FormData;\n\n            formData.set('is_last', this.chunks.length === 1);\n            formData.set('file', this.chunks[0], `${this.file.name}.part`);\n\n            return formData;\n        },\n        config() {\n            return {\n                method: 'POST',\n                data: this.formData,\n                url: 'movies/upload',\n                headers: {\n                    'Content-Type': 'application/octet-stream'\n                },\n                onUploadProgress: event => {\n                    this.uploaded += event.loaded;\n                }\n            };\n        }\n    },\n\n    methods: {\n        select(event) {\n            this.file = event.target.files.item(0);\n            this.createChunks();\n        },\n        upload() {\n            axios(this.config).then(response => {\n                this.chunks.shift();\n            }).catch(error => {});\n        },\n        createChunks() {\n            let size = 2048, chunks = Math.ceil(this.file.size / size);\n\n            for (let i = 0; i < chunks; i++) {\n                this.chunks.push(this.file.slice(\n                    i * size, Math.min(i * size + size, this.file.size), this.file.type\n                ));\n            }\n        }\n    }\n}\n</script>\n\n<style scoped>\n.dropzone {\n    width: 400px;\n    height: 200px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    row-gap: 16px;\n    border: 2px dashed #6b7280;\n    transition: 0.3s ease all;\n}\n\nlabel {\n    padding: 8px 12px;\n    color: #fff;\n    background-color: #4bb1b1;\n    transition: 0.3s ease all;\n}\n\n.active-dropzone {\n    color: #fff;\n    border-color: #fff;\n    background-color: #4bb1b1;\n}\n\n.active-dropzone  label {\n        background-color: #fff;\n        color: #4bb1b1;\n    }\n\n\n</style>\n","import api from \"!../../../../node_modules/laravel-mix/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-9.use[1]!../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-9.use[2]!../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./Upload.chunk.notWorking.vue?vue&type=style&index=0&id=6a54bc5e&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./Upload.chunk.notWorking.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Upload.chunk.notWorking.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Upload.chunk.notWorking.vue?vue&type=style&index=0&id=6a54bc5e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-6a54bc5e\"]])\n\nexport default __exports__"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","useShowStore","defineStore","state","id","category_id","category_sub_id","category_description","sub_categories","description","posterName","posterId","episodes","team_id","episodePoster","noteEdit","note","saveNoteProcessing","Boolean","errorMessage","actions","fill","fn","_this","_callee","_context","$state","self","args","arguments","apply","err","undefined","getters","___CSS_LOADER_EXPORT___","module","__default__","watch","chunks","this","upload","data","file","uploaded","computed","progress","Math","floor","size","formData","FormData","set","concat","config","url","headers","onUploadProgress","event","loaded","methods","select","target","files","item","createChunks","_this2","axios","response","shift","ceil","min","videoPlayerStore","useVideoPlayerStore","userStore","useTeamStore","useUserStore","currentPage","showFlashMessage","onMounted","makeVideoTopRight","isMobile","ottClass","ott","document","getElementById","scrollIntoView","options","locals"],"sourceRoot":""}
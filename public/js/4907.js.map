{"version":3,"file":"js/4907.js","mappings":";kLAMO,SAASA,EAAaC,GACzB,IAAMC,GAAYC,EAAAA,EAAAA,gBACZC,GAAkBC,EAAAA,EAAAA,sBAClBC,GAAmBC,EAAAA,EAAAA,uBAEzBH,EAAgBI,YAAcP,EAC9BG,EAAgBK,kBAAmB,EACnCL,EAAgBM,cAAe,EAG3BR,EAAUS,UAAYC,OAAOC,WAAa,MAEnCT,EAAgBU,SADvBV,EAAgBW,IAAM,GAIM,IAAxBX,EAAgBW,MAChBX,EAAgBW,IAAM,GAG1BX,EAAgBY,gBAAiB,GAGrCV,EAAiBW,oBAEbb,EAAgBc,aAChBd,EAAgBc,YAAa,EAC7Bd,EAAgBe,iBAAkB,EAClCP,OAAOQ,SAASC,UAWhBC,EAAAA,GAAOC,GAAG,YAAY,SAACC,GAEftB,EAAUS,UAAYC,OAAOC,WAAa,MAAQT,EAAgBU,SAClEV,EAAgBW,IAAM,EAEM,IAAxBX,EAAgBW,MAChBX,EAAgBW,IAAM,GAIqB,KAA3BH,OAAOQ,SAASK,SAChBrB,EAAgBsB,mBACpCC,uBAAsB,WAClB,IAAMC,EAASC,SAASC,eAAe,UACnCF,EACAA,EAAOG,eAAe,CAACC,SAAU,SAEjCpB,OAAOqB,SAAS,EAAG,EAE3B,IAEJ7B,EAAgBsB,mBAAoB,CACxC,IAEJtB,EAAgB8B,aAChB9B,EAAgBY,gBAAiB,EACjCZ,EAAgB+B,UAAW,GAI3BC,EAAAA,EAAAA,QACI,kBAAMhC,EAAgBiC,aAAa,IACnC,SAACC,GAEOlC,EAAgBW,IADhBuB,EACsB,EAEA,CAE9B,GACA,CAAEC,WAAW,GAGrB,2zNCxDMC,EAAc,gCCzBpB,wCDaAxC,EAAAA,EAAAA,GAAa,aAKSyC,EAAAA,EAAAA,YAClBC,EAAQC,IAAIC,YADhB,IASIC,GAAOC,EAAAA,EAAAA,IAAQ,CAEnB,GAEIC,EAAS,WACTC,MAAMC,KAAK,WAAU,iBAAAC,KAAAC,IAAAC,MAAE,SAAAC,EAAOC,EAAKC,GAAG,IAAAC,EAAA,OAAAL,IAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACZC,OAAOC,SAASC,SAASC,OAAO,CAClDC,WAAY,CACR,CAEIC,MAAO,sBACPC,SAAU,IAGlBC,KAAM,eACNC,YAAa,GAAFC,OAAK9B,EAAW,oBAC3B+B,WAAY,GAAFD,OAAK9B,EAAW,wBAC5B,OAXIgB,EAAOE,EAAAc,KAYbjB,EAAIkB,SAAS,IAAKjB,EAAQkB,KAAK,wBAAAhB,EAAAiB,OAAA,GAAAtB,EAAA,mLAClC,gBAAAuB,EAAAC,GAAA,OAAA3B,EAAA4B,MAAA,KAAAC,UAAA,EAdoB,GAezB","sources":["webpack://nottvbeta/./resources/js/Utilities/PageSetup.js","webpack://nottvbeta/./resources/js/Pages/Payment2.vue","webpack://nottvbeta/./resources/js/Pages/Payment2.vue?aa88"],"sourcesContent":["import { onBeforeMount, onMounted, watch } from 'vue'\nimport { useUserStore } from \"@/Stores/UserStore\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useVideoPlayerStore } from \"@/Stores/VideoPlayerStore\"\nimport { router } from '@inertiajs/vue3'\n\nexport function usePageSetup(pageName) {\n    const userStore = useUserStore()\n    const appSettingStore = useAppSettingStore()\n    const videoPlayerStore = useVideoPlayerStore()\n\n    appSettingStore.currentPage = pageName\n    appSettingStore.showFlashMessage = true\n    appSettingStore.pageIsHidden = false\n\n// PageSetup utility\n    if (userStore.isMobile || window.innerWidth < 1024) {\n        appSettingStore.ott = 0; // Close all panels on mobile devices\n    } else if (appSettingStore.fullPage) {\n        appSettingStore.ott = 0; // Default to closed in fullPage mode\n    } else {\n        if (appSettingStore.ott === 0) {\n            appSettingStore.ott = 4\n        }\n        // appSettingStore.ott = 4; // Open OttChat by default on larger screens\n        appSettingStore.showOttButtons = true;\n    }\n\n    videoPlayerStore.makeVideoTopRight()\n\n    if (appSettingStore.pageReload) {\n        appSettingStore.pageReload = false\n        appSettingStore.pageWasReloaded = true\n        window.location.reload();\n    }\n    // Check if the URL contains query strings\n\n\n    // Only scroll into view if there are no query strings\n\n        // const topDiv = document.getElementById(\"topDiv\")\n        // if (topDiv) {\n        //     topDiv.scrollIntoView()\n        // }\n        router.on('navigate', (event) => {\n            // Ensure OTT panels do not open automatically on mobile devices\n            if (userStore.isMobile || window.innerWidth < 1024 || appSettingStore.fullPage) {\n                appSettingStore.ott = 0; // Close all panels on mobile devices\n            } else {\n                if (appSettingStore.ott === 0) {\n                    appSettingStore.ott = 4\n                }\n                // appSettingStore.ott = 0; // Default to closed on larger screens\n            }\n            const hasQueryStrings = window.location.search !== '';\n            if (!hasQueryStrings || appSettingStore.shouldScrollToTop) {\n                requestAnimationFrame(() => {\n                    const topDiv = document.getElementById(\"topDiv\");\n                    if (topDiv) {\n                        topDiv.scrollIntoView({behavior: 'auto'});\n                    } else {\n                        window.scrollTo(0, 0);\n                    }\n                });\n            }\n            appSettingStore.shouldScrollToTop = false;\n        })\n    // Only update if we're not already on this page to avoid overwriting with the current URL\n    appSettingStore.setPrevUrl()\n    appSettingStore.showOttButtons = true\n    appSettingStore.noLayout = false\n\n    // router.reload()\n\n    watch(\n        () => appSettingStore.isSmallScreen,\n        (newValue) => {\n            if (newValue) {\n                appSettingStore.ott = 0;\n            } else {\n                appSettingStore.ott = 4;\n            }\n        },\n        { immediate: true } // This option ensures the watch executes immediately with the current value\n    );\n\n}\n","<template>\n\n    <form @submit.prevent=\"submit\" >\n        <button type=\"submit\"\n                id=\"checkout-button\"\n                class=\"h-fit bg-blue-600 hover:bg-blue-500 text-white rounded py-2 px-4\"\n                :disabled=\"form.processing\">\n            Checkout</button>\n    </form>\n\n</template>\n\n<script setup>\nimport { onMounted } from \"vue\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { useForm } from \"@inertiajs/vue3\"\nimport { usePageSetup } from '@/Utilities/PageSetup'\n\nusePageSetup('payment2')\n\n// This is your test secret API key.\n// const stripePromise = loadStripe('pk_test_51KJwK5Kahp38LUVYOjg7h425exCr6UZmMm1M24d31ZaS0HTsgPWIZE9Hd2F0KnREVHuPm2VHesX3J5SQfFFg7fTC00DMNpq1Lj');\n\nconst stripePromise = loadStripe(\n    process.env.STRIPE_KEY\n);\n\n// const stripe = Stripe(process.env.STRIPE_SECRET_KEY);\n\n\nconst YOUR_DOMAIN = 'http://nottv.local:8000';\n\nlet form = useForm({\n\n});\n\nlet submit = () => {\n    axios.post('/upgrade', async (req, res) => {\n        const session = await stripe.checkout.sessions.create({\n            line_items: [\n                {\n                    // Provide the exact Price ID (for example, pr_1234) of the product you want to sell\n                    price: 'plan_LyCOYZAqzVdFpz',\n                    quantity: 1,\n                },\n            ],\n            mode: 'subscription',\n            success_url: `${YOUR_DOMAIN}/payment_success`,\n            cancel_url: `${YOUR_DOMAIN}/payment_cancelled`,\n        });\n        res.redirect(303, session.url);\n    });\n};\n\n</script>\n","import script from \"./Payment2.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Payment2.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["usePageSetup","pageName","userStore","useUserStore","appSettingStore","useAppSettingStore","videoPlayerStore","useVideoPlayerStore","currentPage","showFlashMessage","pageIsHidden","isMobile","window","innerWidth","fullPage","ott","showOttButtons","makeVideoTopRight","pageReload","pageWasReloaded","location","reload","router","on","event","search","shouldScrollToTop","requestAnimationFrame","topDiv","document","getElementById","scrollIntoView","behavior","scrollTo","setPrevUrl","noLayout","watch","isSmallScreen","newValue","immediate","YOUR_DOMAIN","loadStripe","process","env","STRIPE_KEY","form","useForm","submit","axios","post","_ref","_regeneratorRuntime","mark","_callee","req","res","session","wrap","_context","prev","next","stripe","checkout","sessions","create","line_items","price","quantity","mode","success_url","concat","cancel_url","sent","redirect","url","stop","_x","_x2","apply","arguments"],"sourceRoot":""}
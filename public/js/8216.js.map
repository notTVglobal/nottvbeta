{"version":3,"file":"js/8216.js","mappings":"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","sources":["webpack:///./resources/js/Utilities/PageSetup.js","webpack:///./resources/js/Components/Global/Modals/Messages.vue?dfe9","webpack:///./resources/js/Components/Global/Modals/Messages.vue","webpack:///./resources/js/Components/Pages/Admin/AdminHeader.vue","webpack:///./resources/js/Components/Pages/Admin/AdminHeader.vue?239a","webpack:///./resources/js/Pages/Admin/MistServerApi.vue?7cc8","webpack:///./resources/js/Pages/Admin/MistServerApi.vue"],"sourcesContent":["import { onMounted } from 'vue'\nimport { useUserStore } from \"@/Stores/UserStore\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useVideoPlayerStore } from \"@/Stores/VideoPlayerStore\"\nimport { Inertia } from \"@inertiajs/inertia\"\n\nexport function usePageSetup(pageName) {\n    const userStore = useUserStore()\n    const appSettingStore = useAppSettingStore()\n    const videoPlayerStore = useVideoPlayerStore()\n\n    appSettingStore.currentPage = pageName\n    appSettingStore.showFlashMessage = true\n    appSettingStore.pageIsHidden = false\n\n    if (userStore.isMobile) {\n        appSettingStore.ott = 0\n    }\n\n    videoPlayerStore.makeVideoTopRight()\n\n    onMounted(() => {\n        // Check if the URL contains query strings\n        const hasQueryStrings = window.location.search !== '';\n\n        // Only scroll into view if there are no query strings\n        if (!hasQueryStrings) {\n            const topDiv = document.getElementById(\"topDiv\")\n            if (topDiv) {\n                topDiv.scrollIntoView()\n            }\n        }\n        // Only update if we're not already on this page to avoid overwriting with the current URL\n        appSettingStore.setPrevUrl()\n        Inertia.reload()\n\n    });\n}\n","import script from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"mx-4 my-4\">\n    <div class=\"alert alert-info mt-4\"\n         v-if=\"props.flash.message\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" class=\"stroke-current shrink-0 w-6 h-6\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n      </svg>\n      <span>{{ props.flash.message }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-success mt-4 mx-3\"\n         v-if=\"props.flash.success\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.success }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-warning mt-4 mx-3\"\n         v-if=\"props.flash.warning\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"/>\n      </svg>\n      <span>{{ props.flash.warning }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-error mt-4 mx-3\"\n         v-if=\"props.flash.error\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.error }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n  </div>\n\n</template>\n\n<script setup>\nimport { Inertia } from \"@inertiajs/inertia\"\nimport { computed } from \"vue\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\n\nconst appSettingStore = useAppSettingStore()\n\nappSettingStore.showFlashMessage = true\n\nlet props = defineProps({\n  flash: Object,\n\n})\n\nconst messageType = computed(() => ({\n  'text-green-700 bg-green-100 dark:bg-green-200 dark:text-green-800': props.flash.success,\n  'text-blue-700 bg-blue-100 dark:bg-blue-200 dark:text-blue-800': props.flash.message,\n  'text-orange-700 bg-orange-100 dark:bg-orange-200 dark:text-orange-800': props.flash.warning,\n  'text-red-700 bg-red-100 dark:bg-red-200 dark:text-red-800': props.flash.error,\n}))\n\nconst clearFlashMessage = async () => {\n  await Inertia.post(route('flash.clear'));\n  Inertia.reload();\n};\n</script>\n","<template>\n  <header>\n    <div class=\"flex justify-between my-3\">\n      <div class=\"mb-4\">\n        <h1 class=\"text-3xl font-semibold\">\n          <slot/>\n        </h1>\n      </div>\n      <div>\n        <div class=\"flex flex-wrap-reverse justify-end gap-2\">\n          <Link :href=\"`/admin/settings`\">\n            <button\n                class=\"px-4 py-2 text-white bg-blue-600 hover:bg-blue-500 rounded-lg\"\n            >Admin Settings\n            </button>\n          </Link>\n        </div>\n      </div>\n    </div>\n  </header>\n\n</template>\n\n<script setup>\n\n</script>\n","import { render } from \"./AdminHeader.vue?vue&type=template&id=02887064\"\nconst script = {}\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import script from \"./MistServerApi.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./MistServerApi.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n\n  <Head title=\"MistServer API\"/>\n  <div class=\"place-self-center flex flex-col gap-y-3\">\n    <div id=\"topDiv\" class=\"bg-white text-black p-5 mb-10\">\n\n      <Message v-if=\"appSettingStore.showFlashMessage\" :flash=\"$page.props.flash\"/>\n\n      <AdminHeader>MistServer API</AdminHeader>\n\n      <div class=\"flex justify-between\">\n        <div>\n          <div class=\"\">Status: <span class=\"font-semibold\">{{ videoPlayerStore.status }}</span></div>\n\n          <button class=\"ml-2 py-2 my-2 px-4 text-white bg-orange-800 hover:bg-orange-500 mr-2 rounded-xl\"\n                  @click.prevent=\"getStatus\">\n            Get Status\n          </button>\n\n          <button v-if=\"videoPlayerStore.status === 'OK'\"\n                  class=\"ml-2 py-2 my-2 px-4 text-white bg-blue-800 hover:bg-blue-500 mr-2 rounded-xl\"\n                  @click.prevent=\"displayPushForm\">\n            Start Push\n          </button>\n\n          <button v-if=\"videoPlayerStore.status === 'OK'\"\n                  class=\"ml-2 py-2 my-2 px-4 text-white bg-blue-800 hover:bg-blue-500 mr-2 rounded-xl\"\n                  @click.prevent=\"addStream\">\n            Add Stream\n          </button>\n        </div>\n        <div v-if=\"videoPlayerStore.status === 'OK'\" class=\"\">\n\n        </div>\n\n      </div>\n\n      <div v-if=\"videoPlayerStore.status === 'CHALL'\" class=\"mb-8\">\n        <div class=\"py-3 px-4 mb-4 bg-orange-800 text-white rounded\">MistServer needs to be authenticated</div>\n\n        <div class=\"font-semibold text-2xl px-2\">\n          Connect to the MistServer\n        </div>\n\n        <div class=\"my-3 pl-2 text-sm w-1/2\">If the MistServer Status will either be OK, CHALL, NOACC or ACC_MADE.\n          If it's \"CHALL\" then you need to re-authenticate with the username and password.\n        </div>\n\n        <form @submit.prevent class=\"mt-2 pl-2\">\n\n          <div class=\"mt-2\">Challenge:</div>\n          <input type=\"text\" name=\"challenge\" id=\"challenge\" v-model=\"videoPlayerStore.challenge\" disabled/>\n\n          <div class=\"font-semibold mt-2\">MistServer Username:</div>\n          <input class=\"mb-2\" type=\"text\" name=\"username\" v-model=\"videoPlayerStore.mistUsername\"/>\n\n          <div class=\"font-semibold mt-2\">MistServer Password:</div>\n          <input type=\"password\" name=\"password\" v-model=\"form.password\"/>\n\n          <div class=\"mb-4 w-1/2 text-sm\"> Credit to Jeff Mott for his work on a pure JS implementation of the MD5\n            algorithm.\n            You can find the npm package <a href=\"https://www.npmjs.com/package/md5\" target=\"_blank\"\n                                            class=\"text-blue-800 hover:text-gray-500\">here.</a></div>\n\n          <button class=\"ml-2 py-2 px-4 text-white bg-green-800 hover:bg-green-500 rounded-xl\"\n                  @click.prevent=\"authenticateMistServer\">\n            Authenticate\n          </button>\n\n        </form>\n\n      </div>\n\n      <div v-if=\"videoPlayerStore.status === 'OK'\" class=\"mb-8\">\n        <div class=\"py-3 px-4 mb-4 bg-green-900 text-white rounded\">MistServer is connected</div>\n\n        <div class=\"grid grid-cols-1 md:grid-cols-3\">\n          <div class=\"col-span-1\">\n            <div class=\"flex flex-col space-y-2\">\n\n              <button class=\"ml-2 py-2 px-4 text-white bg-blue-800 hover:bg-blue-500 rounded-xl\"\n                      @click.prevent=\"checkUpdates\">\n                Check for Updates\n              </button>\n\n              <button class=\"ml-2 py-2 px-4 text-white bg-blue-800 hover:bg-blue-500 rounded-xl\"\n                      @click.prevent=\"getCapabilities\">\n                Get Server Capabilities\n              </button>\n\n              <button class=\"ml-2 py-2 px-4 text-white bg-blue-800 hover:bg-blue-500 mr-2 rounded-xl\"\n                      @click.prevent=\"getTotals\">\n                Get Totals\n              </button>\n\n              <button class=\"ml-2 py-2 px-4 text-white bg-blue-800 hover:bg-blue-500 mr-2 rounded-xl\"\n                      @click.prevent=\"getClients\">\n                Get Clients\n              </button>\n\n              <button class=\"ml-2 py-2 px-4 text-white bg-blue-800 hover:bg-blue-500 rounded-xl\"\n                      @click.prevent=\"getActiveStreams\">\n                Get Active Streams\n              </button>\n\n              <button class=\"ml-2 py-2 px-4 text-white bg-blue-800 hover:bg-blue-500 rounded-xl\"\n                      @click.prevent=\"getLog\">\n                Get Log\n              </button>\n\n              <button class=\"ml-2 py-2 px-4 text-white bg-orange-800 hover:bg-orange-500 rounded-xl\"\n                      @click.prevent=\"clearLog\">\n                Clear Log\n              </button>\n\n              <button class=\"ml-2 py-2 px-4 text-white bg-blue-800 hover:bg-blue-500 rounded-xl\"\n                      @click.prevent=\"browseRecordings\">\n                Recordings\n              </button>\n\n            </div>\n          </div>\n\n\n          <div class=\"md:col-span-2 pl-6\">\n            <!--                        <div v-if=\"videoPlayer.mistStatus\">-->\n            <!--                            <div class=\"mt-2\">Returned data:</div>-->\n            <!--                            <div class=\"\">-->\n            <!--                                {{videoPlayer.apiResponse}}-->\n            <!--                            </div>-->\n            <!--                        </div>-->\n            <div class=\"mt-2 text-xs uppercase\">Returned data:</div>\n\n            <div v-if=\"videoPlayerStore.mistDisplay === 'updates'\">\n              <table>\n                <thead>\n                <td></td>\n                <td></td>\n                <td></td>\n                <td></td>\n                <td></td>\n                </thead>\n                <tr v-for=\"update in videoPlayerStore.apiResponse.update\" :key=\"update.item\">\n                  <td>{{ update[0] }}</td>\n                  <td>{{ update[1] }}</td>\n                  <td>{{ update[2] }}</td>\n                  <td>{{ update[3] }}</td>\n                  <td>{{ update[4] }}</td>\n                </tr>\n              </table>\n            </div>\n\n            <div v-if=\"videoPlayerStore.mistDisplay === 'capabilities'\">\n              <div class=\"mt-2 font-semibold\">CPU</div>\n              <table>\n                <tr v-for=\"(value, name) in videoPlayerStore.apiResponse.capabilities.cpu[0]\" :key=\"name\">\n                  <td>{{ name }}</td>\n                  <td>{{ value }}</td>\n                </tr>\n              </table>\n              <div class=\"mt-2 font-semibold\">Load</div>\n              <table>\n                <tr v-for=\"(value, name) in videoPlayerStore.apiResponse.capabilities.load\" :key=\"name\">\n                  <td>{{ name }}</td>\n                  <td>{{ value }}</td>\n                </tr>\n              </table>\n              <div class=\"mt-2 font-semibold\">Mem</div>\n              <table>\n                <tr v-for=\"(value, name) in videoPlayerStore.apiResponse.capabilities.mem\" :key=\"name\">\n                  <td>{{ name }}</td>\n                  <td>{{ value }}</td>\n                </tr>\n              </table>\n            </div>\n\n            <div v-if=\"videoPlayerStore.mistDisplay === 'totals'\">\n\n              <table>\n                <thead>\n                <td>{{ videoPlayerStore.apiResponse.totals.fields[0] }}</td>\n                <td>{{ videoPlayerStore.apiResponse.totals.fields[1] }}</td>\n                <td>{{ videoPlayerStore.apiResponse.totals.fields[2] }}</td>\n                <td>{{ videoPlayerStore.apiResponse.totals.fields[3] }}</td>\n                <td>{{ videoPlayerStore.apiResponse.totals.fields[4] }}</td>\n                <td>{{ videoPlayerStore.apiResponse.totals.fields[5] }}</td>\n                <td>{{ videoPlayerStore.apiResponse.totals.fields[6] }}</td>\n                </thead>\n                <tr v-for=\"total in videoPlayerStore.apiResponse.totals.data.slice().reverse()\" :key=\"total.item\">\n                  <td>{{ total[0] }}</td>\n                  <td>{{ total[1] }}</td>\n                  <td>{{ total[2] }}</td>\n                  <td>{{ total[3] }}</td>\n                  <td>{{ total[4] }}</td>\n                  <td>{{ total[5] }}</td>\n                  <td>{{ total[6] }}</td>\n                </tr>\n              </table>\n            </div>\n\n            <div v-if=\"videoPlayerStore.mistDisplay === 'clients'\">\n\n              <table>\n                <thead>\n                <td>{{ videoPlayerStore.apiResponse.clients.fields[0] }}</td>\n                <td>{{ videoPlayerStore.apiResponse.clients.fields[1] }}</td>\n                <td>{{ videoPlayerStore.apiResponse.clients.fields[2] }}</td>\n                <td>{{ videoPlayerStore.apiResponse.clients.fields[3] }}</td>\n                <td>{{ videoPlayerStore.apiResponse.clients.fields[4] }}</td>\n                <td>{{ videoPlayerStore.apiResponse.clients.fields[5] }}</td>\n                <td>{{ videoPlayerStore.apiResponse.clients.fields[6] }}</td>\n                <td>{{ videoPlayerStore.apiResponse.clients.fields[7] }}</td>\n                <td>{{ videoPlayerStore.apiResponse.clients.fields[8] }}</td>\n                <td>{{ videoPlayerStore.apiResponse.clients.fields[9] }}</td>\n                <td>{{ videoPlayerStore.apiResponse.clients.fields[10] }}</td>\n                <td>{{ videoPlayerStore.apiResponse.clients.fields[11] }}</td>\n                <td>{{ videoPlayerStore.apiResponse.clients.fields[12] }}</td>\n                <td>{{ videoPlayerStore.apiResponse.clients.fields[13] }}</td>\n                <td>time</td>\n                </thead>\n                <tr v-for=\"client in videoPlayerStore.apiResponse.clients.data\" :key=\"client.item\">\n                  <td>{{ client[0] }}</td>\n                  <td>{{ client[1] }}</td>\n                  <td>{{ client[2] }}</td>\n                  <td>{{ client[3] }}</td>\n                  <td>{{ client[4] }}</td>\n                  <td>{{ client[5] }}</td>\n                  <td>{{ client[6] }}</td>\n                  <td>{{ client[7] }}</td>\n                  <td>{{ client[8] }}</td>\n                  <td>{{ client[9] }}</td>\n                  <td>{{ client[10] }}</td>\n                  <td>{{ client[11] }}</td>\n                  <td>{{ client[12] }}</td>\n                  <td>{{ client[13] }}</td>\n                  <td>{{ client[14] }}</td>\n                </tr>\n              </table>\n            </div>\n\n            <div v-if=\"videoPlayerStore.mistDisplay === 'active_streams'\">\n\n              <table>\n                <thead class=\"font-semibold mb-2\">\n                <td>Stream Name</td>\n                </thead>\n                <tr v-for=\"stream in videoPlayerStore.apiResponse.active_streams\" :key=\"stream.item\">\n                  <td>{{ stream }}</td>\n\n                </tr>\n              </table>\n            </div>\n\n            <div v-if=\"videoPlayerStore.mistDisplay === 'log'\">\n\n              <table>\n                <tr v-for=\"log in videoPlayerStore.apiResponse.log\" :key=\"log.item\">\n                  <td>{{ log[0] }}</td>\n                  <td>{{ log[1] }}</td>\n                  <td>{{ log[2] }}</td>\n                  <td>{{ log[3] }}</td>\n                </tr>\n              </table>\n            </div>\n\n            <div v-if=\"videoPlayerStore.mistDisplay === 'recordings'\">\n\n              <table>\n                <tr v-for=\"log in videoPlayerStore.apiResponse.log\" :key=\"log.item\">\n                  <td>{{ log[0] }}</td>\n                  <td>{{ log[1] }}</td>\n                  <td>{{ log[2] }}</td>\n                  <td>{{ log[3] }}</td>\n                </tr>\n              </table>\n            </div>\n\n            <!--                    Begin Push Form ... move this to its own component.           -->\n            <div v-if=\"videoPlayerStore.mistDisplayPushForm\">\n              <div class=\"font-semibold my-2\">Push a Stream:</div>\n              <div class=\"\">\n                <label for=\"streamName\" class=\"mb-1\">Choose stream:</label>\n                <select\n                    id=\"streamName\"\n                    v-model=\"streamStore.streamName\"\n                    class=\"w-full mb-2\">\n                  <option v-for=\"stream in videoPlayerStore.apiResponse.active_streams\" :key=\"stream\">\n                    {{ stream }}\n                  </option>\n                </select>\n                <label for=\"rtmpDestination\" class=\"mb-1\">Set destination:</label>\n                <input type=\"text\"\n                       id=\"rtmpDestination\"\n                       v-model=\"streamStore.rtmpDestination\"\n                       placeholder=\"RTMP destination...\"\n                       class=\"w-full my-2\">\n                <button @click.prevent=\"startPush\"\n                        class=\"ml-2 py-2 px-4 text-white bg-green-800 hover:bg-green-500 rounded-xl\">\n                  Push\n                </button>\n                <video src=\"https://streams.not.tv/vmixsource01%2bspring.mp4\" class=\"mt-20 w-96\" controls\n                       autoplay></video>\n                <br>Preview video is hardcoded to \"vmixsource01+spring\"\n              </div>\n            </div>\n\n          </div>\n\n\n        </div>\n\n      </div>\n\n    </div>\n  </div>\n\n</template>\n\n<script setup>\nimport { ref, reactive } from \"vue\"\nimport { usePageSetup } from '@/Utilities/PageSetup'\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useVideoPlayerStore } from \"@/Stores/VideoPlayerStore\"\nimport { useStreamStore } from \"@/Stores/StreamStore\"\nimport AdminHeader from \"@/Components/Pages/Admin/AdminHeader\"\nimport Message from \"@/Components/Global/Modals/Messages\"\n\nusePageSetup('mistServerApi')\n\nconst appSettingStore = useAppSettingStore()\nconst videoPlayerStore = useVideoPlayerStore()\nconst streamStore = useStreamStore()\n\nvideoPlayerStore.apiActiveStreams = null\nvideoPlayerStore.mistStatus = false\n\nlet props = defineProps({\n  apiReturn: Object,\n  message: ref(String),\n  mistNewHashedPassword: ref(String),\n});\n\nlet form = reactive({\n  challenge: videoPlayerStore.challenge,\n  status: videoPlayerStore.status,\n  username: '',\n  password: '',\n})\n\nvideoPlayerStore.mistUsername = 'nottvadmin';\nform.password = '20y$!PwX12S';\n\nvideoPlayerStore.mistStatus = true\nvideoPlayerStore.mistDisplayPushForm = false\n\nconst password = ref('');\n\nlet md5 = require('md5');\n\n\n////////////////////  MIST SERVER ADDRESS //////////////////////////////\n// Keep this here to change which MistServer is used for testing purposes\n//\n// let mistAddress = 'http://localhost:4242/api'\n// let mistAddress = 'https://beta-staging.not.tv/mistserver/api'\n// let mistAddress = 'https://mist.not.tv/'\n// let mistAddress = 'http://10.124.0.3:4242/api'\nlet mistAddress = 'http://localhost:4242/api'\n// let mistAddress = 'http://mist.nottv.io:4242/api'\n// let mistAddressWs = 'ws://mist.nottv.io:4242/ws'\n//\n///////////////////////////////////////////////////////////////////////\n\n\nasync function getStatus() {\n  await axios.get(mistAddress)\n      .then(response => {\n        videoPlayerStore.apiRequest = response.data;\n        videoPlayerStore.challenge = videoPlayerStore.apiRequest.authorize.challenge;\n        videoPlayerStore.status = videoPlayerStore.apiRequest.authorize.status;\n      })\n      .catch(error => {\n        console.log(error);\n      })\n  console.log('get API');\n\n}\n\n// The Websocket connection will give us near real-time\n// info from the server.\n//\n// Create the header for the MistServer WS API Request\n// const mistWsHeader = {\n//     headers: {\n//         \"Authorization\": \"json \"+AuthenticationGoesHere,\n//     },\n// };\n\nasync function authenticateMistServer() {\n  let hashedPassword = md5(form.password)\n  console.log(\"Hashed password: \" + hashedPassword)\n  let authReturn = md5(hashedPassword + videoPlayerStore.challenge)\n  videoPlayerStore.mistPassword = authReturn\n  console.log(\"Final hashed password: \" + authReturn)\n  await axios.get(mistAddress + '?command=%7B%0A%22authorize%22%3A%20%7B%0A%22username%22%3A%20%22' + videoPlayerStore.mistUsername + '%22,%0A%22password%22%3A%20%22' + authReturn + '%22%0A%7D%0A%7D')\n      .then(response => {\n        videoPlayerStore.apiRequest = response.data\n        videoPlayerStore.challenge = videoPlayerStore.apiRequest.authorize.challenge\n        videoPlayerStore.status = videoPlayerStore.apiRequest.authorize.status\n        console.log(response.data);\n      })\n      .catch(error => {\n        console.log(error)\n      })\n  console.log('mistServer API authorization sent.');\n\n}\n\nlet checkUpdates = () => {\n  videoPlayerStore.mistDisplay = \"updates\"\n  let request = \"\\\"update\\\": true\"\n  getApi(request)\n}\n\nlet getCapabilities = () => {\n  videoPlayerStore.mistDisplay = \"capabilities\"\n  let request = \"%22capabilities%22%3A%20true\"\n  getApi(request)\n}\n\nlet getTotals = () => {\n  videoPlayerStore.mistDisplay = \"totals\"\n  let request = \"\\\"totals\\\": {}\"\n  getApi(request)\n}\n\nlet getActiveStreams = () => {\n  videoPlayerStore.mistDisplay = \"active_streams\"\n  let request = \"\\\"active_streams\\\": true\"\n  getApi(request)\n}\n\nlet getClients = () => {\n  videoPlayerStore.mistDisplay = \"clients\"\n  // This request delivers information about each client connected\n  // to a specific stream name.\n  //\n  // let request = \"\\\"clients\\\": [{\\\"streams\\\": [\\\"vmixsource03\\\"],},{}]}\"\n\n  // This request delivers all clients\n  let request = \"\\\"clients\\\": {}\"\n  getApi(request)\n}\n\nlet getLog = () => {\n  videoPlayerStore.mistDisplay = \"log\"\n  let request = \"\\\"log\\\": {}\"\n  getApi(request)\n}\n\nlet clearLog = () => {\n  videoPlayerStore.mistDisplay = \"log\"\n  let request = \"\\\"clearstatlog\\\": true\"\n  getApi(request)\n}\n\nlet browseRecordings = () => {\n  videoPlayerStore.mistDisplay = \"recordings\"\n  let request = \"\\\"path\\\": \\\"/media/upload\\\"\"\n  getApi(request)\n}\n\n\nasync function getApi(request) {\n  videoPlayerStore.mistStatus = true\n  videoPlayerStore.mistDisplayPushForm = false\n  // let apiRequest = '%7B%20%22authorize%22%3A%20%7B%0A%20%20%20%20%22username%22%3A%20%22'+videoPlayer.mistUsername+'%22,%0A%20%20%20%20%22password%22%3A%20%22'+videoPlayer.mistPassword+'%22%0A%20%20%20%7D,%0A%20'+request+'%0A%7D'\n  let apiRequest = '%7B%20%22authorize%22%3A%20%7B%0A%20%20%20%20%22username%22%3A%20%22' + videoPlayerStore.mistUsername + '%22,%0A%20%20%20%20%22password%22%3A%20%22' + videoPlayerStore.mistPassword + '%22%0A%20%20%20%7D,%0A%20' + request + '%0A%0A%7D'\n  await axios.get(mistAddress + '?command=' + apiRequest)\n      .then(response => {\n        videoPlayerStore.apiResponse = response.data;\n        videoPlayerStore.challenge = videoPlayerStore.apiResponse.authorize.challenge;\n        videoPlayerStore.status = videoPlayerStore.apiResponse.authorize.status;\n      })\n      .catch(error => {\n        console.log(error);\n      })\n  console.log('mistServer API request sent.');\n}\n\nasync function getApiLocal(request) {\n  videoPlayerStore.mistStatus = true\n  videoPlayerStore.mistDisplayPushForm = false\n  // let apiRequest = '%7B%20%22authorize%22%3A%20%7B%0A%20%20%20%20%22username%22%3A%20%22'+videoPlayer.mistUsername+'%22,%0A%20%20%20%20%22password%22%3A%20%22'+videoPlayer.mistPassword+'%22%0A%20%20%20%7D,%0A%20'+request+'%0A%7D'\n  // let apiRequest = '%7B%20%22authorize%22%3A%20%7B%0A%20%20%20%20%22username%22%3A%20%22'+videoPlayer.mistUsername+'%22,%0A%20%20%20%20%22password%22%3A%20%22'+videoPlayer.mistPassword+'%22%0A%20%20%20%7D,%0A%20'+request+'%0A%0A%7D'\n  await axios.get(mistAddress + '?command=' + request)\n      .then(response => {\n        videoPlayerStore.apiResponse = response.data;\n        videoPlayerStore.challenge = videoPlayerStore.apiResponse.authorize.challenge;\n        videoPlayerStore.status = videoPlayerStore.apiResponse.authorize.status;\n      })\n      .catch(error => {\n        console.log(error);\n      })\n  console.log('mistServer API request sent.');\n}\n\n// Create method to push a stream somewhere\n//\n\n\nfunction displayPushForm() {\n  getActiveStreams()\n  videoPlayerStore.mistStatus = false\n  videoPlayerStore.mistDisplayPushForm = true\n}\n\nfunction startPush() {\n  // api call to mist server.\n  // \"push_start\":[\"STREAMNAME\", \"URI\"]\n  // let request = \"\\\"push_start\\\":[\\\"\"+streamStore.streamName+\", \\\"\"+streamStore.rtmpDestination+\"\\\"]\"\n  let request = '%7B%20%22push_start%22%3A%20%7B%22stream%22%3A%22' + streamStore.streamName + '%22,%22target%22%3A%22' + streamStore.rtmpDestination + '%22%7D%7D'\n  // setTimeout(() => {  getApi(request); console.log(\"World!\"); }, 2000);\n  getApi(request)\n  videoPlayerStore.mistStatus = false\n  videoPlayerStore.mistDisplayPushForm = true\n  // log output\n  console.log(\"stream push started: \" + request)\n}\n\nfunction addStream() {\n  console.log(\"adding new stream\")\n  // api call to mist server.\n  let request = \"%7B%22addstream%22%3A%7B%22streamname%22%3A%7B%22source%22%3A%22push%3A%2F%2F%22%7D%7D%7D\"\n  getApi(request)\n  videoPlayerStore.mistStatus = true\n  videoPlayerStore.mistDisplayPushForm = false\n  // log output\n  console.log(\"stream added: \" + request)\n}\n\n\n// let setMistHashedPassword = () => {\n//     if (props.message) {\n//         props.mistNewHashedPassword = md5(props.message);\n//     }\n// }\n//\n// setMistHashedPassword();\n\n\n/////////////// EXAMPLES OF MISTSERVER API CALLS ///////////////\n//\n// Keep these here. The MistServer API Call needs to be Url Encoded.\n//\n// This is a properly formatted HTTP API call to the MistServer:\n//\n// {\n//     \"addstream\": {\n//     \"streamname_here\": {},\n// }\n// }\n\n// { \"authorize\": {\n//     \"username\": \"USERNAME\",\n//     \"password\": \"PASSWORD\"\n//     }\n// },\n// { \"minimal\": 1 },\n// { \"active_streams\": true }\n//\n// https://beta-staging.not.tv/mistserver/api?command=%7B%20%22authorize%22%3A%20%7B%0A%20%20%20%20%22username%22%3A%20%22USERNAME%22,%0A%20%20%20%20%22password%22%3A%20%22PASSWORD%22%0A%20%20%20%20%7D%0A%7D,%0A%7B%20%22minimal%22%3A%201%20%7D,%0A%7B%20%22active_streams%22%3A%20true%20%7D\n// https://beta-staging.not.tv/mistserver/api?command=%7B%20%22authorize%22%3A%20%7B%0A%20%20%20%20%22username%22%3A%20%22USERNAME%22,%0A%20%20%20%20%22password%22%3A%20%22PASSWORD%22%0A%20%20%20%20%7D,%0A%7B%20%22minimal%22%3A%201%20%7D,%0A%7B%20%22active_streams%22%3A%20true%20%7D%0A%7D\n\n//\n///////////////////////////////////////////////////////////////\n\n\n// {\n//     \"authorize\":\n//     {\n// //Username to login as\n//         \"username\":\n//         \"test\",\n// //Hash of password to login with. Send empty value when no challenge for the hash is known yet.\n// //When the challenge is known, the value to be used here can be calculated as follows:\n// // MD5( MD5(\"secret\") + challenge)\n// //Where \"secret\" is the plaintext password.\n//             \"password\": \"\"\n//     }\n// }\n\n\n// tec21: this returns the pattern that mistServer is apparently looking for.\n// let submit = () => {\n//     console.log(form.response);\n//     Inertia.post(route('mistApi', {authorization: {challenge: videoPlayer.challenge, status: videoPlayer.status}}));\n// }\n\n// tec21: this works... it returns $request->challenge and $request->status to Laravel\n// let submit = () => {\n//     console.log('sent to backend');\n//     Inertia.post(route('mistApi', {challenge: videoPlayer.challenge, status: videoPlayer.status}));\n// }\n\n</script>\n\n\n"],"names":["usePageSetup","pageName","userStore","useUserStore","appSettingStore","useAppSettingStore","videoPlayerStore","useVideoPlayerStore","currentPage","showFlashMessage","pageIsHidden","isMobile","ott","makeVideoTopRight","onMounted","window","location","search","topDiv","document","getElementById","scrollIntoView","setPrevUrl","Inertia","reload","props","__props","clearFlashMessage","computed","flash","success","message","warning","error","_ref","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","post","route","stop","apply","arguments","class","_createElementVNode","script","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_renderSlot","_ctx","$slots","_hoisted_4","_createVNode","_component_Link","href","_withCtx","_hoisted_5","_","streamStore","useStreamStore","apiActiveStreams","mistStatus","form","reactive","challenge","status","username","password","mistUsername","mistDisplayPushForm","ref","md5","require","mistAddress","getStatus","_getStatus","_asyncToGenerator","axios","get","then","response","apiRequest","data","authorize","console","log","authenticateMistServer","_authenticateMistServer","_callee2","hashedPassword","authReturn","_context2","mistPassword","checkUpdates","mistDisplay","getApi","getCapabilities","getTotals","getActiveStreams","getClients","getLog","clearLog","browseRecordings","_x","_getApi","_callee3","request","_context3","apiResponse","displayPushForm","startPush","streamName","rtmpDestination","addStream"],"sourceRoot":""}
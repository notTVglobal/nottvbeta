{"version":3,"file":"js/8216.js","mappings":"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","sources":["webpack:///./resources/js/Utilities/PageSetup.js","webpack:///./resources/js/Components/Global/Modals/Messages.vue?dfe9","webpack:///./resources/js/Components/Global/Modals/Messages.vue","webpack:///./resources/js/Components/Pages/Admin/AdminHeader.vue?239a","webpack:///./resources/js/Components/Pages/Admin/AdminHeader.vue","webpack:///./resources/js/Pages/Admin/MistServerApi.vue?7cc8","webpack:///./resources/js/Pages/Admin/MistServerApi.vue"],"sourcesContent":["import { onBeforeMount, onMounted } from 'vue'\nimport { useUserStore } from \"@/Stores/UserStore\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useVideoPlayerStore } from \"@/Stores/VideoPlayerStore\"\nimport { router } from '@inertiajs/vue3'\n\nexport function usePageSetup(pageName) {\n    const userStore = useUserStore()\n    const appSettingStore = useAppSettingStore()\n    const videoPlayerStore = useVideoPlayerStore()\n\n    appSettingStore.currentPage = pageName\n    appSettingStore.showFlashMessage = true\n    appSettingStore.pageIsHidden = false\n\n// PageSetup utility\n    if (userStore.isMobile || window.innerWidth < 1024) {\n        appSettingStore.ott = 0; // Close all panels on mobile devices\n    } else if (appSettingStore.fullPage) {\n        appSettingStore.ott = 0; // Default to closed in fullPage mode\n    } else {\n        if (appSettingStore.ott === 0) {\n            appSettingStore.ott = 4\n        }\n        // appSettingStore.ott = 4; // Open OttChat by default on larger screens\n        appSettingStore.showOttButtons = true;\n    }\n\n    videoPlayerStore.makeVideoTopRight()\n\n    if (appSettingStore.pageReload) {\n        appSettingStore.pageReload = false\n        appSettingStore.pageWasReloaded = true\n        window.location.reload();\n    }\n    // Check if the URL contains query strings\n\n\n    // Only scroll into view if there are no query strings\n\n        // const topDiv = document.getElementById(\"topDiv\")\n        // if (topDiv) {\n        //     topDiv.scrollIntoView()\n        // }\n        router.on('navigate', (event) => {\n            // Ensure OTT panels do not open automatically on mobile devices\n            if (userStore.isMobile || window.innerWidth < 1024 || appSettingStore.fullPage) {\n                appSettingStore.ott = 0; // Close all panels on mobile devices\n            } else {\n                if (appSettingStore.ott === 0) {\n                    appSettingStore.ott = 4\n                }\n                // appSettingStore.ott = 0; // Default to closed on larger screens\n            }\n            const hasQueryStrings = window.location.search !== '';\n            if (!hasQueryStrings || appSettingStore.shouldScrollToTop) {\n                requestAnimationFrame(() => {\n                    const topDiv = document.getElementById(\"topDiv\");\n                    if (topDiv) {\n                        topDiv.scrollIntoView({behavior: 'auto'});\n                    } else {\n                        window.scrollTo(0, 0);\n                    }\n                });\n            }\n            appSettingStore.shouldScrollToTop = false;\n        })\n    // Only update if we're not already on this page to avoid overwriting with the current URL\n    appSettingStore.setPrevUrl()\n    appSettingStore.showOttButtons = true\n    appSettingStore.noLayout = false\n\n    // router.reload()\n\n}\n","import script from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"mx-4 my-4\">\n    <div class=\"alert alert-info mt-4\"\n         v-if=\"props.flash.message\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" class=\"stroke-current shrink-0 w-6 h-6\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n      </svg>\n      <span>{{ props.flash.message }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-success mt-4 mx-3\"\n         v-if=\"props.flash.success\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.success }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-warning mt-4 mx-3\"\n         v-if=\"props.flash.warning\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"/>\n      </svg>\n      <span>{{ props.flash.warning }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-error mt-4 mx-3\"\n         v-if=\"props.flash.error\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.error }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n  </div>\n\n</template>\n\n<script setup>\nimport { router } from '@inertiajs/vue3'\nimport { computed } from \"vue\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\n\nconst appSettingStore = useAppSettingStore()\n\nappSettingStore.showFlashMessage = true\n\nlet props = defineProps({\n  flash: Object,\n\n})\n\nconst messageType = computed(() => ({\n  'text-green-700 bg-green-100 dark:bg-green-200 dark:text-green-800': props.flash.success,\n  'text-blue-700 bg-blue-100 dark:bg-blue-200 dark:text-blue-800': props.flash.message,\n  'text-orange-700 bg-orange-100 dark:bg-orange-200 dark:text-orange-800': props.flash.warning,\n  'text-red-700 bg-red-100 dark:bg-red-200 dark:text-red-800': props.flash.error,\n}))\n\nconst clearFlashMessage = async () => {\n  await router.post(route('flash.clear'));\n  router.reload();\n};\n</script>\n","import script from \"./AdminHeader.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AdminHeader.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <header>\n    <div class=\"flex justify-between my-3\">\n      <div class=\"mb-4 relative\">\n        <h1 class=\"text-3xl font-semibold inline-block\">\n          <slot/>\n        </h1>\n        <span v-if=\"displayBadges\" class=\"text-white font-semibold badge badge-success absolute -top-2 -right-10 flex items-center justify-center min-w-[2rem] h-[2rem] rounded-full\">{{ (badgePrimaryNumber ?? 0) > 99 ? '99+' : (badgePrimaryNumber ?? 0) }}</span>\n        <span v-if=\"displayBadges\" class=\"font-semibold badge badge-warning absolute -top-2 -right-20 flex items-center justify-center min-w-[2rem] h-[2rem] rounded-full\">{{ (badgeSecondaryNumber ?? 0) > 99 ? '99+' : (badgeSecondaryNumber ?? 0) }}</span>\n\n      </div>\n      <div>\n        <div class=\"flex flex-wrap-reverse justify-end gap-2\">\n          <Link :href=\"`/admin/settings`\">\n            <button\n                class=\"px-4 py-2 text-white bg-blue-600 hover:bg-blue-500 rounded-lg\"\n            >Admin Settings\n            </button>\n          </Link>\n        </div>\n      </div>\n    </div>\n  </header>\n\n</template>\n\n<script setup>\nimport { reactive } from 'vue'\n\nconst props = defineProps({\n  displayBadges: Boolean,\n  badgePrimaryNumber: Number,\n  badgeSecondaryNumber: Number,\n});\n\nconst defaultProps = {\n  displayBadges: false,\n};\n\nconst finalProps = reactive({ ...defaultProps, ...props });\n\n</script>\n","import script from \"./MistServerApi.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./MistServerApi.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n\n  <Head title=\"MistServer API\"/>\n  <div class=\"place-self-center flex flex-col gap-y-3\">\n    <div id=\"topDiv\" class=\"bg-white text-black p-5 mb-10\">\n\n      <Message v-if=\"appSettingStore.showFlashMessage\" :flash=\"$page.props.flash\"/>\n\n      <AdminHeader>MistServer API</AdminHeader>\n      <div>Processing: {{ adminStore.checkSendProcessing }}</div>\n      <div class=\"flex justify-between\">\n        <div><span class=\"font-semibold\">{{ videoPlayerStore.status }}</span>\n          <div class=\"\">Status: </div>\n          <span v-show=\"adminStore.checkSendProcessing\" class=\"loading loading-spinner loading-xs text-blue-700\"></span>\n          <button v-for=\"server in serverTypes\" :key=\"server.type\"\n                  class=\"ml-2 py-2 my-2 px-4 text-white bg-orange-800 hover:bg-orange-500 mr-2 rounded-xl\"\n                  @click.prevent=\"checkMistApiSendFunction(server.type)\">\n            {{ server.name }}\n          </button>\n\n          <button class=\"ml-2 py-2 my-2 px-4 text-white bg-orange-800 hover:bg-orange-500 mr-2 rounded-xl\"\n                  @click.prevent=\"getStatus\">\n            Get Status\n          </button>\n\n        </div>\n        <div v-if=\"videoPlayerStore.status === 'OK'\" class=\"\">\n\n        </div>\n\n      </div>\n\n\n      <div>\n        <h2>API Response</h2>\n        <!-- Displaying as a string -->\n        <pre>{{ JSON.stringify(responseJson, null, 2) }}</pre>\n\n        <!-- Or iterating over properties -->\n        <!-- Use this as a starting point for displaying the MistServer responses -->\n        <!-- Note: We have another iteration version below -->\n        <div hidden v-if=\"responseJson\">\n          <div v-for=\"(value, key) in responseJson\" :key=\"key\">\n            {{ key }}: {{ value }}\n          </div>\n        </div>\n      </div>\n\n\n\n      <div v-if=\"videoPlayerStore.status === 'CHALL'\" class=\"mb-8\">\n        <div class=\"py-3 px-4 mb-4 bg-orange-800 text-white rounded\">MistServer needs to be authenticated</div>\n\n        <div class=\"font-semibold text-2xl px-2\">\n          Connect to the MistServer\n        </div>\n\n        <div class=\"my-3 pl-2 text-sm w-1/2\">If the MistServer Status will either be OK, CHALL, NOACC or ACC_MADE.\n          If it's \"CHALL\" then you need to re-authenticate with the username and password.\n        </div>\n\n        <form @submit.prevent class=\"mt-2 pl-2\">\n\n          <div class=\"mt-2\">Challenge:</div>\n          <input type=\"text\" name=\"challenge\" id=\"challenge\" v-model=\"videoPlayerStore.challenge\" disabled/>\n\n          <div class=\"font-semibold mt-2\">MistServer Username:</div>\n          <input class=\"mb-2\" type=\"text\" name=\"username\" v-model=\"videoPlayerStore.mistUsername\"/>\n\n          <div class=\"font-semibold mt-2\">MistServer Password:</div>\n          <input type=\"password\" name=\"password\" v-model=\"form.password\"/>\n\n          <div class=\"mb-4 w-1/2 text-sm\"> Credit to Jeff Mott for his work on a pure JS implementation of the MD5\n            algorithm.\n            You can find the npm package <a href=\"https://www.npmjs.com/package/md5\" target=\"_blank\"\n                                            class=\"text-blue-800 hover:text-gray-500\">here.</a></div>\n\n          <button class=\"ml-2 py-2 px-4 text-white bg-green-800 hover:bg-green-500 rounded-xl\"\n                  @click.prevent=\"authenticateMistServer\">\n            Authenticate\n          </button>\n\n        </form>\n\n      </div>\n\n      <div v-if=\"videoPlayerStore.status === 'OK'\" class=\"mb-8\">\n        <div class=\"py-3 px-4 mb-4 bg-green-900 text-white rounded\">MistServer is connected</div>\n\n        <div class=\"grid grid-cols-1 md:grid-cols-3\">\n          <div class=\"col-span-1\">\n            <div class=\"flex flex-col space-y-2\">\n\n              <button class=\"ml-2 py-2 px-4 text-white bg-blue-800 hover:bg-blue-500 rounded-xl\"\n                      @click.prevent=\"checkUpdates\">\n                Check for Updates\n              </button>\n\n              <button class=\"ml-2 py-2 px-4 text-white bg-blue-800 hover:bg-blue-500 rounded-xl\"\n                      @click.prevent=\"getCapabilities\">\n                Get Server Capabilities\n              </button>\n\n              <button class=\"ml-2 py-2 px-4 text-white bg-blue-800 hover:bg-blue-500 mr-2 rounded-xl\"\n                      @click.prevent=\"getTotals\">\n                Get Totals\n              </button>\n\n              <button class=\"ml-2 py-2 px-4 text-white bg-blue-800 hover:bg-blue-500 mr-2 rounded-xl\"\n                      @click.prevent=\"getClients\">\n                Get Clients\n              </button>\n\n              <button class=\"ml-2 py-2 px-4 text-white bg-blue-800 hover:bg-blue-500 rounded-xl\"\n                      @click.prevent=\"getActiveStreams\">\n                Get Active Streams\n              </button>\n\n              <button class=\"ml-2 py-2 px-4 text-white bg-blue-800 hover:bg-blue-500 rounded-xl\"\n                      @click.prevent=\"getLog\">\n                Get Log\n              </button>\n\n              <button class=\"ml-2 py-2 px-4 text-white bg-orange-800 hover:bg-orange-500 rounded-xl\"\n                      @click.prevent=\"clearLog\">\n                Clear Log\n              </button>\n\n              <button class=\"ml-2 py-2 px-4 text-white bg-blue-800 hover:bg-blue-500 rounded-xl\"\n                      @click.prevent=\"browseRecordings\">\n                Recordings\n              </button>\n\n            </div>\n          </div>\n\n\n          <div class=\"md:col-span-2 pl-6\">\n            <!--                        <div v-if=\"videoPlayer.mistStatus\">-->\n            <!--                            <div class=\"mt-2\">Returned data:</div>-->\n            <!--                            <div class=\"\">-->\n            <!--                                {{videoPlayer.apiResponse}}-->\n            <!--                            </div>-->\n            <!--                        </div>-->\n            <div class=\"mt-2 text-xs uppercase\">Returned data:</div>\n\n            <div v-if=\"videoPlayerStore.mistDisplay === 'updates'\">\n              <table>\n                <thead>\n                <td></td>\n                <td></td>\n                <td></td>\n                <td></td>\n                <td></td>\n                </thead>\n                <tr v-for=\"update in videoPlayerStore.apiResponse.update\" :key=\"update.item\">\n                  <td>{{ update[0] }}</td>\n                  <td>{{ update[1] }}</td>\n                  <td>{{ update[2] }}</td>\n                  <td>{{ update[3] }}</td>\n                  <td>{{ update[4] }}</td>\n                </tr>\n              </table>\n            </div>\n\n            <div v-if=\"videoPlayerStore.mistDisplay === 'capabilities'\">\n              <div class=\"mt-2 font-semibold\">CPU</div>\n              <table>\n                <tr v-for=\"(value, name) in videoPlayerStore.apiResponse.capabilities.cpu[0]\" :key=\"name\">\n                  <td>{{ name }}</td>\n                  <td>{{ value }}</td>\n                </tr>\n              </table>\n              <div class=\"mt-2 font-semibold\">Load</div>\n              <table>\n                <tr v-for=\"(value, name) in videoPlayerStore.apiResponse.capabilities.load\" :key=\"name\">\n                  <td>{{ name }}</td>\n                  <td>{{ value }}</td>\n                </tr>\n              </table>\n              <div class=\"mt-2 font-semibold\">Mem</div>\n              <table>\n                <tr v-for=\"(value, name) in videoPlayerStore.apiResponse.capabilities.mem\" :key=\"name\">\n                  <td>{{ name }}</td>\n                  <td>{{ value }}</td>\n                </tr>\n              </table>\n            </div>\n\n            <div v-if=\"videoPlayerStore.mistDisplay === 'totals'\">\n\n              <table>\n                <thead>\n                <td>{{ videoPlayerStore.apiResponse.totals.fields[0] }}</td>\n                <td>{{ videoPlayerStore.apiResponse.totals.fields[1] }}</td>\n                <td>{{ videoPlayerStore.apiResponse.totals.fields[2] }}</td>\n                <td>{{ videoPlayerStore.apiResponse.totals.fields[3] }}</td>\n                <td>{{ videoPlayerStore.apiResponse.totals.fields[4] }}</td>\n                <td>{{ videoPlayerStore.apiResponse.totals.fields[5] }}</td>\n                <td>{{ videoPlayerStore.apiResponse.totals.fields[6] }}</td>\n                </thead>\n                <tr v-for=\"total in videoPlayerStore.apiResponse.totals.data.slice().reverse()\" :key=\"total.item\">\n                  <td>{{ total[0] }}</td>\n                  <td>{{ total[1] }}</td>\n                  <td>{{ total[2] }}</td>\n                  <td>{{ total[3] }}</td>\n                  <td>{{ total[4] }}</td>\n                  <td>{{ total[5] }}</td>\n                  <td>{{ total[6] }}</td>\n                </tr>\n              </table>\n            </div>\n\n            <div v-if=\"videoPlayerStore.mistDisplay === 'clients'\">\n\n              <table>\n                <thead>\n                <td>{{ videoPlayerStore.apiResponse.clients.fields[0] }}</td>\n                <td>{{ videoPlayerStore.apiResponse.clients.fields[1] }}</td>\n                <td>{{ videoPlayerStore.apiResponse.clients.fields[2] }}</td>\n                <td>{{ videoPlayerStore.apiResponse.clients.fields[3] }}</td>\n                <td>{{ videoPlayerStore.apiResponse.clients.fields[4] }}</td>\n                <td>{{ videoPlayerStore.apiResponse.clients.fields[5] }}</td>\n                <td>{{ videoPlayerStore.apiResponse.clients.fields[6] }}</td>\n                <td>{{ videoPlayerStore.apiResponse.clients.fields[7] }}</td>\n                <td>{{ videoPlayerStore.apiResponse.clients.fields[8] }}</td>\n                <td>{{ videoPlayerStore.apiResponse.clients.fields[9] }}</td>\n                <td>{{ videoPlayerStore.apiResponse.clients.fields[10] }}</td>\n                <td>{{ videoPlayerStore.apiResponse.clients.fields[11] }}</td>\n                <td>{{ videoPlayerStore.apiResponse.clients.fields[12] }}</td>\n                <td>{{ videoPlayerStore.apiResponse.clients.fields[13] }}</td>\n                <td>time</td>\n                </thead>\n                <tr v-for=\"client in videoPlayerStore.apiResponse.clients.data\" :key=\"client.item\">\n                  <td>{{ client[0] }}</td>\n                  <td>{{ client[1] }}</td>\n                  <td>{{ client[2] }}</td>\n                  <td>{{ client[3] }}</td>\n                  <td>{{ client[4] }}</td>\n                  <td>{{ client[5] }}</td>\n                  <td>{{ client[6] }}</td>\n                  <td>{{ client[7] }}</td>\n                  <td>{{ client[8] }}</td>\n                  <td>{{ client[9] }}</td>\n                  <td>{{ client[10] }}</td>\n                  <td>{{ client[11] }}</td>\n                  <td>{{ client[12] }}</td>\n                  <td>{{ client[13] }}</td>\n                  <td>{{ client[14] }}</td>\n                </tr>\n              </table>\n            </div>\n\n            <div v-if=\"videoPlayerStore.mistDisplay === 'active_streams'\">\n\n              <table>\n                <thead class=\"font-semibold mb-2\">\n                <td>Stream Name</td>\n                </thead>\n                <tr v-for=\"stream in videoPlayerStore.apiResponse.active_streams\" :key=\"stream.item\">\n                  <td>{{ stream }}</td>\n\n                </tr>\n              </table>\n            </div>\n\n            <div v-if=\"videoPlayerStore.mistDisplay === 'log'\">\n\n              <table>\n                <tr v-for=\"log in videoPlayerStore.apiResponse.log\" :key=\"log.item\">\n                  <td>{{ log[0] }}</td>\n                  <td>{{ log[1] }}</td>\n                  <td>{{ log[2] }}</td>\n                  <td>{{ log[3] }}</td>\n                </tr>\n              </table>\n            </div>\n\n            <div v-if=\"videoPlayerStore.mistDisplay === 'recordings'\">\n\n              <table>\n                <tr v-for=\"log in videoPlayerStore.apiResponse.log\" :key=\"log.item\">\n                  <td>{{ log[0] }}</td>\n                  <td>{{ log[1] }}</td>\n                  <td>{{ log[2] }}</td>\n                  <td>{{ log[3] }}</td>\n                </tr>\n              </table>\n            </div>\n\n          </div>\n\n\n        </div>\n\n      </div>\n\n    </div>\n  </div>\n\n</template>\n\n<script setup>\nimport { ref, reactive, computed, onMounted } from 'vue'\nimport { usePageSetup } from '@/Utilities/PageSetup'\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\nimport { useAdminStore } from '@/Stores/AdminStore'\nimport { useVideoPlayerStore } from '@/Stores/VideoPlayerStore'\nimport { useStreamStore } from '@/Stores/StreamStore'\nimport AdminHeader from '@/Components/Pages/Admin/AdminHeader'\nimport Message from '@/Components/Global/Modals/Messages'\n\nusePageSetup('mistServerApi')\n\nconst appSettingStore = useAppSettingStore()\nconst adminStore = useAdminStore()\nconst videoPlayerStore = useVideoPlayerStore()\nconst streamStore = useStreamStore()\n\nvideoPlayerStore.apiActiveStreams = null\nvideoPlayerStore.mistStatus = false\n\nlet props = defineProps({\n  apiReturn: Object,\n  message: ref(String),\n  mistNewHashedPassword: ref(String),\n})\n\nlet form = reactive({\n  challenge: videoPlayerStore.challenge,\n  status: videoPlayerStore.status,\n  username: '',\n  password: '',\n})\n\nvideoPlayerStore.mistUsername = ''\nform.password = ''\n\nconst password = ref('')\n\nlet md5 = require('md5')\n\n\n////////////////////  MIST SERVER ADDRESS //////////////////////////////\n// Keep this here to change which MistServer is used for testing purposes\n//\n// let mistAddress = 'http://localhost:4242/api'\n// let mistAddress = 'https://beta-staging.not.tv/mistserver/api'\n// let mistAddress = 'https://mist.not.tv/mistinterface'\n// let mistAddress = 'http://10.124.0.3:4242/api'\nlet mistAddress = 'http://localhost:4242/api'\n// let mistAddress = 'http://mist.nottv.io:4242/api'\n// let mistAddressWs = 'ws://mist.nottv.io:4242/ws'\n//\nconst mistServerUri = ref('')\n\n///////////////////////////////////////////////////////////////////////\n\nasync function getMistServerUri() {\n  console.log('get MistServer URI')\n  await axios.get('/mist-server/uri')\n      .then(response => {\n        mistServerUri.value = response.data\n        console.log('MistServer URI: ' + mistServerUri.value)\n        return response.data\n      })\n      .catch(error => {\n        console.log(error)\n      })\n}\n\nconst responseJson = ref(null);\nconst isError = computed(() => {\n  // Check if responseJson is an error object\n  // This is a basic check, you might need to adjust it based on your actual error object's structure\n  isError.value = true\n  adminStore.unsetCheckSendProcessing()\n  return responseJson.value && responseJson.value.message && typeof responseJson.value.message === 'string';\n});\n\nconst serverTypes = ref([\n  { name: 'Check Push Server', type: 'push' },\n  { name: 'Check Playback Server', type: 'playback' },\n  { name: 'Check Vod Server', type: 'vod' },\n  { name: 'Check Recording Server', type: 'recording' }\n]);\n\nconst checkMistApiSendFunction = async(serverType) => {\n  responseJson.value = null\n  await checkSend(serverType)\n}\n\nconst checkSend = async(serverType) => {\n  adminStore.setCheckSendProcessing()\n  await axios.post('/mist-server/check-send', {serverType: serverType /* additional data if any */})\n      .then(response => {\n        console.log('Response:', response)\n        responseJson.value = response.data;\n        adminStore.unsetCheckSendProcessing()\n      })\n      .catch(error => {\n        console.error('Error:', error)\n        responseJson.value = `Error: ${error.response.data.message || 'Request failed'} with status code ${error.response.status}`;\n        responseJson.value.error = true\n        adminStore.unsetCheckSendProcessing()\n      })\n  console.log('Checked MistServerService send() with serverType:', serverType)\n}\n\n\nconst getStatus = async() => {\n  responseJson.value = null\n  adminStore.setCheckSendProcessing()\n  const mistUri = await getMistServerUri()\n  await axios.get(mistAddress)\n      .then(response => {\n        videoPlayerStore.apiRequest = response.data\n        videoPlayerStore.challenge = videoPlayerStore.apiRequest.authorize.challenge\n        videoPlayerStore.status = videoPlayerStore.apiRequest.authorize.status\n        adminStore.unsetCheckSendProcessing()\n      })\n      .catch(error => {\n        console.log(error)\n        adminStore.unsetCheckSendProcessing()\n      })\n  console.log('get API')\n\n}\n\n// The Websocket connection will give us near real-time\n// info from the server.\n//\n// Create the header for the MistServer WS API Request\n// const mistWsHeader = {\n//     headers: {\n//         \"Authorization\": \"json \"+AuthenticationGoesHere,\n//     },\n// };\n\nasync function authenticateMistServer() {\n  let hashedPassword = md5(form.password)\n  console.log('Hashed password: ' + hashedPassword)\n  let authReturn = md5(hashedPassword + videoPlayerStore.challenge)\n  videoPlayerStore.mistPassword = authReturn\n  console.log('Final hashed password: ' + authReturn)\n  await axios.get(mistAddress + '?command=%7B%0A%22authorize%22%3A%20%7B%0A%22username%22%3A%20%22' + videoPlayerStore.mistUsername + '%22,%0A%22password%22%3A%20%22' + authReturn + '%22%0A%7D%0A%7D')\n      .then(response => {\n        videoPlayerStore.apiRequest = response.data\n        videoPlayerStore.challenge = videoPlayerStore.apiRequest.authorize.challenge\n        videoPlayerStore.status = videoPlayerStore.apiRequest.authorize.status\n        console.log(response.data)\n      })\n      .catch(error => {\n        console.log(error)\n      })\n  console.log('mistServer API authorization sent.')\n\n}\n\nlet checkUpdates = () => {\n  videoPlayerStore.mistDisplay = 'updates'\n  let request = '\"update\": true'\n  getApi(request)\n}\n\nlet getCapabilities = () => {\n  videoPlayerStore.mistDisplay = 'capabilities'\n  let request = '%22capabilities%22%3A%20true'\n  getApi(request)\n}\n\nlet getTotals = () => {\n  videoPlayerStore.mistDisplay = 'totals'\n  let request = '\"totals\": {}'\n  getApi(request)\n}\n\nlet getActiveStreams = () => {\n  videoPlayerStore.mistDisplay = 'active_streams'\n  let request = '\"active_streams\": true'\n  getApi(request)\n}\n\nlet getClients = () => {\n  videoPlayerStore.mistDisplay = 'clients'\n  // This request delivers information about each client connected\n  // to a specific stream name.\n  //\n  // let request = \"\\\"clients\\\": [{\\\"streams\\\": [\\\"vmixsource03\\\"],},{}]}\"\n\n  // This request delivers all clients\n  let request = '\"clients\": {}'\n  getApi(request)\n}\n\nlet getLog = () => {\n  videoPlayerStore.mistDisplay = 'log'\n  let request = '\"log\": {}'\n  getApi(request)\n}\n\nlet clearLog = () => {\n  videoPlayerStore.mistDisplay = 'log'\n  let request = '\"clearstatlog\": true'\n  getApi(request)\n}\n\nlet browseRecordings = () => {\n  videoPlayerStore.mistDisplay = 'recordings'\n  let request = '\"path\": \"/media/upload\"'\n  getApi(request)\n}\n\n\nasync function getApi(request) {\n  videoPlayerStore.mistStatus = true\n  videoPlayerStore.mistDisplayPushForm = false\n  // let apiRequest = '%7B%20%22authorize%22%3A%20%7B%0A%20%20%20%20%22username%22%3A%20%22'+videoPlayer.mistUsername+'%22,%0A%20%20%20%20%22password%22%3A%20%22'+videoPlayer.mistPassword+'%22%0A%20%20%20%7D,%0A%20'+request+'%0A%7D'\n  let apiRequest = '%7B%20%22authorize%22%3A%20%7B%0A%20%20%20%20%22username%22%3A%20%22' + videoPlayerStore.mistUsername + '%22,%0A%20%20%20%20%22password%22%3A%20%22' + videoPlayerStore.mistPassword + '%22%0A%20%20%20%7D,%0A%20' + request + '%0A%0A%7D'\n  await axios.get(mistAddress + '?command=' + apiRequest)\n      .then(response => {\n        videoPlayerStore.apiResponse = response.data\n        videoPlayerStore.challenge = videoPlayerStore.apiResponse.authorize.challenge\n        videoPlayerStore.status = videoPlayerStore.apiResponse.authorize.status\n      })\n      .catch(error => {\n        console.log(error)\n      })\n  console.log('mistServer API request sent.')\n}\n\nasync function getApiLocal(request) {\n  videoPlayerStore.mistStatus = true\n  videoPlayerStore.mistDisplayPushForm = false\n  // let apiRequest = '%7B%20%22authorize%22%3A%20%7B%0A%20%20%20%20%22username%22%3A%20%22'+videoPlayer.mistUsername+'%22,%0A%20%20%20%20%22password%22%3A%20%22'+videoPlayer.mistPassword+'%22%0A%20%20%20%7D,%0A%20'+request+'%0A%7D'\n  // let apiRequest = '%7B%20%22authorize%22%3A%20%7B%0A%20%20%20%20%22username%22%3A%20%22'+videoPlayer.mistUsername+'%22,%0A%20%20%20%20%22password%22%3A%20%22'+videoPlayer.mistPassword+'%22%0A%20%20%20%7D,%0A%20'+request+'%0A%0A%7D'\n  await axios.get(mistAddress + '?command=' + request)\n      .then(response => {\n        videoPlayerStore.apiResponse = response.data\n        videoPlayerStore.challenge = videoPlayerStore.apiResponse.authorize.challenge\n        videoPlayerStore.status = videoPlayerStore.apiResponse.authorize.status\n      })\n      .catch(error => {\n        console.log(error)\n      })\n  console.log('mistServer API request sent.')\n}\n\n/////////////// EXAMPLES OF MISTSERVER API CALLS ///////////////\n//\n// Keep these here. The MistServer API Call needs to be Url Encoded.\n//\n// This is a properly formatted HTTP API call to the MistServer:\n//\n// {\n//     \"addstream\": {\n//     \"streamname_here\": {},\n// }\n// }\n\n// { \"authorize\": {\n//     \"username\": \"USERNAME\",\n//     \"password\": \"PASSWORD\"\n//     }\n// },\n// { \"minimal\": 1 },\n// { \"active_streams\": true }\n//\n// https://beta-staging.not.tv/mistserver/api?command=%7B%20%22authorize%22%3A%20%7B%0A%20%20%20%20%22username%22%3A%20%22USERNAME%22,%0A%20%20%20%20%22password%22%3A%20%22PASSWORD%22%0A%20%20%20%20%7D%0A%7D,%0A%7B%20%22minimal%22%3A%201%20%7D,%0A%7B%20%22active_streams%22%3A%20true%20%7D\n// https://beta-staging.not.tv/mistserver/api?command=%7B%20%22authorize%22%3A%20%7B%0A%20%20%20%20%22username%22%3A%20%22USERNAME%22,%0A%20%20%20%20%22password%22%3A%20%22PASSWORD%22%0A%20%20%20%20%7D,%0A%7B%20%22minimal%22%3A%201%20%7D,%0A%7B%20%22active_streams%22%3A%20true%20%7D%0A%7D\n\n//\n///////////////////////////////////////////////////////////////\n\n\n// {\n//     \"authorize\":\n//     {\n// //Username to login as\n//         \"username\":\n//         \"test\",\n// //Hash of password to login with. Send empty value when no challenge for the hash is known yet.\n// //When the challenge is known, the value to be used here can be calculated as follows:\n// // MD5( MD5(\"secret\") + challenge)\n// //Where \"secret\" is the plaintext password.\n//             \"password\": \"\"\n//     }\n// }\n\n\n// tec21: this returns the pattern that mistServer is apparently looking for.\n// let submit = () => {\n//     console.log(form.response);\n//     router.post(route('mistApi', {authorization: {challenge: videoPlayer.challenge, status: videoPlayer.status}}));\n// }\n\n// tec21: this works... it returns $request->challenge and $request->status to Laravel\n// let submit = () => {\n//     console.log('sent to backend');\n//     router.post(route('mistApi', {challenge: videoPlayer.challenge, status: videoPlayer.status}));\n// }\n\n</script>\n\n\n"],"names":["usePageSetup","pageName","userStore","useUserStore","appSettingStore","useAppSettingStore","videoPlayerStore","useVideoPlayerStore","currentPage","showFlashMessage","pageIsHidden","isMobile","window","innerWidth","fullPage","ott","showOttButtons","makeVideoTopRight","pageReload","pageWasReloaded","location","reload","router","on","event","search","shouldScrollToTop","requestAnimationFrame","topDiv","document","getElementById","scrollIntoView","behavior","scrollTo","setPrevUrl","noLayout","props","__props","clearFlashMessage","computed","flash","success","message","warning","error","_ref","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","post","route","stop","apply","arguments","reactive","_objectSpread","displayBadges","adminStore","useAdminStore","useStreamStore","apiActiveStreams","mistStatus","form","challenge","status","username","password","mistUsername","ref","md5","require","mistAddress","mistServerUri","getMistServerUri","_getMistServerUri","_asyncToGenerator","_callee4","_context4","console","log","axios","get","then","response","value","data","responseJson","isError","unsetCheckSendProcessing","serverTypes","name","type","checkMistApiSendFunction","serverType","checkSend","_x","_ref2","_callee2","_context2","setCheckSendProcessing","concat","_x2","getStatus","_ref3","_callee3","_context3","sent","apiRequest","authorize","authenticateMistServer","_authenticateMistServer","_callee5","hashedPassword","authReturn","_context5","mistPassword","checkUpdates","mistDisplay","getApi","getCapabilities","getTotals","getActiveStreams","getClients","getLog","clearLog","browseRecordings","_x3","_getApi","_callee6","request","_context6","mistDisplayPushForm","apiResponse"],"sourceRoot":""}
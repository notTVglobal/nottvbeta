{"version":3,"file":"js/5418.js","mappings":"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","sources":["webpack:///./resources/js/Stores/MovieStore.js","webpack:///./resources/js/Utilities/PageSetup.js","webpack:///./resources/js/Components/Global/Uploaders/VideoUpload.vue?3461","webpack:///./resources/js/Components/Global/Buttons/CancelButton.vue?b7c6","webpack:///./resources/js/Components/Global/Buttons/CancelButton.vue","webpack:///./resources/js/Components/Global/Modals/Messages.vue?dfe9","webpack:///./resources/js/Components/Global/Modals/Messages.vue","webpack:///./resources/js/Components/Global/TextEditor/TabbableTextarea.vue?4db8","webpack:///./resources/js/Components/Global/TextEditor/TabbableTextarea.vue","webpack:///./resources/js/Components/Global/Uploaders/ImageUpload.vue?55d5","webpack:///./resources/js/Components/Global/Uploaders/ImageUpload.vue","webpack:///./resources/js/Components/Global/Uploaders/VideoUpload.vue","webpack:///./resources/js/Components/Global/Uploaders/VideoUpload.vue?d46c","webpack:///./resources/js/Components/Global/Uploaders/VideoUpload.vue?b223","webpack:///./resources/js/Jetstream/ValidationErrors.vue?5fdc","webpack:///./resources/js/Jetstream/ValidationErrors.vue","webpack:///./resources/js/Pages/Movies/{$id}/Edit.vue?d66e","webpack:///./resources/js/Pages/Movies/{$id}/Edit.vue"],"sourcesContent":["import { defineStore } from \"pinia\";\n\nconst initialState = () => ({\n    id: 0,\n    category_id: 0,\n    category_sub_id: 0,\n    category_description: '',\n    sub_categories: [],\n})\n\nexport const useMovieStore = defineStore('movieStore', {\n    state: initialState,\n    actions: {\n        reset() {\n            // Reset the store to its original state (clear all data)\n            Object.assign(this, initialState());\n        },\n        //\n    },\n\n    getters: {\n        //\n    }\n});\n","import { onMounted } from 'vue'\nimport { useUserStore } from \"@/Stores/UserStore\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useVideoPlayerStore } from \"@/Stores/VideoPlayerStore\"\nimport { Inertia } from \"@inertiajs/inertia\"\n\nexport function usePageSetup(pageName) {\n    const userStore = useUserStore()\n    const appSettingStore = useAppSettingStore()\n    const videoPlayerStore = useVideoPlayerStore()\n\n    appSettingStore.currentPage = pageName\n    appSettingStore.showFlashMessage = true\n    appSettingStore.pageIsHidden = false\n\n    if (userStore.isMobile) {\n        appSettingStore.ott = 0\n    }\n\n    videoPlayerStore.makeVideoTopRight()\n\n    onMounted(() => {\n        // Check if the URL contains query strings\n        const hasQueryStrings = window.location.search !== '';\n\n        // Only scroll into view if there are no query strings\n        if (!hasQueryStrings) {\n            const topDiv = document.getElementById(\"topDiv\")\n            if (topDiv) {\n                topDiv.scrollIntoView()\n            }\n        }\n        // Only update if we're not already on this page to avoid overwriting with the current URL\n        appSettingStore.setPrevUrl()\n        Inertia.reload()\n\n    });\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".dropzone[data-v-60980035]{align-items:center;background-color:#fce4bb;border:2px dashed #000;display:flex;flex-direction:column;justify-content:center;row-gap:16px;transition:all .3s ease}label[data-v-60980035]{padding:8px 12px;transition:all .3s ease}.active-dropzone[data-v-60980035],label[data-v-60980035]{background-color:#4bb1b1;color:#fff}.active-dropzone[data-v-60980035]{border-color:#fff}.active-dropzone label[data-v-60980035]{background-color:#fff;color:#4bb1b1}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/Components/Global/Uploaders/VideoUpload.vue\"],\"names\":[],\"mappings\":\"AA6IA,2BAIE,kBAAmB,CAGnB,wBAAyB,CADzB,sBAA0B,CAL1B,YAAa,CACb,qBAAsB,CACtB,sBAAuB,CAEvB,YAAa,CAGb,uBACF,CAEA,uBACE,gBAAiB,CAGjB,uBACF,CAEA,yDAJE,wBAAyB,CADzB,UASF,CAJA,kCAEE,iBAEF,CAEA,wCACE,qBAAsB,CACtB,aACF\",\"sourcesContent\":[\"<template>\\n  <div>\\n\\n    <progress v-show=\\\"userStore.uploadPercentage != 0\\\" max=\\\"100\\\" :value=\\\"userStore.uploadPercentage\\\" class=\\\"w-full\\\"/>\\n    <div v-show=\\\"userStore.uploadPercentage != 0\\\" class=\\\"w-full mb-4\\\">{{ userStore.uploadPercentageRounded }}%</div>\\n\\n    <div v-show=\\\"uploadingMessage\\\" class=\\\"mb-4 font-bold text-center\\\">Please stay on this screen until upload is\\n      complete.\\n    </div>\\n    <div v-show=\\\"uploadCompleteMessage\\\" class=\\\"mb-4 font-bold text-center\\\">Upload is complete. The video is now\\n      processing.\\n    </div>\\n    <form v-show=\\\"!isHidden\\\" id=\\\"videoUploadForm\\\" action=\\\"/videoupload\\\"\\n          class=\\\"dropzone dropzoneFile border border-black rounded w-full h-48 max-w-md px-2 py-2 mb-6\\\">\\n      <!--                            add input fields and a submit button to send data back to Laravel -->\\n      <input hidden name=\\\"movieId\\\" v-model=\\\"form.movieId\\\">\\n      <!--            <input hidden name=\\\"movieTrailerId\\\" v-model=\\\"form.movieTrailerId\\\">-->\\n      <input hidden name=\\\"showEpisodeId\\\" v-model=\\\"form.showEpisodeId\\\">\\n    </form>\\n\\n  </div>\\n</template>\\n\\n<script setup>\\nimport { Inertia } from \\\"@inertiajs/inertia\\\"\\nimport { onMounted, ref } from \\\"vue\\\"\\nimport { useForm } from \\\"@inertiajs/inertia-vue3\\\"\\nimport { Dropzone } from \\\"dropzone\\\"\\nimport { useUserStore } from \\\"@/Stores/UserStore\\\"\\n\\nconst userStore = useUserStore()\\nlet uploadPercentage = ref(0)\\nlet uploadingMessage = ref(0)\\nlet uploadCompleteMessage = ref(0)\\nlet isHidden = ref(false)\\n\\nonMounted(() => {\\n  // Make sure the element with the ID \\\"videoUploadForm\\\" is available in the DOM.\\n  const videoUploadForm = document.getElementById('videoUploadForm');\\n\\n  if (videoUploadForm) {\\n    // Initialize Dropzone on the element.\\n\\n    // see options for Dropzone here: https://github.com/dropzone/dropzone/blob/main/src/options.js\\n    let myDropzone = new Dropzone(\\\"#videoUploadForm\\\", {\\n      url: \\\"/videoupload\\\",\\n      paramName: \\\"file\\\", // The name that will be used to transfer the file\\n      maxFilesize: '25 GB', // MB\\n      chunking: true,\\n      chunkSize: 2 * 1024 * 1024,\\n      parallelChunkUploads: false,\\n      retryChunks: true,\\n      retryChunksLimit: 10,\\n      capture: null,\\n      // can set the capture method as camera, microphone or video\\n      // for mobile devices to skip the file selection and choose the\\n      // recording device instead.\\n      acceptedFiles: 'video/*, audio/*',\\n      uploadprogress: function (file, progress, bytesSent) {\\n        userStore.uploadPercentage = progress;\\n        console.log(userStore.uploadPercentage);\\n        if (userStore.uploadPercentage !== 100) {\\n          isHidden = true;\\n        }\\n      },\\n      dictDefaultMessage: \\\"Click here or Drop video here to upload <br>(Max video file size is 25GB)\\\",\\n      forceFallback: false, // for testing, set to true.\\n      accept: function (file, done) {\\n        if (file.name === \\\"\\\") {\\n          done(\\\"Need a file.\\\");\\n        } else if (file.size > 25000000000) {\\n          console.log(file.size)\\n          done(\\\"Video file too big.\\\");\\n          alert('Video file must be smaller than 25GB');\\n        } else {\\n          done();\\n        }\\n      }\\n    });\\n\\n    myDropzone.on(\\\"addedfile\\\", file => {\\n      uploadingMessage = 1;\\n      console.log(`File added: ${file.name}`);\\n\\n    });\\n\\n    myDropzone.on(\\\"complete\\\", function (file) {\\n      uploadingMessage = 0;\\n      uploadCompleteMessage = 1;\\n      myDropzone.removeFile(file);\\n      userStore.uploadPercentage = 0;\\n      isHidden = false;\\n      Inertia.reload({\\n        only: [\\\"videos\\\"],\\n      });\\n    });\\n\\n  } else {\\n    console.error('Element with ID \\\"videoUploadForm\\\" not found in the DOM.');\\n  }\\n})\\n\\nlet props = defineProps({\\n  movieId: Number,\\n  movieTrailerId: Number,\\n  showEpisodeId: Number,\\n})\\n\\nfunction setMovieOrEpisodeId() {\\n  if (props.movieId !== null) {\\n    userStore.uploadMovieId = props.mov;\\n  } else if (props.movieTrailerId !== null) {\\n    userStore.movieTrailerId = props.movieTrailerId;\\n  } else if (props.showEpisodeId !== null) {\\n    userStore.uploadShowEpisodeId = props.showEpisodeId;\\n  }\\n}\\n\\nsetMovieOrEpisodeId()\\n\\nlet form = useForm({\\n  file: [],\\n  // movieId: userStore.uploadMovieId,\\n  movieId: props.movieId,\\n  movieTrailerId: props.movieId,\\n  showEpisodeId: props.showEpisodeId,\\n});\\n\\n// let props = defineProps({\\n//     filters: Object,\\n//     can: Object,\\n//     videos: Object,\\n//     message: String,\\n//     errors: ref(''),\\n//     isHidden: ref(false),\\n//     done: ref(),\\n// });\\n\\n</script>\\n<style scoped>\\n\\n.dropzone {\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: center;\\n  row-gap: 16px;\\n  border: 2px dashed #000000;\\n  background-color: #fce4bb;\\n  transition: 0.3s ease all;\\n}\\n\\nlabel {\\n  padding: 8px 12px;\\n  color: #fff;\\n  background-color: #4bb1b1;\\n  transition: 0.3s ease all;\\n}\\n\\n.active-dropzone {\\n  color: #fff;\\n  border-color: #fff;\\n  background-color: #4bb1b1;\\n}\\n\\n.active-dropzone label {\\n  background-color: #fff;\\n  color: #4bb1b1;\\n}\\n\\n/*6b7280*/\\n/*4bb1b1*/\\n\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import script from \"./CancelButton.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CancelButton.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n    <button\n        @click.prevent=\"cancel\"\n        class=\"ml-2 px-4 py-2 text-white bg-orange-600 hover:bg-orange-500 rounded-lg\"\n    >Cancel\n    </button>\n  </div>\n</template>\n\n<script setup>\nimport { Inertia } from \"@inertiajs/inertia\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useUserStore } from '@/Stores/UserStore'\n\nconst appSettingStore = useAppSettingStore()\nconst userStore = useUserStore()\n\nfunction cancel() {\n  if (appSettingStore.prevUrl) {\n    Inertia.visit(appSettingStore.prevUrl)\n  } else {\n    // Fallback if prevUrl is not available\n    let prevUrl = userStore.isCreator ? '/dashboard' : '/';\n    Inertia.visit(prevUrl);\n  }\n}\n</script>\n","import script from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"mx-4 my-4\">\n    <div class=\"alert alert-info mt-4\"\n         v-if=\"props.flash.message\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" class=\"stroke-current shrink-0 w-6 h-6\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n      </svg>\n      <span>{{ props.flash.message }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-success mt-4 mx-3\"\n         v-if=\"props.flash.success\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.success }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-warning mt-4 mx-3\"\n         v-if=\"props.flash.warning\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"/>\n      </svg>\n      <span>{{ props.flash.warning }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-error mt-4 mx-3\"\n         v-if=\"props.flash.error\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.error }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n  </div>\n\n</template>\n\n<script setup>\nimport { Inertia } from \"@inertiajs/inertia\"\nimport { computed } from \"vue\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\n\nconst appSettingStore = useAppSettingStore()\n\nappSettingStore.showFlashMessage = true\n\nlet props = defineProps({\n  flash: Object,\n\n})\n\nconst messageType = computed(() => ({\n  'text-green-700 bg-green-100 dark:bg-green-200 dark:text-green-800': props.flash.success,\n  'text-blue-700 bg-blue-100 dark:bg-blue-200 dark:text-blue-800': props.flash.message,\n  'text-orange-700 bg-orange-100 dark:bg-orange-200 dark:text-orange-800': props.flash.warning,\n  'text-red-700 bg-red-100 dark:bg-red-200 dark:text-red-800': props.flash.error,\n}))\n\nconst clearFlashMessage = async () => {\n  await Inertia.post(route('flash.clear'));\n  Inertia.reload();\n};\n</script>\n","import script from \"./TabbableTextarea.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TabbableTextarea.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <textarea\n        @keydown.tab.prevent=\"onTabPress\"\n        @keyup=\"emit('update:modelValue', $event.target.value)\"\n        v-text=\"modelValue\"/>\n</template>\n\n<script setup>\ndefineProps({\n  modelValue: String\n});\n\nlet emit = defineEmits(['update:modelValue']);\n\nfunction onTabPress(e) {\n  let textarea = e.target;\n\n  // get caret position/selection\n  let val = textarea.value,\n      start = textarea.selectionStart,\n      end = textarea.selectionEnd;\n\n  // set textarea value to: text before caret + tab + text after caret\n  textarea.value = val.substring(0, start) + \"\\t\" + val.substring(end);\n\n  // put caret at right position again\n  textarea.selectionStart = textarea.selectionEnd = start + 1;\n}\n\n</script>\n","import script from \"./ImageUpload.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ImageUpload.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"\">\n    <div class=\"max-full mx-auto mt-2 mb-6 bg-gray-200 p-6 text-black\">\n      <h2 class=\"text-xl font-semibold\">{{ name }}</h2>\n\n      <ul class=\"pb-4\">\n        <li>Max File Size: <span class=\"text-orange-400\">{{ maxSize }}</span></li>\n        <li>File Types accepted: <span class=\"text-orange-400\">{{ fileTypes }}</span></li>\n      </ul>\n      <file-pond\n          name=\"image\"\n          ref=\"pond\"\n          label-idle=\"Click to choose file, or drag here...\"\n          @init=\"filepondInitialized\"\n          :server=\"server\"\n          :accepted-file-types=\"fileTypes\"\n          @processfile=\"handleProcessedFile\"\n          :max-file-size=\"maxSize\"\n      />\n      <!--        <file-pond-->\n      <!--            ref=\"filePond\"-->\n      <!--            :files=\"files\"-->\n      <!--            :server=\"serverOptions\"-->\n      <!--            @init=\"handleFilePondInit\"-->\n      <!--            @beforeaddfile=\"handleBeforeAddFile\"-->\n      <!--            @processfile=\"handleProcessedFile\"-->\n      <!--        />-->\n    </div>\n  </div>\n\n</template>\n\n<script setup>\nimport { Inertia } from \"@inertiajs/inertia\"\nimport { computed, ref } from \"vue\"\nimport vueFilePond, { setOptions } from 'vue-filepond'\nimport FilePondPluginFileValidateType from \"filepond-plugin-file-validate-type\"\nimport FilePondPluginFileValidateSize from \"filepond-plugin-file-validate-size\"\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\"\nimport FilePondPluginFileMetadata from \"filepond-plugin-file-metadata\"\nimport 'filepond/dist/filepond.min.css'\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.min.css'\n\nlet props = defineProps({\n  image: Object,\n  name: String,\n  metadataKey: String,\n  metadataValue: String,\n  server: String,\n  maxSize: String,\n  fileTypes: String,\n})\n\n\n// // Initialize FilePond with the File Metadata plugin\n// const filePondOptions = {\n//     allowMultiple: false,\n//     labelIdle: \"Drop files here or click to upload\",\n//     plugins: [FilePondPluginFileMetadata()],\n// };\n\n\n// Files array to store uploaded files\n// const files = ref([]);\n\nconst metadataKey = props.metadataKey\nconst metadataValue = props.metadataValue\nconst customMetadata = {\n  [metadataKey]: metadataValue\n};\n// customMetadata.value[props.metadataKey] = 'bar';\n// customMetadata.value[props.metadataKey] = props.metadataValue;\n// const customMetadata = ref({ [props.metadataKey]: props.metadataValue });\n// const customMetadata = computed(() => ({\n//     [props.metadataKey]: props.metadataValue,\n// }));\n\n// FilePond server options (you can customize this)\nconst serverOptions = {\n  process: (fieldName, file, metadata, load, error, progress, abort) => {\n    // Construct a FormData object to send the file and metadata to your Laravel server\n    const formData = new FormData();\n    formData.append('file', file, file.name); // Add the file\n    formData.append('metadata', JSON.stringify(customMetadata)); // Add the metadata as a JSON string\n\n    // Make an Axios POST request to your Laravel backend\n    axios.post(props.server, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data', // Set the appropriate content type\n      },\n      onUploadProgress: (event) => {\n        const progressPercentage = Math.round((event.loaded / event.total) * 100);\n        // Update the progress bar or display progress percentage if needed\n        progress(progressPercentage);\n      },\n    })\n        .then((response) => {\n          // Handle a successful upload\n          load(response.data.url); // Pass the file URL to the load() function\n        })\n        .catch((err) => {\n          // Handle upload error\n          console.error('Upload error:', err);\n          error('Error uploading the file'); // Pass an error message to the error() function\n        });\n  },\n};\n\n\n// Initialize FilePond\n// const handleFilePondInit = () => {\n//     // FilePond has been initialized\n//     console.log(\"FilePond is ready\");\n// };\n\n// Handle the beforeaddfile event\n// const handleBeforeAddFile = (file) => {\n//     // Add metadata to the file object\n//     file.setMetadata(\"key\", \"value\");\n//     // You can set multiple metadata fields as needed\n//     // file.setMetadata(\"anotherKey\", \"anotherValue\");\n// };\n\n\nconst FilePond = vueFilePond(\n    FilePondPluginFileValidateType,\n    FilePondPluginFileValidateSize,\n    FilePondPluginImagePreview,\n    FilePondPluginFileMetadata\n);\n\n// Handle the beforeaddfile event\n// const handleBeforeAddFile = (file) => {\n//     // Add metadata to the file object\n//     file.setMetadata(\"show_id\", \"1\");\n//     // You can set multiple metadata fields as needed\n//     // file.setMetadata(\"anotherKey\", \"anotherValue\");\n// };\n\n// FilePond.registerPlugin(FilePondPluginFileMetadata);\nFilePond.setOptions = ({\n  fileMetadataObject: {\n    show_id: '1',\n  },\n});\n\n\n// Initialize FilePond with the File Metadata plugin\n// const filePondOptions = {\n//     allowMultiple: true,\n//     labelIdle: \"Drop files here or click to upload\",\n//     plugins: [FilePondPluginFileMetadata()],\n// };\n\nfunction filepondInitialized() {\n  console.log(\"Filepond is ready!\");\n  // console.log('Filepond object:', FilePond);\n\n}\n\nconst emit = defineEmits(['reloadImage'])\n\nfunction handleProcessedFile(error, file) {\n  if (error) {\n    console.log(\"Filepond processed file\");\n    console.log(error);\n    console.log(file);\n    return;\n  }\n\n  emit('reloadImage')\n\n  // Inertia.reload({\n  //     only: ['image'],\n  // });\n}\n\n</script>\n","<template>\n  <div>\n\n    <progress v-show=\"userStore.uploadPercentage != 0\" max=\"100\" :value=\"userStore.uploadPercentage\" class=\"w-full\"/>\n    <div v-show=\"userStore.uploadPercentage != 0\" class=\"w-full mb-4\">{{ userStore.uploadPercentageRounded }}%</div>\n\n    <div v-show=\"uploadingMessage\" class=\"mb-4 font-bold text-center\">Please stay on this screen until upload is\n      complete.\n    </div>\n    <div v-show=\"uploadCompleteMessage\" class=\"mb-4 font-bold text-center\">Upload is complete. The video is now\n      processing.\n    </div>\n    <form v-show=\"!isHidden\" id=\"videoUploadForm\" action=\"/videoupload\"\n          class=\"dropzone dropzoneFile border border-black rounded w-full h-48 max-w-md px-2 py-2 mb-6\">\n      <!--                            add input fields and a submit button to send data back to Laravel -->\n      <input hidden name=\"movieId\" v-model=\"form.movieId\">\n      <!--            <input hidden name=\"movieTrailerId\" v-model=\"form.movieTrailerId\">-->\n      <input hidden name=\"showEpisodeId\" v-model=\"form.showEpisodeId\">\n    </form>\n\n  </div>\n</template>\n\n<script setup>\nimport { Inertia } from \"@inertiajs/inertia\"\nimport { onMounted, ref } from \"vue\"\nimport { useForm } from \"@inertiajs/inertia-vue3\"\nimport { Dropzone } from \"dropzone\"\nimport { useUserStore } from \"@/Stores/UserStore\"\n\nconst userStore = useUserStore()\nlet uploadPercentage = ref(0)\nlet uploadingMessage = ref(0)\nlet uploadCompleteMessage = ref(0)\nlet isHidden = ref(false)\n\nonMounted(() => {\n  // Make sure the element with the ID \"videoUploadForm\" is available in the DOM.\n  const videoUploadForm = document.getElementById('videoUploadForm');\n\n  if (videoUploadForm) {\n    // Initialize Dropzone on the element.\n\n    // see options for Dropzone here: https://github.com/dropzone/dropzone/blob/main/src/options.js\n    let myDropzone = new Dropzone(\"#videoUploadForm\", {\n      url: \"/videoupload\",\n      paramName: \"file\", // The name that will be used to transfer the file\n      maxFilesize: '25 GB', // MB\n      chunking: true,\n      chunkSize: 2 * 1024 * 1024,\n      parallelChunkUploads: false,\n      retryChunks: true,\n      retryChunksLimit: 10,\n      capture: null,\n      // can set the capture method as camera, microphone or video\n      // for mobile devices to skip the file selection and choose the\n      // recording device instead.\n      acceptedFiles: 'video/*, audio/*',\n      uploadprogress: function (file, progress, bytesSent) {\n        userStore.uploadPercentage = progress;\n        console.log(userStore.uploadPercentage);\n        if (userStore.uploadPercentage !== 100) {\n          isHidden = true;\n        }\n      },\n      dictDefaultMessage: \"Click here or Drop video here to upload <br>(Max video file size is 25GB)\",\n      forceFallback: false, // for testing, set to true.\n      accept: function (file, done) {\n        if (file.name === \"\") {\n          done(\"Need a file.\");\n        } else if (file.size > 25000000000) {\n          console.log(file.size)\n          done(\"Video file too big.\");\n          alert('Video file must be smaller than 25GB');\n        } else {\n          done();\n        }\n      }\n    });\n\n    myDropzone.on(\"addedfile\", file => {\n      uploadingMessage = 1;\n      console.log(`File added: ${file.name}`);\n\n    });\n\n    myDropzone.on(\"complete\", function (file) {\n      uploadingMessage = 0;\n      uploadCompleteMessage = 1;\n      myDropzone.removeFile(file);\n      userStore.uploadPercentage = 0;\n      isHidden = false;\n      Inertia.reload({\n        only: [\"videos\"],\n      });\n    });\n\n  } else {\n    console.error('Element with ID \"videoUploadForm\" not found in the DOM.');\n  }\n})\n\nlet props = defineProps({\n  movieId: Number,\n  movieTrailerId: Number,\n  showEpisodeId: Number,\n})\n\nfunction setMovieOrEpisodeId() {\n  if (props.movieId !== null) {\n    userStore.uploadMovieId = props.mov;\n  } else if (props.movieTrailerId !== null) {\n    userStore.movieTrailerId = props.movieTrailerId;\n  } else if (props.showEpisodeId !== null) {\n    userStore.uploadShowEpisodeId = props.showEpisodeId;\n  }\n}\n\nsetMovieOrEpisodeId()\n\nlet form = useForm({\n  file: [],\n  // movieId: userStore.uploadMovieId,\n  movieId: props.movieId,\n  movieTrailerId: props.movieId,\n  showEpisodeId: props.showEpisodeId,\n});\n\n// let props = defineProps({\n//     filters: Object,\n//     can: Object,\n//     videos: Object,\n//     message: String,\n//     errors: ref(''),\n//     isHidden: ref(false),\n//     done: ref(),\n// });\n\n</script>\n<style scoped>\n\n.dropzone {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  row-gap: 16px;\n  border: 2px dashed #000000;\n  background-color: #fce4bb;\n  transition: 0.3s ease all;\n}\n\nlabel {\n  padding: 8px 12px;\n  color: #fff;\n  background-color: #4bb1b1;\n  transition: 0.3s ease all;\n}\n\n.active-dropzone {\n  color: #fff;\n  border-color: #fff;\n  background-color: #4bb1b1;\n}\n\n.active-dropzone label {\n  background-color: #fff;\n  color: #4bb1b1;\n}\n\n/*6b7280*/\n/*4bb1b1*/\n\n</style>\n","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-9.use[1]!../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-9.use[2]!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./VideoUpload.vue?vue&type=style&index=0&id=60980035&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./VideoUpload.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./VideoUpload.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./VideoUpload.vue?vue&type=style&index=0&id=60980035&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-60980035\"]])\n\nexport default __exports__","import script from \"./ValidationErrors.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ValidationErrors.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { computed } from 'vue';\nimport { usePage } from '@inertiajs/inertia-vue3';\n\nconst errors = computed(() => usePage().props.value.errors);\nconst hasErrors = computed(() => Object.keys(errors.value).length > 0);\n</script>\n\n<template>\n    <div v-if=\"hasErrors\">\n        <div class=\"font-medium text-red-600\">\n            Whoops! Something went wrong.\n        </div>\n\n        <ul class=\"mt-3 list-disc list-inside text-sm text-red-600\">\n            <li v-for=\"(error, key) in errors\" :key=\"key\">\n                {{ error }}\n            </li>\n        </ul>\n    </div>\n</template>\n","import script from \"./Edit.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Edit.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n\n    <Head :title=\"`Edit Movie: ${movie.name}`\"/>\n\n    <div class=\"place-self-center flex flex-col gap-y-3\">\n        <div id=\"topDiv\" class=\"bg-dark text-light p-5 mb-10 pt-6\">\n\n            <Message v-if=\"appSettingStore.showFlashMessage\" :flash=\"$page.props.flash\"/>\n\n            <header>\n                <div class=\"flex justify-between mb-6\">\n                    <div>\n                        <div class=\"font-bold mb-4 text-red-700\">EDIT MOVIE</div>\n                        <h1 class=\"text-3xl\">\n                            <Link :href=\"`/movies/${movie.slug}`\" class=\"text-red-700 font-bold uppercase\">{{ movie.name }}</Link>\n                        </h1>\n                    </div>\n                    <div>\n                        <CancelButton />\n                    </div>\n                </div>\n            </header>\n\n            <div class=\"flex flex-col\">\n                <div class=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\n                    <div class=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\n                        <div class=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\n\n\n                            <div v-if=\"form.errors.name\" v-text=\"form.errors.name\"\n                                 class=\"bg-red-600 p-2 w-full text-white font-semibold mt-1 mb-6\"></div>\n                            <div v-if=\"form.errors.description\" v-text=\"form.errors.description\"\n                                 class=\"bg-red-600 p-2 w-full text-white font-semibold mt-1 mb-6\"></div>\n                            <div v-if=\"form.errors.file_url\" v-text=\"form.errors.file_url\"\n                                 class=\"bg-red-600 p-2 w-full text-white font-semibold mt-1 mb-6\"></div>\n                            <!--                            <div v-if=\"form.errors.video_file_embed_code\" v-text=\"form.errors.video_file_embed_code\"-->\n                            <!--                                 class=\"bg-red-600 p-2 w-full text-white font-semibold mt-1\"></div>-->\n\n\n                            <!-- Begin grid 2-col -->\n                            <div class=\"grid grid-cols-1 sm:grid-cols-2 space-x-6 p-6\">\n\n\n                                <!--Left Column-->\n                                <div>\n                                    <div class=\"flex space-y-3\">\n                                        <div class=\"mb-6\">\n                                            <SingleImage :image=\"props.image\" :key=\"props.image\"/>\n                                        </div>\n                                    </div>\n\n                                    <div class=\"w-full\">\n\n                                        <label class=\"block mb-2 uppercase font-bold text-xs text-light text-red-700\"\n                                               for=\"name\"\n                                        >\n                                            Change Movie Poster\n                                        </label>\n\n                                        <ImageUpload :image=\"props.image\"\n                                                     :server=\"'/moviesUploadPoster'\"\n                                                     :name=\"'Upload Movie Poster'\"\n                                                     :maxSize=\"'30MB'\"\n                                                     :fileTypes=\"'image/jpg, image/jpeg, image/png'\"\n                                                     @reloadImage=\"reloadImage\"\n                                        />\n\n                                    </div>\n\n                                    <div class=\"flex space-y-3\">\n                                        <div class=\"mb-6 bg-black w-full p-6\">\n                                            <span\n                                                v-if=\"video.upload_status === 'processing'\"\n                                                class=\"text-center place-self-center text-white font-semibold text-xl\">Video processing...</span>\n                                            <video v-if=\"video.upload_status !== 'processing'\" :src=\"video.cdn_endpoint+video.cloud_folder+video.folder+'/'+video.file_name\" controls></video>\n                                        </div>\n                                    </div>\n\n                                    <div class=\"\">\n                                        <label class=\"block mb-2 uppercase font-bold text-xs text-red-700\"\n                                               for=\"name\"\n                                        >\n                                            Upload Movie\n                                        </label>\n                                        <div class=\"max-full mx-auto mt-2 mb-6 bg-gray-200 px-6 pt-4 pb-2 text-dark\">\n                                            <h2 class=\"text-xl font-semibold text-gray-800\">Upload Video</h2>\n\n                                            <ul class=\"pb-4 text-gray-800\">\n                                                <li>Max Video Length: <span class=\"text-orange-400\">4 hours</span>\n                                                </li>\n                                                <li>File Types accepted: <span class=\"text-orange-400\">mp4, webm, ogg</span>\n                                                </li>\n                                            </ul>\n\n                                            <VideoUpload :movieId=\"movie.id\" class=\"text-black\"/>\n\n                                        </div>\n\n\n\n                                    </div>\n\n\n\n\n                                    <div class=\"flex space-y-3\">\n                                        <div class=\"mb-6 bg-black w-full p-6\">\n<!--                                            VIDEO HERE-->\n                                        </div>\n                                    </div>\n\n                                    <div>\n                                        <label class=\"block mb-2 uppercase font-bold text-xs text-red-700\"\n                                               for=\"name\"\n                                        >\n                                            Upload Movie Trailer\n                                        </label>\n                                        <div class=\"max-full mx-auto mt-2 mb-6 bg-gray-200 px-6 pt-4 pb-2 text-dark\">\n                                            <h2 class=\"text-xl font-semibold text-gray-800\">Upload Video</h2>\n\n                                            <ul class=\"pb-4 text-gray-800\">\n                                                <li>Max Video Length: <span class=\"text-orange-400\">4 hours</span>\n                                                </li>\n                                                <li>File Types accepted: <span class=\"text-orange-400\">mp4, webm, ogg</span>\n                                                </li>\n                                            </ul>\n\n<!--                                            <VideoUpload class=\"text-black\"/>-->\n\n                                        </div>\n\n                                    </div>\n\n\n\n                                </div>\n\n\n\n                            <!--Right Column-->\n                                <div>\n\n                                    <form @submit.prevent=\"submit\">\n\n                                        <div class=\"mb-6\">\n                                            <label class=\"block mb-2 uppercase font-bold text-xs text-red-700\"\n                                                   for=\"name\"\n                                            >\n                                                Movie Name\n                                            </label>\n\n                                            <input v-model=\"form.name\"\n                                                   class=\"border border-gray-400 text-gray-800 p-2 w-1/2 rounded-lg\"\n                                                   type=\"text\"\n                                                   name=\"name\"\n                                                   id=\"name\"\n                                                   required\n                                            >\n                                            <div v-if=\"form.errors.name\" v-text=\"form.errors.name\"\n                                                 class=\"text-xs text-red-600 mt-1\"></div>\n                                        </div>\n\n                                        <div class=\"mb-6 w-64\">\n                                            <label class=\"block mb-2 uppercase font-bold text-xs text-red-700\"\n                                                   for=\"release_date\"\n                                            >\n                                                Release Year\n                                            </label>\n\n                                            <input v-model=\"form.release_year\"\n                                                   class=\"border border-gray-400 text-gray-800 p-2 w-1/2 rounded-lg\"\n                                                   type=\"number\"\n                                                   name=\"release_year\"\n                                                   id=\"release_year\"\n                                                   minlength=\"4\"\n                                                   maxlength=\"4\"\n\n                                            >\n                                            <div v-if=\"form.errors.release_year\" v-text=\"form.errors.release_year\"\n                                                 class=\"text-xs text-red-600 mt-1\"></div>\n                                        </div>\n\n                                        <div class=\"mb-6\">\n                                            <label class=\"block mb-2 uppercase font-bold text-xs text-red-700\"\n                                                   for=\"category\"\n                                            >\n                                                Category\n                                            </label>\n\n                                            <select class=\"border border-gray-400 text-gray-800 p-2 w-1/2 rounded-lg block mb-2 uppercase font-bold text-xs \"\n                                                    v-model=\"form.category\" @change=\"chooseCategory($event)\"\n                                            >\n                                                <option v-for=\"category in props.categories\"\n                                                        :key=\"category.id\" :value=\"category.id\">{{category.name}}</option>\n\n\n                                            </select>\n        <!--    This was for practice... the next step is to loop over the sub-categories that belongTo the category selected. -->\n        <!--                                    <select>-->\n        <!--                                        <option v-for=\"option in options\" :value=\"option.value\">{{option.text}}</option>-->\n        <!--                                    </select>-->\n                                            <span class=\"\">{{movieStore.category_description}}</span>\n                                            </div>\n\n                                            <div v-if=\"form.errors.category\" v-text=\"form.errors.category\"\n                                                 class=\"text-xs text-red-600 mb-2\">\n                                        </div>\n\n                                        <div class=\"mb-6\">\n                                            <label class=\"block mb-2 text-gray-600 uppercase font-bold text-xs text-red-700\"\n                                                   for=\"sub_category\"\n                                            >\n                                                Sub-category\n                                            </label>\n\n                                            <select disabled class=\"border border-gray-400 text-gray-800 disabled:bg-gray-600 disabled:cursor-not-allowed p-2 w-1/2 rounded-lg block mb-2 uppercase font-bold text-xs\"\n                                                    v-model=\"form.sub_category\"\n                                            >\n                                                <option value=\"1\">Option</option>\n                                            </select>\n                                            <div v-if=\"form.errors.sub_category\" v-text=\"form.errors.sub_category\"\n                                                 class=\"text-xs text-red-600 mt-1\"></div>\n                                        </div>\n\n                                        <div class=\"mb-6\">\n                                            <label class=\"block mb-2 uppercase font-bold text-xs text-red-700\"\n                                                   for=\"name\"\n                                            >\n                                                Logline\n                                            </label>\n\n                                            <input v-model=\"form.logline\"\n                                                   class=\"border border-gray-400 text-gray-800 p-2 w-1/2 rounded-lg\"\n                                                   type=\"text\"\n                                                   name=\"logline\"\n                                                   id=\"logline\"\n                                                   required\n                                            >\n                                            <div v-if=\"form.errors.logline\" v-text=\"form.errors.logline\"\n                                                 class=\"text-xs text-red-600 mt-1\"></div>\n                                        </div>\n\n                                        <div class=\"mb-6\">\n                                            <label class=\"block mb-2 uppercase font-bold text-xs text-red-700\"\n                                                   for=\"description\"\n                                            >\n                                                Description\n                                            </label>\n                                            <TabbableTextarea v-model=\"form.description\"\n                                                              class=\"border border-gray-400 text-gray-800 p-2 w-full rounded-lg\"\n                                                              name=\"description\"\n                                                              id=\"description\"\n                                                              rows=\"10\" cols=\"30\"\n                                                              required\n                                            />\n                                            <div v-if=\"form.errors.description\" v-text=\"form.errors.description\"\n                                                 class=\"text-xs text-red-600 mt-1\"></div>\n                                        </div>\n\n                                        <div class=\"mb-6\">\n                                            <label class=\"block mb-2 uppercase font-bold text-xs text-red-700\"\n                                                   for=\"file_url\"\n                                            >\n                                                Change Video URL (if hosted externally) <span class=\"text-white dark:text-black\">*</span>\n                                            </label>\n\n                                            <input v-model=\"form.file_url\"\n                                                   class=\"border border-gray-400 text-gray-800 p-2 w-full rounded-lg\"\n                                                   type=\"text\"\n                                                   name=\"file_url\"\n                                                   id=\"file_url\"\n                                            >\n                                            <div v-if=\"form.errors.file_url\" v-text=\"form.errors.file_url\"\n                                                 class=\"text-xs text-red-600 mt-1\"></div>\n                                        </div>\n\n                                        <div class=\"block mb-6 uppercase font-bold text-xs text-light\">\n                                            <div class=\"mb-2\">* Notes:</div>\n\n                                            <ul class=\"list-decimal pb-2 ml-2 mb-4 border-b\">\n                                                <li>\n                                                    We have not enabled the use of Facebook videos for security purposes.\n                                                </li>\n                                            </ul>\n                                        </div>\n\n\n                                        <div class=\"mb-6\">\n                                            <label class=\"block mb-2 uppercase font-bold text-xs text-red-700\"\n                                                   for=\"name\"\n                                            >\n                                                Website URL\n                                            </label>\n\n                                            <input v-model=\"form.www_url\"\n                                                   class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                                                   type=\"text\"\n                                                   name=\"www_url\"\n                                                   id=\"www_url\"\n                                            >\n                                            <div v-if=\"form.errors.www_url\" v-text=\"form.errors.www_url\"\n                                                 class=\"text-xs text-red-600 mt-1\"></div>\n                                        </div>\n\n                                        <div class=\"mb-6\">\n                                            <label class=\"block mb-2 uppercase font-bold text-xs text-red-700\"\n                                                   for=\"name\"\n                                            >\n                                                Instagram @\n                                            </label>\n\n                                            <input v-model=\"form.instagram_name\"\n                                                   class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                                                   type=\"text\"\n                                                   name=\"instagram_name handle\"\n                                                   id=\"instagram_name\"\n                                            >\n                                            <div v-if=\"form.errors.instagram_name\" v-text=\"form.errors.instagram_name\"\n                                                 class=\"text-xs text-red-600 mt-1\"></div>\n                                        </div>\n\n                                        <div class=\"mb-6\">\n                                            <label class=\"block mb-2 uppercase font-bold text-xs text-red-700\"\n                                                   for=\"name\"\n                                            >\n                                                Telegram URL\n                                            </label>\n\n                                            <input v-model=\"form.telegram_url\"\n                                                   class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                                                   type=\"text\"\n                                                   name=\"telegram_url\"\n                                                   id=\"telegram_url\"\n                                            >\n                                            <div v-if=\"form.errors.telegram_url\" v-text=\"form.errors.telegram_url\"\n                                                 class=\"text-xs text-red-600 mt-1\"></div>\n                                        </div>\n\n                                        <div class=\"mb-6\">\n                                            <label class=\"block mb-2 uppercase font-bold text-xs text-red-700\"\n                                                   for=\"name\"\n                                            >\n                                                Twitter @\n                                            </label>\n\n                                            <input v-model=\"form.twitter_handle\"\n                                                   class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                                                   type=\"text\"\n                                                   name=\"twitter_handle\"\n                                                   id=\"twitter_handle\"\n                                            >\n                                            <div v-if=\"form.errors.twitter_handle\" v-text=\"form.errors.twitter_handle\"\n                                                 class=\"text-xs text-red-600 mt-1\"></div>\n                                        </div>\n\n                                    </form>\n\n                                </div>\n                                <!-- End Right Column -->\n                            </div>\n                            <!-- End grid 2-col -->\n\n\n                            <div class=\"flex justify-end my-6 mr-6\">\n                                <JetValidationErrors class=\"mr-4\" />\n                                <button\n                                    @click=\"submit\"\n                                    class=\"bg-blue-600 hover:bg-blue-500 text-white rounded py-2 px-4\"\n                                    :disabled=\"form.processing\"\n                                >\n                                    Save\n                                </button>\n                            </div>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n\n        </div>\n    </div>\n\n</template>\n\n<script setup>\nimport { Inertia } from \"@inertiajs/inertia\"\nimport {useForm, usePage} from \"@inertiajs/inertia-vue3\"\nimport { usePageSetup } from '@/Utilities/PageSetup'\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useVideoPlayerStore } from \"@/Stores/VideoPlayerStore\"\nimport { useMovieStore } from \"@/Stores/MovieStore\"\nimport JetValidationErrors from '@/Jetstream/ValidationErrors'\nimport TabbableTextarea from \"@/Components/Global/TextEditor/TabbableTextarea\"\nimport Message from \"@/Components/Global/Modals/Messages\"\nimport SingleImage from \"@/Components/Global/Multimedia/SingleImage\"\nimport ImageUpload from \"@/Components/Global/Uploaders/ImageUpload\"\nimport VideoUpload from \"@/Components/Global/Uploaders/VideoUpload\"\nimport CancelButton from \"@/Components/Global/Buttons/CancelButton.vue\"\n\nusePageSetup('movieEdit')\n\nconst appSettingStore = useAppSettingStore()\nconst videoPlayerStore = useVideoPlayerStore()\nconst movieStore = useMovieStore()\n\nlet props = defineProps({\n    movie: Object,\n    video: Object,\n    trailer: Object,\n    image: Object,\n    categories: Object,\n    sub_categories: Object,\n    movieCategory: String,\n    movieCategorySub: String,\n})\n\nlet form = useForm({\n    id: props.movie.id,\n    name: props.movie.name,\n    release_year: props.movie.release_year,\n    category: props.movie.movie_category_id,\n    sub_category: props.movie.movie_category_sub_id,\n    description: props.movie.description,\n    logline: props.movie.logline,\n    user_id: props.movie.user_id,\n    team_id: props.movie.team_id,\n    file_url: props.movie.file_url,\n    www_url: props.movie.www_url,\n    instagram_name: props.movie.instagram_name,\n    telegram_url: props.movie.telegram_url,\n    twitter_handle: props.movie.twitter_handle,\n})\n\nlet reloadImage = () => {\n    Inertia.reload({\n        only: ['image'],\n    });\n};\n\nlet submit = () => {\n    form.put(route('movies.update', props.movie.slug));\n}\n\n// let category = ref();\n\nfunction chooseCategory(event) {\nmovieStore.category_description =  props.categories[event.target.selectedIndex].description;\n}\n// next step is to add sub-categories and loop over them based on the selected category.\n// this was for practice:\n// const options = []\n//     Array.from(event.target.selectedOptions).forEach(item => {\n//         options.push({\n//             value: item.value,\n//             text: `You have selected ${item.text}`\n//         })\n//     })\n//     this.options = options\n//     console.log(event.target.selectedOptions);\n\n\n// showStore.episodePoster = props.poster;\n\n\nfunction muteMainVideo(){\n    videoPlayerStore.mute();\n}\n\nfunction back() {\n    let urlPrev = usePage().props.value.urlPrev\n    if (urlPrev !== 'empty') {\n        Inertia.visit(urlPrev)\n    }\n}\n\n</script>\n"],"names":["initialState","id","category_id","category_sub_id","category_description","sub_categories","useMovieStore","defineStore","state","actions","reset","Object","assign","this","getters","usePageSetup","pageName","userStore","useUserStore","appSettingStore","useAppSettingStore","videoPlayerStore","useVideoPlayerStore","currentPage","showFlashMessage","pageIsHidden","isMobile","ott","makeVideoTopRight","onMounted","window","location","search","topDiv","document","getElementById","scrollIntoView","setPrevUrl","Inertia","reload","___CSS_LOADER_EXPORT___","push","module","cancel","prevUrl","visit","isCreator","props","__props","clearFlashMessage","computed","flash","success","message","warning","error","_ref","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","post","route","stop","apply","arguments","emit","onTabPress","e","textarea","target","val","value","start","selectionStart","end","selectionEnd","substring","FilePond","_defineProperty","metadataKey","metadataValue","vueFilePond","FilePondPluginFileValidateType","FilePondPluginFileValidateSize","FilePondPluginImagePreview","FilePondPluginFileMetadata","filepondInitialized","console","log","setOptions","fileMetadataObject","show_id","__emit","handleProcessedFile","file","uploadingMessage","ref","uploadCompleteMessage","isHidden","myDropzone","Dropzone","url","paramName","maxFilesize","chunking","chunkSize","parallelChunkUploads","retryChunks","retryChunksLimit","capture","acceptedFiles","uploadprogress","progress","bytesSent","uploadPercentage","dictDefaultMessage","forceFallback","accept","done","name","size","alert","on","concat","removeFile","only","movieId","uploadMovieId","mov","movieTrailerId","showEpisodeId","uploadShowEpisodeId","form","useForm","options","locals","errors","usePage","hasErrors","keys","length","movieStore","movie","release_year","category","movie_category_id","sub_category","movie_category_sub_id","description","logline","user_id","team_id","file_url","www_url","instagram_name","telegram_url","twitter_handle","reloadImage","submit","put","slug","event","categories","selectedIndex"],"sourceRoot":""}
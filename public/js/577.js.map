{"version":3,"file":"js/577.js","mappings":";03NAKA,8FCSIA,GAAmBC,EAAAA,EAAAA,KACnBC,GAAYC,EAAAA,EAAAA,KAIVC,IAHYC,EAAAA,EAAAA,MACFC,EAAAA,EAAAA,MAEIC,EAAAA,EAAAA,QAAO,cAAe,QAE1CC,EAAAA,EAAAA,gBAAe,WACXC,IACAT,EAAiBU,qBAAsB,EACvCV,EAAiBW,YAAc,SAC/BT,EAAUU,YAAc,QAC5B,KAEAC,EAAAA,EAAAA,YAAU,WACDT,IAkCLU,MAAMC,KAAK,qBACNC,MAAK,SAAAC,GACFf,EAAUgB,GAAKD,EAASE,KAAKD,GAC7BhB,EAAUkB,QAAUH,EAASE,KAAKC,QAClClB,EAAUmB,UAAYJ,EAASE,KAAKE,UACpCnB,EAAUoB,aAAeL,EAASE,KAAKG,aACvCpB,EAAUqB,MAAQN,EAASE,KAAKI,MAChCrB,EAAUsB,aAAeP,EAASE,KAAKK,aACvCtB,EAAUuB,WAAaR,EAASE,KAAKM,WACrCvB,EAAUwB,sBAAuB,EACjCxB,EAAUyB,SAAWC,EACrBC,QAAQC,IAAI,0BAChB,IAAE,OACK,SAAAC,GACHF,QAAQC,IAAIC,EAChB,IAEJC,KA/CAhC,EAAiBiC,oBACjBjC,EAAiBkC,2BACjBlC,EAAiBmC,UAAW,EAC5BnC,EAAiBoC,IAAM,EACvBpC,EAAiBqC,KAAM,EACvBrC,EAAiBsC,YAAa,EAC9BtC,EAAiBuC,aAAc,EAC/BvC,EAAiBwC,SAAU,EAC3BxC,EAAiByC,aAAc,EAC/BzC,EAAiB0C,YAAa,CAClC,KAEAC,EAAAA,EAAAA,cAAY,WACR3C,EAAiBU,qBAAsB,EACvCV,EAAiBoC,IAAM,EACvBpC,EAAiBqC,KAAM,EACvBrC,EAAiBsC,YAAa,EAC9BtC,EAAiBuC,aAAc,EAC/BvC,EAAiBwC,SAAU,EAC3BxC,EAAiByC,aAAc,EAC/BzC,EAAiB0C,YAAa,CAClC,IA6BA,IAAMd,GAAegB,EAAAA,EAAAA,KAAI,IAEnBnC,EAAkB,WAEpBmB,EAAaiB,MAAQC,KAAKC,iBAAiBC,kBAAkBC,QACjE,EAEMjB,EAAkB,iBAAAkB,KAAAC,IAAAC,MAAG,SAAAC,IAAA,IAAApC,EAAA,OAAAkC,IAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEI3C,MAAMC,KAAK,yBAA0B,CAAEY,SAAUC,EAAaiB,QAAQ,OAAvF5B,EAAQsC,EAAAG,KAGd7B,QAAQC,IAAIb,EAASE,KAAKwC,SAASJ,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAGnC1B,QAAQE,MAAKwB,EAAAK,IAETL,EAAAK,GAAM3C,UAENY,QAAQE,MAAMwB,EAAAK,GAAM3C,SAASE,MAChC,yBAAAoC,EAAAM,OAAA,GAAAR,EAAA,gMAER,kBAfuB,OAAAH,EAAAY,MAAA,KAAAC,UAAA","sources":["webpack:///./resources/js/Pages/Stream.vue?d9e7","webpack:///./resources/js/Pages/Stream.vue"],"sourcesContent":["import script from \"./Stream.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Stream.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <Head title=\"Stream\" />\n\n\n</template>\n\n\n<script setup>\nimport {inject, onBeforeMount, onMounted, onUnmounted, ref} from \"vue\";\nimport { useVideoPlayerStore } from \"@/Stores/VideoPlayerStore.js\"\nimport { useUserStore } from \"@/Stores/UserStore.js\"\nimport { useStreamStore } from \"@/Stores/StreamStore.js\"\nimport { useChatStore } from \"@/Stores/ChatStore.js\"\n\nlet videoPlayerStore = useVideoPlayerStore()\nlet userStore = useUserStore()\nlet streamStore = useStreamStore()\nlet chatStore = useChatStore()\n\nconst getUserData = inject('getUserData', null)\n\nonBeforeMount( () => {\n    getUserTimezone()\n    videoPlayerStore.currentPageIsStream = true;\n    videoPlayerStore.currentView = 'stream'\n    userStore.currentPage = 'stream'\n})\n\nonMounted(() => {\n    if (!getUserData) {\n        updateUserStore()\n\n    }\n    videoPlayerStore.makeVideoFullPage()\n    videoPlayerStore.showOsdAndControlsAndNav()\n    videoPlayerStore.loggedIn = true\n    videoPlayerStore.ott = 0\n    videoPlayerStore.osd = true\n    videoPlayerStore.ottButtons = true\n    videoPlayerStore.ottChannels = false\n    videoPlayerStore.ottChat = false\n    videoPlayerStore.ottPlaylist = false\n    videoPlayerStore.ottFilters = false\n})\n\nonUnmounted(() => {\n    videoPlayerStore.currentPageIsStream = false;\n    videoPlayerStore.ott = 0\n    videoPlayerStore.osd = true\n    videoPlayerStore.ottButtons = true\n    videoPlayerStore.ottChannels = false\n    videoPlayerStore.ottChat = false\n    videoPlayerStore.ottPlaylist = false\n    videoPlayerStore.ottFilters = false\n})\n\nlet props = defineProps ({\n    getUserData: Boolean,\n    video: Object,\n    user: Object,\n})\n\nfunction updateUserStore() {\n    axios.post('/getUserStoreData')\n        .then(response => {\n            userStore.id = response.data.id\n            userStore.isAdmin = response.data.isAdmin\n            userStore.isCreator = response.data.isCreator\n            userStore.isNewsPerson = response.data.isNewsPerson\n            userStore.isVip = response.data.isVip\n            userStore.isSubscriber = response.data.isSubscriber\n            userStore.hasAccount = response.data.hasAccount\n            userStore.getUserDataCompleted = true\n            userStore.timezone = userTimezone\n            console.log('get user data on Stream')\n        })\n        .catch(error => {\n            console.log(error);\n        })\n    // save user Timezone\n    updateUserTimezone()\n}\n\nconst userTimezone = ref('');\n\nconst getUserTimezone = () => {\n    // Use the Intl object to get the user's timezone\n    userTimezone.value = Intl.DateTimeFormat().resolvedOptions().timeZone;\n};\n\nconst updateUserTimezone = async () => {\n    try {\n        const response = await axios.post('/users/update-timezone', { timezone: userTimezone.value });\n\n        // Handle success response as needed\n        console.log(response.data.message);\n    } catch (error) {\n        // Handle error response or network error\n        console.error(error);\n\n        if (error.response) {\n            // Handle specific error responses if needed\n            console.error(error.response.data);\n        }\n    }\n};\n\n</script>\n\n"],"names":["videoPlayerStore","useVideoPlayerStore","userStore","useUserStore","getUserData","useStreamStore","useChatStore","inject","onBeforeMount","getUserTimezone","currentPageIsStream","currentView","currentPage","onMounted","axios","post","then","response","id","data","isAdmin","isCreator","isNewsPerson","isVip","isSubscriber","hasAccount","getUserDataCompleted","timezone","userTimezone","console","log","error","updateUserTimezone","makeVideoFullPage","showOsdAndControlsAndNav","loggedIn","ott","osd","ottButtons","ottChannels","ottChat","ottPlaylist","ottFilters","onUnmounted","ref","value","Intl","DateTimeFormat","resolvedOptions","timeZone","_ref","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","sent","message","t0","stop","apply","arguments"],"sourceRoot":""}
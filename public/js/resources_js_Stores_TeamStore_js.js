"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunknottvbeta"] = self["webpackChunknottvbeta"] || []).push([["resources_js_Stores_TeamStore_js"],{

/***/ "./resources/js/Stores/TeamStore.js":
/*!******************************************!*\
  !*** ./resources/js/Stores/TeamStore.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useTeamStore: () => (/* binding */ useTeamStore)\n/* harmony export */ });\n/* harmony import */ var pinia__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! pinia */ \"./node_modules/pinia/dist/pinia.mjs\");\n/* harmony import */ var dayjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! dayjs */ \"./node_modules/dayjs/dayjs.min.js\");\n/* harmony import */ var dayjs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(dayjs__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var dayjs_plugin_utc__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! dayjs-plugin-utc */ \"./node_modules/dayjs-plugin-utc/dist/dayjs-plugin-utc.min.js\");\n/* harmony import */ var dayjs_plugin_utc__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(dayjs_plugin_utc__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var dayjs_plugin_timezone__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! dayjs/plugin/timezone */ \"./node_modules/dayjs/plugin/timezone.js\");\n/* harmony import */ var dayjs_plugin_timezone__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(dayjs_plugin_timezone__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Stores_UserStore__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/Stores/UserStore */ \"./resources/js/Stores/UserStore.js\");\n/* harmony import */ var _Stores_NotificationStore__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/Stores/NotificationStore */ \"./resources/js/Stores/NotificationStore.js\");\nvar _this4 = undefined;\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n\n\n\n\n\n\ndayjs__WEBPACK_IMPORTED_MODULE_0___default().extend((dayjs_plugin_utc__WEBPACK_IMPORTED_MODULE_1___default()));\ndayjs__WEBPACK_IMPORTED_MODULE_0___default().extend((dayjs_plugin_timezone__WEBPACK_IMPORTED_MODULE_2___default()));\nvar initialState = function initialState() {\n  return {\n    team: {},\n    shows: {},\n    contributors: {},\n    members: {},\n    managers: {},\n    teamOwner: [],\n    teamLeader: [],\n    can: {},\n    id: 0,\n    name: '',\n    description: '',\n    slug: '',\n    totalSpots: '',\n    memberSpots: '',\n    activeShow: [],\n    activeEpisode: [],\n    showModal: Boolean,\n    confirmDialog: false,\n    confirmManagerDialog: false,\n    selectedManagerName: '',\n    selectedManagerId: 0,\n    addManager: false,\n    removeManager: false,\n    deleteMemberName: '',\n    deleteMemberId: 0,\n    noteEdit: 0,\n    note: '',\n    noteKey: 0,\n    saveNoteProcessing: Boolean,\n    // on the show episode manage page\n    // turn on the go live div\n    goLiveDisplay: false,\n    openComponent: 'teamShows',\n    nextBroadcastLoaded: {\n      scheduleIndexId: null,\n      broadcastDate: null,\n      broadcastDetails: {},\n      type: '',\n      image: null,\n      category: null,\n      subCategory: null,\n      slug: null,\n      name: null,\n      description: null\n    },\n    nextBroadcastZoomLink: ''\n  };\n};\nvar useTeamStore = (0,pinia__WEBPACK_IMPORTED_MODULE_5__.defineStore)('teamStore', {\n  state: initialState,\n  actions: {\n    reset: function reset() {\n      // Reset the store to its original state (clear all data)\n      Object.assign(this, initialState());\n    },\n    // async fill() {\n    //     let r = await import('@/Json/team.json');\n    //     this.$state = r.default;\n    // },\n    initializeTeam: function initializeTeam(team) {\n      console.log('incoming team: ', team);\n      var userStore = (0,_Stores_UserStore__WEBPACK_IMPORTED_MODULE_3__.useUserStore)();\n\n      // Ensure nextBroadcast is an array and has at least one element\n      if (Array.isArray(team.nextBroadcast) && team.nextBroadcast.length > 0) {\n        var firstBroadcast = team.nextBroadcast[0];\n        if (firstBroadcast.broadcastDetails) {\n          this.nextBroadcastLoaded = firstBroadcast;\n          if (firstBroadcast.broadcastDetails.zoomLink) {\n            this.nextBroadcastZoomLink = firstBroadcast.broadcastDetails.zoomLink;\n          }\n\n          // Ensure broadcastDetails is an array and has the zoomLink object\n          // this.nextBroadcastLoaded.broadcastDetails = []\n          // if (!Array.isArray(this.nextBroadcastLoaded.broadcastDetails)) {\n          //     this.nextBroadcastLoaded.broadcastDetails = []\n          // }\n\n          // let zoomLinkObj = this.nextBroadcastLoaded.broadcastDetails.find(detail => detail.zoomLink !== undefined)\n          // if (!zoomLinkObj) {\n          //     zoomLinkObj = {zoomLink: ''}\n          //     this.nextBroadcastLoaded.broadcastDetails.push(zoomLinkObj)\n          // }\n\n          team.nextBroadcast = team.nextBroadcast.map(function (broadcast) {\n            return _objectSpread(_objectSpread({}, broadcast), {}, {\n              broadcastDate: userStore.convertUtcToUserTimezone(broadcast.broadcastDate)\n            });\n          });\n        }\n      } else {\n        // Handle the case where nextBroadcast is not an array or is empty\n        this.nextBroadcastLoaded = null;\n        this.nextBroadcastZoomLink = null;\n      }\n      this.team = team || {};\n    },\n    initializeShows: function initializeShows(shows) {\n      this.shows = shows || {};\n    },\n    initializeContributors: function initializeContributors(contributors) {\n      this.contributors = contributors || {};\n    },\n    setCan: function setCan(can) {\n      this.can = can || {};\n    },\n    setActiveTeam: function setActiveTeam(team) {\n      this.team.id = team.id;\n      this.team.name = team.name;\n      this.team.description = team.description;\n      this.team.slug = team.slug;\n      this.team.members = team.members;\n      this.team.managers = team.managers;\n      this.team.totalSpots = team.totalSpots;\n      this.memberSpots = team.memberSpots;\n    },\n    setActiveShow: function setActiveShow(show) {\n      this.activeShow = show;\n    },\n    setActiveEpisode: function setActiveEpisode(episode) {\n      this.activeShow = episode;\n    },\n    addMember: function addMember(member) {\n      this.team.members.push(member);\n    },\n    removeMember: function removeMember(memberId) {\n      this.team.members = this.team.members.filter(function (member) {\n        return member.id !== memberId;\n      });\n    },\n    updateCreatorTeams: function updateCreatorTeams(creatorId, teamId) {\n      var remove = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var creator = this.creators.find(function (c) {\n        return c.id === creatorId;\n      });\n      if (creator) {\n        if (remove) {\n          creator.teams = creator.teams.filter(function (team) {\n            return team.id !== teamId;\n          });\n        } else {\n          creator.teams.push({\n            id: teamId,\n            is_manager: false\n          }); // Add the new team to the creator's teams\n        }\n      }\n    },\n    // getCreators() {\n    //     router.reload({ only: ['creators'] })\n    // },\n    deleteTeamMemberCancel: function deleteTeamMemberCancel() {\n      this.confirmDialog = false;\n    },\n    confirmTeamManagerCancel: function confirmTeamManagerCancel() {\n      this.confirmManagerDialog = false;\n    },\n    // loadTeamMembers(members){\n    //     this.members = members;\n    // }\n    // deleteTeamMember() {\n    //     router.visit(route('teams.removeTeamMember'), {\n    //         method: 'post',\n    //         data: {\n    //             user_id: this.deleteMemberId,\n    //             team_id: this.id,\n    //             team_slug: this.slug,\n    //         },\n    //     })\n    // },\n    deleteTeamMember: function deleteTeamMember() {\n      var _this = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var notificationStore, payload, response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              notificationStore = (0,_Stores_NotificationStore__WEBPACK_IMPORTED_MODULE_4__.useNotificationStore)();\n              payload = {\n                user_id: _this.deleteMemberId,\n                team_id: _this.team.id\n              };\n              _context.prev = 2;\n              _context.next = 5;\n              return axios.post(route('teams.removeTeamMember'), payload);\n            case 5:\n              response = _context.sent;\n              if (response.status === 200) {\n                _this.removeMember(_this.deleteMemberId);\n                _this.updateCreatorTeams(_this.deleteMemberId, _this.team.id, true); // Remove the team from the creator's teams\n                _this.confirmDialog = false;\n                notificationStore.setToastNotification(response.data.message, 'success');\n              } else {\n                _this.confirmDialog = false;\n                notificationStore.setToastNotification('Failed to remove member from the team.', 'warning');\n              }\n              _context.next = 14;\n              break;\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](2);\n              console.error(_context.t0);\n              _this.confirmDialog = false;\n              notificationStore.setToastNotification('An error occurred while removing the member from the team.', 'error');\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[2, 9]]);\n      }))();\n    },\n    addTeamManager: function addTeamManager() {\n      var _this2 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var notificationStore, payload, response;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              notificationStore = (0,_Stores_NotificationStore__WEBPACK_IMPORTED_MODULE_4__.useNotificationStore)();\n              payload = {\n                user_id: _this2.selectedManagerId,\n                team_id: _this2.team.id,\n                team_slug: _this2.team.slug\n              };\n              _context2.prev = 2;\n              _context2.next = 5;\n              return axios.post(route('teams.addTeamManager'), payload);\n            case 5:\n              response = _context2.sent;\n              if (response.status === 200) {\n                // Add any additional logic if needed, e.g., updating team data in the store\n                _this2.team.managers.push(response.data.manager);\n                _this2.confirmManagerDialog = false;\n                notificationStore.setToastNotification(response.data.message, 'success');\n              } else {\n                _this2.confirmManagerDialog = false;\n                notificationStore.setToastNotification('Failed to add manager to the team.', 'warning');\n              }\n              _context2.next = 14;\n              break;\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](2);\n              console.error(_context2.t0);\n              _this2.confirmManagerDialog = false;\n              notificationStore.setToastNotification('An error occurred while adding the manager to the team.', 'error');\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[2, 9]]);\n      }))();\n    },\n    removeTeamManager: function removeTeamManager() {\n      var _this3 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var notificationStore, payload, response;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              notificationStore = (0,_Stores_NotificationStore__WEBPACK_IMPORTED_MODULE_4__.useNotificationStore)();\n              payload = {\n                user_id: _this3.selectedManagerId,\n                team_id: _this3.team.id,\n                team_slug: _this3.team.slug\n              };\n              _context3.prev = 2;\n              _context3.next = 5;\n              return axios.post(route('teams.removeTeamManager'), payload);\n            case 5:\n              response = _context3.sent;\n              if (response.status === 200) {\n                // Remove the manager from the team.managers array\n                _this3.team.managers = _this3.team.managers.filter(function (manager) {\n                  return manager.id !== _this3.selectedManagerId;\n                });\n                _this3.confirmManagerDialog = false;\n                notificationStore.setToastNotification(response.data.message, 'success');\n              } else {\n                _this3.confirmManagerDialog = false;\n                notificationStore.setToastNotification('Failed to remove manager from the team.', 'warning');\n              }\n              _context3.next = 14;\n              break;\n            case 9:\n              _context3.prev = 9;\n              _context3.t0 = _context3[\"catch\"](2);\n              console.error(_context3.t0);\n              _this3.confirmManagerDialog = false;\n              notificationStore.setToastNotification('An error occurred while removing the manager from the team.', 'error');\n            case 14:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, null, [[2, 9]]);\n      }))();\n    },\n    toggleGoLiveDisplay: function toggleGoLiveDisplay() {\n      this.goLiveDisplay = !this.goLiveDisplay;\n    },\n    fetchTeamMembers: function fetchTeamMembers() {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return axios.get('/team/team-members').then().error();\n            case 2:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4);\n      }))();\n    },\n    setCreators: function setCreators(creators) {\n      this.creators = creators;\n    },\n    updatePublicMessage: function updatePublicMessage(html) {\n      this.team.public_message = html;\n    }\n  },\n  getters: {\n    spotsRemaining: function spotsRemaining(state) {\n      if (!state.team.members) {\n        return state.team.totalSpots; // Assume no members if state.members is not defined\n      } else if (state.team.members) {\n        this.totalSpots = state.team.totalSpots;\n        return Math.max(state.team.totalSpots - state.team.members.length, 0);\n      }\n    },\n    membersCount: function membersCount(state) {\n      if (!state.team.members) {\n        return 0; // Assume no members if state.members is not defined\n      } else if (state.team.members) {\n        this.memberSpots = state.team.members.length;\n        return state.team.members.length;\n      }\n    },\n    membersCountDisplay: function membersCountDisplay(state) {\n      if (state.team.members) {\n        return state.team.members.length > 99 ? '99+' : state.team.members.length;\n      }\n    },\n    nextBroadcast: function nextBroadcast(state) {\n      var team = state.team;\n      if (!team.nextBroadcast || team.nextBroadcast.length === 0) {\n        return null;\n      }\n      var userStore = (0,_Stores_UserStore__WEBPACK_IMPORTED_MODULE_3__.useUserStore)();\n      var today = dayjs__WEBPACK_IMPORTED_MODULE_0___default()().tz(userStore.timezone);\n      return team.nextBroadcast.reduce(function (closest, broadcast) {\n        var broadcastDate = dayjs__WEBPACK_IMPORTED_MODULE_0___default()(broadcast.broadcastDate).tz(userStore.timezone);\n        if (!closest || Math.abs(broadcastDate - today) < Math.abs(dayjs__WEBPACK_IMPORTED_MODULE_0___default()(closest.broadcastDate).tz(userStore.timezone) - today)) {\n          return broadcast;\n        }\n        return closest;\n      }, null);\n    },\n    nextBroadcastIsOver: function nextBroadcastIsOver(state) {\n      var userStore = (0,_Stores_UserStore__WEBPACK_IMPORTED_MODULE_3__.useUserStore)();\n      var nowInUserTimezone = dayjs__WEBPACK_IMPORTED_MODULE_0___default()().utc().tz(userStore.timezone);\n      var broadcastEndTime = dayjs__WEBPACK_IMPORTED_MODULE_0___default()(_this4.nextBroadcast.broadcastDate).add(_this4.nextBroadcast.broadcastDetails.duration_minutes, 'minute').utc().tz(userStore.timezone);\n      return nowInUserTimezone.isAfter(broadcastEndTime);\n    },\n    sortedBroadcasts: function sortedBroadcasts(state) {\n      if (!state.team.nextBroadcast || state.team.nextBroadcast.length === 0) {\n        return [];\n      }\n      var userStore = (0,_Stores_UserStore__WEBPACK_IMPORTED_MODULE_3__.useUserStore)();\n      var today = dayjs__WEBPACK_IMPORTED_MODULE_0___default()().tz(userStore.timezone);\n      return state.team.nextBroadcast.filter(function (broadcast) {\n        return dayjs__WEBPACK_IMPORTED_MODULE_0___default()(broadcast.broadcastDate).tz(userStore.timezone).isAfter(today);\n      }).sort(function (a, b) {\n        return dayjs__WEBPACK_IMPORTED_MODULE_0___default()(a.broadcastDate).tz(userStore.timezone).diff(dayjs__WEBPACK_IMPORTED_MODULE_0___default()(b.broadcastDate).tz(userStore.timezone));\n      }).map(function (broadcast) {\n        return _objectSpread(_objectSpread({}, broadcast), {}, {\n          localDate: dayjs__WEBPACK_IMPORTED_MODULE_0___default()(broadcast.broadcastDate).tz(userStore.timezone).format()\n        });\n      });\n    },\n    futureBroadcasts: function futureBroadcasts(state) {\n      var nextBroadcast = this.nextBroadcast;\n      if (!state.team.nextBroadcast || state.team.nextBroadcast.length === 0) {\n        return [];\n      }\n      var userStore = (0,_Stores_UserStore__WEBPACK_IMPORTED_MODULE_3__.useUserStore)();\n      var today = dayjs__WEBPACK_IMPORTED_MODULE_0___default()().tz(userStore.timezone);\n      return state.team.nextBroadcast.filter(function (broadcast) {\n        return dayjs__WEBPACK_IMPORTED_MODULE_0___default()(broadcast.broadcastDate).tz(userStore.timezone).isAfter(today) && (!nextBroadcast || broadcast.broadcastDate !== nextBroadcast.broadcastDate);\n      }).sort(function (a, b) {\n        return dayjs__WEBPACK_IMPORTED_MODULE_0___default()(a.broadcastDate).tz(userStore.timezone).diff(dayjs__WEBPACK_IMPORTED_MODULE_0___default()(b.broadcastDate).tz(userStore.timezone));\n      }).map(function (broadcast) {\n        return _objectSpread(_objectSpread({}, broadcast), {}, {\n          localDate: dayjs__WEBPACK_IMPORTED_MODULE_0___default()(broadcast.broadcastDate).tz(userStore.timezone).format()\n        });\n      });\n    }\n  }\n});\n\n// Another option for declaring specific data to return:\n// let data = r.default;\n//\n// import('@/Json/team.json').then(r => {\n// this.$patch({\n//     name: data.name,\n//     spots: data.spots,\n//     members: data.members\n// });\n// });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Q0FBQzhGLEVBQUUsQ0FBQ2pGLFNBQVMsQ0FBQ25ELFFBQVEsQ0FBQyxDQUFDOEksT0FBTyxDQUFDWCxLQUFLLENBQUMsS0FDbkUsQ0FBQzdFLGFBQWEsSUFBSUksU0FBUyxDQUFDcEIsYUFBYSxLQUFLZ0IsYUFBYSxDQUFDaEIsYUFBYSxDQUFDO01BQUEsQ0FDL0UsQ0FBQyxDQUNBMEcsSUFBSSxDQUFDLFVBQUNoUSxDQUFDLEVBQUVpUSxDQUFDO1FBQUEsT0FBS25KLDRDQUFLLENBQUM5RyxDQUFDLENBQUNzSixhQUFhLENBQUMsQ0FBQzhGLEVBQUUsQ0FBQ2pGLFNBQVMsQ0FBQ25ELFFBQVEsQ0FBQyxDQUFDa0osSUFBSSxDQUFDcEosNENBQUssQ0FBQ21KLENBQUMsQ0FBQzNHLGFBQWEsQ0FBQyxDQUFDOEYsRUFBRSxDQUFDakYsU0FBUyxDQUFDbkQsUUFBUSxDQUFDLENBQUM7TUFBQSxFQUFDLENBQ2pIeUQsR0FBRyxDQUFDLFVBQUFDLFNBQVM7UUFBQSxPQUFBdEUsYUFBQSxDQUFBQSxhQUFBLEtBQ1BzRSxTQUFTO1VBQ1p5RixTQUFTLEVBQUVySiw0Q0FBSyxDQUFDNEQsU0FBUyxDQUFDcEIsYUFBYSxDQUFDLENBQUM4RixFQUFFLENBQUNqRixTQUFTLENBQUNuRCxRQUFRLENBQUMsQ0FBQ29KLE1BQU0sQ0FBQztRQUFDO01BQUEsQ0FDM0UsQ0FBQztJQUNYO0VBQ0o7QUFDSixDQUFDLENBQUM7O0FBR0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ub3R0dmJldGEvLi9yZXNvdXJjZXMvanMvU3RvcmVzL1RlYW1TdG9yZS5qcz9iNDQ5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGRlZmluZVN0b3JlIH0gZnJvbSAncGluaWEnXG5pbXBvcnQgZGF5anMgZnJvbSAnZGF5anMnXG5pbXBvcnQgdXRjIGZyb20gJ2RheWpzLXBsdWdpbi11dGMnXG5pbXBvcnQgdGltZXpvbmUgZnJvbSAnZGF5anMvcGx1Z2luL3RpbWV6b25lJ1xuaW1wb3J0IHsgdXNlVXNlclN0b3JlIH0gZnJvbSAnQC9TdG9yZXMvVXNlclN0b3JlJ1xuaW1wb3J0IHsgdXNlTm90aWZpY2F0aW9uU3RvcmUgfSBmcm9tICdAL1N0b3Jlcy9Ob3RpZmljYXRpb25TdG9yZSdcblxuZGF5anMuZXh0ZW5kKHV0YylcbmRheWpzLmV4dGVuZCh0aW1lem9uZSlcblxuY29uc3QgaW5pdGlhbFN0YXRlID0gKCkgPT4gKHtcbiAgICB0ZWFtOiB7fSxcbiAgICBzaG93czoge30sXG4gICAgY29udHJpYnV0b3JzOiB7fSxcbiAgICBtZW1iZXJzOiB7fSxcbiAgICBtYW5hZ2Vyczoge30sXG4gICAgdGVhbU93bmVyOiBbXSxcbiAgICB0ZWFtTGVhZGVyOiBbXSxcbiAgICBjYW46IHt9LFxuICAgIGlkOiAwLFxuICAgIG5hbWU6ICcnLFxuICAgIGRlc2NyaXB0aW9uOiAnJyxcbiAgICBzbHVnOiAnJyxcbiAgICB0b3RhbFNwb3RzOiAnJyxcbiAgICBtZW1iZXJTcG90czogJycsXG4gICAgYWN0aXZlU2hvdzogW10sXG4gICAgYWN0aXZlRXBpc29kZTogW10sXG4gICAgc2hvd01vZGFsOiBCb29sZWFuLFxuICAgIGNvbmZpcm1EaWFsb2c6IGZhbHNlLFxuICAgIGNvbmZpcm1NYW5hZ2VyRGlhbG9nOiBmYWxzZSxcbiAgICBzZWxlY3RlZE1hbmFnZXJOYW1lOiAnJyxcbiAgICBzZWxlY3RlZE1hbmFnZXJJZDogMCxcbiAgICBhZGRNYW5hZ2VyOiBmYWxzZSxcbiAgICByZW1vdmVNYW5hZ2VyOiBmYWxzZSxcbiAgICBkZWxldGVNZW1iZXJOYW1lOiAnJyxcbiAgICBkZWxldGVNZW1iZXJJZDogMCxcbiAgICBub3RlRWRpdDogMCxcbiAgICBub3RlOiAnJyxcbiAgICBub3RlS2V5OiAwLFxuICAgIHNhdmVOb3RlUHJvY2Vzc2luZzogQm9vbGVhbixcbiAgICAvLyBvbiB0aGUgc2hvdyBlcGlzb2RlIG1hbmFnZSBwYWdlXG4gICAgLy8gdHVybiBvbiB0aGUgZ28gbGl2ZSBkaXZcbiAgICBnb0xpdmVEaXNwbGF5OiBmYWxzZSxcbiAgICBvcGVuQ29tcG9uZW50OiAndGVhbVNob3dzJyxcbiAgICBuZXh0QnJvYWRjYXN0TG9hZGVkOiB7XG4gICAgICAgIHNjaGVkdWxlSW5kZXhJZDogbnVsbCxcbiAgICAgICAgYnJvYWRjYXN0RGF0ZTogbnVsbCxcbiAgICAgICAgYnJvYWRjYXN0RGV0YWlsczoge30sXG4gICAgICAgIHR5cGU6ICcnLFxuICAgICAgICBpbWFnZTogbnVsbCxcbiAgICAgICAgY2F0ZWdvcnk6IG51bGwsXG4gICAgICAgIHN1YkNhdGVnb3J5OiBudWxsLFxuICAgICAgICBzbHVnOiBudWxsLFxuICAgICAgICBuYW1lOiBudWxsLFxuICAgICAgICBkZXNjcmlwdGlvbjogbnVsbCxcbiAgICB9LFxuICAgIG5leHRCcm9hZGNhc3Rab29tTGluazogJycsXG59KVxuXG5leHBvcnQgY29uc3QgdXNlVGVhbVN0b3JlID0gZGVmaW5lU3RvcmUoJ3RlYW1TdG9yZScsIHtcbiAgICBzdGF0ZTogaW5pdGlhbFN0YXRlLFxuICAgIGFjdGlvbnM6IHtcbiAgICAgICAgcmVzZXQoKSB7XG4gICAgICAgICAgICAvLyBSZXNldCB0aGUgc3RvcmUgdG8gaXRzIG9yaWdpbmFsIHN0YXRlIChjbGVhciBhbGwgZGF0YSlcbiAgICAgICAgICAgIE9iamVjdC5hc3NpZ24odGhpcywgaW5pdGlhbFN0YXRlKCkpXG4gICAgICAgIH0sXG4gICAgICAgIC8vIGFzeW5jIGZpbGwoKSB7XG4gICAgICAgIC8vICAgICBsZXQgciA9IGF3YWl0IGltcG9ydCgnQC9Kc29uL3RlYW0uanNvbicpO1xuICAgICAgICAvLyAgICAgdGhpcy4kc3RhdGUgPSByLmRlZmF1bHQ7XG4gICAgICAgIC8vIH0sXG4gICAgICAgIGluaXRpYWxpemVUZWFtKHRlYW0pIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdpbmNvbWluZyB0ZWFtOiAnLCB0ZWFtKVxuICAgICAgICAgICAgY29uc3QgdXNlclN0b3JlID0gdXNlVXNlclN0b3JlKClcblxuICAgICAgICAgICAgLy8gRW5zdXJlIG5leHRCcm9hZGNhc3QgaXMgYW4gYXJyYXkgYW5kIGhhcyBhdCBsZWFzdCBvbmUgZWxlbWVudFxuICAgICAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkodGVhbS5uZXh0QnJvYWRjYXN0KSAmJiB0ZWFtLm5leHRCcm9hZGNhc3QubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgICAgIGNvbnN0IGZpcnN0QnJvYWRjYXN0ID0gdGVhbS5uZXh0QnJvYWRjYXN0WzBdXG5cbiAgICAgICAgICAgICAgICBpZiAoZmlyc3RCcm9hZGNhc3QuYnJvYWRjYXN0RGV0YWlscykge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLm5leHRCcm9hZGNhc3RMb2FkZWQgPSBmaXJzdEJyb2FkY2FzdFxuXG4gICAgICAgICAgICAgICAgICAgIGlmIChmaXJzdEJyb2FkY2FzdC5icm9hZGNhc3REZXRhaWxzLnpvb21MaW5rKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm5leHRCcm9hZGNhc3Rab29tTGluayA9IGZpcnN0QnJvYWRjYXN0LmJyb2FkY2FzdERldGFpbHMuem9vbUxpbmtcbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgIC8vIEVuc3VyZSBicm9hZGNhc3REZXRhaWxzIGlzIGFuIGFycmF5IGFuZCBoYXMgdGhlIHpvb21MaW5rIG9iamVjdFxuICAgICAgICAgICAgICAgICAgICAvLyB0aGlzLm5leHRCcm9hZGNhc3RMb2FkZWQuYnJvYWRjYXN0RGV0YWlscyA9IFtdXG4gICAgICAgICAgICAgICAgICAgIC8vIGlmICghQXJyYXkuaXNBcnJheSh0aGlzLm5leHRCcm9hZGNhc3RMb2FkZWQuYnJvYWRjYXN0RGV0YWlscykpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gICAgIHRoaXMubmV4dEJyb2FkY2FzdExvYWRlZC5icm9hZGNhc3REZXRhaWxzID0gW11cbiAgICAgICAgICAgICAgICAgICAgLy8gfVxuXG4gICAgICAgICAgICAgICAgICAgIC8vIGxldCB6b29tTGlua09iaiA9IHRoaXMubmV4dEJyb2FkY2FzdExvYWRlZC5icm9hZGNhc3REZXRhaWxzLmZpbmQoZGV0YWlsID0+IGRldGFpbC56b29tTGluayAhPT0gdW5kZWZpbmVkKVxuICAgICAgICAgICAgICAgICAgICAvLyBpZiAoIXpvb21MaW5rT2JqKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vICAgICB6b29tTGlua09iaiA9IHt6b29tTGluazogJyd9XG4gICAgICAgICAgICAgICAgICAgIC8vICAgICB0aGlzLm5leHRCcm9hZGNhc3RMb2FkZWQuYnJvYWRjYXN0RGV0YWlscy5wdXNoKHpvb21MaW5rT2JqKVxuICAgICAgICAgICAgICAgICAgICAvLyB9XG5cbiAgICAgICAgICAgICAgICAgICAgdGVhbS5uZXh0QnJvYWRjYXN0ID0gdGVhbS5uZXh0QnJvYWRjYXN0Lm1hcChicm9hZGNhc3QgPT4gKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC4uLmJyb2FkY2FzdCxcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyb2FkY2FzdERhdGU6IHVzZXJTdG9yZS5jb252ZXJ0VXRjVG9Vc2VyVGltZXpvbmUoYnJvYWRjYXN0LmJyb2FkY2FzdERhdGUpLFxuICAgICAgICAgICAgICAgICAgICB9KSlcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIC8vIEhhbmRsZSB0aGUgY2FzZSB3aGVyZSBuZXh0QnJvYWRjYXN0IGlzIG5vdCBhbiBhcnJheSBvciBpcyBlbXB0eVxuICAgICAgICAgICAgICAgIHRoaXMubmV4dEJyb2FkY2FzdExvYWRlZCA9IG51bGxcbiAgICAgICAgICAgICAgICB0aGlzLm5leHRCcm9hZGNhc3Rab29tTGluayA9IG51bGxcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdGhpcy50ZWFtID0gdGVhbSB8fCB7fVxuICAgICAgICB9LFxuICAgICAgICBpbml0aWFsaXplU2hvd3Moc2hvd3MpIHtcbiAgICAgICAgICAgIHRoaXMuc2hvd3MgPSBzaG93cyB8fCB7fVxuICAgICAgICB9LFxuICAgICAgICBpbml0aWFsaXplQ29udHJpYnV0b3JzKGNvbnRyaWJ1dG9ycykge1xuICAgICAgICAgICAgdGhpcy5jb250cmlidXRvcnMgPSBjb250cmlidXRvcnMgfHwge31cbiAgICAgICAgfSxcbiAgICAgICAgc2V0Q2FuKGNhbikge1xuICAgICAgICAgICAgdGhpcy5jYW4gPSBjYW4gfHwge31cbiAgICAgICAgfSxcbiAgICAgICAgc2V0QWN0aXZlVGVhbSh0ZWFtKSB7XG4gICAgICAgICAgICB0aGlzLnRlYW0uaWQgPSB0ZWFtLmlkXG4gICAgICAgICAgICB0aGlzLnRlYW0ubmFtZSA9IHRlYW0ubmFtZVxuICAgICAgICAgICAgdGhpcy50ZWFtLmRlc2NyaXB0aW9uID0gdGVhbS5kZXNjcmlwdGlvblxuICAgICAgICAgICAgdGhpcy50ZWFtLnNsdWcgPSB0ZWFtLnNsdWdcbiAgICAgICAgICAgIHRoaXMudGVhbS5tZW1iZXJzID0gdGVhbS5tZW1iZXJzXG4gICAgICAgICAgICB0aGlzLnRlYW0ubWFuYWdlcnMgPSB0ZWFtLm1hbmFnZXJzXG4gICAgICAgICAgICB0aGlzLnRlYW0udG90YWxTcG90cyA9IHRlYW0udG90YWxTcG90c1xuICAgICAgICAgICAgdGhpcy5tZW1iZXJTcG90cyA9IHRlYW0ubWVtYmVyU3BvdHNcbiAgICAgICAgfSxcbiAgICAgICAgc2V0QWN0aXZlU2hvdyhzaG93KSB7XG4gICAgICAgICAgICB0aGlzLmFjdGl2ZVNob3cgPSBzaG93XG4gICAgICAgIH0sXG4gICAgICAgIHNldEFjdGl2ZUVwaXNvZGUoZXBpc29kZSkge1xuICAgICAgICAgICAgdGhpcy5hY3RpdmVTaG93ID0gZXBpc29kZVxuICAgICAgICB9LFxuICAgICAgICBhZGRNZW1iZXIobWVtYmVyKSB7XG4gICAgICAgICAgICB0aGlzLnRlYW0ubWVtYmVycy5wdXNoKG1lbWJlcilcbiAgICAgICAgfSxcbiAgICAgICAgcmVtb3ZlTWVtYmVyKG1lbWJlcklkKSB7XG4gICAgICAgICAgICB0aGlzLnRlYW0ubWVtYmVycyA9IHRoaXMudGVhbS5tZW1iZXJzLmZpbHRlcihtZW1iZXIgPT4gbWVtYmVyLmlkICE9PSBtZW1iZXJJZClcbiAgICAgICAgfSxcbiAgICAgICAgdXBkYXRlQ3JlYXRvclRlYW1zKGNyZWF0b3JJZCwgdGVhbUlkLCByZW1vdmUgPSBmYWxzZSkge1xuICAgICAgICAgICAgY29uc3QgY3JlYXRvciA9IHRoaXMuY3JlYXRvcnMuZmluZChjID0+IGMuaWQgPT09IGNyZWF0b3JJZClcbiAgICAgICAgICAgIGlmIChjcmVhdG9yKSB7XG4gICAgICAgICAgICAgICAgaWYgKHJlbW92ZSkge1xuICAgICAgICAgICAgICAgICAgICBjcmVhdG9yLnRlYW1zID0gY3JlYXRvci50ZWFtcy5maWx0ZXIodGVhbSA9PiB0ZWFtLmlkICE9PSB0ZWFtSWQpXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgY3JlYXRvci50ZWFtcy5wdXNoKHtpZDogdGVhbUlkLCBpc19tYW5hZ2VyOiBmYWxzZX0pIC8vIEFkZCB0aGUgbmV3IHRlYW0gdG8gdGhlIGNyZWF0b3IncyB0ZWFtc1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgLy8gZ2V0Q3JlYXRvcnMoKSB7XG4gICAgICAgIC8vICAgICByb3V0ZXIucmVsb2FkKHsgb25seTogWydjcmVhdG9ycyddIH0pXG4gICAgICAgIC8vIH0sXG4gICAgICAgIGRlbGV0ZVRlYW1NZW1iZXJDYW5jZWwoKSB7XG4gICAgICAgICAgICB0aGlzLmNvbmZpcm1EaWFsb2cgPSBmYWxzZVxuICAgICAgICB9LFxuICAgICAgICBjb25maXJtVGVhbU1hbmFnZXJDYW5jZWwoKSB7XG4gICAgICAgICAgICB0aGlzLmNvbmZpcm1NYW5hZ2VyRGlhbG9nID0gZmFsc2VcbiAgICAgICAgfSxcbiAgICAgICAgLy8gbG9hZFRlYW1NZW1iZXJzKG1lbWJlcnMpe1xuICAgICAgICAvLyAgICAgdGhpcy5tZW1iZXJzID0gbWVtYmVycztcbiAgICAgICAgLy8gfVxuICAgICAgICAvLyBkZWxldGVUZWFtTWVtYmVyKCkge1xuICAgICAgICAvLyAgICAgcm91dGVyLnZpc2l0KHJvdXRlKCd0ZWFtcy5yZW1vdmVUZWFtTWVtYmVyJyksIHtcbiAgICAgICAgLy8gICAgICAgICBtZXRob2Q6ICdwb3N0JyxcbiAgICAgICAgLy8gICAgICAgICBkYXRhOiB7XG4gICAgICAgIC8vICAgICAgICAgICAgIHVzZXJfaWQ6IHRoaXMuZGVsZXRlTWVtYmVySWQsXG4gICAgICAgIC8vICAgICAgICAgICAgIHRlYW1faWQ6IHRoaXMuaWQsXG4gICAgICAgIC8vICAgICAgICAgICAgIHRlYW1fc2x1ZzogdGhpcy5zbHVnLFxuICAgICAgICAvLyAgICAgICAgIH0sXG4gICAgICAgIC8vICAgICB9KVxuICAgICAgICAvLyB9LFxuICAgICAgICBhc3luYyBkZWxldGVUZWFtTWVtYmVyKCkge1xuICAgICAgICAgICAgY29uc3Qgbm90aWZpY2F0aW9uU3RvcmUgPSB1c2VOb3RpZmljYXRpb25TdG9yZSgpXG4gICAgICAgICAgICBjb25zdCBwYXlsb2FkID0ge1xuICAgICAgICAgICAgICAgIHVzZXJfaWQ6IHRoaXMuZGVsZXRlTWVtYmVySWQsXG4gICAgICAgICAgICAgICAgdGVhbV9pZDogdGhpcy50ZWFtLmlkLFxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXhpb3MucG9zdChyb3V0ZSgndGVhbXMucmVtb3ZlVGVhbU1lbWJlcicpLCBwYXlsb2FkKVxuICAgICAgICAgICAgICAgIGlmIChyZXNwb25zZS5zdGF0dXMgPT09IDIwMCkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnJlbW92ZU1lbWJlcih0aGlzLmRlbGV0ZU1lbWJlcklkKVxuICAgICAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZUNyZWF0b3JUZWFtcyh0aGlzLmRlbGV0ZU1lbWJlcklkLCB0aGlzLnRlYW0uaWQsIHRydWUpIC8vIFJlbW92ZSB0aGUgdGVhbSBmcm9tIHRoZSBjcmVhdG9yJ3MgdGVhbXNcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jb25maXJtRGlhbG9nID0gZmFsc2VcbiAgICAgICAgICAgICAgICAgICAgbm90aWZpY2F0aW9uU3RvcmUuc2V0VG9hc3ROb3RpZmljYXRpb24ocmVzcG9uc2UuZGF0YS5tZXNzYWdlLCAnc3VjY2VzcycpXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jb25maXJtRGlhbG9nID0gZmFsc2VcbiAgICAgICAgICAgICAgICAgICAgbm90aWZpY2F0aW9uU3RvcmUuc2V0VG9hc3ROb3RpZmljYXRpb24oJ0ZhaWxlZCB0byByZW1vdmUgbWVtYmVyIGZyb20gdGhlIHRlYW0uJywgJ3dhcm5pbmcnKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihlcnJvcilcbiAgICAgICAgICAgICAgICB0aGlzLmNvbmZpcm1EaWFsb2cgPSBmYWxzZVxuICAgICAgICAgICAgICAgIG5vdGlmaWNhdGlvblN0b3JlLnNldFRvYXN0Tm90aWZpY2F0aW9uKCdBbiBlcnJvciBvY2N1cnJlZCB3aGlsZSByZW1vdmluZyB0aGUgbWVtYmVyIGZyb20gdGhlIHRlYW0uJywgJ2Vycm9yJylcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgYXN5bmMgYWRkVGVhbU1hbmFnZXIoKSB7XG4gICAgICAgICAgICBjb25zdCBub3RpZmljYXRpb25TdG9yZSA9IHVzZU5vdGlmaWNhdGlvblN0b3JlKClcbiAgICAgICAgICAgIGNvbnN0IHBheWxvYWQgPSB7XG4gICAgICAgICAgICAgICAgdXNlcl9pZDogdGhpcy5zZWxlY3RlZE1hbmFnZXJJZCxcbiAgICAgICAgICAgICAgICB0ZWFtX2lkOiB0aGlzLnRlYW0uaWQsXG4gICAgICAgICAgICAgICAgdGVhbV9zbHVnOiB0aGlzLnRlYW0uc2x1ZyxcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBheGlvcy5wb3N0KHJvdXRlKCd0ZWFtcy5hZGRUZWFtTWFuYWdlcicpLCBwYXlsb2FkKVxuICAgICAgICAgICAgICAgIGlmIChyZXNwb25zZS5zdGF0dXMgPT09IDIwMCkge1xuICAgICAgICAgICAgICAgICAgICAvLyBBZGQgYW55IGFkZGl0aW9uYWwgbG9naWMgaWYgbmVlZGVkLCBlLmcuLCB1cGRhdGluZyB0ZWFtIGRhdGEgaW4gdGhlIHN0b3JlXG4gICAgICAgICAgICAgICAgICAgIHRoaXMudGVhbS5tYW5hZ2Vycy5wdXNoKHJlc3BvbnNlLmRhdGEubWFuYWdlcik7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY29uZmlybU1hbmFnZXJEaWFsb2cgPSBmYWxzZVxuICAgICAgICAgICAgICAgICAgICBub3RpZmljYXRpb25TdG9yZS5zZXRUb2FzdE5vdGlmaWNhdGlvbihyZXNwb25zZS5kYXRhLm1lc3NhZ2UsICdzdWNjZXNzJylcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmNvbmZpcm1NYW5hZ2VyRGlhbG9nID0gZmFsc2VcbiAgICAgICAgICAgICAgICAgICAgbm90aWZpY2F0aW9uU3RvcmUuc2V0VG9hc3ROb3RpZmljYXRpb24oJ0ZhaWxlZCB0byBhZGQgbWFuYWdlciB0byB0aGUgdGVhbS4nLCAnd2FybmluZycpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKGVycm9yKVxuICAgICAgICAgICAgICAgIHRoaXMuY29uZmlybU1hbmFnZXJEaWFsb2cgPSBmYWxzZVxuICAgICAgICAgICAgICAgIG5vdGlmaWNhdGlvblN0b3JlLnNldFRvYXN0Tm90aWZpY2F0aW9uKCdBbiBlcnJvciBvY2N1cnJlZCB3aGlsZSBhZGRpbmcgdGhlIG1hbmFnZXIgdG8gdGhlIHRlYW0uJywgJ2Vycm9yJylcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgYXN5bmMgcmVtb3ZlVGVhbU1hbmFnZXIoKSB7XG4gICAgICAgICAgICBjb25zdCBub3RpZmljYXRpb25TdG9yZSA9IHVzZU5vdGlmaWNhdGlvblN0b3JlKClcbiAgICAgICAgICAgIGNvbnN0IHBheWxvYWQgPSB7XG4gICAgICAgICAgICAgICAgdXNlcl9pZDogdGhpcy5zZWxlY3RlZE1hbmFnZXJJZCxcbiAgICAgICAgICAgICAgICB0ZWFtX2lkOiB0aGlzLnRlYW0uaWQsXG4gICAgICAgICAgICAgICAgdGVhbV9zbHVnOiB0aGlzLnRlYW0uc2x1ZyxcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGF4aW9zLnBvc3Qocm91dGUoJ3RlYW1zLnJlbW92ZVRlYW1NYW5hZ2VyJyksIHBheWxvYWQpXG4gICAgICAgICAgICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PT0gMjAwKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIFJlbW92ZSB0aGUgbWFuYWdlciBmcm9tIHRoZSB0ZWFtLm1hbmFnZXJzIGFycmF5XG4gICAgICAgICAgICAgICAgICAgIHRoaXMudGVhbS5tYW5hZ2VycyA9IHRoaXMudGVhbS5tYW5hZ2Vycy5maWx0ZXIobWFuYWdlciA9PiBtYW5hZ2VyLmlkICE9PSB0aGlzLnNlbGVjdGVkTWFuYWdlcklkKVxuICAgICAgICAgICAgICAgICAgICB0aGlzLmNvbmZpcm1NYW5hZ2VyRGlhbG9nID0gZmFsc2VcbiAgICAgICAgICAgICAgICAgICAgbm90aWZpY2F0aW9uU3RvcmUuc2V0VG9hc3ROb3RpZmljYXRpb24ocmVzcG9uc2UuZGF0YS5tZXNzYWdlLCAnc3VjY2VzcycpXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jb25maXJtTWFuYWdlckRpYWxvZyA9IGZhbHNlXG4gICAgICAgICAgICAgICAgICAgIG5vdGlmaWNhdGlvblN0b3JlLnNldFRvYXN0Tm90aWZpY2F0aW9uKCdGYWlsZWQgdG8gcmVtb3ZlIG1hbmFnZXIgZnJvbSB0aGUgdGVhbS4nLCAnd2FybmluZycpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKGVycm9yKVxuICAgICAgICAgICAgICAgIHRoaXMuY29uZmlybU1hbmFnZXJEaWFsb2cgPSBmYWxzZVxuICAgICAgICAgICAgICAgIG5vdGlmaWNhdGlvblN0b3JlLnNldFRvYXN0Tm90aWZpY2F0aW9uKCdBbiBlcnJvciBvY2N1cnJlZCB3aGlsZSByZW1vdmluZyB0aGUgbWFuYWdlciBmcm9tIHRoZSB0ZWFtLicsICdlcnJvcicpXG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHRvZ2dsZUdvTGl2ZURpc3BsYXkoKSB7XG4gICAgICAgICAgICB0aGlzLmdvTGl2ZURpc3BsYXkgPSAhdGhpcy5nb0xpdmVEaXNwbGF5XG4gICAgICAgIH0sXG4gICAgICAgIGFzeW5jIGZldGNoVGVhbU1lbWJlcnMoKSB7XG4gICAgICAgICAgICBhd2FpdCBheGlvcy5nZXQoJy90ZWFtL3RlYW0tbWVtYmVycycpLnRoZW4oKS5lcnJvcigpXG4gICAgICAgIH0sXG4gICAgICAgIHNldENyZWF0b3JzKGNyZWF0b3JzKSB7XG4gICAgICAgICAgICB0aGlzLmNyZWF0b3JzID0gY3JlYXRvcnNcbiAgICAgICAgfSxcbiAgICAgICAgdXBkYXRlUHVibGljTWVzc2FnZShodG1sKSB7XG4gICAgICAgICAgICB0aGlzLnRlYW0ucHVibGljX21lc3NhZ2UgPSBodG1sXG4gICAgICAgIH0sXG4gICAgfSxcblxuICAgIGdldHRlcnM6IHtcbiAgICAgICAgc3BvdHNSZW1haW5pbmcoc3RhdGUpIHtcbiAgICAgICAgICAgIGlmICghc3RhdGUudGVhbS5tZW1iZXJzKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHN0YXRlLnRlYW0udG90YWxTcG90cyAvLyBBc3N1bWUgbm8gbWVtYmVycyBpZiBzdGF0ZS5tZW1iZXJzIGlzIG5vdCBkZWZpbmVkXG4gICAgICAgICAgICB9IGVsc2UgaWYgKHN0YXRlLnRlYW0ubWVtYmVycykge1xuICAgICAgICAgICAgICAgIHRoaXMudG90YWxTcG90cyA9IHN0YXRlLnRlYW0udG90YWxTcG90c1xuICAgICAgICAgICAgICAgIHJldHVybiBNYXRoLm1heChzdGF0ZS50ZWFtLnRvdGFsU3BvdHMgLSBzdGF0ZS50ZWFtLm1lbWJlcnMubGVuZ3RoLCAwKVxuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBtZW1iZXJzQ291bnQoc3RhdGUpIHtcbiAgICAgICAgICAgIGlmICghc3RhdGUudGVhbS5tZW1iZXJzKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIDAgLy8gQXNzdW1lIG5vIG1lbWJlcnMgaWYgc3RhdGUubWVtYmVycyBpcyBub3QgZGVmaW5lZFxuICAgICAgICAgICAgfSBlbHNlIGlmIChzdGF0ZS50ZWFtLm1lbWJlcnMpIHtcbiAgICAgICAgICAgICAgICB0aGlzLm1lbWJlclNwb3RzID0gc3RhdGUudGVhbS5tZW1iZXJzLmxlbmd0aFxuICAgICAgICAgICAgICAgIHJldHVybiBzdGF0ZS50ZWFtLm1lbWJlcnMubGVuZ3RoXG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIG1lbWJlcnNDb3VudERpc3BsYXkoc3RhdGUpIHtcbiAgICAgICAgICAgIGlmIChzdGF0ZS50ZWFtLm1lbWJlcnMpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gc3RhdGUudGVhbS5tZW1iZXJzLmxlbmd0aCA+IDk5ID8gJzk5KycgOiBzdGF0ZS50ZWFtLm1lbWJlcnMubGVuZ3RoXG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIG5leHRCcm9hZGNhc3Qoc3RhdGUpIHtcbiAgICAgICAgICAgIGNvbnN0IHt0ZWFtfSA9IHN0YXRlXG4gICAgICAgICAgICBpZiAoIXRlYW0ubmV4dEJyb2FkY2FzdCB8fCB0ZWFtLm5leHRCcm9hZGNhc3QubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG51bGxcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgY29uc3QgdXNlclN0b3JlID0gdXNlVXNlclN0b3JlKClcbiAgICAgICAgICAgIGNvbnN0IHRvZGF5ID0gZGF5anMoKS50eih1c2VyU3RvcmUudGltZXpvbmUpXG5cbiAgICAgICAgICAgIHJldHVybiB0ZWFtLm5leHRCcm9hZGNhc3QucmVkdWNlKChjbG9zZXN0LCBicm9hZGNhc3QpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCBicm9hZGNhc3REYXRlID0gZGF5anMoYnJvYWRjYXN0LmJyb2FkY2FzdERhdGUpLnR6KHVzZXJTdG9yZS50aW1lem9uZSlcbiAgICAgICAgICAgICAgICBpZiAoIWNsb3Nlc3QgfHwgTWF0aC5hYnMoYnJvYWRjYXN0RGF0ZSAtIHRvZGF5KSA8IE1hdGguYWJzKGRheWpzKGNsb3Nlc3QuYnJvYWRjYXN0RGF0ZSkudHoodXNlclN0b3JlLnRpbWV6b25lKSAtIHRvZGF5KSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gYnJvYWRjYXN0XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBjbG9zZXN0XG4gICAgICAgICAgICB9LCBudWxsKVxuICAgICAgICB9LFxuICAgICAgICBuZXh0QnJvYWRjYXN0SXNPdmVyOiAoc3RhdGUpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHVzZXJTdG9yZSA9IHVzZVVzZXJTdG9yZSgpO1xuICAgICAgICAgICAgY29uc3Qgbm93SW5Vc2VyVGltZXpvbmUgPSBkYXlqcygpLnV0YygpLnR6KHVzZXJTdG9yZS50aW1lem9uZSk7XG4gICAgICAgICAgICBjb25zdCBicm9hZGNhc3RFbmRUaW1lID0gZGF5anModGhpcy5uZXh0QnJvYWRjYXN0LmJyb2FkY2FzdERhdGUpXG4gICAgICAgICAgICAgICAgLmFkZCh0aGlzLm5leHRCcm9hZGNhc3QuYnJvYWRjYXN0RGV0YWlscy5kdXJhdGlvbl9taW51dGVzLCAnbWludXRlJylcbiAgICAgICAgICAgICAgICAudXRjKClcbiAgICAgICAgICAgICAgICAudHoodXNlclN0b3JlLnRpbWV6b25lKTtcblxuICAgICAgICAgICAgcmV0dXJuIG5vd0luVXNlclRpbWV6b25lLmlzQWZ0ZXIoYnJvYWRjYXN0RW5kVGltZSk7XG4gICAgICAgIH0sXG4gICAgICAgIHNvcnRlZEJyb2FkY2FzdHMoc3RhdGUpIHtcbiAgICAgICAgICAgIGlmICghc3RhdGUudGVhbS5uZXh0QnJvYWRjYXN0IHx8IHN0YXRlLnRlYW0ubmV4dEJyb2FkY2FzdC5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gW11cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgY29uc3QgdXNlclN0b3JlID0gdXNlVXNlclN0b3JlKClcbiAgICAgICAgICAgIGNvbnN0IHRvZGF5ID0gZGF5anMoKS50eih1c2VyU3RvcmUudGltZXpvbmUpXG5cbiAgICAgICAgICAgIHJldHVybiBzdGF0ZS50ZWFtLm5leHRCcm9hZGNhc3RcbiAgICAgICAgICAgICAgICAuZmlsdGVyKGJyb2FkY2FzdCA9PiBkYXlqcyhicm9hZGNhc3QuYnJvYWRjYXN0RGF0ZSkudHoodXNlclN0b3JlLnRpbWV6b25lKS5pc0FmdGVyKHRvZGF5KSlcbiAgICAgICAgICAgICAgICAuc29ydCgoYSwgYikgPT4gZGF5anMoYS5icm9hZGNhc3REYXRlKS50eih1c2VyU3RvcmUudGltZXpvbmUpLmRpZmYoZGF5anMoYi5icm9hZGNhc3REYXRlKS50eih1c2VyU3RvcmUudGltZXpvbmUpKSlcbiAgICAgICAgICAgICAgICAubWFwKGJyb2FkY2FzdCA9PiAoe1xuICAgICAgICAgICAgICAgICAgICAuLi5icm9hZGNhc3QsXG4gICAgICAgICAgICAgICAgICAgIGxvY2FsRGF0ZTogZGF5anMoYnJvYWRjYXN0LmJyb2FkY2FzdERhdGUpLnR6KHVzZXJTdG9yZS50aW1lem9uZSkuZm9ybWF0KCksXG4gICAgICAgICAgICAgICAgfSkpXG4gICAgICAgIH0sXG4gICAgICAgIGZ1dHVyZUJyb2FkY2FzdHMoc3RhdGUpIHtcbiAgICAgICAgICAgIGNvbnN0IG5leHRCcm9hZGNhc3QgPSB0aGlzLm5leHRCcm9hZGNhc3RcbiAgICAgICAgICAgIGlmICghc3RhdGUudGVhbS5uZXh0QnJvYWRjYXN0IHx8IHN0YXRlLnRlYW0ubmV4dEJyb2FkY2FzdC5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gW11cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgY29uc3QgdXNlclN0b3JlID0gdXNlVXNlclN0b3JlKClcbiAgICAgICAgICAgIGNvbnN0IHRvZGF5ID0gZGF5anMoKS50eih1c2VyU3RvcmUudGltZXpvbmUpXG5cbiAgICAgICAgICAgIHJldHVybiBzdGF0ZS50ZWFtLm5leHRCcm9hZGNhc3RcbiAgICAgICAgICAgICAgICAuZmlsdGVyKGJyb2FkY2FzdCA9PlxuICAgICAgICAgICAgICAgICAgICBkYXlqcyhicm9hZGNhc3QuYnJvYWRjYXN0RGF0ZSkudHoodXNlclN0b3JlLnRpbWV6b25lKS5pc0FmdGVyKHRvZGF5KSAmJlxuICAgICAgICAgICAgICAgICAgICAoIW5leHRCcm9hZGNhc3QgfHwgYnJvYWRjYXN0LmJyb2FkY2FzdERhdGUgIT09IG5leHRCcm9hZGNhc3QuYnJvYWRjYXN0RGF0ZSksXG4gICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgIC5zb3J0KChhLCBiKSA9PiBkYXlqcyhhLmJyb2FkY2FzdERhdGUpLnR6KHVzZXJTdG9yZS50aW1lem9uZSkuZGlmZihkYXlqcyhiLmJyb2FkY2FzdERhdGUpLnR6KHVzZXJTdG9yZS50aW1lem9uZSkpKVxuICAgICAgICAgICAgICAgIC5tYXAoYnJvYWRjYXN0ID0+ICh7XG4gICAgICAgICAgICAgICAgICAgIC4uLmJyb2FkY2FzdCxcbiAgICAgICAgICAgICAgICAgICAgbG9jYWxEYXRlOiBkYXlqcyhicm9hZGNhc3QuYnJvYWRjYXN0RGF0ZSkudHoodXNlclN0b3JlLnRpbWV6b25lKS5mb3JtYXQoKSxcbiAgICAgICAgICAgICAgICB9KSlcbiAgICAgICAgfSxcbiAgICB9LFxufSlcblxuXG4vLyBBbm90aGVyIG9wdGlvbiBmb3IgZGVjbGFyaW5nIHNwZWNpZmljIGRhdGEgdG8gcmV0dXJuOlxuLy8gbGV0IGRhdGEgPSByLmRlZmF1bHQ7XG4vL1xuLy8gaW1wb3J0KCdAL0pzb24vdGVhbS5qc29uJykudGhlbihyID0+IHtcbi8vIHRoaXMuJHBhdGNoKHtcbi8vICAgICBuYW1lOiBkYXRhLm5hbWUsXG4vLyAgICAgc3BvdHM6IGRhdGEuc3BvdHMsXG4vLyAgICAgbWVtYmVyczogZGF0YS5tZW1iZXJzXG4vLyB9KTtcbi8vIH0pO1xuIl0sIm5hbWVzIjpbIl9yZWdlbmVyYXRvclJ1bnRpbWUiLCJlIiwidCIsInIiLCJPYmplY3QiLCJwcm90b3R5cGUiLCJuIiwiaGFzT3duUHJvcGVydHkiLCJvIiwiZGVmaW5lUHJvcGVydHkiLCJ2YWx1ZSIsImkiLCJTeW1ib2wiLCJhIiwiaXRlcmF0b3IiLCJjIiwiYXN5bmNJdGVyYXRvciIsInUiLCJ0b1N0cmluZ1RhZyIsImRlZmluZSIsImVudW1lcmFibGUiLCJjb25maWd1cmFibGUiLCJ3cml0YWJsZSIsIndyYXAiLCJHZW5lcmF0b3IiLCJjcmVhdGUiLCJDb250ZXh0IiwibWFrZUludm9rZU1ldGhvZCIsInRyeUNhdGNoIiwidHlwZSIsImFyZyIsImNhbGwiLCJoIiwibCIsImYiLCJzIiwieSIsIkdlbmVyYXRvckZ1bmN0aW9uIiwiR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGUiLCJwIiwiZCIsImdldFByb3RvdHlwZU9mIiwidiIsInZhbHVlcyIsImciLCJkZWZpbmVJdGVyYXRvck1ldGhvZHMiLCJmb3JFYWNoIiwiX2ludm9rZSIsIkFzeW5jSXRlcmF0b3IiLCJpbnZva2UiLCJfdHlwZW9mIiwicmVzb2x2ZSIsIl9fYXdhaXQiLCJ0aGVuIiwiY2FsbEludm9rZVdpdGhNZXRob2RBbmRBcmciLCJFcnJvciIsImRvbmUiLCJtZXRob2QiLCJkZWxlZ2F0ZSIsIm1heWJlSW52b2tlRGVsZWdhdGUiLCJzZW50IiwiX3NlbnQiLCJkaXNwYXRjaEV4Y2VwdGlvbiIsImFicnVwdCIsIlR5cGVFcnJvciIsInJlc3VsdE5hbWUiLCJuZXh0IiwibmV4dExvYyIsInB1c2hUcnlFbnRyeSIsInRyeUxvYyIsImNhdGNoTG9jIiwiZmluYWxseUxvYyIsImFmdGVyTG9jIiwidHJ5RW50cmllcyIsInB1c2giLCJyZXNldFRyeUVudHJ5IiwiY29tcGxldGlvbiIsInJlc2V0IiwiaXNOYU4iLCJsZW5ndGgiLCJkaXNwbGF5TmFtZSIsImlzR2VuZXJhdG9yRnVuY3Rpb24iLCJjb25zdHJ1Y3RvciIsIm5hbWUiLCJtYXJrIiwic2V0UHJvdG90eXBlT2YiLCJfX3Byb3RvX18iLCJhd3JhcCIsImFzeW5jIiwiUHJvbWlzZSIsImtleXMiLCJyZXZlcnNlIiwicG9wIiwicHJldiIsImNoYXJBdCIsInNsaWNlIiwic3RvcCIsInJ2YWwiLCJoYW5kbGUiLCJjb21wbGV0ZSIsImZpbmlzaCIsIl9jYXRjaCIsImRlbGVnYXRlWWllbGQiLCJhc3luY0dlbmVyYXRvclN0ZXAiLCJfYXN5bmNUb0dlbmVyYXRvciIsImFyZ3VtZW50cyIsImFwcGx5IiwiX25leHQiLCJfdGhyb3ciLCJvd25LZXlzIiwiZ2V0T3duUHJvcGVydHlTeW1ib2xzIiwiZmlsdGVyIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiX29iamVjdFNwcmVhZCIsIl9kZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvcnMiLCJkZWZpbmVQcm9wZXJ0aWVzIiwiX3RvUHJvcGVydHlLZXkiLCJfdG9QcmltaXRpdmUiLCJ0b1ByaW1pdGl2ZSIsIlN0cmluZyIsIk51bWJlciIsImRlZmluZVN0b3JlIiwiZGF5anMiLCJ1dGMiLCJ0aW1lem9uZSIsInVzZVVzZXJTdG9yZSIsInVzZU5vdGlmaWNhdGlvblN0b3JlIiwiZXh0ZW5kIiwiaW5pdGlhbFN0YXRlIiwidGVhbSIsInNob3dzIiwiY29udHJpYnV0b3JzIiwibWVtYmVycyIsIm1hbmFnZXJzIiwidGVhbU93bmVyIiwidGVhbUxlYWRlciIsImNhbiIsImlkIiwiZGVzY3JpcHRpb24iLCJzbHVnIiwidG90YWxTcG90cyIsIm1lbWJlclNwb3RzIiwiYWN0aXZlU2hvdyIsImFjdGl2ZUVwaXNvZGUiLCJzaG93TW9kYWwiLCJCb29sZWFuIiwiY29uZmlybURpYWxvZyIsImNvbmZpcm1NYW5hZ2VyRGlhbG9nIiwic2VsZWN0ZWRNYW5hZ2VyTmFtZSIsInNlbGVjdGVkTWFuYWdlcklkIiwiYWRkTWFuYWdlciIsInJlbW92ZU1hbmFnZXIiLCJkZWxldGVNZW1iZXJOYW1lIiwiZGVsZXRlTWVtYmVySWQiLCJub3RlRWRpdCIsIm5vdGUiLCJub3RlS2V5Iiwic2F2ZU5vdGVQcm9jZXNzaW5nIiwiZ29MaXZlRGlzcGxheSIsIm9wZW5Db21wb25lbnQiLCJuZXh0QnJvYWRjYXN0TG9hZGVkIiwic2NoZWR1bGVJbmRleElkIiwiYnJvYWRjYXN0RGF0ZSIsImJyb2FkY2FzdERldGFpbHMiLCJpbWFnZSIsImNhdGVnb3J5Iiwic3ViQ2F0ZWdvcnkiLCJuZXh0QnJvYWRjYXN0Wm9vbUxpbmsiLCJ1c2VUZWFtU3RvcmUiLCJzdGF0ZSIsImFjdGlvbnMiLCJhc3NpZ24iLCJpbml0aWFsaXplVGVhbSIsImNvbnNvbGUiLCJsb2ciLCJ1c2VyU3RvcmUiLCJBcnJheSIsImlzQXJyYXkiLCJuZXh0QnJvYWRjYXN0IiwiZmlyc3RCcm9hZGNhc3QiLCJ6b29tTGluayIsIm1hcCIsImJyb2FkY2FzdCIsImNvbnZlcnRVdGNUb1VzZXJUaW1lem9uZSIsImluaXRpYWxpemVTaG93cyIsImluaXRpYWxpemVDb250cmlidXRvcnMiLCJzZXRDYW4iLCJzZXRBY3RpdmVUZWFtIiwic2V0QWN0aXZlU2hvdyIsInNob3ciLCJzZXRBY3RpdmVFcGlzb2RlIiwiZXBpc29kZSIsImFkZE1lbWJlciIsIm1lbWJlciIsInJlbW92ZU1lbWJlciIsIm1lbWJlcklkIiwidXBkYXRlQ3JlYXRvclRlYW1zIiwiY3JlYXRvcklkIiwidGVhbUlkIiwicmVtb3ZlIiwidW5kZWZpbmVkIiwiY3JlYXRvciIsImNyZWF0b3JzIiwiZmluZCIsInRlYW1zIiwiaXNfbWFuYWdlciIsImRlbGV0ZVRlYW1NZW1iZXJDYW5jZWwiLCJjb25maXJtVGVhbU1hbmFnZXJDYW5jZWwiLCJkZWxldGVUZWFtTWVtYmVyIiwiX3RoaXMiLCJfY2FsbGVlIiwibm90aWZpY2F0aW9uU3RvcmUiLCJwYXlsb2FkIiwicmVzcG9uc2UiLCJfY2FsbGVlJCIsIl9jb250ZXh0IiwidXNlcl9pZCIsInRlYW1faWQiLCJheGlvcyIsInBvc3QiLCJyb3V0ZSIsInN0YXR1cyIsInNldFRvYXN0Tm90aWZpY2F0aW9uIiwiZGF0YSIsIm1lc3NhZ2UiLCJ0MCIsImVycm9yIiwiYWRkVGVhbU1hbmFnZXIiLCJfdGhpczIiLCJfY2FsbGVlMiIsIl9jYWxsZWUyJCIsIl9jb250ZXh0MiIsInRlYW1fc2x1ZyIsIm1hbmFnZXIiLCJyZW1vdmVUZWFtTWFuYWdlciIsIl90aGlzMyIsIl9jYWxsZWUzIiwiX2NhbGxlZTMkIiwiX2NvbnRleHQzIiwidG9nZ2xlR29MaXZlRGlzcGxheSIsImZldGNoVGVhbU1lbWJlcnMiLCJfY2FsbGVlNCIsIl9jYWxsZWU0JCIsIl9jb250ZXh0NCIsImdldCIsInNldENyZWF0b3JzIiwidXBkYXRlUHVibGljTWVzc2FnZSIsImh0bWwiLCJwdWJsaWNfbWVzc2FnZSIsImdldHRlcnMiLCJzcG90c1JlbWFpbmluZyIsIk1hdGgiLCJtYXgiLCJtZW1iZXJzQ291bnQiLCJtZW1iZXJzQ291bnREaXNwbGF5IiwidG9kYXkiLCJ0eiIsInJlZHVjZSIsImNsb3Nlc3QiLCJhYnMiLCJuZXh0QnJvYWRjYXN0SXNPdmVyIiwibm93SW5Vc2VyVGltZXpvbmUiLCJicm9hZGNhc3RFbmRUaW1lIiwiX3RoaXM0IiwiYWRkIiwiZHVyYXRpb25fbWludXRlcyIsImlzQWZ0ZXIiLCJzb3J0ZWRCcm9hZGNhc3RzIiwic29ydCIsImIiLCJkaWZmIiwibG9jYWxEYXRlIiwiZm9ybWF0IiwiZnV0dXJlQnJvYWRjYXN0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./resources/js/Stores/TeamStore.js\n");

/***/ })

}]);
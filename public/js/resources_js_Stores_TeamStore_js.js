"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk"] = self["webpackChunk"] || []).push([["resources_js_Stores_TeamStore_js"],{

/***/ "./resources/js/Stores/TeamStore.js":
/*!******************************************!*\
  !*** ./resources/js/Stores/TeamStore.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useTeamStore: () => (/* binding */ useTeamStore)\n/* harmony export */ });\n/* harmony import */ var pinia__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! pinia */ \"./node_modules/pinia/dist/pinia.mjs\");\n/* harmony import */ var dayjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! dayjs */ \"./node_modules/dayjs/dayjs.min.js\");\n/* harmony import */ var dayjs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(dayjs__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var dayjs_plugin_utc__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! dayjs-plugin-utc */ \"./node_modules/dayjs-plugin-utc/dist/dayjs-plugin-utc.min.js\");\n/* harmony import */ var dayjs_plugin_utc__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(dayjs_plugin_utc__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var dayjs_plugin_timezone__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! dayjs/plugin/timezone */ \"./node_modules/dayjs/plugin/timezone.js\");\n/* harmony import */ var dayjs_plugin_timezone__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(dayjs_plugin_timezone__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Stores_UserStore__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/Stores/UserStore */ \"./resources/js/Stores/UserStore.js\");\n/* harmony import */ var _Stores_NotificationStore__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/Stores/NotificationStore */ \"./resources/js/Stores/NotificationStore.js\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n\n\n\n\n\n\ndayjs__WEBPACK_IMPORTED_MODULE_0___default().extend((dayjs_plugin_utc__WEBPACK_IMPORTED_MODULE_1___default()));\ndayjs__WEBPACK_IMPORTED_MODULE_0___default().extend((dayjs_plugin_timezone__WEBPACK_IMPORTED_MODULE_2___default()));\nvar initialState = function initialState() {\n  return {\n    team: {},\n    shows: {},\n    contributors: {},\n    members: {},\n    managers: {},\n    teamOwner: [],\n    teamLeader: [],\n    can: {},\n    id: 0,\n    name: '',\n    description: '',\n    slug: '',\n    totalSpots: '',\n    memberSpots: '',\n    activeShow: [],\n    activeEpisode: [],\n    showModal: Boolean,\n    confirmDialog: false,\n    confirmManagerDialog: false,\n    selectedManagerName: '',\n    selectedManagerId: 0,\n    addManager: false,\n    removeManager: false,\n    deleteMemberName: '',\n    deleteMemberId: 0,\n    noteEdit: 0,\n    note: '',\n    noteKey: 0,\n    saveNoteProcessing: Boolean,\n    // on the show episode manage page\n    // turn on the go live div\n    goLiveDisplay: false,\n    openComponent: 'teamShows',\n    nextBroadcastLoaded: {\n      scheduleIndexId: null,\n      broadcastDate: null,\n      broadcastDetails: {},\n      type: '',\n      image: null,\n      category: null,\n      subCategory: null,\n      slug: null,\n      name: null,\n      description: null\n    },\n    nextBroadcastZoomLink: ''\n  };\n};\nvar useTeamStore = (0,pinia__WEBPACK_IMPORTED_MODULE_5__.defineStore)('teamStore', {\n  state: initialState,\n  actions: {\n    reset: function reset() {\n      // Reset the store to its original state (clear all data)\n      Object.assign(this, initialState());\n    },\n    // async fill() {\n    //     let r = await import('@/Json/team.json');\n    //     this.$state = r.default;\n    // },\n    initializeTeam: function initializeTeam(team) {\n      console.log('incoming team: ', team);\n      var userStore = (0,_Stores_UserStore__WEBPACK_IMPORTED_MODULE_3__.useUserStore)();\n\n      // Ensure nextBroadcast is an array and has at least one element\n      if (Array.isArray(team.nextBroadcast) && team.nextBroadcast.length > 0) {\n        var firstBroadcast = team.nextBroadcast[0];\n        if (firstBroadcast.broadcastDetails) {\n          this.nextBroadcastLoaded = firstBroadcast;\n          if (firstBroadcast.broadcastDetails.zoomLink) {\n            this.nextBroadcastZoomLink = firstBroadcast.broadcastDetails.zoomLink;\n          }\n\n          // Ensure broadcastDetails is an array and has the zoomLink object\n          // this.nextBroadcastLoaded.broadcastDetails = []\n          // if (!Array.isArray(this.nextBroadcastLoaded.broadcastDetails)) {\n          //     this.nextBroadcastLoaded.broadcastDetails = []\n          // }\n\n          // let zoomLinkObj = this.nextBroadcastLoaded.broadcastDetails.find(detail => detail.zoomLink !== undefined)\n          // if (!zoomLinkObj) {\n          //     zoomLinkObj = {zoomLink: ''}\n          //     this.nextBroadcastLoaded.broadcastDetails.push(zoomLinkObj)\n          // }\n\n          team.nextBroadcast = team.nextBroadcast.map(function (broadcast) {\n            return _objectSpread(_objectSpread({}, broadcast), {}, {\n              broadcastDate: userStore.convertUtcToUserTimezone(broadcast.broadcastDate)\n            });\n          });\n        }\n      } else {\n        // Handle the case where nextBroadcast is not an array or is empty\n        this.nextBroadcastLoaded = null;\n        this.nextBroadcastZoomLink = null;\n      }\n      this.team = team || {};\n    },\n    initializeShows: function initializeShows(shows) {\n      this.shows = shows || {};\n    },\n    initializeContributors: function initializeContributors(contributors) {\n      this.contributors = contributors || {};\n    },\n    setCan: function setCan(can) {\n      this.can = can || {};\n    },\n    setActiveTeam: function setActiveTeam(team) {\n      this.team.id = team.id;\n      this.team.name = team.name;\n      this.team.description = team.description;\n      this.team.slug = team.slug;\n      this.team.members = team.members;\n      this.team.managers = team.managers;\n      this.team.totalSpots = team.totalSpots;\n      this.memberSpots = team.memberSpots;\n    },\n    setActiveShow: function setActiveShow(show) {\n      this.activeShow = show;\n    },\n    setActiveEpisode: function setActiveEpisode(episode) {\n      this.activeShow = episode;\n    },\n    addMember: function addMember(member) {\n      this.team.members.push(member);\n    },\n    removeMember: function removeMember(memberId) {\n      this.team.members = this.team.members.filter(function (member) {\n        return member.id !== memberId;\n      });\n    },\n    updateCreatorTeams: function updateCreatorTeams(creatorId, teamId) {\n      var remove = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var creator = this.creators.find(function (c) {\n        return c.id === creatorId;\n      });\n      if (creator) {\n        if (remove) {\n          creator.teams = creator.teams.filter(function (team) {\n            return team.id !== teamId;\n          });\n        } else {\n          creator.teams.push({\n            id: teamId,\n            is_manager: false\n          }); // Add the new team to the creator's teams\n        }\n      }\n    },\n    // getCreators() {\n    //     router.reload({ only: ['creators'] })\n    // },\n    deleteTeamMemberCancel: function deleteTeamMemberCancel() {\n      this.confirmDialog = false;\n    },\n    confirmTeamManagerCancel: function confirmTeamManagerCancel() {\n      this.confirmManagerDialog = false;\n    },\n    // loadTeamMembers(members){\n    //     this.members = members;\n    // }\n    // deleteTeamMember() {\n    //     router.visit(route('teams.removeTeamMember'), {\n    //         method: 'post',\n    //         data: {\n    //             user_id: this.deleteMemberId,\n    //             team_id: this.id,\n    //             team_slug: this.slug,\n    //         },\n    //     })\n    // },\n    deleteTeamMember: function deleteTeamMember() {\n      var _this = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var notificationStore, payload, response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              notificationStore = (0,_Stores_NotificationStore__WEBPACK_IMPORTED_MODULE_4__.useNotificationStore)();\n              payload = {\n                user_id: _this.deleteMemberId,\n                team_id: _this.team.id\n              };\n              _context.prev = 2;\n              _context.next = 5;\n              return axios.post(route('teams.removeTeamMember'), payload);\n            case 5:\n              response = _context.sent;\n              if (response.status === 200) {\n                _this.removeMember(_this.deleteMemberId);\n                _this.updateCreatorTeams(_this.deleteMemberId, _this.team.id, true); // Remove the team from the creator's teams\n                _this.confirmDialog = false;\n                notificationStore.setToastNotification(response.data.message, 'success');\n              } else {\n                _this.confirmDialog = false;\n                notificationStore.setToastNotification('Failed to remove member from the team.', 'warning');\n              }\n              _context.next = 14;\n              break;\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](2);\n              console.error(_context.t0);\n              _this.confirmDialog = false;\n              notificationStore.setToastNotification('An error occurred while removing the member from the team.', 'error');\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[2, 9]]);\n      }))();\n    },\n    addTeamManager: function addTeamManager() {\n      var _this2 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var notificationStore, payload, response;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              notificationStore = (0,_Stores_NotificationStore__WEBPACK_IMPORTED_MODULE_4__.useNotificationStore)();\n              payload = {\n                user_id: _this2.selectedManagerId,\n                team_id: _this2.team.id,\n                team_slug: _this2.team.slug\n              };\n              _context2.prev = 2;\n              _context2.next = 5;\n              return axios.post(route('teams.addTeamManager'), payload);\n            case 5:\n              response = _context2.sent;\n              if (response.status === 200) {\n                // Add any additional logic if needed, e.g., updating team data in the store\n                _this2.team.managers.push(response.data.manager);\n                _this2.confirmManagerDialog = false;\n                notificationStore.setToastNotification(response.data.message, 'success');\n              } else {\n                _this2.confirmManagerDialog = false;\n                notificationStore.setToastNotification('Failed to add manager to the team.', 'warning');\n              }\n              _context2.next = 14;\n              break;\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](2);\n              console.error(_context2.t0);\n              _this2.confirmManagerDialog = false;\n              notificationStore.setToastNotification('An error occurred while adding the manager to the team.', 'error');\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[2, 9]]);\n      }))();\n    },\n    removeTeamManager: function removeTeamManager() {\n      var _this3 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var notificationStore, payload, response;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              notificationStore = (0,_Stores_NotificationStore__WEBPACK_IMPORTED_MODULE_4__.useNotificationStore)();\n              payload = {\n                user_id: _this3.selectedManagerId,\n                team_id: _this3.team.id,\n                team_slug: _this3.team.slug\n              };\n              _context3.prev = 2;\n              _context3.next = 5;\n              return axios.post(route('teams.removeTeamManager'), payload);\n            case 5:\n              response = _context3.sent;\n              if (response.status === 200) {\n                // Remove the manager from the team.managers array\n                _this3.team.managers = _this3.team.managers.filter(function (manager) {\n                  return manager.id !== _this3.selectedManagerId;\n                });\n                _this3.confirmManagerDialog = false;\n                notificationStore.setToastNotification(response.data.message, 'success');\n              } else {\n                _this3.confirmManagerDialog = false;\n                notificationStore.setToastNotification('Failed to remove manager from the team.', 'warning');\n              }\n              _context3.next = 14;\n              break;\n            case 9:\n              _context3.prev = 9;\n              _context3.t0 = _context3[\"catch\"](2);\n              console.error(_context3.t0);\n              _this3.confirmManagerDialog = false;\n              notificationStore.setToastNotification('An error occurred while removing the manager from the team.', 'error');\n            case 14:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, null, [[2, 9]]);\n      }))();\n    },\n    toggleGoLiveDisplay: function toggleGoLiveDisplay() {\n      this.goLiveDisplay = !this.goLiveDisplay;\n    },\n    fetchTeamMembers: function fetchTeamMembers() {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return axios.get('/team/team-members').then().error();\n            case 2:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4);\n      }))();\n    },\n    setCreators: function setCreators(creators) {\n      this.creators = creators;\n    },\n    updatePublicMessage: function updatePublicMessage(html) {\n      this.team.public_message = html;\n    }\n  },\n  getters: {\n    spotsRemaining: function spotsRemaining(state) {\n      if (!state.team.members) {\n        return state.team.totalSpots; // Assume no members if state.members is not defined\n      } else if (state.team.members) {\n        this.totalSpots = state.team.totalSpots;\n        return Math.max(state.team.totalSpots - state.team.members.length, 0);\n      }\n    },\n    membersCount: function membersCount(state) {\n      if (!state.team.members) {\n        return 0; // Assume no members if state.members is not defined\n      } else if (state.team.members) {\n        this.memberSpots = state.team.members.length;\n        return state.team.members.length;\n      }\n    },\n    membersCountDisplay: function membersCountDisplay(state) {\n      if (state.team.members) {\n        return state.team.members.length > 99 ? '99+' : state.team.members.length;\n      }\n    },\n    nextBroadcast: function nextBroadcast(state) {\n      var team = state.team;\n      if (!team.nextBroadcast || team.nextBroadcast.length === 0) {\n        return null;\n      }\n      var userStore = (0,_Stores_UserStore__WEBPACK_IMPORTED_MODULE_3__.useUserStore)();\n      var today = dayjs__WEBPACK_IMPORTED_MODULE_0___default()().tz(userStore.timezone);\n      return team.nextBroadcast.reduce(function (closest, broadcast) {\n        var broadcastDate = dayjs__WEBPACK_IMPORTED_MODULE_0___default()(broadcast.broadcastDate).tz(userStore.timezone);\n        if (!closest || Math.abs(broadcastDate - today) < Math.abs(dayjs__WEBPACK_IMPORTED_MODULE_0___default()(closest.broadcastDate).tz(userStore.timezone) - today)) {\n          return broadcast;\n        }\n        return closest;\n      }, null);\n    },\n    nextBroadcastIsOver: function nextBroadcastIsOver(state) {\n      var userStore = (0,_Stores_UserStore__WEBPACK_IMPORTED_MODULE_3__.useUserStore)();\n      var nowInUserTimezone = dayjs__WEBPACK_IMPORTED_MODULE_0___default()().utc().tz(userStore.timezone);\n      var broadcastEndTime = dayjs__WEBPACK_IMPORTED_MODULE_0___default()(state.nextBroadcastLoaded.broadcastDate).add(state.nextBroadcastLoaded.broadcastDetails.duration_minutes, 'minute').utc().tz(userStore.timezone);\n      return nowInUserTimezone.isAfter(broadcastEndTime);\n    },\n    sortedBroadcasts: function sortedBroadcasts(state) {\n      if (!state.team.nextBroadcast || state.team.nextBroadcast.length === 0) {\n        return [];\n      }\n      var userStore = (0,_Stores_UserStore__WEBPACK_IMPORTED_MODULE_3__.useUserStore)();\n      var today = dayjs__WEBPACK_IMPORTED_MODULE_0___default()().tz(userStore.timezone);\n      return state.team.nextBroadcast.filter(function (broadcast) {\n        return dayjs__WEBPACK_IMPORTED_MODULE_0___default()(broadcast.broadcastDate).tz(userStore.timezone).isAfter(today);\n      }).sort(function (a, b) {\n        return dayjs__WEBPACK_IMPORTED_MODULE_0___default()(a.broadcastDate).tz(userStore.timezone).diff(dayjs__WEBPACK_IMPORTED_MODULE_0___default()(b.broadcastDate).tz(userStore.timezone));\n      }).map(function (broadcast) {\n        return _objectSpread(_objectSpread({}, broadcast), {}, {\n          localDate: dayjs__WEBPACK_IMPORTED_MODULE_0___default()(broadcast.broadcastDate).tz(userStore.timezone).format()\n        });\n      });\n    },\n    futureBroadcasts: function futureBroadcasts(state) {\n      var nextBroadcast = this.nextBroadcast;\n      if (!state.team.nextBroadcast || state.team.nextBroadcast.length === 0) {\n        return [];\n      }\n      var userStore = (0,_Stores_UserStore__WEBPACK_IMPORTED_MODULE_3__.useUserStore)();\n      var today = dayjs__WEBPACK_IMPORTED_MODULE_0___default()().tz(userStore.timezone);\n      return state.team.nextBroadcast.filter(function (broadcast) {\n        return dayjs__WEBPACK_IMPORTED_MODULE_0___default()(broadcast.broadcastDate).tz(userStore.timezone).isAfter(today) && (!nextBroadcast || broadcast.broadcastDate !== nextBroadcast.broadcastDate);\n      }).sort(function (a, b) {\n        return dayjs__WEBPACK_IMPORTED_MODULE_0___default()(a.broadcastDate).tz(userStore.timezone).diff(dayjs__WEBPACK_IMPORTED_MODULE_0___default()(b.broadcastDate).tz(userStore.timezone));\n      }).map(function (broadcast) {\n        return _objectSpread(_objectSpread({}, broadcast), {}, {\n          localDate: dayjs__WEBPACK_IMPORTED_MODULE_0___default()(broadcast.broadcastDate).tz(userStore.timezone).format()\n        });\n      });\n    }\n  }\n});\n\n// Another option for declaring specific data to return:\n// let data = r.default;\n//\n// import('@/Json/team.json').then(r => {\n// this.$patch({\n//     name: data.name,\n//     spots: data.spots,\n//     members: data.members\n// });\n// });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/Stores/TeamStore.js\n");

/***/ })

}]);
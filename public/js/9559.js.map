{"version":3,"file":"js/9559.js","mappings":"w8CAKA,E,yFCKMA,GAAcC,EAAAA,EAAAA,OAAMC,EAAO,YAE3BC,GAAgBC,EAAAA,EAAAA,WAAS,WAC3B,OAAOJ,EAAYK,MAAMC,KAAI,SAACC,GAE1B,IAAMC,EAAkB,eAClBC,EAAqBF,EAAEG,MAAMF,GACnC,OAAAG,EAAAA,EAAA,GACQF,GAAsB,CAACG,cAAeH,EAAmB,KAAG,IAChEI,QAASN,EAAEO,QAAQN,EAAiB,KAAOD,GAEnD,GACJ,I,iYAE2BK,E,gBAChB,8CAAPG,OAAqDH,M,gFAD/B,IAACA,C","sources":["webpack:///./resources/js/Pages/SrMessages.vue?c45d","webpack:///./resources/js/Pages/SrMessages.vue"],"sourcesContent":["import script from \"./SrMessages.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./SrMessages.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { defineProps, computed, toRef } from 'vue';\n\nconst props = defineProps({\n    messages: {\n        type: Array,\n        required: true\n    }\n});\n\nconst messagesRef = toRef(props, 'messages');\n\nconst splitMessages = computed(() => {\n    return messagesRef.value.map((x) => {\n\n        const paymentIntentRe = /(pi_(\\S*)\\b)/\n        const paymentIntentMatch = x.match(paymentIntentRe)\n        return {\n            ...(paymentIntentMatch && {paymentIntent: paymentIntentMatch[0]}),\n            content: x.replace(paymentIntentRe, '') || x\n        }\n    });\n})\n\nconst addDashboardLinks = (paymentIntent) => {\n    return `https://dashboard.stripe.com/test/payments/${paymentIntent}`;\n};\n\n</script>\n<template>\n    <div\n        id=\"messages\"\n        role=\"alert\"\n    >\n    <span\n        v-for=\"message in splitMessages\"\n        :key=\"message\"\n    >\n      > {{ message.content }}<a\n        v-if=\"message.paymentIntent\"\n        :href=\"addDashboardLinks(message.paymentIntent)\"\n    >{{ message.paymentIntent }}</a>\n      <br>\n    </span>\n    </div>\n</template>\n"],"names":["messagesRef","toRef","props","splitMessages","computed","value","map","x","paymentIntentRe","paymentIntentMatch","match","_objectSpread","paymentIntent","content","replace","concat"],"sourceRoot":""}
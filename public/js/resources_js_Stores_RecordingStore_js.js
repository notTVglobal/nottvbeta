"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunknottvbeta"] = self["webpackChunknottvbeta"] || []).push([["resources_js_Stores_RecordingStore_js"],{

/***/ "./resources/js/Stores/RecordingStore.js":
/*!***********************************************!*\
  !*** ./resources/js/Stores/RecordingStore.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useRecordingStore: () => (/* binding */ useRecordingStore)\n/* harmony export */ });\n/* harmony import */ var pinia__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! pinia */ \"./node_modules/pinia/dist/pinia.mjs\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! axios */ \"./node_modules/axios/lib/axios.js\");\n/* harmony import */ var dayjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! dayjs */ \"./node_modules/dayjs/dayjs.min.js\");\n/* harmony import */ var dayjs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(dayjs__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var dayjs_plugin_utc__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! dayjs/plugin/utc */ \"./node_modules/dayjs/plugin/utc.js\");\n/* harmony import */ var dayjs_plugin_utc__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(dayjs_plugin_utc__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var dayjs_plugin_timezone__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! dayjs/plugin/timezone */ \"./node_modules/dayjs/plugin/timezone.js\");\n/* harmony import */ var dayjs_plugin_timezone__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(dayjs_plugin_timezone__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Stores_UserStore__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/Stores/UserStore */ \"./resources/js/Stores/UserStore.js\");\n/* harmony import */ var _Stores_VideoPlayerStore__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/Stores/VideoPlayerStore */ \"./resources/js/Stores/VideoPlayerStore.js\");\n/* harmony import */ var _Stores_AppSettingStore__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/Stores/AppSettingStore */ \"./resources/js/Stores/AppSettingStore.js\");\n/* harmony import */ var _Stores_NowPlayingStore__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @/Stores/NowPlayingStore */ \"./resources/js/Stores/NowPlayingStore.js\");\n/* harmony import */ var _Stores_ShowStore__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @/Stores/ShowStore */ \"./resources/js/Stores/ShowStore.js\");\n/* harmony import */ var _Stores_NotificationStore__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @/Stores/NotificationStore */ \"./resources/js/Stores/NotificationStore.js\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\n\n\n\n\n\n\n\n\n\n\n\ndayjs__WEBPACK_IMPORTED_MODULE_0___default().extend((dayjs_plugin_utc__WEBPACK_IMPORTED_MODULE_1___default()));\ndayjs__WEBPACK_IMPORTED_MODULE_0___default().extend((dayjs_plugin_timezone__WEBPACK_IMPORTED_MODULE_2___default()));\nvar initialState = function initialState() {\n  return {\n    recordings: [],\n    pagination: {\n      currentPage: 1,\n      lastPage: 1,\n      total: 0\n    },\n    selectedRecording: null,\n    nowPlayingRecording: null,\n    nowPlayingRecordingId: null,\n    isLoading: false,\n    showCopyMessage: false,\n    copyMessage: ''\n  };\n};\nvar useRecordingStore = (0,pinia__WEBPACK_IMPORTED_MODULE_9__.defineStore)('recordingStore', {\n  state: initialState,\n  actions: {\n    fetchRecordings: function fetchRecordings() {\n      var _arguments = arguments,\n        _this = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _showStore$show;\n        var page, showStore, showId, response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              page = _arguments.length > 0 && _arguments[0] !== undefined ? _arguments[0] : 1;\n              _this.isLoading = true;\n              showStore = (0,_Stores_ShowStore__WEBPACK_IMPORTED_MODULE_7__.useShowStore)();\n              showId = (_showStore$show = showStore.show) === null || _showStore$show === void 0 ? void 0 : _showStore$show.id;\n              if (showId) {\n                _context.next = 8;\n                break;\n              }\n              console.error(\"No show ID available\");\n              _this.isLoading = false;\n              return _context.abrupt(\"return\");\n            case 8:\n              _context.prev = 8;\n              _context.next = 11;\n              return axios__WEBPACK_IMPORTED_MODULE_10__[\"default\"].get(\"/api/recordings\", {\n                params: {\n                  show_id: showId,\n                  page: page\n                }\n              });\n            case 11:\n              response = _context.sent;\n              _this.recordings = response.data.data;\n              _this.pagination = {\n                currentPage: response.data.current_page,\n                lastPage: response.data.last_page,\n                total: response.data.total\n              };\n              _context.next = 19;\n              break;\n            case 16:\n              _context.prev = 16;\n              _context.t0 = _context[\"catch\"](8);\n              console.error(\"Failed to fetch recordings:\", _context.t0);\n            case 19:\n              _context.prev = 19;\n              _this.isLoading = false;\n              return _context.finish(19);\n            case 22:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[8, 16, 19, 22]]);\n      }))();\n    },\n    updateRecording: function updateRecording(meta) {\n      var _this2 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var showStore, notificationStore, _this2$selectedRecord, response, updatedRecording, index;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              showStore = (0,_Stores_ShowStore__WEBPACK_IMPORTED_MODULE_7__.useShowStore)();\n              notificationStore = (0,_Stores_NotificationStore__WEBPACK_IMPORTED_MODULE_8__.useNotificationStore)();\n              _this2.isLoading = true;\n              _context2.prev = 3;\n              console.log('Updating recording with meta:', meta);\n              _context2.next = 7;\n              return axios__WEBPACK_IMPORTED_MODULE_10__[\"default\"].patch(\"/api/recordings/\".concat(_this2.selectedRecording.id), {\n                meta: meta,\n                show_id: showStore.show.id\n              });\n            case 7:\n              response = _context2.sent;\n              updatedRecording = response.data.recording;\n              notificationStore.setToastNotification('Recording updated successfully.', 'success');\n\n              // Update the recordings state with the updated recording\n              index = _this2.recordings.findIndex(function (recording) {\n                return recording.id === updatedRecording.id;\n              });\n              if (index !== -1) {\n                _this2.recordings[index] = updatedRecording;\n              }\n\n              // Update the selected recording if it matches the updated one\n              if (((_this2$selectedRecord = _this2.selectedRecording) === null || _this2$selectedRecord === void 0 ? void 0 : _this2$selectedRecord.id) === updatedRecording.id) {\n                _this2.selectedRecording = updatedRecording;\n              }\n              _context2.next = 19;\n              break;\n            case 15:\n              _context2.prev = 15;\n              _context2.t0 = _context2[\"catch\"](3);\n              console.error(\"Failed to update recording:\", _context2.t0);\n              notificationStore.setToastNotification(_context2.t0.message, 'error');\n            case 19:\n              _context2.prev = 19;\n              _this2.isLoading = false;\n              return _context2.finish(19);\n            case 22:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[3, 15, 19, 22]]);\n      }))();\n    },\n    reset: function reset() {\n      Object.assign(this, initialState());\n    },\n    formatDateInUserTimezone: function formatDateInUserTimezone(date) {\n      var userStore = (0,_Stores_UserStore__WEBPACK_IMPORTED_MODULE_3__.useUserStore)();\n      return userStore.formatDateInUserTimezone(date);\n    },\n    formatTimeFromDateInUserTimezone: function formatTimeFromDateInUserTimezone(date) {\n      var userStore = (0,_Stores_UserStore__WEBPACK_IMPORTED_MODULE_3__.useUserStore)();\n      return userStore.formatTimeFromDateInUserTimezone(date);\n    },\n    formatDuration: function formatDuration(totalMilliseconds) {\n      var seconds = Math.floor(totalMilliseconds / 1000);\n      var minutes = Math.floor(seconds / 60);\n      var hours = Math.floor(minutes / 60);\n      seconds = seconds % 60;\n      minutes = minutes % 60;\n      var paddedHours = hours.toString().padStart(2, '0');\n      var paddedMinutes = minutes.toString().padStart(2, '0');\n      var paddedSeconds = seconds.toString().padStart(2, '0');\n      return \"\".concat(paddedHours, \"h \").concat(paddedMinutes, \"m \").concat(paddedSeconds, \"s\");\n    },\n    setSelectedRecording: function setSelectedRecording(recording) {\n      this.selectedRecording = recording;\n    },\n    clearSelectedRecording: function clearSelectedRecording() {\n      this.selectedRecording = null;\n    },\n    openVideo: function openVideo() {\n      var _this3 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var videoPlayerStore, appSettingStore, nowPlayingStore, showStore, show, source;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              // this.selectedRecording = recording;\n              videoPlayerStore = (0,_Stores_VideoPlayerStore__WEBPACK_IMPORTED_MODULE_4__.useVideoPlayerStore)();\n              appSettingStore = (0,_Stores_AppSettingStore__WEBPACK_IMPORTED_MODULE_5__.useAppSettingStore)();\n              nowPlayingStore = (0,_Stores_NowPlayingStore__WEBPACK_IMPORTED_MODULE_6__.useNowPlayingStore)();\n              showStore = (0,_Stores_ShowStore__WEBPACK_IMPORTED_MODULE_7__.useShowStore)();\n              show = showStore.show;\n              source = {\n                mediaType: 'recording',\n                recording: {\n                  source: _this3.selectedRecording.playback_stream_name,\n                  sourceType: 'video/mp4'\n                }\n              };\n              _context3.prev = 6;\n              _context3.next = 9;\n              return videoPlayerStore.loadNewVideo(source);\n            case 9:\n              _this3.nowPlayingRecordingId = _this3.selectedRecording.id;\n              appSettingStore.toggleOttInfo();\n              nowPlayingStore.setActiveMedia(source.mediaType, {\n                primaryName: show.name,\n                secondaryName: \"\".concat(_this3.formatDateInUserTimezone(_this3.selectedRecording.start_time), \" \").concat(_this3.formatTimeFromDateInUserTimezone(_this3.selectedRecording.start_time), \" Recording\"),\n                description: _this3.selectedRecording.comment || null,\n                primaryUrl: \"shows/\".concat(show.slug),\n                image: show.image\n              });\n              _context3.next = 17;\n              break;\n            case 14:\n              _context3.prev = 14;\n              _context3.t0 = _context3[\"catch\"](6);\n              console.error('Error loading new video:', _context3.t0);\n            case 17:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, null, [[6, 14]]);\n      }))();\n    },\n    downloadRecording: function downloadRecording() {\n      if (!this.selectedRecording) return;\n      var url = this.selectedRecording.download_url;\n      var downloadLink = document.createElement('a');\n      downloadLink.href = url;\n      document.body.appendChild(downloadLink);\n      downloadLink.click();\n      document.body.removeChild(downloadLink);\n    }\n  },\n  getters: {\n    formattedRecordings: function formattedRecordings(state) {\n      var userStore = (0,_Stores_UserStore__WEBPACK_IMPORTED_MODULE_3__.useUserStore)();\n      return state.recordings.map(function (recording) {\n        return _objectSpread(_objectSpread({}, recording), {}, {\n          start_date_local: dayjs__WEBPACK_IMPORTED_MODULE_0___default().utc(recording.start_dateTime).tz(userStore.timezone).format('ddd DD MMM'),\n          start_time_local: dayjs__WEBPACK_IMPORTED_MODULE_0___default().utc(recording.start_dateTime).tz(userStore.timezone).format('h:mm a'),\n          end_time_local: dayjs__WEBPACK_IMPORTED_MODULE_0___default().utc(recording.end_dateTime).tz(userStore.timezone).format('h:mm a')\n        });\n      });\n    }\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/Stores/RecordingStore.js\n");

/***/ })

}]);
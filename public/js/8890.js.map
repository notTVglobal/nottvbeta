{"version":3,"file":"js/8890.js","mappings":"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","sources":["webpack:///./resources/js/Stores/TeamStore.js","webpack:///./resources/js/Components/Buttons/CancelButton.vue?0d53","webpack:///./resources/js/Components/Buttons/CancelButton.vue","webpack:///./resources/js/Jetstream/ValidationErrors.vue?5fdc","webpack:///./resources/js/Jetstream/ValidationErrors.vue","webpack:///./resources/js/Pages/Shows/{$id}/Episodes/Create.vue?14bc","webpack:///./resources/js/Pages/Shows/{$id}/Episodes/Create.vue"],"sourcesContent":["import {defineStore} from \"pinia\";\nimport {Inertia} from \"@inertiajs/inertia\";\n\nexport let useTeamStore = defineStore('teamStore', {\n    state: () => ({\n        id: 0,\n        name: '',\n        description: '',\n        slug: '',\n        totalSpots: '',\n        memberSpots: '',\n        teamLeader: [],\n        members: [],\n        managers: [],\n        activeShow: [],\n        activeEpisode: [],\n        creators: [],\n        showModal: Boolean,\n        confirmDialog: false,\n        confirmManagerDialog: false,\n        selectedManagerName: '',\n        selectedManagerId: 0,\n        addManager: false,\n        removeManager: false,\n        deleteMemberName: '',\n        deleteMemberId: 0,\n        noteEdit: 0,\n        note: '',\n        saveNoteProcessing: Boolean,\n            // on the show episode manage page\n            // turn on the go live div\n            goLiveDisplay: false,\n        can: [],\n    }),\n\n    actions: {\n        // async fill() {\n        //     let r = await import('@/Json/team.json');\n        //     this.$state = r.default;\n        // },\n        setActiveTeam(team) {\n            this.id = team.id;\n            this.name = team.name;\n            this.description = team.description;\n            this.slug = team.slug;\n            this.totalSpots = team.totalSpots;\n            this.memberSpots = team.memberSpots;\n        },\n        setActiveShow(show) {\n            this.activeShow = show;\n        },\n        setActiveEpisode(episode) {\n            this.activeShow = episode;\n        },\n        // getCreators() {\n        //     Inertia.reload({ only: ['creators'] })\n        // },\n        deleteTeamMemberCancel() {\n            this.confirmDialog = false;\n        },\n        confirmTeamManagerCancel() {\n            this.confirmManagerDialog = false;\n        },\n        // loadTeamMembers(members){\n        //     this.members = members;\n        // }\n        deleteTeamMember() {\n            Inertia.visit(route('teams.removeTeamMember'), {\n                method: 'post',\n                data: {\n                    user_id: this.deleteMemberId,\n                    team_id: this.id,\n                    team_slug: this.slug\n                },\n            })\n        },\n        addTeamManager() {\n            Inertia.visit(route('teams.addTeamManager'), {\n                method: 'post',\n                data: {\n                    user_id: this.selectedManagerId,\n                    team_id: this.id,\n                    team_slug: this.slug\n                },\n            })\n            this.confirmManagerDialog = false;\n        },\n        removeTeamManager() {\n            Inertia.visit(route('teams.removeTeamManager'), {\n                method: 'post',\n                data: {\n                    user_id: this.selectedManagerId,\n                    team_id: this.id,\n                    team_slug: this.slug\n                },\n            })\n            this.confirmManagerDialog = false;\n        },\n        toggleGoLiveDisplay() {\n            this.goLiveDisplay = ! this.goLiveDisplay;\n        }\n    },\n\n    getters: {\n        spotsRemaining() {\n            if (this.totalSpots - this.memberSpots < 1){\n                return 0\n            }\n            return this.totalSpots - this.memberSpots;\n        },\n    }\n});\n\n\n// Another option for declaring specific data to return:\n// let data = r.default;\n//\n// import('@/Json/team.json').then(r => {\n// this.$patch({\n//     name: data.name,\n//     spots: data.spots,\n//     members: data.members\n// });\n// });\n","import script from \"./CancelButton.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CancelButton.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <div>\n        <button\n            @click=\"cancel\"\n            class=\"ml-2 px-4 py-2 text-white bg-orange-600 hover:bg-orange-500 rounded-lg\"\n        >Cancel\n        </button>\n    </div>\n</template>\n\n<script setup>\nimport { Inertia } from \"@inertiajs/inertia\"\nimport { useUserStore } from \"@/Stores/UserStore\"\n\nlet userStore = useUserStore()\n\nfunction cancel() {\n    if (userStore.prevUrl) {\n        Inertia.visit(userStore.prevUrl)\n    }\n}\n</script>\n","import script from \"./ValidationErrors.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ValidationErrors.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { computed } from 'vue';\nimport { usePage } from '@inertiajs/inertia-vue3';\n\nconst errors = computed(() => usePage().props.value.errors);\nconst hasErrors = computed(() => Object.keys(errors.value).length > 0);\n</script>\n\n<template>\n    <div v-if=\"hasErrors\">\n        <div class=\"font-medium text-red-600\">\n            Whoops! Something went wrong.\n        </div>\n\n        <ul class=\"mt-3 list-disc list-inside text-sm text-red-600\">\n            <li v-for=\"(error, key) in errors\" :key=\"key\">\n                {{ error }}\n            </li>\n        </ul>\n    </div>\n</template>\n","import script from \"./Create.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Create.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <Head  title=\"Create Episode\"/>\n\n    <div class=\"place-self-center flex flex-col gap-y-3\">\n        <div id=\"topDiv\" class=\"bg-white text-black dark:bg-gray-800 dark:text-gray-50 p-5 mb-10\">\n\n            <Message v-if=\"userStore.showFlashMessage\" :flash=\"$page.props.flash\"/>\n\n            <div class=\"flex justify-between mt-3 mb-6\">\n                <div class=\"text-3xl\">Create Episode</div>\n                <div>\n                    <CancelButton />\n                </div>\n            </div>\n\n            <div class=\"mx-4\">\n                <div class=\"alert alert-info mt-4\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" class=\"stroke-current shrink-0 w-6 h-6\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path></svg>\n                    <span><span class=\"font-semibold\">NOTE: </span>\n                    We are working on an episode poster and video uploader for this page. For the time being, please\n                    go to the episode EDIT page after you create the episode to add a video and a poster.</span>\n                </div>\n            </div>\n\n            <form @submit.prevent=\"submit\" class=\"max-w-md mx-auto mt-8\">\n\n                <div class=\"mb-6\">\n                    <label class=\"block mb-2 uppercase font-bold text-xs dark:text-gray-200\"\n                           for=\"notes\"\n                    >\n                        Notes <br>(Only your team members see these notes, they are not public)\n                    </label>\n                    <textarea v-model=\"form.notes\"\n                              class=\"bg-gray-50 border border-gray-400 text-gray-900 text-sm p-2 w-full rounded-lg focus:ring-blue-500 focus:border-blue-500 block\"\n                              type=\"text\"\n                              name=\"notes\"\n                              id=\"notes\"\n                    ></textarea>\n                    <div v-if=\"form.errors.notes\" v-text=\"form.errors.notes\" class=\"text-xs text-red-600 mt-1\"></div>\n                </div>\n\n                <div class=\"mb-6\">\n                    <label class=\"block mb-2 uppercase font-bold text-xs dark:text-gray-200\"\n                           for=\"showName\"\n                    >\n                        Show Name\n                    </label>\n                    <div class=\"font-bold\">{{props.show.name}}</div>\n\n                    <div v-if=\"form.errors.show_id\" v-text=\"form.errors.show_id\" class=\"text-xs text-red-600 mt-1\"></div>\n                </div>\n                <div class=\"mb-6\">\n                    <label class=\"block mb-2 uppercase font-bold text-xs dark:text-gray-200\"\n                           for=\"showCategory\"\n                    >\n                        Category\n                    </label>\n                    <div class=\"font-bold\">{{props.show.showCategoryName}}</div>\n                </div>\n                <div class=\"mb-6\">\n                    <label class=\"block mb-2 uppercase font-bold text-xs dark:text-gray-200\"\n                           for=\"showCategory\"\n                    >\n                        Sub-category\n                    </label>\n                    <div class=\"mb-2 text-sm text-orange-600\">Sub-categories are coming soon!</div>\n                    <div class=\"font-bold\">{{props.show.subCategoryName}}</div>\n                </div>\n                <div class=\"mb-6\">\n                    <label class=\"block mb-2 uppercase font-bold text-xs dark:text-gray-200\"\n                           for=\"name\"\n                    >\n                        Episode Name\n                    </label>\n\n                    <input v-model=\"form.name\"\n                           class=\"bg-gray-50 border border-gray-400 text-gray-900 text-sm p-2 w-full rounded-lg focus:ring-blue-500 focus:border-blue-500\"\n                           type=\"text\"\n                           name=\"name\"\n                           id=\"name\"\n                           required\n                    >\n                    <div v-if=\"form.errors.name\" v-text=\"form.errors.name\" class=\"text-xs text-red-600 mt-1\"></div>\n                </div>\n\n                <div class=\"mb-6\">\n                    <label class=\"block mb-2 uppercase font-bold text-xs dark:text-gray-200\"\n                           for=\"episode_number\"\n                    >\n                        Episode Number\n                    </label>\n\n                    <input v-model=\"form.episode_number\"\n                           class=\"bg-gray-50 border border-gray-400 text-gray-900 text-sm p-2 w-1/2 rounded-lg focus:ring-blue-500 focus:border-blue-500\"\n                           type=\"text\"\n                           name=\"episode_number\"\n                           id=\"episode_number\"\n                    >\n                    <div v-if=\"form.errors.episode_number\" v-text=\"form.errors.episode_number\" class=\"text-xs text-red-600 mt-1\"></div>\n                </div>\n\n                <div class=\"mb-6\">\n                    <label class=\"block mb-2 uppercase font-bold text-xs dark:text-gray-200\"\n                           for=\"description\"\n                    >\n                        Description\n                    </label>\n                    <textarea v-model=\"form.description\"\n                              class=\"bg-gray-50 border border-gray-400 text-gray-900 text-sm p-2 w-full rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\"\n                              type=\"text\"\n                              name=\"description\"\n                              id=\"description\"\n                              required\n                    ></textarea>\n                    <div v-if=\"form.errors.description\" v-text=\"form.errors.description\" class=\"text-xs text-red-600 mt-1\"></div>\n                </div>\n\n<!--                <div class=\"mb-6\">-->\n<!--                    <label class=\"block mb-2 uppercase font-bold text-xs dark:text-gray-200\"-->\n<!--                           for=\"youtube_url\"-->\n<!--                    >-->\n<!--                        YouTube URL-->\n<!--                    </label>-->\n<!--                    <input v-model=\"form.youtube_url\"-->\n<!--                           class=\"bg-gray-50 border border-gray-400 text-gray-900 text-sm p-2 w-full rounded-lg focus:ring-blue-500 focus:border-blue-500\"-->\n<!--                           type=\"text\"-->\n<!--                           name=\"youtube_url\"-->\n<!--                           id=\"youtube_url\"-->\n<!--                    >-->\n<!--                    <div v-if=\"form.errors.youtube_url\" v-text=\"form.errors.youtube_url\" class=\"text-xs text-red-600 mt-1\"></div>-->\n<!--                </div>-->\n\n                <div class=\"mb-6\">\n                    <label class=\"block mb-2 uppercase font-bold text-xs dark:text-gray-200\"\n                           for=\"video_url\"\n                    >\n                        Video URL (External MP4 only)\n                    </label>\n                    <input v-model=\"form.video_url\"\n                           class=\"bg-gray-50 border border-gray-400 text-gray-900 text-sm p-2 w-full rounded-lg focus:ring-blue-500 focus:border-blue-500\"\n                           type=\"text\"\n                           name=\"video_url\"\n                           id=\"video_url\"\n                    >\n                    <div class=\"text-xs mt-1\">\n                        Example: <span class=\"underline\">https://domainname.com/filename.mp4</span>\n                    </div>\n                    <div v-if=\"form.errors.video_url\" v-text=\"form.errors.video_url\" class=\"text-xs text-red-600 mt-1\"></div>\n                </div>\n\n                <div class=\"mb-6\">\n                    <label class=\"block mb-2 uppercase font-bold text-xs dark:text-gray-200\"\n                           for=\"video_embed_code\"\n                    >\n                        Embed Code (Rumble or Bitchute only) <span class=\"text-white\">*</span>\n                    </label>\n                    <textarea v-model=\"form.video_embed_code\"\n                              class=\"bg-gray-50 border border-gray-400 text-gray-900 text-sm p-2 w-full rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\"\n                              type=\"text\"\n                              name=\"video_embed_code\"\n                              id=\"video_embed_code\"\n                    ></textarea>\n                    <div v-if=\"form.errors.video_embed_code\" v-text=\"form.errors.video_embed_code\" class=\"text-xs text-red-600 mt-1\"></div>\n                </div>\n\n                <div class=\"mt-2 mb-6 pb-4 border-b\">\n                    <div class=\"mb-2 block uppercase font-bold text-xs\">\n                        * Notes about video embedding:\n                    </div>\n                    <ul class=\"list-decimal pb-2 ml-2\">\n                        <li>\n                            If both URL and Embed Code are provided the system will attempt to get the Video Url from the Embed Code.\n                        </li>\n                        <li>\n                            We have <span class=\"font-bold\">not</span> enabled the use of Facebook videos for security purposes.\n                        </li>\n                        <li>\n                            If you want to use YouTube, enter the YouTube video URL above in the YouTube URL field. This option is least preferrable, due to a lower quality user experience.\n                        </li>\n                    </ul>\n                </div>\n\n                <div class=\"flex justify-between mb-6\">\n                    <JetValidationErrors class=\"mr-4\" />\n                    <button\n                        type=\"submit\"\n                        class=\"h-fit bg-blue-600 hover:bg-blue-500 text-white rounded py-2 px-4\"\n                        :disabled=\"form.processing\"\n                    >\n                        Submit\n                    </button>\n                </div>\n\n            </form>\n\n            <div class=\"flex justify-end mt-6\">\n                <Link :href=\"`/teams/${props.team.slug}`\" class=\"text-blue-500 ml-2\"> {{ props.team.name }} © 2022 </Link>\n            </div>\n\n        </div>\n    </div>\n\n\n</template>\n\n<script setup>\nimport { onBeforeMount, onMounted, ref } from \"vue\"\nimport {useForm, usePage} from \"@inertiajs/inertia-vue3\"\nimport { useVideoPlayerStore } from \"@/Stores/VideoPlayerStore.js\"\nimport { useTeamStore } from \"@/Stores/TeamStore.js\"\nimport { useUserStore } from \"@/Stores/UserStore\";\nimport Message from \"@/Components/Modals/Messages\";\nimport JetValidationErrors from '@/Jetstream/ValidationErrors.vue';\nimport {Inertia} from \"@inertiajs/inertia\";\nimport CancelButton from \"@/Components/Buttons/CancelButton.vue\";\n\nlet videoPlayerStore = useVideoPlayerStore()\nlet teamStore = useTeamStore()\nlet userStore = useUserStore()\n\nuserStore.currentPage = 'episodes'\nuserStore.showFlashMessage = true;\nteamStore.setActiveShow(props.show);\nteamStore.setActiveTeam(props.team);\n\nonMounted(() => {\n    videoPlayerStore.makeVideoTopRight();\n    if (userStore.isMobile) {\n        videoPlayerStore.ottClass = 'ottClose'\n        videoPlayerStore.ott = 0\n    }\n    document.getElementById(\"topDiv\").scrollIntoView()\n});\n\nlet props = defineProps({\n    user: Object,\n    show: Object,\n    team: Object,\n})\n\nlet form = useForm({\n    name: '',\n    description: '',\n    user_id: props.user.id,\n    show_id: props.show.id,\n    show_slug: props.show.slug,\n    episode_number: '',\n    video_url: '',\n    youtube_url: '',\n    video_embed_code: '',\n    notes: '',\n});\n\nfunction reset() {\n    form.reset();\n}\n\nfunction addEmbedCodeConfirm() {\n    if (confirm(\"Are you sure you want to add this embed code? It will override the video url.\")) {\n        form.post(route('showEpisodes.store', props.show.slug));\n    }\n}\n\nlet submit = () => {\n    if(form.video_embed_code && form.video_url) {\n        addEmbedCodeConfirm();\n    } else\n    form.post(route('showEpisodes.store', props.show.slug));\n};\n\n// let submit = () => {\n//     form.put(route('shows.showEpisodes.store'));\n// };\n\nlet showMessage = ref(true);\n\n// function back() {\n//     let urlPrev = usePage().props.value.urlPrev\n//     if (urlPrev !== 'empty') {\n//         Inertia.visit(urlPrev)\n//     }\n//     if (urlPrev === 'empty') {\n//         Inertia.visit('/shows/'+props.show.slug+'/manage')\n//     }\n// }\n\n</script>\n"],"names":["useTeamStore","defineStore","state","id","name","description","slug","totalSpots","memberSpots","teamLeader","members","managers","activeShow","activeEpisode","creators","showModal","Boolean","confirmDialog","confirmManagerDialog","selectedManagerName","selectedManagerId","addManager","removeManager","deleteMemberName","deleteMemberId","noteEdit","note","saveNoteProcessing","goLiveDisplay","can","actions","setActiveTeam","team","this","setActiveShow","show","setActiveEpisode","episode","deleteTeamMemberCancel","confirmTeamManagerCancel","deleteTeamMember","Inertia","visit","route","method","data","user_id","team_id","team_slug","addTeamManager","removeTeamManager","toggleGoLiveDisplay","getters","spotsRemaining","userStore","useUserStore","cancel","prevUrl","errors","computed","usePage","props","value","hasErrors","Object","keys","length","videoPlayerStore","useVideoPlayerStore","teamStore","currentPage","showFlashMessage","onMounted","makeVideoTopRight","isMobile","ottClass","ott","document","getElementById","scrollIntoView","form","useForm","user","show_id","show_slug","episode_number","video_url","youtube_url","video_embed_code","notes","submit","confirm","post","ref"],"sourceRoot":""}
{"version":3,"file":"js/2249.js","mappings":";8JAMO,SAASA,EAAaC,GACzB,IAAMC,GAAYC,EAAAA,EAAAA,gBACZC,GAAkBC,EAAAA,EAAAA,sBAClBC,GAAmBC,EAAAA,EAAAA,uBAEzBH,EAAgBI,YAAcP,EAC9BG,EAAgBK,kBAAmB,EACnCL,EAAgBM,cAAe,EAE3BR,EAAUS,UAAYC,OAAOC,WAAa,KAC1CT,EAAgBU,IAAM,EAEtBV,EAAgBU,IAAM,EAG1BR,EAAiBS,oBAEbX,EAAgBY,aAChBZ,EAAgBY,YAAa,EAC7BJ,OAAOK,SAASC,QAAO,IAWvBC,EAAAA,QAAQC,GAAG,YAAY,SAACC,GAC+B,KAA3BT,OAAOK,SAASK,SAChBlB,EAAgBmB,mBACpCC,uBAAsB,WAClB,IAAMC,EAASC,SAASC,eAAe,UACnCF,EACAA,EAAOG,eAAe,CAACC,SAAU,SAEjCjB,OAAOkB,SAAS,EAAG,EAE3B,IAEJ1B,EAAgBmB,mBAAoB,CACxC,IAEJnB,EAAgB2B,aAChB3B,EAAgB4B,gBAAiB,EACjC5B,EAAgB6B,UAAW,CAI/B,yFCpDA,8DCUA,IAAM7B,GAAkBC,EAAAA,EAAAA,sBAClBH,GAAYC,EAAAA,EAAAA,gBAEd+B,EAAQC,EAIZ,SAASC,IACP,GAAIhC,EAAgBiC,QACdH,EAAMI,IACRnB,EAAAA,QAAQoB,MAAML,EAAMI,KAEpBnB,EAAAA,QAAQoB,MAAMnC,EAAgBiC,cAGhC,GAAIH,EAAMI,IACRnB,EAAAA,QAAQoB,MAAML,EAAMI,SACf,CAEL,IAAID,EAAUnC,EAAUsC,UAAY,aAAe,IACnDrB,EAAAA,QAAQoB,MAAMF,EAChB,CAEJ,4hRCjCA,6DC0CwBhC,EAAAA,EAAAA,sBAERI,kBAAmB,EAEnC,IAAIyB,EAAQC,EAYNM,IAPcC,EAAAA,EAAAA,WAAS,iBAAO,CAClC,oEAAqER,EAAMS,MAAMC,QACjF,gEAAiEV,EAAMS,MAAME,QAC7E,wEAAyEX,EAAMS,MAAMG,QACrF,4DAA6DZ,EAAMS,MAAMI,MAC1E,IAEsB,iBAAAC,KAAAC,IAAAC,MAAG,SAAAC,IAAA,OAAAF,IAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAClBpC,EAAAA,QAAQqC,KAAKC,MAAM,gBAAe,OACxCtC,EAAAA,QAAQD,SAAS,wBAAAmC,EAAAK,OAAA,GAAAP,EAAA,mLAClB,kBAHsB,OAAAH,EAAAW,MAAA,KAAAC,UAAA,48CC1DvB,+CCDA,IAAMC,GAASnB,EAAAA,EAAAA,WAAS,kBAAMoB,EAAAA,EAAAA,MAAU5B,MAAM6B,MAAMF,MAAM,IACpDG,GAAYtB,EAAAA,EAAAA,WAAS,kBAAMuB,OAAOC,KAAKL,EAAOE,OAAOI,OAAS,CAAC,qrGCArE,6DCuOAnE,EAAAA,EAAAA,GAAa,gBAEYO,EAAAA,EAAAA,uBAAzB,IACMH,GAAkBC,EAAAA,EAAAA,sBAMpB+D,GAAOC,EAAAA,EAAAA,IAAQ,CACjBC,KAAM,GACNC,MAAO,GACPC,SAAU,IACVC,QAAS,GACTC,SAAU,KACVC,SAAU,KACVC,KAAM,KACNC,SAAU,KACVC,QAAS,KACTC,WAAY,KACZC,MAAO,KACPC,UAAW,OAKb,SAASC,IACPd,EAAKc,OACP,CAEA,IAAMC,GAAS,WACbf,EAAKZ,KAAKC,MAAM,eAClB,GAEkB2B,EAAAA,EAAAA,MAAI","sources":["webpack:///./resources/js/Utilities/PageSetup.js","webpack:///./resources/js/Components/Global/Buttons/CancelButton.vue?b7c6","webpack:///./resources/js/Components/Global/Buttons/CancelButton.vue","webpack:///./resources/js/Components/Global/Modals/Messages.vue?dfe9","webpack:///./resources/js/Components/Global/Modals/Messages.vue","webpack:///./resources/js/Jetstream/ValidationErrors.vue?5fdc","webpack:///./resources/js/Jetstream/ValidationErrors.vue","webpack:///./resources/js/Pages/Users/Create.vue?0253","webpack:///./resources/js/Pages/Users/Create.vue"],"sourcesContent":["import { onBeforeMount, onMounted } from 'vue'\nimport { useUserStore } from \"@/Stores/UserStore\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useVideoPlayerStore } from \"@/Stores/VideoPlayerStore\"\nimport { Inertia } from '@inertiajs/inertia'\n\nexport function usePageSetup(pageName) {\n    const userStore = useUserStore()\n    const appSettingStore = useAppSettingStore()\n    const videoPlayerStore = useVideoPlayerStore()\n\n    appSettingStore.currentPage = pageName\n    appSettingStore.showFlashMessage = true\n    appSettingStore.pageIsHidden = false\n\n    if (userStore.isMobile || window.innerWidth < 1024) {\n        appSettingStore.ott = 0;\n    } else {\n        appSettingStore.ott = 1;\n    }\n\n    videoPlayerStore.makeVideoTopRight()\n\n    if (appSettingStore.pageReload) {\n        appSettingStore.pageReload = false\n        window.location.reload(true);\n    }\n    // Check if the URL contains query strings\n\n\n    // Only scroll into view if there are no query strings\n\n        // const topDiv = document.getElementById(\"topDiv\")\n        // if (topDiv) {\n        //     topDiv.scrollIntoView()\n        // }\n        Inertia.on('navigate', (event) => {\n            const hasQueryStrings = window.location.search !== '';\n            if (!hasQueryStrings || appSettingStore.shouldScrollToTop) {\n                requestAnimationFrame(() => {\n                    const topDiv = document.getElementById(\"topDiv\");\n                    if (topDiv) {\n                        topDiv.scrollIntoView({behavior: 'auto'});\n                    } else {\n                        window.scrollTo(0, 0);\n                    }\n                });\n            }\n            appSettingStore.shouldScrollToTop = false;\n        })\n    // Only update if we're not already on this page to avoid overwriting with the current URL\n    appSettingStore.setPrevUrl()\n    appSettingStore.showOttButtons = true\n    appSettingStore.noLayout = false\n\n    // Inertia.reload()\n\n}\n","import script from \"./CancelButton.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CancelButton.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n    <button\n        @click.prevent=\"cancel\"\n        class=\"ml-2 px-4 py-2 text-white bg-orange-600 hover:bg-orange-500 rounded-lg\"\n    >Cancel\n    </button>\n  </div>\n</template>\n\n<script setup>\nimport { Inertia } from \"@inertiajs/inertia\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useUserStore } from '@/Stores/UserStore'\n\nconst appSettingStore = useAppSettingStore()\nconst userStore = useUserStore()\n\nlet props = defineProps({\n  url: String\n})\n\nfunction cancel() {\n  if (appSettingStore.prevUrl) {\n    if (props.url) {\n      Inertia.visit(props.url)\n    } else {\n      Inertia.visit(appSettingStore.prevUrl)\n    }\n  } else {\n    if (props.url) {\n      Inertia.visit(props.url)\n    } else {\n      // Fallback if prevUrl is not available\n      let prevUrl = userStore.isCreator ? '/dashboard' : '/';\n      Inertia.visit(prevUrl);\n    }\n  }\n}\n</script>\n","import script from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"mx-4 my-4\">\n    <div class=\"alert alert-info mt-4\"\n         v-if=\"props.flash.message\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" class=\"stroke-current shrink-0 w-6 h-6\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n      </svg>\n      <span>{{ props.flash.message }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-success mt-4 mx-3\"\n         v-if=\"props.flash.success\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.success }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-warning mt-4 mx-3\"\n         v-if=\"props.flash.warning\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"/>\n      </svg>\n      <span>{{ props.flash.warning }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-error mt-4 mx-3\"\n         v-if=\"props.flash.error\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.error }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n  </div>\n\n</template>\n\n<script setup>\nimport { Inertia } from \"@inertiajs/inertia\"\nimport { computed } from \"vue\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\n\nconst appSettingStore = useAppSettingStore()\n\nappSettingStore.showFlashMessage = true\n\nlet props = defineProps({\n  flash: Object,\n\n})\n\nconst messageType = computed(() => ({\n  'text-green-700 bg-green-100 dark:bg-green-200 dark:text-green-800': props.flash.success,\n  'text-blue-700 bg-blue-100 dark:bg-blue-200 dark:text-blue-800': props.flash.message,\n  'text-orange-700 bg-orange-100 dark:bg-orange-200 dark:text-orange-800': props.flash.warning,\n  'text-red-700 bg-red-100 dark:bg-red-200 dark:text-red-800': props.flash.error,\n}))\n\nconst clearFlashMessage = async () => {\n  await Inertia.post(route('flash.clear'));\n  Inertia.reload();\n};\n</script>\n","import script from \"./ValidationErrors.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ValidationErrors.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { computed } from 'vue';\nimport { usePage } from '@inertiajs/inertia-vue3';\n\nconst errors = computed(() => usePage().props.value.errors);\nconst hasErrors = computed(() => Object.keys(errors.value).length > 0);\n</script>\n\n<template>\n    <div v-if=\"hasErrors\">\n        <div class=\"font-medium text-red-600\">\n            Whoops! Something went wrong.\n        </div>\n\n        <ul class=\"mt-3 list-disc list-inside text-sm text-red-600\">\n            <li v-for=\"(error, key) in errors\" :key=\"key\">\n                {{ error }}\n            </li>\n        </ul>\n    </div>\n</template>\n","import script from \"./Create.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Create.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <Head title=\"Create User\"/>\n\n  <div class=\"place-self-center flex flex-col gap-y-3\">\n    <div id=\"topDiv\" class=\"bg-white dark:bg-gray-800 text-black dark:text-gray-50 p-5 mb-10\">\n\n      <Message v-if=\"appSettingStore.showFlashMessage\" :flash=\"$page.props.flash\"/>\n\n      <div class=\"flex justify-between mt-3 mb-6\">\n        <div class=\"text-3xl\">Create New User</div>\n        <div>\n          <CancelButton/>\n        </div>\n      </div>\n\n      <div\n          class=\"p-4 mb-4 text-sm text-orange700 bg-orange-100 rounded-lg dark:bg-orange-200 dark:text-orange-800\"\n          role=\"alert\"\n      >\n                <span class=\"font-medium\">\n                    New users will need to \"Reset Password\" then \"re-send the verification email\".\n                </span>\n      </div>\n\n      <form @submit.prevent=\"submit\" class=\"max-w-md mx-auto mt-8\">\n        <div class=\"mb-6\">\n          <label class=\"block mb-2 uppercase font-bold text-xs text-gray-700 dark:text-gray-50\"\n                 for=\"name\"\n          >\n            User Role\n          </label>\n          <select name=\"role\"\n                  id=\"role\"\n                  class=\"border border-gray-400 p-2 w-full rounded-lg block mb-2 uppercase font-bold text-xs text-gray-700\"\n                  v-model=\"form.role_id\"\n                  required\n          >\n            <option value=\"1\">Standard User</option>\n            <option value=\"4\">Creator</option>\n          </select>\n\n          <div v-if=\"form.errors.role_id\" v-text=\"form.errors.role_id\" class=\"text-xs text-red-600 mt-1\"></div>\n        </div>\n        <div class=\"mb-6\">\n          <label class=\"block mb-2 uppercase font-bold text-xs text-gray-700 dark:text-gray-50\"\n                 for=\"name\"\n          >\n            Name\n          </label>\n\n          <input v-model=\"form.name\"\n                 class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                 type=\"text\"\n                 name=\"name\"\n                 id=\"name\"\n                 required\n          >\n          <div v-if=\"form.errors.name\" v-text=\"form.errors.name\" class=\"text-xs text-red-600 mt-1\"></div>\n        </div>\n        <div class=\"mb-6\">\n          <label class=\"block mb-2 uppercase font-bold text-xs text-gray-700 dark:text-gray-50\"\n                 for=\"email\"\n          >\n            Email\n          </label>\n\n          <input v-model=\"form.email\"\n                 class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                 type=\"email\"\n                 name=\"email\"\n                 id=\"email\"\n                 required\n          >\n          <div v-if=\"form.errors.email\" v-text=\"form.errors.email\" class=\"text-xs text-red-600 mt-1\"></div>\n        </div>\n        <div class=\"mb-6 hidden\">\n          <label class=\"block mb-2 uppercase font-bold text-xs text-gray-700 dark:text-gray-50\"\n                 for=\"password\"\n          >\n            Password\n          </label>\n\n          <input v-model=\"form.password\"\n                 class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                 type=\"password\"\n                 name=\"password\"\n                 id=\"password\"\n                 hidden\n          >\n          <div v-if=\"form.errors.password\" v-text=\"form.errors.password\" class=\"text-xs text-red-600 mt-1\"></div>\n        </div>\n        <div class=\"mb-6\">\n          <label class=\"block mb-2 uppercase font-bold text-xs text-gray-700 dark:text-gray-50\"\n                 for=\"email\"\n          >\n            Phone Number\n          </label>\n\n          <input v-model=\"form.phone\"\n                 class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                 type=\"text\"\n                 name=\"phone\"\n                 id=\"phone\"\n          >\n          <div v-if=\"form.errors.phone\" v-text=\"form.errors.phone\" class=\"text-xs text-red-600 mt-1\"></div>\n        </div>\n\n        <div class=\"mb-6\">\n          <label class=\"block mb-2 uppercase font-bold text-xs text-gray-700 dark:text-gray-50\"\n                 for=\"email\"\n          >\n            Address\n          </label>\n\n          <input v-model=\"form.address1\"\n                 class=\"border border-gray-400 p-2 mb-2 w-full rounded-lg text-black\"\n                 type=\"text\"\n                 name=\"address1\"\n                 id=\"address1\"\n          >\n\n          <input v-model=\"form.address2\"\n                 class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                 type=\"text\"\n                 name=\"address2\"\n                 id=\"address2\"\n          >\n          <div v-if=\"form.errors.address1\" v-text=\"form.errors.address1\" class=\"text-xs text-red-600 mt-1\"></div>\n          <div v-if=\"form.errors.address2\" v-text=\"form.errors.address2\" class=\"text-xs text-red-600 mt-1\"></div>\n        </div>\n        <div class=\"mb-6\">\n          <label class=\"block mb-2 uppercase font-bold text-xs text-gray-700 dark:text-gray-50\"\n                 for=\"email\"\n          >\n            City\n          </label>\n\n          <input v-model=\"form.city\"\n                 class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                 type=\"text\"\n                 name=\"city\"\n                 id=\"city\"\n          >\n          <div v-if=\"form.errors.city\" v-text=\"form.errors.city\" class=\"text-xs text-red-600 mt-1\"></div>\n        </div>\n        <div class=\"mb-6\">\n          <label class=\"block mb-2 uppercase font-bold text-xs text-gray-700 dark:text-gray-50\"\n                 for=\"email\"\n          >\n            Province\n          </label>\n\n          <input v-model=\"form.province\"\n                 class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                 type=\"text\"\n                 name=\"province\"\n                 id=\"province\"\n          >\n          <div v-if=\"form.errors.province\" v-text=\"form.errors.province\" class=\"text-xs text-red-600 mt-1\"></div>\n        </div>\n        <div class=\"mb-6\">\n          <label class=\"block mb-2 uppercase font-bold text-xs text-gray-700 dark:text-gray-50\"\n                 for=\"email\"\n          >\n            Country\n          </label>\n\n          <input v-model=\"form.country\"\n                 class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                 type=\"text\"\n                 name=\"country\"\n                 id=\"country\"\n          >\n          <div v-if=\"form.errors.country\" v-text=\"form.errors.country\" class=\"text-xs text-red-600 mt-1\"></div>\n        </div>\n\n        <div class=\"mb-6\">\n          <label class=\"block mb-2 uppercase font-bold text-xs text-gray-700 dark:text-gray-50\"\n                 for=\"email\"\n          >\n            Postal Code\n          </label>\n\n          <input v-model=\"form.postalCode\"\n                 class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                 type=\"text\"\n                 name=\"postalCode\"\n                 id=\"postalCode\"\n          >\n          <div v-if=\"form.errors.postalCode\" v-text=\"form.errors.postalCode\" class=\"text-xs text-red-600 mt-1\"></div>\n        </div>\n\n        <div class=\"mb-6\">\n          <label class=\"block mb-2 uppercase font-bold text-xs text-gray-700 dark:text-gray-50\"\n                 for=\"text\"\n          >\n            Stripe ID\n          </label>\n\n          <input v-model=\"form.stripe_id\"\n                 class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                 type=\"text\"\n                 name=\"stripe_id\"\n                 id=\"stripe_id\"\n          >\n          <div v-if=\"form.errors.stripe_id\" v-text=\"form.errors.stripe_id\" class=\"text-xs text-red-600 mt-1\"></div>\n        </div>\n\n        <div class=\"flex justify-between mb-6\">\n          <JetValidationErrors class=\"mr-4\"/>\n          <button\n              type=\"submit\"\n              class=\"h-fit bg-blue-600 text-white rounded py-2 px-4 hover:bg-blue-400\"\n              :disabled=\"form.processing\"\n          >\n            Submit\n          </button>\n          <div @click=\"reset\" class=\"text-blue-600 text-sm cursor-pointer\">Reset</div>\n        </div>\n\n      </form>\n\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue'\nimport { useForm } from '@inertiajs/inertia-vue3'\nimport { usePageSetup } from '@/Utilities/PageSetup'\nimport { useVideoPlayerStore } from '@/Stores/VideoPlayerStore'\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\nimport Message from '@/Components/Global/Modals/Messages'\nimport JetValidationErrors from '@/Jetstream/ValidationErrors'\nimport CancelButton from '@/Components/Global/Buttons/CancelButton'\n\nusePageSetup('usersCreate')\n\nconst videoPlayerStore = useVideoPlayerStore()\nconst appSettingStore = useAppSettingStore()\n\nlet props = defineProps({\n  message: String,\n})\n\nlet form = useForm({\n  name: '',\n  email: '',\n  password: ' ',\n  role_id: '',\n  address1: null,\n  address2: null,\n  city: null,\n  province: null,\n  country: null,\n  postalCode: null,\n  phone: null,\n  stripe_id: null,\n})\n\n// const role = ref(null);\n\nfunction reset() {\n  form.reset()\n}\n\nconst submit = () => {\n  form.post(route('users.store'))\n}\n\nlet showMessage = ref(true)\n\n</script>\n"],"names":["usePageSetup","pageName","userStore","useUserStore","appSettingStore","useAppSettingStore","videoPlayerStore","useVideoPlayerStore","currentPage","showFlashMessage","pageIsHidden","isMobile","window","innerWidth","ott","makeVideoTopRight","pageReload","location","reload","Inertia","on","event","search","shouldScrollToTop","requestAnimationFrame","topDiv","document","getElementById","scrollIntoView","behavior","scrollTo","setPrevUrl","showOttButtons","noLayout","props","__props","cancel","prevUrl","url","visit","isCreator","clearFlashMessage","computed","flash","success","message","warning","error","_ref","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","post","route","stop","apply","arguments","errors","usePage","value","hasErrors","Object","keys","length","form","useForm","name","email","password","role_id","address1","address2","city","province","country","postalCode","phone","stripe_id","reset","submit","ref"],"sourceRoot":""}
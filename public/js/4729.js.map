{"version":3,"file":"js/4729.js","mappings":"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","sources":["webpack:///./resources/js/Utilities/PageSetup.js","webpack:///./resources/js/Components/Global/Buttons/BackButton.vue?5e87","webpack:///./resources/js/Components/Global/Buttons/BackButton.vue","webpack:///./resources/js/Components/Global/Modals/Messages.vue?dfe9","webpack:///./resources/js/Components/Global/Modals/Messages.vue","webpack:///./resources/js/Jetstream/ValidationErrors.vue?5fdc","webpack:///./resources/js/Jetstream/ValidationErrors.vue","webpack:///./resources/js/Pages/Users/{$id}/Edit.vue?30c3","webpack:///./resources/js/Pages/Users/{$id}/Edit.vue"],"sourcesContent":["import { onMounted } from 'vue'\nimport { useUserStore } from \"@/Stores/UserStore\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useVideoPlayerStore } from \"@/Stores/VideoPlayerStore\"\nimport { Inertia } from \"@inertiajs/inertia\"\n\nexport function usePageSetup(pageName) {\n    const userStore = useUserStore()\n    const appSettingStore = useAppSettingStore()\n    const videoPlayerStore = useVideoPlayerStore()\n\n    appSettingStore.currentPage = pageName\n    appSettingStore.showFlashMessage = true\n    appSettingStore.pageIsHidden = false\n\n    if (userStore.isMobile) {\n        appSettingStore.ott = 0\n    }\n\n    videoPlayerStore.makeVideoTopRight()\n\n    onMounted(() => {\n        // Check if the URL contains query strings\n        const hasQueryStrings = window.location.search !== '';\n\n        // Only scroll into view if there are no query strings\n        if (!hasQueryStrings) {\n            const topDiv = document.getElementById(\"topDiv\")\n            if (topDiv) {\n                topDiv.scrollIntoView()\n            }\n        }\n        // Only update if we're not already on this page to avoid overwriting with the current URL\n        appSettingStore.setPrevUrl()\n        Inertia.reload()\n\n    });\n}\n","import script from \"./BackButton.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./BackButton.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n    <button\n        @click.prevent=\"back\"\n        class=\"ml-2 px-4 py-2 text-white bg-blue-600 hover:bg-blue-500 rounded-lg\"\n    >Back\n    </button>\n  </div>\n</template>\n\n<script setup>\nimport { Inertia } from \"@inertiajs/inertia\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useUserStore } from '@/Stores/UserStore'\n\nconst appSettingStore = useAppSettingStore()\nconst userStore = useUserStore()\n\nfunction back() {\n  if (appSettingStore.prevUrl) {\n    Inertia.visit(appSettingStore.prevUrl)\n  } else {\n    // Fallback if prevUrl is not available\n    let prevUrl = userStore.isCreator ? '/dashboard' : '/';\n    Inertia.visit(prevUrl);\n  }\n}\n</script>\n","import script from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"mx-4 my-4\">\n    <div class=\"alert alert-info mt-4\"\n         v-if=\"props.flash.message\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" class=\"stroke-current shrink-0 w-6 h-6\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n      </svg>\n      <span>{{ props.flash.message }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-success mt-4 mx-3\"\n         v-if=\"props.flash.success\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.success }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-warning mt-4 mx-3\"\n         v-if=\"props.flash.warning\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"/>\n      </svg>\n      <span>{{ props.flash.warning }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-error mt-4 mx-3\"\n         v-if=\"props.flash.error\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.error }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n  </div>\n\n</template>\n\n<script setup>\nimport { Inertia } from \"@inertiajs/inertia\"\nimport { computed } from \"vue\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\n\nconst appSettingStore = useAppSettingStore()\n\nappSettingStore.showFlashMessage = true\n\nlet props = defineProps({\n  flash: Object,\n\n})\n\nconst messageType = computed(() => ({\n  'text-green-700 bg-green-100 dark:bg-green-200 dark:text-green-800': props.flash.success,\n  'text-blue-700 bg-blue-100 dark:bg-blue-200 dark:text-blue-800': props.flash.message,\n  'text-orange-700 bg-orange-100 dark:bg-orange-200 dark:text-orange-800': props.flash.warning,\n  'text-red-700 bg-red-100 dark:bg-red-200 dark:text-red-800': props.flash.error,\n}))\n\nconst clearFlashMessage = async () => {\n  await Inertia.post(route('flash.clear'));\n  Inertia.reload();\n};\n</script>\n","import script from \"./ValidationErrors.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ValidationErrors.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { computed } from 'vue';\nimport { usePage } from '@inertiajs/inertia-vue3';\n\nconst errors = computed(() => usePage().props.value.errors);\nconst hasErrors = computed(() => Object.keys(errors.value).length > 0);\n</script>\n\n<template>\n    <div v-if=\"hasErrors\">\n        <div class=\"font-medium text-red-600\">\n            Whoops! Something went wrong.\n        </div>\n\n        <ul class=\"mt-3 list-disc list-inside text-sm text-red-600\">\n            <li v-for=\"(error, key) in errors\" :key=\"key\">\n                {{ error }}\n            </li>\n        </ul>\n    </div>\n</template>\n","import script from \"./Edit.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Edit.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <Head title=\"Edit User\"/>\n\n  <div class=\"place-self-center flex flex-col gap-y-3\">\n    <div id=\"topDiv\" class=\"light:bg-white light:text-black dark:bg-gray-800 dark:text-gray-50 p-5 mb-10\">\n\n      <Message v-if=\"appSettingStore.showFlashMessage\" :flash=\"$page.props.flash\"/>\n\n      <div class=\"flex justify-between mb-6\">\n\n        <div>\n          <div class=\"font-bold mb-4 text-red-700\">EDIT USER</div>\n          <h1 class=\"text-3xl\">\n            <Link :href=\"`/users/${props.userEdit.id}`\" class=\"text-red-700 font-bold uppercase\">\n              {{ props.userEdit.name }}\n            </Link>\n          </h1>\n        </div>\n        <div>\n          <BackButton/>\n        </div>\n\n      </div>\n\n      <div class=\"max-w-md mx-auto mt-8\">\n        <div class=\"flex flex-row justify-between\">\n          <div>\n            <div class=\"mb-6\"><img :src=\"props.userEdit.profile_photo_url\" class=\"rounded-full h-20 w-20 object-cover\"/>\n            </div>\n            <div class=\"\"><span class=\"text-xs uppercase\">User ID: </span><span\n                class=\"font-semibold\">{{ props.userEdit.id }}</span></div>\n            <div class=\"\"><span class=\"text-xs uppercase\">Subscription Status: </span><span\n                class=\"font-semibold\">{{ props.subscriptionStatus }}</span></div>\n            <div class=\"\" v-if=\"props.userEdit.role_id == 4\"><span class=\"text-xs uppercase\">Creator #: </span><span\n                class=\"font-semibold\">{{ props.userEdit.creatorNumber }}</span></div>\n          </div>\n          <div class=\"flex flex-col space-y-2 align-bottom\">\n            <button v-if=\"!isNewsPerson\"\n                    @click=\"addUserToNewsroom\"\n                    class=\"text-white font-semibold bg-yellow-600 hover:bg-yellow-800 hover:text-gray-100 rounded px-4 py-2 w-fit h-12\">\n              Add User to Newsroom\n            </button>\n            <button v-if=\"isNewsPerson\"\n                    @click=\"removeUserFromNewsroom\"\n                    class=\"text-white font-semibold bg-yellow-600 hover:bg-yellow-800 hover:text-gray-100 rounded px-4 py-2 w-fit h-12\">\n              Remove User from Newsroom\n            </button>\n            <button v-if=\"!isVip\"\n                    @click=\"addUserToVip\"\n                    class=\"text-white font-semibold bg-indigo-600 hover:bg-indigo-800 hover:text-gray-100 rounded px-4 py-2 w-fit h-12\">\n              Make User a VIP\n            </button>\n            <button v-if=\"isVip\"\n                    @click=\"removeUserFromVip\"\n                    class=\"text-white font-semibold bg-orange-600 hover:bg-orange-800 hover:text-gray-100 rounded px-4 py-2 w-fit h-12\">\n              Remove User from VIP\n            </button>\n            <button v-if=\"!hasSubscription\"\n                    @click=\"getUserSubscriptionFromStripe\"\n                    class=\"text-white font-semibold bg-blue-600 hover:bg-blue-800 hover:text-gray-100 rounded px-4 py-2 w-fit h-12\">\n              Get Subscription From Stripe\n            </button>\n          </div>\n        </div>\n\n        <form @submit.prevent=\"submit\" class=\"mt-6\">\n          <div class=\"mb-6\">\n            <label class=\"block mb-2 uppercase font-bold text-xs light:text-gray-700 dark:text-gray-200\"\n                   for=\"name\"\n            >\n              User Role\n            </label>\n            <select\n                class=\"border border-gray-400 p-2 w-full rounded-lg block mb-2 uppercase font-bold text-xs bg-white text-gray-700\"\n                v-model=\"form.role_id\"\n            >\n              <option value=\"1\">Standard User</option>\n              <option value=\"4\">Creator</option>\n            </select>\n\n            <div v-if=\"form.errors.role_id\" v-text=\"form.errors.role_id\" class=\"text-xs text-red-600 mt-1\"></div>\n          </div>\n          <div class=\"my-6\">\n            <label class=\"block mb-2 uppercase font-bold text-xs light:text-gray-700 dark:text-gray-200\"\n                   for=\"name\"\n            >\n              Name\n            </label>\n\n            <input v-model=\"form.name\"\n                   class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                   type=\"text\"\n                   name=\"name\"\n                   id=\"name\"\n                   required\n            >\n            <div v-if=\"form.errors.name\" v-text=\"form.errors.name\" class=\"text-xs text-red-600 mt-1\"></div>\n          </div>\n          <div class=\"mb-6\">\n            <label class=\"block mb-2 uppercase font-bold text-xs light:text-gray-700 dark:text-gray-200\"\n                   for=\"email\"\n            >\n              Email\n            </label>\n\n            <input v-model=\"form.email\"\n                   class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                   type=\"email\"\n                   name=\"email\"\n                   id=\"email\"\n                   required\n            >\n            <div v-if=\"form.errors.email\" v-text=\"form.errors.email\" class=\"text-xs text-red-600 mt-1\"></div>\n          </div>\n\n          <div class=\"mb-6\">\n            <label class=\"block mb-2 uppercase font-bold text-xs light:text-gray-700 dark:text-gray-200\"\n                   for=\"phone\"\n            >\n              Phone Number\n            </label>\n\n            <input v-model=\"form.phone\"\n                   class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                   type=\"text\"\n                   name=\"phone\"\n                   id=\"phone\"\n            >\n            <div v-if=\"form.errors.phone\" v-text=\"form.errors.phone\" class=\"text-xs text-red-600 mt-1\"></div>\n          </div>\n\n          <div class=\"mb-6\">\n            <label class=\"block mb-2 uppercase font-bold text-xs light:text-gray-700 dark:text-gray-200\"\n                   for=\"address1\"\n            >\n              Address 1\n            </label>\n\n            <input v-model=\"form.address1\"\n                   class=\"border border-gray-400 p-2 mb-2 w-full rounded-lg text-black\"\n                   type=\"text\"\n                   name=\"address1\"\n                   id=\"address1\"\n            >\n          </div>\n\n          <div class=\"mb-6\">\n            <label class=\"block mb-2 uppercase font-bold text-xs light:text-gray-700 dark:text-gray-200\"\n                   for=\"address2\"\n            >\n              Address 2\n            </label>\n\n            <input v-model=\"form.address2\"\n                   class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                   type=\"text\"\n                   name=\"address2\"\n                   id=\"address2\"\n            >\n            <div v-if=\"form.errors.address1\" v-text=\"form.errors.address1\" class=\"text-xs text-red-600 mt-1\"></div>\n            <div v-if=\"form.errors.address2\" v-text=\"form.errors.address2\" class=\"text-xs text-red-600 mt-1\"></div>\n          </div>\n          <div class=\"mb-6\">\n            <label class=\"block mb-2 uppercase font-bold text-xs light:text-gray-700 dark:text-gray-200\"\n                   for=\"city\"\n            >\n              City\n            </label>\n\n            <input v-model=\"form.city\"\n                   class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                   type=\"text\"\n                   name=\"city\"\n                   id=\"city\"\n            >\n            <div v-if=\"form.errors.city\" v-text=\"form.errors.city\" class=\"text-xs text-red-600 mt-1\"></div>\n          </div>\n          <div class=\"mb-6\">\n            <label class=\"block mb-2 uppercase font-bold text-xs light:text-gray-700 dark:text-gray-200\"\n                   for=\"province\"\n            >\n              Province\n            </label>\n\n            <input v-model=\"form.province\"\n                   class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                   type=\"text\"\n                   name=\"province\"\n                   id=\"province\"\n            >\n            <div v-if=\"form.errors.province\" v-text=\"form.errors.province\" class=\"text-xs text-red-600 mt-1\"></div>\n          </div>\n          <div class=\"mb-6\">\n            <label class=\"block mb-2 uppercase font-bold text-xs light:text-gray-700 dark:text-gray-200\"\n                   for=\"country\"\n            >\n              Country\n            </label>\n\n            <input v-model=\"form.country\"\n                   class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                   type=\"text\"\n                   name=\"country\"\n                   id=\"country\"\n            >\n            <div v-if=\"form.errors.country\" v-text=\"form.errors.country\" class=\"text-xs text-red-600 mt-1\"></div>\n          </div>\n\n          <div class=\"mb-6\">\n            <label class=\"block mb-2 uppercase font-bold text-xs light:text-gray-700 dark:text-gray-200\"\n                   for=\"postal_code\"\n            >\n              Postal Code\n            </label>\n\n            <input v-model=\"form.postalCode\"\n                   class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                   type=\"text\"\n                   name=\"postalCode\"\n                   id=\"postalCode\"\n            >\n            <div v-if=\"form.errors.postalCode\" v-text=\"form.errors.postalCode\" class=\"text-xs text-red-600 mt-1\"></div>\n          </div>\n\n          <div class=\"mb-6\">\n            <label class=\"block mb-2 uppercase font-bold text-xs light:text-gray-700 dark:text-gray-50\"\n                   for=\"text\"\n            >\n              Stripe ID\n            </label>\n\n            <input v-model=\"form.stripe_id\"\n                   class=\"border border-gray-400 p-2 w-full rounded-lg text-black\"\n                   type=\"text\"\n                   name=\"stripe_id\"\n                   id=\"stripe_id\"\n            >\n            <div v-if=\"form.errors.stripe_id\" v-text=\"form.errors.stripe_id\" class=\"text-xs text-red-600 mt-1\"></div>\n          </div>\n\n          <div class=\"flex justify-between mb-6\">\n            <JetValidationErrors class=\"mr-4\"/>\n            <button\n                type=\"submit\"\n                class=\"h-fit bg-blue-600 text-white rounded py-2 px-4 hover:bg-blue-500\"\n                :disabled=\"form.processing\"\n            >\n              Save\n            </button>\n            <div v-if=\"form.errors\" v-text=\"form.errors\" class=\"text-xs text-red-600 mt-1\"></div>\n          </div>\n        </form>\n      </div>\n\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { useForm, usePage } from '@inertiajs/inertia-vue3'\nimport { Inertia } from '@inertiajs/inertia'\nimport { usePageSetup } from '@/Utilities/PageSetup'\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\nimport Message from '@/Components/Global/Modals/Messages'\nimport JetValidationErrors from '@/Jetstream/ValidationErrors'\nimport BackButton from '@/Components/Global/Buttons/BackButton'\n\nusePageSetup('usersEdit')\n\nconst appSettingStore = useAppSettingStore()\n\nlet props = defineProps({\n  userEdit: Object,\n  isNewsPerson: Boolean,\n  isVip: Boolean,\n  isSubscriber: Boolean,\n  hasSubscription: null,\n  subscriptionStatus: String,\n})\n\nlet form = useForm({\n  id: props.userEdit.id,\n  name: props.userEdit.name,\n  email: props.userEdit.email,\n  role_id: props.userEdit.role_id,\n  address1: props.userEdit.address1,\n  address2: props.userEdit.address2,\n  city: props.userEdit.city,\n  province: props.userEdit.province,\n  country: props.userEdit.country,\n  postalCode: props.userEdit.postalCode,\n  phone: props.userEdit.phone,\n  stripe_id: props.userEdit.stripe_id,\n})\n\nfunction reset() {\n  form.reset()\n}\n\nlet submit = () => {\n  form.put(route('users.update', props.userEdit.id))\n}\n\nfunction addUserToNewsroom() {\n  Inertia.visit('/newsroom/newsperson', {\n    method: 'post',\n    data: {\n      id: props.userEdit.id,\n      name: props.userEdit.name,\n    },\n  })\n}\n\nfunction removeUserFromNewsroom() {\n  if (confirm('Are you sure you want to remove this person from the news team?')) {\n    form.put(route('newsperson.destroy', props.userEdit.id))\n  }\n}\n\nfunction addUserToVip() {\n  if (confirm('Are you sure you want to add this person to VIP?')) {\n    form.put(route('user.vip.add', {'id': props.userEdit.id}))\n  }\n  // Inertia.reload({\n  //     only: [\"userEdit\", \"isVip\"],\n  // })\n}\n\nfunction removeUserFromVip() {\n  if (confirm('Are you sure you want to remove this person from VIP?')) {\n    form.put(route('user.vip.remove', props.userEdit.id))\n  }\n}\n\nfunction getUserSubscriptionFromStripe() {\n  if (!props.userEdit.stripe_id && !form.stripe_id) {\n    alert('User must have a Stripe ID')\n  } else if (!props.userEdit.stripe_id && form.stripe_id) {\n    alert('Please save the Stripe ID before getting the subscription.')\n  } else if (confirm('Are you sure you want to retrieve the subscription from Stripe? This will take a minute.')) {\n    Inertia.post(route('getUserSubscriptionsFromStripe', {'id': form.id}))\n  }\n}\n\nfunction back() {\n  let urlPrev = usePage().props.value.urlPrev\n  if (urlPrev !== 'empty') {\n    Inertia.visit(urlPrev)\n  }\n}\n\n</script>\n"],"names":["usePageSetup","pageName","userStore","useUserStore","appSettingStore","useAppSettingStore","videoPlayerStore","useVideoPlayerStore","currentPage","showFlashMessage","pageIsHidden","isMobile","ott","makeVideoTopRight","onMounted","window","location","search","topDiv","document","getElementById","scrollIntoView","setPrevUrl","Inertia","reload","back","prevUrl","visit","isCreator","props","__props","clearFlashMessage","computed","flash","success","message","warning","error","_ref","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","post","route","stop","apply","arguments","errors","usePage","value","hasErrors","Object","keys","length","form","useForm","id","userEdit","name","email","role_id","address1","address2","city","province","country","postalCode","phone","stripe_id","submit","put","addUserToNewsroom","method","data","removeUserFromNewsroom","confirm","addUserToVip","removeUserFromVip","getUserSubscriptionFromStripe","alert"],"sourceRoot":""}
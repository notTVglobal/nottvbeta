"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[3049,5819],{95819:(e,o,n)=>{n.r(o),n.d(o,{useUploadStore:()=>r});var d=n(69876),i=function(){return{videoId:null,uploadStatus:"idle"}},r=(0,d.Q_)("uploadStore",{state:i,actions:{reset:function(){Object.assign(this,{videoId:null,uploadStatus:"idle"})},setVideoId:function(e){this.videoId=e},setUploadStatus:function(e){this.uploadStatus=e}}})},51330:(e,o,n)=>{n.d(o,{Z:()=>s});var d=n(94015),i=n.n(d),r=n(23645),t=n.n(r)()(i());t.push([e.id,".dropzone[data-v-21826cbb]{align-items:center;background-color:#fce4bb;border:2px dashed #000;display:flex;flex-direction:column;justify-content:center;row-gap:16px;transition:all .3s ease}label[data-v-21826cbb]{padding:8px 12px;transition:all .3s ease}.active-dropzone[data-v-21826cbb],label[data-v-21826cbb]{background-color:#4bb1b1;color:#fff}.active-dropzone[data-v-21826cbb]{border-color:#fff}.active-dropzone label[data-v-21826cbb]{background-color:#fff;color:#4bb1b1}","",{version:3,sources:["webpack://./resources/js/Components/Global/Uploaders/VideoUpload.vue"],names:[],mappings:"AA4KA,2BAIE,kBAAmB,CAGnB,wBAAyB,CADzB,sBAA0B,CAL1B,YAAa,CACb,qBAAsB,CACtB,sBAAuB,CAEvB,YAAa,CAGb,uBACF,CAEA,uBACE,gBAAiB,CAGjB,uBACF,CAEA,yDAJE,wBAAyB,CADzB,UASF,CAJA,kCAEE,iBAEF,CAEA,wCACE,qBAAsB,CACtB,aACF",sourcesContent:['<template>\n  <div>\n\n    <progress v-show="userStore.uploadPercentage !== 0" max="100" :value="userStore.uploadPercentage" class="w-full"/>\n    <div v-show="userStore.uploadPercentage !== 0" class="w-full mb-4">{{ userStore.uploadPercentageRounded }}%</div>\n\n    <div v-show="uploadingMessage" class="mb-4 font-bold text-center">Please stay on this screen until upload is\n      complete.\n    </div>\n    <div v-show="uploadComplete" class="mb-4 font-bold text-center">Upload is complete. The video is now\n      processing.\n    </div>\n    <form v-show="!isHidden" id="videoUploadForm" action="/videoupload"\n          class="dropzone dropzoneFile border border-black rounded w-full h-48 max-w-md px-2 py-2 mb-6">\n      \x3c!--                            add input fields and a submit button to send data back to Laravel --\x3e\n      <input hidden name="movieId" v-model="form.movieId">\n      \x3c!--            <input hidden name="movieTrailerId" v-model="form.movieTrailerId">--\x3e\n      <input hidden name="showEpisodeId" v-model="form.showEpisodeId">\n    </form>\n\n  </div>\n</template>\n\n<script setup>\nimport { Inertia } from "@inertiajs/inertia"\nimport { onMounted, ref } from "vue"\nimport { useForm } from "@inertiajs/inertia-vue3"\nimport { Dropzone } from "dropzone"\nimport { useUserStore } from "@/Stores/UserStore"\nimport { useUploadStore } from "@/Stores/UploadStore"\n\nconst userStore = useUserStore()\nconst uploadStore = useUploadStore()\n\nlet uploadPercentage = ref(0)\nlet uploadingMessage = ref(false)\nlet uploadComplete = ref(false)\nlet isHidden = ref(false)\n\nconst emits = defineEmits([\'upload-start\', \'upload-finished\']);\n\nconst uploadCompleteMessage = () => {\n  uploadingMessage = false\n  uploadComplete = true\n}\n\nconst uploadStarted = () => {\n  uploadingMessage = true\n  emits(\'upload-start\');\n}\n\nfunction onUploadSuccess(videoId) {\n  emits(\'upload-finished\', videoId);\n  uploadStore.setVideoId(videoId);\n  uploadStore.setUploadStatus(\'processing\');\n}\n\nonMounted(() => {\n  // Make sure the element with the ID "videoUploadForm" is available in the DOM.\n  const videoUploadForm = document.getElementById(\'videoUploadForm\');\n\n  if (videoUploadForm) {\n    // Initialize Dropzone on the element.\n\n    // see options for Dropzone here: https://github.com/dropzone/dropzone/blob/main/src/options.js\n    let myDropzone = new Dropzone("#videoUploadForm", {\n      url: "/videoupload",\n      paramName: "file", // The name that will be used to transfer the file\n      maxFilesize: \'25 GB\', // MB\n      chunking: true,\n      chunkSize: 2 * 1024 * 1024,\n      parallelChunkUploads: false,\n      retryChunks: true,\n      retryChunksLimit: 10,\n      capture: null,\n      // can set the capture method as camera, microphone or video\n      // for mobile devices to skip the file selection and choose the\n      // recording device instead.\n      acceptedFiles: \'video/*, audio/*\',\n      uploadprogress: function (file, progress, bytesSent) {\n        userStore.uploadPercentage = progress;\n        console.log(userStore.uploadPercentage);\n        if (userStore.uploadPercentage !== 100) {\n          isHidden = true;\n        }\n      },\n      dictDefaultMessage: "Click here or Drop video here to upload <br>(Max video file size is 25GB)",\n      forceFallback: false, // for testing, set to true.\n      accept: function (file, done) {\n        if (file.name === "") {\n          done("Need a file.");\n        } else if (file.size > 25000000000) {\n          console.log(file.size)\n          done("Video file too big.");\n          alert(\'Video file must be smaller than 25GB\');\n        } else {\n          done();\n        }\n      }\n    });\n\n    myDropzone.on("addedfile", file => {\n      uploadStarted()\n      console.log(`File added: ${file.name}`);\n    });\n\n    myDropzone.on("success", function(file, response) {\n      // Assuming \'response\' contains the videoId after the file is uploaded\n      if (response.videoId) {\n        console.log(response.videoId)\n        const videoId = response.videoId;\n        if (videoId) {\n          onUploadSuccess(videoId);\n          // onUploadSuccess(response.videoId);\n        }\n      }\n    });\n\n    myDropzone.on("complete", function (file, response) {\n      uploadCompleteMessage()\n      myDropzone.removeFile(file);\n      userStore.uploadPercentage = 0;\n      isHidden = false;\n      Inertia.reload({\n        only: ["videos"],\n      });\n    });\n\n  } else {\n    console.error(\'Element with ID "videoUploadForm" not found in the DOM.\');\n  }\n})\n\nlet props = defineProps({\n  movieId: Number,\n  movieTrailerId: Number,\n  showEpisodeId: Number,\n})\n\nfunction setMovieOrEpisodeId() {\n  if (props.movieId !== null) {\n    userStore.uploadMovieId = props.mov;\n  } else if (props.movieTrailerId !== null) {\n    userStore.movieTrailerId = props.movieTrailerId;\n  } else if (props.showEpisodeId !== null) {\n    userStore.uploadShowEpisodeId = props.showEpisodeId;\n  }\n}\n\nsetMovieOrEpisodeId()\n\nlet form = useForm({\n  file: [],\n  // movieId: userStore.uploadMovieId,\n  movieId: props.movieId,\n  movieTrailerId: props.movieId,\n  showEpisodeId: props.showEpisodeId,\n});\n\n// let props = defineProps({\n//     filters: Object,\n//     can: Object,\n//     videos: Object,\n//     message: String,\n//     errors: ref(\'\'),\n//     isHidden: ref(false),\n//     done: ref(),\n// });\n\n<\/script>\n<style scoped>\n\n.dropzone {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  row-gap: 16px;\n  border: 2px dashed #000000;\n  background-color: #fce4bb;\n  transition: 0.3s ease all;\n}\n\nlabel {\n  padding: 8px 12px;\n  color: #fff;\n  background-color: #4bb1b1;\n  transition: 0.3s ease all;\n}\n\n.active-dropzone {\n  color: #fff;\n  border-color: #fff;\n  background-color: #4bb1b1;\n}\n\n.active-dropzone label {\n  background-color: #fff;\n  color: #4bb1b1;\n}\n\n/*6b7280*/\n/*4bb1b1*/\n\n</style>\n'],sourceRoot:""}]);const s=t},33049:(e,o,n)=>{n.r(o),n.d(o,{default:()=>I});var d=n(70821),i=n(9680),r=n(39038),t=n(94623),s=n(90771),l=n(95819),a=["value"],p={class:"mb-4 font-bold text-center"},u={class:"mb-4 font-bold text-center"},c={id:"videoUploadForm",action:"/videoupload",class:"dropzone dropzoneFile border border-black rounded w-full h-48 max-w-md px-2 py-2 mb-6"};const m={__name:"VideoUpload",props:{movieId:Number,movieTrailerId:Number,showEpisodeId:Number},emits:["upload-start","upload-finished"],setup:function(e,o){var n=o.emit,m=(0,s.useUserStore)(),f=(0,l.useUploadStore)(),v=((0,d.ref)(0),(0,d.ref)(!1)),b=(0,d.ref)(!1),h=(0,d.ref)(!1),I=n;(0,d.onMounted)((function(){if(document.getElementById("videoUploadForm")){var e=new t.f("#videoUploadForm",{url:"/videoupload",paramName:"file",maxFilesize:"25 GB",chunking:!0,chunkSize:2097152,parallelChunkUploads:!1,retryChunks:!0,retryChunksLimit:10,capture:null,acceptedFiles:"video/*, audio/*",uploadprogress:function(e,o,n){m.uploadPercentage=o,console.log(m.uploadPercentage),100!==m.uploadPercentage&&(h=!0)},dictDefaultMessage:"Click here or Drop video here to upload <br>(Max video file size is 25GB)",forceFallback:!1,accept:function(e,o){""===e.name?o("Need a file."):e.size>25e9?(console.log(e.size),o("Video file too big."),alert("Video file must be smaller than 25GB")):o()}});e.on("addedfile",(function(e){v=!0,I("upload-start"),console.log("File added: ".concat(e.name))})),e.on("success",(function(e,o){if(o.videoId){console.log(o.videoId);var n=o.videoId;n&&function(e){I("upload-finished",e),f.setVideoId(e),f.setUploadStatus("processing")}(n)}})),e.on("complete",(function(o,n){v=!1,b=!0,e.removeFile(o),m.uploadPercentage=0,h=!1,i.Inertia.reload({only:["videos"]})}))}else console.error('Element with ID "videoUploadForm" not found in the DOM.')}));var g=e;null!==g.movieId?m.uploadMovieId=g.mov:null!==g.movieTrailerId?m.movieTrailerId=g.movieTrailerId:null!==g.showEpisodeId&&(m.uploadShowEpisodeId=g.showEpisodeId);var w=(0,r.cI)({file:[],movieId:g.movieId,movieTrailerId:g.movieId,showEpisodeId:g.showEpisodeId});return function(e,o){return(0,d.openBlock)(),(0,d.createElementBlock)("div",null,[(0,d.withDirectives)((0,d.createElementVNode)("progress",{max:"100",value:(0,d.unref)(m).uploadPercentage,class:"w-full"},null,8,a),[[d.vShow,0!==(0,d.unref)(m).uploadPercentage]]),(0,d.withDirectives)((0,d.createElementVNode)("div",{class:"w-full mb-4"},(0,d.toDisplayString)((0,d.unref)(m).uploadPercentageRounded)+"%",513),[[d.vShow,0!==(0,d.unref)(m).uploadPercentage]]),(0,d.withDirectives)((0,d.createElementVNode)("div",p,"Please stay on this screen until upload is complete. ",512),[[d.vShow,(0,d.unref)(v)]]),(0,d.withDirectives)((0,d.createElementVNode)("div",u,"Upload is complete. The video is now processing. ",512),[[d.vShow,(0,d.unref)(b)]]),(0,d.withDirectives)((0,d.createElementVNode)("form",c,[(0,d.withDirectives)((0,d.createElementVNode)("input",{hidden:"",name:"movieId","onUpdate:modelValue":o[0]||(o[0]=function(e){return(0,d.unref)(w).movieId=e})},null,512),[[d.vModelText,(0,d.unref)(w).movieId]]),(0,d.withDirectives)((0,d.createElementVNode)("input",{hidden:"",name:"showEpisodeId","onUpdate:modelValue":o[1]||(o[1]=function(e){return(0,d.unref)(w).showEpisodeId=e})},null,512),[[d.vModelText,(0,d.unref)(w).showEpisodeId]])],512),[[d.vShow,!(0,d.unref)(h)]])])}}};var f=n(93379),v=n.n(f),b=n(51330),h={insert:"head",singleton:!1};v()(b.Z,h);b.Z.locals;const I=(0,n(83744).Z)(m,[["__scopeId","data-v-21826cbb"]])}}]);
//# sourceMappingURL=3049.js.map
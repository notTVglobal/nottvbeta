{"version":3,"file":"js/7320.js","mappings":"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","sources":["webpack:///./resources/js/Stores/GoLiveStore.js","webpack:///./resources/js/Stores/TeamStore.js","webpack:///./resources/js/Stores/VideoAuxPlayerStore.js","webpack:///./resources/js/Utilities/PageSetup.js","webpack:///./resources/js/Components/Global/GoLive/GoLive.vue?b28e","webpack:///./resources/js/Components/Pages/ShowEpisodes/Elements/EpisodeVideo.vue?3745","webpack:///./resources/js/Components/Pages/ShowEpisodes/Layout/ManageShowEpisodeTopBanner.vue?4950","webpack:///./resources/js/Components/Global/VideoPlayer/VideoJs/VideoJsAux.vue?cfd4","webpack:///./resources/js/Components/Global/VideoPlayer/VideoJs/VideoJsAux.vue","webpack:///./resources/js/Components/Global/MistStreams/MistStreamPushDestinationForm.vue?5647","webpack:///./resources/js/Components/Global/MistStreams/MistStreamPushDestinationForm.vue","webpack:///./resources/js/Components/Global/GoLive/GoLive.vue","webpack:///./resources/js/Components/Global/GoLive/GoLive.vue?3fb1","webpack:///./resources/js/Components/Global/GoLive/GoLive.vue?3856","webpack:///./resources/js/Components/Global/Modals/Messages.vue?dfe9","webpack:///./resources/js/Components/Global/Modals/Messages.vue","webpack:///./resources/js/Components/Global/Modals/PopUpModal.vue","webpack:///./resources/js/Components/Pages/ShowEpisodes/Elements/EpisodeVideo.vue?ed00","webpack:///./resources/js/Components/Pages/ShowEpisodes/Elements/EpisodeVideo.vue","webpack:///./resources/js/Components/Pages/ShowEpisodes/Elements/ManageShowEpisodeNoticeModals.vue","webpack:///./resources/js/Components/Pages/ShowEpisodes/Layout/EpisodeFooter.vue?56db","webpack:///./resources/js/Components/Pages/ShowEpisodes/Layout/EpisodeFooter.vue","webpack:///./resources/js/Components/Pages/ShowEpisodes/Elements/ManageShowEpisodeDescription.vue","webpack:///./resources/js/Components/Pages/ShowEpisodes/Elements/ManageShowEpisodeBonusContent.vue","webpack:///./resources/js/Components/Pages/ShowEpisodes/Elements/ManageShowEpisodeBonusContent.vue?6499","webpack:///./resources/js/Components/Pages/ShowEpisodes/Layout/ManageShowEpisodeTopBanner.vue","webpack:///./resources/js/Components/Pages/ShowEpisodes/Layout/ManageShowEpisodeTopBanner.vue?5b99","webpack:///./resources/js/Components/Pages/ShowEpisodes/Layout/ManageShowEpisodeTopBanner.vue?8bad","webpack:///./resources/js/Components/Pages/ShowEpisodes/Layout/EpisodeHeader.vue?cda5","webpack:///./resources/js/Components/Pages/ShowEpisodes/Layout/EpisodeHeader.vue","webpack:///./resources/js/Components/Pages/ShowEpisodes/Layout/ManageShowEpisodeHeader.vue?4691","webpack:///./resources/js/Components/Pages/ShowEpisodes/Layout/ManageShowEpisodeHeader.vue","webpack:///./resources/js/Components/Pages/ShowEpisodes/Elements/ManageShowEpisodeRundown.vue","webpack:///./resources/js/Components/Pages/ShowEpisodes/Elements/ManageShowEpisodeNotes.vue","webpack:///./resources/js/Pages/Shows/{$id}/Episodes/{$id}/Manage.vue?9504","webpack:///./resources/js/Pages/Shows/{$id}/Episodes/{$id}/Manage.vue"],"sourcesContent":["import { defineStore } from 'pinia'\n// import { useVideoAuxPlayerStore } from '@/Stores/VideoAuxPlayerStore'\n\nconst initialState = () => ({\n    displayEpisodeGoLiveComponent: false,\n    isEpisode: null,\n    episode: null,\n    preSelectedShowId: null,\n    selectedShowId: null,\n    // selectedShow: null, this uses the getter... set it up in the component as a computed property\n    shows: [], // Assuming you might want to store shows here too\n    streamKey: '', // Optional: Store the generated stream key if needed\n    isLive: false,\n    isRecording: false,\n    streamInfo: null,\n    rtmpUri: null,\n})\n\nexport const useGoLiveStore = defineStore('goLiveStore', {\n    state: initialState,\n    actions: {\n        reset() {\n            // Reset the store to its original state (clear all data)\n            Object.assign(this, initialState());\n        },\n        async fetchShows() {\n            try {\n                const response = await axios.get('/go-live/shows'); // Adjust the URL as needed\n                this.shows = response.data;\n            } catch (error) {\n                console.error('Failed to fetch shows:', error);\n                // Handle error appropriately\n            }\n        },\n        async generateStreamKey() {\n            if (!this.selectedShowId) {\n                console.error(\"No show selected\");\n                return; // Exit the function if no show is selected\n            }\n\n            try {\n                const response = await axios.post(`/go-live/shows/${this.selectedShowId}/stream-key`);\n                console.log(\"Stream key generated:\", response.data);\n                this.streamKey = response.data.streamKey; // Assuming the response includes the stream key\n            } catch (error) {\n                console.error(\"Error generating stream key:\", error.response ? error.response.data : error);\n            }\n        },\n        // setPreSelectedShowId(id) {\n        //     this.preSelectedShowId = id;\n        //     console.log('preSelectedShowId updated to:', this.preSelectedShowId);\n        // },\n        // Action to update selectedShowId and selectedShow based on selectedShowId\n        setSelectedShowId(showId) {\n            this.selectedShowId = showId;\n            this.updateSelectedShow(); // Call the method to update selectedShow based on new selectedShowId\n        },\n        // Method to find and update selectedShow based on selectedShowId\n        updateSelectedShow() {\n            this.selectedShow = this.shows.find(show => show.id === this.selectedShowId) || null;\n        },\n        goLive() {\n          this.isLive = true\n        },\n        stopLive() {\n            this.isLive = false\n        },\n        startRecording() {\n            this.isRecording = true\n        },\n        stopRecording() {\n            this.isRecording = false\n        },\n        async fetchStreamInfo(streamName) {\n            const encodedStreamName = encodeURIComponent(streamName);\n            try {\n                // const response = await fetch(`http://mist.nottv.io:8080/json_${encodedStreamName}.js`); // Replace with your URL\n                const response = await fetch(`/fetch-stream-info/${streamName}`); // Replace with your URL\n                if (!response.ok) throw new Error('Failed to fetch');\n                this.streamInfo = await response.json(); // Store the data in serverInfo\n            } catch (error) {\n                console.error('Error fetching server info:', error);\n            }\n        },\n        async fetchRtmpUri() {\n            try {\n                const response = await fetch(`/fetch-rtmp-uri`);\n                if (!response.ok) throw new Error('Failed to fetch');\n\n                // Parse the plain text body of the response\n                // Store the RTMP URI string in a Vue data property or similar\n                this.rtmpUri = await response.text();\n            } catch (error) {\n                console.error('Error fetching RTMP URI:', error);\n            }\n        },\n        clearStreamInfo() {\n            this.streamInfo = null\n        },\n        toggleDisplayEpisodeGoLiveComponent(episode) {\n            // const videoPlayerAuxStore = useVideoAuxPlayerStore()\n            // videoPlayerAuxStore.reset()\n            this.displayEpisodeGoLiveComponent = ! this.displayEpisodeGoLiveComponent;\n            this.isEpisode = !!this.displayEpisodeGoLiveComponent;\n            this.episode = episode\n            this.selectedShowId = this?.episode?.show_id\n\n        },\n        updateEpisode(episode) {\n            this.episode = episode;\n        },\n    },\n    getters: {\n        selectedShow: (state) => {\n            return state.shows.find(show => show.id === state.selectedShowId) || null;\n        },\n    },\n\n})\n","import {defineStore} from \"pinia\";\nimport {Inertia} from \"@inertiajs/inertia\";\n\nconst initialState = () => ({\n    id: 0,\n    name: '',\n    description: '',\n    slug: '',\n    totalSpots: '',\n    memberSpots: '',\n    teamCreator: [],\n    teamLeader: [],\n    members: [],\n    managers: [],\n    activeShow: [],\n    activeEpisode: [],\n    creators: [],\n    showModal: Boolean,\n    confirmDialog: false,\n    confirmManagerDialog: false,\n    selectedManagerName: '',\n    selectedManagerId: 0,\n    addManager: false,\n    removeManager: false,\n    deleteMemberName: '',\n    deleteMemberId: 0,\n    noteEdit: 0,\n    note: '',\n    saveNoteProcessing: Boolean,\n    // on the show episode manage page\n    // turn on the go live div\n    goLiveDisplay: false,\n    can: [],\n    openComponent: 'teamShows',\n})\n\nexport const useTeamStore = defineStore('teamStore', {\n    state: initialState,\n    actions: {\n        reset() {\n            // Reset the store to its original state (clear all data)\n            Object.assign(this, initialState());\n        },\n        // async fill() {\n        //     let r = await import('@/Json/team.json');\n        //     this.$state = r.default;\n        // },\n        setActiveTeam(team) {\n            this.id = team.id;\n            this.name = team.name;\n            this.description = team.description;\n            this.slug = team.slug;\n            this.totalSpots = team.totalSpots;\n            this.memberSpots = team.memberSpots;\n        },\n        setActiveShow(show) {\n            this.activeShow = show;\n        },\n        setActiveEpisode(episode) {\n            this.activeShow = episode;\n        },\n        // getCreators() {\n        //     Inertia.reload({ only: ['creators'] })\n        // },\n        deleteTeamMemberCancel() {\n            this.confirmDialog = false;\n        },\n        confirmTeamManagerCancel() {\n            this.confirmManagerDialog = false;\n        },\n        // loadTeamMembers(members){\n        //     this.members = members;\n        // }\n        deleteTeamMember() {\n            Inertia.visit(route('teams.removeTeamMember'), {\n                method: 'post',\n                data: {\n                    user_id: this.deleteMemberId,\n                    team_id: this.id,\n                    team_slug: this.slug\n                },\n            })\n        },\n        addTeamManager() {\n            Inertia.visit(route('teams.addTeamManager'), {\n                method: 'post',\n                data: {\n                    user_id: this.selectedManagerId,\n                    team_id: this.id,\n                    team_slug: this.slug\n                },\n            })\n            this.confirmManagerDialog = false;\n        },\n        removeTeamManager() {\n            Inertia.visit(route('teams.removeTeamManager'), {\n                method: 'post',\n                data: {\n                    user_id: this.selectedManagerId,\n                    team_id: this.id,\n                    team_slug: this.slug\n                },\n            })\n            this.confirmManagerDialog = false;\n        },\n        toggleGoLiveDisplay() {\n            this.goLiveDisplay = ! this.goLiveDisplay;\n        }\n    },\n\n    getters: {\n        spotsRemaining() {\n            if (this.totalSpots - this.memberSpots < 1){\n                return 0\n            }\n            return this.totalSpots - this.memberSpots;\n        },\n    }\n});\n\n\n// Another option for declaring specific data to return:\n// let data = r.default;\n//\n// import('@/Json/team.json').then(r => {\n// this.$patch({\n//     name: data.name,\n//     spots: data.spots,\n//     members: data.members\n// });\n// });\n","import { defineStore } from 'pinia'\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\nimport { useStreamStore } from '@/Stores/StreamStore'\nimport { useUserStore } from '@/Stores/UserStore'\nimport { useChannelStore } from '@/Stores/ChannelStore'\nimport { useShowStore } from '@/Stores/ShowStore'\nimport { useAudioStore } from '@/Stores/AudioStore'\nimport videojs from 'video.js'\nimport { usePage } from '@inertiajs/inertia-vue3'\nimport { nextTick } from 'vue'\nimport { useNotificationStore } from '@/Stores/NotificationStore'\n\nconst initialState = () => ({\n    player: null, // Video.js player instance\n    eventListenersAttached: false, // Track if listeners are attached\n    videoPlayerLoaded: false,\n    class: '',\n    videoContainerClass: '',\n    // ottClass: 'OttClose',\n    videoSourceIdSrc1: '',\n    videoSourceIdSrc2: '',\n    videoSourceIdSrc3: '',\n    videoSourceTypeSrc1: '',\n    videoSourceTypeSrc2: '',\n    videoSourceTypeSrc3: '',\n    firstPlayVideoSourceType: '',\n    firstPlayVideoSource: '',\n    key: '',\n    videoName: '',\n    videoSource: '',\n    videoSourceType: '',\n    videoPoster: '',\n    nextSource: '',\n    previousSource: '',\n    currentView: '',\n    currentChannelId: 0,\n    currentChannelName: '',\n    currentShow: {},\n    currentShowEpisode: {},\n    currentVideo: {},\n    hasVideo: false,\n    controls: true,\n    muted: true,\n    paused: true,\n    // videoCurrentTime: '',\n    currentTime: 0, // Current playback time in seconds\n    duration: 0, // Total video duration in seconds\n    formattedTime: '00:00 / 00:00', // Formatted time string\n    blue: false, // DO NOT REMOVE\n    videoIsYoutube: false,\n    videoUploadComplete: false,\n})\n\nexport const useVideoAuxPlayerStore = defineStore('videoAuxPlayerStore', {\n    state: initialState,\n    actions: {\n        reset() {\n            // Reset the store to its original state (clear all data)\n            Object.assign(this, initialState())\n        },\n\n        async getMistServerUri() {\n            try {\n                let response = await axios.get('/mist-server/uri')\n                this.mistServerUri = response.data\n            } catch (error) {\n                console.error(error)\n            }\n        },\n\n        // Initialize or update the player instance\n        setPlayer(playerInstance) {\n            this.player = playerInstance\n            this.initializePlayer().then(() => {\n                this.attachEventListeners() // Attach event listeners after initialization\n            }).catch(error => {\n                console.error('Error during video player initialization:', error)\n            })\n        },\n\n        // Initialize the player with necessary settings and start playback\n        async initializePlayer() {\n            if (!this.player) {\n                console.error('Video.js player is not initialized.')\n                return\n            }\n\n            await nextTick() // Ensure Vue's DOM updates are processed\n\n            // Perform any necessary audio context and node setup\n            await useAudioStore().ensureAudioContextAndNodesReady(this.player)\n\n            // Apply initial player settings\n            this.player.controls(false)\n            this.player.muted(this.muted)\n\n            // Attempt to start playback\n            this.player.ready(() => {\n                this.player.play().then(() => {\n                    console.log('Playback started successfully')\n                }).catch(error => {\n                    console.error('Error trying to play the video:', error)\n                    // Handle the error (e.g., showing a user-friendly message)\n                })\n            })\n        },\n\n        // Attach event listeners to the player\n        attachEventListeners() {\n            if (!this.player || this.eventListenersAttached) {\n                console.log('Event listeners are already attached or video player is not initialized.')\n                return\n            }\n\n            this.player.on('timeupdate', this.handleTimeUpdate)\n            this.player.on('fullscreenchange', this.handleFullscreenChange)\n            this.player.on('play', this.handlePlay)\n            this.player.on('pause', this.handlePause)\n            this.player.on('error', this.handleError)\n\n            this.eventListenersAttached = true\n            console.log('Event listeners attached.')\n        },\n\n        // Detach event listeners from the player\n        detachEventListeners() {\n            if (!this.player || !this.eventListenersAttached) {\n                console.log('Event listeners are already detached or video player is not initialized.')\n                return\n            }\n\n            useAudioStore().stopAudioLevelMonitoring()\n            this.player.off('timeupdate', this.handleTimeUpdate)\n            this.player.off('fullscreenchange', this.handleFullscreenChange)\n            this.player.off('play', this.handlePlay)\n            this.player.off('pause', this.handlePause)\n            this.player.off('error', this.handleError)\n\n            this.eventListenersAttached = false\n            console.log('Event listeners detached.')\n        },\n\n        // Dispose of the player and perform cleanup\n        disposePlayer() {\n            if (!this.player) {\n                console.error('Video player is not initialized.')\n                return\n            }\n\n            this.detachEventListeners() // Detach event listeners if attached\n            this.player.dispose() // Dispose of the player instance\n            this.player = null // Reset the player state\n\n            // Optionally, stop audio level monitoring if linked to the player lifecycle\n            // const audioStore = useAudioStore();\n            // audioStore.stopAudioLevelMonitoring();\n\n            console.log('Video player disposed and cleaned up.')\n        },\n\n        // New method to prepare for a new video source\n        prepareForNewVideoSource(source) {\n            console.log('Preparing for new video source')\n\n            // Example: Clear any existing channel or video-specific state\n            useChannelStore().clearChannel()\n\n            // Reset or cleanup any existing video playback, if necessary\n            // this.resetPlayback();\n\n            // Load and play the new video source\n            this.loadNewVideo(source)\n        },\n\n        resetPlayback() {\n            if (this.player) {\n                this.player.pause()\n                this.player.muted(true)\n                this.player.currentTime(0) // Optionally reset the time\n                // Further cleanup logic here, if necessary\n                this.detachEventListeners() // Detach event listeners if attached\n            }\n        },\n\n        // Event handlers\n        handleTimeUpdate() {\n            // console.log('Handling timeupdate...');\n            // Implement your logic\n            this.currentTime = this.player.currentTime()\n            this.duration = this.player.duration()\n            const progressPercentage = (this.currentTime / this.duration) * 100\n            this.formattedTime = `${this.formatDuration(this.currentTime)} / ${this.formatDuration(this.duration)}`\n\n            // Update UI elements or emit events as needed\n            // Note: Direct manipulation of the DOM or component refs from the store is not recommended\n\n        },\n        // for the handleTimeUpdate eventHandler\n        formatDuration(durationInSeconds) {\n            const hours = Math.floor(durationInSeconds / 3600)\n            const minutes = Math.floor((durationInSeconds % 3600) / 60)\n            const seconds = Math.floor(durationInSeconds % 60)\n\n            const parts = [hours, minutes, seconds].map(part => part.toString().padStart(2, '0'))\n            return parts.join(':')\n        },\n        handleFullscreenChange() {\n            console.log('Handling fullscreenchange...')\n            // Implement your logic\n            this.player?.on('fullscreenchange', () => {\n                if (this.player.isFullscreen()) {\n                    // Video is entering fullscreen mode\n                    // You can add custom behavior for entering fullscreen here if needed\n                } else {\n                    // Video is exiting fullscreen mode\n                    // Check if the video was playing before entering fullscreen\n                    if (this.player.paused() === false) {\n                        // Resume playback after exiting fullscreen\n                        this.player.play()\n                    }\n                }\n            })\n        },\n        handlePlay() {\n            console.log('Handling play...')\n            // Implement your logic\n            this.player?.on('play', () => {\n                this.paused = false\n            })\n        },\n        handlePause() {\n            console.log('Handling pause...')\n            // Implement your logic\n            this.player?.on('pause', () => {\n                this.paused = true\n            })\n        },\n        handleError() {\n            console.log('Handling error...')\n            // Implement your logic\n            this.player?.on('error', function () {\n                const error = this.player.error()\n                console.error('Video.js Error:', error.code, error.message)\n            })\n        },\n        makeBlue() {\n            // for testing. DO NOT REMOVE.\n            this.blue = true\n        },\n        // Apparently this loadFirstPlay isn't being used...\n        // loadFirstPlay() {\n        //     const {props} = usePage()\n        //     let videoJs = videojs('aux-player')\n        //     const type = props.firstPlayVideoSourceType\n        //     const src = props.firstPlayVideoSource\n        //     videoJs.ready(() => {\n        //         videoJs.src({src, type})\n        //         videoJs.play().then(() => {\n        //             console.log('Playback started successfully')\n        //         }).catch(error => {\n        //             console.error('Error trying to play the video:', error)\n        //             // Handle the error (e.g., showing a user-friendly message)\n        //         })\n        //     })\n        //     console.log(type)\n        //     console.log(src)\n        // },\n        // Toggle mute state\n        toggleMute() {\n            if (this.muted) {\n                this.unMute()\n            } else {\n                this.mute()\n            }\n        },\n        // Mute the video\n        mute() {\n            if (this.player) {\n                this.player.muted(true)\n                this.muted = true\n                console.log('Video muted')\n            }\n        },\n        // Unmute the video\n        unMute() {\n            // const audioStore = useAudioStore()\n\n            if (this.player) {\n                // Prepare audio setup for when it's unmuted\n                // audioStore.userInteractionForAudio()\n\n                // Optionally, if fadeInAudioFromMuted is a gradual process,\n                // ensure this.player.muted(false) is called within that function.\n                // audioStore.fadeInAudioFromMuted()\n\n                this.player.muted(false)\n                this.muted = false\n                console.log('Video muted')\n            }\n        },\n        togglePlay() {\n            let videoJs = videojs('aux-player')\n\n            if (this.paused) {\n                videoJs.play()\n            } else {\n                videoJs.pause()\n            }\n        },\n        load() {\n            let videoJs = videojs('aux-player')\n            videoJs.load()\n        },\n        loadNewLiveSource(source, sourceType) {\n            let videoJs = videojs('aux-player')\n            let fullSourceUrl = this.mistServerUri + '/hls/' + source + '/index.m3u8'\n            videoJs.src({'src': fullSourceUrl, 'type': sourceType});\n            videoJs.play()\n        },\n        pause() {\n            let videoJs = videojs('aux-player')\n            videoJs.controls(false)\n            videoJs.pause()\n            this.paused = true\n        },\n        play() {\n            let videoJs = videojs('aux-player')\n\n            videoJs.play()\n            videoJs.controls(false)\n            this.paused = false\n        },\n        // next not built yet\n        next() {\n            let videoJs = videojs('aux-player')\n            videoJs.controls(false)\n            videoJs.src(this.nextSource)\n        },\n        // back not built yet\n        back() {\n            let videoJs = videojs('aux-player')\n            videoJs.controls(false)\n            videoJs.src(this.previousSource)\n        },\n        fullscreen() {\n            let videoJs = videojs('aux-player')\n            videoJs.controls(false)\n            // videoJs.fullscreen(this.previousSource)\n            videoJs.requestFullscreen()\n        },\n        getVideoCurrentTime() {\n            let videoJs = videojs('aux-player')\n            videoJs.controls(false)\n            this.videoCurrentTime = videoJs.currentTime\n        },\n\n\n        // This playNewVideo was created to access the audioContext\n        // which our audio compressor uses. This is new as of 2/2/2024\n        // ~ tec21\n\n        // playNewVideo(source) {\n        //     useChannelStore().clearChannel() // Reset or clear channel store\n        //     const videoJs = videojs('aux-player')\n        //     let videoSrc, videoSourceType\n        //     // Determine the source type and construct the source URL if necessary\n        //     if (source.mediaType === 'externalVideo') {\n        //         videoSrc = source.video_url // Direct URL to the video\n        //         videoSourceType = source.type // MIME type, e.g., 'video/youtube', 'video/mp4'\n        //     } else {\n        //         // Construct file path for internal videos\n        //         videoSrc = `${source.cdn_endpoint}${source.cloud_folder}${source.folder}/${source.file_name}`\n        //         videoSourceType = source.type // MIME type, typically 'video/mp4' for file-based sources\n        //     }\n        //     this.resumeAudioContextIfNeeded()\n        //     videoJs.src({src: videoSrc, type: videoSourceType})\n        //     videoJs.muted(false)\n        // },\n\n        // getSourceDetails(source) {\n        //     let videoSrc = source.video_url; // Directly access the video URL\n        //\n        //     // Default to 'video/mp4' if type is falsy ('', null, undefined, etc.)\n        //     let videoSourceType = source.type || 'video/mp4'\n        //\n        //     // Determine the mediaType and construct the source URL if necessary\n        //     if (source.mediaType === 'externalVideo') {\n        //         videoSrc = source.video_url // Direct URL to the video\n        //     } else {\n        //         // Internal video: construct the path, ensuring the file name is encoded\n        //         let encodedFileName = encodeURIComponent(source.file_name);\n        //         console.log(encodedFileName)\n        //         videoSrc = `${source.cdn_endpoint}${source.cloud_folder}${source.folder}/${encodedFileName}`\n        //     }\n        //     // Logic to determine videoSrc and videoSourceType\n        //     console.log(`Video Source: ${videoSrc}, Type: ${videoSourceType}`);\n        //     return { videoSrc, videoSourceType } // Return as an object\n        // },\n\n\n        getSourceDetails(source) {\n            let videoSrc, videoSourceType\n\n            console.log('getSourceDetails called with source:', source);\n\n            // Default to 'video/mp4' if type is not specified or is empty\n            videoSourceType = source.type || 'video/mp4'\n            console.log(`Determined Video Source Type: ${videoSourceType}`);\n\n            if (source.mediaType === 'externalVideo') {\n                // For external videos, use the URL as provided without encoding\n                videoSrc = source.video_url\n                console.log('Using external video source:', videoSrc);\n            } else {\n                console.log('CDN Endpoint:', source.cdn_endpoint);\n                console.log('Cloud Folder:', source.cloud_folder);\n                console.log('Folder:', source.folder);\n                console.log('File Name:', source.file_name);\n                // For internal videos, construct the URL from its components\n                // Here, we assume the cdn_endpoint, cloud_folder, and folder are correctly formatted\n                // and do not require encoding. Only the file_name might need encoding.\n                const basePath = `${source.cdn_endpoint}${source.cloud_folder}${source.folder}/`\n                // const encodedFileName = encodeURIComponent(source.file_name);\n                const fileName = source.file_name\n                videoSrc = basePath + fileName\n                console.log('Constructed internal video source:', videoSrc);\n                // If your server or CDN is configured to handle spaces in URLs without %20 encoding\n                // or if the original working URLs did not use standard URL encoding,\n                // you might adjust the encoding strategy here.\n                // For example, to replace spaces with %20 but leave other characters as-is:\n                // const fileNameForUrl = source.file_name.replace(/ /g, '%20');\n                // videoSrc = basePath + fileNameForUrl;\n            }\n\n            console.log(`Final Constructed Video Source: ${videoSrc}, Type: ${videoSourceType}`);\n            return {videoSrc, videoSourceType}\n        },\n\n\n        loadNewVideo(source) {\n            try {\n                let videoJs = videojs('aux-player');\n                console.log('LOAD NEW VIDEO');\n                const audioStore = useAudioStore();\n                // Correctly destructure the returned object to get videoSrc and videoSourceType\n                const {videoSrc, videoSourceType} = this.getSourceDetails(source);\n\n                // Example: Stopping and cleaning up the current video and audio setup\n                if (videoJs) {\n                    videoJs.src({'src': videoSrc, 'type': videoSourceType});\n\n                    videoJs.ready(() => {\n                        // ensureAudioContextAndNodesReady does the following:\n                        // 1. Resumes AudioContext if suspended.\n                        // 2. (Re)connects MediaElementSource from the video element to AudioContext.\n                        audioStore.deferAudioSetup = false;\n                        audioStore.ensureAudioContextAndNodesReady(videoJs).then(() => {\n                            // Only attempt to play the video after ensuring the AudioContext is ready\n                            videoJs.play().catch(error => {\n                                useNotificationStore().setGeneralServiceNotification('Error', 'Playback initiation error: ' + error)\n                                console.error('Playback initiation error: ', error);\n                            });\n\n                            // Consider toggling mute based on the user's preference or previous state\n                            videoJs.muted(false);\n                            this.muted = false;\n                        });\n                    });\n                }\n            } catch (error) {\n                // Log the error or perform any other error handling\n                useNotificationStore().setGeneralServiceNotification('Error', 'Error loading new video: ' + error)\n                console.error('Error loading new video: ', error);\n            }\n        },\n\n        // loadNewVideo(source) {\n        //     console.log('LOAD NEW VIDEO TTTTTTTTTTTTTTTTTTTTTTTTTS');\n        //     console.log('LOAD NEW VIDEO initiated with source:', source);\n        //     const audioStore = useAudioStore();\n        //     this.unMute();\n        //     // Destructure the returned object to get videoSrc and videoSourceType\n        //     const { videoSrc, videoSourceType } = this.getSourceDetails(source);\n        //     console.log(`Video source details received: Src - ${videoSrc}, Type - ${videoSourceType}`);\n        //\n        //     // Ensure you're using the same player instance (`videoJs` in this context) for consistency\n        //     let videoJs = videojs('aux-player'); // Ensure this ID matches your video player element\n        //     console.log('Video.js player instance created or retrieved.');\n        //\n        //     // Stop and clean up the current video and audio setup if necessary\n        //     videoJs.ready(() => {\n        //         console.log('Video.js player is ready.');\n        //         videoJs.src({ 'src': videoSrc, 'type': videoSourceType });\n        //         console.log(`Video source set: ${videoSrc} of type ${videoSourceType}`);\n        //\n        //         // Ensure AudioContext and nodes are ready\n        //         audioStore.ensureAudioContextAndNodesReady(videoJs).then(() => {\n        //             console.log('Audio context and nodes are ready. Attempting to play video.');\n        //\n        //             videoJs.play().then(() => {\n        //                 console.log('Video playback started successfully.');\n        //             }).catch(error => {\n        //                 console.error('Playback initiation error:', error);\n        //             });\n        //             // Attempt to play the video after ensuring the AudioContext is ready\n        //             // videoJs.play().catch(error => {\n        //             //     console.error('Playback initiation error:', error);\n        //             // });\n        //\n        //             // Apply the unMute logic from loadMistStreamVideo to ensure audio is correctly configured\n        //             this.unMute();\n        //             console.log('Audio unmuted.');\n        //             this.paused = false;\n        //             console.log('Paused flag set to false.');\n        //         }).catch(error => {\n        //             console.error('Error ensuring audio context and nodes are ready:', error);\n        //         });\n        //     });\n        // },\n\n        playNewVideo() {\n            console.log('PLAY NEW VIDEO')\n            if (this.player) {\n                // Wait for the video to be ready before playing\n                this.player.ready(() => {\n                    this.player.play()\n                    // Assuming you want to unmute here; check if this aligns with user interaction policies\n                    this.player.muted(false)\n                    this.muted = false\n                })\n            }\n        },\n\n\n// load video from different types of sources:\n// Url\n// YouTube\n// EmbedCode\n// Mist\n// File\n        loadNewSourceFromYouTube(source) {\n            this.videoIsYoutube = true\n            useChannelStore().clearChannel()\n            let videoJs = videojs('aux-player')\n            this.videoSource = source\n            this.videoSourceType = 'video/youtube'\n            videoJs.src({'src': this.videoSource, 'type': this.videoSourceType})\n            videoJs.controls(false)\n            this.unMute()\n            this.paused = false\n        },\n        loadNewLiveSourceFromRumble(source) {\n            this.videoIsYoutube = true\n            useChannelStore().clearChannel()\n            let videoJs = videojs('aux-player')\n            this.videoSource = source\n            this.videoSourceType = 'application/x-mpegURL'\n            videoJs.src({'src': this.videoSource, 'type': this.videoSourceType})\n            videoJs.controls(false)\n            this.unMute()\n            this.paused = false\n        },\n        loadNewSourceFromUrl(source) {\n            try {\n                this.videoIsYoutube = false;\n                useChannelStore().clearChannel();\n                let videoJs = videojs('aux-player');\n\n                if (!source.video_url || !source.type) {\n                    useNotificationStore().setGeneralServiceNotification('Error', 'Invalid video source.')\n                    throw new Error(\"Invalid video source.\");\n                }\n\n                this.videoSource = source.video_url;\n                this.videoSourceType = source.type;\n                videoJs.src({'src': source.video_url, 'type': source.type});\n\n                this.unMute();\n                this.paused = false;\n            } catch (error) {\n                useNotificationStore().setGeneralServiceNotification('Error', 'Failed to load new source: ' + error)\n                console.error(\"Failed to load new source:\", error);\n                throw error; // Re-throw the error to be caught by the caller\n            }\n        },\n        loadNewSourceFromMist(source) {\n            this.videoIsYoutube = false\n            let videoJs = videojs('aux-player')\n            let filePath = 'https://mist.not.tv/hls/'\n            this.videoSource = filePath + source + '/index.m3u8'\n            this.videoSourceType = 'application/x-mpegURL'\n            videoJs.src({'src': this.videoSource, 'type': this.videoSourceType})\n            this.unMute()\n            this.paused = false\n        },\n        loadNewSourceFromFile(source) {\n            this.videoIsYoutube = false\n            useChannelStore().clearChannel()\n            let videoJs = videojs('aux-player')\n            let filePath = source.cdn_endpoint + source.cloud_folder + source.folder + '/'\n            this.videoSource = source.file_name\n            this.videoSourceType = source.type\n            videoJs.src({'src': filePath + this.videoSource, 'type': this.videoSourceType})\n            this.unMute()\n            this.paused = false\n        },\n\n        // The new load video functions (2024-02-09 tec21 and ChatGPT)\n        loadExternalSourceVideo() {\n\n        },\n        loadPlaylistVideos() {\n\n        },\n        async loadMistStreamVideo(mistStream) {\n            // console.log('Loading Mist Stream Video for:', mistStream.name); // Log which Mist Stream is being loaded\n            // This mistServerUri comes from appSettings\n            if (!this.mistServerUri) {\n                console.log('Mist Server URI not set, fetching...') // Log fetching attempt\n                await this.getMistServerUri()\n            }\n            if (this.mistServerUri) {\n                // console.log('Mist Server URI:', this.mistServerUri); // Log the URI to confirm it's fetched\n                let basePath = this.mistServerUri\n                this.videoSource = basePath + 'hls/' + mistStream.name + '/index.m3u8'\n                // console.log('Video Source Set To:', this.videoSource); // Log the final video source\n\n                this.videoSourceType = 'application/vnd.apple.mpegURL'\n                // console.log('Setting player source to:', this.videoSource, 'of type:', this.videoSourceType); // Log the source setting\n                let videoJs = videojs('aux-player')\n                videoJs.src({'src': this.videoSource, 'type': this.videoSourceType})\n                this.unMute()\n                this.paused = false\n            } else {\n                console.error('Mist Server URI is still not set after fetching.')\n            }\n            // let basePath = this.mistServerUri\n            // this.videoSource = basePath + 'hls/' + mistStream.name + '/index.m3u8'\n            // this.videoSourceType = \"application/vnd.apple.mpegURL\"\n            // this.player.src({'src': this.videoSource, 'type': this.videoSourceType})\n            // this.unMute()\n            // this.paused = false\n        },\n        async loadVideoFromFile(video) {\n            // console.log('Loading Mist Stream Video for:', mistStream.name); // Log which Mist Stream is being loaded\n            // This mistServerUri comes from appSettings\n            // if (!this.mistServerUri) {\n            //     console.log('Mist Server URI not set, fetching...') // Log fetching attempt\n            //     await this.getMistServerUri()\n            // }\n            // if (this.mistServerUri) {\n                // console.log('Mist Server URI:', this.mistServerUri); // Log the URI to confirm it's fetched\n                // let basePath = this.mistServerUri\n                // this.videoSource = basePath + 'hls/' + video.name + '/index.m3u8'\n                // console.log('Video Source Set To:', this.videoSource); // Log the final video source\n\n            // this.videoSourceType = 'video/mp4'\n            console.log('Video Source Type:', video.type);\n            console.log('Video URL:', video.video_url);\n            console.log('CDN Endpoint:', video.cdn_endpoint);\n            console.log('Cloud Folder:', video.cloud_folder);\n            console.log('Folder:', video.folder);\n            console.log('File Name:', video.file_name);\n\n            let videoSource = video.cdn_endpoint + video.cloud_folder + video.folder + '/' + video.file_name\n                // console.log('Setting player source to:', this.videoSource, 'of type:', this.videoSourceType); // Log the source setting\n                let videoJs = videojs('aux-player')\n                videoJs.src({'src': videoSource, 'type': video.type})\n                this.unMute()\n                this.paused = false\n            // } else {\n            //     console.error('Mist Server URI is still not set after fetching.')\n            // }\n            // let basePath = this.mistServerUri\n            // this.videoSource = basePath + 'hls/' + mistStream.name + '/index.m3u8'\n            // this.videoSourceType = \"application/vnd.apple.mpegURL\"\n            // this.player.src({'src': this.videoSource, 'type': this.videoSourceType})\n            // this.unMute()\n            // this.paused = false\n        },\n\n\n        setNowPlayingInfoVideoFile(source) {\n            this.nowPlayingType = 'Video File'\n            this.nowPlayingName = source.file_name\n            useStreamStore().currentChannel = 'On Demand'\n        },\n        setNowPlayingInfoShow(show, episode) {\n            this.clearNowPlayingInfo()\n            const showStore = useShowStore()\n\n            if (show.firstPlayVideo) {\n                showStore.setName(show.firstPlayVideo.name)\n                showStore.setEpisodeUrl(`/shows/${show.slug}/episode/${source.firstPlayVideo.slug}`)\n            } else if (episode) {\n                showStore.setName(show.name)\n                showStore.setUrl(`/shows/${show.slug}`)\n                showStore.setEpisodeName(episode.name)\n                showStore.setEpisodeUrl(`/shows/${show.slug}/episode/${episode.slug}`)\n            } else {\n                showStore.setName(show.name)\n                showStore.setUrl(`/shows/${show.slug}`)\n            }\n        },\n// change video size/position and page layout\n        makeVideoPiP() {\n            // const appSettingStore = useAppSettingStore();\n            // const userStore = useUserStore();\n            //\n            // if (userStore.isMobile) {\n            //     let videoJs = videojs('aux-player')\n            //     videoJs.controls(false)\n            //     if(this.fullPage) {\n            //         this.class = 'pipVideoClassFullPage'\n            //         this.videoContainerClass = 'pipVideoContainerFullPage'\n            //     } else {\n            //         this.class = 'pipVideoClassTopRight'\n            //         this.videoContainerClass = 'pipVideoContainerTopRight'\n            //     }\n            //     appSettingStore.togglePipChatMode()\n            // }\n        },\n        makeVideoFullPage() {\n            const appSettingStore = useAppSettingStore()\n            const userStore = useUserStore()\n\n            // this.fullPage = true; // to be deleted and replaced by appSettingStore.fullPage\n            appSettingStore.fullPage = true\n            // userStore.hidePage = true // to be deleted and replaced by appSettingStore.hidePage\n            appSettingStore.hidePage = true\n            appSettingStore.ott = 0\n\n            this.videoContainerClass = 'fullPageVideoContainer'\n            this.class = 'fullPageVideoClass'\n            this.controls = !userStore.isMobile\n        },\n        makeVideoTopRight() {\n            const appSettingStore = useAppSettingStore()\n\n            // this.fullPage = false // to be deleted and replaced by appSettingStore.fullPage\n            appSettingStore.fullPage = false\n            // userStore.hidePage = false // to be deleted and replaced by appSettingStore.hidePage\n            appSettingStore.hidePage = false\n            // this.currentPageIsStream = false // to be deleted and replaced by appSettingStore.currentPageIsStream\n            appSettingStore.currentPageIsStream = false\n\n            this.videoContainerClass = 'topRightVideoContainer'\n            this.class = 'topRightVideoClass'\n            this.controls = false\n        },\n        makeVideoWelcomePage() {\n            const appSettingStore = useAppSettingStore()\n            this.videoContainerClass = 'welcomeVideoContainer'\n            this.class = 'welcomeVideoClass'\n            appSettingStore.loggedIn = false\n            appSettingStore.fullPage = true\n            appSettingStore.hidePage = false\n        },\n\n\n    },\n\n    getters: {},\n})\n","import { onBeforeMount, onMounted } from 'vue'\nimport { useUserStore } from \"@/Stores/UserStore\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useVideoPlayerStore } from \"@/Stores/VideoPlayerStore\"\nimport { Inertia } from \"@inertiajs/inertia\"\n\nexport function usePageSetup(pageName) {\n    const userStore = useUserStore()\n    const appSettingStore = useAppSettingStore()\n    const videoPlayerStore = useVideoPlayerStore()\n\n    appSettingStore.currentPage = pageName\n    appSettingStore.showFlashMessage = true\n    appSettingStore.pageIsHidden = false\n\n    if (userStore.isMobile) {\n        appSettingStore.ott = 0\n    }\n\n    videoPlayerStore.makeVideoTopRight()\n\n    onBeforeMount(() => {\n        // reload page\n        if (appSettingStore.pageReload) {\n            appSettingStore.pageReload = false\n            window.location.reload(true);\n        }\n    });\n\n    onMounted(() => {\n        // Check if the URL contains query strings\n        const hasQueryStrings = window.location.search !== '';\n\n        // Only scroll into view if there are no query strings\n        if (!hasQueryStrings) {\n            const topDiv = document.getElementById(\"topDiv\")\n            if (topDiv) {\n                topDiv.scrollIntoView()\n            }\n        }\n        // Only update if we're not already on this page to avoid overwriting with the current URL\n        appSettingStore.setPrevUrl()\n        appSettingStore.noLayout = false\n        appSettingStore.showOttButtons = true\n        // Inertia.reload()\n\n    });\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"@keyframes fadeOut-1c68849c{0%{opacity:1}to{opacity:0}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/Components/Global/GoLive/GoLive.vue\"],\"names\":[],\"mappings\":\"AAg2BA,4BACE,GACE,SACF,CACA,GACE,SACF,CACF\",\"sourcesContent\":[\"<template>\\n  <div class=\\\"mx-0 md:mx-4 mt-4 mb-2 px-2 md:px-6 py-1\\\">\\n    <div\\n        class=\\\"text-sm font-semibold  text-white text-center w-full border-2 rounded uppercase px-0 md:px-6 py-1 \\\"\\n        :class=\\\"[ goLiveStore.isLive ? 'bg-gray-600 border-gray-600 ' : 'bg-red-600 border-red-600' ]\\\">\\n      Go Live Instructions\\n    </div>\\n    <div class=\\\"shadow overflow-hidden border-2 border-red-600 rounded p-2 md:p-6\\\"\\n         :class=\\\"[ goLiveStore.isLive ? 'bg-gray-100' : 'bg-red-100' ]\\\">\\n\\n\\n      <div class=\\\"flex flex-row flex-wrap-reverse w-full justify-between\\\">\\n        <div>\\n          <div class=\\\"mb-2\\\">\\n            <button @click=\\\"appSettingStore.btnRedirect('/training/go-live-using-zoom')\\\"\\n                    class=\\\"btn bg-blue-500 hover:bg-blue-700 rounded-lg text-white\\\">How To Stream From Zoom\\n            </button>\\n            <button @click=\\\"openObsInstructions = !openObsInstructions\\\"\\n                    class=\\\"btn bg-blue-500 hover:bg-blue-700 rounded-lg text-white ml-2 \\\">How To Stream From OBS\\n            </button>\\n\\n          </div>\\n          <div v-if=\\\"openObsInstructions\\\">\\n            <h2>Stream from OBS or other software using these details:</h2>\\n            <div>RTMP full url: <span v-if=\\\"rtmpUri && streamKey\\\" class=\\\"font-bold\\\">{{ rtmpUri }}{{ streamKey }}</span>\\n              &nbsp;<button v-if=\\\"rtmpUri && streamKey\\\" @click=\\\"copyFullUrl\\\">\\n                <font-awesome-icon v-if=\\\"rtmpUri && streamKey\\\" icon=\\\"fa-clipboard\\\"\\n                                   class=\\\"text-blue-500 hover:text-blue-700 hover:cursor-pointer\\\"/>\\n              </button>\\n              <span v-if=\\\"showCopiedFullUrl\\\" class=\\\"ml-1 copied-message\\\" style=\\\"transition: opacity 0.5s; opacity: 1;\\\">Copied!</span>\\n            </div>\\n            <div>RTMP url: <span class=\\\"font-bold\\\">{{ rtmpUri }}</span>\\n              &nbsp;<button v-if=\\\"rtmpUri\\\" @click=\\\"copyRtmpUri\\\">\\n                <font-awesome-icon v-if=\\\"rtmpUri\\\" icon=\\\"fa-clipboard\\\"\\n                                   class=\\\"text-blue-500 hover:text-blue-700 hover:cursor-pointer\\\"/>\\n              </button>\\n              <span v-if=\\\"showCopiedRtmpUri\\\" class=\\\"ml-1 copied-message\\\" style=\\\"transition: opacity 0.5s; opacity: 1;\\\">Copied!</span>\\n            </div>\\n            <div>RTMP stream key: <span class=\\\"font-bold\\\">{{ streamKey }}</span>\\n              &nbsp;<button v-if=\\\"streamKey\\\" @click=\\\"copyStreamKey\\\">\\n                <font-awesome-icon v-if=\\\"streamKey\\\" icon=\\\"fa-clipboard\\\"\\n                                   class=\\\"text-blue-500 hover:text-blue-700 hover:cursor-pointer\\\"/>\\n              </button>\\n              <span v-if=\\\"showCopiedStreamKey\\\" class=\\\"ml-1 copied-message\\\"\\n                    style=\\\"transition: opacity 0.5s; opacity: 1;\\\">Copied!</span>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"flex flex-row flex-wrap\\\">\\n          <div class=\\\"mb-2\\\">\\n            <button v-if=\\\"!goLiveStore.isRecording\\\" @click=\\\"goLiveStore.startRecording\\\"\\n                    class=\\\"btn text-white bg-green-500 hover:bg-green-700 uppercase\\\"\\n            >Start Recording\\n            </button>\\n            <button v-else @click=\\\"goLiveStore.stopRecording\\\"\\n                    class=\\\"btn text-white bg-red-700 hover:bg-red-900 uppercase\\\"\\n            >Stop Recording\\n            </button>\\n            <div v-if=\\\"!goLiveStore.isRecording\\\" class=\\\"text-xs text-green-500 font-semibold tracking-wider\\\">Premium\\n              Creator\\n              Service\\n            </div>\\n          </div>\\n          <div class=\\\"ml-2\\\">\\n            <button v-if=\\\"!goLiveStore.isLive\\\" @click=\\\"goLiveStore.goLive\\\"\\n                    class=\\\"btn text-white bg-green-500 hover:bg-green-700 uppercase\\\"\\n            >Go Live Now\\n            </button>\\n            <button v-else @click=\\\"goLiveStore.stopLive\\\" class=\\\"btn text-white bg-red-700 hover:bg-red-900 uppercase\\\"\\n            >End Live\\n            </button>\\n            <div v-if=\\\"!goLiveStore.isLive\\\" class=\\\"text-xs text-green-500 font-semibold tracking-wider\\\">Premium Creator\\n              Service\\n            </div>\\n          </div>\\n          <div></div>\\n          <div>Live will begin in... &nbsp;</div>\\n          <div class=\\\"font-semibold\\\">{{ formattedCountdown }} (for demo purposes only)</div>\\n        </div>\\n      </div>\\n\\n\\n      <div class=\\\"flex flex-col justify-center mt-3 h-fit\\\">\\n        <div class=\\\"text-xs tracking-wider font-semibold mb-1 pl-1\\\">VIDEO STREAM</div>\\n\\n        <div class=\\\"flex flex-row flex-wrap\\\">\\n          <div class=\\\"flex flex-col\\\">\\n            <div class=\\\"px-10 h-fit w-fit\\\">\\n              <button @click=\\\"reloadPlayer\\\"\\n                      class=\\\"btn btn-xs w-full\\\"\\n                      :class=\\\"liveOrRecordingGrayButtonClass\\\"\\n              >Reload Player\\n              </button>\\n              <div v-if=\\\"goLiveStore.isLive || goLiveStore.isRecording\\\"\\n                   class=\\\"w-full bg-red-700 text-white text-center uppercase font-bold\\\">\\n                <span v-if=\\\"goLiveStore.isLive\\\">LIVE</span> <span v-if=\\\"goLiveStore.isLive && goLiveStore.isRecording\\\"> + </span>\\n                <span v-if=\\\"goLiveStore.isRecording\\\">RECORDING</span>\\n              </div>\\n              <video-js-aux :id=\\\"`aux-player`\\\"\\n                            :source=\\\"videoSource\\\"\\n                            :sourceType=\\\"videoSourceType\\\"\\n                            class=\\\"\\\"\\n                            :class=\\\"liveOrRecordingVideoBorderClass\\\"/>\\n\\n\\n            </div>\\n            <div class=\\\"flex flex-row px-10\\\">\\n              <div class=\\\"mt-2\\\">\\n                <button v-if=\\\"!videoPlayerStore.muted\\\"\\n                        class=\\\"btn\\\"\\n                        :class=\\\"liveOrRecordingGrayButtonClass\\\"\\n                        @click=\\\"videoPlayerStore.mute\\\">Mute Main Player Audio\\n                </button>\\n                <button v-else\\n                        class=\\\"btn\\\"\\n                        @click=\\\"videoPlayerStore.unMute\\\"\\n                        :class=\\\"liveOrRecordingGrayButtonClass\\\">Turn On Main Player Audio\\n                </button>\\n              </div>\\n              <div class=\\\"mt-2 ml-2\\\">\\n                <button v-if=\\\"!videoAuxPlayerStore.muted\\\"\\n                        class=\\\"btn\\\"\\n                        :class=\\\"liveOrRecordingGrayButtonClass\\\"\\n                        @click=\\\"videoAuxPlayerStore.mute\\\">Mute Live Stream\\n                  Video\\n                </button>\\n                <button v-else\\n                        class=\\\"btn\\\"\\n                        :class=\\\"liveOrRecordingGrayButtonClass\\\"\\n                        @click=\\\"videoAuxPlayerStore.unMute\\\">Turn On Live Stream Audio\\n                </button>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div v-if=\\\"goLiveStore.streamInfo && !goLiveStore.streamInfo.error\\\" class=\\\"w-fit\\\"\\n               :key=\\\"goLiveStore.selectedShowId\\\">\\n            <div>\\n              <h3>Stream Info</h3>\\n              <!--                <RecursivePropertyList :object=\\\"serverInfo\\\" />-->\\n\\n              <p><strong>Width:</strong> {{ goLiveStore.streamInfo?.width }}</p>\\n              <p><strong>Height:</strong> {{ goLiveStore.streamInfo?.height }}</p>\\n\\n              <!-- Assuming you want to display tracks info specifically -->\\n              <div v-if=\\\"goLiveStore.streamInfo?.meta?.tracks\\\">\\n                <h4 class=\\\"font-semibold\\\">Tracks</h4>\\n                <ul>\\n                  <li v-for=\\\"(track, name) in goLiveStore?.streamInfo?.meta.tracks\\\" :key=\\\"name\\\">\\n                    &middot; {{ name }} - Codec: {{ track.codec }}, Rate: {{ track.rate }}\\n                  </li>\\n                </ul>\\n              </div>\\n            </div>\\n          </div>\\n          <div v-if=\\\"!goLiveStore?.streamInfo && !goLiveStore?.streamInfo?.error\\\">\\n            <div class=\\\"flex flex-col\\\">\\n              <span class=\\\"mb-2\\\">Loading stream data...</span>\\n              <span class=\\\"loading loading-spinner text-neutral\\\"></span>\\n            </div>\\n\\n          </div>\\n          <div v-if=\\\"goLiveStore?.streamInfo?.error\\\">\\n            <div class=\\\"flex flex-col\\\">\\n              <span class=\\\"mb-2\\\">{{ goLiveStore?.streamInfo?.error }}</span>\\n            </div>\\n\\n          </div>\\n\\n        </div>\\n\\n      </div>\\n\\n\\n      <div class=\\\"mx-4 mt-4 mb-2 px-6 py-1 \\\">\\n        <div\\n            class=\\\"text-sm font-semibold bg-blue-600 text-white text-center w-full border-2 border-blue-600 rounded uppercase px-6 py-1 \\\">\\n          Push Destinations\\n        </div>\\n        <div class=\\\"shadow bg-blue-100 overflow-hidden border-2 border-blue-600 rounded p-6 space-y-3\\\">\\n          <div class=\\\"flex flex-row justify-between\\\">\\n            <div><h2 class=\\\"text-xl font-bold mb-4\\\">Push Destinations</h2></div>\\n            <div>\\n              <button class=\\\"btn bg-blue-600 hover:bg-blue-500 text-white font-semibold rounded-lg\\\"\\n                      @click.prevent=\\\"addDestination\\\">Add Push\\n                Destinations\\n              </button>\\n            </div>\\n          </div>\\n          <div v-if=\\\"mistStreamPushDestinations.length === 0\\\">\\n            <div>Set up <span class=\\\"font-bold\\\">push destinations:</span></div>\\n            <div>Here you can set additional streaming destinations such as Facebook, YouTube, Rumble, Twitch, etc. and\\n              notTV will automatically start pushing to those destinations when you go live.\\n            </div>\\n          </div>\\n          <div v-if=\\\"mistStreamPushDestinations\\\">\\n            <div class=\\\"flex flex-col gap-4\\\">\\n              <div v-for=\\\"destination in mistStreamPushDestinations\\\" :key=\\\"destination.id\\\"\\n                   class=\\\"border p-4 rounded-lg shadow flex flex-row items-center gap-4\\\">\\n                <img :src=\\\"destination.destination_image\\\" alt=\\\"Destination Image\\\"\\n                     class=\\\"w-24 h-24 object-cover rounded-full\\\"/>\\n                <div class=\\\"flex-grow\\\">\\n                  <h3 class=\\\"text-lg font-semibold\\\">{{ destination.destination_name }}</h3>\\n                  <h4 class=\\\"\\\">{{ destination.comment }}</h4>\\n                  <p v-if=\\\"destination.push_is_started\\\" class=\\\"text-green-500\\\">Is Active</p>\\n                  <p v-if=\\\"destination.has_auto_push && !destination.push_is_started\\\" class=\\\"text-green-500\\\">Auto push\\n                    is enabled</p>\\n                  <div class=\\\"flex gap-2 mt-2\\\">\\n                    <button v-if=\\\"destination.push_is_started\\\" @click=\\\"stopPush(destination.id)\\\"\\n                            class=\\\"py-2 px-4 bg-red-500 text-white rounded hover:bg-red-700 transition duration-150\\\">\\n                      Stop Push\\n                    </button>\\n                    <button v-else @click=\\\"startPush(destination.id)\\\"\\n                            class=\\\"py-2 px-4 bg-blue-500 text-white rounded hover:bg-blue-700 transition duration-150\\\">\\n                      Start Push\\n                    </button>\\n                    <button v-if=\\\"!destination.has_auto_push && !destination.push_is_started\\\"\\n                            @click=\\\"enableAutoPush(destination.id)\\\"\\n                            class=\\\"py-2 px-4 bg-yellow-500 text-white rounded hover:bg-yellow-600 transition duration-150\\\">\\n                      Auto Push\\n                    </button>\\n                    <button v-if=\\\"destination.has_auto_push && !destination.push_is_started\\\"\\n                            @click=\\\"disableAutoPush(destination.id)\\\"\\n                            class=\\\"py-2 px-4 bg-yellow-500 text-white rounded hover:bg-yellow-600 transition duration-150\\\">\\n                      Remove Auto Push\\n                    </button>\\n                  </div>\\n                </div>\\n                <div class=\\\"flex flex-row justify-end\\\">\\n                  <!--                  <button @click=\\\"editDestination(destination.id)\\\" class=\\\"py-2 px-4 bg-green-500 text-white rounded hover:bg-green-600 transition duration-150\\\">Edit</button>-->\\n                  <!--                  <button @click=\\\"deleteDestination(destination.id)\\\" class=\\\"py-2 px-4 bg-gray-500 text-white rounded hover:bg-gray-600 transition duration-150\\\">Delete</button>-->\\n\\n                  <button\\n                      @click.prevent=\\\"editDestination(destination)\\\"\\n                      class=\\\"btn btn-sm text-white font-semibold bg-blue-500 hover:bg-blue-600 rounded-lg\\\">\\n                    <font-awesome-icon icon=\\\"fa-pencil\\\" class=\\\"my-1 mx-1\\\"/>\\n                  </button>\\n                </div>\\n                <button\\n                    @click.prevent=\\\"deleteDestination(destination.id)\\\"\\n                    class=\\\"btn btn-sm text-white font-semibold bg-red-500 hover:bg-red-600 rounded-lg\\\"\\n                >\\n                  <font-awesome-icon icon=\\\"fa-trash-can\\\" class=\\\"my-1 mx-1\\\"/>\\n                </button>\\n\\n\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n\\n      </div>\\n      <MistStreamPushDestinationForm @update-success=\\\"getMistStreamPushDestinations\\\"\\n                                     :destinationDetails=\\\"destinationDetails\\\"\\n                                     :mode=\\\"mistStreamPushDestinationFormModalMode\\\"/>\\n\\n    </div>\\n\\n  </div>\\n\\n  <div class=\\\"mx-4 mt-4 mb-8 px-6 py-1 \\\">\\n    <div\\n        class=\\\"text-sm font-semibold bg-orange-600 text-white text-center w-full border-2 border-orange-600 rounded uppercase px-6 py-1 \\\">\\n      Commercial Breaks\\n    </div>\\n    <div class=\\\"shadow bg-orange-100 overflow-hidden border-2 border-orange-600 rounded p-6 space-y-3\\\">\\n      <div></div>\\n      <div>Click the <span class=\\\"font-bold\\\">Trigger Commercial Break</span> button below to go to commercial.</div>\\n      <div>You will see a countdown timer until the show resumes. This will be 1-2 minutes.</div>\\n      <div>As a notTV creator, your voice matters. How can this feature be improved to better serve you and your\\n        sponsors?\\n        Please email and let us know: <a href=\\\"mailto:hello@not.tv\\\" target=\\\"_blank\\\"\\n                                         class=\\\"text-blue-500 hover:text-blue-600\\\">hello@not.tv</a>\\n      </div>\\n      <div class=\\\"w-full flex justify-center pt-4\\\">\\n        <button onclick=\\\"setCommercialBreakNotice.showModal()\\\"\\n                class=\\\"bg-orange-600 hover:bg-orange-500 text-white font-semibold rounded-lg px-4 py-2\\\">Trigger\\n          Commercial Break\\n        </button>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n\\n</template>\\n\\n<script setup>\\n// import { useTimeAgo } from '@vueuse/core'\\nimport { computed, onBeforeUnmount, onMounted, onUnmounted, ref, watchEffect } from 'vue'\\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\\nimport { useVideoPlayerStore } from '@/Stores/VideoPlayerStore'\\nimport { useVideoAuxPlayerStore } from '@/Stores/VideoAuxPlayerStore'\\nimport { useGoLiveStore } from '@/Stores/GoLiveStore'\\nimport VideoJsAux from '@/Components/Global/VideoPlayer/VideoJs/VideoJsAux'\\nimport videojs from 'video.js'\\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome'\\nimport { useClipboard } from '@vueuse/core'\\nimport MistStreamPushDestinationForm from '@/Components/Global/MistStreams/MistStreamPushDestinationForm'\\n\\nconst appSettingStore = useAppSettingStore()\\nconst videoPlayerStore = useVideoPlayerStore()\\nconst videoAuxPlayerStore = useVideoAuxPlayerStore()\\nconst goLiveStore = useGoLiveStore()\\n\\nlet props = defineProps({\\n  // show: Object,\\n})\\n\\nconst showCopiedFullUrl = ref(false)\\nconst showCopiedRtmpUri = ref(false)\\nconst showCopiedStreamKey = ref(false)\\nconst {copy} = useClipboard()\\n\\nconst openObsInstructions = ref(false)\\n\\n\\nconst mistStreamPushDestinations = ref([])\\nconst mistStreamPushDestinationFormModalMode = ref('add')\\nconst destinationDetails = ref({})\\n\\nasync function getMistStreamPushDestinations() {\\n  // Assuming `goLiveStore.selectedShow.mist_stream_wildcard.id` holds the wildcard ID\\n  const wildcardId = goLiveStore?.selectedShow?.mist_stream_wildcard?.id\\n  if (wildcardId) {\\n    try {\\n      // Append the wildcard ID as a query parameter\\n      const response = await axios.get(`/mist-stream-push-destinations?wildcardId=${wildcardId}`)\\n      mistStreamPushDestinations.value = response.data // Update the reactive variable\\n    } catch (error) {\\n      console.error('Failed to fetch push destinations:', error)\\n    }\\n  } else {\\n    console.error('No wildcard ID found')\\n  }\\n}\\n\\n\\n\\nasync function startPush(destinationId) {\\n  console.log(`Starting push for destination ${destinationId}`);\\n  const data = { destinationId };\\n\\n  try {\\n    const response = await axios.post('/mist-stream/start-push', data, {\\n      headers: {\\n        'Content-Type': 'application/json',\\n      },\\n    });\\n\\n    console.log('Push started successfully:', response.data);\\n    // Update the component's state to reflect the change\\n    const index = mistStreamPushDestinations.value.findIndex(destination => destination.id === destinationId);\\n    if (index !== -1) {\\n      mistStreamPushDestinations.value[index].push_is_started = 1;\\n    }\\n  } catch (error) {\\n    console.error('Error starting push:', error);\\n    // Handle the error appropriately in your UI\\n  }\\n}\\n\\nasync function stopPush(destinationId) {\\n  console.log(`Stopping push for destination ${destinationId}`);\\n  const data = { destinationId };\\n\\n  try {\\n    const response = await axios.post('/mist-stream/stop-push', data, {\\n      headers: {\\n        'Content-Type': 'application/json',\\n      },\\n    });\\n\\n    console.log('Push stopped successfully:', response.data);\\n    // Update the component's state to reflect the change\\n    const index = mistStreamPushDestinations.value.findIndex(destination => destination.id === destinationId);\\n    if (index !== -1) {\\n      mistStreamPushDestinations.value[index].push_is_started = 0;\\n    }\\n  } catch (error) {\\n    console.error('Error stopping push:', error);\\n    // Handle the error appropriately in your UI\\n  }\\n}\\n\\nconst enableAutoPush = async (destinationId) => {\\n  const data = {\\n    destinationId,\\n  }\\n\\n  try {\\n    const response = await axios.post('/mist-stream/push-auto-add', data, {\\n      headers: {\\n        'Content-Type': 'application/json',\\n      },\\n    })\\n\\n    console.log('Auto push enabled successfully:', response.data)\\n    const index = mistStreamPushDestinations.value.findIndex(destination => destination.id === destinationId);\\n    if (index !== -1) {\\n      mistStreamPushDestinations.value[index].has_auto_push = 1;\\n    }\\n  } catch (error) {\\n    console.error('Error enabling auto push:', error)\\n  }\\n}\\n\\nasync function disableAutoPush(destinationId) {\\n  console.log(`Disabling auto push for destination ${destinationId}`);\\n  const data = {\\n    destinationId,\\n  };\\n\\n  try {\\n    const response = await axios.post('/mist-stream/push-auto-remove', data, {\\n      headers: {\\n        'Content-Type': 'application/json',\\n      },\\n    });\\n\\n    console.log('Auto push disabled successfully:', response.data);\\n    const index = mistStreamPushDestinations.value.findIndex(destination => destination.id === destinationId);\\n    if (index !== -1) {\\n      mistStreamPushDestinations.value[index].has_auto_push = 0;\\n    }\\n  } catch (error) {\\n    console.error('Error disabling auto push:', error);\\n  }\\n}\\n\\nconst addDestination = async () => {\\n  mistStreamPushDestinationFormModalMode.value = 'add'\\n  const wildcardId = goLiveStore.selectedShow?.mist_stream_wildcard?.id\\n  destinationDetails.value = {mist_stream_wildcard_id: wildcardId} // Initialize destinationDetails with the wildcard ID\\n\\n  document.getElementById('mistStreamPushDestinationForm').showModal()\\n}\\n\\nconst editDestination = async (destination) => {\\n  mistStreamPushDestinationFormModalMode.value = 'edit'\\n  destinationDetails.value = destination\\n  document.getElementById('mistStreamPushDestinationForm').showModal()\\n  console.log(`Editing destination with ID: ${destination}`)\\n  const index = mistStreamPushDestinations.value.findIndex(destination => destination.id === destinationDetails.value.id);\\n  if (index !== -1) {\\n    mistStreamPushDestinations.value[index].has_auto_push = 0;\\n  }\\n}\\n\\nconst deleteDestination = async (destinationId) => {\\n  // Confirm deletion with the user before proceeding\\n  if (confirm(`Are you sure you want to delete the destination with ID: ${destinationId}?`)) {\\n    try {\\n      // Perform the delete operation\\n      await axios.delete(`/mist-stream-push-destinations/${destinationId}`)\\n      console.log(`Deleted destination with ID: ${destinationId}`)\\n      // Optionally, remove the item from your local state to update the UI\\n      mistStreamPushDestinations.value = mistStreamPushDestinations.value.filter(destination => destination.id !== destinationId)\\n    } catch (error) {\\n      console.error(`Error deleting destination with ID: ${destinationId}`, error)\\n    }\\n  }\\n}\\n\\n// const copyText = () => {\\n//   copy('Text to be copied');\\n//   showCopied.value = true;\\n//   setTimeout(() => {\\n//     showCopied.value = false;\\n//   }, 2000); // Hide the message after 2 seconds\\n// };\\n\\nlet videoSource = videoPlayerStore.mistServerUri + 'hls/' + goLiveStore?.selectedShow?.mist_stream_wildcard.name\\n    + '/index.m3u8'\\nlet videoSourceType = 'application/vnd.apple.mpegURL'\\n\\n// Fetch server info on component mount\\n// goLiveStore.fetchStreamInfo(goLiveStore?.selectedShow?.mist_stream_wildcard.name)\\n// goLiveStore.fetchRtmpUri()\\n\\nconst fullUrl = ref('')\\nconst rtmpUri = ref('')\\nconst streamKey = ref('')\\n\\n// Initialize fetching of server information\\ngoLiveStore.fetchStreamInfo(goLiveStore?.selectedShow?.mist_stream_wildcard.name)\\ngoLiveStore.fetchRtmpUri()\\n\\n// Reactively update URLs when the store updates\\nwatchEffect(() => {\\n  if (goLiveStore.rtmpUri) {\\n    rtmpUri.value = goLiveStore.rtmpUri + 'live/'\\n    // Check if it's an episode or a selected show and update accordingly\\n    if (goLiveStore.isEpisode && goLiveStore.episode?.mist_stream_wildcard?.name) {\\n      streamKey.value = goLiveStore.episode.mist_stream_wildcard.name\\n    } else if (!goLiveStore.isEpisode && goLiveStore.selectedShow?.mist_stream_wildcard?.name) {\\n      streamKey.value = goLiveStore.selectedShow.mist_stream_wildcard.name\\n    }\\n    fullUrl.value = `${rtmpUri.value}${streamKey.value}`\\n  }\\n})\\n\\n// Function to handle the copy action and display the \\\"copied\\\" message for each type\\nconst copyFullUrl = () => {\\n  copy(fullUrl.value)\\n  showCopiedFullUrl.value = true\\n  setTimeout(() => showCopiedFullUrl.value = false, 1000)\\n}\\n\\nconst copyRtmpUri = () => {\\n  copy(rtmpUri.value)\\n  showCopiedRtmpUri.value = true\\n  setTimeout(() => showCopiedRtmpUri.value = false, 1000)\\n}\\n\\nconst copyStreamKey = () => {\\n  copy(streamKey.value)\\n  showCopiedStreamKey.value = true\\n  setTimeout(() => showCopiedStreamKey.value = false, 1000)\\n}\\n\\n// if (goLiveStore.isEpisode) {\\n//   fullUrl = rtmpUri.value + goLiveStore?.episode?.mist_stream_wildcard?.name\\n//   streamKey = goLiveStore?.episode?.mist_stream_wildcard?.name\\n// } else if (!goLiveStore.isEpisode) {\\n//   fullUrl = rtmpUri.value + goLiveStore?.selectedShow?.mist_stream_wildcard?.name\\n//   streamKey = goLiveStore?.selectedShow?.mist_stream_wildcard?.name\\n// }\\n\\n// const copyFullUrl = () => copy(fullUrl);\\n// const copyRtmpUri = () => copy(rtmpUri.value);\\n// const copyStreamKey = () => copy(streamKey);\\n//\\n// watchEffect(() => {\\n//   if (goLiveStore.rtmpUri) {\\n//     rtmpUri.value = goLiveStore.rtmpUri + 'live/';\\n//   }\\n// });\\n\\n// Asynchronously fetch the JSON data\\n// async function fetchServerInfo() {\\n//   try {\\n//     const response = await fetch('http://mist.nottv.io:8080/json_dvr_playback_2.js'); // Replace with your URL\\n//     if (!response.ok) throw new Error('Failed to fetch');\\n//     const data = await response.json();\\n//     serverInfo.value = data; // Store the data in serverInfo\\n//     console.log (serverInfo)\\n//   } catch (error) {\\n//     console.error('Error fetching server info:', error);\\n//   }\\n// }\\n\\n// let videoSrc = ref('')\\n// let videoJsAux = ('aux-player')\\n\\n// const videoOptions = ref({\\n//   autoplay: true,\\n//   muted: true,\\n//   controls: true,\\n//   fill: true,\\n//   sources: [\\n//     {\\n//       src: videoSource,\\n//       type: videoSourceType,\\n//     },\\n//   ],\\n// });\\n\\nconst reloadPlayer = () => {\\n  let source = null\\n  if (goLiveStore?.selectedShow?.mist_stream_wildcard?.name) {\\n    source = goLiveStore?.selectedShow?.mist_stream_wildcard?.name\\n    goLiveStore.fetchStreamInfo(goLiveStore?.selectedShow?.mist_stream_wildcard?.name)\\n  } else if (goLiveStore?.episode?.mist_stream_wildcard?.name) {\\n    source = goLiveStore?.episode?.mist_stream_wildcard?.name\\n    goLiveStore.fetchStreamInfo(goLiveStore?.episode?.mist_stream_wildcard?.name)\\n  }\\n  let sourceUrl = videoPlayerStore.mistServerUri + 'hls/' + source + '/index.m3u8'\\n  console.log('source url: ' + sourceUrl)\\n  let sourceType = 'application/vnd.apple.mpegurl'\\n  let videoJs = videojs('aux-player')\\n  videoJs.src({'src': sourceUrl, 'type': sourceType})\\n  // videoAuxPlayerStore.loadNewLiveSource(source, sourceType)\\n  console.log('reload player')\\n}\\n\\n// check push_auto_list and update\\n\\nonMounted(() => {\\n  // videoSrc = goLiveStore.selectedShow.mist_stream_wildcard.name\\n  // videoJsAux.src({'src': videoSrc, 'type': 'application/vnd.apple.mpegurl'});\\n  // videoJsAux.ready(() => {\\n  //\\n  // })\\n  startCountdown()\\n\\n  console.log('onPlayerReady AUX')\\n  // fetchServerInfo()\\n\\n  getMistStreamPushDestinations()\\n\\n\\n\\n})\\n\\n// Initial countdown time in seconds (5 minutes * 60 seconds)\\nconst countdownTime = 5 * 60\\n// Reactive state for the countdown\\nconst countdown = ref(countdownTime)\\n\\n// Computed property to format the countdown as mm:ss\\nconst formattedCountdown = computed(() => {\\n  const minutes = Math.floor(countdown.value / 60)\\n  const seconds = countdown.value % 60\\n  return `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`\\n})\\n\\n// Function to start the countdown - temporary for demo purposes.\\nconst startCountdown = () => {\\n  const interval = setInterval(() => {\\n    countdown.value--\\n\\n    if (countdown.value < 0) {\\n      clearInterval(interval) // Stop the interval\\n      countdown.value = countdownTime // Reset countdown\\n      startCountdown() // Restart the countdown\\n    }\\n  }, 1000)\\n}\\n\\nconst liveOrRecordingGrayButtonClass = computed(() => {\\n  if (goLiveStore.isLive || goLiveStore.isRecording) {\\n    return 'bg-gray-200 hover:bg-gray-400'\\n  } else {\\n    return ''\\n  }\\n})\\n\\nconst liveOrRecordingVideoBorderClass = computed(() => {\\n  if (goLiveStore.isLive || goLiveStore.isRecording) {\\n    return 'border-4 border-red-700'\\n  } else {\\n    return ''\\n  }\\n})\\n// const mistStreamWildcardId = ref()\\n// mistStreamWildcardId.value = goLiveStore?.selectedShow?.mist_stream_wildcard?.id\\nconst channel = Echo.channel(`mistStreamWildcard.${goLiveStore?.selectedShow?.mist_stream_wildcard?.id}`);\\nchannel\\n    .subscribed(() => {\\n      // Handle successful subscription\\n      // This log will confirm the subscription success\\n      console.log('Successfully subscribed to the channel!');\\n    })\\n    // .listen('.push-out-start', (event) => {\\n    //   console.log('Event received:', event);\\n    // })\\n// channel.listen('.push-out-start', (event) => {\\n//       console.log('push out start EVENT BROADCASTED!', event);\\n//     })\\n    .listen('.push-out-start', (event) => {\\n      console.log('push out start EVENT BROADCASTED!')\\n      const index = mistStreamPushDestinations.value.findIndex(destination =>\\n          `${destination.rtmp_url}${destination.rtmp_key}` === event.requestUrl);\\n      if (index !== -1) {\\n        mistStreamPushDestinations.value[index].push_is_started = 1;\\n      }\\n    })\\n    .listen('.push-end', (event) => {\\n      console.log('push end EVENT BROADCASTED!')\\n      const index = mistStreamPushDestinations.value.findIndex(destination =>\\n          `${destination.rtmp_url}${destination.rtmp_key}` === event.requestUrl);\\n      if (index !== -1) {\\n        mistStreamPushDestinations.value[index].push_is_started = 0;\\n      }\\n    });\\n\\n// Cleanup when the component unmounts\\nonUnmounted(() => {\\n  channel.stopListening('.push-out-start');\\n  channel.stopListening('.push-end');\\n  Echo.leave(`mistStreamWildcard.${goLiveStore?.selectedShow?.mist_stream_wildcard?.id}`);\\n});\\n\\n//\\n// // Assuming props.show.mist_stream_wildcard.name exists and is reactive\\n// const playerTargetId = ref('');\\n//\\n// const initializePlayer = () => {\\n//   const targetElement = document.getElementById(playerTargetId.value);\\n//   if (targetElement) {\\n//     mistPlay(goLiveStore.selectedShow.mist_stream_wildcard.name, {\\n//       target: targetElement,\\n//       fillSpace: true\\n//     });\\n//   } else {\\n//     console.error('Target element for video player not found.');\\n//   }\\n// };\\n//\\n// const removePlayer = () => {\\n//   const existingContainer = document.getElementById(playerTargetId.value);\\n//   if (existingContainer) {\\n//     existingContainer.remove();\\n//   }\\n// };\\n//\\n//\\n// const reloadPlayer = () => {\\n//   removePlayer();\\n//\\n//   nextTick(() => {\\n//     const newPlayerContainer = document.createElement('div');\\n//     const uniqueId = `${goLiveStore.selectedShow.mist_stream_wildcard.name}-${Date.now()}`;\\n//     newPlayerContainer.id = uniqueId;\\n//     playerTargetId.value = uniqueId;\\n//\\n//     document.body.appendChild(newPlayerContainer); // Append to body or choose a specific container\\n//\\n//     loadAndInitializePlayer();\\n//   });\\n// };\\n//\\n// const loadAndInitializePlayer = () => {\\n//   if (!window.mistplayers) {\\n//     const playerScript = document.createElement(\\\"script\\\");\\n//     playerScript.src = \\\"https://mist.nottv.io:443/player.js\\\"; // Assuming HTTPS site\\n//     document.head.appendChild(playerScript);\\n//     playerScript.onload = initializePlayer;\\n//   } else {\\n//     initializePlayer();\\n//   }\\n// };\\n//\\n// onMounted(() => {\\n//   playerTargetId.value = `${goLiveStore.selectedShow.mist_stream_wildcard.name}-${Date.now()}`;\\n//   loadAndInitializePlayer();\\n// });\\n//\\n// watch(() => playerTargetId.value, (newVal) => {\\n//   if (newVal) {\\n//     loadAndInitializePlayer();\\n//   }\\n// });\\n//\\n// onBeforeUnmount(() => {\\n//   removePlayer(); // Ensure the player's container is removed when the component unmounts\\n// });\\n\\n\\n//\\n//\\n// const loadAndInitializePlayer = () => {\\n//   if (!window.mistplayers) {\\n//     const playerScript = document.createElement(\\\"script\\\");\\n//     playerScript.src = location.protocol === \\\"https:\\\" ? \\\"https://mist.nottv.io:443/player.js\\\" : \\\"http://mist.nottv.io:8080/player.js\\\";\\n//     document.head.appendChild(playerScript);\\n//     playerScript.onload = initializePlayer;\\n//   } else {\\n//     initializePlayer();\\n//   }\\n// };\\n//\\n// const removePlayer = () => {\\n//   const targetElement = document.getElementById(playerTargetId.value);\\n//   if (targetElement) {\\n//     // Option 1: Remove the child element completely\\n//     targetElement.parentNode.removeChild(targetElement);\\n//\\n//     // OR Option 2: Reset the content of the element\\n//     // targetElement.innerHTML = '';\\n//\\n//     console.log('Video player removed.');\\n//   } else {\\n//     console.error('Target element for video player not found for removal.');\\n//   }\\n// };\\n//\\n// onMounted(() => {\\n//   playerTargetId.value = `${props.show.mist_stream_wildcard.name}-${Date.now()}` // Set the target ID based on props\\n//   console.log(playerTargetId.value)\\n//   loadAndInitializePlayer();\\n//   // nextTick(() => {\\n//   //   loadAndInitializePlayer();\\n//   // });\\n// });\\n//\\n// // onMounted(() => {\\n// //\\n// //   // loadAndInitializePlayer()\\n// //   if (!window.mistplayers) {\\n// //     const playerScript = document.createElement(\\\"script\\\");\\n// //     playerScript.src = location.protocol === \\\"https:\\\" ? \\\"https://mist.nottv.io:443/player.js\\\" : \\\"http://mist.nottv.io:8080/player.js\\\";\\n// //     document.head.appendChild(playerScript);\\n// //     playerScript.onload = initializePlayer;\\n// //   } else {\\n// //     initializePlayer();\\n// //   }\\n// // });\\n//\\n// // Define `reloadPlayer` method to reload the player. This could be the same as `initializePlayer`\\n// // if reloading simply means reinitializing.\\n// const reloadPlayer = () => {\\n//   // Remove the existing player and its container\\n//   removePlayer();\\n//\\n//   // Recreate the container element for the player\\n//   const newPlayerContainer = document.createElement('div');\\n//   newPlayerContainer.id = `${props.show.mist_stream_wildcard.name}-${Date.now()}`; // Set the new target ID\\n//   playerTargetId.value = newPlayerContainer.id; // Update the reactive reference\\n//\\n//   // Append the new container to the appropriate parent element in your DOM\\n//   // Replace `parentElementSelector` with the actual selector of the parent where the player should be attached\\n//   const parentElement = document.querySelector('parentElementSelector');\\n//   if (parentElement) {\\n//     parentElement.appendChild(newPlayerContainer);\\n//   } else {\\n//     console.error('Parent element for video player not found.');\\n//     return;\\n//   }\\n//\\n//   // Initialize the player in the new container\\n//   loadAndInitializePlayer();\\n// };\\n//\\n// // If there's a need to watch for `playerTargetId` changes to reinitialize the player\\n// watch(() => playerTargetId.value, (newVal) => {\\n//   // Load and initialize player only if newVal is truthy\\n//   if (newVal) {\\n//     loadAndInitializePlayer();\\n//   }\\n// });\\n//\\n// // const loadAndInitializePlayer = () => {\\n// //   if (!window.mistplayers) {\\n// //     const playerScript = document.createElement(\\\"script\\\");\\n// //     playerScript.src = location.protocol === \\\"https:\\\" ? \\\"https://mist.nottv.io:443/player.js\\\" : \\\"http://mist.nottv.io:8080/player.js\\\";\\n// //     document.head.appendChild(playerScript);\\n// //     playerScript.onload = initializePlayer;\\n// //   } else {\\n// //     initializePlayer();\\n// //   }\\n// // };\\n//\\nonBeforeUnmount(() => {\\n  // goLiveStore.reset()\\n  // Example cleanup logic; adjust based on your player's API\\n  // if (window.mistplayers && window.mistplayers[playerTargetId.value]) {\\n  //   window.mistplayers[playerTargetId.value].destroy(); // Hypothetical destroy method\\n  // }\\n})\\n//\\n// onBeforeUnmount(() => {\\n//   if (videoPlayer && typeof videoPlayer.dispose === 'function') {\\n//     videoPlayer.dispose();\\n//   }\\n// });\\n// let videoEmbedCode = props.episode.video_file_embed_code;\\n\\n// const timeAgo = useTimeAgo(new Date(2023, 10, 5))\\n// const timeAgo = useTimeAgo(props.episode.scheduledDateTime)\\n</script>\\n\\n<style scoped>\\n@keyframes fadeOut {\\n  from {\\n    opacity: 1;\\n  }\\n  to {\\n    opacity: 0;\\n  }\\n}\\n</style>\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".video-container[data-v-791da7b8]{background-color:#000;padding-top:56.25%;position:relative;width:100%}.video-container video[data-v-791da7b8]{height:100%;left:0;position:absolute;top:0;width:100%}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/Components/Pages/ShowEpisodes/Elements/EpisodeVideo.vue\"],\"names\":[],\"mappings\":\"AA+EA,kCACE,qBAAuB,CAEvB,kBAAmB,CACnB,iBAAkB,CAFlB,UAGF,CAEA,wCAKE,WAAY,CAFZ,MAAO,CAFP,iBAAkB,CAClB,KAAM,CAEN,UAEF\",\"sourcesContent\":[\"<template>\\n  <div>\\n    <!-- Conditional rendering for the video section -->\\n      <!-- Episode Video Label -->\\n      <div v-if=\\\"!episode.video?.video_id && !episode.video?.video_url\\\" class=\\\"mt-6 px-5 flex justify-center w-full\\\">\\n        <div class=\\\"bg-black text-white text-center uppercase font-bold text-xs p-5 mb-2 w-full\\\">\\n          No Video\\n        </div>\\n      </div>\\n\\n    <div v-if=\\\"episode?.video_id && episode.video?.storage_location === 'spaces' && episode.video?.upload_status !== 'processing'\\\" class=\\\"\\\">\\n\\n      <!-- Video Player -->\\n      <video id=\\\"episodeEditPlayer\\\"\\n             controls\\n             class=\\\"w-full h-auto\\\"\\n             :src=\\\"episode.video?.cdn_endpoint + episode.video?.cloud_folder + episode?.video.folder + '/' + episode.video?.file_name\\\">\\n        Your browser does not support the video tag.\\n      </video>\\n    </div>\\n\\n\\n\\n    <!-- Processing or external storage placeholder -->\\n    <div v-if=\\\"episode.video?.storage_location === 'external' || episode.video?.upload_status === 'processing'\\\" class=\\\"flex justify-center shadow overflow-hidden border-b border-gray-200 bg-white dark:bg-black text-2xl sm:rounded-lg p-5\\\">\\n      <div v-if=\\\"episode.video?.video_url === ''\\\">NO VIDEO</div>\\n      <video v-else id=\\\"episodeEditVideoPlayer\\\" class=\\\"video-js w-full h-auto\\\" controls>\\n        <source :src=\\\"episode.video?.video_url\\\" :type=\\\"episode.video?.type\\\">\\n      </video>\\n    </div>\\n  </div>\\n\\n\\n<!--  <div>-->\\n<!--    <div-->\\n<!--        v-if=\\\"episode.video?.storage_location === 'external'\\\"-->\\n<!--        class=\\\"flex justify-center shadow overflow-hidden border-b border-gray-200 bg-white dark:bg-black text-2xl sm:rounded-lg p-5\\\">-->\\n\\n<!--      <div v-if=\\\"episode.video?.video_url === ''\\\">NO VIDEO</div>-->\\n<!--      <video id=\\\"episodeEditVideoPlayer\\\" v-if=\\\"episode.video?.video_url\\\"-->\\n<!--             class=\\\"video-js w-fit\\\" controls>-->\\n<!--        <source :src=\\\"`${episode.video?.video_url}`\\\" :type=\\\"`${episode.video?.type}`\\\">-->\\n<!--      </video>-->\\n\\n<!--      &lt;!&ndash;                    <iframe v-if=\\\"episode.video_url\\\"&ndash;&gt;-->\\n<!--      &lt;!&ndash;                            class=\\\"rumble\\\" width=\\\"w-fit\\\" height=\\\"\\\" :src=\\\"`${episode.video_url}`\\\" frameborder=\\\"0\\\" allowfullscreen>&ndash;&gt;-->\\n<!--      &lt;!&ndash;                    </iframe>&ndash;&gt;-->\\n<!--    </div>-->\\n\\n<!--    <div v-if=\\\"!episode?.video_id\\\"-->\\n<!--         class=\\\"flex justify-center shadow overflow-hidden border-b border-gray-200 bg-white dark:bg-black text-2xl sm:rounded-lg p-5 mt-6\\\">-->\\n<!--      NO VIDEO</div>-->\\n<!--    <div v-else class=\\\"flex flex-col justify-center text-center mb-6 bg-black w-full px-6 py-3\\\">-->\\n<!--      <div class=\\\"block mb-2 uppercase font-bold text-xs text-white\\\"-->\\n<!--           for=\\\"name\\\"-->\\n<!--      >-->\\n<!--        Episode Video-->\\n<!--      </div>-->\\n<!--      <div-->\\n<!--          v-if=\\\"episode.video?.upload_status === 'processing'\\\"-->\\n<!--          class=\\\"text-center place-self-center font-semibold text-xl\\\">Video processing...-->\\n<!--      </div>-->\\n\\n<!--      <video v-if=\\\"episode.video?.storage_location === 'spaces' && episode.video?.upload_status !== 'processing'\\\"-->\\n<!--             id=\\\"episodeEditPlayer\\\"-->\\n<!--             :src=\\\"episode.video?.cdn_endpoint+episode.video?.cloud_folder+episode?.video.folder+'/'+episode.video?.file_name\\\"-->\\n<!--             controls></video>-->\\n<!--    </div>-->\\n<!--  </div>-->\\n\\n</template>\\n\\n<script setup>\\ndefineProps({\\n  episode: Object,\\n})\\n</script>\\n\\n<style scoped>\\n.video-container {\\n  background-color: black; /* Black background */\\n  width: 100%; /* Full width of its parent */\\n  padding-top: 56.25%; /* Aspect ratio of 16:9 */\\n  position: relative; /* For absolute positioning of the video */\\n}\\n\\n.video-container video {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 100%; /* Video fills the width of the container */\\n  height: 100%; /* Video fills the height of the container */\\n}\\n</style>\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".episodeManageBanner[data-v-7c175692]{@apply bg-black text-red-600}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/Components/Pages/ShowEpisodes/Layout/ManageShowEpisodeTopBanner.vue\"],\"names\":[],\"mappings\":\"AAkDA,sCACE,4BACF\",\"sourcesContent\":[\"<template>\\n  <div class=\\\"font-bold text-xl p-4 my-4 w-full text-center\\\"\\n       :class=\\\"goLiveBanner\\\">\\n    <div v-if=\\\"!teamStore.goLiveDisplay\\\">\\n      <div v-if=\\\"episodeStatus.id < 6\\\" class=\\\"text-white uppercase hidden\\\">Create your episode</div>\\n      <div v-if=\\\"episodeStatus.name\\\"><span class=\\\"uppercase text-xs text-white\\\">Status:</span> <span\\n          :class=\\\"episodeStatusClass\\\">{{ episodeStatus.name }}</span></div>\\n    </div>\\n    <div v-else>\\n      <span>You are about to go live.</span>\\n      <!--                    if the episode is scheduled to go live then display the next line instead -->\\n      <!--                    <span v-if=\\\"episode.scheduled_release > now\\\">You are scheduled to go live.</span>-->\\n      <!--                    <span v-if=\\\"episode.isLive\\\">You are now live.</span>-->\\n\\n    </div>\\n  </div>\\n</template>\\n\\n<script setup>\\nimport { computed } from \\\"vue\\\"\\nimport { useTeamStore } from \\\"@/Stores/TeamStore\\\"\\n\\nconst teamStore = useTeamStore()\\n\\nlet props = defineProps({\\n  episode: Object,\\n  episodeStatus: Object,\\n})\\n\\nconst goLiveBanner = computed(() => ({\\n  'bg-red-500 text-white': teamStore.goLiveDisplay,\\n  'bg-black text-red-600': !teamStore.goLiveDisplay\\n}))\\n\\nconst episodeStatusClass = computed(() => ({\\n  'font-semibold text-xl text-orange-400': props.episodeStatus.id === 1,\\n  'text-xl text-green-400': props.episodeStatus.id === 2,\\n  'font-semibold text-xl text-green-600': props.episodeStatus.id === 3,\\n  'font-bold text-xl text-green-600': props.episodeStatus.id === 4,\\n  'font-semibold text-xl text-purple-700': props.episodeStatus.id === 5,\\n  'font-italic text-xl text-pink-500': props.episodeStatus.id === 6,\\n  'font-bold text-xl light:text-black dark:text-white': props.episodeStatus.id === 7,\\n  'font-medium text-xl text-gray-500': props.episodeStatus.id === 8,\\n  'font-semibold font-italic text-xl text-red-700': props.episodeStatus.id === 9,\\n  'font-bold text-xl text-red-800': props.episodeStatus.id === 10,\\n}))\\n</script>\\n\\n<style scoped>\\n\\n.episodeManageBanner {\\n  @apply bg-black text-red-600;\\n}\\n\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import script from \"./VideoJsAux.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./VideoJsAux.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"w-full h-fit bg-yellow-400\">\n<!--    <video ref=\"videoPlayerAux\" :id=\"id\" class=\"vjs-layout-tiny w-full\" playsinline controls autoplay-->\n<!--           muted/>-->\n\n    <video-js :id=\"id\"\n              class=\"video-js vjs-layout-tiny w-96 h-64 bg-blue-400\"\n              autoplay\n              muted\n              playsinline\n              crossorigin=\"anonymous\"\n    >\n      <source :src=\"source\"\n              :type=\"sourceType\">\n    </video-js>\n\n\n\n\n  </div>\n\n\n\n\n</template>\n\n\n<script setup>\nimport { onMounted, onBeforeUnmount } from \"vue\"\nimport videojs from 'video.js'\nimport 'video.js/dist/video-js.css'\nimport { useVideoAuxPlayerStore } from \"@/Stores/VideoAuxPlayerStore\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nconst appSettingStore = useAppSettingStore()\nimport { useStreamStore } from \"@/Stores/StreamStore\"\nimport VideoJs from '@/Components/Global/VideoPlayer/VideoJs/VideoJs.vue'\n\nconst videoAuxPlayerStore = useVideoAuxPlayerStore()\nconst streamStore = useStreamStore()\n\nconst props = defineProps({\n  options: Object,\n  id: String,\n  source: String,\n  sourceType: String\n})\n\nonMounted(() => {\n  const videoElementId = props.id\n  const playerOptions = {\n    // Define your player options here\n    controlBar: {\n      audioTrackButton: false,\n      autoHide: true,\n      captionsButton: false,\n      chaptersButton: false,\n      currentTimeDisplay: false,\n      customControlSpacer: false,\n      descriptionsButton: false,\n      durationDisplay: false,\n      fullscreenToggle: false, // Removes the full screen option\n      liveDisplay: false,\n      pictureInPictureToggle: false,\n      playToggle: false,\n      playbackRateMenuButton: false,\n      progressControl: {seekBar: false},\n      remainingTimeDisplay: false,\n      seekToLive: false,\n      subsCapsButton: false,\n      subtitlesButton: false,\n      timeDivider: false,\n      volumePanel: {\n        inline: true,\n        volumeBar: {\n          vertical: false,\n          liveDisplay: false,\n        },\n      },\n    },\n    userActions: {\n      hotkeys: true, // Enable hotkeys to show/hide controls\n    },\n    controls: true,\n    muted: false, // Start muted to comply with autoplay policies\n    inactivityTimeout: 0,\n    autoplay: true,\n    preload: 'auto',\n    // techOrder: ['html5'],\n    html5: {\n      hls: {\n        overrideNative: !videojs.browser.IS_SAFARI, // Override native HLS on non-Safari browsers\n      },\n    },\n  }\n\n  // Initialize Video.js player\n  const videoAuxPlayer = videojs(videoElementId, playerOptions);\n\n  // Use the store to manage the player\n  videoAuxPlayerStore.setPlayer(videoAuxPlayer);\n\n  // Access the video DOM element controlled by VideoJS\n  const videoDomElement = videoAuxPlayer.el();\n\n  // Disable right-click on the video element\n  videoDomElement.addEventListener('contextmenu', (event) => {\n    event.preventDefault();\n  });\n})\n\nonBeforeUnmount(() => {\n  let videoAuxPlayer = videojs(props.id)\n  videoAuxPlayer.dispose()\n})\n\n</script>","import script from \"./MistStreamPushDestinationForm.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./MistStreamPushDestinationForm.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <!-- You can open the modal using ID.showModal() method -->\n\n  <dialog id=\"mistStreamPushDestinationForm\" class=\"modal\">\n    <div class=\"modal-box\">\n      <form method=\"dialog\">\n        <button class=\"btn btn-sm btn-circle btn-ghost absolute right-2 top-2\">✕</button>\n      </form>\n      <h3 class=\"font-bold text-lg\">{{ mode === 'add' ? 'Add Push Destination' : 'Edit Push Destination' }}</h3>\n\n      <form @submit.prevent=\"submitForm\">\n        <!-- Form fields for your model's attributes -->\n        <div class=\"my-3 flex flex-col space-y-2\">\n          <input v-model=\"form.rtmp_url\"\n                 type=\"text\"\n                 placeholder=\"RTMP URL\"\n                 class=\"input input-bordered\"\n                 required >\n          <input v-model=\"form.rtmp_key\"\n                 type=\"text\"\n                 placeholder=\"RTMP Key\"\n                 class=\"input input-bordered\" >\n          <textarea v-model=\"form.comment\" class=\"textarea textarea-bordered\" placeholder=\"Optional Comment...\" />\n\n          <div v-if=\"notificationStore.errorMessage\" role=\"alert\" class=\"alert alert-error\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\" /></svg>\n            <div class=\"w-full flex flex-row justify-between\">\n              <div>{{ notificationStore.formattedErrorMessage }}</div>\n              <div><button @click.prevent=\"notificationStore.clearErrorMessage\" class=\"btn btn-xs\">OK</button></div>\n            </div>\n          </div>\n          <!-- Add other fields as necessary -->\n          <button type=\"submit\" class=\"mt-2 btn btn-primary text-white\">{{ mode    === 'add' ? 'Add' : 'Save Changes' }}</button>\n        </div>\n      </form>\n    </div>\n  </dialog>\n</template>\n\n<script setup>\nimport { ref, watchEffect } from 'vue'\nimport { useNotificationStore } from '@/Stores/NotificationStore'\n\nconst notificationStore = useNotificationStore()\n\nlet props = defineProps({\n  destinationDetails: Object,\n  mode: String,\n})\n\n// Define your emits\nconst emit = defineEmits(['update-success']);\n\nconst form = ref({\n  mist_stream_wildcard_id: props.destinationDetails.mist_stream_wildcard_id,\n  id: props.destinationDetails.id,\n  rtmp_url: props.destinationDetails.rtmp_url,\n  rtmp_key: props.destinationDetails.rtmp_key,\n  comment: props.destinationDetails.comment,\n  errors: '',\n  // Initialize other model attributes here\n});\n\n// Use watchEffect to reactively update form whenever props.destinationDetails changes\nwatchEffect(() => {\n  form.value.mist_stream_wildcard_id = props.destinationDetails.mist_stream_wildcard_id || '';\n  form.value.id = props.destinationDetails.id || '';\n  form.value.rtmp_url = props.destinationDetails.rtmp_url || '';\n  form.value.rtmp_key = props.destinationDetails.rtmp_key || '';\n  form.value.comment = props.destinationDetails.comment || '';\n  // Initialize other model attributes here\n});\n\nconst submitForm = async () => {\n  let url = '/mist-stream-push-destinations'; // Default URL for adding\n  let method = 'post'; // Default method for adding\n\n  // Check if the mode is 'edit' to adjust the URL and method as needed\n  if (props.mode === 'edit' && props.destinationDetails.id) {\n    url += `/${props.destinationDetails.id}`; // Append the destination ID for the update operation\n    method = 'put'; // Use PUT for updating, assuming your Laravel resource controller follows RESTful conventions\n  }\n\n  try {\n    // Perform the request using Axios\n    const response = await axios({\n      method: method,\n      url: url,\n      data: form.value, // Assuming formData is a reactive ref holding your form data\n    });\n\n    // Handle response here, e.g., show a success message, fetch updated list, etc.\n    console.log('Success:', response.data);\n    emit('update-success');\n    form.value.errors = ''\n\n    // Close the modal\n    document.getElementById('mistStreamPushDestinationForm').close();\n  } catch (error) {\n    if (error.response && error.response.data && error.response.data.errors) {\n      // Assign all errors from the response to formErrors\n      notificationStore.errorMessage = error.response.data.errors;\n    } else {\n      // General error handling\n      console.error('Submission error', error);\n    }\n  }\n}\n\n</script>","<template>\n  <div class=\"mx-0 md:mx-4 mt-4 mb-2 px-2 md:px-6 py-1\">\n    <div\n        class=\"text-sm font-semibold  text-white text-center w-full border-2 rounded uppercase px-0 md:px-6 py-1 \"\n        :class=\"[ goLiveStore.isLive ? 'bg-gray-600 border-gray-600 ' : 'bg-red-600 border-red-600' ]\">\n      Go Live Instructions\n    </div>\n    <div class=\"shadow overflow-hidden border-2 border-red-600 rounded p-2 md:p-6\"\n         :class=\"[ goLiveStore.isLive ? 'bg-gray-100' : 'bg-red-100' ]\">\n\n\n      <div class=\"flex flex-row flex-wrap-reverse w-full justify-between\">\n        <div>\n          <div class=\"mb-2\">\n            <button @click=\"appSettingStore.btnRedirect('/training/go-live-using-zoom')\"\n                    class=\"btn bg-blue-500 hover:bg-blue-700 rounded-lg text-white\">How To Stream From Zoom\n            </button>\n            <button @click=\"openObsInstructions = !openObsInstructions\"\n                    class=\"btn bg-blue-500 hover:bg-blue-700 rounded-lg text-white ml-2 \">How To Stream From OBS\n            </button>\n\n          </div>\n          <div v-if=\"openObsInstructions\">\n            <h2>Stream from OBS or other software using these details:</h2>\n            <div>RTMP full url: <span v-if=\"rtmpUri && streamKey\" class=\"font-bold\">{{ rtmpUri }}{{ streamKey }}</span>\n              &nbsp;<button v-if=\"rtmpUri && streamKey\" @click=\"copyFullUrl\">\n                <font-awesome-icon v-if=\"rtmpUri && streamKey\" icon=\"fa-clipboard\"\n                                   class=\"text-blue-500 hover:text-blue-700 hover:cursor-pointer\"/>\n              </button>\n              <span v-if=\"showCopiedFullUrl\" class=\"ml-1 copied-message\" style=\"transition: opacity 0.5s; opacity: 1;\">Copied!</span>\n            </div>\n            <div>RTMP url: <span class=\"font-bold\">{{ rtmpUri }}</span>\n              &nbsp;<button v-if=\"rtmpUri\" @click=\"copyRtmpUri\">\n                <font-awesome-icon v-if=\"rtmpUri\" icon=\"fa-clipboard\"\n                                   class=\"text-blue-500 hover:text-blue-700 hover:cursor-pointer\"/>\n              </button>\n              <span v-if=\"showCopiedRtmpUri\" class=\"ml-1 copied-message\" style=\"transition: opacity 0.5s; opacity: 1;\">Copied!</span>\n            </div>\n            <div>RTMP stream key: <span class=\"font-bold\">{{ streamKey }}</span>\n              &nbsp;<button v-if=\"streamKey\" @click=\"copyStreamKey\">\n                <font-awesome-icon v-if=\"streamKey\" icon=\"fa-clipboard\"\n                                   class=\"text-blue-500 hover:text-blue-700 hover:cursor-pointer\"/>\n              </button>\n              <span v-if=\"showCopiedStreamKey\" class=\"ml-1 copied-message\"\n                    style=\"transition: opacity 0.5s; opacity: 1;\">Copied!</span>\n            </div>\n          </div>\n        </div>\n        <div class=\"flex flex-row flex-wrap\">\n          <div class=\"mb-2\">\n            <button v-if=\"!goLiveStore.isRecording\" @click=\"goLiveStore.startRecording\"\n                    class=\"btn text-white bg-green-500 hover:bg-green-700 uppercase\"\n            >Start Recording\n            </button>\n            <button v-else @click=\"goLiveStore.stopRecording\"\n                    class=\"btn text-white bg-red-700 hover:bg-red-900 uppercase\"\n            >Stop Recording\n            </button>\n            <div v-if=\"!goLiveStore.isRecording\" class=\"text-xs text-green-500 font-semibold tracking-wider\">Premium\n              Creator\n              Service\n            </div>\n          </div>\n          <div class=\"ml-2\">\n            <button v-if=\"!goLiveStore.isLive\" @click=\"goLiveStore.goLive\"\n                    class=\"btn text-white bg-green-500 hover:bg-green-700 uppercase\"\n            >Go Live Now\n            </button>\n            <button v-else @click=\"goLiveStore.stopLive\" class=\"btn text-white bg-red-700 hover:bg-red-900 uppercase\"\n            >End Live\n            </button>\n            <div v-if=\"!goLiveStore.isLive\" class=\"text-xs text-green-500 font-semibold tracking-wider\">Premium Creator\n              Service\n            </div>\n          </div>\n          <div></div>\n          <div>Live will begin in... &nbsp;</div>\n          <div class=\"font-semibold\">{{ formattedCountdown }} (for demo purposes only)</div>\n        </div>\n      </div>\n\n\n      <div class=\"flex flex-col justify-center mt-3 h-fit\">\n        <div class=\"text-xs tracking-wider font-semibold mb-1 pl-1\">VIDEO STREAM</div>\n\n        <div class=\"flex flex-row flex-wrap\">\n          <div class=\"flex flex-col\">\n            <div class=\"px-10 h-fit w-fit\">\n              <button @click=\"reloadPlayer\"\n                      class=\"btn btn-xs w-full\"\n                      :class=\"liveOrRecordingGrayButtonClass\"\n              >Reload Player\n              </button>\n              <div v-if=\"goLiveStore.isLive || goLiveStore.isRecording\"\n                   class=\"w-full bg-red-700 text-white text-center uppercase font-bold\">\n                <span v-if=\"goLiveStore.isLive\">LIVE</span> <span v-if=\"goLiveStore.isLive && goLiveStore.isRecording\"> + </span>\n                <span v-if=\"goLiveStore.isRecording\">RECORDING</span>\n              </div>\n              <video-js-aux :id=\"`aux-player`\"\n                            :source=\"videoSource\"\n                            :sourceType=\"videoSourceType\"\n                            class=\"\"\n                            :class=\"liveOrRecordingVideoBorderClass\"/>\n\n\n            </div>\n            <div class=\"flex flex-row px-10\">\n              <div class=\"mt-2\">\n                <button v-if=\"!videoPlayerStore.muted\"\n                        class=\"btn\"\n                        :class=\"liveOrRecordingGrayButtonClass\"\n                        @click=\"videoPlayerStore.mute\">Mute Main Player Audio\n                </button>\n                <button v-else\n                        class=\"btn\"\n                        @click=\"videoPlayerStore.unMute\"\n                        :class=\"liveOrRecordingGrayButtonClass\">Turn On Main Player Audio\n                </button>\n              </div>\n              <div class=\"mt-2 ml-2\">\n                <button v-if=\"!videoAuxPlayerStore.muted\"\n                        class=\"btn\"\n                        :class=\"liveOrRecordingGrayButtonClass\"\n                        @click=\"videoAuxPlayerStore.mute\">Mute Live Stream\n                  Video\n                </button>\n                <button v-else\n                        class=\"btn\"\n                        :class=\"liveOrRecordingGrayButtonClass\"\n                        @click=\"videoAuxPlayerStore.unMute\">Turn On Live Stream Audio\n                </button>\n              </div>\n            </div>\n          </div>\n\n          <div v-if=\"goLiveStore.streamInfo && !goLiveStore.streamInfo.error\" class=\"w-fit\"\n               :key=\"goLiveStore.selectedShowId\">\n            <div>\n              <h3>Stream Info</h3>\n              <!--                <RecursivePropertyList :object=\"serverInfo\" />-->\n\n              <p><strong>Width:</strong> {{ goLiveStore.streamInfo?.width }}</p>\n              <p><strong>Height:</strong> {{ goLiveStore.streamInfo?.height }}</p>\n\n              <!-- Assuming you want to display tracks info specifically -->\n              <div v-if=\"goLiveStore.streamInfo?.meta?.tracks\">\n                <h4 class=\"font-semibold\">Tracks</h4>\n                <ul>\n                  <li v-for=\"(track, name) in goLiveStore?.streamInfo?.meta.tracks\" :key=\"name\">\n                    &middot; {{ name }} - Codec: {{ track.codec }}, Rate: {{ track.rate }}\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n          <div v-if=\"!goLiveStore?.streamInfo && !goLiveStore?.streamInfo?.error\">\n            <div class=\"flex flex-col\">\n              <span class=\"mb-2\">Loading stream data...</span>\n              <span class=\"loading loading-spinner text-neutral\"></span>\n            </div>\n\n          </div>\n          <div v-if=\"goLiveStore?.streamInfo?.error\">\n            <div class=\"flex flex-col\">\n              <span class=\"mb-2\">{{ goLiveStore?.streamInfo?.error }}</span>\n            </div>\n\n          </div>\n\n        </div>\n\n      </div>\n\n\n      <div class=\"mx-4 mt-4 mb-2 px-6 py-1 \">\n        <div\n            class=\"text-sm font-semibold bg-blue-600 text-white text-center w-full border-2 border-blue-600 rounded uppercase px-6 py-1 \">\n          Push Destinations\n        </div>\n        <div class=\"shadow bg-blue-100 overflow-hidden border-2 border-blue-600 rounded p-6 space-y-3\">\n          <div class=\"flex flex-row justify-between\">\n            <div><h2 class=\"text-xl font-bold mb-4\">Push Destinations</h2></div>\n            <div>\n              <button class=\"btn bg-blue-600 hover:bg-blue-500 text-white font-semibold rounded-lg\"\n                      @click.prevent=\"addDestination\">Add Push\n                Destinations\n              </button>\n            </div>\n          </div>\n          <div v-if=\"mistStreamPushDestinations.length === 0\">\n            <div>Set up <span class=\"font-bold\">push destinations:</span></div>\n            <div>Here you can set additional streaming destinations such as Facebook, YouTube, Rumble, Twitch, etc. and\n              notTV will automatically start pushing to those destinations when you go live.\n            </div>\n          </div>\n          <div v-if=\"mistStreamPushDestinations\">\n            <div class=\"flex flex-col gap-4\">\n              <div v-for=\"destination in mistStreamPushDestinations\" :key=\"destination.id\"\n                   class=\"border p-4 rounded-lg shadow flex flex-row items-center gap-4\">\n                <img :src=\"destination.destination_image\" alt=\"Destination Image\"\n                     class=\"w-24 h-24 object-cover rounded-full\"/>\n                <div class=\"flex-grow\">\n                  <h3 class=\"text-lg font-semibold\">{{ destination.destination_name }}</h3>\n                  <h4 class=\"\">{{ destination.comment }}</h4>\n                  <p v-if=\"destination.push_is_started\" class=\"text-green-500\">Is Active</p>\n                  <p v-if=\"destination.has_auto_push && !destination.push_is_started\" class=\"text-green-500\">Auto push\n                    is enabled</p>\n                  <div class=\"flex gap-2 mt-2\">\n                    <button v-if=\"destination.push_is_started\" @click=\"stopPush(destination.id)\"\n                            class=\"py-2 px-4 bg-red-500 text-white rounded hover:bg-red-700 transition duration-150\">\n                      Stop Push\n                    </button>\n                    <button v-else @click=\"startPush(destination.id)\"\n                            class=\"py-2 px-4 bg-blue-500 text-white rounded hover:bg-blue-700 transition duration-150\">\n                      Start Push\n                    </button>\n                    <button v-if=\"!destination.has_auto_push && !destination.push_is_started\"\n                            @click=\"enableAutoPush(destination.id)\"\n                            class=\"py-2 px-4 bg-yellow-500 text-white rounded hover:bg-yellow-600 transition duration-150\">\n                      Auto Push\n                    </button>\n                    <button v-if=\"destination.has_auto_push && !destination.push_is_started\"\n                            @click=\"disableAutoPush(destination.id)\"\n                            class=\"py-2 px-4 bg-yellow-500 text-white rounded hover:bg-yellow-600 transition duration-150\">\n                      Remove Auto Push\n                    </button>\n                  </div>\n                </div>\n                <div class=\"flex flex-row justify-end\">\n                  <!--                  <button @click=\"editDestination(destination.id)\" class=\"py-2 px-4 bg-green-500 text-white rounded hover:bg-green-600 transition duration-150\">Edit</button>-->\n                  <!--                  <button @click=\"deleteDestination(destination.id)\" class=\"py-2 px-4 bg-gray-500 text-white rounded hover:bg-gray-600 transition duration-150\">Delete</button>-->\n\n                  <button\n                      @click.prevent=\"editDestination(destination)\"\n                      class=\"btn btn-sm text-white font-semibold bg-blue-500 hover:bg-blue-600 rounded-lg\">\n                    <font-awesome-icon icon=\"fa-pencil\" class=\"my-1 mx-1\"/>\n                  </button>\n                </div>\n                <button\n                    @click.prevent=\"deleteDestination(destination.id)\"\n                    class=\"btn btn-sm text-white font-semibold bg-red-500 hover:bg-red-600 rounded-lg\"\n                >\n                  <font-awesome-icon icon=\"fa-trash-can\" class=\"my-1 mx-1\"/>\n                </button>\n\n\n              </div>\n            </div>\n          </div>\n        </div>\n\n      </div>\n      <MistStreamPushDestinationForm @update-success=\"getMistStreamPushDestinations\"\n                                     :destinationDetails=\"destinationDetails\"\n                                     :mode=\"mistStreamPushDestinationFormModalMode\"/>\n\n    </div>\n\n  </div>\n\n  <div class=\"mx-4 mt-4 mb-8 px-6 py-1 \">\n    <div\n        class=\"text-sm font-semibold bg-orange-600 text-white text-center w-full border-2 border-orange-600 rounded uppercase px-6 py-1 \">\n      Commercial Breaks\n    </div>\n    <div class=\"shadow bg-orange-100 overflow-hidden border-2 border-orange-600 rounded p-6 space-y-3\">\n      <div></div>\n      <div>Click the <span class=\"font-bold\">Trigger Commercial Break</span> button below to go to commercial.</div>\n      <div>You will see a countdown timer until the show resumes. This will be 1-2 minutes.</div>\n      <div>As a notTV creator, your voice matters. How can this feature be improved to better serve you and your\n        sponsors?\n        Please email and let us know: <a href=\"mailto:hello@not.tv\" target=\"_blank\"\n                                         class=\"text-blue-500 hover:text-blue-600\">hello@not.tv</a>\n      </div>\n      <div class=\"w-full flex justify-center pt-4\">\n        <button onclick=\"setCommercialBreakNotice.showModal()\"\n                class=\"bg-orange-600 hover:bg-orange-500 text-white font-semibold rounded-lg px-4 py-2\">Trigger\n          Commercial Break\n        </button>\n      </div>\n    </div>\n\n  </div>\n\n\n</template>\n\n<script setup>\n// import { useTimeAgo } from '@vueuse/core'\nimport { computed, onBeforeUnmount, onMounted, onUnmounted, ref, watchEffect } from 'vue'\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\nimport { useVideoPlayerStore } from '@/Stores/VideoPlayerStore'\nimport { useVideoAuxPlayerStore } from '@/Stores/VideoAuxPlayerStore'\nimport { useGoLiveStore } from '@/Stores/GoLiveStore'\nimport VideoJsAux from '@/Components/Global/VideoPlayer/VideoJs/VideoJsAux'\nimport videojs from 'video.js'\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome'\nimport { useClipboard } from '@vueuse/core'\nimport MistStreamPushDestinationForm from '@/Components/Global/MistStreams/MistStreamPushDestinationForm'\n\nconst appSettingStore = useAppSettingStore()\nconst videoPlayerStore = useVideoPlayerStore()\nconst videoAuxPlayerStore = useVideoAuxPlayerStore()\nconst goLiveStore = useGoLiveStore()\n\nlet props = defineProps({\n  // show: Object,\n})\n\nconst showCopiedFullUrl = ref(false)\nconst showCopiedRtmpUri = ref(false)\nconst showCopiedStreamKey = ref(false)\nconst {copy} = useClipboard()\n\nconst openObsInstructions = ref(false)\n\n\nconst mistStreamPushDestinations = ref([])\nconst mistStreamPushDestinationFormModalMode = ref('add')\nconst destinationDetails = ref({})\n\nasync function getMistStreamPushDestinations() {\n  // Assuming `goLiveStore.selectedShow.mist_stream_wildcard.id` holds the wildcard ID\n  const wildcardId = goLiveStore?.selectedShow?.mist_stream_wildcard?.id\n  if (wildcardId) {\n    try {\n      // Append the wildcard ID as a query parameter\n      const response = await axios.get(`/mist-stream-push-destinations?wildcardId=${wildcardId}`)\n      mistStreamPushDestinations.value = response.data // Update the reactive variable\n    } catch (error) {\n      console.error('Failed to fetch push destinations:', error)\n    }\n  } else {\n    console.error('No wildcard ID found')\n  }\n}\n\n\n\nasync function startPush(destinationId) {\n  console.log(`Starting push for destination ${destinationId}`);\n  const data = { destinationId };\n\n  try {\n    const response = await axios.post('/mist-stream/start-push', data, {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n\n    console.log('Push started successfully:', response.data);\n    // Update the component's state to reflect the change\n    const index = mistStreamPushDestinations.value.findIndex(destination => destination.id === destinationId);\n    if (index !== -1) {\n      mistStreamPushDestinations.value[index].push_is_started = 1;\n    }\n  } catch (error) {\n    console.error('Error starting push:', error);\n    // Handle the error appropriately in your UI\n  }\n}\n\nasync function stopPush(destinationId) {\n  console.log(`Stopping push for destination ${destinationId}`);\n  const data = { destinationId };\n\n  try {\n    const response = await axios.post('/mist-stream/stop-push', data, {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n\n    console.log('Push stopped successfully:', response.data);\n    // Update the component's state to reflect the change\n    const index = mistStreamPushDestinations.value.findIndex(destination => destination.id === destinationId);\n    if (index !== -1) {\n      mistStreamPushDestinations.value[index].push_is_started = 0;\n    }\n  } catch (error) {\n    console.error('Error stopping push:', error);\n    // Handle the error appropriately in your UI\n  }\n}\n\nconst enableAutoPush = async (destinationId) => {\n  const data = {\n    destinationId,\n  }\n\n  try {\n    const response = await axios.post('/mist-stream/push-auto-add', data, {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n\n    console.log('Auto push enabled successfully:', response.data)\n    const index = mistStreamPushDestinations.value.findIndex(destination => destination.id === destinationId);\n    if (index !== -1) {\n      mistStreamPushDestinations.value[index].has_auto_push = 1;\n    }\n  } catch (error) {\n    console.error('Error enabling auto push:', error)\n  }\n}\n\nasync function disableAutoPush(destinationId) {\n  console.log(`Disabling auto push for destination ${destinationId}`);\n  const data = {\n    destinationId,\n  };\n\n  try {\n    const response = await axios.post('/mist-stream/push-auto-remove', data, {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n\n    console.log('Auto push disabled successfully:', response.data);\n    const index = mistStreamPushDestinations.value.findIndex(destination => destination.id === destinationId);\n    if (index !== -1) {\n      mistStreamPushDestinations.value[index].has_auto_push = 0;\n    }\n  } catch (error) {\n    console.error('Error disabling auto push:', error);\n  }\n}\n\nconst addDestination = async () => {\n  mistStreamPushDestinationFormModalMode.value = 'add'\n  const wildcardId = goLiveStore.selectedShow?.mist_stream_wildcard?.id\n  destinationDetails.value = {mist_stream_wildcard_id: wildcardId} // Initialize destinationDetails with the wildcard ID\n\n  document.getElementById('mistStreamPushDestinationForm').showModal()\n}\n\nconst editDestination = async (destination) => {\n  mistStreamPushDestinationFormModalMode.value = 'edit'\n  destinationDetails.value = destination\n  document.getElementById('mistStreamPushDestinationForm').showModal()\n  console.log(`Editing destination with ID: ${destination}`)\n  const index = mistStreamPushDestinations.value.findIndex(destination => destination.id === destinationDetails.value.id);\n  if (index !== -1) {\n    mistStreamPushDestinations.value[index].has_auto_push = 0;\n  }\n}\n\nconst deleteDestination = async (destinationId) => {\n  // Confirm deletion with the user before proceeding\n  if (confirm(`Are you sure you want to delete the destination with ID: ${destinationId}?`)) {\n    try {\n      // Perform the delete operation\n      await axios.delete(`/mist-stream-push-destinations/${destinationId}`)\n      console.log(`Deleted destination with ID: ${destinationId}`)\n      // Optionally, remove the item from your local state to update the UI\n      mistStreamPushDestinations.value = mistStreamPushDestinations.value.filter(destination => destination.id !== destinationId)\n    } catch (error) {\n      console.error(`Error deleting destination with ID: ${destinationId}`, error)\n    }\n  }\n}\n\n// const copyText = () => {\n//   copy('Text to be copied');\n//   showCopied.value = true;\n//   setTimeout(() => {\n//     showCopied.value = false;\n//   }, 2000); // Hide the message after 2 seconds\n// };\n\nlet videoSource = videoPlayerStore.mistServerUri + 'hls/' + goLiveStore?.selectedShow?.mist_stream_wildcard.name\n    + '/index.m3u8'\nlet videoSourceType = 'application/vnd.apple.mpegURL'\n\n// Fetch server info on component mount\n// goLiveStore.fetchStreamInfo(goLiveStore?.selectedShow?.mist_stream_wildcard.name)\n// goLiveStore.fetchRtmpUri()\n\nconst fullUrl = ref('')\nconst rtmpUri = ref('')\nconst streamKey = ref('')\n\n// Initialize fetching of server information\ngoLiveStore.fetchStreamInfo(goLiveStore?.selectedShow?.mist_stream_wildcard.name)\ngoLiveStore.fetchRtmpUri()\n\n// Reactively update URLs when the store updates\nwatchEffect(() => {\n  if (goLiveStore.rtmpUri) {\n    rtmpUri.value = goLiveStore.rtmpUri + 'live/'\n    // Check if it's an episode or a selected show and update accordingly\n    if (goLiveStore.isEpisode && goLiveStore.episode?.mist_stream_wildcard?.name) {\n      streamKey.value = goLiveStore.episode.mist_stream_wildcard.name\n    } else if (!goLiveStore.isEpisode && goLiveStore.selectedShow?.mist_stream_wildcard?.name) {\n      streamKey.value = goLiveStore.selectedShow.mist_stream_wildcard.name\n    }\n    fullUrl.value = `${rtmpUri.value}${streamKey.value}`\n  }\n})\n\n// Function to handle the copy action and display the \"copied\" message for each type\nconst copyFullUrl = () => {\n  copy(fullUrl.value)\n  showCopiedFullUrl.value = true\n  setTimeout(() => showCopiedFullUrl.value = false, 1000)\n}\n\nconst copyRtmpUri = () => {\n  copy(rtmpUri.value)\n  showCopiedRtmpUri.value = true\n  setTimeout(() => showCopiedRtmpUri.value = false, 1000)\n}\n\nconst copyStreamKey = () => {\n  copy(streamKey.value)\n  showCopiedStreamKey.value = true\n  setTimeout(() => showCopiedStreamKey.value = false, 1000)\n}\n\n// if (goLiveStore.isEpisode) {\n//   fullUrl = rtmpUri.value + goLiveStore?.episode?.mist_stream_wildcard?.name\n//   streamKey = goLiveStore?.episode?.mist_stream_wildcard?.name\n// } else if (!goLiveStore.isEpisode) {\n//   fullUrl = rtmpUri.value + goLiveStore?.selectedShow?.mist_stream_wildcard?.name\n//   streamKey = goLiveStore?.selectedShow?.mist_stream_wildcard?.name\n// }\n\n// const copyFullUrl = () => copy(fullUrl);\n// const copyRtmpUri = () => copy(rtmpUri.value);\n// const copyStreamKey = () => copy(streamKey);\n//\n// watchEffect(() => {\n//   if (goLiveStore.rtmpUri) {\n//     rtmpUri.value = goLiveStore.rtmpUri + 'live/';\n//   }\n// });\n\n// Asynchronously fetch the JSON data\n// async function fetchServerInfo() {\n//   try {\n//     const response = await fetch('http://mist.nottv.io:8080/json_dvr_playback_2.js'); // Replace with your URL\n//     if (!response.ok) throw new Error('Failed to fetch');\n//     const data = await response.json();\n//     serverInfo.value = data; // Store the data in serverInfo\n//     console.log (serverInfo)\n//   } catch (error) {\n//     console.error('Error fetching server info:', error);\n//   }\n// }\n\n// let videoSrc = ref('')\n// let videoJsAux = ('aux-player')\n\n// const videoOptions = ref({\n//   autoplay: true,\n//   muted: true,\n//   controls: true,\n//   fill: true,\n//   sources: [\n//     {\n//       src: videoSource,\n//       type: videoSourceType,\n//     },\n//   ],\n// });\n\nconst reloadPlayer = () => {\n  let source = null\n  if (goLiveStore?.selectedShow?.mist_stream_wildcard?.name) {\n    source = goLiveStore?.selectedShow?.mist_stream_wildcard?.name\n    goLiveStore.fetchStreamInfo(goLiveStore?.selectedShow?.mist_stream_wildcard?.name)\n  } else if (goLiveStore?.episode?.mist_stream_wildcard?.name) {\n    source = goLiveStore?.episode?.mist_stream_wildcard?.name\n    goLiveStore.fetchStreamInfo(goLiveStore?.episode?.mist_stream_wildcard?.name)\n  }\n  let sourceUrl = videoPlayerStore.mistServerUri + 'hls/' + source + '/index.m3u8'\n  console.log('source url: ' + sourceUrl)\n  let sourceType = 'application/vnd.apple.mpegurl'\n  let videoJs = videojs('aux-player')\n  videoJs.src({'src': sourceUrl, 'type': sourceType})\n  // videoAuxPlayerStore.loadNewLiveSource(source, sourceType)\n  console.log('reload player')\n}\n\n// check push_auto_list and update\n\nonMounted(() => {\n  // videoSrc = goLiveStore.selectedShow.mist_stream_wildcard.name\n  // videoJsAux.src({'src': videoSrc, 'type': 'application/vnd.apple.mpegurl'});\n  // videoJsAux.ready(() => {\n  //\n  // })\n  startCountdown()\n\n  console.log('onPlayerReady AUX')\n  // fetchServerInfo()\n\n  getMistStreamPushDestinations()\n\n\n\n})\n\n// Initial countdown time in seconds (5 minutes * 60 seconds)\nconst countdownTime = 5 * 60\n// Reactive state for the countdown\nconst countdown = ref(countdownTime)\n\n// Computed property to format the countdown as mm:ss\nconst formattedCountdown = computed(() => {\n  const minutes = Math.floor(countdown.value / 60)\n  const seconds = countdown.value % 60\n  return `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`\n})\n\n// Function to start the countdown - temporary for demo purposes.\nconst startCountdown = () => {\n  const interval = setInterval(() => {\n    countdown.value--\n\n    if (countdown.value < 0) {\n      clearInterval(interval) // Stop the interval\n      countdown.value = countdownTime // Reset countdown\n      startCountdown() // Restart the countdown\n    }\n  }, 1000)\n}\n\nconst liveOrRecordingGrayButtonClass = computed(() => {\n  if (goLiveStore.isLive || goLiveStore.isRecording) {\n    return 'bg-gray-200 hover:bg-gray-400'\n  } else {\n    return ''\n  }\n})\n\nconst liveOrRecordingVideoBorderClass = computed(() => {\n  if (goLiveStore.isLive || goLiveStore.isRecording) {\n    return 'border-4 border-red-700'\n  } else {\n    return ''\n  }\n})\n// const mistStreamWildcardId = ref()\n// mistStreamWildcardId.value = goLiveStore?.selectedShow?.mist_stream_wildcard?.id\nconst channel = Echo.channel(`mistStreamWildcard.${goLiveStore?.selectedShow?.mist_stream_wildcard?.id}`);\nchannel\n    .subscribed(() => {\n      // Handle successful subscription\n      // This log will confirm the subscription success\n      console.log('Successfully subscribed to the channel!');\n    })\n    // .listen('.push-out-start', (event) => {\n    //   console.log('Event received:', event);\n    // })\n// channel.listen('.push-out-start', (event) => {\n//       console.log('push out start EVENT BROADCASTED!', event);\n//     })\n    .listen('.push-out-start', (event) => {\n      console.log('push out start EVENT BROADCASTED!')\n      const index = mistStreamPushDestinations.value.findIndex(destination =>\n          `${destination.rtmp_url}${destination.rtmp_key}` === event.requestUrl);\n      if (index !== -1) {\n        mistStreamPushDestinations.value[index].push_is_started = 1;\n      }\n    })\n    .listen('.push-end', (event) => {\n      console.log('push end EVENT BROADCASTED!')\n      const index = mistStreamPushDestinations.value.findIndex(destination =>\n          `${destination.rtmp_url}${destination.rtmp_key}` === event.requestUrl);\n      if (index !== -1) {\n        mistStreamPushDestinations.value[index].push_is_started = 0;\n      }\n    });\n\n// Cleanup when the component unmounts\nonUnmounted(() => {\n  channel.stopListening('.push-out-start');\n  channel.stopListening('.push-end');\n  Echo.leave(`mistStreamWildcard.${goLiveStore?.selectedShow?.mist_stream_wildcard?.id}`);\n});\n\n//\n// // Assuming props.show.mist_stream_wildcard.name exists and is reactive\n// const playerTargetId = ref('');\n//\n// const initializePlayer = () => {\n//   const targetElement = document.getElementById(playerTargetId.value);\n//   if (targetElement) {\n//     mistPlay(goLiveStore.selectedShow.mist_stream_wildcard.name, {\n//       target: targetElement,\n//       fillSpace: true\n//     });\n//   } else {\n//     console.error('Target element for video player not found.');\n//   }\n// };\n//\n// const removePlayer = () => {\n//   const existingContainer = document.getElementById(playerTargetId.value);\n//   if (existingContainer) {\n//     existingContainer.remove();\n//   }\n// };\n//\n//\n// const reloadPlayer = () => {\n//   removePlayer();\n//\n//   nextTick(() => {\n//     const newPlayerContainer = document.createElement('div');\n//     const uniqueId = `${goLiveStore.selectedShow.mist_stream_wildcard.name}-${Date.now()}`;\n//     newPlayerContainer.id = uniqueId;\n//     playerTargetId.value = uniqueId;\n//\n//     document.body.appendChild(newPlayerContainer); // Append to body or choose a specific container\n//\n//     loadAndInitializePlayer();\n//   });\n// };\n//\n// const loadAndInitializePlayer = () => {\n//   if (!window.mistplayers) {\n//     const playerScript = document.createElement(\"script\");\n//     playerScript.src = \"https://mist.nottv.io:443/player.js\"; // Assuming HTTPS site\n//     document.head.appendChild(playerScript);\n//     playerScript.onload = initializePlayer;\n//   } else {\n//     initializePlayer();\n//   }\n// };\n//\n// onMounted(() => {\n//   playerTargetId.value = `${goLiveStore.selectedShow.mist_stream_wildcard.name}-${Date.now()}`;\n//   loadAndInitializePlayer();\n// });\n//\n// watch(() => playerTargetId.value, (newVal) => {\n//   if (newVal) {\n//     loadAndInitializePlayer();\n//   }\n// });\n//\n// onBeforeUnmount(() => {\n//   removePlayer(); // Ensure the player's container is removed when the component unmounts\n// });\n\n\n//\n//\n// const loadAndInitializePlayer = () => {\n//   if (!window.mistplayers) {\n//     const playerScript = document.createElement(\"script\");\n//     playerScript.src = location.protocol === \"https:\" ? \"https://mist.nottv.io:443/player.js\" : \"http://mist.nottv.io:8080/player.js\";\n//     document.head.appendChild(playerScript);\n//     playerScript.onload = initializePlayer;\n//   } else {\n//     initializePlayer();\n//   }\n// };\n//\n// const removePlayer = () => {\n//   const targetElement = document.getElementById(playerTargetId.value);\n//   if (targetElement) {\n//     // Option 1: Remove the child element completely\n//     targetElement.parentNode.removeChild(targetElement);\n//\n//     // OR Option 2: Reset the content of the element\n//     // targetElement.innerHTML = '';\n//\n//     console.log('Video player removed.');\n//   } else {\n//     console.error('Target element for video player not found for removal.');\n//   }\n// };\n//\n// onMounted(() => {\n//   playerTargetId.value = `${props.show.mist_stream_wildcard.name}-${Date.now()}` // Set the target ID based on props\n//   console.log(playerTargetId.value)\n//   loadAndInitializePlayer();\n//   // nextTick(() => {\n//   //   loadAndInitializePlayer();\n//   // });\n// });\n//\n// // onMounted(() => {\n// //\n// //   // loadAndInitializePlayer()\n// //   if (!window.mistplayers) {\n// //     const playerScript = document.createElement(\"script\");\n// //     playerScript.src = location.protocol === \"https:\" ? \"https://mist.nottv.io:443/player.js\" : \"http://mist.nottv.io:8080/player.js\";\n// //     document.head.appendChild(playerScript);\n// //     playerScript.onload = initializePlayer;\n// //   } else {\n// //     initializePlayer();\n// //   }\n// // });\n//\n// // Define `reloadPlayer` method to reload the player. This could be the same as `initializePlayer`\n// // if reloading simply means reinitializing.\n// const reloadPlayer = () => {\n//   // Remove the existing player and its container\n//   removePlayer();\n//\n//   // Recreate the container element for the player\n//   const newPlayerContainer = document.createElement('div');\n//   newPlayerContainer.id = `${props.show.mist_stream_wildcard.name}-${Date.now()}`; // Set the new target ID\n//   playerTargetId.value = newPlayerContainer.id; // Update the reactive reference\n//\n//   // Append the new container to the appropriate parent element in your DOM\n//   // Replace `parentElementSelector` with the actual selector of the parent where the player should be attached\n//   const parentElement = document.querySelector('parentElementSelector');\n//   if (parentElement) {\n//     parentElement.appendChild(newPlayerContainer);\n//   } else {\n//     console.error('Parent element for video player not found.');\n//     return;\n//   }\n//\n//   // Initialize the player in the new container\n//   loadAndInitializePlayer();\n// };\n//\n// // If there's a need to watch for `playerTargetId` changes to reinitialize the player\n// watch(() => playerTargetId.value, (newVal) => {\n//   // Load and initialize player only if newVal is truthy\n//   if (newVal) {\n//     loadAndInitializePlayer();\n//   }\n// });\n//\n// // const loadAndInitializePlayer = () => {\n// //   if (!window.mistplayers) {\n// //     const playerScript = document.createElement(\"script\");\n// //     playerScript.src = location.protocol === \"https:\" ? \"https://mist.nottv.io:443/player.js\" : \"http://mist.nottv.io:8080/player.js\";\n// //     document.head.appendChild(playerScript);\n// //     playerScript.onload = initializePlayer;\n// //   } else {\n// //     initializePlayer();\n// //   }\n// // };\n//\nonBeforeUnmount(() => {\n  // goLiveStore.reset()\n  // Example cleanup logic; adjust based on your player's API\n  // if (window.mistplayers && window.mistplayers[playerTargetId.value]) {\n  //   window.mistplayers[playerTargetId.value].destroy(); // Hypothetical destroy method\n  // }\n})\n//\n// onBeforeUnmount(() => {\n//   if (videoPlayer && typeof videoPlayer.dispose === 'function') {\n//     videoPlayer.dispose();\n//   }\n// });\n// let videoEmbedCode = props.episode.video_file_embed_code;\n\n// const timeAgo = useTimeAgo(new Date(2023, 10, 5))\n// const timeAgo = useTimeAgo(props.episode.scheduledDateTime)\n</script>\n\n<style scoped>\n@keyframes fadeOut {\n  from {\n    opacity: 1;\n  }\n  to {\n    opacity: 0;\n  }\n}\n</style>","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-9.use[1]!../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-9.use[2]!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./GoLive.vue?vue&type=style&index=0&id=1c68849c&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./GoLive.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./GoLive.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./GoLive.vue?vue&type=style&index=0&id=1c68849c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-1c68849c\"]])\n\nexport default __exports__","import script from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"mx-4 my-4\">\n    <div class=\"alert alert-info mt-4\"\n         v-if=\"props.flash.message\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" class=\"stroke-current shrink-0 w-6 h-6\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n      </svg>\n      <span>{{ props.flash.message }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-success mt-4 mx-3\"\n         v-if=\"props.flash.success\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.success }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-warning mt-4 mx-3\"\n         v-if=\"props.flash.warning\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"/>\n      </svg>\n      <span>{{ props.flash.warning }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-error mt-4 mx-3\"\n         v-if=\"props.flash.error\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.error }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n  </div>\n\n</template>\n\n<script setup>\nimport { Inertia } from \"@inertiajs/inertia\"\nimport { computed } from \"vue\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\n\nconst appSettingStore = useAppSettingStore()\n\nappSettingStore.showFlashMessage = true\n\nlet props = defineProps({\n  flash: Object,\n\n})\n\nconst messageType = computed(() => ({\n  'text-green-700 bg-green-100 dark:bg-green-200 dark:text-green-800': props.flash.success,\n  'text-blue-700 bg-blue-100 dark:bg-blue-200 dark:text-blue-800': props.flash.message,\n  'text-orange-700 bg-orange-100 dark:bg-orange-200 dark:text-orange-800': props.flash.warning,\n  'text-red-700 bg-red-100 dark:bg-red-200 dark:text-red-800': props.flash.error,\n}))\n\nconst clearFlashMessage = async () => {\n  await Inertia.post(route('flash.clear'));\n  Inertia.reload();\n};\n</script>\n","import script from \"./PopUpModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./PopUpModal.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import api from \"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-9.use[1]!../../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-9.use[2]!../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./EpisodeVideo.vue?vue&type=style&index=0&id=791da7b8&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./EpisodeVideo.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./EpisodeVideo.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./EpisodeVideo.vue?vue&type=style&index=0&id=791da7b8&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-791da7b8\"]])\n\nexport default __exports__","import script from \"./ManageShowEpisodeNoticeModals.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ManageShowEpisodeNoticeModals.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./EpisodeFooter.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./EpisodeFooter.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n\n  <div class=\"flex justify-between mt-6\">\n    <!-- Paginator -->\n    <!--                            <Pagination :links=\"`#`\" class=\"mt-6\"/>-->\n    <div>\n      <div v-if=\"can.editEpisode\"><span class=\"text-xs uppercase font-semibold\">Episode ID: </span><span\n          class=\"text-xs\">{{ episode.ulid }}</span></div>\n    </div>\n    <div>\n      <Link :href=\"`/teams/${team.slug}`\" class=\"text-blue-500 hover:text-blue-700 ml-2 uppercase\">\n        {{ team.name }}&nbsp;\n      </Link>\n\n      <span v-if=\"episode?.creative_commons?.name\"\n            class=\"text-xs font-semibold text-gray-500\">&nbsp;{{ episode?.creative_commons?.name }}&nbsp;<span v-if=\"!episode?.creative_commons?.id === 7\">&bull;&nbsp;</span></span>\n\n      <span class=\"text-xs font-semibold text-gray-500\"\n            v-if=\"episode?.creative_commons?.id === 7\">&nbsp;&copy;&nbsp;</span>\n\n      <!--                    If there is a copyright year display it... we need to remove the &copy; and replace it with whichever creative commons icon it needs -->\n      <span class=\"text-xs font-semibold text-gray-500\" v-if=\"show?.last_release_year > 0\">{{ show?.first_release_year }}-{{ show?.last_release_year }}</span>\n      <span class=\"text-xs font-semibold text-gray-500\" v-if=\"!show?.last_release_year && show?.first_release_year\">{{ show?.first_release_year }}</span>\n      <span class=\"text-xs font-semibold text-gray-500\"\n            v-if=\"!show?.last_release_year && !show?.first_release_year && episode?.copyrightYear\">{{\n          episode.copyrightYear\n        }}</span>\n\n      <!--                    If there is no copyright year then it's probably public domain... so we'll just display the creative commons name-->\n\n\n\n    </div>\n  </div>\n\n</template>\n\n<script setup>\n\ndefineProps({\n  team: Object,\n  episode: Object,\n  show: Object,\n  can: Object,\n})\n\nlet currentYear = new Date().getFullYear()\n\n</script>\n","import script from \"./ManageShowEpisodeDescription.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ManageShowEpisodeDescription.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"shadow overflow-hidden bg-gray-50 border-b border-gray-200 sm:rounded-lg p-5\">\n\n    <div class=\"flex flex-col my-6 ml-10 md:w-3/4 space-x-2 space-y-2\">\n      <div class=\"text-sm font-semibold uppercase mb-2\">Bonus Content\n        <div class=\"badge bg-orange-500 text-white text-xs ml-1 -mt-3\">Coming Soon!</div>\n      </div>\n      <div>\n      </div>\n      <div>Add videos, images, links and documents for the audience.</div>\n    </div>\n    <div class=\"mt-8 ml-10\">\n      <button\n          onclick=\"addBonusContentNotice.showModal()\"\n          class=\"bg-orange-600 hover:bg-orange-500 text-white font-semibold rounded-lg px-4 py-2\"\n      >Add Bonus Content\n      </button>\n    </div>\n\n\n    <!--                <div class=\"flex flex-row flex-wrap my-6 ml-10 md:w-3/4 space-x-2 space-y-2\">-->\n    <!--                    <div></div>-->\n    <!--                    <button onclick=\"teleprompterNotice.showModal()\" class=\"bg-blue-600 hover:bg-blue-500 text-white font-semibold rounded-lg px-4 py-2\">Open Teleprompter</button>-->\n    <!--                    <button onclick=\"vtrNotice.showModal()\" class=\"bg-blue-600 hover:bg-blue-500 text-white font-semibold rounded-lg px-4 py-2\">Open VTR</button>-->\n    <!--                    <button onclick=\"graphicsNotice.showModal()\" class=\"bg-blue-600 hover:bg-blue-500 text-white font-semibold rounded-lg px-4 py-2\">Open Graphics</button>-->\n    <!--                </div>-->\n\n\n  </div>\n\n</template>\n\n<script setup>\n\n</script>\n","import { render } from \"./ManageShowEpisodeBonusContent.vue?vue&type=template&id=1d50b7f0\"\nconst script = {}\n\nimport exportComponent from \"../../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"font-bold text-xl p-4 my-4 w-full text-center\"\n       :class=\"goLiveBanner\">\n    <div v-if=\"!teamStore.goLiveDisplay\">\n      <div v-if=\"episodeStatus.id < 6\" class=\"text-white uppercase hidden\">Create your episode</div>\n      <div v-if=\"episodeStatus.name\"><span class=\"uppercase text-xs text-white\">Status:</span> <span\n          :class=\"episodeStatusClass\">{{ episodeStatus.name }}</span></div>\n    </div>\n    <div v-else>\n      <span>You are about to go live.</span>\n      <!--                    if the episode is scheduled to go live then display the next line instead -->\n      <!--                    <span v-if=\"episode.scheduled_release > now\">You are scheduled to go live.</span>-->\n      <!--                    <span v-if=\"episode.isLive\">You are now live.</span>-->\n\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { computed } from \"vue\"\nimport { useTeamStore } from \"@/Stores/TeamStore\"\n\nconst teamStore = useTeamStore()\n\nlet props = defineProps({\n  episode: Object,\n  episodeStatus: Object,\n})\n\nconst goLiveBanner = computed(() => ({\n  'bg-red-500 text-white': teamStore.goLiveDisplay,\n  'bg-black text-red-600': !teamStore.goLiveDisplay\n}))\n\nconst episodeStatusClass = computed(() => ({\n  'font-semibold text-xl text-orange-400': props.episodeStatus.id === 1,\n  'text-xl text-green-400': props.episodeStatus.id === 2,\n  'font-semibold text-xl text-green-600': props.episodeStatus.id === 3,\n  'font-bold text-xl text-green-600': props.episodeStatus.id === 4,\n  'font-semibold text-xl text-purple-700': props.episodeStatus.id === 5,\n  'font-italic text-xl text-pink-500': props.episodeStatus.id === 6,\n  'font-bold text-xl light:text-black dark:text-white': props.episodeStatus.id === 7,\n  'font-medium text-xl text-gray-500': props.episodeStatus.id === 8,\n  'font-semibold font-italic text-xl text-red-700': props.episodeStatus.id === 9,\n  'font-bold text-xl text-red-800': props.episodeStatus.id === 10,\n}))\n</script>\n\n<style scoped>\n\n.episodeManageBanner {\n  @apply bg-black text-red-600;\n}\n\n</style>\n","import api from \"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-9.use[1]!../../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-9.use[2]!../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./ManageShowEpisodeTopBanner.vue?vue&type=style&index=0&id=7c175692&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./ManageShowEpisodeTopBanner.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ManageShowEpisodeTopBanner.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ManageShowEpisodeTopBanner.vue?vue&type=style&index=0&id=7c175692&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-7c175692\"]])\n\nexport default __exports__","import script from \"./EpisodeHeader.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./EpisodeHeader.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n\n  <div class=\"inline-flex items-center text-3xl font-semibold relative\">\n    <Link :href=\"`/shows/${show.slug}/episode/${episode.slug}`\" class=\"uppercase\">\n      <div class=\"flex flex-row space-x-2\">\n        <!--                <img :src=\"'/storage/images/' + show.poster\" alt=\"\" class=\"w-20 mr-2 justify-left\">-->\n        <SingleImage :image=\"episode.image\" alt=\"'episode poster'\"\n                     class=\"h-50 w-80 object-cover\"/>\n        <span class=\"hover:text-blue-700 pl-4 inline-flex items-center text-3xl font-semibold relative\">{{ episode.name }}</span>\n      </div>\n    </Link>\n\n  </div>\n\n\n</template>\n\n<script setup>\nimport { useShowStore } from \"@/Stores/ShowStore\"\nimport { useTeamStore } from \"@/Stores/TeamStore\"\nimport SingleImage from \"@/Components/Global/Multimedia/SingleImage\"\n\nconst showStore = useShowStore()\nconst teamStore = useTeamStore()\n\ndefineProps({\n  episode: Object,\n  show: Object,\n  team: Object,\n})\n\n</script>\n","import script from \"./ManageShowEpisodeHeader.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ManageShowEpisodeHeader.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n    <ShowEpisodeManageTopBanner :episode=\"episode\" :episodeStatus=\"episodeStatus\"/>\n\n    <header class=\"bg-gradient-to-r from-green-100 via-white to-transparent p-4 text-black rounded-lg\">\n      <div class=\"flex justify-between my-3\">\n        <div class=\"gap-2\">\n          <div class=\"font-bold mb-4 text-black\">MANAGE EPISODE</div>\n        </div>\n        <div class=\"flex flex-wrap-reverse justify-end gap-2\">\n          <div class=\"\" v-if=\"teamStore.can.goLive && !episode.video_file_url\">\n            <button\n                v-if=\"!goLiveStore.displayEpisodeGoLiveComponent\"\n                @click=\"goLiveStore.toggleDisplayEpisodeGoLiveComponent(episode)\"\n                :disabled=\"episode.show_episode_status_id > 6\"\n                class=\"px-4 py-2 text-white bg-red-600 hover:bg-red-500 rounded-lg disabled:bg-gray-400\"\n            >Go Live\n            </button>\n            <button\n                v-if=\"goLiveStore.displayEpisodeGoLiveComponent\"\n                @click=\"goLiveStore.toggleDisplayEpisodeGoLiveComponent()\"\n                class=\"px-4 py-2 text-white bg-red-600 hover:bg-red-500 rounded-lg disabled:bg-gray-400\"\n            >Cancel\n            </button>\n          </div>\n          <div>\n            <button\n                v-if=\"teamStore.can.editEpisode\"\n                @click=\"appSettingStore.btnRedirect(`/shows/${show.slug}/episode/${episode.slug}/edit`)\"\n                :disabled=\"goLiveStore.displayEpisodeGoLiveComponent\"\n                class=\"px-4 py-2 text-white bg-blue-600 hover:bg-blue-500 rounded-lg disabled:bg-gray-400\"\n            >Edit\n            </button>\n          </div>\n          <div>\n            <button\n                :disabled=\"goLiveStore.displayEpisodeGoLiveComponent\"\n                @click=\"appSettingStore.btnRedirect(`/shows/${show.slug}/manage`)\"\n                class=\"px-4 py-2 text-white bg-orange-600 hover:bg-orange-500 rounded-lg disabled:bg-gray-400\"\n            >Manage Show\n            </button>\n          </div>\n          <div>\n            <button\n                :disabled=\"goLiveStore.displayEpisodeGoLiveComponent\"\n                @click=\"appSettingStore.btnRedirect('/dashboard')\"\n                class=\"bg-black hover:bg-gray-800 text-white font-semibold px-4 py-2 rounded-lg disabled:bg-gray-400\"\n            >Dashboard\n            </button>\n\n          </div>\n        </div>\n      </div>\n      <div class=\"flex w-full justify-end gap-x-2\">\n        <div>\n          <button\n              hidden\n              v-if=\"!episode.video_file_url\"\n              @click=\"appSettingStore.btnRedirect(`/shows/${show.slug}/episode/${episode.slug}/upload`)\"\n              :disabled=\"goLiveStore.displayEpisodeGoLiveComponent\"\n              class=\"px-4 py-2 text-white font-semibold bg-orange-600 hover:bg-orange-500 rounded-lg disabled:bg-gray-400\"\n          >Upload Video\n          </button>\n        </div>\n\n      </div>\n\n      <div class=\"flex justify-between flex-wrap mt-2 align-top\">\n        <div class=\"min-w-[12rem]\">\n          <EpisodeHeader\n              :episode=\"episode\"\n              :show=\"show\"\n              :team=\"team\"\n          />\n        </div>\n\n        <div class=\"flex flex-row flex-wrap justify-between w-full\">\n\n          <div class=\"flex flex-col pt-6\">\n\n            <div><span class=\"text-xs capitalize font-semibold\">Show: </span>\n              <button :disabled=\"goLiveStore.displayEpisodeGoLiveComponent\" @click=\"appSettingStore.btnRedirect(`/shows/${show.slug}/manage`)\"\n                      class=\"hover:text-blue-700 text-blue-500 ml-2 uppercase disabled:text-black\">\n                {{ show.name }}\n              </button>\n            </div>\n            <div><span class=\"text-xs capitalize font-semibold mr-2\">Show Runner: </span>\n              {{ show.showRunner }}\n            </div>\n\n            <div>\n              <span class=\"text-xs capitalize font-semibold mr-2\">Episode Number: </span>\n              <span v-if=\"episode.episode_number\">{{ episode.episode_number }}</span>\n              <span v-if=\"!episode.episode_number\">{{ episode.id }}</span>\n            </div>\n            <div v-if=\"releaseDateTime\">\n              <span class=\"text-xs capitalize font-semibold mr-2\">\n                {{ formatDate(releaseDateTime) }}\n              </span>\n            </div>\n          </div>\n\n          <div class=\"upcomingDateTime\">\n\n            <div class=\"text-center mb-3 pr-3 pt-6\">\n              <button :disabled=\"goLiveStore.displayEpisodeGoLiveComponent\" v-if=\"episode.status.id === 5\"\n                      onclick=\"scheduleReleaseNotice.showModal()\"\n                      class=\"bg-green-600 hover:bg-green-500 text-white rounded-lg font-semibold px-4 py-2 mb-4 mr-2 disabled:bg-gray-400\">\n                Schedule Release\n              </button>\n              <br/>\n              <div v-if=\"episode.status.id === 6\">\n                <span class=\"text-2xl capitalize font-semibold\">Scheduled Release:</span><br/>\n                <span class=\"text-3xl capitalize font-semibold\">{{ timeAgo }}</span>\n              </div>\n            </div>\n\n          </div>\n        </div>\n      </div>\n    </header>\n\n  </div>\n</template>\n\n<script setup>\nimport { useTimeAgo } from '@vueuse/core'\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useGoLiveStore } from \"@/Stores/GoLiveStore\"\nimport { useTeamStore } from \"@/Stores/TeamStore\"\nimport Button from \"@/Jetstream/Button.vue\"\nimport ShowEpisodeManageTopBanner from \"@/Components/Pages/ShowEpisodes/Layout/ManageShowEpisodeTopBanner\"\nimport EpisodeHeader from \"@/Components/Pages/ShowEpisodes/Layout/EpisodeHeader\"\n\nconst appSettingStore = useAppSettingStore()\nconst goLiveStore = useGoLiveStore()\nconst teamStore = useTeamStore()\n\nlet props = defineProps({\n  show: Object,\n  team: Object,\n  episode: Object,\n  episodeStatus: Object,\n  scheduledDateTime: String,\n  releaseDateTime: String,\n})\n\nconst timeAgo = useTimeAgo(props.scheduledDateTime)\n\n\n</script>\n","import script from \"./ManageShowEpisodeRundown.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ManageShowEpisodeRundown.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./ManageShowEpisodeNotes.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ManageShowEpisodeNotes.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./Manage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Manage.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n\n  <Head :title=\"`Manage Episode: ${props.episode.name}`\"/>\n\n  <div id=\"topDiv\" class=\"place-self-center flex flex-col gap-y-3\">\n    <div class=\"bg-white rounded text-black p-5\"\n         :class=\"goLive\">\n\n      <Message v-if=\"appSettingStore.showFlashMessage\" :flash=\"$page.props.flash\"/>\n\n      <ShowEpisodeManageNoticeModals/>\n\n      <ShowEpisodeManageHeader\n          :episode=\"episode\"\n          :episodeStatus=\"episodeStatus\"\n          :show=\"show\"\n          :team=\"team\"\n          :scheduledDateTime=\"scheduledDateTime\"\n          :releaseDateTime=\"releaseDateTime\"\n      />\n\n<!--      <GoLive :episode=\"episode\" :scheduledDateTime=\"scheduledDateTime\"/>-->\n      <GoLive v-if=\"goLiveStore.displayEpisodeGoLiveComponent\" />\n\n      <EpisodeVideo :episode=\"episode\"/>\n\n      <EpisodeNotes :episode=\"episode\"/>\n\n      <ShowEpisodeManageEpisodeDescription :episode=\"episode\"/>\n\n      <EpisodeRundown hidden/>\n\n      <ShowEpisodeManageBonusContent/>\n\n      <EpisodeFooter :can=\"can\" :team=\"team\" :episode=\"episode\" :show=\"show\"/>\n\n    </div>\n  </div>\n\n</template>\n\n<script setup>\nimport { computed, onMounted, watch } from 'vue'\nimport { useTimeAgo } from '@vueuse/core'\nimport { usePageSetup } from '@/Utilities/PageSetup'\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\nimport { useGoLiveStore } from '@/Stores/GoLiveStore'\nimport { useShowStore } from '@/Stores/ShowStore'\nimport { useTeamStore } from '@/Stores/TeamStore'\n\nimport ShowEpisodeManageEpisodeDescription from '@/Components/Pages/ShowEpisodes/Elements/ManageShowEpisodeDescription'\nimport ShowEpisodeManageBonusContent from '@/Components/Pages/ShowEpisodes/Elements/ManageShowEpisodeBonusContent'\nimport ShowEpisodeManageNoticeModals from '@/Components/Pages/ShowEpisodes/Elements/ManageShowEpisodeNoticeModals'\nimport ShowEpisodeManageHeader from '@/Components/Pages/ShowEpisodes/Layout/ManageShowEpisodeHeader'\nimport EpisodeRundown from '@/Components/Pages/ShowEpisodes/Elements/ManageShowEpisodeRundown'\nimport EpisodeNotes from '@/Components/Pages/ShowEpisodes/Elements/ManageShowEpisodeNotes'\n// import GoLive from '@/Components/Pages/ShowEpisodes/Elements/ManageShowEpisodeGoLive'\nimport GoLive from '@/Components/Global/GoLive/GoLive'\nimport EpisodeVideo from '@/Components/Pages/ShowEpisodes/Elements/EpisodeVideo'\nimport EpisodeFooter from '@/Components/Pages/ShowEpisodes/Layout/EpisodeFooter'\nimport Message from '@/Components/Global/Modals/Messages'\n\nusePageSetup('showEpisodesManage')\n\nconst appSettingStore = useAppSettingStore()\nconst goLiveStore = useGoLiveStore()\nconst showStore = useShowStore()\nconst teamStore = useTeamStore()\n\nlet props = defineProps({\n  show: Object,\n  team: Object,\n  episode: Object,\n  episodeStatus: Object,\n  releaseDateTime: String,\n  scheduledDateTime: String,\n  can: Object,\n})\n\ngoLiveStore.updateEpisode(props.episode);\n\n// const timeAgo = useTimeAgo(new Date(2023, 10, 5))\nconst timeAgo = useTimeAgo(props.scheduledDateTime)\n\nteamStore.can = props.can\n\n// let showGoLive = ref(false)\n\nconst goLive = computed(() => ({\n  'border-4 border-red-500': teamStore.goLiveDisplay,\n}))\n\n</script>\n\n\n"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","initialState","displayEpisodeGoLiveComponent","isEpisode","episode","preSelectedShowId","selectedShowId","shows","streamKey","isLive","isRecording","streamInfo","rtmpUri","useGoLiveStore","defineStore","state","actions","assign","this","fetchShows","_this","_callee","response","_context","axios","get","data","t0","console","generateStreamKey","_this2","_callee2","_context2","post","concat","log","setSelectedShowId","showId","updateSelectedShow","_this3","selectedShow","find","show","id","goLive","stopLive","startRecording","stopRecording","fetchStreamInfo","streamName","_this4","_callee3","_context3","encodeURIComponent","fetch","ok","json","fetchRtmpUri","_this5","_callee4","_context4","text","clearStreamInfo","toggleDisplayEpisodeGoLiveComponent","_this$episode","show_id","updateEpisode","getters","description","slug","totalSpots","memberSpots","teamCreator","teamLeader","members","managers","activeShow","activeEpisode","creators","showModal","Boolean","confirmDialog","confirmManagerDialog","selectedManagerName","selectedManagerId","addManager","removeManager","deleteMemberName","deleteMemberId","noteEdit","note","saveNoteProcessing","goLiveDisplay","can","openComponent","useTeamStore","setActiveTeam","team","setActiveShow","setActiveEpisode","deleteTeamMemberCancel","confirmTeamManagerCancel","deleteTeamMember","Inertia","visit","route","user_id","team_id","team_slug","addTeamManager","removeTeamManager","toggleGoLiveDisplay","spotsRemaining","player","eventListenersAttached","videoPlayerLoaded","class","videoContainerClass","videoSourceIdSrc1","videoSourceIdSrc2","videoSourceIdSrc3","videoSourceTypeSrc1","videoSourceTypeSrc2","videoSourceTypeSrc3","firstPlayVideoSourceType","firstPlayVideoSource","videoName","videoSource","videoSourceType","videoPoster","nextSource","previousSource","currentView","currentChannelId","currentChannelName","currentShow","currentShowEpisode","currentVideo","hasVideo","controls","muted","paused","currentTime","duration","formattedTime","blue","videoIsYoutube","videoUploadComplete","useVideoAuxPlayerStore","getMistServerUri","mistServerUri","setPlayer","playerInstance","initializePlayer","attachEventListeners","nextTick","useAudioStore","ensureAudioContextAndNodesReady","ready","play","on","handleTimeUpdate","handleFullscreenChange","handlePlay","handlePause","handleError","detachEventListeners","stopAudioLevelMonitoring","off","disposePlayer","dispose","prepareForNewVideoSource","source","useChannelStore","clearChannel","loadNewVideo","resetPlayback","pause","formatDuration","durationInSeconds","Math","floor","map","part","toString","padStart","join","_this$player","isFullscreen","_this$player2","_this$player3","_this6","_this$player4","code","message","makeBlue","toggleMute","unMute","mute","togglePlay","videoJs","videojs","load","loadNewLiveSource","sourceType","fullSourceUrl","src","back","fullscreen","requestFullscreen","getVideoCurrentTime","videoCurrentTime","getSourceDetails","videoSrc","mediaType","video_url","cdn_endpoint","cloud_folder","folder","file_name","_this7","audioStore","_this$getSourceDetail","deferAudioSetup","useNotificationStore","setGeneralServiceNotification","playNewVideo","_this8","loadNewSourceFromYouTube","loadNewLiveSourceFromRumble","loadNewSourceFromUrl","loadNewSourceFromMist","loadNewSourceFromFile","filePath","loadExternalSourceVideo","loadPlaylistVideos","loadMistStreamVideo","mistStream","_this9","basePath","loadVideoFromFile","video","_this10","setNowPlayingInfoVideoFile","nowPlayingType","nowPlayingName","useStreamStore","currentChannel","setNowPlayingInfoShow","clearNowPlayingInfo","showStore","useShowStore","firstPlayVideo","setName","setEpisodeUrl","setUrl","setEpisodeName","makeVideoPiP","makeVideoFullPage","appSettingStore","useAppSettingStore","userStore","useUserStore","fullPage","hidePage","ott","isMobile","makeVideoTopRight","currentPageIsStream","makeVideoWelcomePage","loggedIn","usePageSetup","pageName","videoPlayerStore","useVideoPlayerStore","currentPage","showFlashMessage","pageIsHidden","onBeforeMount","pageReload","window","location","reload","onMounted","search","topDiv","document","getElementById","scrollIntoView","setPrevUrl","noLayout","showOttButtons","___CSS_LOADER_EXPORT___","module","videoAuxPlayerStore","props","__props","videoElementId","playerOptions","controlBar","audioTrackButton","autoHide","captionsButton","chaptersButton","currentTimeDisplay","customControlSpacer","descriptionsButton","durationDisplay","fullscreenToggle","liveDisplay","pictureInPictureToggle","playToggle","playbackRateMenuButton","progressControl","seekBar","remainingTimeDisplay","seekToLive","subsCapsButton","subtitlesButton","timeDivider","volumePanel","inline","volumeBar","vertical","userActions","hotkeys","inactivityTimeout","autoplay","preload","html5","hls","overrideNative","browser","IS_SAFARI","videoAuxPlayer","el","addEventListener","event","preventDefault","onBeforeUnmount","notificationStore","emit","__emit","form","ref","mist_stream_wildcard_id","destinationDetails","rtmp_url","rtmp_key","comment","errors","watchEffect","submitForm","_ref2","url","mode","close","errorMessage","goLiveStore","showCopiedFullUrl","showCopiedRtmpUri","showCopiedStreamKey","copy","useClipboard","openObsInstructions","mistStreamPushDestinations","mistStreamPushDestinationFormModalMode","getMistStreamPushDestinations","_getMistStreamPushDestinations","_callee5","_goLiveStore$selected10","wildcardId","_context5","mist_stream_wildcard","_startPush","_callee6","destinationId","index","_context6","headers","findIndex","destination","push_is_started","_stopPush","_callee7","_context7","enableAutoPush","_ref","has_auto_push","_x3","_disableAutoPush","_callee8","_context8","addDestination","_goLiveStore$selected","editDestination","_ref3","_x5","deleteDestination","_ref4","confirm","filter","_x6","_goLiveStore$selected2","fullUrl","_goLiveStore$selected3","_goLiveStore$episode","_goLiveStore$selected4","copyFullUrl","setTimeout","copyRtmpUri","copyStreamKey","reloadPlayer","_goLiveStore$selected5","_goLiveStore$episode2","_goLiveStore$selected6","_goLiveStore$selected7","_goLiveStore$episode3","_goLiveStore$episode4","sourceUrl","startCountdown","countdown","formattedCountdown","computed","minutes","seconds","interval","setInterval","clearInterval","liveOrRecordingGrayButtonClass","liveOrRecordingVideoBorderClass","channel","Echo","_goLiveStore$selected8","subscribed","listen","requestUrl","onUnmounted","_goLiveStore$selected9","stopListening","leave","_x2","_x","_x4","options","locals","clearFlashMessage","flash","success","warning","Date","getFullYear","_createElementVNode","_createTextVNode","onclick","script","_createElementBlock","_hoisted_1","_hoisted_4","teamStore","goLiveBanner","episodeStatusClass","episodeStatus","timeAgo","useTimeAgo","scheduledDateTime"],"sourceRoot":""}
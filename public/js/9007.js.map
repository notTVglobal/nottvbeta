{"version":3,"file":"js/9007.js","mappings":"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","sources":["webpack://nottvbeta/./resources/js/Utilities/PageSetup.js","webpack://nottvbeta/./resources/js/Components/Global/Modals/Messages.vue?dfe9","webpack://nottvbeta/./resources/js/Components/Global/Modals/Messages.vue","webpack://nottvbeta/./resources/js/Pages/InviteCodes/Create.vue?1c8a","webpack://nottvbeta/./resources/js/Pages/InviteCodes/Create.vue"],"sourcesContent":["import { onBeforeMount, onMounted, watch } from 'vue'\nimport { useUserStore } from \"@/Stores/UserStore\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useVideoPlayerStore } from \"@/Stores/VideoPlayerStore\"\nimport { router } from '@inertiajs/vue3'\n\nexport function usePageSetup(pageName) {\n    const userStore = useUserStore()\n    const appSettingStore = useAppSettingStore()\n    const videoPlayerStore = useVideoPlayerStore()\n\n    appSettingStore.currentPage = pageName\n    appSettingStore.showFlashMessage = true\n    appSettingStore.pageIsHidden = false\n\n// PageSetup utility\n    if (userStore.isMobile || window.innerWidth < 1024) {\n        appSettingStore.ott = 0; // Close all panels on mobile devices\n    } else if (appSettingStore.fullPage) {\n        appSettingStore.ott = 0; // Default to closed in fullPage mode\n    } else {\n        if (appSettingStore.ott === 0) {\n            appSettingStore.ott = 4\n        }\n        // appSettingStore.ott = 4; // Open OttChat by default on larger screens\n        appSettingStore.showOttButtons = true;\n    }\n\n    videoPlayerStore.makeVideoTopRight()\n\n    if (appSettingStore.pageReload) {\n        appSettingStore.pageReload = false\n        appSettingStore.pageWasReloaded = true\n        window.location.reload();\n    }\n    // Check if the URL contains query strings\n\n\n    // Only scroll into view if there are no query strings\n\n        // const topDiv = document.getElementById(\"topDiv\")\n        // if (topDiv) {\n        //     topDiv.scrollIntoView()\n        // }\n        router.on('navigate', (event) => {\n            // Ensure OTT panels do not open automatically on mobile devices\n            if (userStore.isMobile || window.innerWidth < 1024 || appSettingStore.fullPage) {\n                appSettingStore.ott = 0; // Close all panels on mobile devices\n            } else {\n                if (appSettingStore.ott === 0) {\n                    appSettingStore.ott = 4\n                }\n                // appSettingStore.ott = 0; // Default to closed on larger screens\n            }\n            const hasQueryStrings = window.location.search !== '';\n            if (!hasQueryStrings || appSettingStore.shouldScrollToTop) {\n                requestAnimationFrame(() => {\n                    const topDiv = document.getElementById(\"topDiv\");\n                    if (topDiv) {\n                        topDiv.scrollIntoView({behavior: 'auto'});\n                    } else {\n                        window.scrollTo(0, 0);\n                    }\n                });\n            }\n            appSettingStore.shouldScrollToTop = false;\n        })\n    // Only update if we're not already on this page to avoid overwriting with the current URL\n    appSettingStore.setPrevUrl()\n    appSettingStore.showOttButtons = true\n    appSettingStore.noLayout = false\n\n    // router.reload()\n\n    watch(\n        () => appSettingStore.isSmallScreen,\n        (newValue) => {\n            if (newValue) {\n                appSettingStore.ott = 0;\n            } else {\n                appSettingStore.ott = 4;\n            }\n        },\n        { immediate: true } // This option ensures the watch executes immediately with the current value\n    );\n\n}\n","import script from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"mx-4 my-4\">\n    <div class=\"alert alert-info mt-4\"\n         v-if=\"props.flash.message\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" class=\"stroke-current shrink-0 w-6 h-6\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n      </svg>\n      <span>{{ props.flash.message }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-success mt-4 mx-3\"\n         v-if=\"props.flash.success\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.success }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-warning mt-4 mx-3\"\n         v-if=\"props.flash.warning\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"/>\n      </svg>\n      <span>{{ props.flash.warning }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-error mt-4 mx-3\"\n         v-if=\"props.flash.error\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.error }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n  </div>\n\n</template>\n\n<script setup>\nimport { router } from '@inertiajs/vue3'\nimport { computed } from \"vue\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\n\nconst appSettingStore = useAppSettingStore()\n\nappSettingStore.showFlashMessage = true\n\nlet props = defineProps({\n  flash: Object,\n\n})\n\nconst messageType = computed(() => ({\n  'text-green-700 bg-green-100 dark:bg-green-200 dark:text-green-800': props.flash.success,\n  'text-blue-700 bg-blue-100 dark:bg-blue-200 dark:text-blue-800': props.flash.message,\n  'text-orange-700 bg-orange-100 dark:bg-orange-200 dark:text-orange-800': props.flash.warning,\n  'text-red-700 bg-red-100 dark:bg-red-200 dark:text-red-800': props.flash.error,\n}))\n\nconst clearFlashMessage = async () => {\n  await router.post(route('flash.clear'));\n  router.reload();\n};\n</script>\n","import script from \"./Create.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Create.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n\n  <Head title=\"Create Invite Codes\"/>\n\n  <div class=\"place-self-center flex flex-col\">\n    <div id=\"topDiv\" class=\"bg-white text-black dark:bg-gray-800 dark:text-gray-50 p-5 mb-10\">\n\n      <Message v-if=\"appSettingStore.showFlashMessage\" :flash=\"$page.props.flash\"/>\n\n      <div class=\"flex flex-row justify-end\">\n        <button @click.prevent=\"appSettingStore.btnRedirect('/invite_codes')\" class=\"btn bg-orange-500 hover:bg-orange-700 text-white\">List all codes</button>\n      </div>\n\n      <div class=\"flex flex-col w-96 mx-auto my-8 p-4 gap-8\">\n        <h1 class=\"w-full text-center\">Create Invite Code</h1>\n        <form>\n          <div class=\"flex flex-col space-y-4\">\n            <div class=\"flex flex-col w-full\">\n              <div class=\"mb-2 flex flex-row justify-between\"><label for=\"code\" class=\"text-xs font-semibold text-gray-800 uppercase\">Code </label>\n                <button @click.prevent=\"generateRandomCode\" class=\"text-blue-700 hover:text-blue-500 underline hover:cursor-pointer\">generate new random code</button></div>\n              <input v-model=\"form.code\" id=\"code\" type=\"text\" required class=\"input input-bordered w-full bg-white text-black dark:bg-gray-800 dark:text-white\" >\n            </div>\n            <div v-if=\"formErrors['code']\" class=\"mb-4 mt-2 text-red-700\">{{ formErrors['code'][0] }}</div>\n\n            <div class=\"flex flex-col w-full dropdown\">\n              <label for=\"userSearch\" class=\"mb-2 text-xs font-semibold text-gray-800 uppercase\">Assign Distributor</label>\n              <input type=\"text\" id=\"userSearch\" v-model=\"searchQuery\" @input=\"searchUsers\" placeholder=\"Search users...\" class=\"input input-bordered w-full bg-white text-black dark:bg-gray-800 dark:text-white\">\n            </div>\n            <div v-if=\"searchQuery.length > 1 && searchResults.length\" class=\"flex flex-col\">\n              <ul class=\"p-2 shadow menu dropdown-content z-10 bg-base-200 rounded-box w-full max-h-60 overflow-y-auto overflow-x-hidden bg-white text-black dark:bg-gray-800 dark:text-white\">\n                <li v-for=\"user in searchResults\" :key=\"user.id\" class=\"bg-white text-black dark:bg-gray-800 dark:text-white\">\n                  <a @click.prevent=\"assignUser(user)\">\n                    {{ user.name }} - {{ user.email }}\n                  </a>\n                </li>\n              </ul>\n            </div>\n            <div v-if=\"formErrors['created_by_user_id']\" class=\"mb-4 mt-2 text-red-700\">{{ formErrors['created_by_user_id'][0] }}</div>\n\n            <div class=\"flex flex-col w-full\">\n              <label for=\"role\" class=\"mb-2 text-xs font-semibold text-gray-800 uppercase\">Role</label>\n              <select v-model=\"form.user_role_id\" id=\"role\" class=\"select bg-white text-black dark:bg-gray-800 dark:text-white select-bordered w-full text-gray-900\">\n                <option v-for=\"role in roles\" :value=\"role.id\" :key=\"role.id\" class=\"text-gray-900\">{{ role.role }}</option>\n              </select>\n            </div>\n            <div v-if=\"formErrors['user_role_id']\" class=\"mb-4 mt-2 text-red-700\">{{ formErrors['user_role_id'][0] }}</div>\n\n            <div class=\"flex flex-col w-full\">\n              <label for=\"volume\" class=\"mb-2 text-xs font-semibold text-gray-800 uppercase\">Volume</label>\n              <input v-model=\"form.volume\" id=\"volume\" type=\"number\" min=\"1\" required class=\"input input-bordered w-full bg-white text-black dark:bg-gray-800 dark:text-white\" >\n            </div>\n            <div v-if=\"formErrors['volume']\" class=\"mb-4 mt-2 text-red-700\">{{ formErrors['volume'][0] }}</div>\n\n            <div class=\"flex flex-col w-full\">\n              <label for=\"expiry_date\" class=\"mb-2 text-xs font-semibold text-gray-800 uppercase\">Expiry Date (optional)</label>\n              <input v-model=\"form.expiry_date\" id=\"expiry_date\" type=\"date\" class=\"bg-white text-black dark:bg-gray-800 dark:text-white\">\n            </div>\n            <div v-if=\"formErrors['expiry_date']\" class=\"mb-4 mt-2 text-red-700\">{{ formErrors['expiry_date'][0] }}</div>\n\n            <button @click.prevent=\"submit\" class=\"btn btn-primary text-white\">Create Code</button>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { onMounted, onUnmounted, reactive, ref, watch } from 'vue'\nimport { router } from '@inertiajs/vue3'\nimport { usePageSetup } from '@/Utilities/PageSetup'\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\nimport { useUserStore } from '@/Stores/UserStore'\nimport { throttle } from 'lodash';\nimport Message from '@/Components/Global/Modals/Messages'\n\nusePageSetup('inviteCodes')\nconst appSettingStore = useAppSettingStore()\nconst userStore = useUserStore()\n\nconst props = defineProps({\n  roles: Object,\n  suggestedCode: String,\n})\n\nconst form = reactive({\n  code: props.suggestedCode,\n  created_by_user_id: '',\n  user_role_id: 1,\n  volume: 1,\n  expiry_date: '',\n  user_timezone: userStore.timezone,\n})\n\nlet formErrors = reactive({});\n\nconst searchQuery = ref('');\nconst searchResults = ref([]);\nconst isSelectingUser = ref(false); // Flag to indicate user selection is in progress\n\nconst selectedUserDetails = ref({\n  name: '',\n  email: '',\n});\n\n// Function to clear search\nconst clearSearch = () => {\n  if (form.created_by_user_id && selectedUserDetails.value.name) {\n    // If a user is selected, display the user's name in the searchQuery input\n    searchQuery.value = selectedUserDetails.value.name;\n    searchResults.value = '';\n  } else {\n    // Clear searchQuery if no user is selected\n    searchQuery.value = '';\n    searchResults.value = '';\n  }\n  // Optionally clear search results here too\n};\n\n// Function to handle keydown events\nconst handleKeydown = (event) => {\n  if (event.key === 'Escape') {\n    clearSearch();\n  }\n};\n\n// Add event listener when component is mounted\nonMounted(() => {\n  window.addEventListener('keydown', handleKeydown);\n});\n\n// Remove event listener when component is unmounted\nonUnmounted(() => {\n  window.removeEventListener('keydown', handleKeydown);\n});\n\n// const searchUsers = async () => {\n//   if (!searchQuery.value) {\n//     searchResults.value = [];\n//     return;\n//   }\n//\n//   const { data } = await axios.get(`/admin/users/search?query=${searchQuery.value}`);\n//   searchResults.value = data;\n// };\n\nwatch(searchQuery, throttle(async (value) => {\n  if (isSelectingUser.value || !value.trim()) {\n    searchResults.value = [];\n    return;\n  }\n\n  try {\n    const { data } = await axios.get(`/admin/users/search?query=${encodeURIComponent(value)}`);\n    searchResults.value = data;\n  } catch (error) {\n    console.error('Error fetching search results:', error);\n    searchResults.value = [];\n  }\n}, 300));\n\nconst assignUser = (user) => {\n  // Indicate that a user selection is in progress\n  isSelectingUser.value = true;\n  // Update form data with the selected user's ID\n  form.created_by_user_id = user.id;\n  selectedUserDetails.value.name = user.name;\n  selectedUserDetails.value.email = user.email;\n  // Update the search input with the user's name\n  searchQuery.value = user.name;\n\n  // Clear search results after assignment\n  searchResults.value = [];\n\n  // Reset the flag after a slight delay to ensure it's not immediately reset\n  // This delay allows any pending asynchronous updates to complete\n  setTimeout(() => {\n    isSelectingUser.value = false;\n  }, 100);\n};\n\nconst generateRandomCode = () => {\n  axios.get('/generate-invite-code').then(response => {\n    // Assuming the response contains the new code\n    form.code = response.data.suggestedCode;\n  }).catch(error => {\n    console.error('There was an error generating the invite code:', error);\n  });\n}\n\nconst submit = () => {\n  axios.post('/invite_codes', form)\n      .then(response => {\n        // Handle success\n        Object.keys(form).forEach(key => form[key] = null);\n        formErrors = reactive({}); // Or formErrors.value = {} if formErrors is a ref\n        router.visit('/invite_codes');\n      })\n      .catch(error => {\n        if (error.response && error.response.data && error.response.data.errors) {\n          // Update formErrors with the new errors\n          Object.assign(formErrors, error.response.data.errors); // For reactive\n          // Or formErrors.value = error.response.data.errors; if formErrors is a ref\n        }\n      });\n};\n\n\n</script>\n"],"names":["usePageSetup","pageName","userStore","useUserStore","appSettingStore","useAppSettingStore","videoPlayerStore","useVideoPlayerStore","currentPage","showFlashMessage","pageIsHidden","isMobile","window","innerWidth","fullPage","ott","showOttButtons","makeVideoTopRight","pageReload","pageWasReloaded","location","reload","router","on","event","search","shouldScrollToTop","requestAnimationFrame","topDiv","document","getElementById","scrollIntoView","behavior","scrollTo","setPrevUrl","noLayout","watch","isSmallScreen","newValue","immediate","props","__props","clearFlashMessage","computed","flash","success","message","warning","error","_ref","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","post","route","stop","apply","arguments","form","reactive","code","suggestedCode","created_by_user_id","user_role_id","volume","expiry_date","user_timezone","timezone","formErrors","searchQuery","ref","searchResults","isSelectingUser","selectedUserDetails","name","email","handleKeydown","key","value","onMounted","addEventListener","onUnmounted","removeEventListener","throttle","_yield$axios$get","data","trim","abrupt","axios","get","concat","encodeURIComponent","sent","t0","console","_x","generateRandomCode","then","response","submit","Object","keys","forEach","visit","errors","assign","user","id","setTimeout"],"sourceRoot":""}
{"version":3,"file":"js/9478.js","mappings":"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","sources":["webpack:///./resources/js/Pages/Subscribe2.vue?34ab","webpack:///./resources/js/Pages/SrMessages.vue?c45d","webpack:///./resources/js/Pages/SrMessages.vue","webpack:///./resources/js/Pages/Subscribe2.vue","webpack:///./resources/js/Pages/Subscribe2.vue?f290","webpack:///./resources/js/Pages/Subscribe2.vue?1ea2"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n___CSS_LOADER_EXPORT___.push([module.id, \"@import url(https://fonts.googleapis.com/css?family=Raleway&display=swap);\"]);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"[data-v-c2edf7e2]:root{--light-grey:#f6f9fc;--dark-terminal-color:#0a2540;--accent-color:#635bff;--radius:3px}body[data-v-c2edf7e2]{color:var(--dark-terminal-color);display:flex;font-family:Raleway;font-size:1.2em;justify-content:center;padding:20px}main[data-v-c2edf7e2]{width:480px}form>*[data-v-c2edf7e2]{margin:10px 0}button[data-v-c2edf7e2]{background-color:var(--accent-color);background:var(--accent-color);border:0;border-radius:var(--radius);color:#fff;cursor:pointer;display:block;font-weight:600;margin-top:16px;padding:12px 16px;transition:all .2s ease}button[data-v-c2edf7e2]:hover{filter:contrast(115%)}button[data-v-c2edf7e2]:active{filter:brightness(.9);transform:translateY(0) scale(.98)}button[data-v-c2edf7e2]:disabled{cursor:none;opacity:.5}input[data-v-c2edf7e2],select[data-v-c2edf7e2]{font-size:1.1em;margin-bottom:10px;width:100%}input[data-v-c2edf7e2],label[data-v-c2edf7e2],select[data-v-c2edf7e2]{display:block}a[data-v-c2edf7e2]{color:var(--accent-color);font-weight:900}small[data-v-c2edf7e2]{font-size:.6em}fieldset[data-v-c2edf7e2],input[data-v-c2edf7e2],select[data-v-c2edf7e2]{border:1px solid #efefef}#payment-form[data-v-c2edf7e2]{border:1px solid #f6f9fc;box-shadow:0 30px 50px -20px #32325d40,0 30px 60px -30px #0000004d}#messages[data-v-c2edf7e2],#payment-form[data-v-c2edf7e2]{border-radius:var(--radius);margin:20px 0;padding:20px}#messages[data-v-c2edf7e2]{background-color:#0a253c;color:#00d924;font-family:source-code-pro,Menlo,Monaco,Consolas,Courier New;font-size:.7em}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/Pages/Subscribe2.vue\"],\"names\":[],\"mappings\":\"AAoJA,uBACI,oBAAqB,CACrB,6BAA8B,CAC9B,sBAAuB,CACvB,YACJ,CAEA,sBAMI,gCAAiC,CAHjC,YAAa,CADb,mBAAsB,CAGtB,eAAgB,CADhB,sBAAuB,CAHvB,YAMJ,CAEA,sBACI,WACJ,CAEA,wBACI,aACJ,CAEA,wBACI,oCAAqC,CAIrC,8BAA+B,CAG/B,QAAS,CAFT,2BAA4B,CAC5B,UAAY,CAKZ,cAAe,CAEf,aAAc,CAHd,eAAgB,CADhB,eAAgB,CADhB,iBAAkB,CAIlB,uBAXJ,CAcA,8BACI,qBACJ,CACA,+BAEI,qBAAuB,CADvB,kCAEJ,CACA,iCAEI,WAAY,CADZ,UAEJ,CAEA,+CAEI,eAAgB,CAEhB,kBAAmB,CADnB,UAEJ,CAEA,sEANI,aAQJ,CAEA,mBACI,yBAA0B,CAC1B,eACJ,CAEA,uBACI,cACJ,CAEA,yEACI,wBACJ,CAEA,+BACI,wBAAyB,CAIzB,kEACJ,CAEA,0DANI,2BAA4B,CAE5B,aAAc,CADd,YAaJ,CARA,2BAEI,wBAAyB,CACzB,aAAc,CAFd,6DAAoE,CAMpE,cACJ\",\"sourcesContent\":[\"<template>\\n\\n    <Head title=\\\"TEST SUBSCRIBE\\\" />\\n<!--        <script src=\\\"https://js.stripe.com/v3/\\\" defer></script>-->\\n\\n    <div id=\\\"topDiv\\\" class=\\\"h-[calc(100vh-16rem)] text-center bg-gray-800 text-white p-10\\\">\\n\\n\\n        <Message v-if=\\\"userStore.showFlashMessage\\\" :flash=\\\"$page.props.flash\\\"/>\\n\\n<!--            <h1 class=\\\"text-3xl font-semibold pb-3\\\">Become a notTV Premium Subscriber</h1>-->\\n\\n            <div class=\\\"flex justify-center w-full\\\">\\n                <div class=\\\"flex flex-col justify-center w-fit bg-gray-900 rounded-md py-10 mb-24\\\">\\n\\n                    <main>\\n                        <h1>Payment</h1>\\n\\n                        <p>\\n                            Enable more payment method types\\n                            <a\\n                                href=\\\"https://dashboard.stripe.com/settings/payment_methods\\\"\\n                                target=\\\"_blank\\\"\\n                            >in your dashboard</a>.\\n                        </p>\\n\\n                        <form\\n                            id=\\\"payment-form\\\"\\n                            @submit.prevent=\\\"handleSubmit\\\"\\n                        >\\n                            <div id=\\\"link-authentication-element\\\" />\\n                            <div id=\\\"payment-element\\\" />\\n                            <button\\n                                id=\\\"submit\\\"\\n                                :disabled=\\\"isLoading\\\"\\n                            >\\n                                Pay now\\n                            </button>\\n                            <sr-messages :messages=\\\"messages\\\" />\\n                        </form>\\n                    </main>\\n\\n                </div>\\n            </div>\\n\\n\\n    </div>\\n\\n</template>\\n\\n<script setup>\\nimport { onBeforeMount, onMounted, ref } from \\\"vue\\\";\\nimport { useVideoPlayerStore } from \\\"@/Stores/VideoPlayerStore.js\\\"\\nimport { useUserStore } from \\\"@/Stores/UserStore\\\";\\nimport Message from \\\"@/Components/Modals/Messages\\\";\\nimport {Inertia} from \\\"@inertiajs/inertia\\\";\\nimport { useForm } from \\\"@inertiajs/inertia-vue3\\\";\\n\\nimport { loadStripe } from \\\"@stripe/stripe-js\\\";\\nimport SrMessages from \\\"./SrMessages.vue\\\";\\n\\nconst isLoading = ref(false);\\nconst messages = ref([]);\\n\\nlet stripe;\\nlet elements;\\n\\nuserStore.showFlashMessage = true;\\n\\nonMounted(async () => {\\n    const { publishableKey } = await fetch(\\\"/api/config\\\").then((res) => res.json());\\n    stripe = await loadStripe('pk_test_51KJwK5Kahp38LUVYOjg7h425exCr6UZmMm1M24d31ZaS0HTsgPWIZE9Hd2F0KnREVHuPm2VHesX3J5SQfFFg7fTC00DMNpq1Lj');\\n\\n    const { clientSecret, error: backendError } = await fetch(\\\"/api/create-payment-intent\\\").then((res) => res.json());\\n\\n    if (backendError) {\\n        messages.value.push(backendError.message);\\n    }\\n    messages.value.push(`Client secret returned.`);\\n\\n    elements = stripe.elements({clientSecret});\\n    const paymentElement = elements.create('payment');\\n    paymentElement.mount(\\\"#payment-element\\\");\\n    const linkAuthenticationElement = elements.create(\\\"linkAuthentication\\\");\\n    linkAuthenticationElement.mount(\\\"#link-authentication-element\\\");\\n    isLoading.value = false;\\n});\\n\\nconst handleSubmit = async () => {\\n    if (isLoading.value) {\\n        return;\\n    }\\n\\n    isLoading.value = true;\\n\\n    const { error } = await stripe.confirmPayment({\\n        elements,\\n        confirmParams: {\\n            return_url: `${window.location.origin}/return`\\n        }\\n    });\\n\\n    if (error.type === \\\"card_error\\\" || error.type === \\\"validation_error\\\") {\\n        messages.value.push(error.message);\\n    } else {\\n        messages.value.push(\\\"An unexpected error occured.\\\");\\n    }\\n\\n    isLoading.value = false;\\n}\\n\\nlet videoPlayerStore = useVideoPlayerStore()\\nlet userStore = useUserStore()\\n\\nuserStore.currentPage = 'subscribe'\\n\\n\\nonMounted(() => {\\n    videoPlayerStore.makeVideoTopRight();\\n    if (userStore.isMobile) {\\n        videoPlayerStore.ottClass = 'ottClose'\\n        videoPlayerStore.ott = 0\\n    }\\n    document.getElementById(\\\"topDiv\\\").scrollIntoView()\\n\\n\\n});\\n\\nlet props = defineProps({\\n    intent: Object,\\n    card: ref(null)\\n})\\n\\nlet form = useForm({\\n    name: '',\\n});\\n\\n\\n</script>\\n\\n<script>\\n\\n\\n</script>\\n\\n<style scoped>\\n@import url('https://fonts.googleapis.com/css?family=Raleway&display=swap');\\n\\n:root {\\n    --light-grey: #F6F9FC;\\n    --dark-terminal-color: #0A2540;\\n    --accent-color: #635BFF;\\n    --radius: 3px;\\n}\\n\\nbody {\\n    padding: 20px;\\n    font-family: 'Raleway';\\n    display: flex;\\n    justify-content: center;\\n    font-size: 1.2em;\\n    color: var(--dark-terminal-color);\\n}\\n\\nmain {\\n    width: 480px;\\n}\\n\\nform > * {\\n    margin: 10px 0;\\n}\\n\\nbutton {\\n    background-color: var(--accent-color);\\n}\\n\\nbutton {\\n    background: var(--accent-color);\\n    border-radius: var(--radius);\\n    color: white;\\n    border: 0;\\n    padding: 12px 16px;\\n    margin-top: 16px;\\n    font-weight: 600;\\n    cursor: pointer;\\n    transition: all 0.2s ease;\\n    display: block;\\n}\\nbutton:hover {\\n    filter: contrast(115%);\\n}\\nbutton:active {\\n    transform: translateY(0px) scale(0.98);\\n    filter: brightness(0.9);\\n}\\nbutton:disabled {\\n    opacity: 0.5;\\n    cursor: none;\\n}\\n\\ninput, select {\\n    display: block;\\n    font-size: 1.1em;\\n    width: 100%;\\n    margin-bottom: 10px;\\n}\\n\\nlabel {\\n    display: block;\\n}\\n\\na {\\n    color: var(--accent-color);\\n    font-weight: 900;\\n}\\n\\nsmall {\\n    font-size: .6em;\\n}\\n\\nfieldset, input, select {\\n    border: 1px solid #efefef;\\n}\\n\\n#payment-form {\\n    border: #F6F9FC solid 1px;\\n    border-radius: var(--radius);\\n    padding: 20px;\\n    margin: 20px 0;\\n    box-shadow: 0 30px 50px -20px rgb(50 50 93 / 25%), 0 30px 60px -30px rgb(0 0 0 / 30%);\\n}\\n\\n#messages {\\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New';\\n    background-color: #0A253C;\\n    color: #00D924;\\n    padding: 20px;\\n    margin: 20px 0;\\n    border-radius: var(--radius);\\n    font-size:0.7em;\\n}\\n\\n\\n</style>\\n\\n\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import script from \"./SrMessages.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./SrMessages.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { defineProps, computed, toRef } from 'vue';\n\nconst props = defineProps({\n    messages: {\n        type: Array,\n        required: true\n    }\n});\n\nconst messagesRef = toRef(props, 'messages');\n\nconst splitMessages = computed(() => {\n    return messagesRef.value.map((x) => {\n\n        const paymentIntentRe = /(pi_(\\S*)\\b)/\n        const paymentIntentMatch = x.match(paymentIntentRe)\n        return {\n            ...(paymentIntentMatch && {paymentIntent: paymentIntentMatch[0]}),\n            content: x.replace(paymentIntentRe, '') || x\n        }\n    });\n})\n\nconst addDashboardLinks = (paymentIntent) => {\n    return `https://dashboard.stripe.com/test/payments/${paymentIntent}`;\n};\n\n</script>\n<template>\n    <div\n        id=\"messages\"\n        role=\"alert\"\n    >\n    <span\n        v-for=\"message in splitMessages\"\n        :key=\"message\"\n    >\n      > {{ message.content }}<a\n        v-if=\"message.paymentIntent\"\n        :href=\"addDashboardLinks(message.paymentIntent)\"\n    >{{ message.paymentIntent }}</a>\n      <br>\n    </span>\n    </div>\n</template>\n","<template>\n\n    <Head title=\"TEST SUBSCRIBE\" />\n<!--        <script src=\"https://js.stripe.com/v3/\" defer></script>-->\n\n    <div id=\"topDiv\" class=\"h-[calc(100vh-16rem)] text-center bg-gray-800 text-white p-10\">\n\n\n        <Message v-if=\"userStore.showFlashMessage\" :flash=\"$page.props.flash\"/>\n\n<!--            <h1 class=\"text-3xl font-semibold pb-3\">Become a notTV Premium Subscriber</h1>-->\n\n            <div class=\"flex justify-center w-full\">\n                <div class=\"flex flex-col justify-center w-fit bg-gray-900 rounded-md py-10 mb-24\">\n\n                    <main>\n                        <h1>Payment</h1>\n\n                        <p>\n                            Enable more payment method types\n                            <a\n                                href=\"https://dashboard.stripe.com/settings/payment_methods\"\n                                target=\"_blank\"\n                            >in your dashboard</a>.\n                        </p>\n\n                        <form\n                            id=\"payment-form\"\n                            @submit.prevent=\"handleSubmit\"\n                        >\n                            <div id=\"link-authentication-element\" />\n                            <div id=\"payment-element\" />\n                            <button\n                                id=\"submit\"\n                                :disabled=\"isLoading\"\n                            >\n                                Pay now\n                            </button>\n                            <sr-messages :messages=\"messages\" />\n                        </form>\n                    </main>\n\n                </div>\n            </div>\n\n\n    </div>\n\n</template>\n\n<script setup>\nimport { onBeforeMount, onMounted, ref } from \"vue\";\nimport { useVideoPlayerStore } from \"@/Stores/VideoPlayerStore.js\"\nimport { useUserStore } from \"@/Stores/UserStore\";\nimport Message from \"@/Components/Modals/Messages\";\nimport {Inertia} from \"@inertiajs/inertia\";\nimport { useForm } from \"@inertiajs/inertia-vue3\";\n\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport SrMessages from \"./SrMessages.vue\";\n\nconst isLoading = ref(false);\nconst messages = ref([]);\n\nlet stripe;\nlet elements;\n\nuserStore.showFlashMessage = true;\n\nonMounted(async () => {\n    const { publishableKey } = await fetch(\"/api/config\").then((res) => res.json());\n    stripe = await loadStripe('pk_test_51KJwK5Kahp38LUVYOjg7h425exCr6UZmMm1M24d31ZaS0HTsgPWIZE9Hd2F0KnREVHuPm2VHesX3J5SQfFFg7fTC00DMNpq1Lj');\n\n    const { clientSecret, error: backendError } = await fetch(\"/api/create-payment-intent\").then((res) => res.json());\n\n    if (backendError) {\n        messages.value.push(backendError.message);\n    }\n    messages.value.push(`Client secret returned.`);\n\n    elements = stripe.elements({clientSecret});\n    const paymentElement = elements.create('payment');\n    paymentElement.mount(\"#payment-element\");\n    const linkAuthenticationElement = elements.create(\"linkAuthentication\");\n    linkAuthenticationElement.mount(\"#link-authentication-element\");\n    isLoading.value = false;\n});\n\nconst handleSubmit = async () => {\n    if (isLoading.value) {\n        return;\n    }\n\n    isLoading.value = true;\n\n    const { error } = await stripe.confirmPayment({\n        elements,\n        confirmParams: {\n            return_url: `${window.location.origin}/return`\n        }\n    });\n\n    if (error.type === \"card_error\" || error.type === \"validation_error\") {\n        messages.value.push(error.message);\n    } else {\n        messages.value.push(\"An unexpected error occured.\");\n    }\n\n    isLoading.value = false;\n}\n\nlet videoPlayerStore = useVideoPlayerStore()\nlet userStore = useUserStore()\n\nuserStore.currentPage = 'subscribe'\n\n\nonMounted(() => {\n    videoPlayerStore.makeVideoTopRight();\n    if (userStore.isMobile) {\n        videoPlayerStore.ottClass = 'ottClose'\n        videoPlayerStore.ott = 0\n    }\n    document.getElementById(\"topDiv\").scrollIntoView()\n\n\n});\n\nlet props = defineProps({\n    intent: Object,\n    card: ref(null)\n})\n\nlet form = useForm({\n    name: '',\n});\n\n\n</script>\n\n<script>\n\n\n</script>\n\n<style scoped>\n@import url('https://fonts.googleapis.com/css?family=Raleway&display=swap');\n\n:root {\n    --light-grey: #F6F9FC;\n    --dark-terminal-color: #0A2540;\n    --accent-color: #635BFF;\n    --radius: 3px;\n}\n\nbody {\n    padding: 20px;\n    font-family: 'Raleway';\n    display: flex;\n    justify-content: center;\n    font-size: 1.2em;\n    color: var(--dark-terminal-color);\n}\n\nmain {\n    width: 480px;\n}\n\nform > * {\n    margin: 10px 0;\n}\n\nbutton {\n    background-color: var(--accent-color);\n}\n\nbutton {\n    background: var(--accent-color);\n    border-radius: var(--radius);\n    color: white;\n    border: 0;\n    padding: 12px 16px;\n    margin-top: 16px;\n    font-weight: 600;\n    cursor: pointer;\n    transition: all 0.2s ease;\n    display: block;\n}\nbutton:hover {\n    filter: contrast(115%);\n}\nbutton:active {\n    transform: translateY(0px) scale(0.98);\n    filter: brightness(0.9);\n}\nbutton:disabled {\n    opacity: 0.5;\n    cursor: none;\n}\n\ninput, select {\n    display: block;\n    font-size: 1.1em;\n    width: 100%;\n    margin-bottom: 10px;\n}\n\nlabel {\n    display: block;\n}\n\na {\n    color: var(--accent-color);\n    font-weight: 900;\n}\n\nsmall {\n    font-size: .6em;\n}\n\nfieldset, input, select {\n    border: 1px solid #efefef;\n}\n\n#payment-form {\n    border: #F6F9FC solid 1px;\n    border-radius: var(--radius);\n    padding: 20px;\n    margin: 20px 0;\n    box-shadow: 0 30px 50px -20px rgb(50 50 93 / 25%), 0 30px 60px -30px rgb(0 0 0 / 30%);\n}\n\n#messages {\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New';\n    background-color: #0A253C;\n    color: #00D924;\n    padding: 20px;\n    margin: 20px 0;\n    border-radius: var(--radius);\n    font-size:0.7em;\n}\n\n\n</style>\n\n\n","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-9.use[1]!../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-9.use[2]!../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./Subscribe2.vue?vue&type=style&index=0&id=c2edf7e2&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./Subscribe2.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Subscribe2.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Subscribe2.vue?vue&type=style&index=0&id=c2edf7e2&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-c2edf7e2\"]])\n\nexport default __exports__"],"names":["___CSS_LOADER_EXPORT___","push","module","id","props","__props","messagesRef","toRef","splitMessages","computed","value","map","x","paymentIntentRe","paymentIntentMatch","match","_objectSpread","paymentIntent","content","replace","concat","stripe","elements","isLoading","ref","messages","userStore","showFlashMessage","onMounted","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$fetch$then","_yield$fetch$then2","clientSecret","backendError","wrap","_context","prev","next","fetch","then","res","json","sent","publishableKey","loadStripe","error","message","create","mount","stop","handleSubmit","_ref2","_callee2","_yield$stripe$confirm","_context2","abrupt","confirmPayment","confirmParams","return_url","window","location","origin","type","apply","arguments","videoPlayerStore","useVideoPlayerStore","useUserStore","currentPage","makeVideoTopRight","isMobile","ottClass","ott","document","getElementById","scrollIntoView","useForm","name","options","locals"],"sourceRoot":""}
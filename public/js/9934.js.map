{"version":3,"file":"js/9934.js","mappings":"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","sources":["webpack:///./resources/js/Jetstream/ActionSection.vue","webpack:///./resources/js/Jetstream/DangerButton.vue","webpack:///./resources/js/Jetstream/DialogModal.vue?0f30","webpack:///./resources/js/Jetstream/DialogModal.vue","webpack:///./resources/js/Jetstream/Input.vue?28c0","webpack:///./resources/js/Jetstream/Input.vue","webpack:///./resources/js/Jetstream/InputError.vue","webpack:///./resources/js/Jetstream/Label.vue","webpack:///./resources/js/Jetstream/Modal.vue?da13","webpack:///./resources/js/Jetstream/Modal.vue","webpack:///./resources/js/Jetstream/SecondaryButton.vue","webpack:///./resources/js/Jetstream/SectionTitle.vue","webpack:///./resources/js/Jetstream/SectionTitle.vue?8590","webpack:///./resources/js/Jetstream/ConfirmsPassword.vue?1151","webpack:///./resources/js/Jetstream/ConfirmsPassword.vue","webpack:///./resources/js/Pages/Profile/Partials/TwoFactorAuthenticationForm.vue?c5f1","webpack:///./resources/js/Pages/Profile/Partials/TwoFactorAuthenticationForm.vue"],"sourcesContent":["import script from \"./ActionSection.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ActionSection.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./DangerButton.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./DangerButton.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./DialogModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./DialogModal.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport Modal from './Modal.vue';\n\nconst emit = defineEmits(['close']);\n\ndefineProps({\n    show: {\n        type: Boolean,\n        default: false,\n    },\n    maxWidth: {\n        type: String,\n        default: '2xl',\n    },\n    closeable: {\n        type: Boolean,\n        default: true,\n    },\n});\n\nconst close = () => {\n    emit('close');\n};\n</script>\n\n<template>\n    <Modal\n        :show=\"show\"\n        :max-width=\"maxWidth\"\n        :closeable=\"closeable\"\n        @close=\"close\"\n    >\n        <div class=\"px-6 py-4\">\n            <div class=\"text-lg\">\n                <slot name=\"title\" />\n            </div>\n\n            <div class=\"mt-4\">\n                <slot name=\"content\" />\n            </div>\n        </div>\n\n        <div class=\"flex flex-row justify-end px-6 py-4 bg-gray-100 text-right\">\n            <slot name=\"footer\" />\n        </div>\n    </Modal>\n</template>\n","import script from \"./Input.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Input.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { onMounted, ref } from 'vue';\n\ndefineProps({\n    modelValue: String,\n});\n\ndefineEmits(['update:modelValue']);\n\nconst input = ref(null);\n\nonMounted(() => {\n    if (input.value.hasAttribute('autofocus')) {\n        input.value.focus();\n    }\n});\n\ndefineExpose({ focus: () => input.value.focus() });\n</script>\n\n<template>\n    <input\n        ref=\"input\"\n        class=\"border-2 border-gray-300 focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50 rounded-md shadow-sm text-black bg-white dark:bg-gray-800 dark:text-white\"\n        :value=\"modelValue\"\n        @input=\"$emit('update:modelValue', $event.target.value)\"\n    >\n</template>\n","import script from \"./InputError.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./InputError.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./Label.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Label.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./Modal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Modal.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { computed, onMounted, onUnmounted, watch } from 'vue';\n\nconst props = defineProps({\n    show: {\n        type: Boolean,\n        default: false,\n    },\n    maxWidth: {\n        type: String,\n        default: '2xl',\n    },\n    closeable: {\n        type: Boolean,\n        default: true,\n    },\n});\n\nconst emit = defineEmits(['close']);\n\nwatch(() => props.show, () => {\n    if (props.show) {\n        document.body.style.overflow = 'hidden';\n    } else {\n        document.body.style.overflow = null;\n    }\n});\n\nconst close = () => {\n    if (props.closeable) {\n        emit('close');\n    }\n};\n\nconst closeOnEscape = (e) => {\n    if (e.key === 'Escape' && props.show) {\n        close();\n    }\n};\n\nonMounted(() => document.addEventListener('keydown', closeOnEscape));\n\nonUnmounted(() => {\n    document.removeEventListener('keydown', closeOnEscape);\n    document.body.style.overflow = null;\n});\n\nconst maxWidthClass = computed(() => {\n    return {\n        'sm': 'sm:max-w-sm',\n        'md': 'sm:max-w-md',\n        'lg': 'sm:max-w-lg',\n        'xl': 'sm:max-w-xl',\n        '2xl': 'sm:max-w-2xl',\n    }[props.maxWidth];\n});\n</script>\n\n<template>\n    <teleport to=\"body\">\n        <transition leave-active-class=\"duration-200\">\n            <div v-show=\"show\" class=\"fixed inset-0 overflow-y-auto px-4 py-6 sm:px-0 z-50\" scroll-region>\n                <transition\n                    enter-active-class=\"ease-out duration-300\"\n                    enter-from-class=\"opacity-0\"\n                    enter-to-class=\"opacity-100\"\n                    leave-active-class=\"ease-in duration-200\"\n                    leave-from-class=\"opacity-100\"\n                    leave-to-class=\"opacity-0\"\n                >\n                    <div v-show=\"show\" class=\"fixed inset-0 transform transition-all\" @click=\"close\">\n                        <div class=\"absolute inset-0 bg-gray-500 opacity-75\" />\n                    </div>\n                </transition>\n\n                <transition\n                    enter-active-class=\"ease-out duration-300\"\n                    enter-from-class=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n                    enter-to-class=\"opacity-100 translate-y-0 sm:scale-100\"\n                    leave-active-class=\"ease-in duration-200\"\n                    leave-from-class=\"opacity-100 translate-y-0 sm:scale-100\"\n                    leave-to-class=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n                >\n                    <div v-show=\"show\" class=\"mb-6 bg-white rounded-lg overflow-hidden shadow-xl transform transition-all sm:w-full sm:mx-auto\" :class=\"maxWidthClass\">\n                        <slot v-if=\"show\" />\n                    </div>\n                </transition>\n            </div>\n        </transition>\n    </teleport>\n</template>\n","import script from \"./SecondaryButton.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./SecondaryButton.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <div class=\"md:col-span-1 flex justify-between\">\n        <div class=\"px-4 sm:px-0\">\n            <h3 class=\"text-lg font-medium text-gray-100\">\n                <slot name=\"title\" />\n            </h3>\n\n            <p class=\"mt-1 text-sm text-gray-300\">\n                <slot name=\"description\" />\n            </p>\n        </div>\n\n        <div class=\"px-4 sm:px-0\">\n            <slot name=\"aside\" />\n        </div>\n    </div>\n</template>\n","import { render } from \"./SectionTitle.vue?vue&type=template&id=80f22ac0\"\nconst script = {}\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import script from \"./ConfirmsPassword.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ConfirmsPassword.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { ref, reactive, nextTick } from 'vue';\nimport JetButton from './Button.vue';\nimport JetDialogModal from './DialogModal.vue';\nimport JetInput from './Input.vue';\nimport JetInputError from './InputError.vue';\nimport JetSecondaryButton from './SecondaryButton.vue';\n\nconst emit = defineEmits(['confirmed']);\n\ndefineProps({\n    title: {\n        type: String,\n        default: 'Confirm Password',\n    },\n    content: {\n        type: String,\n        default: 'For your security, please confirm your password to continue.',\n    },\n    button: {\n        type: String,\n        default: 'Confirm',\n    },\n});\n\nconst confirmingPassword = ref(false);\n\nconst form = reactive({\n    password: '',\n    error: '',\n    processing: false,\n});\n\nconst passwordInput = ref(null);\n\nconst startConfirmingPassword = () => {\n    axios.get(route('password.confirmation')).then(response => {\n        if (response.data.confirmed) {\n            emit('confirmed');\n        } else {\n            confirmingPassword.value = true;\n\n            setTimeout(() => passwordInput.value.focus(), 250);\n        }\n    });\n};\n\nconst confirmPassword = () => {\n    form.processing = true;\n\n    axios.post(route('password.confirm'), {\n        password: form.password,\n    }).then(() => {\n        form.processing = false;\n\n        closeModal();\n        nextTick().then(() => emit('confirmed'));\n\n    }).catch(error => {\n        form.processing = false;\n        form.error = error.response.data.errors.password[0];\n        passwordInput.value.focus();\n    });\n};\n\nconst closeModal = () => {\n    confirmingPassword.value = false;\n    form.password = '';\n    form.error = '';\n};\n</script>\n\n<template>\n    <span>\n        <span @click=\"startConfirmingPassword\">\n            <slot />\n        </span>\n\n        <JetDialogModal :show=\"confirmingPassword\" @close=\"closeModal\">\n            <template #title>\n                {{ title }}\n            </template>\n\n            <template #content>\n                {{ content }}\n\n                <div class=\"mt-4\">\n                    <JetInput\n                        ref=\"passwordInput\"\n                        v-model=\"form.password\"\n                        type=\"password\"\n                        class=\"mt-1 block w-3/4\"\n                        placeholder=\"Password\"\n                        @keyup.enter=\"confirmPassword\"\n                    />\n\n                    <JetInputError :message=\"form.error\" class=\"mt-2\" />\n                </div>\n            </template>\n\n            <template #footer>\n                <JetSecondaryButton @click=\"closeModal\">\n                    Cancel\n                </JetSecondaryButton>\n\n                <JetButton\n                    class=\"ml-3\"\n                    :class=\"{ 'opacity-25': form.processing }\"\n                    :disabled=\"form.processing\"\n                    @click=\"confirmPassword\"\n                >\n                    {{ button }}\n                </JetButton>\n            </template>\n        </JetDialogModal>\n    </span>\n</template>\n","import script from \"./TwoFactorAuthenticationForm.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TwoFactorAuthenticationForm.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <JetActionSection>\n    <template #title>\n      Two Factor Authentication\n    </template>\n\n    <template #description>\n      Add additional security to your account using two factor authentication.\n    </template>\n\n    <template #content>\n      <h3 v-if=\"twoFactorEnabled && !confirming\" class=\"text-lg font-medium text-gray-900\">\n        You have enabled two factor authentication.\n      </h3>\n\n      <h3 v-else-if=\"twoFactorEnabled && confirming\" class=\"text-lg font-medium text-gray-900\">\n        Finish enabling two factor authentication.\n      </h3>\n\n      <h3 v-else class=\"text-lg font-medium text-gray-900\">\n        You have not enabled two factor authentication.\n      </h3>\n\n      <div class=\"mt-3 max-w-xl text-sm text-gray-600\">\n        <p>\n          When two factor authentication is enabled, you will be prompted for a secure, random token during\n          authentication. You may retrieve this token from your phone's Google Authenticator application.\n        </p>\n      </div>\n\n      <div v-if=\"twoFactorEnabled\">\n        <div v-if=\"qrCode\">\n          <div class=\"mt-4 max-w-xl text-sm text-gray-600\">\n            <p v-if=\"confirming\" class=\"font-semibold\">\n              To finish enabling two factor authentication, scan the following QR code using your phone's authenticator\n              application or enter the setup key and provide the generated OTP code.\n            </p>\n\n            <p v-else>\n              Two factor authentication is now enabled. Scan the following QR code using your phone's authenticator\n              application or enter the setup key.\n            </p>\n          </div>\n\n          <div class=\"mt-4\" v-html=\"qrCode\"/>\n\n          <div class=\"mt-4 max-w-xl text-sm text-gray-600\" v-if=\"setupKey\">\n            <p class=\"font-semibold\">\n              Setup Key: <span v-html=\"setupKey\"></span>\n            </p>\n          </div>\n\n          <div v-if=\"confirming\" class=\"mt-4\">\n            <JetLabel for=\"code\" value=\"Code\"/>\n\n            <JetInput\n                id=\"code\"\n                v-model=\"confirmationForm.code\"\n                type=\"text\"\n                name=\"code\"\n                class=\"block mt-1 w-1/2\"\n                inputmode=\"numeric\"\n                autofocus\n                autocomplete=\"one-time-code\"\n                @keyup.enter=\"confirmTwoFactorAuthentication\"\n            />\n\n            <JetInputError :message=\"confirmationForm.errors.code\" class=\"mt-2\"/>\n          </div>\n        </div>\n\n        <div v-if=\"recoveryCodes.length > 0 && !confirming\">\n          <div class=\"mt-4 max-w-xl text-sm text-gray-600\">\n            <p class=\"font-semibold\">\n              Store these recovery codes in a secure password manager. They can be used to recover access to your\n              account if your two factor authentication device is lost.\n            </p>\n          </div>\n\n          <div class=\"grid gap-1 max-w-xl mt-4 px-4 py-4 font-mono text-sm bg-gray-100 rounded-lg\">\n            <div v-for=\"code in recoveryCodes\" :key=\"code\">\n              {{ code }}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"mt-5\">\n        <div v-if=\"!twoFactorEnabled\">\n          <JetConfirmsPassword @confirmed=\"enableTwoFactorAuthentication\">\n            <JetButton type=\"button\" :class=\"{ 'opacity-25': enabling }\" :disabled=\"enabling\">\n              Enable\n            </JetButton>\n          </JetConfirmsPassword>\n        </div>\n\n        <div v-else>\n          <JetConfirmsPassword @confirmed=\"confirmTwoFactorAuthentication\">\n            <JetButton\n                v-if=\"confirming\"\n                type=\"button\"\n                class=\"mr-3\"\n                :class=\"{ 'opacity-25': enabling }\"\n                :disabled=\"enabling\"\n            >\n              Confirm\n            </JetButton>\n          </JetConfirmsPassword>\n\n          <JetConfirmsPassword @confirmed=\"regenerateRecoveryCodes\">\n            <JetSecondaryButton\n                v-if=\"recoveryCodes.length > 0 && !confirming\"\n                class=\"mr-3\"\n            >\n              Regenerate Recovery Codes\n            </JetSecondaryButton>\n          </JetConfirmsPassword>\n\n          <JetConfirmsPassword @confirmed=\"showRecoveryCodes\">\n            <JetSecondaryButton\n                v-if=\"recoveryCodes.length === 0 && !confirming\"\n                class=\"mr-3 mb-2\"\n            >\n              Show Recovery Codes\n            </JetSecondaryButton>\n          </JetConfirmsPassword>\n\n          <JetConfirmsPassword @confirmed=\"disableTwoFactorAuthentication\">\n            <JetSecondaryButton\n                v-if=\"confirming\"\n                :class=\"{ 'opacity-25': disabling }\"\n                :disabled=\"disabling\"\n            >\n              Cancel\n            </JetSecondaryButton>\n          </JetConfirmsPassword>\n\n          <JetConfirmsPassword @confirmed=\"disableTwoFactorAuthentication\">\n            <JetDangerButton\n                v-if=\"!confirming\"\n                :class=\"{ 'opacity-25': disabling }\"\n                :disabled=\"disabling\"\n            >\n              Disable\n            </JetDangerButton>\n          </JetConfirmsPassword>\n        </div>\n      </div>\n    </template>\n  </JetActionSection>\n</template>\n<script setup>\nimport { ref, computed, watch } from 'vue';\nimport { router } from '@inertiajs/vue3';\nimport { useForm, usePage } from '@inertiajs/vue3';\nimport JetActionSection from '@/Jetstream/ActionSection.vue';\nimport JetButton from '@/Jetstream/Button.vue';\nimport JetConfirmsPassword from '@/Jetstream/ConfirmsPassword.vue';\nimport JetDangerButton from '@/Jetstream/DangerButton.vue';\nimport JetInput from '@/Jetstream/Input.vue';\nimport JetInputError from '@/Jetstream/InputError.vue';\nimport JetLabel from '@/Jetstream/Label.vue';\nimport JetSecondaryButton from '@/Jetstream/SecondaryButton.vue';\nimport axios from 'axios';\n\nconst props = defineProps({\n  requiresConfirmation: Boolean,\n});\n\nconst enabling = ref(false);\nconst confirming = ref(false);\nconst disabling = ref(false);\nconst qrCode = ref(null);\nconst setupKey = ref(null);\nconst recoveryCodes = ref([]);\n\nconst confirmationForm = useForm({\n  code: '',\n});\n\nconst twoFactorEnabled = computed(() => !enabling.value && usePage().props.auth.user?.two_factor_enabled);\n\nwatch(twoFactorEnabled, () => {\n  if (!twoFactorEnabled.value) {\n    confirmationForm.reset();\n    confirmationForm.clearErrors();\n  }\n});\n\nconst enableTwoFactorAuthentication = () => {\n  // console.log('Starting two-factor authentication enable process...');\n  enabling.value = true;\n\n  router.post('/user/two-factor-authentication', {}, {\n    preserveScroll: true,\n    onSuccess: () => {\n      // console.log('Two-factor authentication enabled successfully.');\n      return Promise.all([\n        showQrCode(),\n        showSetupKey(),\n        showRecoveryCodes(),\n      ]);\n    },\n    onFinish: () => {\n      // console.log('Finished two-factor authentication enable process.');\n      enabling.value = false;\n      confirming.value = props.requiresConfirmation;\n    },\n    onError: (errors) => {\n      console.error('Error enabling two-factor authentication:', errors);\n      enabling.value = false;\n    },\n  });\n};\n\nconst showQrCode = () => {\n  // console.log('Fetching QR code...');\n  return axios.get('/user/two-factor-qr-code').then(response => {\n    qrCode.value = response.data.svg;\n  }).catch(error => {\n    console.error('Error fetching QR code:', error);\n  });\n};\n\nconst showSetupKey = () => {\n  // console.log('Fetching setup key...');\n  return axios.get('/user/two-factor-secret-key').then(response => {\n    // console.log('Setup key fetched successfully.');\n    setupKey.value = response.data.secretKey;\n  }).catch(error => {\n    console.error('Error fetching setup key:', error);\n  });\n};\n\nconst showRecoveryCodes = () => {\n  // console.log('Fetching recovery codes...');\n  return axios.get('/user/two-factor-recovery-codes').then(response => {\n    // console.log('Recovery codes fetched successfully.');\n    recoveryCodes.value = response.data;\n  }).catch(error => {\n    console.error('Error fetching recovery codes:', error);\n  });\n};\n\nconst confirmTwoFactorAuthentication = () => {\n  // console.log('Confirming two-factor authentication...');\n  confirmationForm.post('/user/confirmed-two-factor-authentication', {\n    errorBag: 'confirmTwoFactorAuthentication',\n    preserveScroll: true,\n    preserveState: true,\n    onSuccess: () => {\n      // console.log('Two-factor authentication confirmed successfully.');\n      confirming.value = false;\n      qrCode.value = null;\n      setupKey.value = null;\n    },\n    onError: (errors) => {\n      console.error('Error confirming two-factor authentication:', errors);\n    },\n  });\n};\n\nconst regenerateRecoveryCodes = () => {\n  // console.log('Regenerating recovery codes...');\n  axios.post('/user/two-factor-recovery-codes').then(() => {\n    // console.log('Recovery codes regenerated successfully.');\n    showRecoveryCodes();\n  }).catch(error => {\n    console.error('Error regenerating recovery codes:', error);\n  });\n};\n\nconst disableTwoFactorAuthentication = () => {\n  // console.log('Disabling two-factor authentication...');\n  disabling.value = true;\n\n  router.delete('/user/two-factor-authentication', {\n    preserveScroll: true,\n    onSuccess: () => {\n      // console.log('Two-factor authentication disabled successfully.');\n      disabling.value = false;\n      confirming.value = false;\n    },\n    onError: (errors) => {\n      console.error('Error disabling two-factor authentication:', errors);\n      disabling.value = false;\n    },\n  });\n};\n</script>"],"names":["emit","close","input","ref","onMounted","value","hasAttribute","focus","__expose","props","__props","__emit","watch","show","document","body","style","overflow","closeable","closeOnEscape","e","key","addEventListener","onUnmounted","removeEventListener","maxWidthClass","computed","maxWidth","class","script","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_renderSlot","_ctx","$slots","_hoisted_4","_hoisted_5","confirmingPassword","form","reactive","password","error","processing","passwordInput","startConfirmingPassword","axios","get","route","then","response","data","confirmed","setTimeout","confirmPassword","post","closeModal","nextTick","errors","enabling","confirming","disabling","qrCode","setupKey","recoveryCodes","confirmationForm","useForm","code","twoFactorEnabled","_usePage$props$auth$u","usePage","auth","user","two_factor_enabled","reset","clearErrors","enableTwoFactorAuthentication","router","preserveScroll","onSuccess","Promise","all","showQrCode","showSetupKey","showRecoveryCodes","onFinish","requiresConfirmation","onError","console","svg","secretKey","confirmTwoFactorAuthentication","errorBag","preserveState","regenerateRecoveryCodes","disableTwoFactorAuthentication"],"sourceRoot":""}
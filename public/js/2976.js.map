{"version":3,"file":"js/2976.js","mappings":"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","sources":["webpack:///./resources/js/Utilities/PageSetup.js","webpack:///./resources/js/Pages/Shop/OneTimeContribution.vue?7381","webpack:///./resources/js/Components/Pages/Shop/FavouriteSelectedImage.vue?51fb","webpack:///./resources/js/Components/Pages/Shop/FavouriteSelectedImage.vue","webpack:///./resources/js/Pages/Shop/OneTimeContribution.vue","webpack:///./resources/js/Pages/Shop/OneTimeContribution.vue?a2e8","webpack:///./resources/js/Pages/Shop/OneTimeContribution.vue?0024"],"sourcesContent":["import { onBeforeMount, onMounted, watch } from 'vue'\nimport { useUserStore } from \"@/Stores/UserStore\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useVideoPlayerStore } from \"@/Stores/VideoPlayerStore\"\nimport { router } from '@inertiajs/vue3'\n\nexport function usePageSetup(pageName) {\n    const userStore = useUserStore()\n    const appSettingStore = useAppSettingStore()\n    const videoPlayerStore = useVideoPlayerStore()\n\n    appSettingStore.currentPage = pageName\n    appSettingStore.showFlashMessage = true\n    appSettingStore.pageIsHidden = false\n\n// PageSetup utility\n    if (userStore.isMobile || window.innerWidth < 1024) {\n        appSettingStore.ott = 0; // Close all panels on mobile devices\n    } else if (appSettingStore.fullPage) {\n        appSettingStore.ott = 0; // Default to closed in fullPage mode\n    } else {\n        if (appSettingStore.ott === 0) {\n            appSettingStore.ott = 4\n        }\n        // appSettingStore.ott = 4; // Open OttChat by default on larger screens\n        appSettingStore.showOttButtons = true;\n    }\n\n    videoPlayerStore.makeVideoTopRight()\n\n    if (appSettingStore.pageReload) {\n        appSettingStore.pageReload = false\n        appSettingStore.pageWasReloaded = true\n        window.location.reload();\n    }\n    // Check if the URL contains query strings\n\n\n    // Only scroll into view if there are no query strings\n\n        // const topDiv = document.getElementById(\"topDiv\")\n        // if (topDiv) {\n        //     topDiv.scrollIntoView()\n        // }\n        router.on('navigate', (event) => {\n            // Ensure OTT panels do not open automatically on mobile devices\n            if (userStore.isMobile || window.innerWidth < 1024 || appSettingStore.fullPage) {\n                appSettingStore.ott = 0; // Close all panels on mobile devices\n            } else {\n                if (appSettingStore.ott === 0) {\n                    appSettingStore.ott = 4\n                }\n                // appSettingStore.ott = 0; // Default to closed on larger screens\n            }\n            const hasQueryStrings = window.location.search !== '';\n            if (!hasQueryStrings || appSettingStore.shouldScrollToTop) {\n                requestAnimationFrame(() => {\n                    const topDiv = document.getElementById(\"topDiv\");\n                    if (topDiv) {\n                        topDiv.scrollIntoView({behavior: 'auto'});\n                    } else {\n                        window.scrollTo(0, 0);\n                    }\n                });\n            }\n            appSettingStore.shouldScrollToTop = false;\n        })\n    // Only update if we're not already on this page to avoid overwriting with the current URL\n    appSettingStore.setPrevUrl()\n    appSettingStore.showOttButtons = true\n    appSettingStore.noLayout = false\n\n    // router.reload()\n\n    watch(\n        () => appSettingStore.isSmallScreen,\n        (newValue) => {\n            if (newValue) {\n                appSettingStore.ott = 0;\n            } else {\n                appSettingStore.ott = 4;\n            }\n        },\n        { immediate: true } // This option ensures the watch executes immediately with the current value\n    );\n\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"*[data-v-438bb899]{box-sizing:border-box}body[data-v-438bb899]{-webkit-font-smoothing:antialiased;align-content:center;display:flex;font-family:-apple-system,BlinkMacSystemFont,sans-serif;font-size:16px;height:100vh;justify-content:center;width:100vw}form[data-v-438bb899]{align-self:center;border-radius:7px;box-shadow:0 0 0 .5px #32325d1a,0 2px 5px 0 #32325d1a,0 1px 1.5px 0 #00000012;min-width:500px;padding:40px;width:30vw}.hidden[data-v-438bb899]{display:none}#payment-message[data-v-438bb899]{color:#697386;font-size:16px;line-height:20px;padding-top:12px;text-align:center}#payment-element[data-v-438bb899]{margin-bottom:24px}button[data-v-438bb899]{background:#5469d4;border:0;border-radius:4px;box-shadow:0 4px 5.5px 0 #00000012;color:#fff;cursor:pointer;display:block;font-family:Arial,sans-serif;font-size:16px;font-weight:600;padding:12px 16px;transition:all .2s ease;width:100%}button[data-v-438bb899]:hover{filter:contrast(115%)}button[data-v-438bb899]:disabled{cursor:default;opacity:.5}.spinner[data-v-438bb899],.spinner[data-v-438bb899]:after,.spinner[data-v-438bb899]:before{border-radius:50%}.spinner[data-v-438bb899]{box-shadow:inset 0 0 0 2px;color:#fff;font-size:22px;height:20px;margin:0 auto;position:relative;text-indent:-99999px;transform:translateZ(0);width:20px}.spinner[data-v-438bb899]:after,.spinner[data-v-438bb899]:before{content:\\\"\\\";position:absolute}.spinner[data-v-438bb899]:before{animation:loading-438bb899 2s ease 1.5s infinite;border-radius:20.4px 0 0 20.4px;height:20.4px;left:-.2px;top:-.2px;transform-origin:10.4px 10.2px}.spinner[data-v-438bb899]:after,.spinner[data-v-438bb899]:before{background:#5469d4;width:10.4px}.spinner[data-v-438bb899]:after{animation:loading-438bb899 2s ease infinite;border-radius:0 10.2px 10.2px 0;height:10.2px;left:10.2px;top:-.1px;transform-origin:0 10.2px}@keyframes loading-438bb899{0%{transform:rotate(0deg)}to{transform:rotate(1turn)}}@media only screen and (max-width:600px){form[data-v-438bb899]{min-width:auto;width:80vw}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/Pages/Shop/OneTimeContribution.vue\"],\"names\":[],\"mappings\":\"AA+aA,mBACE,qBACF,CAEA,sBAGE,kCAAmC,CAGnC,oBAAqB,CAFrB,YAAa,CAHb,uDAA0D,CAC1D,cAAe,CAKf,YAAa,CAFb,sBAAuB,CAGvB,WACF,CAEA,sBAGE,iBAAkB,CAGlB,iBAAkB,CAFlB,6EAC4E,CAH5E,eAAgB,CAKhB,YAAa,CANb,UAOF,CAEA,yBACE,YACF,CAEA,kCACE,aAAyB,CACzB,cAAe,CACf,gBAAiB,CACjB,gBAAiB,CACjB,iBACF,CAEA,kCACE,kBACF,CAGA,wBACE,kBAAmB,CAInB,QAAS,CADT,iBAAkB,CAQlB,kCAAiD,CATjD,UAAc,CAMd,cAAe,CACf,aAAc,CARd,4BAA8B,CAK9B,cAAe,CACf,eAAgB,CAFhB,iBAAkB,CAKlB,uBAAyB,CAEzB,UACF,CAEA,8BACE,qBACF,CAEA,iCAEE,cAAe,CADf,UAEF,CAGA,2FAGE,iBACF,CAEA,0BAQE,0BAA2B,CAP3B,UAAc,CACd,cAAe,CAKf,WAAY,CAHZ,aAAgB,CAChB,iBAAkB,CAFlB,oBAAqB,CAQrB,uBAAwB,CALxB,UAMF,CAEA,iEAGE,UAAW,CADX,iBAEF,CAEA,iCAUE,gDAAwC,CANxC,+BAAgC,CAFhC,aAAc,CAId,UAAY,CADZ,SAAW,CAGX,8BAGF,CAEA,iEAVE,kBAAmB,CAFnB,YAuBF,CAXA,gCAUE,2CAAmC,CANnC,+BAAgC,CAFhC,aAAc,CAId,WAAY,CADZ,SAAW,CAGX,yBAGF,CAaA,4BACE,GAEE,sBACF,CACA,GAEE,uBACF,CACF,CAEA,yCACE,sBAEE,cAAkB,CADlB,UAEF,CACF\",\"sourcesContent\":[\"<template>\\n\\n  <Head v-if=\\\"shopStore.selectedFavourite\\\" :title=\\\"`Contribution to ${shopStore.selectedFavourite.name}`\\\"/>\\n  <Head v-else :title=\\\"`Contribute a Donation`\\\"/>\\n\\n  <div class=\\\"w-full lace-self-center flex flex-col gap-y-3 bg-orange-400\\\">\\n    <div id=\\\"topDiv\\\" class=\\\"w-full bg-gray-800 text-gray-50 dark:bg-gray-800 dark:text-gray-50 p-5 mb-10\\\">\\n\\n      <!--            <Message v-if=\\\"appSettingStore.showFlashMessage\\\" :flash=\\\"$page.props.flash\\\"/>-->\\n\\n      <header class=\\\"flex justify-center pt-4 mt-2 mb-4\\\">\\n        <h1 class=\\\"text-3xl font-semibold pb-3\\\">\\n          <span v-if=\\\"shopStore.selectedFavourite.name\\\" class=\\\"capitalize\\\">Contribute to {{\\n              shopStore.selectedFavourite.name\\n            }}</span>\\n          <span v-else>Contribute to notTV</span>\\n        </h1>\\n      </header>\\n\\n\\n      <section id=\\\"security-assurance\\\">\\n        <div style=\\\"text-align: center; margin-bottom: 20px;\\\">\\n          <!-- Font Awesome Padlock Icon -->\\n          <font-awesome-icon icon=\\\"fa-lock\\\" aria-hidden=\\\"true\\\" style=\\\"font-size: 24px; color: #2c3e50;\\\"/>\\n        </div>\\n        <div style=\\\"text-align: center; max-width: 600px; margin: auto;\\\">\\n          <h2>Your Security, Our Priority</h2>\\n          <p>We take your security seriously. All transactions are encrypted and processed through secure payment\\n            gateways. Your payment information is never stored on our servers, ensuring your data remains private and\\n            protected.</p>\\n        </div>\\n      </section>\\n\\n\\n      <div class=\\\"flex flex-col justify-center items-center w-full mx-auto mt-8\\\">\\n        <div v-if=\\\"shopStore.selectedFavourite.name\\\" class=\\\"flex flex-col text-center\\\">\\n          <h2 class=\\\"text-2xl font-semibold text-gray-100 dark:text-gray-100\\\">${{ shopStore.donationAmount }} Donation\\n            to</h2>\\n          <div class=\\\"flex items-center gap-2 mt-2\\\">\\n            <FavouriteSelectedImage :item=\\\"shopStore.selectedFavourite\\\"/>\\n            <span class=\\\"text-xl\\\">{{ shopStore.selectedFavourite.name }}</span>\\n          </div>\\n        </div>\\n        <div v-else class=\\\"flex flex-col\\\">\\n          <h2 class=\\\"text-2xl font-semibold text-gray-100 dark:text-gray-100 mb-2\\\">${{ shopStore.donationAmount }}\\n            Donation\\n            to</h2>\\n          <img :src=\\\"`/storage/images/logo_white.svg`\\\" alt=\\\"notTV Logo White\\\" class=\\\"w-30\\\">\\n        </div>\\n\\n        <div v-if=\\\"!shopStore.showPaymentForm\\\"\\n             class=\\\"flex flex-col w-full items-center justify-center text-center mx-auto mt-8 px-12\\\">\\n          <h2 class=\\\"mt-6 mx-auto text-xl font-semibold text-white dark:text-gray-100\\\">Payment form is loading...</h2>\\n          <span class=\\\"loading loading-dots loading-lg text-info\\\"></span>\\n        </div>\\n\\n        <form id=\\\"payment-form\\\" class=\\\"w-full\\\" @submit.prevent=\\\"submit\\\">\\n          <div id=\\\"link-authentication-element\\\" class=\\\"mb-2\\\"></div>\\n          <div id=\\\"payment-element\\\" class=\\\"w-full\\\"></div>\\n          <div class=\\\"mb-2 text-xs text-gray-300\\\">\\n            By clicking ‘Complete Payment’, you agree to our Terms and Conditions and acknowledge our Privacy Policy.\\n          </div>\\n          <button id=\\\"submit\\\" class=\\\"h-fit bg-blue-600 hover:bg-blue-500 text-white rounded py-2 px-4\\\"\\n                  :disabled=\\\"processing\\\">\\n            <div class=\\\"spinner hidden\\\" id=\\\"spinner\\\"></div>\\n            <span v-if=\\\"!processing && shopStore.showPaymentForm\\\" id=\\\"button-text\\\">Complete Payment</span>\\n          </button>\\n          <div id=\\\"payment-message\\\" class=\\\"hidden\\\">{{ paymentMessage }}</div>\\n        </form>\\n        <!--        <form id=\\\"payment-form\\\" class=\\\"w-full\\\">-->\\n        <!--          <div id=\\\"link-authentication-element\\\" class=\\\"mb-2\\\">-->\\n        <!--            &lt;!&ndash;Stripe.js injects the Link Authentication Element&ndash;&gt;-->\\n        <!--          </div>-->\\n        <!--          <div id=\\\"payment-element\\\" class=\\\"w-full\\\">-->\\n        <!--            &lt;!&ndash;Stripe.js injects the Payment Element&ndash;&gt;-->\\n        <!--          </div>-->\\n        <!--          <div class=\\\"mb-2 text-xs text-gray-300\\\">By clicking ‘Complete Payment’, you agree to our Terms and Conditions-->\\n        <!--            and acknowledge our Privacy Policy.-->\\n        <!--          </div>-->\\n        <!--          <button id=\\\"submit\\\"-->\\n        <!--                  class=\\\"h-fit bg-blue-600 hover:bg-blue-500 text-white rounded py-2 px-4\\\"-->\\n        <!--                  @click.prevent=\\\"submit()\\\">-->\\n        <!--            <div class=\\\"spinner hidden\\\" id=\\\"spinner\\\"></div>-->\\n        <!--            <span id=\\\"button-text\\\">Complete Payment</span>-->\\n        <!--          </button>-->\\n        <!--          <div id=\\\"payment-message\\\" class=\\\"hidden\\\"></div>-->\\n        <!--        </form>-->\\n\\n        <div>Your payment is secured with SSL encryption.</div>\\n\\n        <!-- {/* Show any error or success messages */}-->\\n        <div v-if=\\\"error\\\" id=\\\"payment-error\\\" class=\\\"text-red-600 font-semibold w-full my-2\\\"> {{ error }}</div>\\n        <!--        <div v-if=\\\"message\\\" id=\\\"payment-message\\\" class=\\\"mt-1 text-white\\\">{{ message }}</div>-->\\n      </div>\\n\\n    </div>\\n  </div>\\n\\n</template>\\n\\n<script setup>\\nimport { ref, onMounted, watch } from 'vue'\\nimport { usePageSetup } from '@/Utilities/PageSetup'\\nimport { useUserStore } from '@/Stores/UserStore'\\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\\nimport { useNotificationStore } from '@/Stores/NotificationStore'\\nimport { useShopStore } from '@/Stores/ShopStore'\\nimport { useForm } from '@inertiajs/vue3'\\n// import { loadStripe } from '@stripe/stripe-js'\\nimport FavouriteSelectedImage from '@/Components/Pages/Shop/FavouriteSelectedImage.vue'\\n\\nusePageSetup('shop/subscribe')\\n\\nconst userStore = useUserStore()\\nconst appSettingStore = useAppSettingStore()\\nconst notificationStore = useNotificationStore()\\nconst shopStore = useShopStore()\\n\\nlet props = defineProps({\\n  user: Object,\\n  error: String,\\n  intent: Object,\\n  elements: {},\\n})\\n\\nconst paymentMessage = ref('')\\nconst processing = ref(false)\\nlet stripe\\nlet elements\\n\\n\\n\\n// const showPaymentForm = () => {\\n//\\n// }\\n\\nconst initialize = () => {\\n  const clientSecret = props.intent.client_secret\\n  const appearance = {\\n    theme: 'stripe',\\n    variables: {\\n      colorPrimary: '#0570de',\\n      colorBackground: '#ffffff',\\n      colorBackgroundText: '#ffffff',\\n      colorText: '#222222',\\n      colorDanger: '#df1b41',\\n      fontFamily: 'Ideal Sans, system-ui, sans-serif',\\n      spacingUnit: '4px',\\n    },\\n    rules: {\\n      '.Label': {\\n        color: 'var(--colorBackgroundText)',\\n      },\\n    },\\n  }\\n\\n  elements = stripe.elements({appearance, clientSecret})\\n\\n  const paymentElementOptions = {\\n    layout: 'tabs',\\n  }\\n\\n  const paymentElement = elements.create('payment', paymentElementOptions)\\n  paymentElement.mount('#payment-element')\\n  document.getElementById('payment-form').style.display = 'block'\\n  // shopStore.showPaymentForm = true\\n\\n}\\n\\n\\nconst createPaymentIntent = async () => {\\n  try {\\n    const amountInCents = shopStore.donationAmount * 100 // Convert to cents\\n    const {data} = await axios.post('/shop/payment-intent', {\\n      amount: amountInCents,\\n      favourite_item_id: shopStore.selectedFavourite.id, // Include favourite item\\n      favourite_item_name: shopStore.selectedFavourite.name, // Include favourite item\\n      favourite_item_type: shopStore.selectedFavouriteType, // Include favourite item\\n    })\\n    return data.clientSecret\\n  } catch (error) {\\n    console.error('Error creating payment intent:', error)\\n    showMessage('Failed to create payment intent. Please try again.')\\n    setLoading(false)\\n    throw error\\n  }\\n}\\n\\n// Watch for changes in userStore.hasConsentedToCookies\\nwatch(\\n    () => userStore.hasConsentedToCookies,\\n    async (newVal) => {\\n      appSettingStore.showCookieBanner = !newVal;\\n      if (newVal) {\\n        // Dynamically import Stripe library only after consent is given\\n        const { loadStripe } = await import('@stripe/stripe-js');\\n        const stripePromise = loadStripe(process.env.MIX_STRIPE_KEY);\\n        stripe = await stripePromise;\\n        initialize();\\n        shopStore.showPaymentForm = true\\n      }\\n    },\\n    { immediate: false } // Do not execute immediately on load\\n);\\n\\n\\n\\nonMounted(async () => {\\n      if (!userStore.hasConsentedToCookies) {\\n        appSettingStore.showCookieBanner = true\\n      } else {\\n        // Dynamically import Stripe library if user has already consented\\n        const { loadStripe } = await import('@stripe/stripe-js');\\n        const stripePromise = loadStripe(process.env.MIX_STRIPE_KEY);\\n        stripe = await stripePromise;\\n        initialize();\\n        shopStore.showPaymentForm = true;\\n      }\\n      shopStore.customer = props.user\\n    },\\n)\\n\\n\\nconst submit = async () => {\\n  setLoading(true)\\n  paymentMessage.value = ''\\n\\n  try {\\n    // Call elements.submit() to gather all required fields\\n    const {error: submitError} = await elements.submit()\\n    if (submitError) {\\n      showMessage(submitError.message)\\n      setLoading(false)\\n      return\\n    }\\n\\n    const clientSecret = await createPaymentIntent()\\n\\n    const {error, paymentIntent} = await stripe.confirmPayment({\\n      elements,\\n      confirmParams: {\\n        return_url: 'https://not.tv/contribute/donation_success', // Replace with your success URL\\n        // receipt_email: props.user.email,\\n        receipt_email: 'travis@not.tv',\\n        payment_method_data: {\\n          billing_details: {\\n            name: props.user.name, // Provide the customer name\\n          },\\n        },\\n      },\\n      clientSecret,\\n    })\\n\\n    if (error) {\\n      if (error.type === 'card_error' || error.type === 'validation_error') {\\n        notificationStore.setGeneralServiceNotification(error.code, error.message)\\n        showMessage(error.message)\\n      } else {\\n        showMessage('An unexpected error occurred.')\\n      }\\n      setLoading(false)\\n    } else {\\n      let form = useForm({\\n        paymentMethod: paymentIntent.payment_method,\\n        plan: shopStore.upgradeStripeId,\\n      })\\n\\n      form.post('/contribute/donation_success', {\\n        onFinish: () => {\\n          setLoading(false)\\n        },\\n      })\\n    }\\n  } catch (error) {\\n    console.error('Error in payment process:', error)\\n  }\\n}\\n\\n\\n// const options = {\\n//   mode: 'setup',\\n//   currency: 'cad',\\n// }\\n//\\n// let stripe\\n// let elements\\n\\n// const paymentMessage = ref('');\\n// const processing = ref(false);\\n// const stripePromise = loadStripe(process.env.MIX_STRIPE_KEY);\\n\\n// onMounted(async () => {\\n//   shopStore.customer = props.user\\n//\\n//   stripe = await loadStripe(StripeAPIKey)\\n//\\n//   initialize()\\n//\\n//   showPaymentForm()\\n//\\n//   document\\n//       .querySelector('#payment-form')\\n//   // .addEventListener(\\\"submit\\\", handleSubmit);\\n//\\n//\\n// })\\n\\n// function showPaymentForm() {\\n//   shopStore.showPaymentForm = true\\n// }\\n\\n// function initialize() {\\n//\\n//   const clientSecret = props.intent.client_secret\\n//   const appearance = {\\n//     theme: 'stripe',\\n//     variables: {\\n//       colorPrimary: '#0570de',\\n//       colorBackground: '#ffffff',\\n//       colorBackgroundText: '#ffffff',\\n//       colorText: '#222222',\\n//       colorDanger: '#df1b41',\\n//       fontFamily: 'Ideal Sans, system-ui, sans-serif',\\n//       spacingUnit: '4px',\\n//     },\\n//     rules: {\\n//       '.Label': {\\n//         color: 'var(--colorBackgroundText)',\\n//       },\\n//     },\\n//   }\\n//\\n//   elements = stripe.elements({appearance, clientSecret})\\n\\n// this is for linkPayments\\n// const linkAuthenticationElement = elements.create(\\\"linkAuthentication\\\");\\n// linkAuthenticationElement.mount(\\\"#link-authentication-element\\\");\\n//\\n// linkAuthenticationElement.on('change', (event) => {\\n//     emailAddress = event.value.email;\\n// });\\n\\n//   const paymentElementOptions = {\\n//     layout: 'tabs',\\n//   }\\n//\\n//   const paymentElement = elements.create('payment', paymentElementOptions)\\n//   paymentElement.mount('#payment-element')\\n//\\n// }\\n\\n// async function submit() {\\n//   if (shopStore.upgradeStripeId === '' || null) {\\n//     alert('Please select a subscription.')\\n//     return\\n//   }\\n//   setLoading(true)\\n//\\n//   const {setupIntent, error} = await stripe.confirmSetup({\\n//     elements,\\n//     confirmParams: {\\n//       // Make sure to change this to your payment completion page\\n//       return_url: 'https://not.tv/subscription_success',\\n//       // receipt_email: emailAddress,\\n//     },\\n//     redirect: 'if_required',\\n//\\n//\\n//   })\\n\\n// This point will only be reached if there is an immediate error when\\n// confirming the payment. Otherwise, your customer will be redirected to\\n// your `return_url`. For some payment methods like iDEAL, your customer will\\n// be redirected to an intermediate site first to authorize the payment, then\\n// redirected to the `return_url`.\\n\\n// if (error) {\\n//   if (error.type === 'card_error' || error.type === 'validation_error') {\\n//     showMessage(error.message)\\n//   } else {\\n//     showMessage('An unexpected error occurred.')\\n//     setLoading(false)\\n//   }\\n// } else {\\n//   // console.log(setupIntent)\\n//   let form = useForm({\\n//     paymentMethod: setupIntent.payment_method,\\n//     plan: shopStore.upgradeStripeId,\\n//   })\\n//\\n//   //Submit the form\\n//   form.post('/contribute/subscription')\\n//\\n// }\\n// }\\n\\n\\n// ------- UI helpers -------\\n\\nfunction showMessage(messageText) {\\n\\n  const messageContainer = document.querySelector('#payment-message')\\n\\n  messageContainer.classList.remove('hidden')\\n  messageContainer.textContent = messageText\\n\\n  setTimeout(function () {\\n    messageContainer.classList.add('hidden')\\n    messageContainer.textContent = ''\\n  }, 4000)\\n}\\n\\n// Show a spinner on payment submission\\nfunction setLoading(isLoading) {\\n  if (isLoading) {\\n    // Disable the button and show a spinner\\n    document.querySelector('#submit').disabled = true\\n    document.querySelector('#spinner').classList.remove('hidden')\\n    document.querySelector('#button-text').classList.add('hidden')\\n  } else {\\n    document.querySelector('#submit').disabled = false\\n    document.querySelector('#spinner').classList.add('hidden')\\n    document.querySelector('#button-text').classList.remove('hidden')\\n  }\\n}\\n\\n</script>\\n\\n<style scoped>\\n\\n/* Variables */\\n* {\\n  box-sizing: border-box;\\n}\\n\\nbody {\\n  font-family: -apple-system, BlinkMacSystemFont, sans-serif;\\n  font-size: 16px;\\n  -webkit-font-smoothing: antialiased;\\n  display: flex;\\n  justify-content: center;\\n  align-content: center;\\n  height: 100vh;\\n  width: 100vw;\\n}\\n\\nform {\\n  width: 30vw;\\n  min-width: 500px;\\n  align-self: center;\\n  box-shadow: 0px 0px 0px 0.5px rgba(50, 50, 93, 0.1),\\n  0px 2px 5px 0px rgba(50, 50, 93, 0.1), 0px 1px 1.5px 0px rgba(0, 0, 0, 0.07);\\n  border-radius: 7px;\\n  padding: 40px;\\n}\\n\\n.hidden {\\n  display: none;\\n}\\n\\n#payment-message {\\n  color: rgb(105, 115, 134);\\n  font-size: 16px;\\n  line-height: 20px;\\n  padding-top: 12px;\\n  text-align: center;\\n}\\n\\n#payment-element {\\n  margin-bottom: 24px;\\n}\\n\\n/* Buttons and links */\\nbutton {\\n  background: #5469d4;\\n  font-family: Arial, sans-serif;\\n  color: #ffffff;\\n  border-radius: 4px;\\n  border: 0;\\n  padding: 12px 16px;\\n  font-size: 16px;\\n  font-weight: 600;\\n  cursor: pointer;\\n  display: block;\\n  transition: all 0.2s ease;\\n  box-shadow: 0px 4px 5.5px 0px rgba(0, 0, 0, 0.07);\\n  width: 100%;\\n}\\n\\nbutton:hover {\\n  filter: contrast(115%);\\n}\\n\\nbutton:disabled {\\n  opacity: 0.5;\\n  cursor: default;\\n}\\n\\n/* spinner/processing state, errors */\\n.spinner,\\n.spinner:before,\\n.spinner:after {\\n  border-radius: 50%;\\n}\\n\\n.spinner {\\n  color: #ffffff;\\n  font-size: 22px;\\n  text-indent: -99999px;\\n  margin: 0px auto;\\n  position: relative;\\n  width: 20px;\\n  height: 20px;\\n  box-shadow: inset 0 0 0 2px;\\n  -webkit-transform: translateZ(0);\\n  -ms-transform: translateZ(0);\\n  transform: translateZ(0);\\n}\\n\\n.spinner:before,\\n.spinner:after {\\n  position: absolute;\\n  content: \\\"\\\";\\n}\\n\\n.spinner:before {\\n  width: 10.4px;\\n  height: 20.4px;\\n  background: #5469d4;\\n  border-radius: 20.4px 0 0 20.4px;\\n  top: -0.2px;\\n  left: -0.2px;\\n  -webkit-transform-origin: 10.4px 10.2px;\\n  transform-origin: 10.4px 10.2px;\\n  -webkit-animation: loading 2s infinite ease 1.5s;\\n  animation: loading 2s infinite ease 1.5s;\\n}\\n\\n.spinner:after {\\n  width: 10.4px;\\n  height: 10.2px;\\n  background: #5469d4;\\n  border-radius: 0 10.2px 10.2px 0;\\n  top: -0.1px;\\n  left: 10.2px;\\n  -webkit-transform-origin: 0px 10.2px;\\n  transform-origin: 0px 10.2px;\\n  -webkit-animation: loading 2s infinite ease;\\n  animation: loading 2s infinite ease;\\n}\\n\\n@-webkit-keyframes loading {\\n  0% {\\n    -webkit-transform: rotate(0deg);\\n    transform: rotate(0deg);\\n  }\\n  100% {\\n    -webkit-transform: rotate(360deg);\\n    transform: rotate(360deg);\\n  }\\n}\\n\\n@keyframes loading {\\n  0% {\\n    -webkit-transform: rotate(0deg);\\n    transform: rotate(0deg);\\n  }\\n  100% {\\n    -webkit-transform: rotate(360deg);\\n    transform: rotate(360deg);\\n  }\\n}\\n\\n@media only screen and (max-width: 600px) {\\n  form {\\n    width: 80vw;\\n    min-width: initial;\\n  }\\n}\\n\\n\\n</style>\\n\\n\\n\\n\\n\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import script from \"./FavouriteSelectedImage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./FavouriteSelectedImage.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div :ref=\"el => setTargetRef(el, item.id)\">\n    <div v-if=\"shopStore.selectedFavouriteType === 'show'\">\n      <SingleImage\n          v-if=\"isVisible(item.id)\"\n          :image=\"item.image\"\n          :alt=\"``\"\n          :class=\"`skeleton h-10 w-10 rounded-full object-cover`\"/>\n    </div>\n    <div v-else>\n      <img\n          v-if=\"item.profile_photo_path && isVisible(item.id)\"\n          :src=\"'/storage/' + item.profile_photo_path\"\n          :alt=\"item.name + ' profile photo'\"\n          class=\"h-10 w-10 rounded-full object-cover\">\n      <img\n          v-else-if=\"item.profile_photo_url && isVisible(item.id)\"\n          :src=\"item.profile_photo_url\"\n          alt=\"creator.name\"\n          class=\"h-10 w-10 rounded-full object-cover\">\n      <img\n          v-else-if=\"isVisible(item.id)\"\n          src=\"/storage/images/Ping.png\"\n          alt=\"no profile photo, using our ping logo as a placeholder\"\n          class=\"h-10 w-10 rounded-full object-cover\">\n    </div>\n  </div>\n</template>\n<script setup>\nimport { ref } from 'vue'\nimport { useShopStore } from '@/Stores/ShopStore'\nimport { useIntersectionObserver } from '@vueuse/core'\n\nconst shopStore = useShopStore()\nimport SingleImage from '@/Components/Global/Multimedia/SingleImage.vue'\n\nconst props = defineProps({\n  item: Object,\n})\n\nconst scrollableContainer = ref(null)\nconst visibilityMap = ref({})\n\nconst isVisible = (id) => visibilityMap.value[id] ?? false\n\nconst setTargetRef = (el, id) => {\n  if (el) {\n    useIntersectionObserver(\n        el,\n        ([{ isIntersecting }]) => {\n          if (isIntersecting) {\n            visibilityMap.value[id] = true\n          }\n        },\n        {\n          root: scrollableContainer.value,\n          threshold: 0.1\n        }\n    )\n  }\n}\n\n</script>","<template>\n\n  <Head v-if=\"shopStore.selectedFavourite\" :title=\"`Contribution to ${shopStore.selectedFavourite.name}`\"/>\n  <Head v-else :title=\"`Contribute a Donation`\"/>\n\n  <div class=\"w-full lace-self-center flex flex-col gap-y-3 bg-orange-400\">\n    <div id=\"topDiv\" class=\"w-full bg-gray-800 text-gray-50 dark:bg-gray-800 dark:text-gray-50 p-5 mb-10\">\n\n      <!--            <Message v-if=\"appSettingStore.showFlashMessage\" :flash=\"$page.props.flash\"/>-->\n\n      <header class=\"flex justify-center pt-4 mt-2 mb-4\">\n        <h1 class=\"text-3xl font-semibold pb-3\">\n          <span v-if=\"shopStore.selectedFavourite.name\" class=\"capitalize\">Contribute to {{\n              shopStore.selectedFavourite.name\n            }}</span>\n          <span v-else>Contribute to notTV</span>\n        </h1>\n      </header>\n\n\n      <section id=\"security-assurance\">\n        <div style=\"text-align: center; margin-bottom: 20px;\">\n          <!-- Font Awesome Padlock Icon -->\n          <font-awesome-icon icon=\"fa-lock\" aria-hidden=\"true\" style=\"font-size: 24px; color: #2c3e50;\"/>\n        </div>\n        <div style=\"text-align: center; max-width: 600px; margin: auto;\">\n          <h2>Your Security, Our Priority</h2>\n          <p>We take your security seriously. All transactions are encrypted and processed through secure payment\n            gateways. Your payment information is never stored on our servers, ensuring your data remains private and\n            protected.</p>\n        </div>\n      </section>\n\n\n      <div class=\"flex flex-col justify-center items-center w-full mx-auto mt-8\">\n        <div v-if=\"shopStore.selectedFavourite.name\" class=\"flex flex-col text-center\">\n          <h2 class=\"text-2xl font-semibold text-gray-100 dark:text-gray-100\">${{ shopStore.donationAmount }} Donation\n            to</h2>\n          <div class=\"flex items-center gap-2 mt-2\">\n            <FavouriteSelectedImage :item=\"shopStore.selectedFavourite\"/>\n            <span class=\"text-xl\">{{ shopStore.selectedFavourite.name }}</span>\n          </div>\n        </div>\n        <div v-else class=\"flex flex-col\">\n          <h2 class=\"text-2xl font-semibold text-gray-100 dark:text-gray-100 mb-2\">${{ shopStore.donationAmount }}\n            Donation\n            to</h2>\n          <img :src=\"`/storage/images/logo_white.svg`\" alt=\"notTV Logo White\" class=\"w-30\">\n        </div>\n\n        <div v-if=\"!shopStore.showPaymentForm\"\n             class=\"flex flex-col w-full items-center justify-center text-center mx-auto mt-8 px-12\">\n          <h2 class=\"mt-6 mx-auto text-xl font-semibold text-white dark:text-gray-100\">Payment form is loading...</h2>\n          <span class=\"loading loading-dots loading-lg text-info\"></span>\n        </div>\n\n        <form id=\"payment-form\" class=\"w-full\" @submit.prevent=\"submit\">\n          <div id=\"link-authentication-element\" class=\"mb-2\"></div>\n          <div id=\"payment-element\" class=\"w-full\"></div>\n          <div class=\"mb-2 text-xs text-gray-300\">\n            By clicking ‘Complete Payment’, you agree to our Terms and Conditions and acknowledge our Privacy Policy.\n          </div>\n          <button id=\"submit\" class=\"h-fit bg-blue-600 hover:bg-blue-500 text-white rounded py-2 px-4\"\n                  :disabled=\"processing\">\n            <div class=\"spinner hidden\" id=\"spinner\"></div>\n            <span v-if=\"!processing && shopStore.showPaymentForm\" id=\"button-text\">Complete Payment</span>\n          </button>\n          <div id=\"payment-message\" class=\"hidden\">{{ paymentMessage }}</div>\n        </form>\n        <!--        <form id=\"payment-form\" class=\"w-full\">-->\n        <!--          <div id=\"link-authentication-element\" class=\"mb-2\">-->\n        <!--            &lt;!&ndash;Stripe.js injects the Link Authentication Element&ndash;&gt;-->\n        <!--          </div>-->\n        <!--          <div id=\"payment-element\" class=\"w-full\">-->\n        <!--            &lt;!&ndash;Stripe.js injects the Payment Element&ndash;&gt;-->\n        <!--          </div>-->\n        <!--          <div class=\"mb-2 text-xs text-gray-300\">By clicking ‘Complete Payment’, you agree to our Terms and Conditions-->\n        <!--            and acknowledge our Privacy Policy.-->\n        <!--          </div>-->\n        <!--          <button id=\"submit\"-->\n        <!--                  class=\"h-fit bg-blue-600 hover:bg-blue-500 text-white rounded py-2 px-4\"-->\n        <!--                  @click.prevent=\"submit()\">-->\n        <!--            <div class=\"spinner hidden\" id=\"spinner\"></div>-->\n        <!--            <span id=\"button-text\">Complete Payment</span>-->\n        <!--          </button>-->\n        <!--          <div id=\"payment-message\" class=\"hidden\"></div>-->\n        <!--        </form>-->\n\n        <div>Your payment is secured with SSL encryption.</div>\n\n        <!-- {/* Show any error or success messages */}-->\n        <div v-if=\"error\" id=\"payment-error\" class=\"text-red-600 font-semibold w-full my-2\"> {{ error }}</div>\n        <!--        <div v-if=\"message\" id=\"payment-message\" class=\"mt-1 text-white\">{{ message }}</div>-->\n      </div>\n\n    </div>\n  </div>\n\n</template>\n\n<script setup>\nimport { ref, onMounted, watch } from 'vue'\nimport { usePageSetup } from '@/Utilities/PageSetup'\nimport { useUserStore } from '@/Stores/UserStore'\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\nimport { useNotificationStore } from '@/Stores/NotificationStore'\nimport { useShopStore } from '@/Stores/ShopStore'\nimport { useForm } from '@inertiajs/vue3'\n// import { loadStripe } from '@stripe/stripe-js'\nimport FavouriteSelectedImage from '@/Components/Pages/Shop/FavouriteSelectedImage.vue'\n\nusePageSetup('shop/subscribe')\n\nconst userStore = useUserStore()\nconst appSettingStore = useAppSettingStore()\nconst notificationStore = useNotificationStore()\nconst shopStore = useShopStore()\n\nlet props = defineProps({\n  user: Object,\n  error: String,\n  intent: Object,\n  elements: {},\n})\n\nconst paymentMessage = ref('')\nconst processing = ref(false)\nlet stripe\nlet elements\n\n\n\n// const showPaymentForm = () => {\n//\n// }\n\nconst initialize = () => {\n  const clientSecret = props.intent.client_secret\n  const appearance = {\n    theme: 'stripe',\n    variables: {\n      colorPrimary: '#0570de',\n      colorBackground: '#ffffff',\n      colorBackgroundText: '#ffffff',\n      colorText: '#222222',\n      colorDanger: '#df1b41',\n      fontFamily: 'Ideal Sans, system-ui, sans-serif',\n      spacingUnit: '4px',\n    },\n    rules: {\n      '.Label': {\n        color: 'var(--colorBackgroundText)',\n      },\n    },\n  }\n\n  elements = stripe.elements({appearance, clientSecret})\n\n  const paymentElementOptions = {\n    layout: 'tabs',\n  }\n\n  const paymentElement = elements.create('payment', paymentElementOptions)\n  paymentElement.mount('#payment-element')\n  document.getElementById('payment-form').style.display = 'block'\n  // shopStore.showPaymentForm = true\n\n}\n\n\nconst createPaymentIntent = async () => {\n  try {\n    const amountInCents = shopStore.donationAmount * 100 // Convert to cents\n    const {data} = await axios.post('/shop/payment-intent', {\n      amount: amountInCents,\n      favourite_item_id: shopStore.selectedFavourite.id, // Include favourite item\n      favourite_item_name: shopStore.selectedFavourite.name, // Include favourite item\n      favourite_item_type: shopStore.selectedFavouriteType, // Include favourite item\n    })\n    return data.clientSecret\n  } catch (error) {\n    console.error('Error creating payment intent:', error)\n    showMessage('Failed to create payment intent. Please try again.')\n    setLoading(false)\n    throw error\n  }\n}\n\n// Watch for changes in userStore.hasConsentedToCookies\nwatch(\n    () => userStore.hasConsentedToCookies,\n    async (newVal) => {\n      appSettingStore.showCookieBanner = !newVal;\n      if (newVal) {\n        // Dynamically import Stripe library only after consent is given\n        const { loadStripe } = await import('@stripe/stripe-js');\n        const stripePromise = loadStripe(process.env.MIX_STRIPE_KEY);\n        stripe = await stripePromise;\n        initialize();\n        shopStore.showPaymentForm = true\n      }\n    },\n    { immediate: false } // Do not execute immediately on load\n);\n\n\n\nonMounted(async () => {\n      if (!userStore.hasConsentedToCookies) {\n        appSettingStore.showCookieBanner = true\n      } else {\n        // Dynamically import Stripe library if user has already consented\n        const { loadStripe } = await import('@stripe/stripe-js');\n        const stripePromise = loadStripe(process.env.MIX_STRIPE_KEY);\n        stripe = await stripePromise;\n        initialize();\n        shopStore.showPaymentForm = true;\n      }\n      shopStore.customer = props.user\n    },\n)\n\n\nconst submit = async () => {\n  setLoading(true)\n  paymentMessage.value = ''\n\n  try {\n    // Call elements.submit() to gather all required fields\n    const {error: submitError} = await elements.submit()\n    if (submitError) {\n      showMessage(submitError.message)\n      setLoading(false)\n      return\n    }\n\n    const clientSecret = await createPaymentIntent()\n\n    const {error, paymentIntent} = await stripe.confirmPayment({\n      elements,\n      confirmParams: {\n        return_url: 'https://not.tv/contribute/donation_success', // Replace with your success URL\n        // receipt_email: props.user.email,\n        receipt_email: 'travis@not.tv',\n        payment_method_data: {\n          billing_details: {\n            name: props.user.name, // Provide the customer name\n          },\n        },\n      },\n      clientSecret,\n    })\n\n    if (error) {\n      if (error.type === 'card_error' || error.type === 'validation_error') {\n        notificationStore.setGeneralServiceNotification(error.code, error.message)\n        showMessage(error.message)\n      } else {\n        showMessage('An unexpected error occurred.')\n      }\n      setLoading(false)\n    } else {\n      let form = useForm({\n        paymentMethod: paymentIntent.payment_method,\n        plan: shopStore.upgradeStripeId,\n      })\n\n      form.post('/contribute/donation_success', {\n        onFinish: () => {\n          setLoading(false)\n        },\n      })\n    }\n  } catch (error) {\n    console.error('Error in payment process:', error)\n  }\n}\n\n\n// const options = {\n//   mode: 'setup',\n//   currency: 'cad',\n// }\n//\n// let stripe\n// let elements\n\n// const paymentMessage = ref('');\n// const processing = ref(false);\n// const stripePromise = loadStripe(process.env.MIX_STRIPE_KEY);\n\n// onMounted(async () => {\n//   shopStore.customer = props.user\n//\n//   stripe = await loadStripe(StripeAPIKey)\n//\n//   initialize()\n//\n//   showPaymentForm()\n//\n//   document\n//       .querySelector('#payment-form')\n//   // .addEventListener(\"submit\", handleSubmit);\n//\n//\n// })\n\n// function showPaymentForm() {\n//   shopStore.showPaymentForm = true\n// }\n\n// function initialize() {\n//\n//   const clientSecret = props.intent.client_secret\n//   const appearance = {\n//     theme: 'stripe',\n//     variables: {\n//       colorPrimary: '#0570de',\n//       colorBackground: '#ffffff',\n//       colorBackgroundText: '#ffffff',\n//       colorText: '#222222',\n//       colorDanger: '#df1b41',\n//       fontFamily: 'Ideal Sans, system-ui, sans-serif',\n//       spacingUnit: '4px',\n//     },\n//     rules: {\n//       '.Label': {\n//         color: 'var(--colorBackgroundText)',\n//       },\n//     },\n//   }\n//\n//   elements = stripe.elements({appearance, clientSecret})\n\n// this is for linkPayments\n// const linkAuthenticationElement = elements.create(\"linkAuthentication\");\n// linkAuthenticationElement.mount(\"#link-authentication-element\");\n//\n// linkAuthenticationElement.on('change', (event) => {\n//     emailAddress = event.value.email;\n// });\n\n//   const paymentElementOptions = {\n//     layout: 'tabs',\n//   }\n//\n//   const paymentElement = elements.create('payment', paymentElementOptions)\n//   paymentElement.mount('#payment-element')\n//\n// }\n\n// async function submit() {\n//   if (shopStore.upgradeStripeId === '' || null) {\n//     alert('Please select a subscription.')\n//     return\n//   }\n//   setLoading(true)\n//\n//   const {setupIntent, error} = await stripe.confirmSetup({\n//     elements,\n//     confirmParams: {\n//       // Make sure to change this to your payment completion page\n//       return_url: 'https://not.tv/subscription_success',\n//       // receipt_email: emailAddress,\n//     },\n//     redirect: 'if_required',\n//\n//\n//   })\n\n// This point will only be reached if there is an immediate error when\n// confirming the payment. Otherwise, your customer will be redirected to\n// your `return_url`. For some payment methods like iDEAL, your customer will\n// be redirected to an intermediate site first to authorize the payment, then\n// redirected to the `return_url`.\n\n// if (error) {\n//   if (error.type === 'card_error' || error.type === 'validation_error') {\n//     showMessage(error.message)\n//   } else {\n//     showMessage('An unexpected error occurred.')\n//     setLoading(false)\n//   }\n// } else {\n//   // console.log(setupIntent)\n//   let form = useForm({\n//     paymentMethod: setupIntent.payment_method,\n//     plan: shopStore.upgradeStripeId,\n//   })\n//\n//   //Submit the form\n//   form.post('/contribute/subscription')\n//\n// }\n// }\n\n\n// ------- UI helpers -------\n\nfunction showMessage(messageText) {\n\n  const messageContainer = document.querySelector('#payment-message')\n\n  messageContainer.classList.remove('hidden')\n  messageContainer.textContent = messageText\n\n  setTimeout(function () {\n    messageContainer.classList.add('hidden')\n    messageContainer.textContent = ''\n  }, 4000)\n}\n\n// Show a spinner on payment submission\nfunction setLoading(isLoading) {\n  if (isLoading) {\n    // Disable the button and show a spinner\n    document.querySelector('#submit').disabled = true\n    document.querySelector('#spinner').classList.remove('hidden')\n    document.querySelector('#button-text').classList.add('hidden')\n  } else {\n    document.querySelector('#submit').disabled = false\n    document.querySelector('#spinner').classList.add('hidden')\n    document.querySelector('#button-text').classList.remove('hidden')\n  }\n}\n\n</script>\n\n<style scoped>\n\n/* Variables */\n* {\n  box-sizing: border-box;\n}\n\nbody {\n  font-family: -apple-system, BlinkMacSystemFont, sans-serif;\n  font-size: 16px;\n  -webkit-font-smoothing: antialiased;\n  display: flex;\n  justify-content: center;\n  align-content: center;\n  height: 100vh;\n  width: 100vw;\n}\n\nform {\n  width: 30vw;\n  min-width: 500px;\n  align-self: center;\n  box-shadow: 0px 0px 0px 0.5px rgba(50, 50, 93, 0.1),\n  0px 2px 5px 0px rgba(50, 50, 93, 0.1), 0px 1px 1.5px 0px rgba(0, 0, 0, 0.07);\n  border-radius: 7px;\n  padding: 40px;\n}\n\n.hidden {\n  display: none;\n}\n\n#payment-message {\n  color: rgb(105, 115, 134);\n  font-size: 16px;\n  line-height: 20px;\n  padding-top: 12px;\n  text-align: center;\n}\n\n#payment-element {\n  margin-bottom: 24px;\n}\n\n/* Buttons and links */\nbutton {\n  background: #5469d4;\n  font-family: Arial, sans-serif;\n  color: #ffffff;\n  border-radius: 4px;\n  border: 0;\n  padding: 12px 16px;\n  font-size: 16px;\n  font-weight: 600;\n  cursor: pointer;\n  display: block;\n  transition: all 0.2s ease;\n  box-shadow: 0px 4px 5.5px 0px rgba(0, 0, 0, 0.07);\n  width: 100%;\n}\n\nbutton:hover {\n  filter: contrast(115%);\n}\n\nbutton:disabled {\n  opacity: 0.5;\n  cursor: default;\n}\n\n/* spinner/processing state, errors */\n.spinner,\n.spinner:before,\n.spinner:after {\n  border-radius: 50%;\n}\n\n.spinner {\n  color: #ffffff;\n  font-size: 22px;\n  text-indent: -99999px;\n  margin: 0px auto;\n  position: relative;\n  width: 20px;\n  height: 20px;\n  box-shadow: inset 0 0 0 2px;\n  -webkit-transform: translateZ(0);\n  -ms-transform: translateZ(0);\n  transform: translateZ(0);\n}\n\n.spinner:before,\n.spinner:after {\n  position: absolute;\n  content: \"\";\n}\n\n.spinner:before {\n  width: 10.4px;\n  height: 20.4px;\n  background: #5469d4;\n  border-radius: 20.4px 0 0 20.4px;\n  top: -0.2px;\n  left: -0.2px;\n  -webkit-transform-origin: 10.4px 10.2px;\n  transform-origin: 10.4px 10.2px;\n  -webkit-animation: loading 2s infinite ease 1.5s;\n  animation: loading 2s infinite ease 1.5s;\n}\n\n.spinner:after {\n  width: 10.4px;\n  height: 10.2px;\n  background: #5469d4;\n  border-radius: 0 10.2px 10.2px 0;\n  top: -0.1px;\n  left: 10.2px;\n  -webkit-transform-origin: 0px 10.2px;\n  transform-origin: 0px 10.2px;\n  -webkit-animation: loading 2s infinite ease;\n  animation: loading 2s infinite ease;\n}\n\n@-webkit-keyframes loading {\n  0% {\n    -webkit-transform: rotate(0deg);\n    transform: rotate(0deg);\n  }\n  100% {\n    -webkit-transform: rotate(360deg);\n    transform: rotate(360deg);\n  }\n}\n\n@keyframes loading {\n  0% {\n    -webkit-transform: rotate(0deg);\n    transform: rotate(0deg);\n  }\n  100% {\n    -webkit-transform: rotate(360deg);\n    transform: rotate(360deg);\n  }\n}\n\n@media only screen and (max-width: 600px) {\n  form {\n    width: 80vw;\n    min-width: initial;\n  }\n}\n\n\n</style>\n\n\n\n\n\n","import api from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-10.use[1]!../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-10.use[2]!../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./OneTimeContribution.vue?vue&type=style&index=0&id=438bb899&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./OneTimeContribution.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./OneTimeContribution.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./OneTimeContribution.vue?vue&type=style&index=0&id=438bb899&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-438bb899\"]])\n\nexport default __exports__"],"names":["usePageSetup","pageName","userStore","useUserStore","appSettingStore","useAppSettingStore","videoPlayerStore","useVideoPlayerStore","currentPage","showFlashMessage","pageIsHidden","isMobile","window","innerWidth","fullPage","ott","showOttButtons","makeVideoTopRight","pageReload","pageWasReloaded","location","reload","router","on","event","search","shouldScrollToTop","requestAnimationFrame","topDiv","document","getElementById","scrollIntoView","behavior","scrollTo","setPrevUrl","noLayout","watch","isSmallScreen","newValue","immediate","___CSS_LOADER_EXPORT___","push","module","id","shopStore","useShopStore","scrollableContainer","ref","visibilityMap","isVisible","_visibilityMap$value$","value","el","useIntersectionObserver","_ref","_slicedToArray","isIntersecting","root","threshold","stripe","elements","notificationStore","useNotificationStore","props","__props","paymentMessage","processing","initialize","clientSecret","intent","client_secret","appearance","theme","variables","colorPrimary","colorBackground","colorBackgroundText","colorText","colorDanger","fontFamily","spacingUnit","rules","color","create","layout","mount","style","display","createPaymentIntent","_asyncToGenerator","_regeneratorRuntime","mark","_callee","amountInCents","_yield$axios$post","data","wrap","_context","prev","next","donationAmount","axios","post","amount","favourite_item_id","selectedFavourite","favourite_item_name","name","favourite_item_type","selectedFavouriteType","sent","abrupt","t0","console","error","showMessage","setLoading","stop","apply","arguments","hasConsentedToCookies","_ref2","_callee2","newVal","_yield$import","loadStripe","stripePromise","_context2","showCookieBanner","process","showPaymentForm","_x","onMounted","_callee3","_yield$import2","_context3","customer","user","submit","_ref4","_callee4","_yield$elements$submi","submitError","_yield$stripe$confirm","paymentIntent","_context4","message","confirmPayment","confirmParams","return_url","receipt_email","payment_method_data","billing_details","type","setGeneralServiceNotification","code","useForm","paymentMethod","payment_method","plan","upgradeStripeId","onFinish","messageText","messageContainer","querySelector","classList","remove","textContent","setTimeout","add","isLoading","disabled","options","locals"],"sourceRoot":""}
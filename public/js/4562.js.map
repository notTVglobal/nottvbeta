{"version":3,"file":"js/4562.js","mappings":"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","sources":["webpack:///./resources/js/Stores/GoLiveStore.js","webpack:///./resources/js/Stores/MistStore.js","webpack:///./resources/js/Stores/VideoAuxPlayerStore.js","webpack:///./resources/js/Utilities/PageSetup.js","webpack:///./resources/js/Components/Global/GoLive/GoLive.vue?d4e9","webpack:///./resources/js/Components/Global/Buttons/CancelButton.vue?b7c6","webpack:///./resources/js/Components/Global/Buttons/CancelButton.vue","webpack:///./resources/js/Components/Global/VideoPlayer/VideoJs/VideoJsAux.vue?cfd4","webpack:///./resources/js/Components/Global/VideoPlayer/VideoJs/VideoJsAux.vue","webpack:///./resources/js/Components/Global/MistStreams/MistStreamPushDestinationForm.vue?5647","webpack:///./resources/js/Components/Global/MistStreams/MistStreamPushDestinationForm.vue","webpack:///./resources/js/Components/Global/GoLive/GoLive.vue","webpack:///./resources/js/Components/Global/GoLive/GoLive.vue?11fc","webpack:///./resources/js/Components/Global/GoLive/GoLive.vue?3856","webpack:///./resources/js/Components/Global/Modals/Messages.vue?dfe9","webpack:///./resources/js/Components/Global/Modals/Messages.vue","webpack:///./resources/js/Components/Global/Modals/PopUpModal.vue","webpack:///./resources/js/Components/Pages/ShowEpisodes/Elements/ManageShowEpisodeNoticeModals.vue","webpack:///./resources/js/Pages/GoLive.vue?e1d2","webpack:///./resources/js/Pages/GoLive.vue"],"sourcesContent":["import { defineStore } from 'pinia'\nimport { useVideoPlayerStore } from '@/Stores/VideoPlayerStore'\nimport videojs from 'video.js'\n\nconst initialState = () => ({\n    displayEpisodeGoLiveComponent: false,\n    isEpisode: null,\n    episode: null,\n    preSelectedShowId: null,\n    selectedShowId: null,\n    // selectedShow: null, this uses the getter... set it up in the component as a computed property\n    shows: [], // Assuming you might want to store shows here too\n    streamKey: '', // Optional: Store the generated stream key if needed\n    wildcardId: '',\n    isLive: false,\n    isRecording: false,\n    streamInfo: null,\n    rtmpUri: null,\n})\n\nexport const useGoLiveStore = defineStore('goLiveStore', {\n    state: initialState,\n    actions: {\n        reset() {\n            // Reset the store to its original state (clear all data)\n            Object.assign(this, initialState())\n        },\n        async fetchShows() {\n            try {\n                const response = await axios.get('/go-live/shows') // Adjust the URL as needed\n                this.shows = response.data\n            } catch (error) {\n                console.error('Failed to fetch shows:', error)\n                // Handle error appropriately\n            }\n        },\n\n\n        // temporarily commenting this out\n        async generateStreamKey() {\n            if (!this.selectedShowId) {\n                console.error('No show selected')\n                throw new Error('No show selected') // Throw an error to be caught by the caller\n            }\n\n            try {\n                const response = await axios.post(`/go-live/shows/${this.selectedShowId}/stream-key`)\n                console.log('Stream key generated:', response.data)\n                this.streamKey = response.data.stream_key // Assuming the response includes the stream key\n                console.log('this new stream key: ' + this.streamKey)\n                console.log('response data stream key: ' + response.data.stream_key)\n                // Update goLiveStore.selectedShow.mist_stream_wildcard_id with the returned stream key\n                if (this.selectedShowId && response.data.stream_key) {\n                    this.selectedShow.mist_stream_wildcard = response.data\n                    this.selectedShow.mist_stream_wildcard_id = response.data.stream_key\n                }\n                return response.data // Return the response data\n            } catch (error) {\n                console.error('Error generating stream key:', error.response ? error.response.data : error)\n                throw error // Re-throw the error to be caught by the component\n            }\n        },\n\n        // Other actions...\n        updateAndGetStreamKey() {\n            const show = this.shows.find(show => show.id === this.selectedShowId) || null\n            const streamKey = show?.mist_stream_wildcard?.name || ' < RELOAD THIS PAGE TO GET YOUR STREAM KEY > '\n\n            // Perform the state update\n            this.streamKey = streamKey\n\n            // Return the stream key for immediate use\n            return streamKey\n        },\n\n\n\n        // async generateStreamKey() {\n        //     if (!this.selectedShowId) {\n        //         console.error(\"No show selected\");\n        //         throw new Error(\"No show selected\");\n        //     }\n        //\n        //     try {\n        //         const response = await axios.post(`/go-live/shows/${this.selectedShowId}/stream-key`);\n        //         console.log(\"Stream key generated:\", response.data);\n        //\n        //         // Find the index of the selected show in the shows array\n        //         const selectedIndex = this.shows.findIndex(show => show.id === this.selectedShowId);\n        //         if (selectedIndex !== -1) {\n        //             // Update the selected show with the new stream key information\n        //             this.shows[selectedIndex].mist_stream_wildcard = response.data;\n        //             this.shows[selectedIndex].mist_stream_wildcard_id = response.data.stream_key;\n        //         }\n        //         return response.data;\n        //     } catch (error) {\n        //         console.error(\"Error generating stream key:\", error.response ? error.response.data : error);\n        //         throw error;\n        //     }\n        // },\n\n\n        // setPreSelectedShowId(id) {\n        //     this.preSelectedShowId = id;\n        //     console.log('preSelectedShowId updated to:', this.preSelectedShowId);\n        // },\n        // Action to update selectedShowId and selectedShow based on selectedShowId\n        setSelectedShowId(showId) {\n            this.selectedShowId = showId\n            this.updateSelectedShow() // Call the method to update selectedShow based on new selectedShowId\n        },\n        // Method to find and update selectedShow based on selectedShowId\n        updateSelectedShow() {\n            this.selectedShow = this.shows.find(show => show.id === this.selectedShowId) || null\n        },\n        goLive() {\n            this.isLive = true\n        },\n        stopLive() {\n            this.isLive = false\n        },\n        startRecording() {\n            this.isRecording = true\n        },\n        stopRecording() {\n            this.isRecording = false\n        },\n        async fetchStreamInfo(streamName) {\n            try {\n                // const response = await fetch(`http://mist.nottv.io:8080/json_${encodedStreamName}.js`); // Replace with your URL\n                const response = await fetch(`/fetch-stream-info/${streamName}`) // Replace with your URL\n                if (!response.ok) throw new Error('Failed to fetch')\n                this.streamInfo = await response.json() // Store the data in serverInfo\n            } catch (error) {\n                console.error('Error fetching server info:', error)\n            }\n        },\n        async fetchRtmpUri() {\n            try {\n                const response = await fetch(`/fetch-rtmp-uri`)\n                if (!response.ok) throw new Error('Failed to fetch')\n\n                // Parse the plain text body of the response\n                // Store the RTMP URI string in a Vue data property or similar\n                this.rtmpUri = await response.text()\n            } catch (error) {\n                console.error('Error fetching RTMP URI:', error)\n            }\n        },\n        clearStreamInfo() {\n            this.streamInfo = null\n        },\n        toggleDisplayEpisodeGoLiveComponent(episode) {\n            // const videoPlayerAuxStore = useVideoAuxPlayerStore()\n            // videoPlayerAuxStore.reset()\n            this.displayEpisodeGoLiveComponent = !this.displayEpisodeGoLiveComponent\n            this.isEpisode = !!this.displayEpisodeGoLiveComponent\n            this.episode = episode\n            this.selectedShowId = this?.episode?.show_id\n\n        },\n        updateEpisode(episode) {\n            this.episode = episode\n        },\n        async reloadPlayer() {\n            const videoPlayerStore = useVideoPlayerStore; // Accessing another store\n\n            let source = null;\n            if (this.selectedShow?.mist_stream_wildcard?.name) {\n                source = this.selectedShow?.mist_stream_wildcard?.name;\n                await this.fetchStreamInfo(this.selectedShow?.mist_stream_wildcard?.name);\n            } else if (this.episode?.mist_stream_wildcard?.name) {\n                source = this.episode?.mist_stream_wildcard?.name;\n                await this.fetchStreamInfo(this.episode?.mist_stream_wildcard?.name);\n            }\n\n            let sourceUrl = videoPlayerStore.mistServerUri + 'hls/' + source + '/index.m3u8';\n            console.log('source url: ' + sourceUrl);\n            let sourceType = 'application/vnd.apple.mpegurl';\n\n            let videoJs = videojs('aux-player');\n            videoJs.src({'src': sourceUrl, 'type': sourceType});\n            // You might have other logic here as needed\n\n            console.log('reload player');\n        },\n    },\n    getters: {\n        selectedShow: (state) => {\n            const show = state.shows.find(show => show.id === state.selectedShowId) || null\n            state.streamKey = show?.mist_stream_wildcard?.name || 'Fallback value if undefined'\n            state.wildcardId = show?.mist_stream_wildcard?.id || 'Fallback value if undefined'\n            return show\n        },\n        fullRtmpUri: (state) => {\n            return state.rtmpUri ? state.rtmpUri + 'live/' : ''\n        },\n        fullUrl: (state) => {\n            // Directly construct fullRtmpUri from state\n            const fullRtmpUri = state.rtmpUri ? state.rtmpUri + 'live/' : ''\n\n            // Directly find the show based on selectedShowId to avoid using getters\n            // const show = state.shows.find(show => show.id === state.selectedShowId) || null;\n            // const streamKey = show?.mist_stream_wildcard?.name || 'Fallback value if undefined';\n\n            // Return the concatenated URL\n            return `${fullRtmpUri}${state.streamKey}`\n        },\n    },\n\n\n})\n","import { defineStore } from 'pinia';\n\nconst initialState = () => ({\n    apiRequest: [],\n    challenge: [],\n    status: [],\n    apiResponse: [],\n    apiActiveStreams: [],\n    mistUsername: [],\n    mistPassword: [],\n    mistStatus: Boolean,\n    mistDisplayPushForm: Boolean,\n    mistDisplay: String,\n    mistNewHashedPassword: [],\n    mistStreamPushDestinations: [],\n});\n\nexport const useMistStore = defineStore('mistStore', {\n    state: initialState,\n    actions: {\n        reset() {\n            // Reset the store to its original state (clear all data)\n            Object.assign(this, initialState());\n        },\n        // add additional actions here\n        async getMistStreamPushDestinations(wildcardId) {\n            // Assuming `goLiveStore.selectedShow.mist_stream_wildcard.id` holds the wildcard ID\n            // const wildcardId = goLiveStore?.selectedShow?.mist_stream_wildcard?.id\n            if (wildcardId) {\n                try {\n                    // Append the wildcard ID as a query parameter\n                    const response = await axios.get(`/mist-stream-push-destinations?wildcardId=${wildcardId}`)\n                    this.mistStreamPushDestinations = response.data // Update the reactive variable\n                } catch (error) {\n                    console.error('Failed to fetch push destinations:', error)\n                }\n            } else {\n                console.error('No wildcard ID found (getMistStreamPushDestinations)')\n            }\n        },\n        async getMistStreamPushAutoList(wildcardId) {\n            // Assuming `goLiveStore.selectedShow.mist_stream_wildcard.id` holds the wildcard ID\n            // const wildcardId = goLiveStore?.selectedShow?.mist_stream_wildcard?.id\n            if (wildcardId) {\n                try {\n                    // Append the wildcard ID as a query parameter\n                    const response = await axios.post(`/mist-stream/get-push-auto-list?wildcardId=${wildcardId}`)\n                    this.mistStreamPushDestinations = response.data // Update the reactive variable\n                } catch (error) {\n                    console.error('Failed to fetch push auto list:', error)\n                }\n            } else {\n                console.error('No wildcard ID found (getMistStreamPushAutoList)')\n            }\n        },\n        async getMistStreamPushList(wildcardId) {\n            // Assuming `goLiveStore.selectedShow.mist_stream_wildcard.id` holds the wildcard ID\n            // const wildcardId = goLiveStore?.selectedShow?.mist_stream_wildcard?.id\n            if (wildcardId) {\n                try {\n                    // Append the wildcard ID as a query parameter\n                    const response = await axios.post(`/mist-stream/get-push-list?wildcardId=${wildcardId}`)\n                    this.mistStreamPushDestinations = response.data // Update the reactive variable\n                } catch (error) {\n                    console.error('Failed to fetch push list:', error)\n                }\n            } else {\n                console.error('No wildcard ID found (getMistStreamPushList)')\n            }\n        },\n        async startPush(destinationId) {\n            console.log(`Starting push for destination ${destinationId}`)\n            const data = {destinationId}\n\n            try {\n                const response = await axios.post('/mist-stream/start-push', data, {\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                })\n\n                console.log('Push started successfully:', response.data)\n                // Update the component's state to reflect the change\n                const index = this.mistStreamPushDestinations.findIndex(destination => destination.id === destinationId)\n                if (index !== -1) {\n                    this.mistStreamPushDestinations[index].push_is_started = 1\n                }\n            } catch (error) {\n                console.error('Error starting push:', error)\n                // Handle the error appropriately in your UI\n            }\n        },\n        async stopPush(destinationId) {\n            console.log(`Stopping push for destination ${destinationId}`)\n            const data = {destinationId}\n\n            try {\n                const response = await axios.post('/mist-stream/stop-push', data, {\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                })\n\n                console.log('Push stopped successfully:', response.data)\n                // Update the component's state to reflect the change\n                const index = this.mistStreamPushDestinations.findIndex(destination => destination.id === destinationId)\n                if (index !== -1) {\n                    this.mistStreamPushDestinations[index].push_is_started = 0\n                }\n            } catch (error) {\n                console.error('Error stopping push:', error)\n                // Handle the error appropriately in your UI\n            }\n        },\n        async enableAutoPush(destinationId) {\n            const data = {\n                destinationId,\n            }\n\n            try {\n                const response = await axios.post('/mist-stream/push-auto-add', data, {\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                })\n                console.log('Auto push enabled successfully:', response.data)\n                const index = this.mistStreamPushDestinations.findIndex(destination => destination.id === destinationId)\n                if (index !== -1) {\n                    this.mistStreamPushDestinations[index].has_auto_push = 1\n                }\n            } catch (error) {\n                console.error('Error enabling auto push:', error)\n            }\n        },\n        async disableAutoPush(destinationId) {\n            console.log(`Disabling auto push for destination ${destinationId}`)\n            const data = {\n                destinationId,\n            }\n\n            try {\n                const response = await axios.post('/mist-stream/push-auto-remove', data, {\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                })\n\n                console.log('Auto push disabled successfully:', response.data)\n                const index = this.mistStreamPushDestinations.findIndex(destination => destination.id === destinationId)\n                if (index !== -1) {\n                    this.mistStreamPushDestinations[index].has_auto_push = 0\n                }\n            } catch (error) {\n                console.error('Error disabling auto push:', error)\n            }\n        },\n        async deleteDestination (destinationId) {\n            // Confirm deletion with the user before proceeding\n            if (confirm(`Are you sure you want to delete the destination with ID: ${destinationId}?`)) {\n                try {\n                    // Perform the delete operation\n                    await axios.delete(`/mist-stream-push-destinations/${destinationId}`)\n                    // Optionally, remove the item from your local state to update the UI\n                    this.mistStreamPushDestinations = this.mistStreamPushDestinations.filter(destination => destination.id !== destinationId)\n                } catch (error) {\n                    console.error(`Error deleting destination with ID: ${destinationId}`, error)\n                }\n            }\n        }\n    }\n});\n","import { defineStore } from 'pinia'\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\nimport { useStreamStore } from '@/Stores/StreamStore'\nimport { useUserStore } from '@/Stores/UserStore'\nimport { useChannelStore } from '@/Stores/ChannelStore'\nimport { useShowStore } from '@/Stores/ShowStore'\nimport { useAudioStore } from '@/Stores/AudioStore'\nimport videojs from 'video.js'\nimport { usePage } from '@inertiajs/inertia-vue3'\nimport { nextTick } from 'vue'\nimport { useNotificationStore } from '@/Stores/NotificationStore'\n\nconst initialState = () => ({\n    mistServerUri: 'https://mist.nottv.io/', // tec21: 2024-02-09, if we don't start with the address here changing channels is really slow and buggy. Address for the MistServer listed in the Admin Settings saved in AppSetting\n    player: null, // Video.js player instance\n    eventListenersAttached: false, // Track if listeners are attached\n    videoPlayerLoaded: false,\n    class: '',\n    videoContainerClass: '',\n    // ottClass: 'OttClose',\n    videoSourceIdSrc1: '',\n    videoSourceIdSrc2: '',\n    videoSourceIdSrc3: '',\n    videoSourceTypeSrc1: '',\n    videoSourceTypeSrc2: '',\n    videoSourceTypeSrc3: '',\n    firstPlayVideoSourceType: '',\n    firstPlayVideoSource: '',\n    key: '',\n    videoName: '',\n    videoSource: '',\n    videoSourceType: '',\n    videoPoster: '',\n    nextSource: '',\n    previousSource: '',\n    currentView: '',\n    currentChannelId: 0,\n    currentChannelName: '',\n    currentShow: {},\n    currentShowEpisode: {},\n    currentVideo: {},\n    hasVideo: false,\n    controls: true,\n    muted: true,\n    paused: true,\n    // videoCurrentTime: '',\n    currentTime: 0, // Current playback time in seconds\n    duration: 0, // Total video duration in seconds\n    formattedTime: '00:00 / 00:00', // Formatted time string\n    blue: false, // DO NOT REMOVE\n    videoIsYoutube: false,\n    videoUploadComplete: false,\n})\n\nexport const useVideoAuxPlayerStore = defineStore('videoAuxPlayerStore', {\n    state: initialState,\n    actions: {\n        reset() {\n            // Reset the store to its original state (clear all data)\n            Object.assign(this, initialState())\n        },\n\n        async getMistServerUri() {\n            try {\n                let response = await axios.get('/mist-server/uri')\n                this.mistServerUri = response.data\n            } catch (error) {\n                console.error(error)\n            }\n        },\n\n        // Initialize or update the player instance\n        setPlayer(playerInstance) {\n            this.player = playerInstance\n            this.initializePlayer().then(() => {\n                this.attachEventListeners() // Attach event listeners after initialization\n            }).catch(error => {\n                console.error('Error during video player initialization:', error)\n            })\n        },\n\n        // Initialize the player with necessary settings and start playback\n        async initializePlayer() {\n            if (!this.player) {\n                console.error('Video.js player is not initialized.')\n                return\n            }\n\n            await nextTick() // Ensure Vue's DOM updates are processed\n\n            // Perform any necessary audio context and node setup\n            await useAudioStore().ensureAudioContextAndNodesReady(this.player)\n\n            // Apply initial player settings\n            this.player.controls(false)\n            this.player.muted(this.muted)\n\n            // Attempt to start playback\n            this.player.ready(() => {\n                this.player.play().then(() => {\n                    console.log('Playback started successfully')\n                }).catch(error => {\n                    console.error('Error trying to play the video:', error)\n                    // Handle the error (e.g., showing a user-friendly message)\n                })\n            })\n        },\n\n        // Attach event listeners to the player\n        attachEventListeners() {\n            if (!this.player || this.eventListenersAttached) {\n                console.log('Event listeners are already attached or video player is not initialized.')\n                return\n            }\n\n            this.player.on('timeupdate', this.handleTimeUpdate)\n            this.player.on('fullscreenchange', this.handleFullscreenChange)\n            this.player.on('play', this.handlePlay)\n            this.player.on('pause', this.handlePause)\n            this.player.on('error', this.handleError)\n\n            this.eventListenersAttached = true\n            console.log('Event listeners attached.')\n        },\n\n        // Detach event listeners from the player\n        detachEventListeners() {\n            if (!this.player || !this.eventListenersAttached) {\n                console.log('Event listeners are already detached or video player is not initialized.')\n                return\n            }\n\n            useAudioStore().stopAudioLevelMonitoring()\n            this.player.off('timeupdate', this.handleTimeUpdate)\n            this.player.off('fullscreenchange', this.handleFullscreenChange)\n            this.player.off('play', this.handlePlay)\n            this.player.off('pause', this.handlePause)\n            this.player.off('error', this.handleError)\n\n            this.eventListenersAttached = false\n            console.log('Event listeners detached.')\n        },\n\n        // Dispose of the player and perform cleanup\n        disposePlayer() {\n            if (!this.player) {\n                console.error('Video player is not initialized.')\n                return\n            }\n            this.detachEventListeners() // Detach event listeners if attached\n            this.player.dispose() // Dispose of the player instance\n            this.player = null // Reset the player state\n\n            // Optionally, stop audio level monitoring if linked to the player lifecycle\n            // const audioStore = useAudioStore();\n            // audioStore.stopAudioLevelMonitoring();\n\n            console.log('Video player disposed and cleaned up.')\n        },\n\n        // New method to prepare for a new video source\n        prepareForNewVideoSource(source) {\n            console.log('Preparing for new video source')\n\n            // Example: Clear any existing channel or video-specific state\n            useChannelStore().clearChannel()\n\n            // Reset or cleanup any existing video playback, if necessary\n            // this.resetPlayback();\n\n            // Load and play the new video source\n            this.loadNewVideo(source)\n        },\n\n        resetPlayback() {\n            if (this.player) {\n                this.player.pause()\n                this.player.muted(true)\n                this.player.currentTime(0) // Optionally reset the time\n                // Further cleanup logic here, if necessary\n                this.detachEventListeners() // Detach event listeners if attached\n            }\n        },\n\n        // Event handlers\n        handleTimeUpdate() {\n            // console.log('Handling timeupdate...');\n            // Implement your logic\n            this.currentTime = this.player.currentTime()\n            this.duration = this.player.duration()\n            const progressPercentage = (this.currentTime / this.duration) * 100\n            this.formattedTime = `${this.formatDuration(this.currentTime)} / ${this.formatDuration(this.duration)}`\n\n            // Update UI elements or emit events as needed\n            // Note: Direct manipulation of the DOM or component refs from the store is not recommended\n\n        },\n        // for the handleTimeUpdate eventHandler\n        formatDuration(durationInSeconds) {\n            const hours = Math.floor(durationInSeconds / 3600)\n            const minutes = Math.floor((durationInSeconds % 3600) / 60)\n            const seconds = Math.floor(durationInSeconds % 60)\n\n            const parts = [hours, minutes, seconds].map(part => part.toString().padStart(2, '0'))\n            return parts.join(':')\n        },\n        handleFullscreenChange() {\n            console.log('Handling fullscreenchange...')\n            // Implement your logic\n            this.player?.on('fullscreenchange', () => {\n                if (this.player.isFullscreen()) {\n                    // Video is entering fullscreen mode\n                    // You can add custom behavior for entering fullscreen here if needed\n                } else {\n                    // Video is exiting fullscreen mode\n                    // Check if the video was playing before entering fullscreen\n                    if (this.player.paused() === false) {\n                        // Resume playback after exiting fullscreen\n                        this.player.play()\n                    }\n                }\n            })\n        },\n        handlePlay() {\n            console.log('Handling play...')\n            // Implement your logic\n            this.player?.on('play', () => {\n                this.paused = false\n            })\n        },\n        handlePause() {\n            console.log('Handling pause...')\n            // Implement your logic\n            this.player?.on('pause', () => {\n                this.paused = true\n            })\n        },\n        handleError() {\n            console.log('Handling error...')\n            // Implement your logic\n            this.player?.on('error', function () {\n                const error = this.player.error()\n                console.error('Video.js Error:', error.code, error.message)\n            })\n        },\n        makeBlue() {\n            // for testing. DO NOT REMOVE.\n            this.blue = true\n        },\n        // Apparently this loadFirstPlay isn't being used...\n        // loadFirstPlay() {\n        //     const {props} = usePage()\n        //     let videoJs = videojs('aux-player')\n        //     const type = props.firstPlayVideoSourceType\n        //     const src = props.firstPlayVideoSource\n        //     videoJs.ready(() => {\n        //         videoJs.src({src, type})\n        //         videoJs.play().then(() => {\n        //             console.log('Playback started successfully')\n        //         }).catch(error => {\n        //             console.error('Error trying to play the video:', error)\n        //             // Handle the error (e.g., showing a user-friendly message)\n        //         })\n        //     })\n        //     console.log(type)\n        //     console.log(src)\n        // },\n        // Toggle mute state\n        toggleMute() {\n            if (this.muted) {\n                this.unMute()\n            } else {\n                this.mute()\n            }\n        },\n        // Mute the video\n        mute() {\n            if (this.player) {\n                this.player.muted(true)\n                this.muted = true\n            }\n        },\n        // Unmute the video\n        unMute() {\n            // const audioStore = useAudioStore()\n\n            if (this.player) {\n                // Prepare audio setup for when it's unmuted\n                // audioStore.userInteractionForAudio()\n\n                // Optionally, if fadeInAudioFromMuted is a gradual process,\n                // ensure this.player.muted(false) is called within that function.\n                // audioStore.fadeInAudioFromMuted()\n\n                this.player.muted(false)\n                this.muted = false\n            }\n        },\n        togglePlay() {\n            let videoJs = videojs('aux-player')\n\n            if (this.paused) {\n                videoJs.play()\n            } else {\n                videoJs.pause()\n            }\n        },\n        load() {\n            let videoJs = videojs('aux-player')\n            videoJs.load()\n        },\n        loadNewLiveSource(source, sourceType) {\n            let videoJs = videojs('aux-player')\n            let fullSourceUrl = this.mistServerUri + '/hls/' + source + '/index.m3u8'\n            videoJs.src({'src': fullSourceUrl, 'type': sourceType});\n            videoJs.play()\n        },\n        pause() {\n            let videoJs = videojs('aux-player')\n            videoJs.controls(false)\n            videoJs.pause()\n            this.paused = true\n        },\n        play() {\n            let videoJs = videojs('aux-player')\n\n            videoJs.play()\n            videoJs.controls(false)\n            this.paused = false\n        },\n        // next not built yet\n        next() {\n            let videoJs = videojs('aux-player')\n            videoJs.controls(false)\n            videoJs.src(this.nextSource)\n        },\n        // back not built yet\n        back() {\n            let videoJs = videojs('aux-player')\n            videoJs.controls(false)\n            videoJs.src(this.previousSource)\n        },\n        fullscreen() {\n            let videoJs = videojs('aux-player')\n            videoJs.controls(false)\n            // videoJs.fullscreen(this.previousSource)\n            videoJs.requestFullscreen()\n        },\n        getVideoCurrentTime() {\n            let videoJs = videojs('aux-player')\n            videoJs.controls(false)\n            this.videoCurrentTime = videoJs.currentTime\n        },\n\n\n        // This playNewVideo was created to access the audioContext\n        // which our audio compressor uses. This is new as of 2/2/2024\n        // ~ tec21\n\n        // playNewVideo(source) {\n        //     useChannelStore().clearChannel() // Reset or clear channel store\n        //     const videoJs = videojs('aux-player')\n        //     let videoSrc, videoSourceType\n        //     // Determine the source type and construct the source URL if necessary\n        //     if (source.mediaType === 'externalVideo') {\n        //         videoSrc = source.video_url // Direct URL to the video\n        //         videoSourceType = source.type // MIME type, e.g., 'video/youtube', 'video/mp4'\n        //     } else {\n        //         // Construct file path for internal videos\n        //         videoSrc = `${source.cdn_endpoint}${source.cloud_folder}${source.folder}/${source.file_name}`\n        //         videoSourceType = source.type // MIME type, typically 'video/mp4' for file-based sources\n        //     }\n        //     this.resumeAudioContextIfNeeded()\n        //     videoJs.src({src: videoSrc, type: videoSourceType})\n        //     videoJs.muted(false)\n        // },\n\n        // getSourceDetails(source) {\n        //     let videoSrc = source.video_url; // Directly access the video URL\n        //\n        //     // Default to 'video/mp4' if type is falsy ('', null, undefined, etc.)\n        //     let videoSourceType = source.type || 'video/mp4'\n        //\n        //     // Determine the mediaType and construct the source URL if necessary\n        //     if (source.mediaType === 'externalVideo') {\n        //         videoSrc = source.video_url // Direct URL to the video\n        //     } else {\n        //         // Internal video: construct the path, ensuring the file name is encoded\n        //         let encodedFileName = encodeURIComponent(source.file_name);\n        //         console.log(encodedFileName)\n        //         videoSrc = `${source.cdn_endpoint}${source.cloud_folder}${source.folder}/${encodedFileName}`\n        //     }\n        //     // Logic to determine videoSrc and videoSourceType\n        //     console.log(`Video Source: ${videoSrc}, Type: ${videoSourceType}`);\n        //     return { videoSrc, videoSourceType } // Return as an object\n        // },\n\n\n        getSourceDetails(source) {\n            let videoSrc, videoSourceType\n\n            console.log('getSourceDetails called with source:', source);\n\n            // Default to 'video/mp4' if type is not specified or is empty\n            videoSourceType = source.type || 'video/mp4'\n            console.log(`Determined Video Source Type: ${videoSourceType}`);\n\n            if (source.mediaType === 'externalVideo') {\n                // For external videos, use the URL as provided without encoding\n                videoSrc = source.video_url\n                console.log('Using external video source:', videoSrc);\n            } else {\n                console.log('CDN Endpoint:', source.cdn_endpoint);\n                console.log('Cloud Folder:', source.cloud_folder);\n                console.log('Folder:', source.folder);\n                console.log('File Name:', source.file_name);\n                // For internal videos, construct the URL from its components\n                // Here, we assume the cdn_endpoint, cloud_folder, and folder are correctly formatted\n                // and do not require encoding. Only the file_name might need encoding.\n                const basePath = `${source.cdn_endpoint}${source.cloud_folder}${source.folder}/`\n                // const encodedFileName = encodeURIComponent(source.file_name);\n                const fileName = source.file_name\n                videoSrc = basePath + fileName\n                console.log('Constructed internal video source:', videoSrc);\n                // If your server or CDN is configured to handle spaces in URLs without %20 encoding\n                // or if the original working URLs did not use standard URL encoding,\n                // you might adjust the encoding strategy here.\n                // For example, to replace spaces with %20 but leave other characters as-is:\n                // const fileNameForUrl = source.file_name.replace(/ /g, '%20');\n                // videoSrc = basePath + fileNameForUrl;\n            }\n\n            console.log(`Final Constructed Video Source: ${videoSrc}, Type: ${videoSourceType}`);\n            return {videoSrc, videoSourceType}\n        },\n\n\n        loadNewVideo(source) {\n            try {\n                let videoJs = videojs('aux-player');\n                console.log('LOAD NEW VIDEO');\n                const audioStore = useAudioStore();\n                // Correctly destructure the returned object to get videoSrc and videoSourceType\n                const {videoSrc, videoSourceType} = this.getSourceDetails(source);\n\n                // Example: Stopping and cleaning up the current video and audio setup\n                if (videoJs) {\n                    videoJs.src({'src': videoSrc, 'type': videoSourceType});\n\n                    videoJs.ready(() => {\n                        // ensureAudioContextAndNodesReady does the following:\n                        // 1. Resumes AudioContext if suspended.\n                        // 2. (Re)connects MediaElementSource from the video element to AudioContext.\n                        audioStore.deferAudioSetup = false;\n                        audioStore.ensureAudioContextAndNodesReady(videoJs).then(() => {\n                            // Only attempt to play the video after ensuring the AudioContext is ready\n                            videoJs.play().catch(error => {\n                                useNotificationStore().setGeneralServiceNotification('Error', 'Playback initiation error: ' + error)\n                                console.error('Playback initiation error: ', error);\n                            });\n\n                            // Consider toggling mute based on the user's preference or previous state\n                            videoJs.muted(false);\n                            this.muted = false;\n                        });\n                    });\n                }\n            } catch (error) {\n                // Log the error or perform any other error handling\n                useNotificationStore().setGeneralServiceNotification('Error', 'Error loading new video: ' + error)\n                console.error('Error loading new video: ', error);\n            }\n        },\n\n        // loadNewVideo(source) {\n        //     console.log('LOAD NEW VIDEO TTTTTTTTTTTTTTTTTTTTTTTTTS');\n        //     console.log('LOAD NEW VIDEO initiated with source:', source);\n        //     const audioStore = useAudioStore();\n        //     this.unMute();\n        //     // Destructure the returned object to get videoSrc and videoSourceType\n        //     const { videoSrc, videoSourceType } = this.getSourceDetails(source);\n        //     console.log(`Video source details received: Src - ${videoSrc}, Type - ${videoSourceType}`);\n        //\n        //     // Ensure you're using the same player instance (`videoJs` in this context) for consistency\n        //     let videoJs = videojs('aux-player'); // Ensure this ID matches your video player element\n        //     console.log('Video.js player instance created or retrieved.');\n        //\n        //     // Stop and clean up the current video and audio setup if necessary\n        //     videoJs.ready(() => {\n        //         console.log('Video.js player is ready.');\n        //         videoJs.src({ 'src': videoSrc, 'type': videoSourceType });\n        //         console.log(`Video source set: ${videoSrc} of type ${videoSourceType}`);\n        //\n        //         // Ensure AudioContext and nodes are ready\n        //         audioStore.ensureAudioContextAndNodesReady(videoJs).then(() => {\n        //             console.log('Audio context and nodes are ready. Attempting to play video.');\n        //\n        //             videoJs.play().then(() => {\n        //                 console.log('Video playback started successfully.');\n        //             }).catch(error => {\n        //                 console.error('Playback initiation error:', error);\n        //             });\n        //             // Attempt to play the video after ensuring the AudioContext is ready\n        //             // videoJs.play().catch(error => {\n        //             //     console.error('Playback initiation error:', error);\n        //             // });\n        //\n        //             // Apply the unMute logic from loadMistStreamVideo to ensure audio is correctly configured\n        //             this.unMute();\n        //             console.log('Audio unmuted.');\n        //             this.paused = false;\n        //             console.log('Paused flag set to false.');\n        //         }).catch(error => {\n        //             console.error('Error ensuring audio context and nodes are ready:', error);\n        //         });\n        //     });\n        // },\n\n        playNewVideo() {\n            console.log('PLAY NEW VIDEO')\n            if (this.player) {\n                // Wait for the video to be ready before playing\n                this.player.ready(() => {\n                    this.player.play()\n                    // Assuming you want to unmute here; check if this aligns with user interaction policies\n                    this.player.muted(false)\n                    this.muted = false\n                })\n            }\n        },\n\n\n// load video from different types of sources:\n// Url\n// YouTube\n// EmbedCode\n// Mist\n// File\n        loadNewSourceFromYouTube(source) {\n            this.videoIsYoutube = true\n            useChannelStore().clearChannel()\n            let videoJs = videojs('aux-player')\n            this.videoSource = source\n            this.videoSourceType = 'video/youtube'\n            videoJs.src({'src': this.videoSource, 'type': this.videoSourceType})\n            videoJs.controls(false)\n            this.unMute()\n            this.paused = false\n        },\n        loadNewLiveSourceFromRumble(source) {\n            this.videoIsYoutube = true\n            useChannelStore().clearChannel()\n            let videoJs = videojs('aux-player')\n            this.videoSource = source\n            this.videoSourceType = 'application/x-mpegURL'\n            videoJs.src({'src': this.videoSource, 'type': this.videoSourceType})\n            videoJs.controls(false)\n            this.unMute()\n            this.paused = false\n        },\n        loadNewSourceFromUrl(source) {\n            try {\n                this.videoIsYoutube = false;\n                useChannelStore().clearChannel();\n                let videoJs = videojs('aux-player');\n\n                if (!source.video_url || !source.type) {\n                    useNotificationStore().setGeneralServiceNotification('Error', 'Invalid video source.')\n                    throw new Error(\"Invalid video source.\");\n                }\n\n                this.videoSource = source.video_url;\n                this.videoSourceType = source.type;\n                videoJs.src({'src': source.video_url, 'type': source.type});\n\n                this.unMute();\n                this.paused = false;\n            } catch (error) {\n                useNotificationStore().setGeneralServiceNotification('Error', 'Failed to load new source: ' + error)\n                console.error(\"Failed to load new source:\", error);\n                throw error; // Re-throw the error to be caught by the caller\n            }\n        },\n        loadNewSourceFromMist(source) {\n            this.videoIsYoutube = false\n            let videoJs = videojs('aux-player')\n            let filePath = 'https://mist.not.tv/hls/'\n            this.videoSource = filePath + source + '/index.m3u8'\n            this.videoSourceType = 'application/x-mpegURL'\n            videoJs.src({'src': this.videoSource, 'type': this.videoSourceType})\n            this.unMute()\n            this.paused = false\n        },\n        loadNewSourceFromFile(source) {\n            this.videoIsYoutube = false\n            useChannelStore().clearChannel()\n            let videoJs = videojs('aux-player')\n            let filePath = source.cdn_endpoint + source.cloud_folder + source.folder + '/'\n            this.videoSource = source.file_name\n            this.videoSourceType = source.type\n            videoJs.src({'src': filePath + this.videoSource, 'type': this.videoSourceType})\n            this.unMute()\n            this.paused = false\n        },\n\n        // The new load video functions (2024-02-09 tec21 and ChatGPT)\n        loadExternalSourceVideo() {\n\n        },\n        loadPlaylistVideos() {\n\n        },\n        async loadMistStreamVideo(mistStream) {\n            // console.log('Loading Mist Stream Video for:', mistStream.name); // Log which Mist Stream is being loaded\n            // This mistServerUri comes from appSettings\n            if (!this.mistServerUri) {\n                console.log('Mist Server URI not set, fetching...') // Log fetching attempt\n                await this.getMistServerUri()\n            }\n            if (this.mistServerUri) {\n                // console.log('Mist Server URI:', this.mistServerUri); // Log the URI to confirm it's fetched\n                let basePath = this.mistServerUri\n                this.videoSource = basePath + 'hls/' + mistStream.name + '/index.m3u8'\n                // console.log('Video Source Set To:', this.videoSource); // Log the final video source\n\n                this.videoSourceType = 'application/vnd.apple.mpegURL'\n                // console.log('Setting player source to:', this.videoSource, 'of type:', this.videoSourceType); // Log the source setting\n                let videoJs = videojs('aux-player')\n                videoJs.src({'src': this.videoSource, 'type': this.videoSourceType})\n                this.unMute()\n                this.paused = false\n            } else {\n                console.error('Mist Server URI is still not set after fetching.')\n            }\n            // let basePath = this.mistServerUri\n            // this.videoSource = basePath + 'hls/' + mistStream.name + '/index.m3u8'\n            // this.videoSourceType = \"application/vnd.apple.mpegURL\"\n            // this.player.src({'src': this.videoSource, 'type': this.videoSourceType})\n            // this.unMute()\n            // this.paused = false\n        },\n        async loadVideoFromFile(video) {\n            // console.log('Loading Mist Stream Video for:', mistStream.name); // Log which Mist Stream is being loaded\n            // This mistServerUri comes from appSettings\n            // if (!this.mistServerUri) {\n            //     console.log('Mist Server URI not set, fetching...') // Log fetching attempt\n            //     await this.getMistServerUri()\n            // }\n            // if (this.mistServerUri) {\n                // console.log('Mist Server URI:', this.mistServerUri); // Log the URI to confirm it's fetched\n                // let basePath = this.mistServerUri\n                // this.videoSource = basePath + 'hls/' + video.name + '/index.m3u8'\n                // console.log('Video Source Set To:', this.videoSource); // Log the final video source\n\n            // this.videoSourceType = 'video/mp4'\n            console.log('Video Source Type:', video.type);\n            console.log('Video URL:', video.video_url);\n            console.log('CDN Endpoint:', video.cdn_endpoint);\n            console.log('Cloud Folder:', video.cloud_folder);\n            console.log('Folder:', video.folder);\n            console.log('File Name:', video.file_name);\n\n            let videoSource = video.cdn_endpoint + video.cloud_folder + video.folder + '/' + video.file_name\n                // console.log('Setting player source to:', this.videoSource, 'of type:', this.videoSourceType); // Log the source setting\n                let videoJs = videojs('aux-player')\n                videoJs.src({'src': videoSource, 'type': video.type})\n                this.unMute()\n                this.paused = false\n            // } else {\n            //     console.error('Mist Server URI is still not set after fetching.')\n            // }\n            // let basePath = this.mistServerUri\n            // this.videoSource = basePath + 'hls/' + mistStream.name + '/index.m3u8'\n            // this.videoSourceType = \"application/vnd.apple.mpegURL\"\n            // this.player.src({'src': this.videoSource, 'type': this.videoSourceType})\n            // this.unMute()\n            // this.paused = false\n        },\n\n\n        setNowPlayingInfoVideoFile(source) {\n            this.nowPlayingType = 'Video File'\n            this.nowPlayingName = source.file_name\n            useStreamStore().currentChannel = 'On Demand'\n        },\n        setNowPlayingInfoShow(show, episode) {\n            this.clearNowPlayingInfo()\n            const showStore = useShowStore()\n\n            if (show.firstPlayVideo) {\n                showStore.setName(show.firstPlayVideo.name)\n                showStore.setEpisodeUrl(`/shows/${show.slug}/episode/${source.firstPlayVideo.slug}`)\n            } else if (episode) {\n                showStore.setName(show.name)\n                showStore.setUrl(`/shows/${show.slug}`)\n                showStore.setEpisodeName(episode.name)\n                showStore.setEpisodeUrl(`/shows/${show.slug}/episode/${episode.slug}`)\n            } else {\n                showStore.setName(show.name)\n                showStore.setUrl(`/shows/${show.slug}`)\n            }\n        },\n// change video size/position and page layout\n        makeVideoPiP() {\n            // const appSettingStore = useAppSettingStore();\n            // const userStore = useUserStore();\n            //\n            // if (userStore.isMobile) {\n            //     let videoJs = videojs('aux-player')\n            //     videoJs.controls(false)\n            //     if(this.fullPage) {\n            //         this.class = 'pipVideoClassFullPage'\n            //         this.videoContainerClass = 'pipVideoContainerFullPage'\n            //     } else {\n            //         this.class = 'pipVideoClassTopRight'\n            //         this.videoContainerClass = 'pipVideoContainerTopRight'\n            //     }\n            //     appSettingStore.togglePipChatMode()\n            // }\n        },\n        makeVideoFullPage() {\n            const appSettingStore = useAppSettingStore()\n            const userStore = useUserStore()\n\n            // this.fullPage = true; // to be deleted and replaced by appSettingStore.fullPage\n            appSettingStore.fullPage = true\n            // userStore.hidePage = true // to be deleted and replaced by appSettingStore.hidePage\n            appSettingStore.hidePage = true\n            appSettingStore.ott = 0\n\n            this.videoContainerClass = 'fullPageVideoContainer'\n            this.class = 'fullPageVideoClass'\n            this.controls = !userStore.isMobile\n        },\n        makeVideoTopRight() {\n            const appSettingStore = useAppSettingStore()\n\n            // this.fullPage = false // to be deleted and replaced by appSettingStore.fullPage\n            appSettingStore.fullPage = false\n            // userStore.hidePage = false // to be deleted and replaced by appSettingStore.hidePage\n            appSettingStore.hidePage = false\n            // this.currentPageIsStream = false // to be deleted and replaced by appSettingStore.currentPageIsStream\n            appSettingStore.currentPageIsStream = false\n\n            this.videoContainerClass = 'topRightVideoContainer'\n            this.class = 'topRightVideoClass'\n            this.controls = false\n        },\n        makeVideoWelcomePage() {\n            const appSettingStore = useAppSettingStore()\n            this.videoContainerClass = 'welcomeVideoContainer'\n            this.class = 'welcomeVideoClass'\n            appSettingStore.loggedIn = false\n            appSettingStore.fullPage = true\n            appSettingStore.hidePage = false\n        },\n\n\n    },\n\n    getters: {},\n})\n","import { onBeforeMount, onMounted } from 'vue'\nimport { useUserStore } from \"@/Stores/UserStore\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useVideoPlayerStore } from \"@/Stores/VideoPlayerStore\"\nimport { Inertia } from '@inertiajs/inertia'\n\nexport function usePageSetup(pageName) {\n    const userStore = useUserStore()\n    const appSettingStore = useAppSettingStore()\n    const videoPlayerStore = useVideoPlayerStore()\n\n    appSettingStore.currentPage = pageName\n    appSettingStore.showFlashMessage = true\n    appSettingStore.pageIsHidden = false\n\n    if (userStore.isMobile) {\n        appSettingStore.ott = 0\n    }\n\n    videoPlayerStore.makeVideoTopRight()\n\n    if (appSettingStore.pageReload) {\n        appSettingStore.pageReload = false\n        window.location.reload(true);\n    }\n    // Check if the URL contains query strings\n\n\n    // Only scroll into view if there are no query strings\n\n        // const topDiv = document.getElementById(\"topDiv\")\n        // if (topDiv) {\n        //     topDiv.scrollIntoView()\n        // }\n        Inertia.on('navigate', (event) => {\n            const hasQueryStrings = window.location.search !== '';\n            if (!hasQueryStrings || appSettingStore.shouldScrollToTop) {\n                requestAnimationFrame(() => {\n                    const topDiv = document.getElementById(\"topDiv\");\n                    if (topDiv) {\n                        topDiv.scrollIntoView({behavior: 'auto'});\n                    } else {\n                        window.scrollTo(0, 0);\n                    }\n                });\n            }\n            appSettingStore.shouldScrollToTop = false;\n        })\n    // Only update if we're not already on this page to avoid overwriting with the current URL\n    appSettingStore.setPrevUrl()\n    appSettingStore.showOttButtons = true\n    appSettingStore.noLayout = false\n\n    // Inertia.reload()\n\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"@keyframes fadeOut-7d48326e{0%{opacity:1}to{opacity:0}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/Components/Global/GoLive/GoLive.vue\"],\"names\":[],\"mappings\":\"AAqlBA,4BACE,GACE,SACF,CACA,GACE,SACF,CACF\",\"sourcesContent\":[\"<template>\\n  <div class=\\\"mx-0 md:mx-4 mt-4 mb-2 px-2 md:px-6 py-1\\\">\\n    <div\\n        class=\\\"text-sm font-semibold  text-white text-center w-full border-2 rounded uppercase px-0 md:px-6 py-1 \\\"\\n        :class=\\\"[ goLiveStore.isLive ? 'bg-gray-600 border-gray-600 ' : 'bg-red-600 border-red-600' ]\\\">\\n      Go Live Instructions\\n    </div>\\n    <div class=\\\"shadow overflow-hidden border-2 border-red-600 rounded p-2 md:p-6\\\"\\n         :class=\\\"[ goLiveStore.isLive ? 'bg-gray-100' : 'bg-red-100' ]\\\">\\n\\n\\n      <div class=\\\"flex flex-row flex-wrap-reverse w-full justify-between gap-2\\\">\\n        <div>\\n          <div class=\\\"mb-2\\\">\\n            <button @click=\\\"appSettingStore.btnRedirect('/training/go-live-using-zoom')\\\"\\n                    class=\\\"btn bg-blue-500 hover:bg-blue-700 text-white\\\">How To Stream From Zoom\\n            </button>\\n            <button @click=\\\"openObsInstructions = !openObsInstructions\\\"\\n                    class=\\\"btn bg-blue-500 hover:bg-blue-700 text-white ml-2\\\" :class=\\\"{'bg-yellow-800 hover:bg-yellow-900 ':openObsInstructions}\\\">\\n              <span v-if=\\\"!openObsInstructions\\\">View Your Stream Key</span>\\n              <span v-else>Hide Your Stream Key</span>\\n            </button>\\n\\n          </div>\\n          <div v-if=\\\"openObsInstructions\\\" class=\\\"my-4 ml-10\\\">\\n            <h3>Stream from OBS or other software using these details:</h3>\\n            <div>RTMP full url: <span v-if=\\\"fullUrl\\\" class=\\\"font-bold\\\">{{ fullUrl }}</span>\\n              &nbsp;<button v-if=\\\"rtmpUri && streamKey\\\" @click=\\\"copyFullUrl\\\">\\n                <font-awesome-icon v-if=\\\"rtmpUri && streamKey\\\" icon=\\\"fa-clipboard\\\"\\n                                   class=\\\"text-blue-500 hover:text-blue-700 hover:cursor-pointer\\\"/>\\n              </button>\\n              <span v-if=\\\"showCopiedFullUrl\\\" class=\\\"ml-1 copied-message\\\" style=\\\"transition: opacity 0.5s; opacity: 1;\\\">Copied!</span>\\n            </div>\\n            <div>RTMP url: <span class=\\\"font-bold\\\">{{ rtmpUri }}</span>\\n              &nbsp;<button v-if=\\\"rtmpUri\\\" @click=\\\"copyRtmpUri\\\">\\n                <font-awesome-icon v-if=\\\"rtmpUri\\\" icon=\\\"fa-clipboard\\\"\\n                                   class=\\\"text-blue-500 hover:text-blue-700 hover:cursor-pointer\\\"/>\\n              </button>\\n              <span v-if=\\\"showCopiedRtmpUri\\\" class=\\\"ml-1 copied-message\\\" style=\\\"transition: opacity 0.5s; opacity: 1;\\\">Copied!</span>\\n            </div>\\n            <div>RTMP stream key: <span class=\\\"font-bold\\\">{{ streamKey }}</span>\\n              &nbsp;<button v-if=\\\"streamKey\\\" @click=\\\"copyStreamKey\\\">\\n                <font-awesome-icon v-if=\\\"streamKey\\\" icon=\\\"fa-clipboard\\\"\\n                                   class=\\\"text-blue-500 hover:text-blue-700 hover:cursor-pointer\\\"/>\\n              </button>\\n              <span v-if=\\\"showCopiedStreamKey\\\" class=\\\"ml-1 copied-message\\\"\\n                    style=\\\"transition: opacity 0.5s; opacity: 1;\\\">Copied!</span>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"flex flex-row flex-wrap justify-between grow ml-4\\\">\\n          <div v-if=\\\"!openObsInstructions\\\" class=\\\"flex flex-col justify-center border-2 border-green-500 rounded-lg px-2 py-2\\\">\\n            <div class=\\\"flex flex-row\\\">\\n              <div class=\\\"mb-2\\\">\\n                <button v-if=\\\"!goLiveStore.isRecording\\\" @click=\\\"goLiveStore.startRecording\\\"\\n                        disabled\\n                        class=\\\"btn btn-sm text-white bg-green-500 hover:bg-green-700 uppercase\\\"\\n                >Start Recording\\n                </button>\\n                <button v-else disabled @click=\\\"goLiveStore.stopRecording\\\"\\n                        class=\\\"btn btn-sm text-white bg-red-700 hover:bg-red-900 uppercase\\\"\\n                >Stop Recording\\n                </button>\\n              </div>\\n              <div class=\\\"ml-2\\\">\\n                <button v-if=\\\"!goLiveStore.isLive\\\" disabled @click=\\\"goLiveStore.goLive\\\"\\n                        class=\\\"btn btn-sm text-white bg-green-500 hover:bg-green-700 uppercase\\\"\\n                >Go Live Now\\n                </button>\\n                <button v-else disabled @click=\\\"goLiveStore.stopLive\\\"\\n                        class=\\\"btn btn-sm text-white bg-red-700 hover:bg-red-900 uppercase\\\"\\n                >End Live\\n                </button>\\n\\n              </div>\\n            </div>\\n            <div v-if=\\\"!goLiveStore.isRecording || !goLiveStore.isLive\\\"\\n                 class=\\\"text-xs text-green-500 font-semibold tracking-wider text-center\\\">\\n              Coming Soon!\\n            </div>\\n          </div>\\n\\n          <div>\\n            <button class=\\\"btn btn-secondary\\\" @click=\\\"openStats\\\">Live Analytics</button></div>\\n\\n          <div class=\\\"\\\">\\n            <div>Live will begin in... &nbsp;</div>\\n            <!--          <div class=\\\"font-semibold\\\">{{ formattedCountdown }} (for demo purposes only)</div>-->\\n            <div class=\\\"countdown font-mono text-2xl\\\">\\n              <!-- Hours (if your countdown includes hours) -->\\n              <span :style=\\\"{ '--value': hours }\\\">{{ hours.toString().padStart(2, '0') }}</span>h\\n              <!-- Minutes -->\\n              <span :style=\\\"{ '--value': minutes }\\\">{{ minutes.toString().padStart(2, '0') }}</span>m\\n              <!-- Seconds -->\\n              <span :style=\\\"{ '--value': seconds }\\\">{{ seconds.toString().padStart(2, '0') }}</span>s\\n            </div>\\n            <div class=\\\"text-xs\\\">for demo purposes only</div>\\n          </div>\\n        </div>\\n      </div>\\n\\n\\n\\n\\n      <div class=\\\"flex flex-col justify-center mt-3 h-fit\\\">\\n        <div class=\\\"text-xs tracking-wider font-semibold mb-1 pl-11\\\">LIVE VIDEO STREAM</div>\\n\\n        <div class=\\\"flex flex-row flex-wrap\\\">\\n          <div class=\\\"flex flex-col\\\">\\n\\n            <div class=\\\"px-10 h-fit w-fit\\\">\\n              <button @click=\\\"reloadPlayer();\\\"\\n                      class=\\\"btn btn-xs w-full\\\"\\n                      :class=\\\"liveOrRecordingGrayButtonClass\\\"\\n              >Reload Player\\n              </button>\\n              <div v-if=\\\"goLiveStore.isLive || goLiveStore.isRecording\\\"\\n                   class=\\\"w-full bg-red-700 text-white text-center uppercase font-bold\\\">\\n                <span v-if=\\\"goLiveStore.isLive\\\">LIVE</span> <span v-if=\\\"goLiveStore.isLive && goLiveStore.isRecording\\\"> + </span>\\n                <span v-if=\\\"goLiveStore.isRecording\\\">RECORDING</span>\\n              </div>\\n              <video-js-aux :id=\\\"`aux-player`\\\"\\n                            :source=\\\"videoSource\\\"\\n                            :sourceType=\\\"videoSourceType\\\"\\n                            class=\\\"\\\"\\n                            :class=\\\"liveOrRecordingVideoBorderClass\\\"/>\\n\\n\\n            </div>\\n            <div class=\\\"flex flex-row px-10 w-full justify-center\\\">\\n              <div class=\\\"mt-2\\\">\\n                <button v-if=\\\"!videoPlayerStore.muted\\\"\\n                        class=\\\"btn btn-warning btn-xs\\\"\\n                        :class=\\\"liveOrRecordingGrayButtonClass\\\"\\n                        @click=\\\"videoPlayerStore.mute\\\">\\n                  <font-awesome-icon icon=\\\"fa-volume-mute\\\" class=\\\"mr-1 cursor-pointer hover:text-blue-500\\\"/>\\n                  Mute Main Video Audio\\n                </button>\\n                <button v-else\\n                        class=\\\"btn btn-neutral text-white btn-xs\\\"\\n                        @click=\\\"videoPlayerStore.unMute\\\"\\n                        :class=\\\"liveOrRecordingGrayButtonClass\\\">\\n                  <font-awesome-icon icon=\\\"fa-volume-up\\\" class=\\\"mr-1 cursor-pointer hover:text-blue-500\\\"/>\\n                  Turn On Main Video Audio\\n                </button>\\n              </div>\\n              <div class=\\\"mt-2 ml-2\\\">\\n                <button v-if=\\\"!videoAuxPlayerStore.muted\\\"\\n                        class=\\\"btn btn-warning btn-xs\\\"\\n                        :class=\\\"liveOrRecordingGrayButtonClass\\\"\\n                        @click=\\\"videoAuxPlayerStore.mute\\\">\\n                  <font-awesome-icon icon=\\\"fa-volume-mute\\\" class=\\\"mr-1 cursor-pointer hover:text-blue-500\\\"/>\\n                  Mute Live Stream Audio\\n                </button>\\n                <button v-else\\n                        class=\\\"btn btn-neutral text-white btn-xs\\\"\\n                        :class=\\\"liveOrRecordingGrayButtonClass\\\"\\n                        @click=\\\"videoAuxPlayerStore.unMute\\\">\\n                  <font-awesome-icon icon=\\\"fa-volume-up\\\" class=\\\"mr-1 cursor-pointer hover:text-blue-500\\\"/>\\n                  Turn On Live Stream Audio\\n                </button>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div v-if=\\\"goLiveStore.streamInfo && !goLiveStore.streamInfo.error\\\" class=\\\"w-80\\\"\\n               :key=\\\"goLiveStore.selectedShowId\\\">\\n            <div>\\n              <h3>Stream Info</h3>\\n              <!--                <RecursivePropertyList :object=\\\"serverInfo\\\" />-->\\n\\n              <p><strong>Width:</strong> {{ goLiveStore.streamInfo?.width }}</p>\\n              <p><strong>Height:</strong> {{ goLiveStore.streamInfo?.height }}</p>\\n\\n              <!-- Assuming you want to display tracks info specifically -->\\n              <div v-if=\\\"goLiveStore.streamInfo?.meta?.tracks\\\">\\n                <h4 class=\\\"font-semibold\\\">Tracks</h4>\\n                <ul>\\n                  <li v-for=\\\"(track, name) in goLiveStore?.streamInfo?.meta.tracks\\\" :key=\\\"name\\\">\\n                    &middot; {{ name }} - Codec: {{ track.codec }}, Rate: {{ track.rate }}\\n                  </li>\\n                </ul>\\n              </div>\\n            </div>\\n          </div>\\n          <div v-if=\\\"!goLiveStore?.streamInfo && !goLiveStore?.streamInfo?.error\\\">\\n            <div class=\\\"flex flex-col\\\">\\n              <span class=\\\"mb-2\\\">Loading stream data...</span>\\n              <span class=\\\"loading loading-spinner text-neutral\\\"></span>\\n            </div>\\n\\n          </div>\\n          <div v-if=\\\"goLiveStore?.streamInfo?.error\\\">\\n            <div class=\\\"flex flex-col\\\">\\n              <span class=\\\"mb-2\\\">{{ goLiveStore?.streamInfo?.error }}</span>\\n            </div>\\n\\n          </div>\\n\\n        </div>\\n\\n      </div>\\n\\n\\n      <div class=\\\"mx-4 mt-4 mb-2 px-6 py-1 \\\">\\n\\n        <div\\n            class=\\\"text-sm font-semibold bg-blue-600 text-white text-center w-full border-2 border-blue-600 rounded uppercase px-6 py-1 \\\">\\n          Push Destinations\\n        </div>\\n        <div class=\\\"shadow bg-blue-100 overflow-hidden border-2 border-blue-600 rounded p-6 space-y-3\\\">\\n\\n          <div class=\\\"flex flex-row flex-wrap-reverse w-full justify-between\\\">\\n            <div class=\\\"mb-2\\\">\\n              <button @click=\\\"appSettingStore.btnRedirect('/training/how-to-push-to-facebook')\\\"\\n                      class=\\\"btn btn-sm bg-blue-500 hover:bg-blue-700 rounded-lg text-white\\\">How To Push To Facebook\\n              </button>\\n              <button @click=\\\"appSettingStore.btnRedirect('/training/how-to-push-to-rumble')\\\"\\n                      class=\\\"btn btn-sm bg-blue-500 hover:bg-blue-700 rounded-lg text-white ml-2 \\\">How To Push To Rumble\\n              </button>\\n            </div>\\n            <div>\\n              <button class=\\\"btn bg-blue-600 hover:bg-blue-500 text-white font-semibold rounded-lg\\\"\\n                      @click.prevent=\\\"addDestination\\\">Add Push\\n                Destinations\\n              </button>\\n            </div>\\n          </div>\\n\\n\\n          <div class=\\\"flex flex-row justify-between\\\">\\n            <div><h2 class=\\\"text-xl font-bold\\\">Push Destinations</h2></div>\\n\\n          </div>\\n\\n          <div v-if=\\\"mistStore.mistStreamPushDestinations.length === 0\\\">\\n            <div>Set up <span class=\\\"font-bold\\\">push destinations:</span></div>\\n            <div>Here you can set additional streaming destinations such as Facebook, YouTube, Rumble, Twitch, etc. and\\n              notTV will automatically start pushing to those destinations when you go live.\\n            </div>\\n          </div>\\n          <div v-if=\\\"mistStore.mistStreamPushDestinations\\\">\\n            <div class=\\\"flex flex-col gap-4\\\">\\n              <div v-for=\\\"destination in mistStore.mistStreamPushDestinations\\\" :key=\\\"destination.id\\\"\\n                   class=\\\"border p-4 rounded-lg shadow flex flex-row items-center gap-4\\\">\\n                <img :src=\\\"destination.destination_image\\\" alt=\\\"Destination Image\\\"\\n                     class=\\\"w-24 h-24 object-cover rounded-full\\\"/>\\n                <div class=\\\"flex-grow\\\">\\n                  <h3 class=\\\"text-lg font-semibold\\\">{{ destination.destination_name }}</h3>\\n                  <h4 class=\\\"\\\">{{ destination.comment }}</h4>\\n                  <p v-if=\\\"destination.has_auto_push\\\" class=\\\"text-yellow-500 font-semibold\\\">Auto push\\n                    is enabled</p>\\n                  <p v-if=\\\"destination.push_is_started\\\" class=\\\"text-red-500 font-semibold\\\">Push Is Active</p>\\n                  <div class=\\\"flex gap-2 mt-2\\\">\\n                    <button v-if=\\\"destination.push_is_started\\\" @click=\\\"mistStore.stopPush(destination.id)\\\"\\n                            class=\\\"py-2 px-4 bg-red-500 text-white rounded hover:bg-red-700 transition duration-150\\\">\\n                      Stop Push\\n                    </button>\\n                    <button v-else @click=\\\"mistStore.startPush(destination.id)\\\"\\n                            class=\\\"py-2 px-4 bg-blue-500 text-white rounded hover:bg-blue-700 transition duration-150\\\">\\n                      Start Push\\n                    </button>\\n                    <button v-if=\\\"!destination.has_auto_push\\\"\\n                            @click=\\\"mistStore.enableAutoPush(destination.id)\\\"\\n                            class=\\\"py-2 px-4 bg-yellow-500 text-white rounded hover:bg-yellow-600 transition duration-150\\\">\\n                      Enable Auto Push\\n                    </button>\\n                    <button v-if=\\\"destination.has_auto_push\\\"\\n                            @click=\\\"mistStore.disableAutoPush(destination.id)\\\"\\n                            class=\\\"py-2 px-4 bg-gray-500 text-white rounded hover:bg-gray-600 transition duration-150\\\">\\n                      Disable Auto Push\\n                    </button>\\n                  </div>\\n                </div>\\n                <div class=\\\"flex flex-row justify-end\\\">\\n                  <!--                  <button @click=\\\"editDestination(destination.id)\\\" class=\\\"py-2 px-4 bg-green-500 text-white rounded hover:bg-green-600 transition duration-150\\\">Edit</button>-->\\n                  <!--                  <button @click=\\\"deleteDestination(destination.id)\\\" class=\\\"py-2 px-4 bg-gray-500 text-white rounded hover:bg-gray-600 transition duration-150\\\">Delete</button>-->\\n\\n                  <button\\n                      @click.prevent=\\\"editDestination(destination)\\\"\\n                      class=\\\"btn btn-sm text-white font-semibold bg-blue-500 hover:bg-blue-600 rounded-lg\\\">\\n                    <font-awesome-icon icon=\\\"fa-pencil\\\" class=\\\"my-1 mx-1\\\"/>\\n                  </button>\\n                </div>\\n                <button\\n                    @click.prevent=\\\"mistStore.deleteDestination(destination.id)\\\"\\n                    class=\\\"btn btn-sm text-white font-semibold bg-red-500 hover:bg-red-600 rounded-lg\\\"\\n                >\\n                  <font-awesome-icon icon=\\\"fa-trash-can\\\" class=\\\"my-1 mx-1\\\"/>\\n                </button>\\n\\n\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n\\n      </div>\\n      <MistStreamPushDestinationForm @update-success=\\\"mistStore.getMistStreamPushDestinations\\\"\\n                                     :destinationDetails=\\\"destinationDetails\\\"\\n                                     :mode=\\\"mistStreamPushDestinationFormModalMode\\\"/>\\n\\n    </div>\\n\\n  </div>\\n\\n  <div class=\\\"mx-4 mt-4 mb-8 px-6 py-1 \\\">\\n    <div\\n        class=\\\"text-sm font-semibold bg-orange-600 text-white text-center w-full border-2 border-orange-600 rounded uppercase px-6 py-1 \\\">\\n      Commercial Breaks\\n    </div>\\n    <div class=\\\"shadow bg-orange-100 overflow-hidden border-2 border-orange-600 rounded py-6 px-10 space-y-3 w-full\\\">\\n      <div></div>\\n      <div>Click the <span class=\\\"font-bold\\\">Trigger Commercial Break</span> button below to go to commercial.</div>\\n      <div>You will see a countdown timer until the show resumes. This will be 1-2 minutes.</div>\\n      <div>As a notTV creator, your voice matters. How can this feature be improved to better serve you and your\\n        sponsors?\\n        Please email and let us know: <a href=\\\"mailto:hello@not.tv\\\" target=\\\"_blank\\\"\\n                                         class=\\\"text-blue-500 hover:text-blue-600\\\">hello@not.tv</a>\\n      </div>\\n      <div class=\\\"w-full flex justify-center pt-4\\\">\\n        <button onclick=\\\"setCommercialBreakNotice.showModal()\\\"\\n                class=\\\"bg-orange-600 hover:bg-orange-500 text-white font-semibold rounded-lg px-4 py-2\\\">Trigger\\n          Commercial Break\\n        </button>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n\\n</template>\\n\\n<script setup>\\n// import { useTimeAgo } from '@vueuse/core'\\nimport { computed, onMounted, onUnmounted, ref, watchEffect } from 'vue'\\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\\nimport { useVideoPlayerStore } from '@/Stores/VideoPlayerStore'\\nimport { useVideoAuxPlayerStore } from '@/Stores/VideoAuxPlayerStore'\\nimport { useGoLiveStore } from '@/Stores/GoLiveStore'\\nimport { useMistStore } from '@/Stores/MistStore'\\nimport VideoJsAux from '@/Components/Global/VideoPlayer/VideoJs/VideoJsAux'\\nimport videojs from 'video.js'\\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome'\\nimport { useClipboard } from '@vueuse/core'\\nimport MistStreamPushDestinationForm from '@/Components/Global/MistStreams/MistStreamPushDestinationForm'\\n\\nconst appSettingStore = useAppSettingStore()\\nconst videoPlayerStore = useVideoPlayerStore()\\nconst videoAuxPlayerStore = useVideoAuxPlayerStore()\\nconst goLiveStore = useGoLiveStore()\\nconst mistStore = useMistStore()\\n\\nlet props = defineProps({\\n  // show: Object,\\n})\\n\\nconst showCopiedFullUrl = ref(false)\\nconst showCopiedRtmpUri = ref(false)\\nconst showCopiedStreamKey = ref(false)\\nconst {copy} = useClipboard()\\n\\nconst openObsInstructions = ref(false)\\n\\n// const mistStreamPushDestinations = ref([])\\nconst mistStreamPushDestinationFormModalMode = ref('add')\\nconst destinationDetails = ref({})\\n\\n\\nwatchEffect(() => {\\n  // This code will run initially and re-run every time selectedShow or its mist_stream_wildcard.id changes\\n  const wildcardId = goLiveStore.wilcardId\\n  if (wildcardId) {\\n    mistStore.getMistStreamPushDestinations(wilcardId)\\n  }\\n})\\n\\nconst addDestination = async () => {\\n  mistStreamPushDestinationFormModalMode.value = 'add'\\n  const wildcardId = goLiveStore.selectedShow?.mist_stream_wildcard?.id\\n  destinationDetails.value = {mist_stream_wildcard_id: wildcardId} // Initialize destinationDetails with the wildcard ID\\n\\n  document.getElementById('mistStreamPushDestinationForm').showModal()\\n}\\n\\nconst editDestination = async (destination) => {\\n  mistStreamPushDestinationFormModalMode.value = 'edit'\\n  destinationDetails.value = destination\\n  document.getElementById('mistStreamPushDestinationForm').showModal()\\n  console.log(`Editing destination with ID: ${destination}`)\\n  const index = mistStreamPushDestinations.value.findIndex(destination => destination.id === destinationDetails.value.id)\\n  if (index !== -1) {\\n    mistStreamPushDestinations.value[index].has_auto_push = 0\\n  }\\n}\\n\\nconst videoSource = ref(videoPlayerStore.mistServerUri + 'hls/' + goLiveStore?.selectedShow?.mist_stream_wildcard.name\\n    + '/index.m3u8')\\nconst videoSourceType = ref('application/vnd.apple.mpegURL')\\n\\n// Fetch server info on component mount\\n// goLiveStore.fetchStreamInfo(goLiveStore?.selectedShow?.mist_stream_wildcard.name)\\n// goLiveStore.fetchRtmpUri()\\n\\n// Now using computed properties to directly refer to goLiveStore getters\\nconst rtmpUri = computed(() => goLiveStore.fullRtmpUri)\\nconst streamKey = computed(() => goLiveStore.streamKey)\\nconst fullUrl = computed(() => goLiveStore.fullUrl)\\n\\n\\n// Initialize fetching of server information\\ngoLiveStore.updateAndGetStreamKey()\\ngoLiveStore.fetchStreamInfo(goLiveStore?.selectedShow?.mist_stream_wildcard.name)\\ngoLiveStore.fetchRtmpUri()\\n\\n\\n// Reactively update URLs when the store updates\\n// watchEffect(() => {\\n//   if (goLiveStore.rtmpUri) {\\n//     rtmpUri.value = goLiveStore.rtmpUri + 'live/'\\n//     // Check if it's an episode or a selected show and update accordingly\\n//     if (goLiveStore.isEpisode && goLiveStore.episode?.mist_stream_wildcard?.name) {\\n//       streamKey.value = goLiveStore.episode.mist_stream_wildcard.name\\n//     } else if (!goLiveStore.isEpisode && goLiveStore.selectedShow?.mist_stream_wildcard?.name) {\\n//       streamKey.value = goLiveStore.selectedShow.mist_stream_wildcard.name\\n//     }\\n//     fullUrl.value = `${rtmpUri.value}${streamKey.value}`\\n//   }\\n// })\\n\\n// Function to handle the copy action and display the \\\"copied\\\" message for each type\\nconst copyFullUrl = () => {\\n  copy(fullUrl.value)\\n  showCopiedFullUrl.value = true\\n  setTimeout(() => showCopiedFullUrl.value = false, 1000)\\n}\\n\\nconst copyRtmpUri = () => {\\n  copy(rtmpUri.value)\\n  showCopiedRtmpUri.value = true\\n  setTimeout(() => showCopiedRtmpUri.value = false, 1000)\\n}\\n\\nconst copyStreamKey = () => {\\n  copy(streamKey.value)\\n  showCopiedStreamKey.value = true\\n  setTimeout(() => showCopiedStreamKey.value = false, 1000)\\n}\\n\\nconst reloadPlayer = () => {\\n  let source = null\\n  if (goLiveStore?.selectedShow?.mist_stream_wildcard?.name) {\\n    source = goLiveStore?.selectedShow?.mist_stream_wildcard?.name\\n    goLiveStore.fetchStreamInfo(goLiveStore?.selectedShow?.mist_stream_wildcard?.name)\\n  } else if (goLiveStore?.episode?.mist_stream_wildcard?.name) {\\n    source = goLiveStore?.episode?.mist_stream_wildcard?.name\\n    goLiveStore.fetchStreamInfo(goLiveStore?.episode?.mist_stream_wildcard?.name)\\n  }\\n  let sourceUrl = videoPlayerStore.mistServerUri + 'hls/' + source + '/index.m3u8'\\n  console.log('source url: ' + sourceUrl)\\n  let sourceType = 'application/vnd.apple.mpegurl'\\n  let videoJs = videojs('aux-player')\\n  videoJs.src({'src': sourceUrl, 'type': sourceType})\\n  // videoAuxPlayerStore.loadNewLiveSource(source, sourceType)\\n  console.log('reload player')\\n}\\n\\nconst openStats = () => {\\n  window.open('/stats', '_blank');\\n};\\n\\n// watchEffect(() => {\\n//   const mistServerUri = videoPlayerStore.mistServerUri\\n//   if (mistServerUri) {\\n//     reloadPlayer()\\n//   }\\n// })\\n\\n\\n// check push_auto_list and update\\n\\nonMounted(async() => {\\n\\n  // Automatically start the countdown or trigger based on an event\\n  startCountdown()\\n\\n  console.log('onPlayerReady AUX')\\n  // fetchServerInfo()\\n\\n  // check the push destinations\\n  await mistStore.getMistStreamPushDestinations(goLiveStore?.selectedShow?.mist_stream_wildcard?.id)\\n\\n  // check the auto push list\\n  // mistStore.getMistStreamPushAutoList(goLiveStore?.selectedShow?.mist_stream_wildcard?.id)\\n\\n  // check the push list\\n  // mistStore.getMistStreamPushList(goLiveStore?.selectedShow?.mist_stream_wildcard?.id)\\n\\n})\\n\\n// Keep a reference to the interval ID so it can be cleared\\nlet intervalId = null\\n\\n// Initial countdown time in seconds (5 minutes * 60 seconds)\\nconst countdownTime = 5 * 60\\n// Reactive state for the countdown\\nconst countdown = ref(countdownTime)\\n\\n// Computed properties for hours, minutes, and seconds\\nconst hours = computed(() => Math.floor(countdown.value / 3600))\\nconst minutes = computed(() => Math.floor((countdown.value % 3600) / 60))\\nconst seconds = computed(() => countdown.value % 60)\\n\\n// Function to start the countdown\\nconst startCountdown = () => {\\n  // // Clear any existing interval to prevent multiple intervals\\n  // if (intervalId !== null) {\\n  //   clearInterval(intervalId)\\n  // }\\n  //\\n  // // Reset countdown to initial value\\n  // countdown.value = countdownTime\\n  //\\n  // // Start a new interval\\n  // intervalId = setInterval(() => {\\n  //   countdown.value--\\n  //\\n  //   if (countdown.value < 0) {\\n  //     clearInterval(intervalId) // Stop the interval\\n  //     intervalId = null // Reset the interval ID\\n  //     // Optionally, you can reset countdown.value to countdownTime or another value here\\n  //   }\\n  // }, 1000)\\n}\\n\\nconst liveOrRecordingGrayButtonClass = computed(() => {\\n  if (goLiveStore.isLive || goLiveStore.isRecording) {\\n    return 'bg-gray-200 hover:bg-gray-400'\\n  } else {\\n    return ''\\n  }\\n})\\n\\nconst liveOrRecordingVideoBorderClass = computed(() => {\\n  if (goLiveStore.isLive || goLiveStore.isRecording) {\\n    return 'border-4 border-red-700'\\n  } else {\\n    return ''\\n  }\\n})\\n// const mistStreamWildcardId = ref()\\n// mistStreamWildcardId.value = goLiveStore?.selectedShow?.mist_stream_wildcard?.id\\nconst channel = Echo.channel(`mistStreamWildcard.${goLiveStore?.selectedShow?.mist_stream_wildcard?.id}`)\\nchannel.subscribed(() => {\\n  // Handle successful subscription\\n  // This log will confirm the subscription success\\n  console.log('Successfully subscribed to the channel!')\\n})\\n    .listen('.push-out-start', (event) => {\\n      console.log('push out start EVENT BROADCASTED!')\\n      const index = mistStore.mistStreamPushDestinations.findIndex(destination =>\\n          `${destination.rtmp_url}${destination.rtmp_key}` === event.requestUrl)\\n      if (index !== -1) {\\n        mistStore.mistStreamPushDestinations.value[index].push_is_started = 1\\n      }\\n    })\\n    .listen('.push-end', (event) => {\\n      console.log('push end EVENT BROADCASTED!')\\n      const index = mistStore.mistStreamPushDestinations.findIndex(destination =>\\n          `${destination.rtmp_url}${destination.rtmp_key}` === event.requestUrl)\\n      if (index !== -1) {\\n        mistStore.mistStreamPushDestinations[index].push_is_started = 0\\n      }\\n    })\\n\\n// Cleanup when the component unmounts\\nonUnmounted(() => {\\n  channel.stopListening('.push-out-start')\\n  channel.stopListening('.push-end')\\n  Echo.leave(`mistStreamWildcard.${goLiveStore?.selectedShow?.mist_stream_wildcard?.id}`)\\n\\n  // Cleanup interval on component unmount (countdown timer)\\n  if (intervalId !== null) {\\n    clearInterval(intervalId)\\n  }\\n\\n  videoAuxPlayerStore.disposePlayer()\\n  // let videoJs = videojs('aux-player')\\n  // if (videoJs) {\\n  //   videoJs.dispose()\\n  // }\\n})\\n\\n</script>\\n\\n<style scoped>\\n@keyframes fadeOut {\\n  from {\\n    opacity: 1;\\n  }\\n  to {\\n    opacity: 0;\\n  }\\n}\\n</style>\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import script from \"./CancelButton.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CancelButton.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n    <button\n        @click.prevent=\"cancel\"\n        class=\"ml-2 px-4 py-2 text-white bg-orange-600 hover:bg-orange-500 rounded-lg\"\n    >Cancel\n    </button>\n  </div>\n</template>\n\n<script setup>\nimport { Inertia } from \"@inertiajs/inertia\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useUserStore } from '@/Stores/UserStore'\n\nconst appSettingStore = useAppSettingStore()\nconst userStore = useUserStore()\n\nlet props = defineProps({\n  url: String\n})\n\nfunction cancel() {\n  if (appSettingStore.prevUrl) {\n    if (props.url) {\n      Inertia.visit(props.url)\n    } else {\n      Inertia.visit(appSettingStore.prevUrl)\n    }\n  } else {\n    if (props.url) {\n      Inertia.visit(props.url)\n    } else {\n      // Fallback if prevUrl is not available\n      let prevUrl = userStore.isCreator ? '/dashboard' : '/';\n      Inertia.visit(prevUrl);\n    }\n  }\n}\n</script>\n","import script from \"./VideoJsAux.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./VideoJsAux.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"w-full h-fit bg-yellow-400\">\n<!--    <video ref=\"videoPlayerAux\" :id=\"id\" class=\"vjs-layout-tiny w-full\" playsinline controls autoplay-->\n<!--           muted/>-->\n\n    <video-js :id=\"id\"\n              class=\"video-js vjs-layout-tiny w-96 h-64 bg-blue-400\"\n              autoplay\n              muted\n              playsinline\n              crossorigin=\"anonymous\"\n    >\n      <source :src=\"source\"\n              :type=\"sourceType\">\n    </video-js>\n\n\n\n\n  </div>\n\n\n\n\n</template>\n\n\n<script setup>\nimport { onMounted, onBeforeUnmount } from \"vue\"\nimport videojs from 'video.js'\nimport 'video.js/dist/video-js.css'\nimport { useVideoAuxPlayerStore } from \"@/Stores/VideoAuxPlayerStore\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nconst appSettingStore = useAppSettingStore()\nimport { useStreamStore } from \"@/Stores/StreamStore\"\nimport VideoJs from '@/Components/Global/VideoPlayer/VideoJs/VideoJs.vue'\n\nconst videoAuxPlayerStore = useVideoAuxPlayerStore()\nconst streamStore = useStreamStore()\n\nconst props = defineProps({\n  options: Object,\n  id: String,\n  source: String,\n  sourceType: String\n})\n\nonMounted(() => {\n  const videoElementId = props.id\n  const playerOptions = {\n    // Define your player options here\n    controlBar: {\n      audioTrackButton: false,\n      autoHide: true,\n      captionsButton: false,\n      chaptersButton: false,\n      currentTimeDisplay: false,\n      customControlSpacer: false,\n      descriptionsButton: false,\n      durationDisplay: false,\n      fullscreenToggle: false, // Removes the full screen option\n      liveDisplay: false,\n      pictureInPictureToggle: false,\n      playToggle: false,\n      playbackRateMenuButton: false,\n      progressControl: {seekBar: false},\n      remainingTimeDisplay: false,\n      seekToLive: false,\n      subsCapsButton: false,\n      subtitlesButton: false,\n      timeDivider: false,\n      volumePanel: {\n        inline: true,\n        volumeBar: {\n          vertical: false,\n          liveDisplay: false,\n        },\n      },\n    },\n    userActions: {\n      hotkeys: true, // Enable hotkeys to show/hide controls\n    },\n    controls: true,\n    muted: false, // Start muted to comply with autoplay policies\n    inactivityTimeout: 0,\n    autoplay: true,\n    preload: 'auto',\n    // techOrder: ['html5'],\n    html5: {\n      hls: {\n        overrideNative: !videojs.browser.IS_SAFARI, // Override native HLS on non-Safari browsers\n      },\n    },\n  }\n\n  // Initialize Video.js player\n  const videoAuxPlayer = videojs(videoElementId, playerOptions);\n\n  // Use the store to manage the player\n  videoAuxPlayerStore.setPlayer(videoAuxPlayer);\n\n  // Access the video DOM element controlled by VideoJS\n  const videoDomElement = videoAuxPlayer.el();\n\n  // Disable right-click on the video element\n  videoDomElement.addEventListener('contextmenu', (event) => {\n    event.preventDefault();\n  });\n})\n\nonBeforeUnmount(() => {\n  let videoAuxPlayer = videojs(props.id)\n  videoAuxPlayer.dispose()\n})\n\n</script>","import script from \"./MistStreamPushDestinationForm.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./MistStreamPushDestinationForm.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <!-- You can open the modal using ID.showModal() method -->\n\n  <dialog id=\"mistStreamPushDestinationForm\" class=\"modal\">\n    <div class=\"modal-box\">\n      <form method=\"dialog\">\n        <button class=\"btn btn-sm btn-circle btn-ghost absolute right-2 top-2\">✕</button>\n      </form>\n      <h3 class=\"font-bold text-lg\">{{ mode === 'add' ? 'Add Push Destination' : 'Edit Push Destination' }}</h3>\n\n      <form @submit.prevent=\"submitForm\">\n        <!-- Form fields for your model's attributes -->\n        <div class=\"my-3 flex flex-col space-y-2\">\n          <input v-model=\"form.rtmp_url\"\n                 type=\"text\"\n                 placeholder=\"RTMP URL\"\n                 class=\"input input-bordered\"\n                 required >\n          <input v-model=\"form.rtmp_key\"\n                 type=\"text\"\n                 placeholder=\"RTMP Key\"\n                 class=\"input input-bordered\" >\n          <textarea v-model=\"form.comment\" class=\"textarea textarea-bordered\" placeholder=\"Optional Comment...\" />\n\n          <div v-if=\"notificationStore.errorMessage\" role=\"alert\" class=\"alert alert-error\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\" /></svg>\n            <div class=\"w-full flex flex-row justify-between\">\n              <div>{{ notificationStore.formattedErrorMessage }}</div>\n              <div><button @click.prevent=\"notificationStore.clearErrorMessage\" class=\"btn btn-xs\">OK</button></div>\n            </div>\n          </div>\n          <!-- Add other fields as necessary -->\n          <button type=\"submit\" class=\"mt-2 btn btn-primary text-white\">{{ mode    === 'add' ? 'Add' : 'Save Changes' }}</button>\n        </div>\n      </form>\n    </div>\n  </dialog>\n</template>\n\n<script setup>\nimport { ref, watchEffect } from 'vue'\nimport { useNotificationStore } from '@/Stores/NotificationStore'\nimport { useGoLiveStore } from '@/Stores/GoLiveStore'\nimport { useMistStore } from '@/Stores/MistStore'\n\nconst notificationStore = useNotificationStore()\nconst goLiveStore = useGoLiveStore()\nconst mistStore = useMistStore()\n\nlet props = defineProps({\n  destinationDetails: Object,\n  mode: String,\n})\n\n// Define your emits\nconst emit = defineEmits(['update-success']);\n\nconst form = ref({\n  mist_stream_wildcard_id: props.destinationDetails.mist_stream_wildcard_id,\n  id: props.destinationDetails.id,\n  rtmp_url: props.destinationDetails.rtmp_url,\n  rtmp_key: props.destinationDetails.rtmp_key,\n  comment: props.destinationDetails.comment,\n  errors: '',\n  // Initialize other model attributes here\n});\n\n// Use watchEffect to reactively update form whenever props.destinationDetails changes\nwatchEffect(() => {\n  form.value.mist_stream_wildcard_id = props.destinationDetails.mist_stream_wildcard_id || '';\n  form.value.id = props.destinationDetails.id || '';\n  form.value.rtmp_url = props.destinationDetails.rtmp_url || '';\n  form.value.rtmp_key = props.destinationDetails.rtmp_key || '';\n  form.value.comment = props.destinationDetails.comment || '';\n  // Initialize other model attributes here\n});\n\nconst submitForm = async () => {\n  let url = '/mist-stream-push-destinations'; // Default URL for adding\n  let method = 'post'; // Default method for adding\n\n  // Check if the mode is 'edit' to adjust the URL and method as needed\n  if (props.mode === 'edit' && props.destinationDetails.id) {\n    url += `/${props.destinationDetails.id}`; // Append the destination ID for the update operation\n    method = 'put'; // Use PUT for updating, assuming your Laravel resource controller follows RESTful conventions\n  }\n\n  try {\n    // Perform the request using Axios\n    const response = await axios({\n      method: method,\n      url: url,\n      data: form.value, // Assuming formData is a reactive ref holding your form data\n    });\n\n    // Handle response here, e.g., show a success message, fetch updated list, etc.\n    console.log('Success:', response.data);\n    emit('update-success');\n    form.value.errors = ''\n\n    // Assuming the wildcard ID is part of the response or known at this point\n    // const wildcardId = response.data.wildcardId || someOtherWayToDetermineWildcardId();\n    console.log('just about to send this wildcardID: ' + goLiveStore.wildcardId)\n    await mistStore.getMistStreamPushDestinations(goLiveStore.wildcardId); // Fetch updated push destinations\n\n\n    // Close the modal\n    document.getElementById('mistStreamPushDestinationForm').close();\n  } catch (error) {\n    if (error.response && error.response.data && error.response.data.errors) {\n      // Assign all errors from the response to formErrors\n      notificationStore.errorMessage = error.response.data.errors;\n    } else {\n      // General error handling\n      console.error('Submission error', error);\n    }\n  }\n}\n\n</script>","<template>\n  <div class=\"mx-0 md:mx-4 mt-4 mb-2 px-2 md:px-6 py-1\">\n    <div\n        class=\"text-sm font-semibold  text-white text-center w-full border-2 rounded uppercase px-0 md:px-6 py-1 \"\n        :class=\"[ goLiveStore.isLive ? 'bg-gray-600 border-gray-600 ' : 'bg-red-600 border-red-600' ]\">\n      Go Live Instructions\n    </div>\n    <div class=\"shadow overflow-hidden border-2 border-red-600 rounded p-2 md:p-6\"\n         :class=\"[ goLiveStore.isLive ? 'bg-gray-100' : 'bg-red-100' ]\">\n\n\n      <div class=\"flex flex-row flex-wrap-reverse w-full justify-between gap-2\">\n        <div>\n          <div class=\"mb-2\">\n            <button @click=\"appSettingStore.btnRedirect('/training/go-live-using-zoom')\"\n                    class=\"btn bg-blue-500 hover:bg-blue-700 text-white\">How To Stream From Zoom\n            </button>\n            <button @click=\"openObsInstructions = !openObsInstructions\"\n                    class=\"btn bg-blue-500 hover:bg-blue-700 text-white ml-2\" :class=\"{'bg-yellow-800 hover:bg-yellow-900 ':openObsInstructions}\">\n              <span v-if=\"!openObsInstructions\">View Your Stream Key</span>\n              <span v-else>Hide Your Stream Key</span>\n            </button>\n\n          </div>\n          <div v-if=\"openObsInstructions\" class=\"my-4 ml-10\">\n            <h3>Stream from OBS or other software using these details:</h3>\n            <div>RTMP full url: <span v-if=\"fullUrl\" class=\"font-bold\">{{ fullUrl }}</span>\n              &nbsp;<button v-if=\"rtmpUri && streamKey\" @click=\"copyFullUrl\">\n                <font-awesome-icon v-if=\"rtmpUri && streamKey\" icon=\"fa-clipboard\"\n                                   class=\"text-blue-500 hover:text-blue-700 hover:cursor-pointer\"/>\n              </button>\n              <span v-if=\"showCopiedFullUrl\" class=\"ml-1 copied-message\" style=\"transition: opacity 0.5s; opacity: 1;\">Copied!</span>\n            </div>\n            <div>RTMP url: <span class=\"font-bold\">{{ rtmpUri }}</span>\n              &nbsp;<button v-if=\"rtmpUri\" @click=\"copyRtmpUri\">\n                <font-awesome-icon v-if=\"rtmpUri\" icon=\"fa-clipboard\"\n                                   class=\"text-blue-500 hover:text-blue-700 hover:cursor-pointer\"/>\n              </button>\n              <span v-if=\"showCopiedRtmpUri\" class=\"ml-1 copied-message\" style=\"transition: opacity 0.5s; opacity: 1;\">Copied!</span>\n            </div>\n            <div>RTMP stream key: <span class=\"font-bold\">{{ streamKey }}</span>\n              &nbsp;<button v-if=\"streamKey\" @click=\"copyStreamKey\">\n                <font-awesome-icon v-if=\"streamKey\" icon=\"fa-clipboard\"\n                                   class=\"text-blue-500 hover:text-blue-700 hover:cursor-pointer\"/>\n              </button>\n              <span v-if=\"showCopiedStreamKey\" class=\"ml-1 copied-message\"\n                    style=\"transition: opacity 0.5s; opacity: 1;\">Copied!</span>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"flex flex-row flex-wrap justify-between grow ml-4\">\n          <div v-if=\"!openObsInstructions\" class=\"flex flex-col justify-center border-2 border-green-500 rounded-lg px-2 py-2\">\n            <div class=\"flex flex-row\">\n              <div class=\"mb-2\">\n                <button v-if=\"!goLiveStore.isRecording\" @click=\"goLiveStore.startRecording\"\n                        disabled\n                        class=\"btn btn-sm text-white bg-green-500 hover:bg-green-700 uppercase\"\n                >Start Recording\n                </button>\n                <button v-else disabled @click=\"goLiveStore.stopRecording\"\n                        class=\"btn btn-sm text-white bg-red-700 hover:bg-red-900 uppercase\"\n                >Stop Recording\n                </button>\n              </div>\n              <div class=\"ml-2\">\n                <button v-if=\"!goLiveStore.isLive\" disabled @click=\"goLiveStore.goLive\"\n                        class=\"btn btn-sm text-white bg-green-500 hover:bg-green-700 uppercase\"\n                >Go Live Now\n                </button>\n                <button v-else disabled @click=\"goLiveStore.stopLive\"\n                        class=\"btn btn-sm text-white bg-red-700 hover:bg-red-900 uppercase\"\n                >End Live\n                </button>\n\n              </div>\n            </div>\n            <div v-if=\"!goLiveStore.isRecording || !goLiveStore.isLive\"\n                 class=\"text-xs text-green-500 font-semibold tracking-wider text-center\">\n              Coming Soon!\n            </div>\n          </div>\n\n          <div>\n            <button class=\"btn btn-secondary\" @click=\"openStats\">Live Analytics</button></div>\n\n          <div class=\"\">\n            <div>Live will begin in... &nbsp;</div>\n            <!--          <div class=\"font-semibold\">{{ formattedCountdown }} (for demo purposes only)</div>-->\n            <div class=\"countdown font-mono text-2xl\">\n              <!-- Hours (if your countdown includes hours) -->\n              <span :style=\"{ '--value': hours }\">{{ hours.toString().padStart(2, '0') }}</span>h\n              <!-- Minutes -->\n              <span :style=\"{ '--value': minutes }\">{{ minutes.toString().padStart(2, '0') }}</span>m\n              <!-- Seconds -->\n              <span :style=\"{ '--value': seconds }\">{{ seconds.toString().padStart(2, '0') }}</span>s\n            </div>\n            <div class=\"text-xs\">for demo purposes only</div>\n          </div>\n        </div>\n      </div>\n\n\n\n\n      <div class=\"flex flex-col justify-center mt-3 h-fit\">\n        <div class=\"text-xs tracking-wider font-semibold mb-1 pl-11\">LIVE VIDEO STREAM</div>\n\n        <div class=\"flex flex-row flex-wrap\">\n          <div class=\"flex flex-col\">\n\n            <div class=\"px-10 h-fit w-fit\">\n              <button @click=\"reloadPlayer();\"\n                      class=\"btn btn-xs w-full\"\n                      :class=\"liveOrRecordingGrayButtonClass\"\n              >Reload Player\n              </button>\n              <div v-if=\"goLiveStore.isLive || goLiveStore.isRecording\"\n                   class=\"w-full bg-red-700 text-white text-center uppercase font-bold\">\n                <span v-if=\"goLiveStore.isLive\">LIVE</span> <span v-if=\"goLiveStore.isLive && goLiveStore.isRecording\"> + </span>\n                <span v-if=\"goLiveStore.isRecording\">RECORDING</span>\n              </div>\n              <video-js-aux :id=\"`aux-player`\"\n                            :source=\"videoSource\"\n                            :sourceType=\"videoSourceType\"\n                            class=\"\"\n                            :class=\"liveOrRecordingVideoBorderClass\"/>\n\n\n            </div>\n            <div class=\"flex flex-row px-10 w-full justify-center\">\n              <div class=\"mt-2\">\n                <button v-if=\"!videoPlayerStore.muted\"\n                        class=\"btn btn-warning btn-xs\"\n                        :class=\"liveOrRecordingGrayButtonClass\"\n                        @click=\"videoPlayerStore.mute\">\n                  <font-awesome-icon icon=\"fa-volume-mute\" class=\"mr-1 cursor-pointer hover:text-blue-500\"/>\n                  Mute Main Video Audio\n                </button>\n                <button v-else\n                        class=\"btn btn-neutral text-white btn-xs\"\n                        @click=\"videoPlayerStore.unMute\"\n                        :class=\"liveOrRecordingGrayButtonClass\">\n                  <font-awesome-icon icon=\"fa-volume-up\" class=\"mr-1 cursor-pointer hover:text-blue-500\"/>\n                  Turn On Main Video Audio\n                </button>\n              </div>\n              <div class=\"mt-2 ml-2\">\n                <button v-if=\"!videoAuxPlayerStore.muted\"\n                        class=\"btn btn-warning btn-xs\"\n                        :class=\"liveOrRecordingGrayButtonClass\"\n                        @click=\"videoAuxPlayerStore.mute\">\n                  <font-awesome-icon icon=\"fa-volume-mute\" class=\"mr-1 cursor-pointer hover:text-blue-500\"/>\n                  Mute Live Stream Audio\n                </button>\n                <button v-else\n                        class=\"btn btn-neutral text-white btn-xs\"\n                        :class=\"liveOrRecordingGrayButtonClass\"\n                        @click=\"videoAuxPlayerStore.unMute\">\n                  <font-awesome-icon icon=\"fa-volume-up\" class=\"mr-1 cursor-pointer hover:text-blue-500\"/>\n                  Turn On Live Stream Audio\n                </button>\n              </div>\n            </div>\n          </div>\n\n          <div v-if=\"goLiveStore.streamInfo && !goLiveStore.streamInfo.error\" class=\"w-80\"\n               :key=\"goLiveStore.selectedShowId\">\n            <div>\n              <h3>Stream Info</h3>\n              <!--                <RecursivePropertyList :object=\"serverInfo\" />-->\n\n              <p><strong>Width:</strong> {{ goLiveStore.streamInfo?.width }}</p>\n              <p><strong>Height:</strong> {{ goLiveStore.streamInfo?.height }}</p>\n\n              <!-- Assuming you want to display tracks info specifically -->\n              <div v-if=\"goLiveStore.streamInfo?.meta?.tracks\">\n                <h4 class=\"font-semibold\">Tracks</h4>\n                <ul>\n                  <li v-for=\"(track, name) in goLiveStore?.streamInfo?.meta.tracks\" :key=\"name\">\n                    &middot; {{ name }} - Codec: {{ track.codec }}, Rate: {{ track.rate }}\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n          <div v-if=\"!goLiveStore?.streamInfo && !goLiveStore?.streamInfo?.error\">\n            <div class=\"flex flex-col\">\n              <span class=\"mb-2\">Loading stream data...</span>\n              <span class=\"loading loading-spinner text-neutral\"></span>\n            </div>\n\n          </div>\n          <div v-if=\"goLiveStore?.streamInfo?.error\">\n            <div class=\"flex flex-col\">\n              <span class=\"mb-2\">{{ goLiveStore?.streamInfo?.error }}</span>\n            </div>\n\n          </div>\n\n        </div>\n\n      </div>\n\n\n      <div class=\"mx-4 mt-4 mb-2 px-6 py-1 \">\n\n        <div\n            class=\"text-sm font-semibold bg-blue-600 text-white text-center w-full border-2 border-blue-600 rounded uppercase px-6 py-1 \">\n          Push Destinations\n        </div>\n        <div class=\"shadow bg-blue-100 overflow-hidden border-2 border-blue-600 rounded p-6 space-y-3\">\n\n          <div class=\"flex flex-row flex-wrap-reverse w-full justify-between\">\n            <div class=\"mb-2\">\n              <button @click=\"appSettingStore.btnRedirect('/training/how-to-push-to-facebook')\"\n                      class=\"btn btn-sm bg-blue-500 hover:bg-blue-700 rounded-lg text-white\">How To Push To Facebook\n              </button>\n              <button @click=\"appSettingStore.btnRedirect('/training/how-to-push-to-rumble')\"\n                      class=\"btn btn-sm bg-blue-500 hover:bg-blue-700 rounded-lg text-white ml-2 \">How To Push To Rumble\n              </button>\n            </div>\n            <div>\n              <button class=\"btn bg-blue-600 hover:bg-blue-500 text-white font-semibold rounded-lg\"\n                      @click.prevent=\"addDestination\">Add Push\n                Destinations\n              </button>\n            </div>\n          </div>\n\n\n          <div class=\"flex flex-row justify-between\">\n            <div><h2 class=\"text-xl font-bold\">Push Destinations</h2></div>\n\n          </div>\n\n          <div v-if=\"mistStore.mistStreamPushDestinations.length === 0\">\n            <div>Set up <span class=\"font-bold\">push destinations:</span></div>\n            <div>Here you can set additional streaming destinations such as Facebook, YouTube, Rumble, Twitch, etc. and\n              notTV will automatically start pushing to those destinations when you go live.\n            </div>\n          </div>\n          <div v-if=\"mistStore.mistStreamPushDestinations\">\n            <div class=\"flex flex-col gap-4\">\n              <div v-for=\"destination in mistStore.mistStreamPushDestinations\" :key=\"destination.id\"\n                   class=\"border p-4 rounded-lg shadow flex flex-row items-center gap-4\">\n                <img :src=\"destination.destination_image\" alt=\"Destination Image\"\n                     class=\"w-24 h-24 object-cover rounded-full\"/>\n                <div class=\"flex-grow\">\n                  <h3 class=\"text-lg font-semibold\">{{ destination.destination_name }}</h3>\n                  <h4 class=\"\">{{ destination.comment }}</h4>\n                  <p v-if=\"destination.has_auto_push\" class=\"text-yellow-500 font-semibold\">Auto push\n                    is enabled</p>\n                  <p v-if=\"destination.push_is_started\" class=\"text-red-500 font-semibold\">Push Is Active</p>\n                  <div class=\"flex gap-2 mt-2\">\n                    <button v-if=\"destination.push_is_started\" @click=\"mistStore.stopPush(destination.id)\"\n                            class=\"py-2 px-4 bg-red-500 text-white rounded hover:bg-red-700 transition duration-150\">\n                      Stop Push\n                    </button>\n                    <button v-else @click=\"mistStore.startPush(destination.id)\"\n                            class=\"py-2 px-4 bg-blue-500 text-white rounded hover:bg-blue-700 transition duration-150\">\n                      Start Push\n                    </button>\n                    <button v-if=\"!destination.has_auto_push\"\n                            @click=\"mistStore.enableAutoPush(destination.id)\"\n                            class=\"py-2 px-4 bg-yellow-500 text-white rounded hover:bg-yellow-600 transition duration-150\">\n                      Enable Auto Push\n                    </button>\n                    <button v-if=\"destination.has_auto_push\"\n                            @click=\"mistStore.disableAutoPush(destination.id)\"\n                            class=\"py-2 px-4 bg-gray-500 text-white rounded hover:bg-gray-600 transition duration-150\">\n                      Disable Auto Push\n                    </button>\n                  </div>\n                </div>\n                <div class=\"flex flex-row justify-end\">\n                  <!--                  <button @click=\"editDestination(destination.id)\" class=\"py-2 px-4 bg-green-500 text-white rounded hover:bg-green-600 transition duration-150\">Edit</button>-->\n                  <!--                  <button @click=\"deleteDestination(destination.id)\" class=\"py-2 px-4 bg-gray-500 text-white rounded hover:bg-gray-600 transition duration-150\">Delete</button>-->\n\n                  <button\n                      @click.prevent=\"editDestination(destination)\"\n                      class=\"btn btn-sm text-white font-semibold bg-blue-500 hover:bg-blue-600 rounded-lg\">\n                    <font-awesome-icon icon=\"fa-pencil\" class=\"my-1 mx-1\"/>\n                  </button>\n                </div>\n                <button\n                    @click.prevent=\"mistStore.deleteDestination(destination.id)\"\n                    class=\"btn btn-sm text-white font-semibold bg-red-500 hover:bg-red-600 rounded-lg\"\n                >\n                  <font-awesome-icon icon=\"fa-trash-can\" class=\"my-1 mx-1\"/>\n                </button>\n\n\n              </div>\n            </div>\n          </div>\n        </div>\n\n      </div>\n      <MistStreamPushDestinationForm @update-success=\"mistStore.getMistStreamPushDestinations\"\n                                     :destinationDetails=\"destinationDetails\"\n                                     :mode=\"mistStreamPushDestinationFormModalMode\"/>\n\n    </div>\n\n  </div>\n\n  <div class=\"mx-4 mt-4 mb-8 px-6 py-1 \">\n    <div\n        class=\"text-sm font-semibold bg-orange-600 text-white text-center w-full border-2 border-orange-600 rounded uppercase px-6 py-1 \">\n      Commercial Breaks\n    </div>\n    <div class=\"shadow bg-orange-100 overflow-hidden border-2 border-orange-600 rounded py-6 px-10 space-y-3 w-full\">\n      <div></div>\n      <div>Click the <span class=\"font-bold\">Trigger Commercial Break</span> button below to go to commercial.</div>\n      <div>You will see a countdown timer until the show resumes. This will be 1-2 minutes.</div>\n      <div>As a notTV creator, your voice matters. How can this feature be improved to better serve you and your\n        sponsors?\n        Please email and let us know: <a href=\"mailto:hello@not.tv\" target=\"_blank\"\n                                         class=\"text-blue-500 hover:text-blue-600\">hello@not.tv</a>\n      </div>\n      <div class=\"w-full flex justify-center pt-4\">\n        <button onclick=\"setCommercialBreakNotice.showModal()\"\n                class=\"bg-orange-600 hover:bg-orange-500 text-white font-semibold rounded-lg px-4 py-2\">Trigger\n          Commercial Break\n        </button>\n      </div>\n    </div>\n\n  </div>\n\n\n</template>\n\n<script setup>\n// import { useTimeAgo } from '@vueuse/core'\nimport { computed, onMounted, onUnmounted, ref, watchEffect } from 'vue'\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\nimport { useVideoPlayerStore } from '@/Stores/VideoPlayerStore'\nimport { useVideoAuxPlayerStore } from '@/Stores/VideoAuxPlayerStore'\nimport { useGoLiveStore } from '@/Stores/GoLiveStore'\nimport { useMistStore } from '@/Stores/MistStore'\nimport VideoJsAux from '@/Components/Global/VideoPlayer/VideoJs/VideoJsAux'\nimport videojs from 'video.js'\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome'\nimport { useClipboard } from '@vueuse/core'\nimport MistStreamPushDestinationForm from '@/Components/Global/MistStreams/MistStreamPushDestinationForm'\n\nconst appSettingStore = useAppSettingStore()\nconst videoPlayerStore = useVideoPlayerStore()\nconst videoAuxPlayerStore = useVideoAuxPlayerStore()\nconst goLiveStore = useGoLiveStore()\nconst mistStore = useMistStore()\n\nlet props = defineProps({\n  // show: Object,\n})\n\nconst showCopiedFullUrl = ref(false)\nconst showCopiedRtmpUri = ref(false)\nconst showCopiedStreamKey = ref(false)\nconst {copy} = useClipboard()\n\nconst openObsInstructions = ref(false)\n\n// const mistStreamPushDestinations = ref([])\nconst mistStreamPushDestinationFormModalMode = ref('add')\nconst destinationDetails = ref({})\n\n\nwatchEffect(() => {\n  // This code will run initially and re-run every time selectedShow or its mist_stream_wildcard.id changes\n  const wildcardId = goLiveStore.wilcardId\n  if (wildcardId) {\n    mistStore.getMistStreamPushDestinations(wilcardId)\n  }\n})\n\nconst addDestination = async () => {\n  mistStreamPushDestinationFormModalMode.value = 'add'\n  const wildcardId = goLiveStore.selectedShow?.mist_stream_wildcard?.id\n  destinationDetails.value = {mist_stream_wildcard_id: wildcardId} // Initialize destinationDetails with the wildcard ID\n\n  document.getElementById('mistStreamPushDestinationForm').showModal()\n}\n\nconst editDestination = async (destination) => {\n  mistStreamPushDestinationFormModalMode.value = 'edit'\n  destinationDetails.value = destination\n  document.getElementById('mistStreamPushDestinationForm').showModal()\n  console.log(`Editing destination with ID: ${destination}`)\n  const index = mistStreamPushDestinations.value.findIndex(destination => destination.id === destinationDetails.value.id)\n  if (index !== -1) {\n    mistStreamPushDestinations.value[index].has_auto_push = 0\n  }\n}\n\nconst videoSource = ref(videoPlayerStore.mistServerUri + 'hls/' + goLiveStore?.selectedShow?.mist_stream_wildcard.name\n    + '/index.m3u8')\nconst videoSourceType = ref('application/vnd.apple.mpegURL')\n\n// Fetch server info on component mount\n// goLiveStore.fetchStreamInfo(goLiveStore?.selectedShow?.mist_stream_wildcard.name)\n// goLiveStore.fetchRtmpUri()\n\n// Now using computed properties to directly refer to goLiveStore getters\nconst rtmpUri = computed(() => goLiveStore.fullRtmpUri)\nconst streamKey = computed(() => goLiveStore.streamKey)\nconst fullUrl = computed(() => goLiveStore.fullUrl)\n\n\n// Initialize fetching of server information\ngoLiveStore.updateAndGetStreamKey()\ngoLiveStore.fetchStreamInfo(goLiveStore?.selectedShow?.mist_stream_wildcard.name)\ngoLiveStore.fetchRtmpUri()\n\n\n// Reactively update URLs when the store updates\n// watchEffect(() => {\n//   if (goLiveStore.rtmpUri) {\n//     rtmpUri.value = goLiveStore.rtmpUri + 'live/'\n//     // Check if it's an episode or a selected show and update accordingly\n//     if (goLiveStore.isEpisode && goLiveStore.episode?.mist_stream_wildcard?.name) {\n//       streamKey.value = goLiveStore.episode.mist_stream_wildcard.name\n//     } else if (!goLiveStore.isEpisode && goLiveStore.selectedShow?.mist_stream_wildcard?.name) {\n//       streamKey.value = goLiveStore.selectedShow.mist_stream_wildcard.name\n//     }\n//     fullUrl.value = `${rtmpUri.value}${streamKey.value}`\n//   }\n// })\n\n// Function to handle the copy action and display the \"copied\" message for each type\nconst copyFullUrl = () => {\n  copy(fullUrl.value)\n  showCopiedFullUrl.value = true\n  setTimeout(() => showCopiedFullUrl.value = false, 1000)\n}\n\nconst copyRtmpUri = () => {\n  copy(rtmpUri.value)\n  showCopiedRtmpUri.value = true\n  setTimeout(() => showCopiedRtmpUri.value = false, 1000)\n}\n\nconst copyStreamKey = () => {\n  copy(streamKey.value)\n  showCopiedStreamKey.value = true\n  setTimeout(() => showCopiedStreamKey.value = false, 1000)\n}\n\nconst reloadPlayer = () => {\n  let source = null\n  if (goLiveStore?.selectedShow?.mist_stream_wildcard?.name) {\n    source = goLiveStore?.selectedShow?.mist_stream_wildcard?.name\n    goLiveStore.fetchStreamInfo(goLiveStore?.selectedShow?.mist_stream_wildcard?.name)\n  } else if (goLiveStore?.episode?.mist_stream_wildcard?.name) {\n    source = goLiveStore?.episode?.mist_stream_wildcard?.name\n    goLiveStore.fetchStreamInfo(goLiveStore?.episode?.mist_stream_wildcard?.name)\n  }\n  let sourceUrl = videoPlayerStore.mistServerUri + 'hls/' + source + '/index.m3u8'\n  console.log('source url: ' + sourceUrl)\n  let sourceType = 'application/vnd.apple.mpegurl'\n  let videoJs = videojs('aux-player')\n  videoJs.src({'src': sourceUrl, 'type': sourceType})\n  // videoAuxPlayerStore.loadNewLiveSource(source, sourceType)\n  console.log('reload player')\n}\n\nconst openStats = () => {\n  window.open('/stats', '_blank');\n};\n\n// watchEffect(() => {\n//   const mistServerUri = videoPlayerStore.mistServerUri\n//   if (mistServerUri) {\n//     reloadPlayer()\n//   }\n// })\n\n\n// check push_auto_list and update\n\nonMounted(async() => {\n\n  // Automatically start the countdown or trigger based on an event\n  startCountdown()\n\n  console.log('onPlayerReady AUX')\n  // fetchServerInfo()\n\n  // check the push destinations\n  await mistStore.getMistStreamPushDestinations(goLiveStore?.selectedShow?.mist_stream_wildcard?.id)\n\n  // check the auto push list\n  // mistStore.getMistStreamPushAutoList(goLiveStore?.selectedShow?.mist_stream_wildcard?.id)\n\n  // check the push list\n  // mistStore.getMistStreamPushList(goLiveStore?.selectedShow?.mist_stream_wildcard?.id)\n\n})\n\n// Keep a reference to the interval ID so it can be cleared\nlet intervalId = null\n\n// Initial countdown time in seconds (5 minutes * 60 seconds)\nconst countdownTime = 5 * 60\n// Reactive state for the countdown\nconst countdown = ref(countdownTime)\n\n// Computed properties for hours, minutes, and seconds\nconst hours = computed(() => Math.floor(countdown.value / 3600))\nconst minutes = computed(() => Math.floor((countdown.value % 3600) / 60))\nconst seconds = computed(() => countdown.value % 60)\n\n// Function to start the countdown\nconst startCountdown = () => {\n  // // Clear any existing interval to prevent multiple intervals\n  // if (intervalId !== null) {\n  //   clearInterval(intervalId)\n  // }\n  //\n  // // Reset countdown to initial value\n  // countdown.value = countdownTime\n  //\n  // // Start a new interval\n  // intervalId = setInterval(() => {\n  //   countdown.value--\n  //\n  //   if (countdown.value < 0) {\n  //     clearInterval(intervalId) // Stop the interval\n  //     intervalId = null // Reset the interval ID\n  //     // Optionally, you can reset countdown.value to countdownTime or another value here\n  //   }\n  // }, 1000)\n}\n\nconst liveOrRecordingGrayButtonClass = computed(() => {\n  if (goLiveStore.isLive || goLiveStore.isRecording) {\n    return 'bg-gray-200 hover:bg-gray-400'\n  } else {\n    return ''\n  }\n})\n\nconst liveOrRecordingVideoBorderClass = computed(() => {\n  if (goLiveStore.isLive || goLiveStore.isRecording) {\n    return 'border-4 border-red-700'\n  } else {\n    return ''\n  }\n})\n// const mistStreamWildcardId = ref()\n// mistStreamWildcardId.value = goLiveStore?.selectedShow?.mist_stream_wildcard?.id\nconst channel = Echo.channel(`mistStreamWildcard.${goLiveStore?.selectedShow?.mist_stream_wildcard?.id}`)\nchannel.subscribed(() => {\n  // Handle successful subscription\n  // This log will confirm the subscription success\n  console.log('Successfully subscribed to the channel!')\n})\n    .listen('.push-out-start', (event) => {\n      console.log('push out start EVENT BROADCASTED!')\n      const index = mistStore.mistStreamPushDestinations.findIndex(destination =>\n          `${destination.rtmp_url}${destination.rtmp_key}` === event.requestUrl)\n      if (index !== -1) {\n        mistStore.mistStreamPushDestinations.value[index].push_is_started = 1\n      }\n    })\n    .listen('.push-end', (event) => {\n      console.log('push end EVENT BROADCASTED!')\n      const index = mistStore.mistStreamPushDestinations.findIndex(destination =>\n          `${destination.rtmp_url}${destination.rtmp_key}` === event.requestUrl)\n      if (index !== -1) {\n        mistStore.mistStreamPushDestinations[index].push_is_started = 0\n      }\n    })\n\n// Cleanup when the component unmounts\nonUnmounted(() => {\n  channel.stopListening('.push-out-start')\n  channel.stopListening('.push-end')\n  Echo.leave(`mistStreamWildcard.${goLiveStore?.selectedShow?.mist_stream_wildcard?.id}`)\n\n  // Cleanup interval on component unmount (countdown timer)\n  if (intervalId !== null) {\n    clearInterval(intervalId)\n  }\n\n  videoAuxPlayerStore.disposePlayer()\n  // let videoJs = videojs('aux-player')\n  // if (videoJs) {\n  //   videoJs.dispose()\n  // }\n})\n\n</script>\n\n<style scoped>\n@keyframes fadeOut {\n  from {\n    opacity: 1;\n  }\n  to {\n    opacity: 0;\n  }\n}\n</style>","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-9.use[1]!../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-9.use[2]!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./GoLive.vue?vue&type=style&index=0&id=7d48326e&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./GoLive.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./GoLive.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./GoLive.vue?vue&type=style&index=0&id=7d48326e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-7d48326e\"]])\n\nexport default __exports__","import script from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"mx-4 my-4\">\n    <div class=\"alert alert-info mt-4\"\n         v-if=\"props.flash.message\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" class=\"stroke-current shrink-0 w-6 h-6\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n      </svg>\n      <span>{{ props.flash.message }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-success mt-4 mx-3\"\n         v-if=\"props.flash.success\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.success }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-warning mt-4 mx-3\"\n         v-if=\"props.flash.warning\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"/>\n      </svg>\n      <span>{{ props.flash.warning }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-error mt-4 mx-3\"\n         v-if=\"props.flash.error\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.error }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n  </div>\n\n</template>\n\n<script setup>\nimport { Inertia } from \"@inertiajs/inertia\"\nimport { computed } from \"vue\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\n\nconst appSettingStore = useAppSettingStore()\n\nappSettingStore.showFlashMessage = true\n\nlet props = defineProps({\n  flash: Object,\n\n})\n\nconst messageType = computed(() => ({\n  'text-green-700 bg-green-100 dark:bg-green-200 dark:text-green-800': props.flash.success,\n  'text-blue-700 bg-blue-100 dark:bg-blue-200 dark:text-blue-800': props.flash.message,\n  'text-orange-700 bg-orange-100 dark:bg-orange-200 dark:text-orange-800': props.flash.warning,\n  'text-red-700 bg-red-100 dark:bg-red-200 dark:text-red-800': props.flash.error,\n}))\n\nconst clearFlashMessage = async () => {\n  await Inertia.post(route('flash.clear'));\n  Inertia.reload();\n};\n</script>\n","import script from \"./PopUpModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./PopUpModal.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./ManageShowEpisodeNoticeModals.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ManageShowEpisodeNoticeModals.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./GoLive.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./GoLive.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <Head title=\"Go Live\"/>\n  <!--        <template #header>-->\n  <!--            <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">-->\n  <!--                Dashboard-->\n  <!--            </h2>-->\n  <!--        </template>-->\n\n  <!--        <div class=\"py-12\">-->\n  <!--            <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">-->\n  <!--                <div class=\"bg-white overflow-hidden shadow-xl sm:rounded-lg\">-->\n\n  <div class=\"place-self-center flex flex-col gap-y-3\">\n    <div id=\"topDiv\" class=\"bg-white text-black p-5 mb-10\">\n\n      <Message v-if=\"appSettingStore.showFlashMessage\" :flash=\"$page.props.flash\"/>\n\n      <div class=\"flex justify-between mx-4 px-6 w-full\">\n        <div class=\"grid grid-cols-1 grid-rows-2\">\n          <h1 class=\"text-3xl font-semibold\">Go Live</h1>\n        </div>\n        <div>\n          <CancelButton/>\n        </div>\n        <!--                <div class=\"grid grid-cols-1 grid-rows-2\">-->\n        <!--                    <div class=\"justify-self-end\">-->\n        <!--                        <Link :href=\"`/dashboard`\"><button-->\n        <!--                            class=\"px-4 py-2 text-white bg-blue-600 hover:bg-blue-500 rounded-lg\"-->\n        <!--                        >Dashboard</button>-->\n        <!--                        </Link>-->\n        <!--                    </div>-->\n        <!--                </div>-->\n      </div>\n      <div v-if=\"goLiveStore.shows && goLiveStore.shows.length > 0\" class=\"mb-6 px-6 w-full\">\n        <label class=\"block mb-2 uppercase font-bold text-xs text-light text-neutral\"\n               for=\"show\"\n        >\n          Select Show To Go Live On\n        </label>\n\n        <select\n            class=\"select select-info select-lg w-full p-2 block my-2 uppercase font-bold text-lg\"\n            v-model=\"goLiveStore.selectedShowId\"\n            @change=\"reloadPlayer\"\n        >\n          <option disabled selected >Select show</option>\n          <option v-for=\"show in goLiveStore.shows\"\n                  :key=\"show.id\" :value=\"show.id\">{{ show.name }}\n          </option>\n\n        </select>\n\n\n      </div>\n\n      <div v-else class=\"bg-black w-3/4 text-center px-10 py-6 text-white mx-auto border-red-700 border-2\">\n        You don't have any shows to go live with... please check your show(s).\n      </div>\n\n      <div v-if=\"goLiveStore.selectedShow\" class=\"text-3xl font-semibold text-center w-full\">\n        <Link :href=\"`/shows/${goLiveStore.selectedShow.slug}/manage`\">{{goLiveStore.selectedShow.name}}</Link>\n      </div>\n\n      <GoLive v-if=\"goLiveStore.selectedShow && goLiveStore.selectedShow.mist_stream_wildcard_id\" />\n      <div v-if=\"goLiveStore.selectedShow && !goLiveStore.selectedShow.mist_stream_wildcard_id\" class=\"flex flex-col justify-items-center text-center px-16\">\n        <div v-if=\"generateStreamKeyError\" class=\"text-red-700\">{{generateStreamKeyError}}</div>\n        <div v-if=\"generateStreamKeyProcessing && !generateStreamKeyError\" class=\"\">\n          <div>Stream key is being generated...</div>\n          <div><span class=\"loading loading-infinity loading-lg text-primary\"></span></div>\n        </div>\n        <div v-if=\"!generateStreamKeyProcessing && !generateStreamKeyError\">\n          <div class=\"mb-3\">Please generate a stream key:</div>\n          <div><button @click=\"handleGenerateStreamKey\" class=\"btn btn-sm w-fit bg-green-500 hover:bg-green-700 text-white\">generate key</button></div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <!--                </div>-->\n  <!--            </div>-->\n  <!--        </div>-->\n\n  <ManageShowEpisodeNoticeModals />\n</template>\n\n<script setup>\nimport { usePageSetup } from '@/Utilities/PageSetup'\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\nimport { useVideoPlayerStore } from '@/Stores/VideoPlayerStore'\nimport { useVideoAuxPlayerStore } from '@/Stores/VideoAuxPlayerStore'\nimport { useGoLiveStore } from '@/Stores/GoLiveStore'\nimport Message from '@/Components/Global/Modals/Messages'\nimport CancelButton from '@/Components/Global/Buttons/CancelButton'\nimport GoLive from '@/Components/Global/GoLive/GoLive'\nimport { onMounted, ref } from 'vue'\nimport videojs from 'video.js'\nimport ManageShowEpisodeNoticeModals from '@/Components/Pages/ShowEpisodes/Elements/ManageShowEpisodeNoticeModals.vue'\nimport Button from '@/Jetstream/Button.vue'\n\nusePageSetup('goLive')\n\nconst appSettingStore = useAppSettingStore()\nconst videoPlayerStore = useVideoPlayerStore()\nconst videoAuxPlayerStore = useVideoAuxPlayerStore()\nconst goLiveStore = useGoLiveStore()\n\nconst props = defineProps({\n  shows: Object\n})\n\nonMounted(async () => {\n  goLiveStore.isEpisode = null\n  goLiveStore.episode = null\n  goLiveStore.fetchShows().then(() => {\n    if (goLiveStore.preSelectedShowId) {\n      goLiveStore.selectedShowId = goLiveStore.preSelectedShowId;\n    }\n  });\n});\n\n// const selectedShowId = ref('');\n// const selectedShow = computed(() => {\n//   return props.shows?.find(show => show.id === selectedShowId.value) || null;\n// });\n// const selectedShow = computed(() => goLiveStore.selectedShow);\n\nconst generateStreamKeyProcessing = ref(false)\nconst generateStreamKeyError = ref('')\n\n// const reloadPlayer = () => {\n//   let source = goLiveStore?.selectedShow?.mist_stream_wildcard?.name\n//   let sourceUrl = videoAuxPlayerStore.mistServerUri + 'hls/' + source + '/index.m3u8'\n//   console.log('source url: ' + sourceUrl)\n//   let sourceType = 'application/vnd.apple.mpegurl'\n//   let videoJs = videojs('aux-player')\n//   videoJs.src({'src': sourceUrl, 'type': sourceType})\n//   // videoAuxPlayerStore.loadNewLiveSource(source, sourceType)\n//   goLiveStore.fetchStreamInfo(goLiveStore?.selectedShow?.mist_stream_wildcard?.name);\n//   console.log('reload player')\n// }\n\nconst onChangeShow = async (event) => {\n  goLiveStore.setSelectedShowId(event);\n  await goLiveStore.fetchStreamInfo(goLiveStore?.selectedShow?.mist_stream_wildcard?.name);\n  await goLiveStore.reloadPlayer();\n  // videoAuxPlayerStore.loadNewVideo(goLiveStore.selectedShow.mist)\n};\n\n\n\nconst handleGenerateStreamKey = async () => {\n  generateStreamKeyProcessing.value = true; // Start processing\n\n  try {\n    // Await the store's generateStreamKey method\n    await goLiveStore.generateStreamKey();\n    // Optional: Perform any additional actions after the key has been generated\n    await goLiveStore.fetchStreamInfo(goLiveStore?.selectedShow?.mist_stream_wildcard?.name);\n    await goLiveStore.reloadPlayer();\n  } catch (error) {\n    // Check if the error is from Axios and has a response object\n    let displayError = 'Failed to generate stream key: ';\n    if (error.response && error.response.data && error.response.data.error) {\n      // If there's an error message in the response data, use it\n      displayError += error.response.data.error;\n    } else if (error.message) {\n      // Fallback to the error's message if no detailed response data is available\n      displayError += error.message;\n    } else {\n      // Generic error text if neither of the above is available\n      displayError += 'An unexpected error occurred.';\n    }\n    console.log(displayError);\n    generateStreamKeyError.value = displayError; // Display the detailed error message on the page\n  } finally {\n    generateStreamKeyProcessing.value = false; // End processing\n  }\n};\n\n// const generateStreamKey = () => {\n//   // Ensure selectedShowId is accessible and has a value\n//   if (!goLiveStore.selectedShowId.value) {\n//     console.error(\"No show selected\");\n//     return; // Exit the function if no show is selected\n//   }\n//\n//   axios.post(`/go-live/shows/${goLiveStore.selectedShowId.value}/stream-key`)\n//       .then(response => {\n//         // Handle the successful response here\n//         console.log(\"Stream key generated:\", response.data);\n//         // You might want to do something with the response data, like updating a data property\n//       })\n//       .catch(error => {\n//         // Handle any errors here\n//         console.error(\"Error generating stream key:\", error.response ? error.response.data : error);\n//       });\n// }\n\n// watch(goLiveStore.preSelectedShowId, (newVal, oldVal) => {\n//   if (newVal !== '') {\n//     // Assuming the video player is ready to be initialized at this point\n//     // const videoPlayer = videojs('main-player');\n//     videoPlayerStore.mute()\n//     // goLiveStore.selectedShowId = selectedShowId\n//\n//     // Additional logic to load the video based on selectedShowId can be added here\n//   }\n// });\n</script>\n\n"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","initialState","displayEpisodeGoLiveComponent","isEpisode","episode","preSelectedShowId","selectedShowId","shows","streamKey","wildcardId","isLive","isRecording","streamInfo","rtmpUri","useGoLiveStore","defineStore","state","actions","assign","this","fetchShows","_this","_callee","response","_context","axios","get","data","t0","console","generateStreamKey","_this2","_callee2","_context2","post","concat","log","stream_key","selectedShow","mist_stream_wildcard","mist_stream_wildcard_id","updateAndGetStreamKey","_show$mist_stream_wil","_this3","show","find","id","setSelectedShowId","showId","updateSelectedShow","_this4","goLive","stopLive","startRecording","stopRecording","fetchStreamInfo","streamName","_this5","_callee3","_context3","fetch","ok","json","fetchRtmpUri","_this6","_callee4","_context4","text","clearStreamInfo","toggleDisplayEpisodeGoLiveComponent","_this$episode","show_id","updateEpisode","reloadPlayer","_this7","_callee5","_this7$selectedShow","_this7$episode","videoPlayerStore","source","_this7$selectedShow2","_this7$selectedShow3","_this7$episode2","_this7$episode3","sourceUrl","_context5","useVideoPlayerStore","mistServerUri","videojs","src","getters","_show$mist_stream_wil2","_show$mist_stream_wil3","fullRtmpUri","fullUrl","apiRequest","challenge","status","apiResponse","apiActiveStreams","mistUsername","mistPassword","mistStatus","Boolean","mistDisplayPushForm","mistDisplay","String","mistNewHashedPassword","mistStreamPushDestinations","useMistStore","getMistStreamPushDestinations","getMistStreamPushAutoList","getMistStreamPushList","startPush","destinationId","index","headers","findIndex","destination","push_is_started","stopPush","enableAutoPush","_callee6","_context6","has_auto_push","disableAutoPush","_callee7","_context7","deleteDestination","_this8","_callee8","_context8","confirm","filter","player","eventListenersAttached","videoPlayerLoaded","class","videoContainerClass","videoSourceIdSrc1","videoSourceIdSrc2","videoSourceIdSrc3","videoSourceTypeSrc1","videoSourceTypeSrc2","videoSourceTypeSrc3","firstPlayVideoSourceType","firstPlayVideoSource","videoName","videoSource","videoSourceType","videoPoster","nextSource","previousSource","currentView","currentChannelId","currentChannelName","currentShow","currentShowEpisode","currentVideo","hasVideo","controls","muted","paused","currentTime","duration","formattedTime","blue","videoIsYoutube","videoUploadComplete","useVideoAuxPlayerStore","getMistServerUri","setPlayer","playerInstance","initializePlayer","attachEventListeners","nextTick","useAudioStore","ensureAudioContextAndNodesReady","ready","play","on","handleTimeUpdate","handleFullscreenChange","handlePlay","handlePause","handleError","detachEventListeners","stopAudioLevelMonitoring","off","disposePlayer","dispose","prepareForNewVideoSource","useChannelStore","clearChannel","loadNewVideo","resetPlayback","pause","formatDuration","durationInSeconds","Math","floor","map","part","toString","padStart","join","_this$player","isFullscreen","_this$player2","_this$player3","_this$player4","code","message","makeBlue","toggleMute","unMute","mute","togglePlay","videoJs","load","loadNewLiveSource","sourceType","fullSourceUrl","back","fullscreen","requestFullscreen","getVideoCurrentTime","videoCurrentTime","getSourceDetails","videoSrc","mediaType","video_url","cdn_endpoint","cloud_folder","folder","file_name","audioStore","_this$getSourceDetail","deferAudioSetup","useNotificationStore","setGeneralServiceNotification","playNewVideo","loadNewSourceFromYouTube","loadNewLiveSourceFromRumble","loadNewSourceFromUrl","loadNewSourceFromMist","loadNewSourceFromFile","filePath","loadExternalSourceVideo","loadPlaylistVideos","loadMistStreamVideo","mistStream","_this9","basePath","loadVideoFromFile","video","_this10","setNowPlayingInfoVideoFile","nowPlayingType","nowPlayingName","useStreamStore","currentChannel","setNowPlayingInfoShow","clearNowPlayingInfo","showStore","useShowStore","firstPlayVideo","setName","setEpisodeUrl","slug","setUrl","setEpisodeName","makeVideoPiP","makeVideoFullPage","appSettingStore","useAppSettingStore","userStore","useUserStore","fullPage","hidePage","ott","isMobile","makeVideoTopRight","currentPageIsStream","makeVideoWelcomePage","loggedIn","usePageSetup","pageName","currentPage","showFlashMessage","pageIsHidden","pageReload","window","location","reload","Inertia","event","search","shouldScrollToTop","requestAnimationFrame","topDiv","document","getElementById","scrollIntoView","behavior","scrollTo","setPrevUrl","showOttButtons","noLayout","___CSS_LOADER_EXPORT___","module","props","__props","cancel","prevUrl","url","visit","isCreator","videoAuxPlayerStore","onMounted","videoElementId","playerOptions","controlBar","audioTrackButton","autoHide","captionsButton","chaptersButton","currentTimeDisplay","customControlSpacer","descriptionsButton","durationDisplay","fullscreenToggle","liveDisplay","pictureInPictureToggle","playToggle","playbackRateMenuButton","progressControl","seekBar","remainingTimeDisplay","seekToLive","subsCapsButton","subtitlesButton","timeDivider","volumePanel","inline","volumeBar","vertical","userActions","hotkeys","inactivityTimeout","autoplay","preload","html5","hls","overrideNative","browser","IS_SAFARI","videoAuxPlayer","el","addEventListener","preventDefault","onBeforeUnmount","notificationStore","goLiveStore","mistStore","emit","__emit","form","ref","destinationDetails","rtmp_url","rtmp_key","comment","errors","watchEffect","submitForm","_ref2","mode","close","errorMessage","showCopiedFullUrl","showCopiedRtmpUri","showCopiedStreamKey","copy","useClipboard","openObsInstructions","mistStreamPushDestinationFormModalMode","wilcardId","addDestination","_ref","_goLiveStore$selected","showModal","editDestination","_x","_goLiveStore$selected2","computed","_goLiveStore$selected3","copyFullUrl","setTimeout","copyRtmpUri","copyStreamKey","openStats","open","_goLiveStore$selected7","startCountdown","countdown","hours","minutes","seconds","liveOrRecordingGrayButtonClass","liveOrRecordingVideoBorderClass","channel","Echo","_goLiveStore$selected8","subscribed","listen","requestUrl","onUnmounted","_goLiveStore$selected9","stopListening","leave","_goLiveStore$selected4","_goLiveStore$episode","_goLiveStore$selected5","_goLiveStore$selected6","_goLiveStore$episode2","_goLiveStore$episode3","options","locals","clearFlashMessage","flash","success","warning","route","generateStreamKeyProcessing","generateStreamKeyError","handleGenerateStreamKey","_ref3","displayError"],"sourceRoot":""}
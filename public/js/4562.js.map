{"version":3,"file":"js/4562.js","mappings":"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","sources":["webpack:///./resources/js/Stores/GoLiveStore.js","webpack:///./resources/js/Stores/MistStore.js","webpack:///./resources/js/Stores/VideoAuxPlayerStore.js","webpack:///./resources/js/Utilities/PageSetup.js","webpack:///./resources/js/Components/Pages/GoLive/GoLiveHeader.vue?4e3b","webpack:///./resources/js/Components/Global/Buttons/CancelButton.vue?b7c6","webpack:///./resources/js/Components/Global/Buttons/CancelButton.vue","webpack:///./resources/js/Components/Pages/GoLive/GoLiveHeader.vue","webpack:///./resources/js/Components/Pages/GoLive/GoLiveHeader.vue?9863","webpack:///./resources/js/Components/Pages/GoLive/GoLiveHeader.vue?1285","webpack:///./resources/js/Components/Global/VideoPlayer/VideoJs/VideoJsAux.vue?cfd4","webpack:///./resources/js/Components/Global/VideoPlayer/VideoJs/VideoJsAux.vue","webpack:///./resources/js/Components/Pages/GoLive/GoLiveAuxVideoPlayer.vue?768b","webpack:///./resources/js/Components/Pages/GoLive/GoLiveAuxVideoPlayer.vue","webpack:///./resources/js/Components/Global/MistStreams/MistStreamPushDestinationForm.vue?5647","webpack:///./resources/js/Components/Global/MistStreams/MistStreamPushDestinationForm.vue","webpack:///./resources/js/Components/Pages/GoLive/GoLivePushDestinations.vue?e3d7","webpack:///./resources/js/Components/Pages/GoLive/GoLivePushDestinations.vue","webpack:///./resources/js/Components/Pages/GoLive/GoLiveCommercialBreaks.vue","webpack:///./resources/js/Components/Pages/GoLive/GoLiveCommercialBreaks.vue?f15d","webpack:///./resources/js/Components/Global/GoLive/GoLive.vue?3856","webpack:///./resources/js/Components/Global/GoLive/GoLive.vue","webpack:///./resources/js/Components/Global/Modals/Messages.vue?dfe9","webpack:///./resources/js/Components/Global/Modals/Messages.vue","webpack:///./resources/js/Components/Global/Modals/PopUpModal.vue?0d51","webpack:///./resources/js/Components/Global/Modals/PopUpModal.vue","webpack:///./resources/js/Components/Pages/ShowEpisodes/Elements/ManageShowEpisodeNoticeModals.vue","webpack:///./resources/js/Pages/GoLive.vue?e1d2","webpack:///./resources/js/Pages/GoLive.vue"],"sourcesContent":["import { defineStore } from 'pinia'\nimport { useNotificationStore } from '@/Stores/NotificationStore'\nimport { useVideoPlayerStore } from '@/Stores/VideoPlayerStore'\nimport { useVideoAuxPlayerStore } from '@/Stores/VideoAuxPlayerStore'\nimport videojs from 'video.js'\n\nconst initialState = () => ({\n    displayEpisodeGoLiveComponent: false,\n    isEpisode: null,\n    episode: null,\n    preSelectedShowId: null,\n    selectedShowId: null,\n    // selectedShow: null, this uses the getter... set it up in the component as a computed property\n    shows: [], // Assuming you might want to store shows here too\n    streamKey: '', // Optional: Store the generated stream key if needed\n    wildcardId: '',\n    isLive: false,\n    isRecording: false,\n    streamInfo: null,\n    rtmpUri: null,\n    destinations: [], // New state for holding destinations\n    isLoadingDestinations: false,\n    loadingDestinationId: null,\n    isProcessingDisableAllAutoPushes: false,\n    playerIsReloading: false,\n    pushDestinationFormSubmitProcessing: false,\n    mistServerUri: null,\n    previousStreamStatus: null,\n})\n\nexport const useGoLiveStore = defineStore('goLiveStore', {\n    state: initialState,\n    actions: {\n        reset() {\n            // Reset the store to its original state (clear all data)\n            Object.assign(this, initialState())\n        },\n        async fetchShows() {\n            try {\n                const response = await axios.get('/go-live/shows') // Adjust the URL as needed\n                this.shows = response.data\n            } catch (error) {\n                // console.error('Failed to fetch shows:', error)\n                // Handle error appropriately\n            }\n        },\n\n\n        // temporarily commenting this out\n        async generateStreamKey() {\n            if (!this.selectedShowId) {\n                // console.error('No show selected')\n                throw new Error('No show selected') // Throw an error to be caught by the caller\n            }\n\n            try {\n                const response = await axios.post(`/go-live/shows/${this.selectedShowId}/stream-key`)\n                // console.log('Stream key generated:', response.data)\n                // this.streamKey = response.data.stream_key // Assuming the response includes the stream key\n                console.log('this new stream key: ' + this.streamKey)\n                // console.log('response data stream key: ' + response.data.stream_key)\n                // Update goLiveStore.selectedShow.mist_stream_wildcard_id with the returned stream key\n                if (this.selectedShowId && response.data.stream_key) {\n                    this.selectedShow.mist_stream_wildcard = response.data\n                    this.selectedShow.mist_stream_wildcard_id = response.data.stream_key\n                }\n                return response.data // Return the response data\n            } catch (error) {\n                // console.error('Error generating stream key:', error.response ? error.response.data : error)\n                throw error // Re-throw the error to be caught by the component\n            }\n        },\n\n        // Other actions...\n        updateAndGetStreamKey() {\n            const show = this.shows.find(show => show.id === this.selectedShowId) || null\n            const streamKey = show?.mist_stream_wildcard?.name || ' < RELOAD THIS PAGE TO GET YOUR STREAM KEY > '\n\n            // Perform the state update\n            this.streamKey = streamKey\n\n            // Return the stream key for immediate use\n            return streamKey\n        },\n\n\n        // async generateStreamKey() {\n        //     if (!this.selectedShowId) {\n        //         console.error(\"No show selected\");\n        //         throw new Error(\"No show selected\");\n        //     }\n        //\n        //     try {\n        //         const response = await axios.post(`/go-live/shows/${this.selectedShowId}/stream-key`);\n        //         console.log(\"Stream key generated:\", response.data);\n        //\n        //         // Find the index of the selected show in the shows array\n        //         const selectedIndex = this.shows.findIndex(show => show.id === this.selectedShowId);\n        //         if (selectedIndex !== -1) {\n        //             // Update the selected show with the new stream key information\n        //             this.shows[selectedIndex].mist_stream_wildcard = response.data;\n        //             this.shows[selectedIndex].mist_stream_wildcard_id = response.data.stream_key;\n        //         }\n        //         return response.data;\n        //     } catch (error) {\n        //         console.error(\"Error generating stream key:\", error.response ? error.response.data : error);\n        //         throw error;\n        //     }\n        // },\n\n\n        // setPreSelectedShowId(id) {\n        //     this.preSelectedShowId = id;\n        //     console.log('preSelectedShowId updated to:', this.preSelectedShowId);\n        // },\n        // Action to update selectedShowId and selectedShow based on selectedShowId\n        setSelectedShowId(showId) {\n            this.selectedShowId = showId\n            this.updateSelectedShow() // Call the method to update selectedShow based on new selectedShowId\n        },\n        // Method to find and update selectedShow based on selectedShowId\n        updateSelectedShow() {\n            this.selectedShow = this.shows.find(show => show.id === this.selectedShowId) || null\n        },\n        goLive() {\n            this.isLive = true\n        },\n        stopLive() {\n            this.isLive = false\n        },\n        startRecording() {\n            this.isRecording = true\n        },\n        stopRecording() {\n            this.isRecording = false\n        },\n        // async fetchStreamInfo(streamName) {\n        //     try {\n        //         // const response = await fetch(`http://mist.nottv.io:8080/json_${encodedStreamName}.js`); // Replace with your URL\n        //         const response = await fetch(`/fetch-stream-info/${streamName}`) // Replace with your URL\n        //         if (!response.ok) throw new Error('Failed to fetch')\n        //         this.streamInfo = await response.json() // Store the data in serverInfo\n        //     } catch (error) {\n        //         console.error('Error fetching server info:', error)\n        //     }\n        // },\n        async fetchStreamInfo() {\n            const notificationStore = useNotificationStore()\n            // console.log('start fetch stream info...')\n            try {\n                if (!this.mistServerUri) {\n                    await this.fetchMistServerUri()\n                }\n                // Then, use the URI in your next request\n                const response = await axios.post('/fetch-stream-info', {\n                    streamName: this.streamKey,\n                    mistServerUri: this.mistServerUri, // Pass it as a string\n                })\n                // console.log('response returned...')\n                // console.log(response.data);\n                this.streamInfo = response.data.streamInfo || []\n                // Assuming a successful response might look like {\"message\": \"Stream is online\", \"status\": \"success\"}\n                let message, status\n\n                // Check if the response contains an error field\n                if (response.data.streamInfo.error) {\n                    message = response.data.streamInfo.error\n                    status = 'error' // Assuming 'error' as a fallback status\n                    // console.log('error returned...')\n                } else if (response.data.message && response.data.success) {\n                    // If it's a success message with a status\n                    message = response.data.message\n                    status = 'info'\n                    // console.log('success returned...')\n\n                } else {\n                    // Fallback for unexpected response structure\n                    message = 'Received unexpected response from server.'\n                    status = 'info' // Default to 'info' or another appropriate fallback status\n                    // console.log('unexpected response returned...')\n                }\n\n                // Use the status from the response for the notification\n                // notificationStore.setToastNotification(message, status)\n            } catch (error) {\n                // console.error(error);\n                notificationStore.setToastNotification('Failed to fetch stream info.', 'error')\n                // console.log('catch error...')\n            }\n        },\n        async fetchRtmpUri() {\n            try {\n                const response = await fetch(`/fetch-rtmp-uri`)\n                if (!response.ok) throw new Error('Failed to fetch')\n\n                // Parse the plain text body of the response\n                // Store the RTMP URI string in a Vue data property or similar\n                this.rtmpUri = await response.text()\n            } catch (error) {\n                // console.error('Error fetching RTMP URI:', error)\n            }\n        },\n        clearStreamInfo() {\n            this.streamInfo = null\n        },\n        toggleDisplayEpisodeGoLiveComponent(episode) {\n            // const videoPlayerAuxStore = useVideoAuxPlayerStore()\n            // videoPlayerAuxStore.reset()\n            this.displayEpisodeGoLiveComponent = !this.displayEpisodeGoLiveComponent\n            this.isEpisode = !!this.displayEpisodeGoLiveComponent\n            this.episode = episode\n            this.selectedShowId = this?.episode?.show_id\n\n        },\n        updateEpisode(episode) {\n            this.episode = episode\n        },\n        async fetchMistServerUri() {\n            const videoAuxPlayerStore = useVideoAuxPlayerStore();\n            let uriResponse = await axios.get('/mist-server/uri')\n            this.mistServerUri = uriResponse.data\n            videoAuxPlayerStore.setMistServerUri(this.mistServerUri)\n        },\n        async reloadPlayer() {\n            const videoAuxPlayerStore = useVideoAuxPlayerStore()\n            this.playerIsReloading = true // Start loading\n            try {\n                // First, fetch the URI\n\n                // let uriResponse = await axios.get('/mist-server/uri');\n                // this.mistServerUri = uriResponse.data; // Accessing the data prop// erty\n                // // Create an object and set the 'name' property\n                const mistStream = {\n                    name: this.streamKey,\n                }\n                // // Now, use this URI in your next request\n                // const response = await axios.post('/fetch-stream-info', {\n                //     streamName: this.streamKey,\n                //     mistServerUri: this.mistServerUri,\n                // });\n                // Now, you can pass the 'mistStream' object to the method\n                await videoAuxPlayerStore.loadMistStreamVideo(mistStream, true).then(\n                    // await this.fetchStreamInfo(),\n                )\n            } catch (error) {\n                // console.error(error);\n                // notificationStore.setGeneralServiceNotification('Failed to reload player', error)\n                notificationStore.setToastNotification('Failed to reload player.', 'error')\n            } finally {\n                this.playerIsReloading = false // Stop loading regardless of outcome\n            }\n\n        },\n        async fetchPushDestinations() {\n            const notificationStore = useNotificationStore()\n            this.isLoadingDestinations = true // Start loading\n            try {\n                const response = await axios.post('/go-live/fetch-push-destinations', {\n                    showId: this.selectedShowId,\n                    streamName: this.streamKey,\n                    backgroundFetch: false,\n                })\n                // console.log(response.data);\n                this.destinations = response.data.destinations || []\n                this.isRecording = response.data.isRecording || false\n                // Extract message and status from the response\n                const {message, status} = response.data\n                // Use the status from the response for the notification\n                // notificationStore.setToastNotification(message, status)\n            } catch (error) {\n                // console.error(error);\n                // notificationStore.setGeneralServiceNotification('Failed to reload player', error)\n                notificationStore.setToastNotification('Failed to fetch push destinations.', 'error')\n            } finally {\n                this.isLoadingDestinations = false // Stop loading regardless of outcome\n            }\n        },\n        async backgroundFetchPushDestinations() {\n            // Background Fetch doesn't use Toast Notifications,\n            // Keep the fetch silent in the background.\n\n            this.isLoadingDestinations = true // Start loading\n            try {\n                const response = await axios.post('/go-live/fetch-push-destinations/', {\n                    showId: this.selectedShowId,\n                    streamName: this.streamKey,\n                    backgroundFetch: true,\n                })\n                this.destinations = response.data.destinations || []\n                this.isRecording = response.data.isRecording || false\n            } catch (error) {\n                // console.error(error);\n                // notificationStore.setGeneralServiceNotification('Error Fetching Push Destinations', error)\n                notificationStore.setToastNotification('Failed to fetch push destinations.', 'error')\n            } finally {\n                this.isLoadingDestinations = false // Stop loading regardless of outcome\n            }\n        },\n        async deleteDestination(destinationId) {\n            // Confirm deletion with the user before proceeding\n            if (confirm(`Are you sure you want to delete the destination with ID: ${destinationId}?`)) {\n                try {\n                    // Perform the delete operation\n                    await axios.delete('/mist-stream-push-destinations/' + destinationId)\n                    // Optionally, remove the item from your local state to update the UI\n                    this.destinations = this.destinations.filter(destination => destination.id !== destinationId)\n                } catch (error) {\n                    notificationStore.setGeneralServiceNotification('Error deleting destination', error)\n                    // console.error(`Error deleting destination with ID: ${destinationId}`, error)\n                }\n            }\n        },\n        async startPush(destinationId, fullPushUri) {\n            const notificationStore = useNotificationStore()\n            this.loadingDestinationId = destinationId\n            // console.log(`Starting push for destination ${destinationId}`)\n            try {\n                const response = await axios.post('/mist-stream/start-push', {\n                    destination_id: destinationId,\n                    full_push_uri: fullPushUri,\n                    stream_name: this.streamKey,\n                })\n                // console.log('Push started successfully:', response.data)\n                // console.log('Destination ID:', destinationId)\n                // console.log('Full Push URI:', fullPushUri)\n                // console.log('Stream Name:', this.streamKey)\n                const {message, status} = response.data\n                // Use the status from the response for the notification\n                notificationStore.setToastNotification(message, status)\n                // Update the component's state to reflect the change\n                const index = this.destinations.findIndex(destination => destination.id === destinationId)\n                if (index !== -1) {\n                    this.destinations[index].push_is_started = 1\n                }\n            } catch (error) {\n                // console.error('Error starting push:', error)\n                notificationStore.setToastNotification('Failed to start push.', 'error')\n                // Handle the error appropriately in your UI\n            } finally {\n                this.loadingDestinationId = null // Stop loading regardless of outcome\n            }\n        },\n        async stopPush(destinationId) {\n            const notificationStore = useNotificationStore()\n            this.loadingDestinationId = destinationId\n            // console.log(`Stopping push for destination ${destinationId}`)\n            try {\n                const response = await axios.post('/mist-stream/stop-push', {destination_id: destinationId})\n                // console.log('Push stopped successfully:', response.data)\n                const {message, status} = response.data\n                notificationStore.setToastNotification(message, status)\n                // Update the component's state to reflect the change\n            } catch (error) {\n                // console.error('Error stopping push:', error)\n                notificationStore.setToastNotification('Failed to stop push.', 'error')\n            } finally {\n                this.loadingDestinationId = null // Stop loading regardless of outcome\n                const index = this.destinations.findIndex(destination => destination.id === destinationId)\n                if (index !== -1) {\n                    this.destinations[index].push_is_started = 0\n                }\n            }\n        },\n        async enableAutoPush(destinationId) {\n            this.loadingDestinationId = destinationId\n            const notificationStore = useNotificationStore()\n            try {\n                const response = await axios.post('/mist-stream/push-auto-add/' + destinationId)\n                // console.log('Auto push enabled successfully:', response.data)\n                const {message, status} = response.data\n                notificationStore.setToastNotification(message, status)\n                const index = this.destinations.findIndex(destination => destination.id === destinationId)\n                if (index !== -1) {\n                    this.destinations[index].has_auto_push = 1\n                }\n            } catch (error) {\n                // console.error('Error enabling auto push:', error)\n                notificationStore.setToastNotification('Failed to enable auto push.', 'error')\n            } finally {\n                this.loadingDestinationId = null // Stop loading regardless of outcome\n            }\n        },\n        async disableAutoPush(destinationId) {\n            const notificationStore = useNotificationStore()\n            this.loadingDestinationId = destinationId\n            try {\n                const response = await axios.post('/mist-stream/push-auto-remove/' + destinationId)\n                // console.log('Auto push removed successfully:', response.data)\n                const {message, status} = response.data\n                notificationStore.setToastNotification(message, status)\n                const index = this.destinations.findIndex(destination => destination.id === destinationId)\n                if (index !== -1) {\n                    this.destinations[index].has_auto_push = 0\n                }\n            } catch (error) {\n                // console.error('Error disabling auto push:', error)\n                notificationStore.setToastNotification('Failed to disable auto push.', 'error')\n            } finally {\n                this.loadingDestinationId = null // Stop loading regardless of outcome\n            }\n        },\n        async disableAllAutoPushes() {\n            const notificationStore = useNotificationStore()\n            this.isProcessingDisableAllAutoPushes = true\n            try {\n                const response = await axios.post('/mist-stream/remove-all-auto-pushes-for-stream', {'streamName': this.streamKey})\n                // console.log('Auto push disabled successfully:', response.data)\n                const {message, status} = response.data\n                notificationStore.setToastNotification(message, status)\n                await this.fetchPushDestinations()\n            } catch (error) {\n                // console.error('Error disabling auto push:', error)\n                notificationStore.setToastNotification('Failed to disable auto push.', 'error')\n            } finally {\n                this.isProcessingDisableAllAutoPushes = false // Stop loading regardless of outcome\n                await this.fetchPushDestinations()\n            }\n        },\n    },\n    getters: {\n        selectedShow: (state) => {\n            const show = state.shows.find(show => show.id === state.selectedShowId) || null\n            state.streamKey = show?.mist_stream_wildcard?.name || 'Fallback value if undefined'\n            state.wildcardId = show?.mist_stream_wildcard?.id || 'Fallback value if undefined'\n            return show\n        },\n        fullRtmpUri: (state) => {\n            return state.rtmpUri ? state.rtmpUri + 'live/' : ''\n        },\n        fullUrl: (state) => {\n            // Directly construct fullRtmpUri from state\n            const fullRtmpUri = state.rtmpUri ? state.rtmpUri + 'live/' : ''\n\n            // Directly find the show based on selectedShowId to avoid using getters\n            // const show = state.shows.find(show => show.id === state.selectedShowId) || null;\n            // const streamKey = show?.mist_stream_wildcard?.name || 'Fallback value if undefined';\n\n            // Return the concatenated URL\n            return `${fullRtmpUri}${state.streamKey}`\n        },\n        // Example getter that might filter destinations based on some criteria\n        activeDestinations: (state) => {\n            return state.destinations.filter(destination => destination.push_is_started)\n        },\n        sourceName: (state) => {\n            if (state.selectedShow?.mist_stream_wildcard?.name) {\n                return state.selectedShow.mist_stream_wildcard.name\n            } else if (state.episode?.mist_stream_wildcard?.name) {\n                return state.episode.mist_stream_wildcard.name\n            }\n            return null // No source available\n        },\n        streamOffline: (state) => {\n            // Check if the 'error' key exists and if its value is 'Stream is offline'\n            // If streamInfo is null or undefined, it defaults to an empty object {}\n            return (state.streamInfo?.error ?? '') === 'Stream is offline';\n        },\n    },\n\n\n})\n","import { defineStore } from 'pinia';\n\nconst initialState = () => ({\n    apiRequest: [],\n    challenge: [],\n    status: [],\n    apiResponse: [],\n    apiActiveStreams: [],\n    mistUsername: [],\n    mistPassword: [],\n    mistStatus: Boolean,\n    mistDisplayPushForm: Boolean,\n    mistDisplay: String,\n    mistNewHashedPassword: [],\n    mistStreamPushDestinations: [],\n});\n\nexport const useMistStore = defineStore('mistStore', {\n    state: initialState,\n    actions: {\n        reset() {\n            // Reset the store to its original state (clear all data)\n            Object.assign(this, initialState());\n        },\n        // add additional actions here\n        async getMistStreamPushDestinations(wildcardId) {\n\n\n            //////////////////////////\n            // replaced by goLiveStore\n            /////////////////////////\n\n\n            // // Assuming `goLiveStore.selectedShow.mist_stream_wildcard.id` holds the wildcard ID\n            // // const wildcardId = goLiveStore?.selectedShow?.mist_stream_wildcard?.id\n            // if (wildcardId) {\n            //     try {\n            //         // Append the wildcard ID as a query parameter\n            //         const response = await axios.get(`/mist-stream-push-destinations?wildcardId=${wildcardId}`)\n            //         this.mistStreamPushDestinations = response.data // Update the reactive variable\n            //     } catch (error) {\n            //         console.error('Failed to fetch push destinations:', error)\n            //     }\n            // } else {\n            //     console.error('No wildcard ID found (getMistStreamPushDestinations)')\n            // }\n        },\n        async getMistStreamPushAutoList(wildcardId) {\n            // Assuming `goLiveStore.selectedShow.mist_stream_wildcard.id` holds the wildcard ID\n            // const wildcardId = goLiveStore?.selectedShow?.mist_stream_wildcard?.id\n            if (wildcardId) {\n                try {\n                    // Append the wildcard ID as a query parameter\n                    const response = await axios.post(`/mist-stream/get-push-auto-list?wildcardId=${wildcardId}`)\n                    this.mistStreamPushDestinations = response.data // Update the reactive variable\n                } catch (error) {\n                    console.error('Failed to fetch push auto list:', error)\n                }\n            } else {\n                console.error('No wildcard ID found (getMistStreamPushAutoList)')\n            }\n        },\n        async getMistStreamPushList(wildcardId) {\n            // Assuming `goLiveStore.selectedShow.mist_stream_wildcard.id` holds the wildcard ID\n            // const wildcardId = goLiveStore?.selectedShow?.mist_stream_wildcard?.id\n            if (wildcardId) {\n                try {\n                    // Append the wildcard ID as a query parameter\n                    const response = await axios.post(`/mist-stream/get-push-list?wildcardId=${wildcardId}`)\n                    this.mistStreamPushDestinations = response.data // Update the reactive variable\n                } catch (error) {\n                    console.error('Failed to fetch push list:', error)\n                }\n            } else {\n                console.error('No wildcard ID found (getMistStreamPushList)')\n            }\n        },\n        // async startPush(destinationId) {\n        //     console.log(`Starting push for destination ${destinationId}`)\n        //     const data = {destinationId}\n        //\n        //     try {\n        //         const response = await axios.post('/mist-stream/start-push', data, {\n        //             headers: {\n        //                 'Content-Type': 'application/json',\n        //             },\n        //         })\n        //\n        //         console.log('Push started successfully:', response.data)\n        //         // Update the component's state to reflect the change\n        //         const index = this.mistStreamPushDestinations.findIndex(destination => destination.id === destinationId)\n        //         if (index !== -1) {\n        //             this.mistStreamPushDestinations[index].push_is_started = 1\n        //         }\n        //     } catch (error) {\n        //         console.error('Error starting push:', error)\n        //         // Handle the error appropriately in your UI\n        //     }\n        // },\n        // async stopPush(destinationId) {\n        //     console.log(`Stopping push for destination ${destinationId}`)\n        //     const data = {destinationId}\n        //\n        //     try {\n        //         const response = await axios.post('/mist-stream/stop-push', data, {\n        //             headers: {\n        //                 'Content-Type': 'application/json',\n        //             },\n        //         })\n        //\n        //         console.log('Push stopped successfully:', response.data)\n        //         // Update the component's state to reflect the change\n        //         const index = this.mistStreamPushDestinations.findIndex(destination => destination.id === destinationId)\n        //         if (index !== -1) {\n        //             this.mistStreamPushDestinations[index].push_is_started = 0\n        //         }\n        //     } catch (error) {\n        //         console.error('Error stopping push:', error)\n        //         // Handle the error appropriately in your UI\n        //     }\n        // },\n        // async enableAutoPush(destinationId) {\n        //     const data = {\n        //         destinationId,\n        //     }\n        //\n        //     try {\n        //         const response = await axios.post('/mist-stream/push-auto-add', data, {\n        //             headers: {\n        //                 'Content-Type': 'application/json',\n        //             },\n        //         })\n        //         console.log('Auto push enabled successfully:', response.data)\n        //         const index = this.mistStreamPushDestinations.findIndex(destination => destination.id === destinationId)\n        //         if (index !== -1) {\n        //             this.mistStreamPushDestinations[index].has_auto_push = 1\n        //         }\n        //     } catch (error) {\n        //         console.error('Error enabling auto push:', error)\n        //     }\n        // },\n        // async disableAutoPush(destinationId) {\n        //     console.log(`Disabling auto push for destination ${destinationId}`)\n        //     const data = {\n        //         destinationId,\n        //     }\n        //\n        //     try {\n        //         const response = await axios.post('/mist-stream/push-auto-remove', data, {\n        //             headers: {\n        //                 'Content-Type': 'application/json',\n        //             },\n        //         })\n        //\n        //         console.log('Auto push disabled successfully:', response.data)\n        //         const index = this.mistStreamPushDestinations.findIndex(destination => destination.id === destinationId)\n        //         if (index !== -1) {\n        //             this.mistStreamPushDestinations[index].has_auto_push = 0\n        //         }\n        //     } catch (error) {\n        //         console.error('Error disabling auto push:', error)\n        //     }\n        // },\n        // async deleteDestination (destinationId) {\n        //     // Confirm deletion with the user before proceeding\n        //     if (confirm(`Are you sure you want to delete the destination with ID: ${destinationId}?`)) {\n        //         try {\n        //             // Perform the delete operation\n        //             await axios.delete('/mist-stream-push-destinations/'+destinationId)\n        //             // Optionally, remove the item from your local state to update the UI\n        //             this.mistStreamPushDestinations = this.mistStreamPushDestinations.filter(destination => destination.id !== destinationId)\n        //         } catch (error) {\n        //             console.error(`Error deleting destination with ID: ${destinationId}`, error)\n        //         }\n        //     }\n        // }\n    }\n});\n","import { defineStore } from 'pinia'\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\nimport { useStreamStore } from '@/Stores/StreamStore'\nimport { useUserStore } from '@/Stores/UserStore'\nimport { useChannelStore } from '@/Stores/ChannelStore'\nimport { useShowStore } from '@/Stores/ShowStore'\nimport { useAudioStore } from '@/Stores/AudioStore'\nimport videojs from 'video.js'\nimport { usePage } from '@inertiajs/inertia-vue3'\nimport { nextTick } from 'vue'\nimport { useNotificationStore } from '@/Stores/NotificationStore'\n\nconst initialState = () => ({\n    mistServerUri: 'https://mist.nottv.io/', // tec21: 2024-02-09, if we don't start with the address here changing channels is really slow and buggy. Address for the MistServer listed in the Admin Settings saved in AppSetting\n    player: null, // Video.js player instance\n    eventListenersAttached: false, // Track if listeners are attached\n    videoPlayerLoaded: false,\n    class: '',\n    videoContainerClass: '',\n    // ottClass: 'OttClose',\n    videoSourceIdSrc1: '',\n    videoSourceIdSrc2: '',\n    videoSourceIdSrc3: '',\n    videoSourceTypeSrc1: '',\n    videoSourceTypeSrc2: '',\n    videoSourceTypeSrc3: '',\n    firstPlayVideoSourceType: '',\n    firstPlayVideoSource: '',\n    key: '',\n    videoName: '',\n    videoSource: '',\n    videoSourceType: '',\n    videoPoster: '',\n    nextSource: '',\n    previousSource: '',\n    currentView: '',\n    currentChannelId: 0,\n    currentChannelName: '',\n    currentShow: {},\n    currentShowEpisode: {},\n    currentVideo: {},\n    hasVideo: false,\n    controls: true,\n    muted: true,\n    paused: true,\n    // videoCurrentTime: '',\n    currentTime: 0, // Current playback time in seconds\n    duration: 0, // Total video duration in seconds\n    formattedTime: '00:00 / 00:00', // Formatted time string\n    blue: false, // DO NOT REMOVE\n    videoIsYoutube: false,\n    videoUploadComplete: false,\n})\n\nexport const useVideoAuxPlayerStore = defineStore('videoAuxPlayerStore', {\n    state: initialState,\n    actions: {\n        reset() {\n            // Reset the store to its original state (clear all data)\n            Object.assign(this, initialState())\n        },\n\n        async getMistServerUri() {\n            try {\n                let response = await axios.get('/mist-server/uri')\n                this.mistServerUri = response.data\n            } catch (error) {\n                console.error(error)\n            }\n        },\n\n        // Initialize or update the player instance\n        setPlayer(playerInstance) {\n            this.player = playerInstance\n            this.initializePlayer().then(() => {\n                this.attachEventListeners() // Attach event listeners after initialization\n            }).catch(error => {\n                console.error('Error during video player initialization:', error)\n            })\n        },\n\n        // Initialize the player with necessary settings and start playback\n        async initializePlayer() {\n            if (!this.player) {\n                console.error('Video.js player is not initialized.')\n                return\n            }\n\n            await nextTick() // Ensure Vue's DOM updates are processed\n\n            // Perform any necessary audio context and node setup\n            await useAudioStore().ensureAudioContextAndNodesReady(this.player)\n\n            // Apply initial player settings\n            this.player.controls(false)\n            this.player.muted(this.muted)\n\n            // Attempt to start playback\n            this.player.ready(() => {\n                this.player.play().then(() => {\n                    console.log('Playback started successfully')\n                }).catch(error => {\n                    console.error('Error trying to play the video:', error)\n                    // Handle the error (e.g., showing a user-friendly message)\n                })\n            })\n        },\n\n        // Attach event listeners to the player\n        attachEventListeners() {\n            if (!this.player || this.eventListenersAttached) {\n                console.log('Event listeners are already attached or video player is not initialized.')\n                return\n            }\n\n            this.player.on('timeupdate', this.handleTimeUpdate)\n            this.player.on('fullscreenchange', this.handleFullscreenChange)\n            this.player.on('play', this.handlePlay)\n            this.player.on('pause', this.handlePause)\n            this.player.on('error', this.handleError)\n\n            this.eventListenersAttached = true\n            console.log('Event listeners attached.')\n        },\n\n        // Detach event listeners from the player\n        detachEventListeners() {\n            if (!this.player || !this.eventListenersAttached) {\n                console.log('Event listeners are already detached or video player is not initialized.')\n                return\n            }\n\n            useAudioStore().stopAudioLevelMonitoring()\n            this.player.off('timeupdate', this.handleTimeUpdate)\n            this.player.off('fullscreenchange', this.handleFullscreenChange)\n            this.player.off('play', this.handlePlay)\n            this.player.off('pause', this.handlePause)\n            this.player.off('error', this.handleError)\n\n            this.eventListenersAttached = false\n            console.log('Event listeners detached.')\n        },\n\n        // Dispose of the player and perform cleanup\n        disposePlayer() {\n            if (!this.player) {\n                console.error('Video player is not initialized.')\n                return\n            }\n            this.detachEventListeners() // Detach event listeners if attached\n            this.player.dispose() // Dispose of the player instance\n            this.player = null // Reset the player state\n\n            // Optionally, stop audio level monitoring if linked to the player lifecycle\n            // const audioStore = useAudioStore();\n            // audioStore.stopAudioLevelMonitoring();\n\n            console.log('Video player disposed and cleaned up.')\n        },\n\n        // New method to prepare for a new video source\n        prepareForNewVideoSource(source) {\n            console.log('Preparing for new video source')\n\n            // Example: Clear any existing channel or video-specific state\n            useChannelStore().clearChannel()\n\n            // Reset or cleanup any existing video playback, if necessary\n            // this.resetPlayback();\n\n            // Load and play the new video source\n            this.loadNewVideo(source)\n        },\n\n        resetPlayback() {\n            if (this.player) {\n                this.player.pause()\n                this.player.muted(true)\n                this.player.currentTime(0) // Optionally reset the time\n                // Further cleanup logic here, if necessary\n                this.detachEventListeners() // Detach event listeners if attached\n            }\n        },\n\n        // Event handlers\n        handleTimeUpdate() {\n            // console.log('Handling timeupdate...');\n            // Implement your logic\n            this.currentTime = this.player.currentTime()\n            this.duration = this.player.duration()\n            const progressPercentage = (this.currentTime / this.duration) * 100\n            this.formattedTime = `${this.formatDuration(this.currentTime)} / ${this.formatDuration(this.duration)}`\n\n            // Update UI elements or emit events as needed\n            // Note: Direct manipulation of the DOM or component refs from the store is not recommended\n\n        },\n        // for the handleTimeUpdate eventHandler\n        formatDuration(durationInSeconds) {\n            const hours = Math.floor(durationInSeconds / 3600)\n            const minutes = Math.floor((durationInSeconds % 3600) / 60)\n            const seconds = Math.floor(durationInSeconds % 60)\n\n            const parts = [hours, minutes, seconds].map(part => part.toString().padStart(2, '0'))\n            return parts.join(':')\n        },\n        handleFullscreenChange() {\n            console.log('Handling fullscreenchange...')\n            // Implement your logic\n            this.player?.on('fullscreenchange', () => {\n                if (this.player.isFullscreen()) {\n                    // Video is entering fullscreen mode\n                    // You can add custom behavior for entering fullscreen here if needed\n                } else {\n                    // Video is exiting fullscreen mode\n                    // Check if the video was playing before entering fullscreen\n                    if (this.player.paused() === false) {\n                        // Resume playback after exiting fullscreen\n                        this.player.play()\n                    }\n                }\n            })\n        },\n        handlePlay() {\n            console.log('Handling play...')\n            // Implement your logic\n            this.player?.on('play', () => {\n                this.paused = false\n            })\n        },\n        handlePause() {\n            console.log('Handling pause...')\n            // Implement your logic\n            this.player?.on('pause', () => {\n                this.paused = true\n            })\n        },\n        handleError() {\n            console.log('Handling error...')\n            // Implement your logic\n            this.player?.on('error', function () {\n                const error = this.player.error()\n                console.error('Video.js Error:', error.code, error.message)\n            })\n        },\n        makeBlue() {\n            // for testing. DO NOT REMOVE.\n            this.blue = true\n        },\n        // Apparently this loadFirstPlay isn't being used...\n        // loadFirstPlay() {\n        //     const {props} = usePage()\n        //     let videoJs = videojs('aux-player')\n        //     const type = props.firstPlayVideoSourceType\n        //     const src = props.firstPlayVideoSource\n        //     videoJs.ready(() => {\n        //         videoJs.src({src, type})\n        //         videoJs.play().then(() => {\n        //             console.log('Playback started successfully')\n        //         }).catch(error => {\n        //             console.error('Error trying to play the video:', error)\n        //             // Handle the error (e.g., showing a user-friendly message)\n        //         })\n        //     })\n        //     console.log(type)\n        //     console.log(src)\n        // },\n        // Toggle mute state\n        toggleMute() {\n            if (this.muted) {\n                this.unMute()\n            } else {\n                this.mute()\n            }\n        },\n        // Mute the video\n        mute() {\n            if (this.player) {\n                this.player.muted(true)\n                this.muted = true\n            }\n        },\n        // Unmute the video\n        unMute() {\n            // const audioStore = useAudioStore()\n\n            if (this.player) {\n                // Prepare audio setup for when it's unmuted\n                // audioStore.userInteractionForAudio()\n\n                // Optionally, if fadeInAudioFromMuted is a gradual process,\n                // ensure this.player.muted(false) is called within that function.\n                // audioStore.fadeInAudioFromMuted()\n\n                this.player.muted(false)\n                this.muted = false\n            }\n        },\n        togglePlay() {\n            let videoJs = videojs('aux-player')\n\n            if (this.paused) {\n                videoJs.play()\n            } else {\n                videoJs.pause()\n            }\n        },\n        load() {\n            let videoJs = videojs('aux-player')\n            videoJs.load()\n        },\n        loadNewLiveSource(source, sourceType) {\n            let videoJs = videojs('aux-player')\n            let fullSourceUrl = this.mistServerUri + '/hls/' + source + '/index.m3u8'\n            videoJs.src({'src': fullSourceUrl, 'type': sourceType});\n            videoJs.play()\n        },\n        pause() {\n            let videoJs = videojs('aux-player')\n            videoJs.controls(false)\n            videoJs.pause()\n            this.paused = true\n        },\n        play() {\n            let videoJs = videojs('aux-player')\n\n            videoJs.play()\n            videoJs.controls(false)\n            this.paused = false\n        },\n        // next not built yet\n        next() {\n            let videoJs = videojs('aux-player')\n            videoJs.controls(false)\n            videoJs.src(this.nextSource)\n        },\n        // back not built yet\n        back() {\n            let videoJs = videojs('aux-player')\n            videoJs.controls(false)\n            videoJs.src(this.previousSource)\n        },\n        fullscreen() {\n            let videoJs = videojs('aux-player')\n            videoJs.controls(false)\n            // videoJs.fullscreen(this.previousSource)\n            videoJs.requestFullscreen()\n        },\n        getVideoCurrentTime() {\n            let videoJs = videojs('aux-player')\n            videoJs.controls(false)\n            this.videoCurrentTime = videoJs.currentTime\n        },\n\n\n        // This playNewVideo was created to access the audioContext\n        // which our audio compressor uses. This is new as of 2/2/2024\n        // ~ tec21\n\n        // playNewVideo(source) {\n        //     useChannelStore().clearChannel() // Reset or clear channel store\n        //     const videoJs = videojs('aux-player')\n        //     let videoSrc, videoSourceType\n        //     // Determine the source type and construct the source URL if necessary\n        //     if (source.mediaType === 'externalVideo') {\n        //         videoSrc = source.video_url // Direct URL to the video\n        //         videoSourceType = source.type // MIME type, e.g., 'video/youtube', 'video/mp4'\n        //     } else {\n        //         // Construct file path for internal videos\n        //         videoSrc = `${source.cdn_endpoint}${source.cloud_folder}${source.folder}/${source.file_name}`\n        //         videoSourceType = source.type // MIME type, typically 'video/mp4' for file-based sources\n        //     }\n        //     this.resumeAudioContextIfNeeded()\n        //     videoJs.src({src: videoSrc, type: videoSourceType})\n        //     videoJs.muted(false)\n        // },\n\n        // getSourceDetails(source) {\n        //     let videoSrc = source.video_url; // Directly access the video URL\n        //\n        //     // Default to 'video/mp4' if type is falsy ('', null, undefined, etc.)\n        //     let videoSourceType = source.type || 'video/mp4'\n        //\n        //     // Determine the mediaType and construct the source URL if necessary\n        //     if (source.mediaType === 'externalVideo') {\n        //         videoSrc = source.video_url // Direct URL to the video\n        //     } else {\n        //         // Internal video: construct the path, ensuring the file name is encoded\n        //         let encodedFileName = encodeURIComponent(source.file_name);\n        //         console.log(encodedFileName)\n        //         videoSrc = `${source.cdn_endpoint}${source.cloud_folder}${source.folder}/${encodedFileName}`\n        //     }\n        //     // Logic to determine videoSrc and videoSourceType\n        //     console.log(`Video Source: ${videoSrc}, Type: ${videoSourceType}`);\n        //     return { videoSrc, videoSourceType } // Return as an object\n        // },\n\n\n        getSourceDetails(source) {\n            let videoSrc, videoSourceType\n\n            console.log('getSourceDetails called with source:', source);\n\n            // Default to 'video/mp4' if type is not specified or is empty\n            videoSourceType = source.type || 'video/mp4'\n            console.log(`Determined Video Source Type: ${videoSourceType}`);\n\n            if (source.mediaType === 'externalVideo') {\n                // For external videos, use the URL as provided without encoding\n                videoSrc = source.video_url\n                console.log('Using external video source:', videoSrc);\n            } else {\n                console.log('CDN Endpoint:', source.cdn_endpoint);\n                console.log('Cloud Folder:', source.cloud_folder);\n                console.log('Folder:', source.folder);\n                console.log('File Name:', source.file_name);\n                // For internal videos, construct the URL from its components\n                // Here, we assume the cdn_endpoint, cloud_folder, and folder are correctly formatted\n                // and do not require encoding. Only the file_name might need encoding.\n                const basePath = `${source.cdn_endpoint}${source.cloud_folder}${source.folder}/`\n                // const encodedFileName = encodeURIComponent(source.file_name);\n                const fileName = source.file_name\n                videoSrc = basePath + fileName\n                console.log('Constructed internal video source:', videoSrc);\n                // If your server or CDN is configured to handle spaces in URLs without %20 encoding\n                // or if the original working URLs did not use standard URL encoding,\n                // you might adjust the encoding strategy here.\n                // For example, to replace spaces with %20 but leave other characters as-is:\n                // const fileNameForUrl = source.file_name.replace(/ /g, '%20');\n                // videoSrc = basePath + fileNameForUrl;\n            }\n\n            console.log(`Final Constructed Video Source: ${videoSrc}, Type: ${videoSourceType}`);\n            return {videoSrc, videoSourceType}\n        },\n\n\n        loadNewVideo(source) {\n            try {\n                let videoJs = videojs('aux-player');\n                console.log('LOAD NEW VIDEO');\n                const audioStore = useAudioStore();\n                // Correctly destructure the returned object to get videoSrc and videoSourceType\n                const {videoSrc, videoSourceType} = this.getSourceDetails(source);\n\n                // Example: Stopping and cleaning up the current video and audio setup\n                if (videoJs) {\n                    videoJs.src({'src': videoSrc, 'type': videoSourceType});\n\n                    videoJs.ready(() => {\n                        // ensureAudioContextAndNodesReady does the following:\n                        // 1. Resumes AudioContext if suspended.\n                        // 2. (Re)connects MediaElementSource from the video element to AudioContext.\n                        audioStore.deferAudioSetup = false;\n                        audioStore.ensureAudioContextAndNodesReady(videoJs).then(() => {\n                            // Only attempt to play the video after ensuring the AudioContext is ready\n                            videoJs.play().catch(error => {\n                                useNotificationStore().setGeneralServiceNotification('Error', 'Playback initiation error: ' + error)\n                                console.error('Playback initiation error: ', error);\n                            });\n\n                            // Consider toggling mute based on the user's preference or previous state\n                            videoJs.muted(false);\n                            this.muted = false;\n                        });\n                    });\n                }\n            } catch (error) {\n                // Log the error or perform any other error handling\n                useNotificationStore().setGeneralServiceNotification('Error', 'Error loading new video: ' + error)\n                console.error('Error loading new video: ', error);\n            }\n        },\n\n        // loadNewVideo(source) {\n        //     console.log('LOAD NEW VIDEO TTTTTTTTTTTTTTTTTTTTTTTTTS');\n        //     console.log('LOAD NEW VIDEO initiated with source:', source);\n        //     const audioStore = useAudioStore();\n        //     this.unMute();\n        //     // Destructure the returned object to get videoSrc and videoSourceType\n        //     const { videoSrc, videoSourceType } = this.getSourceDetails(source);\n        //     console.log(`Video source details received: Src - ${videoSrc}, Type - ${videoSourceType}`);\n        //\n        //     // Ensure you're using the same player instance (`videoJs` in this context) for consistency\n        //     let videoJs = videojs('aux-player'); // Ensure this ID matches your video player element\n        //     console.log('Video.js player instance created or retrieved.');\n        //\n        //     // Stop and clean up the current video and audio setup if necessary\n        //     videoJs.ready(() => {\n        //         console.log('Video.js player is ready.');\n        //         videoJs.src({ 'src': videoSrc, 'type': videoSourceType });\n        //         console.log(`Video source set: ${videoSrc} of type ${videoSourceType}`);\n        //\n        //         // Ensure AudioContext and nodes are ready\n        //         audioStore.ensureAudioContextAndNodesReady(videoJs).then(() => {\n        //             console.log('Audio context and nodes are ready. Attempting to play video.');\n        //\n        //             videoJs.play().then(() => {\n        //                 console.log('Video playback started successfully.');\n        //             }).catch(error => {\n        //                 console.error('Playback initiation error:', error);\n        //             });\n        //             // Attempt to play the video after ensuring the AudioContext is ready\n        //             // videoJs.play().catch(error => {\n        //             //     console.error('Playback initiation error:', error);\n        //             // });\n        //\n        //             // Apply the unMute logic from loadMistStreamVideo to ensure audio is correctly configured\n        //             this.unMute();\n        //             console.log('Audio unmuted.');\n        //             this.paused = false;\n        //             console.log('Paused flag set to false.');\n        //         }).catch(error => {\n        //             console.error('Error ensuring audio context and nodes are ready:', error);\n        //         });\n        //     });\n        // },\n\n        playNewVideo() {\n            console.log('PLAY NEW VIDEO')\n            if (this.player) {\n                // Wait for the video to be ready before playing\n                this.player.ready(() => {\n                    this.player.play()\n                    // Assuming you want to unmute here; check if this aligns with user interaction policies\n                    this.player.muted(false)\n                    this.muted = false\n                })\n            }\n        },\n\n\n// load video from different types of sources:\n// Url\n// YouTube\n// EmbedCode\n// Mist\n// File\n        loadNewSourceFromYouTube(source) {\n            this.videoIsYoutube = true\n            useChannelStore().clearChannel()\n            let videoJs = videojs('aux-player')\n            this.videoSource = source\n            this.videoSourceType = 'video/youtube'\n            videoJs.src({'src': this.videoSource, 'type': this.videoSourceType})\n            videoJs.controls(false)\n            this.unMute()\n            this.paused = false\n        },\n        loadNewLiveSourceFromRumble(source) {\n            this.videoIsYoutube = true\n            useChannelStore().clearChannel()\n            let videoJs = videojs('aux-player')\n            this.videoSource = source\n            this.videoSourceType = 'application/x-mpegURL'\n            videoJs.src({'src': this.videoSource, 'type': this.videoSourceType})\n            videoJs.controls(false)\n            this.unMute()\n            this.paused = false\n        },\n        loadNewSourceFromUrl(source) {\n            try {\n                this.videoIsYoutube = false;\n                useChannelStore().clearChannel();\n                let videoJs = videojs('aux-player');\n\n                if (!source.video_url || !source.type) {\n                    useNotificationStore().setGeneralServiceNotification('Error', 'Invalid video source.')\n                    throw new Error(\"Invalid video source.\");\n                }\n\n                this.videoSource = source.video_url;\n                this.videoSourceType = source.type;\n                videoJs.src({'src': source.video_url, 'type': source.type});\n\n                this.unMute();\n                this.paused = false;\n            } catch (error) {\n                useNotificationStore().setGeneralServiceNotification('Error', 'Failed to load new source: ' + error)\n                console.error(\"Failed to load new source:\", error);\n                throw error; // Re-throw the error to be caught by the caller\n            }\n        },\n        loadNewSourceFromMist(source) {\n            this.videoIsYoutube = false\n            let videoJs = videojs('aux-player')\n            let filePath = 'https://mist.not.tv/hls/'\n            this.videoSource = filePath + source + '/index.m3u8'\n            this.videoSourceType = 'application/x-mpegURL'\n            videoJs.src({'src': this.videoSource, 'type': this.videoSourceType})\n            this.unMute()\n            this.paused = false\n        },\n        loadNewSourceFromFile(source) {\n            this.videoIsYoutube = false\n            useChannelStore().clearChannel()\n            let videoJs = videojs('aux-player')\n            let filePath = source.cdn_endpoint + source.cloud_folder + source.folder + '/'\n            this.videoSource = source.file_name\n            this.videoSourceType = source.type\n            videoJs.src({'src': filePath + this.videoSource, 'type': this.videoSourceType})\n            this.unMute()\n            this.paused = false\n        },\n\n        // The new load video functions (2024-02-09 tec21 and ChatGPT)\n        loadExternalSourceVideo() {\n\n        },\n        loadPlaylistVideos() {\n\n        },\n        async loadMistStreamVideo(mistStream, stayMuted) {\n            let shouldUnmute = true\n            if(stayMuted) {\n                shouldUnmute = false\n            };\n            // console.log('Loading Mist Stream Video for:', mistStream.name); // Log which Mist Stream is being loaded\n            // This mistServerUri comes from appSettings\n            if (!this.mistServerUri) {\n                console.log('Mist Server URI not set, fetching...') // Log fetching attempt\n                await this.getMistServerUri()\n            }\n            if (this.mistServerUri) {\n                // console.log('Mist Server URI:', this.mistServerUri); // Log the URI to confirm it's fetched\n                let basePath = this.mistServerUri\n                this.videoSource = basePath + 'hls/' + mistStream.name + '/index.m3u8'\n                // console.log('Video Source Set To:', this.videoSource); // Log the final video source\n\n                this.videoSourceType = 'application/vnd.apple.mpegURL'\n                // console.log('Setting player source to:', this.videoSource, 'of type:', this.videoSourceType); // Log the source setting\n                let videoJs = videojs('aux-player')\n                videoJs.src({'src': this.videoSource, 'type': this.videoSourceType})\n                if (shouldUnmute) {\n                    this.unMute()\n                }\n                this.paused = false\n            } else {\n                console.error('Mist Server URI is still not set after fetching.')\n            }\n            // let basePath = this.mistServerUri\n            // this.videoSource = basePath + 'hls/' + mistStream.name + '/index.m3u8'\n            // this.videoSourceType = \"application/vnd.apple.mpegURL\"\n            // this.player.src({'src': this.videoSource, 'type': this.videoSourceType})\n            // this.unMute()\n            // this.paused = false\n        },\n        async loadVideoFromFile(video) {\n            // console.log('Loading Mist Stream Video for:', mistStream.name); // Log which Mist Stream is being loaded\n            // This mistServerUri comes from appSettings\n            // if (!this.mistServerUri) {\n            //     console.log('Mist Server URI not set, fetching...') // Log fetching attempt\n            //     await this.getMistServerUri()\n            // }\n            // if (this.mistServerUri) {\n                // console.log('Mist Server URI:', this.mistServerUri); // Log the URI to confirm it's fetched\n                // let basePath = this.mistServerUri\n                // this.videoSource = basePath + 'hls/' + video.name + '/index.m3u8'\n                // console.log('Video Source Set To:', this.videoSource); // Log the final video source\n\n            // this.videoSourceType = 'video/mp4'\n            console.log('Video Source Type:', video.type);\n            console.log('Video URL:', video.video_url);\n            console.log('CDN Endpoint:', video.cdn_endpoint);\n            console.log('Cloud Folder:', video.cloud_folder);\n            console.log('Folder:', video.folder);\n            console.log('File Name:', video.file_name);\n\n            let videoSource = video.cdn_endpoint + video.cloud_folder + video.folder + '/' + video.file_name\n                // console.log('Setting player source to:', this.videoSource, 'of type:', this.videoSourceType); // Log the source setting\n                let videoJs = videojs('aux-player')\n                videoJs.src({'src': videoSource, 'type': video.type})\n                this.unMute()\n                this.paused = false\n            // } else {\n            //     console.error('Mist Server URI is still not set after fetching.')\n            // }\n            // let basePath = this.mistServerUri\n            // this.videoSource = basePath + 'hls/' + mistStream.name + '/index.m3u8'\n            // this.videoSourceType = \"application/vnd.apple.mpegURL\"\n            // this.player.src({'src': this.videoSource, 'type': this.videoSourceType})\n            // this.unMute()\n            // this.paused = false\n        },\n\n\n        setNowPlayingInfoVideoFile(source) {\n            this.nowPlayingType = 'Video File'\n            this.nowPlayingName = source.file_name\n            useStreamStore().currentChannel = 'On Demand'\n        },\n        setNowPlayingInfoShow(show, episode) {\n            this.clearNowPlayingInfo()\n            const showStore = useShowStore()\n\n            if (show.firstPlayVideo) {\n                showStore.setName(show.firstPlayVideo.name)\n                showStore.setEpisodeUrl(`/shows/${show.slug}/episode/${source.firstPlayVideo.slug}`)\n            } else if (episode) {\n                showStore.setName(show.name)\n                showStore.setUrl(`/shows/${show.slug}`)\n                showStore.setEpisodeName(episode.name)\n                showStore.setEpisodeUrl(`/shows/${show.slug}/episode/${episode.slug}`)\n            } else {\n                showStore.setName(show.name)\n                showStore.setUrl(`/shows/${show.slug}`)\n            }\n        },\n// change video size/position and page layout\n        makeVideoPiP() {\n            // const appSettingStore = useAppSettingStore();\n            // const userStore = useUserStore();\n            //\n            // if (userStore.isMobile) {\n            //     let videoJs = videojs('aux-player')\n            //     videoJs.controls(false)\n            //     if(this.fullPage) {\n            //         this.class = 'pipVideoClassFullPage'\n            //         this.videoContainerClass = 'pipVideoContainerFullPage'\n            //     } else {\n            //         this.class = 'pipVideoClassTopRight'\n            //         this.videoContainerClass = 'pipVideoContainerTopRight'\n            //     }\n            //     appSettingStore.togglePipChatMode()\n            // }\n        },\n        makeVideoFullPage() {\n            const appSettingStore = useAppSettingStore()\n            const userStore = useUserStore()\n\n            // this.fullPage = true; // to be deleted and replaced by appSettingStore.fullPage\n            appSettingStore.fullPage = true\n            // userStore.hidePage = true // to be deleted and replaced by appSettingStore.hidePage\n            appSettingStore.hidePage = true\n            appSettingStore.ott = 0\n\n            this.videoContainerClass = 'fullPageVideoContainer'\n            this.class = 'fullPageVideoClass'\n            this.controls = !userStore.isMobile\n        },\n        makeVideoTopRight() {\n            const appSettingStore = useAppSettingStore()\n\n            // this.fullPage = false // to be deleted and replaced by appSettingStore.fullPage\n            appSettingStore.fullPage = false\n            // userStore.hidePage = false // to be deleted and replaced by appSettingStore.hidePage\n            appSettingStore.hidePage = false\n            // this.currentPageIsStream = false // to be deleted and replaced by appSettingStore.currentPageIsStream\n            appSettingStore.currentPageIsStream = false\n\n            this.videoContainerClass = 'topRightVideoContainer'\n            this.class = 'topRightVideoClass'\n            this.controls = false\n        },\n        makeVideoWelcomePage() {\n            const appSettingStore = useAppSettingStore()\n            this.videoContainerClass = 'welcomeVideoContainer'\n            this.class = 'welcomeVideoClass'\n            appSettingStore.loggedIn = false\n            appSettingStore.fullPage = true\n            appSettingStore.hidePage = false\n        },\n        setMistServerUri(mistServerUri) {\n            this.mistServerUri = mistServerUri\n        }\n\n\n    },\n\n    getters: {},\n})\n","import { onBeforeMount, onMounted } from 'vue'\nimport { useUserStore } from \"@/Stores/UserStore\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useVideoPlayerStore } from \"@/Stores/VideoPlayerStore\"\nimport { Inertia } from '@inertiajs/inertia'\n\nexport function usePageSetup(pageName) {\n    const userStore = useUserStore()\n    const appSettingStore = useAppSettingStore()\n    const videoPlayerStore = useVideoPlayerStore()\n\n    appSettingStore.currentPage = pageName\n    appSettingStore.showFlashMessage = true\n    appSettingStore.pageIsHidden = false\n\n    if (userStore.isMobile || window.innerWidth < 1024 || appSettingStore.fullPage) {\n        appSettingStore.ott = 0;\n    } else {\n        appSettingStore.ott = 1;\n        appSettingStore.showOttButtons = true;\n    }\n\n    videoPlayerStore.makeVideoTopRight()\n\n    if (appSettingStore.pageReload) {\n        appSettingStore.pageReload = false\n        window.location.reload(true);\n    }\n    // Check if the URL contains query strings\n\n\n    // Only scroll into view if there are no query strings\n\n        // const topDiv = document.getElementById(\"topDiv\")\n        // if (topDiv) {\n        //     topDiv.scrollIntoView()\n        // }\n        Inertia.on('navigate', (event) => {\n            if (userStore.isMobile || window.innerWidth < 1024 || appSettingStore.fullPage) {\n                appSettingStore.ott = 0;\n            } else {\n                appSettingStore.ott = 1;\n            }\n            const hasQueryStrings = window.location.search !== '';\n            if (!hasQueryStrings || appSettingStore.shouldScrollToTop) {\n                requestAnimationFrame(() => {\n                    const topDiv = document.getElementById(\"topDiv\");\n                    if (topDiv) {\n                        topDiv.scrollIntoView({behavior: 'auto'});\n                    } else {\n                        window.scrollTo(0, 0);\n                    }\n                });\n            }\n            appSettingStore.shouldScrollToTop = false;\n        })\n    // Only update if we're not already on this page to avoid overwriting with the current URL\n    appSettingStore.setPrevUrl()\n    appSettingStore.showOttButtons = true\n    appSettingStore.noLayout = false\n\n    // Inertia.reload()\n\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"@keyframes fadeOut-526ae918{0%{opacity:1}to{opacity:0}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/Components/Pages/GoLive/GoLiveHeader.vue\"],\"names\":[],\"mappings\":\"AA4LA,4BACE,GACE,SACF,CACA,GACE,SACF,CACF\",\"sourcesContent\":[\"<template>\\n  <div class=\\\"flex flex-row flex-wrap-reverse w-full justify-between gap-2\\\">\\n    <div>\\n      <div class=\\\"mb-2\\\">\\n        <button @click=\\\"appSettingStore.btnRedirect('/training/go-live-using-zoom')\\\"\\n                class=\\\"btn bg-blue-500 hover:bg-blue-700 text-white\\\">How To Stream From Zoom\\n        </button>\\n        <button @click=\\\"openObsInstructions = !openObsInstructions\\\"\\n                class=\\\"btn bg-blue-500 hover:bg-blue-700 text-white ml-2\\\"\\n                :class=\\\"{'bg-yellow-800 hover:bg-yellow-900 ':openObsInstructions}\\\">\\n          <span v-if=\\\"!openObsInstructions\\\">View Your Stream Key</span>\\n          <span v-else>Hide Your Stream Key</span>\\n        </button>\\n\\n      </div>\\n      <div v-if=\\\"openObsInstructions\\\" class=\\\"my-4 ml-10\\\">\\n        <h3>Stream from OBS or other software using these details:</h3>\\n        <div>RTMP full url: <span v-if=\\\"fullUrl\\\" class=\\\"font-bold\\\">{{ fullUrl }}</span>\\n          &nbsp;<button v-if=\\\"rtmpUri && streamKey\\\" @click=\\\"copyFullUrl\\\">\\n            <font-awesome-icon v-if=\\\"rtmpUri && streamKey\\\" icon=\\\"fa-clipboard\\\"\\n                               class=\\\"text-blue-500 hover:text-blue-700 hover:cursor-pointer\\\"/>\\n          </button>\\n          <span v-if=\\\"showCopiedFullUrl\\\" class=\\\"ml-1 copied-message\\\" style=\\\"transition: opacity 0.5s; opacity: 1;\\\">Copied!</span>\\n        </div>\\n        <div>RTMP url: <span class=\\\"font-bold\\\">{{ rtmpUri }}</span>\\n          &nbsp;<button v-if=\\\"rtmpUri\\\" @click=\\\"copyRtmpUri\\\">\\n            <font-awesome-icon v-if=\\\"rtmpUri\\\" icon=\\\"fa-clipboard\\\"\\n                               class=\\\"text-blue-500 hover:text-blue-700 hover:cursor-pointer\\\"/>\\n          </button>\\n          <span v-if=\\\"showCopiedRtmpUri\\\" class=\\\"ml-1 copied-message\\\" style=\\\"transition: opacity 0.5s; opacity: 1;\\\">Copied!</span>\\n        </div>\\n        <div>RTMP stream key: <span class=\\\"font-bold\\\">{{ streamKey }}</span>\\n          &nbsp;<button v-if=\\\"streamKey\\\" @click=\\\"copyStreamKey\\\">\\n            <font-awesome-icon v-if=\\\"streamKey\\\" icon=\\\"fa-clipboard\\\"\\n                               class=\\\"text-blue-500 hover:text-blue-700 hover:cursor-pointer\\\"/>\\n          </button>\\n          <span v-if=\\\"showCopiedStreamKey\\\" class=\\\"ml-1 copied-message\\\"\\n                style=\\\"transition: opacity 0.5s; opacity: 1;\\\">Copied!</span>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"flex flex-row flex-wrap justify-between grow ml-4 gap-2\\\">\\n      <div v-if=\\\"!openObsInstructions\\\"\\n           class=\\\"flex flex-col justify-center border-2 border-green-500 rounded-lg px-2 py-2 gap-2\\\">\\n        <div class=\\\"flex flex-row gap-2\\\">\\n          <div class=\\\"mb-2\\\">\\n            <button v-if=\\\"!goLiveStore.isRecording\\\" @click=\\\"goLiveStore.startRecording\\\"\\n                    disabled\\n                    class=\\\"btn btn-sm text-white bg-green-500 hover:bg-green-700 uppercase\\\"\\n            >Start Recording\\n            </button>\\n            <button v-else disabled @click=\\\"goLiveStore.stopRecording\\\"\\n                    class=\\\"btn btn-sm text-white bg-red-700 hover:bg-red-900 uppercase\\\"\\n            >Stop Recording\\n            </button>\\n          </div>\\n          <div class=\\\"ml-2\\\">\\n            <button v-if=\\\"!goLiveStore.isLive\\\" disabled @click=\\\"goLiveStore.goLive\\\"\\n                    class=\\\"btn btn-sm text-white bg-green-500 hover:bg-green-700 uppercase\\\"\\n            >Go Live Now\\n            </button>\\n            <button v-else disabled @click=\\\"goLiveStore.stopLive\\\"\\n                    class=\\\"btn btn-sm text-white bg-red-700 hover:bg-red-900 uppercase\\\"\\n            >End Live\\n            </button>\\n\\n          </div>\\n        </div>\\n        <div v-if=\\\"!goLiveStore.isRecording || !goLiveStore.isLive\\\"\\n             class=\\\"text-xs text-green-500 font-semibold tracking-wider text-center\\\">\\n          Coming Soon!\\n        </div>\\n      </div>\\n\\n      <div class=\\\"ml-2\\\">\\n        <button class=\\\"btn btn-secondary\\\" @click=\\\"openStats\\\">Live Analytics</button>\\n      </div>\\n\\n      <div class=\\\"\\\">\\n        <div>Live will begin in... &nbsp;</div>\\n        <!--          <div class=\\\"font-semibold\\\">{{ formattedCountdown }} (for demo purposes only)</div>-->\\n        <div class=\\\"countdown font-mono text-2xl\\\">\\n          <!-- Hours (if your countdown includes hours) -->\\n          <span :style=\\\"{ '--value': hours }\\\">{{ hours.toString().padStart(2, '0') }}</span>h\\n          <!-- Minutes -->\\n          <span :style=\\\"{ '--value': minutes }\\\">{{ minutes.toString().padStart(2, '0') }}</span>m\\n          <!-- Seconds -->\\n          <span :style=\\\"{ '--value': seconds }\\\">{{ seconds.toString().padStart(2, '0') }}</span>s\\n        </div>\\n        <div class=\\\"text-xs\\\">for demo purposes only</div>\\n      </div>\\n    </div>\\n  </div>\\n</template>\\n<script setup>\\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\\nimport { useGoLiveStore } from '@/Stores/GoLiveStore'\\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome'\\nimport { computed, onMounted, onUnmounted, ref, watchEffect } from 'vue'\\nimport { useClipboard } from '@vueuse/core'\\n\\nconst appSettingStore = useAppSettingStore()\\nconst goLiveStore = useGoLiveStore()\\n\\nconst showCopiedFullUrl = ref(false)\\nconst showCopiedRtmpUri = ref(false)\\nconst showCopiedStreamKey = ref(false)\\n\\nconst {copy} = useClipboard()\\nconst openObsInstructions = ref(false)\\n\\nconst rtmpUri = computed(() => goLiveStore.fullRtmpUri)\\nconst streamKey = computed(() => goLiveStore.streamKey)\\nconst fullUrl = computed(() => goLiveStore.fullUrl)\\n\\nconst copyFullUrl = () => {\\n  copy(fullUrl.value)\\n  showCopiedFullUrl.value = true\\n  setTimeout(() => showCopiedFullUrl.value = false, 1000)\\n}\\n\\nconst copyRtmpUri = () => {\\n  copy(rtmpUri.value)\\n  showCopiedRtmpUri.value = true\\n  setTimeout(() => showCopiedRtmpUri.value = false, 1000)\\n}\\n\\nconst copyStreamKey = () => {\\n  copy(streamKey.value)\\n  showCopiedStreamKey.value = true\\n  setTimeout(() => showCopiedStreamKey.value = false, 1000)\\n}\\n\\n// Keep a reference to the interval ID so it can be cleared\\nlet intervalId = null\\n\\n// Initial countdown time in seconds (5 minutes * 60 seconds)\\nconst countdownTime = 5 * 60\\n// Reactive state for the countdown\\nconst countdown = ref(countdownTime)\\n\\n// Computed properties for hours, minutes, and seconds\\nconst hours = computed(() => Math.floor(countdown.value / 3600))\\nconst minutes = computed(() => Math.floor((countdown.value % 3600) / 60))\\nconst seconds = computed(() => countdown.value % 60)\\n\\nconst openStats = () => {\\n  window.open('/stats', '_blank')\\n}\\n\\n\\n// Function to start the countdown\\nconst startCountdown = () => {\\n  // // Clear any existing interval to prevent multiple intervals\\n  // if (intervalId !== null) {\\n  //   clearInterval(intervalId)\\n  // }\\n  //\\n  // // Reset countdown to initial value\\n  // countdown.value = countdownTime\\n  //\\n  // // Start a new interval\\n  // intervalId = setInterval(() => {\\n  //   countdown.value--\\n  //\\n  //   if (countdown.value < 0) {\\n  //     clearInterval(intervalId) // Stop the interval\\n  //     intervalId = null // Reset the interval ID\\n  //     // Optionally, you can reset countdown.value to countdownTime or another value here\\n  //   }\\n  // }, 1000)\\n}\\n\\nonMounted(async () => {\\n  // Automatically start the countdown or trigger based on an event\\n  startCountdown()\\n})\\n\\n// Cleanup when the component unmounts\\nonUnmounted(() => {\\n  // Cleanup interval on component unmount (countdown timer)\\n  if (intervalId !== null) {\\n    clearInterval(intervalId)\\n  }\\n})\\n</script>\\n<style scoped>\\n@keyframes fadeOut {\\n  from {\\n    opacity: 1;\\n  }\\n  to {\\n    opacity: 0;\\n  }\\n}\\n</style>\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import script from \"./CancelButton.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CancelButton.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n    <button\n        @click.prevent=\"cancel\"\n        class=\"ml-2 px-4 py-2 text-white bg-orange-600 hover:bg-orange-500 rounded-lg\"\n    >Cancel\n    </button>\n  </div>\n</template>\n\n<script setup>\nimport { Inertia } from \"@inertiajs/inertia\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useUserStore } from '@/Stores/UserStore'\n\nconst appSettingStore = useAppSettingStore()\nconst userStore = useUserStore()\n\nlet props = defineProps({\n  url: String\n})\n\nfunction cancel() {\n  if (appSettingStore.prevUrl) {\n    if (props.url) {\n      Inertia.visit(props.url)\n    } else {\n      Inertia.visit(appSettingStore.prevUrl)\n    }\n  } else {\n    if (props.url) {\n      Inertia.visit(props.url)\n    } else {\n      // Fallback if prevUrl is not available\n      let prevUrl = userStore.isCreator ? '/dashboard' : '/';\n      Inertia.visit(prevUrl);\n    }\n  }\n}\n</script>\n","<template>\n  <div class=\"flex flex-row flex-wrap-reverse w-full justify-between gap-2\">\n    <div>\n      <div class=\"mb-2\">\n        <button @click=\"appSettingStore.btnRedirect('/training/go-live-using-zoom')\"\n                class=\"btn bg-blue-500 hover:bg-blue-700 text-white\">How To Stream From Zoom\n        </button>\n        <button @click=\"openObsInstructions = !openObsInstructions\"\n                class=\"btn bg-blue-500 hover:bg-blue-700 text-white ml-2\"\n                :class=\"{'bg-yellow-800 hover:bg-yellow-900 ':openObsInstructions}\">\n          <span v-if=\"!openObsInstructions\">View Your Stream Key</span>\n          <span v-else>Hide Your Stream Key</span>\n        </button>\n\n      </div>\n      <div v-if=\"openObsInstructions\" class=\"my-4 ml-10\">\n        <h3>Stream from OBS or other software using these details:</h3>\n        <div>RTMP full url: <span v-if=\"fullUrl\" class=\"font-bold\">{{ fullUrl }}</span>\n          &nbsp;<button v-if=\"rtmpUri && streamKey\" @click=\"copyFullUrl\">\n            <font-awesome-icon v-if=\"rtmpUri && streamKey\" icon=\"fa-clipboard\"\n                               class=\"text-blue-500 hover:text-blue-700 hover:cursor-pointer\"/>\n          </button>\n          <span v-if=\"showCopiedFullUrl\" class=\"ml-1 copied-message\" style=\"transition: opacity 0.5s; opacity: 1;\">Copied!</span>\n        </div>\n        <div>RTMP url: <span class=\"font-bold\">{{ rtmpUri }}</span>\n          &nbsp;<button v-if=\"rtmpUri\" @click=\"copyRtmpUri\">\n            <font-awesome-icon v-if=\"rtmpUri\" icon=\"fa-clipboard\"\n                               class=\"text-blue-500 hover:text-blue-700 hover:cursor-pointer\"/>\n          </button>\n          <span v-if=\"showCopiedRtmpUri\" class=\"ml-1 copied-message\" style=\"transition: opacity 0.5s; opacity: 1;\">Copied!</span>\n        </div>\n        <div>RTMP stream key: <span class=\"font-bold\">{{ streamKey }}</span>\n          &nbsp;<button v-if=\"streamKey\" @click=\"copyStreamKey\">\n            <font-awesome-icon v-if=\"streamKey\" icon=\"fa-clipboard\"\n                               class=\"text-blue-500 hover:text-blue-700 hover:cursor-pointer\"/>\n          </button>\n          <span v-if=\"showCopiedStreamKey\" class=\"ml-1 copied-message\"\n                style=\"transition: opacity 0.5s; opacity: 1;\">Copied!</span>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"flex flex-row flex-wrap justify-between grow ml-4 gap-2\">\n      <div v-if=\"!openObsInstructions\"\n           class=\"flex flex-col justify-center border-2 border-green-500 rounded-lg px-2 py-2 gap-2\">\n        <div class=\"flex flex-row gap-2\">\n          <div class=\"mb-2\">\n            <button v-if=\"!goLiveStore.isRecording\" @click=\"goLiveStore.startRecording\"\n                    disabled\n                    class=\"btn btn-sm text-white bg-green-500 hover:bg-green-700 uppercase\"\n            >Start Recording\n            </button>\n            <button v-else disabled @click=\"goLiveStore.stopRecording\"\n                    class=\"btn btn-sm text-white bg-red-700 hover:bg-red-900 uppercase\"\n            >Stop Recording\n            </button>\n          </div>\n          <div class=\"ml-2\">\n            <button v-if=\"!goLiveStore.isLive\" disabled @click=\"goLiveStore.goLive\"\n                    class=\"btn btn-sm text-white bg-green-500 hover:bg-green-700 uppercase\"\n            >Go Live Now\n            </button>\n            <button v-else disabled @click=\"goLiveStore.stopLive\"\n                    class=\"btn btn-sm text-white bg-red-700 hover:bg-red-900 uppercase\"\n            >End Live\n            </button>\n\n          </div>\n        </div>\n        <div v-if=\"!goLiveStore.isRecording || !goLiveStore.isLive\"\n             class=\"text-xs text-green-500 font-semibold tracking-wider text-center\">\n          Coming Soon!\n        </div>\n      </div>\n\n      <div class=\"ml-2\">\n        <button class=\"btn btn-secondary\" @click=\"openStats\">Live Analytics</button>\n      </div>\n\n      <div class=\"\">\n        <div>Live will begin in... &nbsp;</div>\n        <!--          <div class=\"font-semibold\">{{ formattedCountdown }} (for demo purposes only)</div>-->\n        <div class=\"countdown font-mono text-2xl\">\n          <!-- Hours (if your countdown includes hours) -->\n          <span :style=\"{ '--value': hours }\">{{ hours.toString().padStart(2, '0') }}</span>h\n          <!-- Minutes -->\n          <span :style=\"{ '--value': minutes }\">{{ minutes.toString().padStart(2, '0') }}</span>m\n          <!-- Seconds -->\n          <span :style=\"{ '--value': seconds }\">{{ seconds.toString().padStart(2, '0') }}</span>s\n        </div>\n        <div class=\"text-xs\">for demo purposes only</div>\n      </div>\n    </div>\n  </div>\n</template>\n<script setup>\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\nimport { useGoLiveStore } from '@/Stores/GoLiveStore'\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome'\nimport { computed, onMounted, onUnmounted, ref, watchEffect } from 'vue'\nimport { useClipboard } from '@vueuse/core'\n\nconst appSettingStore = useAppSettingStore()\nconst goLiveStore = useGoLiveStore()\n\nconst showCopiedFullUrl = ref(false)\nconst showCopiedRtmpUri = ref(false)\nconst showCopiedStreamKey = ref(false)\n\nconst {copy} = useClipboard()\nconst openObsInstructions = ref(false)\n\nconst rtmpUri = computed(() => goLiveStore.fullRtmpUri)\nconst streamKey = computed(() => goLiveStore.streamKey)\nconst fullUrl = computed(() => goLiveStore.fullUrl)\n\nconst copyFullUrl = () => {\n  copy(fullUrl.value)\n  showCopiedFullUrl.value = true\n  setTimeout(() => showCopiedFullUrl.value = false, 1000)\n}\n\nconst copyRtmpUri = () => {\n  copy(rtmpUri.value)\n  showCopiedRtmpUri.value = true\n  setTimeout(() => showCopiedRtmpUri.value = false, 1000)\n}\n\nconst copyStreamKey = () => {\n  copy(streamKey.value)\n  showCopiedStreamKey.value = true\n  setTimeout(() => showCopiedStreamKey.value = false, 1000)\n}\n\n// Keep a reference to the interval ID so it can be cleared\nlet intervalId = null\n\n// Initial countdown time in seconds (5 minutes * 60 seconds)\nconst countdownTime = 5 * 60\n// Reactive state for the countdown\nconst countdown = ref(countdownTime)\n\n// Computed properties for hours, minutes, and seconds\nconst hours = computed(() => Math.floor(countdown.value / 3600))\nconst minutes = computed(() => Math.floor((countdown.value % 3600) / 60))\nconst seconds = computed(() => countdown.value % 60)\n\nconst openStats = () => {\n  window.open('/stats', '_blank')\n}\n\n\n// Function to start the countdown\nconst startCountdown = () => {\n  // // Clear any existing interval to prevent multiple intervals\n  // if (intervalId !== null) {\n  //   clearInterval(intervalId)\n  // }\n  //\n  // // Reset countdown to initial value\n  // countdown.value = countdownTime\n  //\n  // // Start a new interval\n  // intervalId = setInterval(() => {\n  //   countdown.value--\n  //\n  //   if (countdown.value < 0) {\n  //     clearInterval(intervalId) // Stop the interval\n  //     intervalId = null // Reset the interval ID\n  //     // Optionally, you can reset countdown.value to countdownTime or another value here\n  //   }\n  // }, 1000)\n}\n\nonMounted(async () => {\n  // Automatically start the countdown or trigger based on an event\n  startCountdown()\n})\n\n// Cleanup when the component unmounts\nonUnmounted(() => {\n  // Cleanup interval on component unmount (countdown timer)\n  if (intervalId !== null) {\n    clearInterval(intervalId)\n  }\n})\n</script>\n<style scoped>\n@keyframes fadeOut {\n  from {\n    opacity: 1;\n  }\n  to {\n    opacity: 0;\n  }\n}\n</style>","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-9.use[1]!../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-9.use[2]!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./GoLiveHeader.vue?vue&type=style&index=0&id=526ae918&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./GoLiveHeader.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./GoLiveHeader.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./GoLiveHeader.vue?vue&type=style&index=0&id=526ae918&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-526ae918\"]])\n\nexport default __exports__","import script from \"./VideoJsAux.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./VideoJsAux.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"w-full h-fit bg-yellow-400\">\n<!--    <video ref=\"videoPlayerAux\" :id=\"id\" class=\"vjs-layout-tiny w-full\" playsinline controls autoplay-->\n<!--           muted/>-->\n\n    <video-js :id=\"id\"\n              class=\"video-js vjs-layout-tiny w-96 h-64 bg-blue-400\"\n              autoplay\n              muted\n              playsinline\n              crossorigin=\"anonymous\"\n    >\n      <source :src=\"source\"\n              :type=\"sourceType\">\n    </video-js>\n\n\n\n\n  </div>\n\n\n\n\n</template>\n\n\n<script setup>\nimport { onMounted, onBeforeUnmount } from \"vue\"\nimport videojs from 'video.js'\nimport 'video.js/dist/video-js.css'\nimport { useVideoAuxPlayerStore } from \"@/Stores/VideoAuxPlayerStore\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nconst appSettingStore = useAppSettingStore()\nimport { useStreamStore } from \"@/Stores/StreamStore\"\nimport VideoJs from '@/Components/Global/VideoPlayer/VideoJs/VideoJs.vue'\n\nconst videoAuxPlayerStore = useVideoAuxPlayerStore()\nconst streamStore = useStreamStore()\n\nconst props = defineProps({\n  options: Object,\n  id: String,\n  source: String,\n  sourceType: String\n})\n\nonMounted(() => {\n  const videoElementId = props.id\n  const playerOptions = {\n    // Define your player options here\n    controlBar: {\n      audioTrackButton: false,\n      autoHide: true,\n      captionsButton: false,\n      chaptersButton: false,\n      currentTimeDisplay: false,\n      customControlSpacer: false,\n      descriptionsButton: false,\n      durationDisplay: false,\n      fullscreenToggle: false, // Removes the full screen option\n      liveDisplay: false,\n      pictureInPictureToggle: false,\n      playToggle: false,\n      playbackRateMenuButton: false,\n      progressControl: {seekBar: false},\n      remainingTimeDisplay: false,\n      seekToLive: false,\n      subsCapsButton: false,\n      subtitlesButton: false,\n      timeDivider: false,\n      volumePanel: {\n        inline: true,\n        volumeBar: {\n          vertical: false,\n          liveDisplay: false,\n        },\n      },\n    },\n    userActions: {\n      hotkeys: true, // Enable hotkeys to show/hide controls\n    },\n    controls: true,\n    muted: false, // Start muted to comply with autoplay policies\n    inactivityTimeout: 0,\n    autoplay: true,\n    preload: 'auto',\n    // techOrder: ['html5'],\n    html5: {\n      hls: {\n        overrideNative: !videojs.browser.IS_SAFARI, // Override native HLS on non-Safari browsers\n      },\n    },\n  }\n\n  // Initialize Video.js player\n  const videoAuxPlayer = videojs(videoElementId, playerOptions);\n\n  // Use the store to manage the player\n  videoAuxPlayerStore.setPlayer(videoAuxPlayer);\n\n  // Access the video DOM element controlled by VideoJS\n  const videoDomElement = videoAuxPlayer.el();\n\n  // Disable right-click on the video element\n  videoDomElement.addEventListener('contextmenu', (event) => {\n    event.preventDefault();\n  });\n})\n\nonBeforeUnmount(() => {\n  let videoAuxPlayer = videojs(props.id)\n  videoAuxPlayer.dispose()\n})\n\n</script>","import script from \"./GoLiveAuxVideoPlayer.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./GoLiveAuxVideoPlayer.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"flex flex-col justify-center mt-3 h-fit\">\n    <div class=\"text-xs tracking-wider font-semibold mb-1 pl-11\">LIVE VIDEO STREAM</div>\n\n    <div class=\"flex flex-row flex-wrap\">\n      <div class=\"flex flex-col\">\n\n        <div class=\"px-10 h-fit w-fit\">\n\n          <button @click=\"goLiveStore.reloadPlayer();\"\n                  class=\"btn btn-xs w-full py-1\"\n                  :class=\"liveOrRecordingGrayButtonClass\"\n          ><span v-if=\"goLiveStore.playerIsReloading\" class=\"loading loading-spinner loading-xs\"></span> Reload Player\n          </button>\n          <div v-if=\"goLiveStore.isLive || goLiveStore.isRecording\"\n               class=\"w-full bg-red-700 text-white text-center uppercase font-bold\">\n            <span v-if=\"goLiveStore.isLive\">LIVE</span> <span v-if=\"goLiveStore.isLive && goLiveStore.isRecording\"> + </span>\n            <span v-if=\"goLiveStore.isRecording\">RECORDING</span>\n          </div>\n          <video-js-aux :id=\"`aux-player`\"\n                        :source=\"videoSource\"\n                        :sourceType=\"videoSourceType\"\n                        class=\"\"\n                        :class=\"liveOrRecordingVideoBorderClass\"/>\n\n        </div>\n        <div class=\"flex flex-row px-10 w-full justify-center\">\n          <div class=\"mt-2\">\n            <button v-if=\"!videoPlayerStore.muted\"\n                    class=\"btn btn-warning btn-xs\"\n\n                    @click=\"videoPlayerStore.mute\">\n              <font-awesome-icon icon=\"fa-volume-mute\" class=\"mr-1 cursor-pointer hover:text-blue-500\"/>\n              Mute Main Video Audio\n            </button>\n            <button v-else\n                    class=\"btn btn-neutral text-white btn-xs\"\n                    @click=\"videoPlayerStore.unMute\"\n            >\n              <font-awesome-icon icon=\"fa-volume-up\" class=\"mr-1 cursor-pointer hover:text-blue-500\"/>\n              Turn On Main Video Audio\n            </button>\n          </div>\n          <div class=\"mt-2 ml-2\">\n            <button v-if=\"!videoAuxPlayerStore.muted\"\n                    class=\"btn btn-warning btn-xs\"\n\n                    @click=\"videoAuxPlayerStore.mute\">\n              <font-awesome-icon icon=\"fa-volume-mute\" class=\"mr-1 cursor-pointer hover:text-blue-500\"/>\n              Mute Live Stream Audio\n            </button>\n            <button v-else\n                    class=\"btn btn-neutral text-white btn-xs\"\n\n                    @click=\"videoAuxPlayerStore.unMute\">\n              <font-awesome-icon icon=\"fa-volume-up\" class=\"mr-1 cursor-pointer hover:text-blue-500\"/>\n              Turn On Live Stream Audio\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <div v-if=\"goLiveStore.streamInfo && !goLiveStore.streamInfo.error\" class=\"w-80\"\n           :key=\"goLiveStore.selectedShowId\">\n        <div>\n          <h3>Stream Info</h3>\n          <!--                <RecursivePropertyList :object=\"serverInfo\" />-->\n\n          <p><strong>Width:</strong> {{ goLiveStore.streamInfo?.width }}</p>\n          <p><strong>Height:</strong> {{ goLiveStore.streamInfo?.height }}</p>\n\n          <!-- Assuming you want to display tracks info specifically -->\n          <div v-if=\"goLiveStore.streamInfo?.meta?.tracks\">\n            <h4 class=\"font-semibold\">Tracks</h4>\n            <ul>\n              <li v-for=\"(track, name) in goLiveStore?.streamInfo?.meta.tracks\" :key=\"name\">\n                &middot; {{ name }} - Codec: {{ track.codec }}, Rate: {{ track.rate }}\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n      <div v-if=\"!goLiveStore?.streamInfo && !goLiveStore?.streamInfo?.error\">\n        <div class=\"flex flex-col\">\n          <span class=\"mb-2\">Loading stream data...</span>\n          <span class=\"loading loading-spinner text-neutral\"></span>\n        </div>\n\n      </div>\n      <div v-if=\"goLiveStore?.streamInfo?.error\">\n        <div class=\"flex flex-col\">\n          <span class=\"mb-2\">{{ goLiveStore?.streamInfo?.error }}</span>\n        </div>\n\n      </div>\n\n    </div>\n\n  </div>\n</template>\n<script setup>\nimport { useGoLiveStore } from '@/Stores/GoLiveStore'\nimport { useVideoAuxPlayerStore } from '@/Stores/VideoAuxPlayerStore'\nimport { useVideoPlayerStore } from '@/Stores/VideoPlayerStore'\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome'\nimport { computed, onMounted, onUnmounted, ref, watchEffect } from 'vue'\nimport VideoJsAux from '@/Components/Global/VideoPlayer/VideoJs/VideoJsAux'\nimport videojs from 'video.js'\n\n\nconst goLiveStore = useGoLiveStore()\nconst videoAuxPlayerStore = useVideoAuxPlayerStore()\nconst videoPlayerStore = useVideoPlayerStore()\n\nconst liveOrRecordingGrayButtonClass = computed(() => {\n  if (goLiveStore.isLive || goLiveStore.isRecording) {\n    return 'bg-gray-200 hover:bg-gray-400'\n  } else {\n    return ''\n  }\n})\n\nconst liveOrRecordingVideoBorderClass = computed(() => {\n  if (goLiveStore.isLive || goLiveStore.isRecording) {\n    return 'border-4 border-red-700'\n  } else {\n    return ''\n  }\n})\n\nconst videoSource = ref(videoPlayerStore.mistServerUri + 'hls/' + goLiveStore?.selectedShow?.mist_stream_wildcard.name\n    + '/index.m3u8')\nconst videoSourceType = ref('application/vnd.apple.mpegURL')\n\nonMounted(async() => {\n  console.log('onPlayerReady AUX')\n  // await goLiveStore.fetchStreamInfo()\n})\n\n// Cleanup when the component unmounts\nonUnmounted(() => {\n  videoAuxPlayerStore.disposePlayer()\n})\n\n\n// const source = ref('')\n\n// const videoPlayerStore = useVideoPlayerStore\n\n// if (goLiveStore?.selectedShow?.mist_stream_wildcard?.name) {\n//   source.value = goLiveStore?.selectedShow?.mist_stream_wildcard?.name\n//   goLiveStore.fetchStreamInfo(goLiveStore?.selectedShow?.mist_stream_wildcard?.name)\n// } else if (goLiveStore?.episode?.mist_stream_wildcard?.name) {\n//   source.value = goLiveStore?.episode?.mist_stream_wildcard?.name\n//   goLiveStore.fetchStreamInfo(goLiveStore?.episode?.mist_stream_wildcard?.name)\n// }\n//\n// const reloadPlayer = async () => {\n//   // Create an object and set the 'name' property\n//   const mistStream = {\n//     name: goLiveStore.sourceName\n//   };\n//   await videoAuxPlayerStore.getMistServerUri()\n//   // Now, you can pass the 'mistStream' object to the method\n//   videoAuxPlayerStore.loadMistStreamVideo(mistStream, true);\n//\n//     console.log('source: ' + mistStream.name)\n// };\n\n// const reloadPlayer = () => {\n//   const mistStream.name = goLiveStore.sourceName\n//\n//   videoAuxPlayerStore.loadMistStreamVideo(mistStream)\n//\n\n//\n//   // let sourceUrl = videoPlayerStore.mistServerUri + 'hls/' + source + '/index.m3u8'\n//   // console.log('source url: ' + sourceUrl)\n//   // let sourceType = 'application/vnd.apple.mpegurl'\n//   // let videoJs = videojs('aux-player')\n//   // videoJs.src({'src': sourceUrl, 'type': sourceType})\n//   // // videoAuxPlayerStore.loadNewLiveSource(source, sourceType)\n//   console.log('reload player')\n// }\n</script>","import script from \"./MistStreamPushDestinationForm.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./MistStreamPushDestinationForm.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <!-- You can open the modal using ID.showModal() method -->\n\n  <dialog id=\"mistStreamPushDestinationForm\" class=\"modal\">\n    <div class=\"modal-box\">\n      <form method=\"dialog\">\n        <button class=\"btn btn-sm btn-circle btn-ghost absolute right-2 top-2\">✕</button>\n      </form>\n      <h3 class=\"font-bold text-lg\">{{ mode === 'add' ? 'Add Push Destination' : 'Edit Push Destination' }}</h3>\n\n      <form @submit.prevent=\"submitForm\">\n        <!-- Form fields for your model's attributes -->\n        <div class=\"my-3 flex flex-col space-y-2\">\n          <input v-model=\"form.rtmp_url\"\n                 type=\"text\"\n                 placeholder=\"RTMP URL\"\n                 class=\"input input-bordered\"\n                 required >\n          <input v-model=\"form.rtmp_key\"\n                 type=\"text\"\n                 placeholder=\"RTMP Key\"\n                 class=\"input input-bordered\" >\n          <textarea v-model=\"form.comment\" class=\"textarea textarea-bordered\" placeholder=\"Optional Comment...\" />\n\n          <div v-if=\"notificationStore.errorMessage\" role=\"alert\" class=\"alert alert-error\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\" /></svg>\n            <div class=\"w-full flex flex-row justify-between\">\n              <div>{{ notificationStore.formattedErrorMessage }}</div>\n              <div><button @click.prevent=\"notificationStore.clearErrorMessage\" class=\"btn btn-xs\">OK</button></div>\n            </div>\n          </div>\n          <!-- Add other fields as necessary -->\n          <button type=\"submit\"\n                  :disabled=\"goLiveStore.pushDestinationFormSubmitProcessing\"\n                  class=\"mt-2 btn btn-primary text-white disabled:cursor-not-allowed disabled:bg-gray-400\">\n            <span v-if=\"!goLiveStore.pushDestinationFormSubmitProcessing\">{{ mode    === 'add' ? 'Add' : 'Save Changes' }}</span>\n            <span v-else>Saving<span class=\"my-2 loading loading-dots loading-sm\"></span> Please Wait</span>\n          </button>\n        </div>\n      </form>\n    </div>\n  </dialog>\n</template>\n\n<script setup>\nimport { ref, watchEffect } from 'vue'\nimport { useNotificationStore } from '@/Stores/NotificationStore'\nimport { useGoLiveStore } from '@/Stores/GoLiveStore'\nimport { useMistStore } from '@/Stores/MistStore'\n\nconst notificationStore = useNotificationStore()\nconst goLiveStore = useGoLiveStore()\nconst mistStore = useMistStore()\n\nlet props = defineProps({\n  destinationDetails: Object,\n  mode: String,\n})\n\n// Define your emits\nconst emit = defineEmits(['update-success']);\n\nconst form = ref({\n  show_id: goLiveStore.selectedShowId,\n  stream_name: goLiveStore.streamKey,\n  mist_stream_wildcard_id: props.destinationDetails.mist_stream_wildcard_id,\n  id: props.destinationDetails.id,\n  rtmp_url: props.destinationDetails.rtmp_url,\n  rtmp_key: props.destinationDetails.rtmp_key,\n  comment: props.destinationDetails.comment,\n  errors: '',\n  // Initialize other model attributes here\n});\n\n// Use watchEffect to reactively update form whenever props.destinationDetails changes\nwatchEffect(() => {\n  form.value.mist_stream_wildcard_id = props.destinationDetails.mist_stream_wildcard_id || '';\n  form.value.id = props.destinationDetails.id || '';\n  form.value.rtmp_url = props.destinationDetails.rtmp_url || '';\n  form.value.rtmp_key = props.destinationDetails.rtmp_key || '';\n  form.value.comment = props.destinationDetails.comment || '';\n  // Initialize other model attributes here\n});\n\nconst submitForm = async () => {\n  goLiveStore.pushDestinationFormSubmitProcessing = true\n  let url = '/mist-stream-push-destinations'; // Default URL for adding\n  let method = 'post'; // Default method for adding\n\n  // Check if the mode is 'edit' to adjust the URL and method as needed\n  if (props.mode === 'edit' && props.destinationDetails.id) {\n    url += `/${props.destinationDetails.id}`; // Append the destination ID for the update operation\n    method = 'put'; // Use PUT for updating, assuming your Laravel resource controller follows RESTful conventions\n  }\n\n  try {\n    // Perform the request using Axios\n    const response = await axios({\n      method: method,\n      url: url,\n      data: form.value, // Assuming formData is a reactive ref holding your form data\n    });\n\n    // Handle response here, e.g., show a success message, fetch updated list, etc.\n    // console.log('Success:', response.data);\n    emit('update-success');\n    form.value.errors = ''\n\n    // Assuming the wildcard ID is part of the response or known at this point\n    // const wildcardId = response.data.wildcardId || someOtherWayToDetermineWildcardId();\n    // console.log('just about to send this wildcardID: ' + goLiveStore.wildcardId)\n    // await mistStore.getMistStreamPushDestinations(goLiveStore.wildcardId); // Fetch updated push destinations\n    // Close the modal\n    await goLiveStore.fetchPushDestinations(); // Fetch updated push destinations\n    goLiveStore.pushDestinationFormSubmitProcessing = false\n    document.getElementById('mistStreamPushDestinationForm').close();\n\n  } catch (error) {\n    if (error.response && error.response.data && error.response.data.errors) {\n      // Assign all errors from the response to formErrors\n      notificationStore.errorMessage = error.response.data.errors;\n      goLiveStore.pushDestinationFormSubmitProcessing = false\n    } else {\n      // General error handling\n      // console.error('Submission error', error);\n      notificationStore.setGeneralServiceNotification('Submission error', error)\n      goLiveStore.pushDestinationFormSubmitProcessing = false\n    }\n  }\n}\n\n</script>","import script from \"./GoLivePushDestinations.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./GoLivePushDestinations.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"mx-4 mt-4 mb-2 px-6 py-1\">\n\n    <div\n        class=\"text-sm font-semibold bg-blue-600 text-white text-center w-full border-2 border-blue-600 rounded uppercase px-6 py-1 \">\n      Push Destinations\n    </div>\n\n    <div role=\"alert\" class=\"alert\">\n      <!-- Ensure you're importing Tailwind CSS in your project -->\n      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\"\n           class=\"stroke-current text-blue-500 w-6 h-6\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n      </svg>\n\n      <span>🌟 Our push statuses get a little refresh every minute. Hang tight and keep the creativity flowing – more awesome updates are on their way!</span>\n    </div>\n\n    <div class=\"shadow bg-blue-100 overflow-hidden border-2 border-blue-600 rounded p-6 space-y-3\">\n\n      <div class=\"flex flex-row flex-wrap-reverse w-full justify-between\">\n        <div class=\"mb-2\">\n          <button @click=\"appSettingStore.btnRedirect('/training/how-to-push-to-facebook')\"\n                  class=\"btn btn-sm bg-blue-500 hover:bg-blue-700 rounded-lg text-white\">How To Push To Facebook\n          </button>\n          <button @click=\"appSettingStore.btnRedirect('/training/how-to-push-to-rumble')\"\n                  class=\"btn btn-sm bg-blue-500 hover:bg-blue-700 rounded-lg text-white ml-2 \">How To Push To Rumble\n          </button>\n        </div>\n        <div class=\"flex flex-col gap-2\">\n          <button class=\"btn bg-blue-600 hover:bg-blue-500 text-white font-semibold rounded-lg\"\n                  @click.prevent=\"addDestination\">Add Push\n            Destinations\n          </button>\n          <div class=\"flex flex-row justify-end gap-2\">\n            <span v-if=\"goLiveStore.isProcessingDisableAllAutoPushes\" class=\"loading loading-spinner text-info\"></span>\n            <span v-show=\"!goLiveStore.isProcessingDisableAllAutoPushes\" class=\"text-xs\">Next refresh in... {{ countdown }}</span>\n            <button\n                v-if=\"anyDestinationHasActiveAutoPush\"\n                @click=\"goLiveStore.disableAllAutoPushes()\"\n                :disabled=\"goLiveStore.isProcessingDisableAllAutoPushes\"\n                class=\"py-2 px-4 bg-gray-500 text-white rounded hover:bg-gray-600 transition duration-150 disabled:bg-gray-400 disabled:cursor-not-allowed\"\n            >\n              Disable All Auto Pushes\n            </button>\n          </div>\n\n        </div>\n      </div>\n\n\n      <div class=\"flex flex-row justify-between mb-2 py-2 h-12\">\n        <div><h2 class=\"text-xl font-bold\">Push Destinations</h2>\n        </div>\n        <div v-if=\"goLiveStore.isLoadingDestinations\">\n          <span class=\"loading loading-bars loading-lg text-info mr-2\"> </span><span class=\"text-xs uppercase\">Refreshing...</span>\n        </div>\n      </div>\n\n\n      <div v-if=\"goLiveStore.destinations.length === 0\">\n        <div>Set up <span class=\"font-bold\">push destinations:</span></div>\n        <div>Here you can set additional streaming destinations such as Facebook, YouTube, Rumble, Twitch, etc. and\n          notTV will automatically start pushing to those destinations when you go live.\n        </div>\n      </div>\n      <div v-if=\"goLiveStore.destinations.length > 0\">\n        <div class=\"flex flex-col gap-4\">\n          <div v-for=\"destination in goLiveStore.destinations\" :key=\"destination.id\"\n               class=\"border p-4 rounded-lg shadow flex flex-row items-center gap-4\">\n            <img :src=\"destination.destination_image\" alt=\"Destination Image\"\n                 class=\"w-24 h-24 object-cover rounded-full\"/>\n            <div class=\"flex-grow\">\n              <h3 class=\"text-lg font-semibold\">{{ destination.destination_name }}</h3>\n              <h4 class=\"\">{{ destination.comment }}</h4>\n\n              <p v-if=\"destination.push_is_started\" class=\"text-red-500 font-semibold\">Push Is Active</p>\n              <div class=\"flex gap-2 mt-2\">\n                <button v-if=\"destination.push_is_started\"\n                        @click=\"goLiveStore.stopPush(destination.id, destination.mist_push_id)\"\n                        :disabled=\"goLiveStore.loadingDestinationId === destination.id\"\n                        class=\"py-2 px-4 bg-red-500 text-white rounded hover:bg-red-700 transition duration-150 disabled:bg-gray-400 disabled:cursor-not-allowed\">\n                  Stop Push\n                </button>\n                <button v-else\n                        @click=\"goLiveStore.startPush(destination.id, destination.full_push_uri, destination.mist_push_id)\"\n                        :disabled=\"goLiveStore.loadingDestinationId === destination.id\"\n                        class=\"py-2 px-4 bg-blue-500 text-white rounded hover:bg-blue-700 transition duration-150 disabled:bg-gray-400 disabled:cursor-not-allowed\">\n                  Start Push\n                </button>\n                <button v-if=\"!destination.has_auto_push\"\n                        @click=\"goLiveStore.enableAutoPush(destination.id)\"\n                        :disabled=\"goLiveStore.loadingDestinationId === destination.id\"\n                        class=\"py-2 px-4 bg-yellow-500 text-white rounded hover:bg-yellow-600 transition duration-150 disabled:bg-gray-400 disabled:cursor-not-allowed\">\n                  Enable Auto Push\n                </button>\n                <button v-if=\"destination.has_auto_push\"\n                        @click=\"goLiveStore.disableAutoPush(destination.id)\"\n                        :disabled=\"goLiveStore.loadingDestinationId === destination.id\"\n                        class=\"hidden py-2 px-4 bg-gray-500 text-white rounded hover:bg-gray-600 transition duration-150 disabled:bg-gray-400 disabled:cursor-not-allowed\">\n                  Disable Auto Push\n                </button>\n                <p v-if=\"destination.has_auto_push\" class=\"text-yellow-500 font-semibold\">Auto push\n                  is enabled</p>\n                <span v-if=\"goLiveStore.loadingDestinationId === destination.id\"\n                      class=\"loading loading-spinner text-info\"></span>\n              </div>\n            </div>\n            <div class=\"flex flex-row justify-end\">\n              <!--                  <button @click=\"editDestination(destination.id)\" class=\"py-2 px-4 bg-green-500 text-white rounded hover:bg-green-600 transition duration-150\">Edit</button>-->\n              <!--                  <button @click=\"deleteDestination(destination.id)\" class=\"py-2 px-4 bg-gray-500 text-white rounded hover:bg-gray-600 transition duration-150\">Delete</button>-->\n\n              <button\n                  @click.prevent=\"editDestination(destination)\"\n                  class=\"btn btn-sm text-white font-semibold bg-blue-500 hover:bg-blue-600 rounded-lg\">\n                <font-awesome-icon icon=\"fa-pencil\" class=\"my-1 mx-1\"/>\n              </button>\n            </div>\n            <button\n                @click.prevent=\"goLiveStore.deleteDestination(destination.id)\"\n                class=\"btn btn-sm text-white font-semibold bg-red-500 hover:bg-red-600 rounded-lg\"\n            >\n              <font-awesome-icon icon=\"fa-trash-can\" class=\"my-1 mx-1\"/>\n            </button>\n\n\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <MistStreamPushDestinationForm @update-success=\"mistStore.getMistStreamPushDestinations\"\n                                   :destinationDetails=\"destinationDetails\"\n\n                                   :mode=\"mistStreamPushDestinationFormModalMode\"/>\n    <ToastNotification/>\n  </div>\n</template>\n<script setup>\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\nimport { useMistStore } from '@/Stores/MistStore'\nimport { useGoLiveStore } from '@/Stores/GoLiveStore'\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome'\nimport MistStreamPushDestinationForm from '@/Components/Global/MistStreams/MistStreamPushDestinationForm'\nimport { computed, onMounted, onUnmounted, ref, watch, watchEffect } from 'vue'\nimport ToastNotification from '@/Components/Global/Notifications/Toast/ToastNotification.vue'\n\nconst appSettingStore = useAppSettingStore()\nconst mistStore = useMistStore()\nconst goLiveStore = useGoLiveStore()\n\nconst countdown = ref(15) // Set initial countdown (in seconds)\nconst intervalId = ref(null)\nconst destinationDetails = ref({})\nconst mistStreamPushDestinationFormModalMode = ref('add')\n\nconst anyDestinationHasActiveAutoPush = computed(() => {\n  return goLiveStore.destinations.some(destination => destination.has_auto_push === 1)\n})\n\nconst addDestination = async () => {\n  mistStreamPushDestinationFormModalMode.value = 'add'\n  const wildcardId = goLiveStore.selectedShow?.mist_stream_wildcard?.id\n  destinationDetails.value = {mist_stream_wildcard_id: wildcardId} // Initialize destinationDetails with the wildcard ID\n  document.getElementById('mistStreamPushDestinationForm').showModal()\n}\n\nconst editDestination = async (destination) => {\n  mistStreamPushDestinationFormModalMode.value = 'edit'\n  destinationDetails.value = destination\n  document.getElementById('mistStreamPushDestinationForm').showModal()\n  // console.log(`Editing destination with ID: ${destination}`)\n  // const index = mistStreamPushDestinations.value.findIndex(destination => destination.id === destinationDetails.value.id)\n  // if (index !== -1) {\n  //   mistStreamPushDestinations.value[index].has_auto_push = 0\n  // }\n}\n\n\nconst backgroundFetchPushDestinationsStatus = async () => {\n  if (goLiveStore.wildcardId) {\n    await goLiveStore.backgroundFetchPushDestinations()\n  }\n}\n\nconst fetchPushDestinationsStatus = async () => {\n  if (goLiveStore.wildcardId) {\n    await goLiveStore.fetchPushDestinations()\n  }\n}\n\nconst fetchStreamInfo = async () => {\n  await goLiveStore.fetchStreamInfo()\n}\n\nconst reloadPlayer = async () => {\n  await goLiveStore.reloadPlayer()\n}\n\nconst backgroundFetch = async () => {\n  try {\n    // Fetch data concurrently\n    await Promise.all([\n      fetchPushDestinationsStatus(),\n      fetchStreamInfo(),\n    ]);\n\n    // Reset the countdown at the beginning of the fetch cycle\n    countdown.value = 15;\n\n    // Check if the stream just transitioned from offline to online\n    if (goLiveStore.previousStreamStatus === true && !goLiveStore.streamOffline) {\n      console.log('Stream just transitioned from offline to online, reloading player');\n      await reloadPlayer();\n    } else if (goLiveStore.streamOffline) {\n      console.log('Stream is offline, no action taken');\n    } else {\n      console.log('Stream is online, no action taken');\n    }\n\n    // Update the previous stream status for the next check\n    goLiveStore.previousStreamStatus = goLiveStore.streamOffline;\n  } catch (error) {\n    console.error('Error during background fetch:', error);\n    // Depending on your application's needs, handle the error appropriately\n  }\n};\n\n\n// Decrement the countdown every second\nconst startCountdown = () => {\n  if (intervalId.value !== null) return // Prevent multiple intervals\n  intervalId.value = setInterval(() => {\n    if (countdown.value > 0) {\n      countdown.value -= 1\n    } else {\n      backgroundFetch() // Refresh data when countdown reaches 0\n    }\n  }, 1000)\n}\n\n\nwatch(() => goLiveStore.selectedShow, async (newVal, oldVal) => {\n  if (newVal !== '') {\n    await backgroundFetch()\n    await fetchPushDestinationsStatus()\n    // Additional logic to load the video based on selectedShow can be added here\n  }\n})\n\nonMounted(async () => {\n  // Fetch immediately and then set up an interval for periodic fetching\n  startCountdown()\n  await backgroundFetch()\n  // intervalId = setInterval(backgroundFetch, 60000) // Fetch every 60 seconds\n})\n\nonUnmounted(() => {\n  // Clear the interval when the component unmounts to prevent memory leaks\n  clearInterval(intervalId.value)\n})\n\n\n</script>","<template>\n  <div class=\"mt-4 mb-8 px-6 py-1 w-full \">\n    <div\n        class=\"text-sm font-semibold bg-orange-600 text-white text-center w-full border-2 border-orange-600 rounded uppercase px-6 py-1 \">\n      Commercial Breaks\n    </div>\n    <div class=\"shadow bg-orange-100 overflow-hidden border-2 border-orange-600 rounded py-6 px-10 space-y-3 w-full\">\n      <div></div>\n      <div>Click the <span class=\"font-bold\">Trigger Commercial Break</span> button below to go to commercial.</div>\n      <div>You will see a countdown timer until the show resumes. This will be 1-2 minutes.</div>\n      <div>As a notTV creator, your voice matters. How can this feature be improved to better serve you and your\n        sponsors?\n        Please email and let us know: <a href=\"mailto:hello@not.tv\" target=\"_blank\"\n                                         class=\"text-blue-500 hover:text-blue-600\">hello@not.tv</a>\n      </div>\n      <div class=\"w-full flex justify-center pt-4\">\n        <button onclick=\"setCommercialBreakNotice.showModal()\"\n                class=\"bg-orange-600 hover:bg-orange-500 text-white font-semibold rounded-lg px-4 py-2\">Trigger\n          Commercial Break\n        </button>\n      </div>\n    </div>\n\n  </div>\n</template>\n<script setup>\n</script>","import { render } from \"./GoLiveCommercialBreaks.vue?vue&type=template&id=4e85c934\"\nconst script = {}\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import script from \"./GoLive.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./GoLive.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"mx-0 md:mx-4 mt-4 mb-2 px-2 md:px-6 py-1\">\n    <div\n        class=\"text-sm font-semibold  text-white text-center w-full border-2 rounded uppercase px-0 md:px-6 py-1 \"\n        :class=\"[ goLiveStore.isLive ? 'bg-gray-600 border-gray-600 ' : 'bg-red-600 border-red-600' ]\">\n      <span v-if=\"goLiveStore.isLive\">Now Live</span><span v-else>Live Setup</span>\n    </div>\n    <div class=\"shadow overflow-hidden border-2 border-red-600 rounded p-2 md:p-6\"\n         :class=\"[ goLiveStore.isLive ? 'bg-gray-100' : 'bg-red-100' ]\">\n\n      <GoLiveHeader />\n      <GoLiveAuxVideoPlayer />\n      <GoLivePushDestinations :key=\"goLiveStore.selectedShowId\"/>\n\n    </div>\n\n    <GoLiveCommercialBreaks />\n\n  </div>\n</template>\n\n<script setup>\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\nimport { useVideoPlayerStore } from '@/Stores/VideoPlayerStore'\nimport { useVideoAuxPlayerStore } from '@/Stores/VideoAuxPlayerStore'\nimport { useGoLiveStore } from '@/Stores/GoLiveStore'\nimport { useMistStore } from '@/Stores/MistStore'\n\nimport GoLiveHeader from '@/Components/Pages/GoLive/GoLiveHeader.vue'\nimport GoLiveAuxVideoPlayer from '@/Components/Pages/GoLive/GoLiveAuxVideoPlayer.vue'\nimport GoLivePushDestinations from '@/Components/Pages/GoLive/GoLivePushDestinations.vue'\nimport GoLiveCommercialBreaks from '@/Components/Pages/GoLive/GoLiveCommercialBreaks.vue'\n\nconst appSettingStore = useAppSettingStore()\nconst videoPlayerStore = useVideoPlayerStore()\nconst videoAuxPlayerStore = useVideoAuxPlayerStore()\nconst goLiveStore = useGoLiveStore()\nconst mistStore = useMistStore()\n\n// Initialize fetching of server information\ngoLiveStore.updateAndGetStreamKey()\ngoLiveStore.fetchStreamInfo()\ngoLiveStore.fetchRtmpUri()\n\n// const reloadPlayer = () => {\n//   const videoPlayerStore = useVideoPlayerStore\n//   let source = null\n//   if (goLiveStore?.selectedShow?.mist_stream_wildcard?.name) {\n//     source = goLiveStore?.selectedShow?.mist_stream_wildcard?.name\n//     goLiveStore.fetchStreamInfo(goLiveStore?.selectedShow?.mist_stream_wildcard?.name)\n//   } else if (goLiveStore?.episode?.mist_stream_wildcard?.name) {\n//     source = goLiveStore?.episode?.mist_stream_wildcard?.name\n//     goLiveStore.fetchStreamInfo(goLiveStore?.episode?.mist_stream_wildcard?.name)\n//   }\n//   let sourceUrl = videoPlayerStore.mistServerUri + 'hls/' + source + '/index.m3u8'\n//   console.log('source url: ' + sourceUrl)\n//   let sourceType = 'application/vnd.apple.mpegurl'\n//   let videoJs = videojs('aux-player')\n//   videoJs.src({'src': sourceUrl, 'type': sourceType})\n//   // videoAuxPlayerStore.loadNewLiveSource(source, sourceType)\n//   console.log('reload player')\n// }\n</script>","import script from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"mx-4 my-4\">\n    <div class=\"alert alert-info mt-4\"\n         v-if=\"props.flash.message\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" class=\"stroke-current shrink-0 w-6 h-6\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n      </svg>\n      <span>{{ props.flash.message }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-success mt-4 mx-3\"\n         v-if=\"props.flash.success\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.success }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-warning mt-4 mx-3\"\n         v-if=\"props.flash.warning\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"/>\n      </svg>\n      <span>{{ props.flash.warning }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-error mt-4 mx-3\"\n         v-if=\"props.flash.error\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.error }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n  </div>\n\n</template>\n\n<script setup>\nimport { Inertia } from \"@inertiajs/inertia\"\nimport { computed } from \"vue\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\n\nconst appSettingStore = useAppSettingStore()\n\nappSettingStore.showFlashMessage = true\n\nlet props = defineProps({\n  flash: Object,\n\n})\n\nconst messageType = computed(() => ({\n  'text-green-700 bg-green-100 dark:bg-green-200 dark:text-green-800': props.flash.success,\n  'text-blue-700 bg-blue-100 dark:bg-blue-200 dark:text-blue-800': props.flash.message,\n  'text-orange-700 bg-orange-100 dark:bg-orange-200 dark:text-orange-800': props.flash.warning,\n  'text-red-700 bg-red-100 dark:bg-red-200 dark:text-red-800': props.flash.error,\n}))\n\nconst clearFlashMessage = async () => {\n  await Inertia.post(route('flash.clear'));\n  Inertia.reload();\n};\n</script>\n","import script from \"./PopUpModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./PopUpModal.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n    <dialog :id=\"id\" class=\"modal\">\n      <div class=\"modal-box text-center my-auto border-2 border-secondary\" data-theme=\"dark\">\n        <h2 class=\"font-bold text-3xl text-secondary\">\n          <slot name=\"header\"></slot>\n        </h2>\n        <p class=\"py-4 text-xl\">\n          <slot name=\"main\"></slot>\n        </p>\n        <div class=\"modal-action justify-center w-full\">\n          <form method=\"dialog\">\n            <!-- if there is a button in form, it will close the modal -->\n            <button @click=\"notificationStore.showPopUpModal = false\" class=\"btn btn-secondary\">Okay</button>\n          </form>\n        </div>\n      </div>\n    </dialog>\n  </div>\n</template>\n<script setup>\nimport { useNotificationStore } from \"@/Stores/NotificationStore\"\n\nconst notificationStore = useNotificationStore()\n\ndefineProps({\n  id: String,\n})\n</script>\n","import script from \"./ManageShowEpisodeNoticeModals.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ManageShowEpisodeNoticeModals.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./GoLive.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./GoLive.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <Head title=\"Go Live\"/>\n  <!--        <template #header>-->\n  <!--            <h2 class=\"font-semibold text-xl text-gray-800 leading-tight\">-->\n  <!--                Dashboard-->\n  <!--            </h2>-->\n  <!--        </template>-->\n\n  <!--        <div class=\"py-12\">-->\n  <!--            <div class=\"max-w-7xl mx-auto sm:px-6 lg:px-8\">-->\n  <!--                <div class=\"bg-white overflow-hidden shadow-xl sm:rounded-lg\">-->\n\n  <div class=\"place-self-center flex flex-col gap-y-3\">\n    <div id=\"topDiv\" class=\"bg-white text-black p-5 mb-10\">\n\n      <Message v-if=\"appSettingStore.showFlashMessage\" :flash=\"$page.props.flash\"/>\n\n      <div class=\"flex justify-between mx-4 px-6 w-full\">\n        <div class=\"grid grid-cols-1 grid-rows-2\">\n          <h1 class=\"text-3xl font-semibold\">Go Live</h1>\n        </div>\n        <div>\n          <CancelButton/>\n        </div>\n        <!--                <div class=\"grid grid-cols-1 grid-rows-2\">-->\n        <!--                    <div class=\"justify-self-end\">-->\n        <!--                        <Link :href=\"`/dashboard`\"><button-->\n        <!--                            class=\"px-4 py-2 text-white bg-blue-600 hover:bg-blue-500 rounded-lg\"-->\n        <!--                        >Dashboard</button>-->\n        <!--                        </Link>-->\n        <!--                    </div>-->\n        <!--                </div>-->\n      </div>\n      <div v-if=\"goLiveStore.shows && goLiveStore.shows.length > 0\" class=\"mb-6 px-6 w-full\">\n        <label class=\"block mb-2 uppercase font-bold text-xs text-light text-neutral\"\n               for=\"show\"\n        >\n          Select Show To Go Live On\n        </label>\n\n        <select\n            class=\"select select-info select-lg w-full p-2 block my-2 uppercase font-bold text-lg\"\n            v-model=\"goLiveStore.selectedShowId\"\n            @change=\"reloadPlayer\"\n        >\n          <option disabled selected >Select show</option>\n          <option v-for=\"show in goLiveStore.shows\"\n                  :key=\"show.id\" :value=\"show.id\">{{ show.name }}\n          </option>\n\n        </select>\n\n\n      </div>\n\n      <div v-else class=\"bg-black w-3/4 text-center px-10 py-6 text-white mx-auto border-red-700 border-2\">\n        You don't have any shows to go live with... please check your show(s).\n      </div>\n\n      <div v-if=\"goLiveStore.selectedShow\" class=\"text-3xl font-semibold text-center w-full\">\n        <Link :href=\"`/shows/${goLiveStore.selectedShow.slug}/manage`\">{{goLiveStore.selectedShow.name}}</Link>\n      </div>\n\n      <GoLive v-if=\"goLiveStore.selectedShow && goLiveStore.selectedShow.mist_stream_wildcard_id\" />\n      <div v-if=\"goLiveStore.selectedShow && !goLiveStore.selectedShow.mist_stream_wildcard_id\" class=\"flex flex-col justify-items-center text-center px-16\">\n        <div v-if=\"generateStreamKeyError\" class=\"text-red-700\">{{generateStreamKeyError}}</div>\n        <div v-if=\"generateStreamKeyProcessing && !generateStreamKeyError\" class=\"\">\n          <div>Stream key is being generated...</div>\n          <div><span class=\"loading loading-infinity loading-lg text-primary\"></span></div>\n        </div>\n        <div v-if=\"!generateStreamKeyProcessing && !generateStreamKeyError\">\n          <div class=\"mb-3\">Please generate a stream key:</div>\n          <div><button @click=\"handleGenerateStreamKey\" class=\"btn btn-sm w-fit bg-green-500 hover:bg-green-700 text-white\">generate key</button></div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <!--                </div>-->\n  <!--            </div>-->\n  <!--        </div>-->\n\n  <ManageShowEpisodeNoticeModals />\n</template>\n\n<script setup>\nimport { usePageSetup } from '@/Utilities/PageSetup'\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\nimport { useVideoPlayerStore } from '@/Stores/VideoPlayerStore'\nimport { useVideoAuxPlayerStore } from '@/Stores/VideoAuxPlayerStore'\nimport { useGoLiveStore } from '@/Stores/GoLiveStore'\nimport Message from '@/Components/Global/Modals/Messages'\nimport CancelButton from '@/Components/Global/Buttons/CancelButton'\nimport GoLive from '@/Components/Global/GoLive/GoLive'\nimport { onMounted, ref } from 'vue'\nimport videojs from 'video.js'\nimport ManageShowEpisodeNoticeModals from '@/Components/Pages/ShowEpisodes/Elements/ManageShowEpisodeNoticeModals.vue'\nimport Button from '@/Jetstream/Button.vue'\n\nusePageSetup('goLive')\n\nconst appSettingStore = useAppSettingStore()\nconst videoPlayerStore = useVideoPlayerStore()\nconst videoAuxPlayerStore = useVideoAuxPlayerStore()\nconst goLiveStore = useGoLiveStore()\n\nconst props = defineProps({\n  shows: Object\n})\n\nonMounted(async () => {\n  goLiveStore.isEpisode = null\n  goLiveStore.episode = null\n  goLiveStore.fetchShows().then(() => {\n    if (goLiveStore.preSelectedShowId) {\n      goLiveStore.selectedShowId = goLiveStore.preSelectedShowId;\n    }\n  });\n});\n\n// const selectedShowId = ref('');\n// const selectedShow = computed(() => {\n//   return props.shows?.find(show => show.id === selectedShowId.value) || null;\n// });\n// const selectedShow = computed(() => goLiveStore.selectedShow);\n\nconst generateStreamKeyProcessing = ref(false)\nconst generateStreamKeyError = ref('')\n\n// const reloadPlayer = () => {\n//   let source = goLiveStore?.selectedShow?.mist_stream_wildcard?.name\n//   let sourceUrl = videoAuxPlayerStore.mistServerUri + 'hls/' + source + '/index.m3u8'\n//   console.log('source url: ' + sourceUrl)\n//   let sourceType = 'application/vnd.apple.mpegurl'\n//   let videoJs = videojs('aux-player')\n//   videoJs.src({'src': sourceUrl, 'type': sourceType})\n//   // videoAuxPlayerStore.loadNewLiveSource(source, sourceType)\n//   goLiveStore.fetchStreamInfo(goLiveStore?.selectedShow?.mist_stream_wildcard?.name);\n//   console.log('reload player')\n// }\n\nconst onChangeShow = async (event) => {\n  goLiveStore.setSelectedShowId(event);\n  await goLiveStore.fetchStreamInfo(goLiveStore?.selectedShow?.mist_stream_wildcard?.name);\n  await goLiveStore.reloadPlayer();\n  // videoAuxPlayerStore.loadNewVideo(goLiveStore.selectedShow.mist)\n};\n\n\n\nconst handleGenerateStreamKey = async () => {\n  generateStreamKeyProcessing.value = true; // Start processing\n\n  try {\n    // Await the store's generateStreamKey method\n    await goLiveStore.generateStreamKey();\n    // Optional: Perform any additional actions after the key has been generated\n    await goLiveStore.fetchStreamInfo(goLiveStore?.selectedShow?.mist_stream_wildcard?.name);\n    await goLiveStore.reloadPlayer();\n  } catch (error) {\n    // Check if the error is from Axios and has a response object\n    let displayError = 'Failed to generate stream key: ';\n    if (error.response && error.response.data && error.response.data.error) {\n      // If there's an error message in the response data, use it\n      displayError += error.response.data.error;\n    } else if (error.message) {\n      // Fallback to the error's message if no detailed response data is available\n      displayError += error.message;\n    } else {\n      // Generic error text if neither of the above is available\n      displayError += 'An unexpected error occurred.';\n    }\n    console.log(displayError);\n    generateStreamKeyError.value = displayError; // Display the detailed error message on the page\n  } finally {\n    generateStreamKeyProcessing.value = false; // End processing\n  }\n};\n\n// const generateStreamKey = () => {\n//   // Ensure selectedShowId is accessible and has a value\n//   if (!goLiveStore.selectedShowId.value) {\n//     console.error(\"No show selected\");\n//     return; // Exit the function if no show is selected\n//   }\n//\n//   axios.post(`/go-live/shows/${goLiveStore.selectedShowId.value}/stream-key`)\n//       .then(response => {\n//         // Handle the successful response here\n//         console.log(\"Stream key generated:\", response.data);\n//         // You might want to do something with the response data, like updating a data property\n//       })\n//       .catch(error => {\n//         // Handle any errors here\n//         console.error(\"Error generating stream key:\", error.response ? error.response.data : error);\n//       });\n// }\n\n// watch(goLiveStore.preSelectedShowId, (newVal, oldVal) => {\n//   if (newVal !== '') {\n//     // Assuming the video player is ready to be initialized at this point\n//     // const videoPlayer = videojs('main-player');\n//     videoPlayerStore.mute()\n//     // goLiveStore.selectedShowId = selectedShowId\n//\n//     // Additional logic to load the video based on selectedShowId can be added here\n//   }\n// });\n</script>\n\n"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","initialState","displayEpisodeGoLiveComponent","isEpisode","episode","preSelectedShowId","selectedShowId","shows","streamKey","wildcardId","isLive","isRecording","streamInfo","rtmpUri","destinations","isLoadingDestinations","loadingDestinationId","isProcessingDisableAllAutoPushes","playerIsReloading","pushDestinationFormSubmitProcessing","mistServerUri","previousStreamStatus","useGoLiveStore","defineStore","state","actions","assign","this","fetchShows","_this","_callee","response","_context","axios","get","data","t0","generateStreamKey","_this2","_callee2","_context2","post","concat","console","log","stream_key","selectedShow","mist_stream_wildcard","mist_stream_wildcard_id","updateAndGetStreamKey","_show$mist_stream_wil","_this3","show","find","id","setSelectedShowId","showId","updateSelectedShow","_this4","goLive","stopLive","startRecording","stopRecording","fetchStreamInfo","_this5","_callee3","notificationStore","_context3","useNotificationStore","fetchMistServerUri","streamName","message","success","setToastNotification","fetchRtmpUri","_this6","_callee4","_context4","fetch","ok","text","clearStreamInfo","toggleDisplayEpisodeGoLiveComponent","_this$episode","show_id","updateEpisode","_this7","_callee5","videoAuxPlayerStore","uriResponse","_context5","useVideoAuxPlayerStore","setMistServerUri","reloadPlayer","_this8","_callee6","mistStream","_context6","loadMistStreamVideo","fetchPushDestinations","_this9","_callee7","_response$data","_context7","backgroundFetch","status","backgroundFetchPushDestinations","_this10","_callee8","_context8","deleteDestination","destinationId","_this11","_callee9","_context9","confirm","filter","destination","setGeneralServiceNotification","startPush","fullPushUri","_this12","_callee10","_response$data2","index","_context10","destination_id","full_push_uri","stream_name","findIndex","push_is_started","stopPush","_this13","_callee11","_response$data3","_context11","enableAutoPush","_this14","_callee12","_response$data4","_context12","has_auto_push","disableAutoPush","_this15","_callee13","_response$data5","_context13","disableAllAutoPushes","_this16","_callee14","_response$data6","_context14","getters","_show$mist_stream_wil2","_show$mist_stream_wil3","fullRtmpUri","fullUrl","activeDestinations","sourceName","_state$selectedShow","_state$episode","streamOffline","_state$streamInfo$err","_state$streamInfo","apiRequest","challenge","apiResponse","apiActiveStreams","mistUsername","mistPassword","mistStatus","Boolean","mistDisplayPushForm","mistDisplay","String","mistNewHashedPassword","mistStreamPushDestinations","useMistStore","getMistStreamPushDestinations","getMistStreamPushAutoList","getMistStreamPushList","player","eventListenersAttached","videoPlayerLoaded","class","videoContainerClass","videoSourceIdSrc1","videoSourceIdSrc2","videoSourceIdSrc3","videoSourceTypeSrc1","videoSourceTypeSrc2","videoSourceTypeSrc3","firstPlayVideoSourceType","firstPlayVideoSource","videoName","videoSource","videoSourceType","videoPoster","nextSource","previousSource","currentView","currentChannelId","currentChannelName","currentShow","currentShowEpisode","currentVideo","hasVideo","controls","muted","paused","currentTime","duration","formattedTime","blue","videoIsYoutube","videoUploadComplete","getMistServerUri","setPlayer","playerInstance","initializePlayer","attachEventListeners","nextTick","useAudioStore","ensureAudioContextAndNodesReady","ready","play","on","handleTimeUpdate","handleFullscreenChange","handlePlay","handlePause","handleError","detachEventListeners","stopAudioLevelMonitoring","off","disposePlayer","dispose","prepareForNewVideoSource","source","useChannelStore","clearChannel","loadNewVideo","resetPlayback","pause","formatDuration","durationInSeconds","Math","floor","map","part","toString","padStart","join","_this$player","isFullscreen","_this$player2","_this$player3","_this$player4","code","makeBlue","toggleMute","unMute","mute","togglePlay","videoJs","videojs","load","loadNewLiveSource","sourceType","fullSourceUrl","src","back","fullscreen","requestFullscreen","getVideoCurrentTime","videoCurrentTime","getSourceDetails","videoSrc","mediaType","video_url","cdn_endpoint","cloud_folder","folder","file_name","audioStore","_this$getSourceDetail","deferAudioSetup","playNewVideo","loadNewSourceFromYouTube","loadNewLiveSourceFromRumble","loadNewSourceFromUrl","loadNewSourceFromMist","loadNewSourceFromFile","filePath","loadExternalSourceVideo","loadPlaylistVideos","stayMuted","shouldUnmute","basePath","loadVideoFromFile","video","setNowPlayingInfoVideoFile","nowPlayingType","nowPlayingName","useStreamStore","currentChannel","setNowPlayingInfoShow","clearNowPlayingInfo","showStore","useShowStore","firstPlayVideo","setName","setEpisodeUrl","slug","setUrl","setEpisodeName","makeVideoPiP","makeVideoFullPage","appSettingStore","useAppSettingStore","userStore","useUserStore","fullPage","hidePage","ott","isMobile","makeVideoTopRight","currentPageIsStream","makeVideoWelcomePage","loggedIn","usePageSetup","pageName","videoPlayerStore","useVideoPlayerStore","currentPage","showFlashMessage","pageIsHidden","window","innerWidth","showOttButtons","pageReload","location","reload","Inertia","event","search","shouldScrollToTop","requestAnimationFrame","topDiv","document","getElementById","scrollIntoView","behavior","scrollTo","setPrevUrl","noLayout","___CSS_LOADER_EXPORT___","module","props","__props","cancel","prevUrl","url","visit","isCreator","goLiveStore","showCopiedFullUrl","ref","showCopiedRtmpUri","showCopiedStreamKey","copy","useClipboard","openObsInstructions","computed","copyFullUrl","setTimeout","copyRtmpUri","copyStreamKey","countdown","hours","minutes","seconds","openStats","open","onMounted","onUnmounted","intervalId","options","locals","videoElementId","playerOptions","controlBar","audioTrackButton","autoHide","captionsButton","chaptersButton","currentTimeDisplay","customControlSpacer","descriptionsButton","durationDisplay","fullscreenToggle","liveDisplay","pictureInPictureToggle","playToggle","playbackRateMenuButton","progressControl","seekBar","remainingTimeDisplay","seekToLive","subsCapsButton","subtitlesButton","timeDivider","volumePanel","inline","volumeBar","vertical","userActions","hotkeys","inactivityTimeout","autoplay","preload","html5","hls","overrideNative","browser","IS_SAFARI","videoAuxPlayer","el","addEventListener","preventDefault","onBeforeUnmount","liveOrRecordingGrayButtonClass","liveOrRecordingVideoBorderClass","_goLiveStore$selected","emit","__emit","form","destinationDetails","rtmp_url","rtmp_key","comment","errors","watchEffect","submitForm","_ref2","mode","close","errorMessage","mistStore","mistStreamPushDestinationFormModalMode","anyDestinationHasActiveAutoPush","some","addDestination","_ref","showModal","editDestination","_x","fetchPushDestinationsStatus","_ref4","_ref5","_ref6","_ref7","all","watch","_ref8","newVal","oldVal","_x2","_x3","setInterval","clearInterval","_createElementVNode","_createTextVNode","href","target","onclick","script","_createElementBlock","_hoisted_1","_hoisted_4","clearFlashMessage","flash","warning","route","generateStreamKeyProcessing","generateStreamKeyError","handleGenerateStreamKey","_ref3","_goLiveStore$selected2","displayError"],"sourceRoot":""}
{"version":3,"file":"js/1702.js","mappings":"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","sources":["webpack:///./resources/js/Stores/NewsStore.js","webpack:///./resources/js/Utilities/PageSetup.js","webpack:///./resources/js/Components/Global/TextEditor/TipTapEditor.vue?fb26","webpack:///./resources/js/Components/Pages/News/CategoryCitySelector.vue?ddd2","webpack:///./resources/js/Components/Global/Buttons/CancelButton.vue?b7c6","webpack:///./resources/js/Components/Global/Buttons/CancelButton.vue","webpack:///./resources/js/Components/Global/Modals/Messages.vue?dfe9","webpack:///./resources/js/Components/Global/Modals/Messages.vue","webpack:///./resources/js/Components/Global/TextEditor/TipTapButtons.vue?06dd","webpack:///./resources/js/Components/Global/TextEditor/TipTapButtons.vue","webpack:///./resources/js/Components/Global/TextEditor/TipTapEditor.vue","webpack:///./resources/js/Components/Global/TextEditor/TipTapEditor.vue?bda9","webpack:///./resources/js/Components/Global/TextEditor/TipTapEditor.vue?927e","webpack:///./resources/js/Components/Pages/News/CategoryCitySelector.vue","webpack:///./resources/js/Components/Pages/News/CategoryCitySelector.vue?6e5a","webpack:///./resources/js/Components/Pages/News/CategoryCitySelector.vue?c726","webpack:///./resources/js/Jetstream/ValidationErrors.vue?5fdc","webpack:///./resources/js/Jetstream/ValidationErrors.vue","webpack:///./resources/js/Pages/News/Stories/{$id}/Edit.vue?b8ae","webpack:///./resources/js/Pages/News/Stories/{$id}/Edit.vue"],"sourcesContent":["import { defineStore } from \"pinia\";\nimport { computed, ref } from 'vue'\n\nconst initialState = () => ({\n    newsStory: [],\n    newsArticleIdTiptop: '',\n    newsArticleTitleTiptop: '',\n    newsArticleContentTiptop: '',\n    content_json: '',\n    news_category_id: null,\n    news_category_sub_id: null,\n    categories: [],\n    subcategories: [],\n    city_id: null,\n    province_id: null,\n    federal_electoral_district_id: null,\n    subnational_electoral_district_id: null,\n    type: '',\n    displayText: '',\n    country: [],\n    selectedCategory: [], // initially no selected category\n    selectedSubcategory: [],\n    selectedLocation: [], // the selected location\n    locationSearch: [], // array of locations for the dropdown\n    citySelectDropdownVisible: false, // visibility of the dropdown\n    focusedIndex: 0, // for managing focused item in the dropdown\n    searchQuery: null,\n    filters: [],\n    search: '',\n    formErrors: [],\n\n    // Computed property for displaying\n})\n\nexport const useNewsStore = defineStore('newsStore', {\n    state: initialState,\n    actions: {\n        reset() {\n            // Reset the store to its original state (clear all data)\n            Object.assign(this, initialState());\n            // await this.setSelectedLocation()\n        },\n        // load NewsStory props into NewsStore\n        loadNewsStory(newsStory) {\n            this.newsStory = newsStory;\n        },\n        // Action to set the selected Category\n        setSelectedCategory() {\n            let matchingCategory = this.categories.find(category => category.id === this.news_category_id);\n            this.selectedCategory = matchingCategory || null;\n            if (this.news_category_sub_id) {\n                this.getSubcategories() // After setting the category, get the subcategory\n                this.getSelectedSubcategory(); // Call after subcategories are populated\n            }\n            // Check if the selected category is 3 (Local News)\n            if (this.news_category_id === 3) {\n                this.setSelectedLocation(); // Set the Location for Local News\n            } else {\n                this.resetLocationIds(); // Reset location-related IDs for other categories\n            }\n        },\n        // Action to get the Subcategories\n        getSubcategories() {\n            console.log('start getting subcategories');\n\n            // Find the matching category using selectedCategory.id\n            const matchingCategory = this.categories.find(category => category.id === this.selectedCategory.id);\n\n            if (matchingCategory) {\n                // Set the subcategories from the matched category\n                this.subcategories = matchingCategory.news_category_subs;\n                console.log('subcategories updated:', this.subcategories);\n            } else {\n                // Handle the case where no matching category is found\n                this.subcategories = []; // Set subcategories to an empty array\n                console.log('No matching category found');\n            }\n        },\n\n        getSelectedSubcategory() {\n            console.log('start getting selected subcategory');\n\n            // Find the subcategory that matches the news_category_sub_id\n            const matchingSubcategory = this.subcategories.find(subcategory => subcategory.id === this.news_category_sub_id);\n\n            if (matchingSubcategory) {\n                // Set the selectedSubcategory to the found subcategory\n                this.selectedSubcategory = matchingSubcategory;\n                console.log('selected subcategory updated:', this.selectedSubcategory);\n            } else {\n                // Handle the case where no matching subcategory is found\n                this.selectedSubcategory = null;\n                console.log('No matching subcategory found');\n            }\n        },\n\n        // Action to set the selected Location\n        setSelectedLocation() {\n            let matchingLocation = null;\n\n            // Simplified conditional logic\n            if (this.city_id) {\n                matchingLocation = this.locationSearch.find(location => location.city_id === this.city_id);\n            } else if (this.province_id) {\n                matchingLocation = this.locationSearch.find(location => location.province_id === this.province_id);\n            } else if (this.federal_electoral_district_id) {\n                matchingLocation = this.locationSearch.find(location => location.federal_electoral_district_id === this.federal_electoral_district_id);\n            } else if (this.subnational_electoral_district_id) {\n                matchingLocation = this.locationSearch.find(location => location.subnational_electoral_district.id === this.subnational_electoral_district_id);\n            }\n\n            // Handling null case\n            if (matchingLocation) {\n                this.selectedLocation = matchingLocation;\n\n                // Set displayText based on type\n                switch (this.type) {\n                    case 'city':\n                        this.displayText = 'City';\n                        this.type = 'city';\n                        break;\n                    case 'town':\n                        this.displayText = 'Town';\n                        this.type = 'town';\n                        break;\n                    case 'province':\n                        this.displayText = 'Province';\n                        this.type = 'province';\n                        break;\n                    case 'territory':\n                        this.displayText = 'Territory';\n                        this.type = 'territory';\n                        break;\n                    case 'federalElectoralDistrict':\n                        this.displayText = 'Federal Electoral District';\n                        this.type = 'federalElectoralDistrict';\n                        break;\n                    case 'subnationalElectoralDistrict':\n                        this.displayText = 'Subnational Electoral District';\n                        this.type = 'subnationalElectoralDistrict';\n                        break;\n                    default:\n                        this.displayText = '';\n                        break;\n                }\n            } else {\n                // Handle the case where no matching location is found\n                this.selectedLocation = null;\n                this.selectedType = null;\n                this.city_id = null; // or keep the existing value?\n                this.type = null;\n                this.displayText = '';\n            }\n        },\n// Action to set the selected Location\n        updateSelectedLocation(location) {\n            if (!location) {\n                // Handle the case where no location is passed\n                this.selectedLocation = null;\n                this.displayText = '';\n                this.resetLocationIds(null);\n                return;\n            }\n\n            // Update the selectedLocation based on the type of location\n            this.selectedLocation = location;\n            this.displayText = this.getDisplayTextForType(location.type);\n\n            // Update the relevant IDs based on the type\n            this.city_id = null;\n            this.province_id = null;\n            this.federal_electoral_district_id = null;\n            this.subnational_electoral_district_id = null;\n\n            switch (location.type) {\n                case 'city':\n                case 'town':\n                    this.city_id = location.city_id;\n                    // Assuming province_id is also part of city data\n                    this.province_id = location.province_id || null;\n                    break;\n                case 'province':\n                case 'territory':\n                    this.province_id = location.province_id;\n                    break;\n                case 'federalElectoralDistrict':\n                    this.federal_electoral_district_id = location.federal_electoral_district_id;\n                    break;\n                case 'subnationalElectoralDistrict':\n                    this.subnational_electoral_district_id = location.subnational_electoral_district_id;\n                    break;\n                // Add more cases as needed for other types\n            }\n        },\n\n// Helper function to get display text based on type\n        getDisplayTextForType(type) {\n            switch (type) {\n                case 'city':\n                    this.type = 'city';\n                    return 'City';\n                case 'town':\n                    this.type = 'town';\n                    return 'Town';\n                case 'province':\n                    this.type = 'province';\n                    return 'Province';\n                case 'territory':\n                    this.type = 'territory';\n                    return 'Territory';\n                case 'federalElectoralDistrict':\n                    this.type = 'federalElectoralDistrict';\n                    return 'Federal Electoral District';\n                case 'subnationalElectoralDistrict':\n                    this.type = 'subnationalElectoralDistrict';\n                    return 'Subnational Electoral District';\n                default:\n                    return '';\n            }\n        },\n\n        // Helper function to reset location IDs\n        resetLocationIds(matchingLocation) {\n            this.city_id = null;\n            this.province_id = null;\n            this.federal_electoral_district_id = null;\n            this.subnational_electoral_district_id = null;\n\n            if (matchingLocation) {\n                switch (matchingLocation.type) {\n                    case 'city':\n                        this.city_id = matchingLocation.city_id;\n                        this.province_id = matchingLocation.province_id; // Assuming province_id is also part of city data\n                        break;\n                    case 'province':\n                    case 'territory':\n                        this.province_id = matchingLocation.province_id;\n                        break;\n                    case 'federalElectoralDistrict':\n                        this.federal_electoral_district_id = matchingLocation.federal_electoral_district_id;\n                        break;\n                    case 'subnationalElectoralDistrict':\n                        this.subnational_electoral_district_id = matchingLocation.subnational_electoral_district_id;\n                        break;\n                    // ... handle other types if needed\n                }\n            }\n        },\n\n    },\n\n\n})\n\n","import { onBeforeMount, onMounted } from 'vue'\nimport { useUserStore } from \"@/Stores/UserStore\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useVideoPlayerStore } from \"@/Stores/VideoPlayerStore\"\nimport { Inertia } from \"@inertiajs/inertia\"\n\nexport function usePageSetup(pageName) {\n    const userStore = useUserStore()\n    const appSettingStore = useAppSettingStore()\n    const videoPlayerStore = useVideoPlayerStore()\n\n    appSettingStore.currentPage = pageName\n    appSettingStore.showFlashMessage = true\n    appSettingStore.pageIsHidden = false\n\n    if (userStore.isMobile) {\n        appSettingStore.ott = 0\n    }\n\n    videoPlayerStore.makeVideoTopRight()\n\n    onBeforeMount(() => {\n        // reload page\n        if (appSettingStore.pageReload) {\n            appSettingStore.pageReload = false\n            window.location.reload(true);\n        }\n    });\n\n    onMounted(() => {\n        // Check if the URL contains query strings\n        const hasQueryStrings = window.location.search !== '';\n\n        // Only scroll into view if there are no query strings\n        if (!hasQueryStrings) {\n            const topDiv = document.getElementById(\"topDiv\")\n            if (topDiv) {\n                topDiv.scrollIntoView()\n            }\n        }\n        // Only update if we're not already on this page to avoid overwriting with the current URL\n        appSettingStore.setPrevUrl()\n        appSettingStore.noLayout = false\n        appSettingStore.showOttButtons = true\n        // Inertia.reload()\n\n    });\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".tiptap[data-v-e54e9b18]{>*+*[data-v-e54e9b18]{margin-top:.75em}}.character-count[data-v-e54e9b18]{color:#868e96;margin-left:1rem;margin-top:1rem}.tiptap p.is-editor-empty[data-v-e54e9b18]:first-child:before{color:#adb5bd;content:attr(data-placeholder);float:left;height:0;pointer-events:none}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/Components/Global/TextEditor/TipTapEditor.vue\"],\"names\":[],\"mappings\":\"AAgHA,yBACE,sBACE,gBACF,CACF,CAEA,kCAGE,aAAc,CADd,gBAAiB,CADjB,eAGF,CAGA,8DAGE,aAAc,CAFd,8BAA+B,CAC/B,UAAW,CAGX,QAAS,CADT,mBAEF\",\"sourcesContent\":[\"<template>\\n  <TipTapButtons :editor=\\\"editor\\\"/>\\n  <div\\n      class=\\\"tiptap hide-scrollbar h-auto overflow-y-auto min-h-[13rem] max-h-[96rem] mb-2 pb-2 bg-gray-50 border border-1 border-gray-300 focus:outline-none text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500\\\">\\n    <editor-content :editor=\\\"editor\\\" class=\\\"news-story\\\"/>\\n    <div class=\\\"character-count\\\" v-if=\\\"editor\\\">\\n      {{ editor.storage.characterCount.characters() }}/{{ limit }} characters\\n      <br>\\n      {{ editor.storage.characterCount.words() }} words\\n    </div>\\n\\n  </div>\\n</template>\\n\\n<script setup>\\nimport { watch } from 'vue'\\nimport { Editor, EditorContent } from '@tiptap/vue-3'\\nimport StarterKit from '@tiptap/starter-kit'\\nimport { History } from '@tiptap/extension-history'\\nimport { useNewsStore } from '@/Stores/NewsStore'\\nimport TipTapButtons from '@/Components/Global/TextEditor/TipTapButtons'\\nimport { TextStyle } from '@tiptap/extension-text-style'\\nimport { Color } from '@tiptap/extension-color'\\nimport Typography from '@tiptap/extension-typography'\\nimport CharacterCount from '@tiptap/extension-character-count'\\nimport Placeholder from '@tiptap/extension-placeholder'\\nimport Paragraph from '@tiptap/extension-paragraph'\\nimport { FontFamily } from '@tiptap/extension-font-family'\\nimport { TextAlign } from '@tiptap/extension-text-align'\\nimport { Strike } from '@tiptap/extension-strike'\\nimport { Underline } from '@tiptap/extension-underline'\\nimport { Subscript } from '@tiptap/extension-subscript'\\nimport { Superscript } from '@tiptap/extension-superscript'\\nimport Link from '@tiptap/extension-link'\\n\\nconst newsStore = useNewsStore()\\n\\nconst limit = 5000\\n\\n// Watch for changes in the content and update the editor\\nwatch(() => newsStore.content_json, (newContent) => {\\n  if (editor && newContent) {\\n    editor.commands.setContent(newContent)\\n  }\\n}, {immediate: true})\\n\\nconst editor = new Editor({\\n  content: newsStore.newsArticleContentTiptop,\\n  extensions: [\\n    StarterKit,\\n    Document,\\n    Paragraph,\\n    Text,\\n    TextStyle,\\n    FontFamily,\\n    Color,\\n    Typography,\\n    Strike,\\n    Underline,\\n    Subscript,\\n    Superscript,\\n    TextAlign.configure({\\n      types: ['heading', 'paragraph'],\\n    }),\\n    Link.configure({\\n      openOnClick: true,\\n    }),\\n    CharacterCount.configure({\\n      limit: limit,\\n    }),\\n    Placeholder.configure({\\n      // Use a placeholder:\\n      placeholder: 'Write something …',\\n      // Use different placeholders depending on the node type:\\n      // placeholder: ({ node }) => {\\n      //   if (node.type.name === 'heading') {\\n      //     return 'What’s the title?'\\n      //   }\\n\\n      //   return 'Can you add some further context?'\\n      // },\\n    }),\\n  ],\\n  onUpdate: ({editor}) => {\\n    newsStore.newsArticleContentTiptop = editor.getJSON()\\n\\n    // Auto-save -> triggered on every change,\\n    // currently disabled. Needs to be throttled.\\n    //\\n    // axios.post('/news/save', { id: newsStore.newsArticleIdTiptop, body:newsStore.newsArticleContentTiptop, title:newsStore.newsArticleTitleTiptop })\\n  },\\n  autofocus: true,\\n  editorProps: {\\n    attributes: {\\n      class: 'h-auto min-h-[12rem] max-h-[96rem] overflow-y-auto block w-full p-2.5 focus:outline-none',\\n    },\\n  },\\n})\\n\\n// onBeforeUnmount(() => {\\n//     // this isn't working, I think it's\\n//     // needed for the history extension.\\n//     editor.destroy()\\n// })\\n\\nHistory.configure({\\n  depth: 10,\\n})\\n\\n</script>\\n\\n<style scoped>\\n.tiptap {\\n  > * + * {\\n    margin-top: 0.75em;\\n  }\\n}\\n\\n.character-count {\\n  margin-top: 1rem;\\n  margin-left: 1rem;\\n  color: #868e96;\\n}\\n\\n/* Placeholder (at the top) */\\n.tiptap p.is-editor-empty:first-child::before {\\n  content: attr(data-placeholder);\\n  float: left;\\n  color: #adb5bd;\\n  pointer-events: none;\\n  height: 0;\\n}\\n\\n\\n/* Placeholder (on every new line) */\\n/*.tiptap p.is-empty::before {\\n  content: attr(data-placeholder);\\n  float: left;\\n  color: #adb5bd;\\n  pointer-events: none;\\n  height: 0;\\n}*/\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".select-container[data-v-1f17ae21]{max-width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/Components/Pages/News/CategoryCitySelector.vue\"],\"names\":[],\"mappings\":\"AA6PA,mCACE,cAAe,CACf,eAAgB,CAEhB,sBAAuB,CADvB,kBAEF\",\"sourcesContent\":[\"<template>\\n\\n\\n\\n  <!-- The category select -->\\n  <div class=\\\"flex flex-col py-4 px-6\\\">\\n\\n    <div class=\\\"bg-gray-200 rounded-lg\\\">\\n      <div class=\\\"px-4 py-4 font-semibold text-xs uppercase\\\">Category</div>\\n      <div class=\\\"px-4 pb-4\\\">\\n        <label for=\\\"categorySelect\\\" class=\\\"text-sm font-medium text-gray-900 dark:text-gray-300 pr-4\\\">Select Category:</label>\\n        <select required\\n                v-model=\\\"newsStore.selectedCategory\\\"\\n                id=\\\"categorySelect\\\"\\n                class=\\\"rounded\\\"\\n                @change=\\\"onCategoryChange\\\"\\n        >\\n          <option :value=\\\"{ id: null }\\\" >Choose a category</option>\\n          <option v-for=\\\"category in newsStore.categories\\\" :key=\\\"category.id\\\" :value=\\\"category\\\">{{ category.name }}</option>\\n        </select>\\n      </div>\\n      <div v-if=\\\"newsStore.selectedCategory.name\\\" class=\\\"flex flex-col justify-left px-4 py-4\\\">\\n        <div class=\\\"font-semibold text-xs uppercase text-indigo-900\\\">{{newsStore.selectedCategory.name}}</div>\\n        <div v-if=\\\"newsStore.selectedCategory\\\" class=\\\"px-6 py-4 text-indigo-800\\\">\\n          {{newsStore.selectedCategory.description}}\\n        </div>\\n      </div>\\n    </div>\\n\\n\\n\\n    <!-- The location select -->\\n    <div v-if=\\\"newsStore.selectedCategory && newsStore.selectedCategory.id === 3\\\" class=\\\"mt-8 bg-gray-200 rounded-lg\\\">\\n      <div class=\\\"px-4 py-4 font-semibold text-xs uppercase\\\">Location</div>\\n      <div class=\\\"flex flex-col pb-4 px-6\\\">\\n        <div class=\\\"text-sm font-semibold text-gray-900 dark:text-gray-300 py-1\\\">Please select the city, town, province or electoral district:</div>\\n        <div class=\\\"w-full mr-4 relative\\\">\\n\\n          <input\\n              v-model=\\\"searchInput\\\"\\n              type=\\\"search\\\"\\n              class=\\\"w-full rounded-lg mt-2\\\"\\n              placeholder=\\\"Search...\\\"\\n              @focus=\\\"newsStore.citySelectDropdownVisible = true\\\"\\n              @blur=\\\"handleInputBlur\\\"\\n              @keydown=\\\"handleKeydown\\\"\\n          />\\n          <span v-if=\\\"newsStore.selectedLocation\\\" class=\\\"relative xl:absolute inset-y-0 right-0 flex items-center pr-4\\\">\\n                <!-- Styled display text -->\\n                <span class=\\\"text-gray-500\\\">{{ newsStore.displayText }}</span>\\n              </span>\\n\\n          <ul v-if=\\\"newsStore.citySelectDropdownVisible && locationSearch.length > 0\\\" class=\\\"absolute z-10 w-full bg-white mt-1 max-h-60 rounded-lg shadow-lg overflow-auto border border-gray-200\\\">\\n            <li v-for=\\\"(location, index) in newsStore.locationSearch\\\"\\n                :key=\\\"location.id\\\"\\n                  class=\\\"cursor-pointer select-none relative py-2 pl-3 pr-9 hover:bg-gray-100\\\"\\n                  :class=\\\"{'bg-gray-200': index === newsStore.focusedIndex.value, 'dropdown-item': true, [`dropdown-item-${index}`]: true}\\\"\\n                  @click=\\\"inspectLocation(location)\\\"\\n              >\\n\\n                <span v-if=\\\"location.type === 'city' || location.type === 'town'\\\">{{ location.name }}, <span class=\\\"text-gray-600\\\">{{ location.province_name }}</span></span>\\n                <span v-if=\\\"location.type === 'province'\\\">{{ location.name }} &nbsp;&nbsp;<span class=\\\"uppercase text-xs font-semibold text-gray-600\\\">Province</span></span>\\n                <span v-if=\\\"location.type === 'territory'\\\">{{ location.name }} &nbsp;&nbsp;<span class=\\\"uppercase text-xs font-semibold text-gray-600\\\">Territory</span></span>\\n                <span v-if=\\\"location.type === 'federalElectoralDistrict'\\\">{{ location.name }} &nbsp;&nbsp;<span class=\\\"uppercase text-xs font-semibold text-gray-600\\\">Federal Electoral District</span></span>\\n                <span v-if=\\\"location.type === 'subnationalElectoralDistrict'\\\">{{ location.name }}</span>\\n\\n              </li>\\n            </ul>\\n            <div\\n                v-if=\\\"newsStore.formErrors.type\\\"\\n                class=\\\"text-sm text-red-600\\\"\\n            >\\n              {{ newsStore.formErrors.type }}\\n            </div>\\n          </div>\\n        </div>\\n    </div>\\n\\n\\n\\n\\n\\n\\n    <!-- The sub-category select -->\\n    <div class=\\\"mt-8 bg-gray-200 rounded-lg\\\">\\n      <div class=\\\"px-4 py-4 font-semibold text-xs uppercase\\\">Sub-category</div>\\n      <div class=\\\"flex flex-wrap py-4 px-4\\\">\\n        <div class=\\\"flex flex-col\\\">\\n          <label for=\\\"subcategorySelect\\\" class=\\\"text-sm font-medium text-gray-900 dark:text-gray-300 pr-4\\\">Select Subcategory:</label>\\n          <span class=\\\"italic text-sm font-thin text-gray-900 dark:text-gray-300\\\">(optional)</span>\\n        </div>\\n        <div v-if=\\\"newsStore.selectedCategory\\\" class=\\\"flex flex-wrap\\\">\\n          <select v-model=\\\"newsStore.selectedSubcategory\\\" id=\\\"subcategorySelect\\\" class=\\\"rounded\\\">\\n            <option :value=\\\"{ id: null }\\\">Choose a sub-category</option> <!-- Add a blank option -->\\n            <option v-for=\\\"subcategory in newsStore.subcategories\\\" :key=\\\"subcategory.id\\\" :value=\\\"subcategory\\\">{{ subcategory.name }}</option>\\n          </select>\\n        </div>\\n    </div>\\n\\n    <div v-if=\\\"newsStore.selectedSubcategory\\\" class=\\\"flex-col justify-left py-4 px-4\\\">\\n      <div v-if=\\\"newsStore.selectedSubcategory\\\" class=\\\"font-semibold text-xs uppercase text-indigo-900\\\">{{newsStore.selectedSubcategory.name}}</div>\\n      <div v-if=\\\"newsStore.selectedSubcategory\\\" class=\\\"px-6 py-4 text-indigo-800\\\">\\n        {{newsStore.selectedSubcategory.description}}\\n      </div>\\n    </div>\\n    </div>\\n\\n    <div\\n        v-if=\\\"newsStore.formErrors.news_category_id\\\"\\n        class=\\\"text-sm text-red-600\\\"\\n    >\\n      {{ newsStore.formErrors.news_category_id }}\\n    </div>\\n\\n  </div>\\n\\n</template>\\n\\n<script setup>\\nimport { Inertia } from '@inertiajs/inertia'\\nimport { usePage } from '@inertiajs/inertia-vue3';\\nimport { watch, ref, computed, onMounted } from 'vue'\\nimport { debounce, throttle } from 'lodash'\\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\\nimport { useNewsStore } from '@/Stores/NewsStore'\\n\\nconst appSettingStore = useAppSettingStore()\\nconst newsStore = useNewsStore()\\n\\n// Define props and other logic\\nlet props = defineProps({\\n  newsStory: Object,\\n  country: Object,\\n  categories: Object,\\n  locationSearch: Object,\\n  filters: Object,\\n  errors: Object,\\n  searchPath: String,\\n});\\n// const { props } = usePage();\\n\\n// Watch for changes in locationSearch prop and update the store\\nwatch(() => props.locationSearch, (newLocationSearch) => {\\n  newsStore.locationSearch = newLocationSearch;\\n}, { deep: true });\\n\\n// If you need to watch the filters as well\\nwatch(() => props.filters, (newFilters) => {\\n  if (newFilters && newFilters.search !== undefined) {\\n    newsStore.search = newFilters.search;\\n  }\\n}, { deep: true });\\n\\nonMounted(() => {\\n  // Initialize newsStore.search with the initial search value from props\\n  newsStore.search = props.filters.search;\\n});\\n\\nconst onCategoryChange = () => {\\n  newsStore.getSubcategories();\\n  newsStore.getSelectedSubcategory();\\n};\\n\\n// const selectLocation = (location) => {\\n//   console.log('selectLocation called with:', location);\\n//   newsStore.updateSelectedLocation(location);\\n// };\\nconst inspectLocation = (location) => {\\n  newsStore.updateSelectedLocation(location);\\n  console.log('Clicked location:', location);\\n};\\n\\nfunction selectLocation(location) {\\n  newsStore.updateSelectedLocation(location);\\n}\\n// watch(newsStore.focusedIndex, (newValue) => {\\n//   if (newValue >= 0) {\\n//     const item = document.querySelector(`.dropdown-item-${newValue}`);\\n//     item?.scrollIntoView({ block: 'center' });\\n//   }\\n// });\\n\\nconst searchInput = computed({\\n  get() {\\n    // If there's a selected location, show its name; otherwise, show the search value\\n    const location = newsStore.selectedLocation;\\n    if (location) {\\n      if (location.type === 'city' || location.type === 'town') {\\n        return `${location.name}, ${location.province_name}`;\\n      }\\n      return location.name;\\n    }\\n    return newsStore.search;\\n  },\\n  set(value) {\\n    // Update the search value in the store when the user types\\n    newsStore.search = value;\\n\\n    // Optionally, clear or update selectedLocation if necessary\\n    // For example, if you want to clear the selected location when the user types:\\n    if (newsStore.selectedLocation?.name !== value) {\\n      newsStore.selectedLocation = null;\\n    }\\n  }\\n});\\n\\nwatch(() => newsStore.search, throttle((value) => {\\n  let url;\\n  if (appSettingStore.currentPage === 'newsEdit') {\\n    url = `/newsStory/${newsStore.newsStory.slug}/edit`;\\n  } else if (appSettingStore.currentPage === 'newsCreate') {\\n    url = '/newsStory/create';\\n  }\\n\\n  if (url) {\\n    Inertia.get(url, { search: value }, {\\n      preserveState: true,\\n      replace: true,\\n    });\\n  }\\n}, 300));\\n\\nconst showDropdown = () => {\\n  newsStore.citySelectDropdownVisible = true;\\n};\\n\\nconst handleInputBlur = () => {\\n  // Delay hiding dropdown to allow click event on dropdown item to be processed\\n  setTimeout(() => {\\n    newsStore.citySelectDropdownVisible = false;\\n  }, 200);\\n};\\n\\nconst handleKeydown = (event) => {\\n  if (event.key === 'Enter') {\\n    // Prevent default action of the Enter key\\n    event.preventDefault();\\n\\n    if (newsStore.locationSearch.length > 0 && newsStore.focusedIndex.value !== null) {\\n      const selectedLocation = newsStore.locationSearch[newsStore.focusedIndex.value];\\n      if (selectedLocation) {\\n        newsStore.selectedLocation = selectedLocation; // Set the selected location\\n        newsStore.updateSelectedLocation(selectedLocation); // Update the location in the store\\n        newsStore.citySelectDropdownVisible = false; // Close the dropdown\\n      }\\n    }\\n  }\\n  // Handle other keydown events if necessary\\n};\\n\\n</script>\\n\\n<style scoped>\\n.select-container {\\n  max-width: 100%; /* Adjust the maximum width as needed */\\n  overflow: hidden;\\n  white-space: nowrap;\\n  text-overflow: ellipsis;\\n}\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import script from \"./CancelButton.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CancelButton.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n    <button\n        @click.prevent=\"cancel\"\n        class=\"ml-2 px-4 py-2 text-white bg-orange-600 hover:bg-orange-500 rounded-lg\"\n    >Cancel\n    </button>\n  </div>\n</template>\n\n<script setup>\nimport { Inertia } from \"@inertiajs/inertia\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\nimport { useUserStore } from '@/Stores/UserStore'\n\nconst appSettingStore = useAppSettingStore()\nconst userStore = useUserStore()\n\nlet props = defineProps({\n  url: String\n})\n\nfunction cancel() {\n  if (appSettingStore.prevUrl) {\n    if (props.url) {\n      Inertia.visit(props.url)\n    } else {\n      Inertia.visit(appSettingStore.prevUrl)\n    }\n  } else {\n    if (props.url) {\n      Inertia.visit(props.url)\n    } else {\n      // Fallback if prevUrl is not available\n      let prevUrl = userStore.isCreator ? '/dashboard' : '/';\n      Inertia.visit(prevUrl);\n    }\n  }\n}\n</script>\n","import script from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Messages.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"mx-4 my-4\">\n    <div class=\"alert alert-info mt-4\"\n         v-if=\"props.flash.message\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" class=\"stroke-current shrink-0 w-6 h-6\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n      </svg>\n      <span>{{ props.flash.message }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-success mt-4 mx-3\"\n         v-if=\"props.flash.success\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.success }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-warning mt-4 mx-3\"\n         v-if=\"props.flash.warning\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"/>\n      </svg>\n      <span>{{ props.flash.warning }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n    <div class=\"alert alert-error mt-4 mx-3\"\n         v-if=\"props.flash.error\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"stroke-current shrink-0 h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n      </svg>\n      <span>{{ props.flash.error }}</span>\n      <button class=\"text-xs ml-12\" @click=\"clearFlashMessage\"> Close</button>\n    </div>\n  </div>\n\n</template>\n\n<script setup>\nimport { Inertia } from \"@inertiajs/inertia\"\nimport { computed } from \"vue\"\nimport { useAppSettingStore } from \"@/Stores/AppSettingStore\"\n\nconst appSettingStore = useAppSettingStore()\n\nappSettingStore.showFlashMessage = true\n\nlet props = defineProps({\n  flash: Object,\n\n})\n\nconst messageType = computed(() => ({\n  'text-green-700 bg-green-100 dark:bg-green-200 dark:text-green-800': props.flash.success,\n  'text-blue-700 bg-blue-100 dark:bg-blue-200 dark:text-blue-800': props.flash.message,\n  'text-orange-700 bg-orange-100 dark:bg-orange-200 dark:text-orange-800': props.flash.warning,\n  'text-red-700 bg-red-100 dark:bg-red-200 dark:text-red-800': props.flash.error,\n}))\n\nconst clearFlashMessage = async () => {\n  await Inertia.post(route('flash.clear'));\n  Inertia.reload();\n};\n</script>\n","import script from \"./TipTapButtons.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TipTapButtons.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div>\n    <button tabindex=\"-1\"\n            @click.prevent=\"editor.chain().focus().toggleBold().run()\"\n            class=\"py-1 px-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-bold\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive('bold') }\">\n      B\n    </button>\n    <button tabindex=\"-1\"\n            @click.prevent=\"editor.chain().focus().toggleItalic().run()\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive('italic') }\">\n      i\n    </button>\n    <button tabindex=\"-1\"\n            @click.prevent=\"editor.chain().focus().toggleHeading({ level: 1 }).run()\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive('heading', { level: 1}) }\">\n      h1\n    </button>\n    <button tabindex=\"-1\"\n            @click.prevent=\"editor.chain().focus().toggleHeading({ level: 2 }).run()\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive('heading', { level: 2}) }\">\n      h2\n    </button>\n    <button tabindex=\"-1\"\n            @click.prevent=\"editor.chain().focus().toggleHeading({ level: 3 }).run()\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive('heading', { level: 3}) }\">\n      h3\n    </button>\n    <button tabindex=\"-1\"\n            @click.prevent=\"editor.chain().focus().setTextAlign('left').run()\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive({ textAlign: 'left' }) }\">\n      left\n    </button>\n    <button tabindex=\"-1\"\n            @click.prevent=\"editor.chain().focus().setTextAlign('center').run()\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive({ textAlign: 'center' }) }\">\n      center\n    </button>\n    <button tabindex=\"-1\"\n            @click.prevent=\"editor.chain().focus().setTextAlign('right').run()\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive({ textAlign: 'right' }) }\">\n      right\n    </button>\n    <button tabindex=\"-1\"\n            @click.prevent=\"editor.chain().focus().setTextAlign('justify').run()\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive({ textAlign: 'justify' }) }\">\n      justify\n    </button>\n    <button tabindex=\"-1\"\n            @click.prevent=\"editor.chain().focus().toggleBulletList().run()\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive('bulletList') }\">\n      bullet list\n    </button>\n    <button tabindex=\"-1\"\n            @click.prevent=\"editor.chain().focus().toggleOrderedList().run()\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive('orderedList') }\">\n      ordered list\n    </button>\n\n\n<!--    currently tipTap is readonly-editor. We need to convert JSON to HTML\n        then we can enable the link buttons.-->\n    <button hidden\n            tabindex=\"-1\"\n            @click.prevent=\"setLink\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive('link') }\">\n      setLink\n    </button>\n    <!--    currently tipTap is readonly-editor. We need to convert JSON to HTML\n        then we can enable the link buttons.-->\n    <button hidden\n            tabindex=\"-1\"\n            @click.prevent=\"editor.chain().focus().unsetLink().run()\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :disabled=\"!editor.isActive('link')\">\n      unsetLink\n    </button>\n\n\n    <button tabindex=\"-1\"\n            @click.prevent=\"editor.chain().focus().toggleCodeBlock().run()\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive('codeBlock') }\">\n      code block\n    </button>\n    <button tabindex=\"-1\"\n            @click.prevent=\"editor.chain().focus().toggleBlockquote().run()\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive('blockquote') }\">\n      blockquote\n    </button>\n    <button tabindex=\"-1\"\n            @click.prevent=\"editor.chain().focus().setHorizontalRule().run()\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\">\n      horizontal rule\n    </button>\n    <button tabindex=\"-1\"\n            @click.prevent=\"editor.chain().focus().toggleStrike().run()\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive('strike') }\">\n      strike\n    </button>\n    <button tabindex=\"-1\"\n            @click.prevent=\"editor.chain().focus().toggleUnderline().run()\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive('underline') }\">\n      underline\n    </button>\n    <button tabindex=\"-1\"\n            @click.prevent=\"editor.chain().focus().toggleSubscript().run()\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive('subscript') }\">\n      subscript\n    </button>\n    <button tabindex=\"-1\"\n            @click.prevent=\"editor.chain().focus().toggleSuperscript().run()\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive('superscript') }\">\n      superscript\n    </button>\n    <button tabindex=\"-1\"\n            @click.prevent=\"editor.chain().focus().undo().run()\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 disabled:hover:bg-gray-200 disabled:cursor-not-allowed disabled:text-black rounded-lg font-italic\"\n            :disabled=\"!editor.can().chain().focus().undo().run()\">\n      undo\n    </button>\n    <button tabindex=\"-1\"\n            @click.prevent=\"editor.chain().focus().redo().run()\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 disabled:hover:bg-gray-200 disabled:cursor-not-allowed disabled:text-black rounded-lg font-italic\"\n            :disabled=\"!editor.can().chain().focus().redo().run()\">\n      redo\n    </button>\n    <!-- Text color dropdown -->\n    <button tabindex=\"-1\" @click.prevent=\"toggleTextColor('#000000')\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\">\n      black\n    </button>\n    <button tabindex=\"-1\" @click.prevent=\"toggleTextColor('#F98181')\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive('textStyle', { color: '#F98181' }) }\">\n      red\n    </button>\n    <button tabindex=\"-1\" @click.prevent=\"toggleTextColor('#70CFF8')\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive('textStyle', { color: '#70CFF8' }) }\">\n      blue\n    </button>\n    <button tabindex=\"-1\" @click.prevent=\"toggleTextColor('#958DF1')\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive('textStyle', { color: '#958DF1' }) }\">\n      purple\n    </button>\n    <button tabindex=\"-1\" @click.prevent=\"toggleTextColor('#FBBC88')\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive('textStyle', { color: '#FBBC88' }) }\">\n      orange\n    </button>\n    <button tabindex=\"-1\" @click.prevent=\"toggleTextColor('#FAF594')\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive('textStyle', { color: '#FAF594' }) }\">\n      yellow\n    </button>\n    <button tabindex=\"-1\" @click.prevent=\"toggleTextColor('#94FADB')\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive('textStyle', { color: '#94FADB' }) }\">\n      teal\n    </button>\n    <button tabindex=\"-1\" @click.prevent=\"toggleTextColor('#B9F18D')\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive('textStyle', { color: '#B9F18D' }) }\">\n      green\n    </button>\n\n    <button tabindex=\"-1\" @click.prevent=\"editor.chain().focus().setFontFamily('Inter').run()\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive('textStyle', { fontFamily: 'Inter' }) }\">\n      Inter\n    </button>\n    <button tabindex=\"-1\" @click.prevent=\"editor.chain().focus().setFontFamily('Comic Sans MS, Comic Sans').run()\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive('textStyle', { fontFamily: 'Comic Sans MS, Comic Sans' }) }\">\n      Comic Sans\n    </button>\n    <button tabindex=\"-1\" @click.prevent=\"editor.chain().focus().setFontFamily('serif').run()\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive('textStyle', { fontFamily: 'serif' }) }\">\n      serif\n    </button>\n    <button tabindex=\"-1\" @click.prevent=\"editor.chain().focus().setFontFamily('monospace').run()\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive('textStyle', { fontFamily: 'monospace' }) }\">\n      monospace\n    </button>\n<!--    Cursive is the same as Comic Sans.... find a different font... -->\n    <button hidden\n            tabindex=\"-1\"\n            @click.prevent=\"editor.chain().focus().setFontFamily('cursive').run()\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\"\n            :class=\"{ 'bg-gray-600 text-white': editor.isActive('textStyle', { fontFamily: 'cursive' }) }\">\n      cursive\n    </button>\n<!--    They can toggle the fonts... we don't really need this do we? -->\n    <button hidden\n            tabindex=\"-1\"\n            @click.prevent=\"editor.chain().focus().unsetFontFamily().run()\"\n            class=\"py-1 px-3 ml-2 mb-2 text-black hover:text-white bg-gray-200 hover:bg-gray-600 rounded-lg font-italic\">\n      unsetFontFamily\n    </button>\n  </div>\n\n</template>\n\n<script setup>\n\nimport { ref } from 'vue'\n\nconst props = defineProps({\n  editor: Object,\n})\n\nlet textColor = null; // Variable to hold the currently set text color\n\nconst toggleTextColor = (color) => {\n  if (textColor === color) {\n    props.editor.chain().focus().unsetColor().run()\n    textColor = null;\n  } else {\n    props.editor.chain().focus().setColor(color).run()\n    textColor = color;\n  }\n};\n\n\n\n\nconst setLink = () => {\n  const previousUrl = props.editor.getAttributes('link').href\n  const url = window.prompt('URL', previousUrl)\n  // cancelled\n  if (url === null) {\n  }\n\n  // empty\n  if (url === '') {\n    props.editor\n        .chain()\n        .focus()\n        .extendMarkRange('link')\n        .unsetLink()\n        .run()\n  }\n\n  // update link\n  props.editor\n      .chain()\n      .focus()\n      .extendMarkRange('link')\n      .setLink({ href: url })\n      .run()\n}\n\n</script>\n","<template>\n  <TipTapButtons :editor=\"editor\"/>\n  <div\n      class=\"tiptap hide-scrollbar h-auto overflow-y-auto min-h-[13rem] max-h-[96rem] mb-2 pb-2 bg-gray-50 border border-1 border-gray-300 focus:outline-none text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500\">\n    <editor-content :editor=\"editor\" class=\"news-story\"/>\n    <div class=\"character-count\" v-if=\"editor\">\n      {{ editor.storage.characterCount.characters() }}/{{ limit }} characters\n      <br>\n      {{ editor.storage.characterCount.words() }} words\n    </div>\n\n  </div>\n</template>\n\n<script setup>\nimport { watch } from 'vue'\nimport { Editor, EditorContent } from '@tiptap/vue-3'\nimport StarterKit from '@tiptap/starter-kit'\nimport { History } from '@tiptap/extension-history'\nimport { useNewsStore } from '@/Stores/NewsStore'\nimport TipTapButtons from '@/Components/Global/TextEditor/TipTapButtons'\nimport { TextStyle } from '@tiptap/extension-text-style'\nimport { Color } from '@tiptap/extension-color'\nimport Typography from '@tiptap/extension-typography'\nimport CharacterCount from '@tiptap/extension-character-count'\nimport Placeholder from '@tiptap/extension-placeholder'\nimport Paragraph from '@tiptap/extension-paragraph'\nimport { FontFamily } from '@tiptap/extension-font-family'\nimport { TextAlign } from '@tiptap/extension-text-align'\nimport { Strike } from '@tiptap/extension-strike'\nimport { Underline } from '@tiptap/extension-underline'\nimport { Subscript } from '@tiptap/extension-subscript'\nimport { Superscript } from '@tiptap/extension-superscript'\nimport Link from '@tiptap/extension-link'\n\nconst newsStore = useNewsStore()\n\nconst limit = 5000\n\n// Watch for changes in the content and update the editor\nwatch(() => newsStore.content_json, (newContent) => {\n  if (editor && newContent) {\n    editor.commands.setContent(newContent)\n  }\n}, {immediate: true})\n\nconst editor = new Editor({\n  content: newsStore.newsArticleContentTiptop,\n  extensions: [\n    StarterKit,\n    Document,\n    Paragraph,\n    Text,\n    TextStyle,\n    FontFamily,\n    Color,\n    Typography,\n    Strike,\n    Underline,\n    Subscript,\n    Superscript,\n    TextAlign.configure({\n      types: ['heading', 'paragraph'],\n    }),\n    Link.configure({\n      openOnClick: true,\n    }),\n    CharacterCount.configure({\n      limit: limit,\n    }),\n    Placeholder.configure({\n      // Use a placeholder:\n      placeholder: 'Write something …',\n      // Use different placeholders depending on the node type:\n      // placeholder: ({ node }) => {\n      //   if (node.type.name === 'heading') {\n      //     return 'What’s the title?'\n      //   }\n\n      //   return 'Can you add some further context?'\n      // },\n    }),\n  ],\n  onUpdate: ({editor}) => {\n    newsStore.newsArticleContentTiptop = editor.getJSON()\n\n    // Auto-save -> triggered on every change,\n    // currently disabled. Needs to be throttled.\n    //\n    // axios.post('/news/save', { id: newsStore.newsArticleIdTiptop, body:newsStore.newsArticleContentTiptop, title:newsStore.newsArticleTitleTiptop })\n  },\n  autofocus: true,\n  editorProps: {\n    attributes: {\n      class: 'h-auto min-h-[12rem] max-h-[96rem] overflow-y-auto block w-full p-2.5 focus:outline-none',\n    },\n  },\n})\n\n// onBeforeUnmount(() => {\n//     // this isn't working, I think it's\n//     // needed for the history extension.\n//     editor.destroy()\n// })\n\nHistory.configure({\n  depth: 10,\n})\n\n</script>\n\n<style scoped>\n.tiptap {\n  > * + * {\n    margin-top: 0.75em;\n  }\n}\n\n.character-count {\n  margin-top: 1rem;\n  margin-left: 1rem;\n  color: #868e96;\n}\n\n/* Placeholder (at the top) */\n.tiptap p.is-editor-empty:first-child::before {\n  content: attr(data-placeholder);\n  float: left;\n  color: #adb5bd;\n  pointer-events: none;\n  height: 0;\n}\n\n\n/* Placeholder (on every new line) */\n/*.tiptap p.is-empty::before {\n  content: attr(data-placeholder);\n  float: left;\n  color: #adb5bd;\n  pointer-events: none;\n  height: 0;\n}*/\n</style>\n","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-9.use[1]!../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-9.use[2]!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./TipTapEditor.vue?vue&type=style&index=0&id=e54e9b18&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./TipTapEditor.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TipTapEditor.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./TipTapEditor.vue?vue&type=style&index=0&id=e54e9b18&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-e54e9b18\"]])\n\nexport default __exports__","<template>\n\n\n\n  <!-- The category select -->\n  <div class=\"flex flex-col py-4 px-6\">\n\n    <div class=\"bg-gray-200 rounded-lg\">\n      <div class=\"px-4 py-4 font-semibold text-xs uppercase\">Category</div>\n      <div class=\"px-4 pb-4\">\n        <label for=\"categorySelect\" class=\"text-sm font-medium text-gray-900 dark:text-gray-300 pr-4\">Select Category:</label>\n        <select required\n                v-model=\"newsStore.selectedCategory\"\n                id=\"categorySelect\"\n                class=\"rounded\"\n                @change=\"onCategoryChange\"\n        >\n          <option :value=\"{ id: null }\" >Choose a category</option>\n          <option v-for=\"category in newsStore.categories\" :key=\"category.id\" :value=\"category\">{{ category.name }}</option>\n        </select>\n      </div>\n      <div v-if=\"newsStore.selectedCategory.name\" class=\"flex flex-col justify-left px-4 py-4\">\n        <div class=\"font-semibold text-xs uppercase text-indigo-900\">{{newsStore.selectedCategory.name}}</div>\n        <div v-if=\"newsStore.selectedCategory\" class=\"px-6 py-4 text-indigo-800\">\n          {{newsStore.selectedCategory.description}}\n        </div>\n      </div>\n    </div>\n\n\n\n    <!-- The location select -->\n    <div v-if=\"newsStore.selectedCategory && newsStore.selectedCategory.id === 3\" class=\"mt-8 bg-gray-200 rounded-lg\">\n      <div class=\"px-4 py-4 font-semibold text-xs uppercase\">Location</div>\n      <div class=\"flex flex-col pb-4 px-6\">\n        <div class=\"text-sm font-semibold text-gray-900 dark:text-gray-300 py-1\">Please select the city, town, province or electoral district:</div>\n        <div class=\"w-full mr-4 relative\">\n\n          <input\n              v-model=\"searchInput\"\n              type=\"search\"\n              class=\"w-full rounded-lg mt-2\"\n              placeholder=\"Search...\"\n              @focus=\"newsStore.citySelectDropdownVisible = true\"\n              @blur=\"handleInputBlur\"\n              @keydown=\"handleKeydown\"\n          />\n          <span v-if=\"newsStore.selectedLocation\" class=\"relative xl:absolute inset-y-0 right-0 flex items-center pr-4\">\n                <!-- Styled display text -->\n                <span class=\"text-gray-500\">{{ newsStore.displayText }}</span>\n              </span>\n\n          <ul v-if=\"newsStore.citySelectDropdownVisible && locationSearch.length > 0\" class=\"absolute z-10 w-full bg-white mt-1 max-h-60 rounded-lg shadow-lg overflow-auto border border-gray-200\">\n            <li v-for=\"(location, index) in newsStore.locationSearch\"\n                :key=\"location.id\"\n                  class=\"cursor-pointer select-none relative py-2 pl-3 pr-9 hover:bg-gray-100\"\n                  :class=\"{'bg-gray-200': index === newsStore.focusedIndex.value, 'dropdown-item': true, [`dropdown-item-${index}`]: true}\"\n                  @click=\"inspectLocation(location)\"\n              >\n\n                <span v-if=\"location.type === 'city' || location.type === 'town'\">{{ location.name }}, <span class=\"text-gray-600\">{{ location.province_name }}</span></span>\n                <span v-if=\"location.type === 'province'\">{{ location.name }} &nbsp;&nbsp;<span class=\"uppercase text-xs font-semibold text-gray-600\">Province</span></span>\n                <span v-if=\"location.type === 'territory'\">{{ location.name }} &nbsp;&nbsp;<span class=\"uppercase text-xs font-semibold text-gray-600\">Territory</span></span>\n                <span v-if=\"location.type === 'federalElectoralDistrict'\">{{ location.name }} &nbsp;&nbsp;<span class=\"uppercase text-xs font-semibold text-gray-600\">Federal Electoral District</span></span>\n                <span v-if=\"location.type === 'subnationalElectoralDistrict'\">{{ location.name }}</span>\n\n              </li>\n            </ul>\n            <div\n                v-if=\"newsStore.formErrors.type\"\n                class=\"text-sm text-red-600\"\n            >\n              {{ newsStore.formErrors.type }}\n            </div>\n          </div>\n        </div>\n    </div>\n\n\n\n\n\n\n    <!-- The sub-category select -->\n    <div class=\"mt-8 bg-gray-200 rounded-lg\">\n      <div class=\"px-4 py-4 font-semibold text-xs uppercase\">Sub-category</div>\n      <div class=\"flex flex-wrap py-4 px-4\">\n        <div class=\"flex flex-col\">\n          <label for=\"subcategorySelect\" class=\"text-sm font-medium text-gray-900 dark:text-gray-300 pr-4\">Select Subcategory:</label>\n          <span class=\"italic text-sm font-thin text-gray-900 dark:text-gray-300\">(optional)</span>\n        </div>\n        <div v-if=\"newsStore.selectedCategory\" class=\"flex flex-wrap\">\n          <select v-model=\"newsStore.selectedSubcategory\" id=\"subcategorySelect\" class=\"rounded\">\n            <option :value=\"{ id: null }\">Choose a sub-category</option> <!-- Add a blank option -->\n            <option v-for=\"subcategory in newsStore.subcategories\" :key=\"subcategory.id\" :value=\"subcategory\">{{ subcategory.name }}</option>\n          </select>\n        </div>\n    </div>\n\n    <div v-if=\"newsStore.selectedSubcategory\" class=\"flex-col justify-left py-4 px-4\">\n      <div v-if=\"newsStore.selectedSubcategory\" class=\"font-semibold text-xs uppercase text-indigo-900\">{{newsStore.selectedSubcategory.name}}</div>\n      <div v-if=\"newsStore.selectedSubcategory\" class=\"px-6 py-4 text-indigo-800\">\n        {{newsStore.selectedSubcategory.description}}\n      </div>\n    </div>\n    </div>\n\n    <div\n        v-if=\"newsStore.formErrors.news_category_id\"\n        class=\"text-sm text-red-600\"\n    >\n      {{ newsStore.formErrors.news_category_id }}\n    </div>\n\n  </div>\n\n</template>\n\n<script setup>\nimport { Inertia } from '@inertiajs/inertia'\nimport { usePage } from '@inertiajs/inertia-vue3';\nimport { watch, ref, computed, onMounted } from 'vue'\nimport { debounce, throttle } from 'lodash'\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\nimport { useNewsStore } from '@/Stores/NewsStore'\n\nconst appSettingStore = useAppSettingStore()\nconst newsStore = useNewsStore()\n\n// Define props and other logic\nlet props = defineProps({\n  newsStory: Object,\n  country: Object,\n  categories: Object,\n  locationSearch: Object,\n  filters: Object,\n  errors: Object,\n  searchPath: String,\n});\n// const { props } = usePage();\n\n// Watch for changes in locationSearch prop and update the store\nwatch(() => props.locationSearch, (newLocationSearch) => {\n  newsStore.locationSearch = newLocationSearch;\n}, { deep: true });\n\n// If you need to watch the filters as well\nwatch(() => props.filters, (newFilters) => {\n  if (newFilters && newFilters.search !== undefined) {\n    newsStore.search = newFilters.search;\n  }\n}, { deep: true });\n\nonMounted(() => {\n  // Initialize newsStore.search with the initial search value from props\n  newsStore.search = props.filters.search;\n});\n\nconst onCategoryChange = () => {\n  newsStore.getSubcategories();\n  newsStore.getSelectedSubcategory();\n};\n\n// const selectLocation = (location) => {\n//   console.log('selectLocation called with:', location);\n//   newsStore.updateSelectedLocation(location);\n// };\nconst inspectLocation = (location) => {\n  newsStore.updateSelectedLocation(location);\n  console.log('Clicked location:', location);\n};\n\nfunction selectLocation(location) {\n  newsStore.updateSelectedLocation(location);\n}\n// watch(newsStore.focusedIndex, (newValue) => {\n//   if (newValue >= 0) {\n//     const item = document.querySelector(`.dropdown-item-${newValue}`);\n//     item?.scrollIntoView({ block: 'center' });\n//   }\n// });\n\nconst searchInput = computed({\n  get() {\n    // If there's a selected location, show its name; otherwise, show the search value\n    const location = newsStore.selectedLocation;\n    if (location) {\n      if (location.type === 'city' || location.type === 'town') {\n        return `${location.name}, ${location.province_name}`;\n      }\n      return location.name;\n    }\n    return newsStore.search;\n  },\n  set(value) {\n    // Update the search value in the store when the user types\n    newsStore.search = value;\n\n    // Optionally, clear or update selectedLocation if necessary\n    // For example, if you want to clear the selected location when the user types:\n    if (newsStore.selectedLocation?.name !== value) {\n      newsStore.selectedLocation = null;\n    }\n  }\n});\n\nwatch(() => newsStore.search, throttle((value) => {\n  let url;\n  if (appSettingStore.currentPage === 'newsEdit') {\n    url = `/newsStory/${newsStore.newsStory.slug}/edit`;\n  } else if (appSettingStore.currentPage === 'newsCreate') {\n    url = '/newsStory/create';\n  }\n\n  if (url) {\n    Inertia.get(url, { search: value }, {\n      preserveState: true,\n      replace: true,\n    });\n  }\n}, 300));\n\nconst showDropdown = () => {\n  newsStore.citySelectDropdownVisible = true;\n};\n\nconst handleInputBlur = () => {\n  // Delay hiding dropdown to allow click event on dropdown item to be processed\n  setTimeout(() => {\n    newsStore.citySelectDropdownVisible = false;\n  }, 200);\n};\n\nconst handleKeydown = (event) => {\n  if (event.key === 'Enter') {\n    // Prevent default action of the Enter key\n    event.preventDefault();\n\n    if (newsStore.locationSearch.length > 0 && newsStore.focusedIndex.value !== null) {\n      const selectedLocation = newsStore.locationSearch[newsStore.focusedIndex.value];\n      if (selectedLocation) {\n        newsStore.selectedLocation = selectedLocation; // Set the selected location\n        newsStore.updateSelectedLocation(selectedLocation); // Update the location in the store\n        newsStore.citySelectDropdownVisible = false; // Close the dropdown\n      }\n    }\n  }\n  // Handle other keydown events if necessary\n};\n\n</script>\n\n<style scoped>\n.select-container {\n  max-width: 100%; /* Adjust the maximum width as needed */\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n}\n</style>\n","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-9.use[1]!../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-9.use[2]!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./CategoryCitySelector.vue?vue&type=style&index=0&id=1f17ae21&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./CategoryCitySelector.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CategoryCitySelector.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./CategoryCitySelector.vue?vue&type=style&index=0&id=1f17ae21&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-1f17ae21\"]])\n\nexport default __exports__","import script from \"./ValidationErrors.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ValidationErrors.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { computed } from 'vue';\nimport { usePage } from '@inertiajs/inertia-vue3';\n\nconst errors = computed(() => usePage().props.value.errors);\nconst hasErrors = computed(() => Object.keys(errors.value).length > 0);\n</script>\n\n<template>\n    <div v-if=\"hasErrors\">\n        <div class=\"font-medium text-red-600\">\n            Whoops! Something went wrong.\n        </div>\n\n        <ul class=\"mt-3 list-disc list-inside text-sm text-red-600\">\n            <li v-for=\"(error, key) in errors\" :key=\"key\">\n                {{ error }}\n            </li>\n        </ul>\n    </div>\n</template>\n","import script from \"./Edit.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Edit.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n\n  <Head title=\"Edit News Post\"/>\n\n  <div class=\"place-self-center flex flex-col gap-y-3\">\n    <div id=\"topDiv\" class=\"bg-white text-black dark:bg-gray-800 dark:text-gray-50 p-5 mb-10\">\n\n      <Message v-if=\"appSettingStore.showFlashMessage\" :flash=\"$page.props.flash\"/>\n\n      <div class=\"flex flex-row justify-between mt-6\">\n        <h2 class=\"text-xl font-semibold leading-tight\">\n          Edit News Post\n        </h2>\n        <div class=\"flex justify-end space-x-2\">\n          <div>\n            <button\n                v-if=\"props.can.viewNewsroom\"\n                @click=\"appSettingStore.btnRedirect(`/newsroom`)\"\n                class=\"px-4 py-2 text-white bg-yellow-600 hover:bg-yellow-500 rounded-lg disabled:bg-gray-400\"\n\n            >Newsroom\n            </button>\n          </div>\n          <div class=\"\">\n            <button\n                @click.prevent=\"submit\"\n                class=\"text-white bg-blue-700 hover:bg-blue-500 focus:outline-none  font-medium rounded-lg text-sm px-5 py-2.5 \"\n                :disabled=\"processing\"\n                :class=\"{ 'opacity-25': processing }\"\n            >\n              Save\n            </button>\n          </div>\n          <div>\n            <CancelButton/>\n          </div>\n\n        </div>\n        <JetValidationErrors class=\"ml-4\"/>\n      </div>\n\n      <CategoryCitySelector\n          :newsStory=\"newsStory\"\n          :locationSearch=\"locationSearch\"\n          :filters=\"filters\"\n          :searchPath=\"`/newsStory/${newsStory.slug}/edit`\"\n      />\n\n      <div class=\"p-6 border-b border-gray-200\">\n        <form @submit.prevent=\"submit\">\n          <div class=\"mb-6\">\n            <label\n                for=\"Title\"\n                class=\"block mb-2 text-sm font-bold text-gray-900 dark:text-gray-300\"\n            >Title</label\n            >\n            <input\n                type=\"text\"\n                v-model=\"newsStore.newsArticleTitleTiptop\"\n                name=\"title\"\n                class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\"\n                placeholder=\"\"\n            />\n            <div\n                v-if=\"errors.title\"\n                class=\"text-sm text-red-600\"\n            >\n              {{ errors.title }}\n            </div>\n          </div>\n          <div class=\"mb-6\">\n            <label\n                for=\"slug\"\n                class=\"block mb-2 text-sm font-bold text-gray-900 dark:text-gray-300\"\n            >Content</label>\n            <TipTapEditor v-if=\"appSettingStore.currentPage === 'newsEdit'\" />\n            <!--                        <tabbable-textarea-->\n            <!--                            type=\"text\"-->\n            <!--                            v-model=\"form.content\"-->\n            <!--                            name=\"content\"-->\n            <!--                            id=\"\"-->\n            <!--                            rows=10-->\n            <!--                            class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\"-->\n            <!--                        ></tabbable-textarea>-->\n\n            <div\n                v-if=\"errors.body\"\n                class=\"text-sm text-red-600\"\n            >\n              {{ errors.body }}\n            </div>\n          </div>\n          <div class=\" flex justify-end\">\n            <button\n                type=\"submit\"\n                class=\"text-white bg-blue-700 hover:bg-blue-500 focus:outline-none  font-medium rounded-lg text-sm px-5 py-2.5 \"\n                :disabled=\"processing\"\n                :class=\"{ 'opacity-25': processing }\"\n            >\n              Save\n            </button>\n            <JetValidationErrors class=\"ml-4\"/>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { Inertia } from '@inertiajs/inertia'\nimport { computed, onBeforeUnmount, onMounted, watch } from 'vue'\nimport { usePageSetup } from '@/Utilities/PageSetup'\nimport { useAppSettingStore } from '@/Stores/AppSettingStore'\nimport { useNewsStore } from '@/Stores/NewsStore'\nimport JetValidationErrors from '@/Jetstream/ValidationErrors'\nimport TipTapEditor from '@/Components/Global/TextEditor/TipTapEditor'\nimport CategoryCitySelector from '@/Components/Pages/News/CategoryCitySelector.vue'\nimport Message from '@/Components/Global/Modals/Messages'\nimport CancelButton from '@/Components/Global/Buttons/CancelButton.vue'\n\nusePageSetup('newsEdit')\n\nconst appSettingStore = useAppSettingStore()\nconst newsStore = useNewsStore()\n\nconst props = defineProps({\n  newsStory: Object,\n  country: Object,\n  categories: Object,\n  locationSearch: Object,\n  filters: Object,\n  can: Object,\n  errors: Object,\n  processing: false,\n})\n\nconst errors = props.errors; // This will contain the error messages\n\nonMounted(() => {\n  // Load props into the store\n  newsStore.newsArticleIdTiptop = props.newsStory.id\n  newsStore.newsArticleTitleTiptop = props.newsStory.title\n  newsStore.newsArticleContentTiptop = JSON.parse(props.newsStory.content_json)\n  newsStore.content_json = JSON.parse(props.newsStory.content_json)\n  newsStore.news_category_id = props.newsStory.news_category_id\n  newsStore.news_category_sub_id = props.newsStory.news_category_sub_id\n  newsStore.city_id = props.newsStory.city_id\n  newsStore.province_id = props.newsStory.province_id\n  newsStore.federal_electoral_district_id = props.newsStory.federal_electoral_district_id\n  newsStore.subnational_electoral_district_id = props.newsStory.subnational_electoral_district_id\n  newsStore.type = props.newsStory.type\n  newsStore.country = props.country\n  newsStore.categories = props.categories\n  newsStore.filters = props.filters\n  newsStore.locationSearch = props.locationSearch\n  newsStore.loadNewsStory(props.newsStory)\n})\n\n// Watch for changes in relevant store states\nwatch(() => [newsStore.news_category_id, newsStore.news_category_sub_id], () => {\n  newsStore.setSelectedCategory()\n  newsStore.getSubcategories()\n  // You can also watch for other relevant states if they affect setSelectedCategory\n})\n\nconst submit = () => {\n  props.processing = true\n\n  // Check if selectedSubcategory.id is null, and if so, set it to a default value or handle it as needed\n  const subcategoryId = newsStore.selectedSubcategory ? newsStore.selectedSubcategory.id : null;\n\n  const data = {\n    id: newsStore.newsStory.id,\n    title: newsStore.newsArticleTitleTiptop,\n    status: props.newsStory.status.id,\n    // body: JSON.stringify(newsStore.content_json),\n    content_json: JSON.stringify(newsStore.newsArticleContentTiptop),\n    news_category_id: newsStore.selectedCategory.id,\n    news_category_sub_id: subcategoryId, // Use the value after handling null\n    city_id: newsStore.selectedLocation.city_id,\n    province_id: newsStore.selectedLocation.province_id,\n    federal_electoral_district_id: newsStore.selectedLocation.federal_electoral_district_id,\n    subnational_electoral_district_id: newsStore.selectedLocation.subnational_electoral_district_id,\n    type: newsStore.selectedLocation.type,\n  }\n\n  console.log('data submitted.')\n  Inertia.patch(route('newsStory.update', newsStore.newsStory.slug), data)\n}\n\nonBeforeUnmount(() => {\n  newsStore.reset()\n})\n</script>\n"],"names":["initialState","newsStory","newsArticleIdTiptop","newsArticleTitleTiptop","newsArticleContentTiptop","content_json","news_category_id","news_category_sub_id","categories","subcategories","city_id","province_id","federal_electoral_district_id","subnational_electoral_district_id","type","displayText","country","selectedCategory","selectedSubcategory","selectedLocation","locationSearch","citySelectDropdownVisible","focusedIndex","searchQuery","filters","search","formErrors","useNewsStore","defineStore","state","actions","reset","Object","assign","this","loadNewsStory","setSelectedCategory","_this","matchingCategory","find","category","id","getSubcategories","getSelectedSubcategory","setSelectedLocation","resetLocationIds","_this2","console","log","news_category_subs","_this3","matchingSubcategory","subcategory","_this4","matchingLocation","location","subnational_electoral_district","selectedType","updateSelectedLocation","getDisplayTextForType","usePageSetup","pageName","userStore","useUserStore","appSettingStore","useAppSettingStore","videoPlayerStore","useVideoPlayerStore","currentPage","showFlashMessage","pageIsHidden","isMobile","ott","makeVideoTopRight","onBeforeMount","pageReload","window","reload","onMounted","topDiv","document","getElementById","scrollIntoView","setPrevUrl","noLayout","showOttButtons","___CSS_LOADER_EXPORT___","push","module","props","__props","cancel","prevUrl","url","Inertia","visit","isCreator","clearFlashMessage","computed","flash","success","message","warning","error","_ref","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","post","route","stop","apply","arguments","textColor","toggleTextColor","color","editor","chain","focus","unsetColor","run","setColor","setLink","previousUrl","getAttributes","href","prompt","extendMarkRange","unsetLink","newsStore","watch","newContent","commands","setContent","immediate","Editor","content","extensions","StarterKit","Document","Paragraph","Text","TextStyle","FontFamily","Color","Typography","Strike","Underline","Subscript","Superscript","TextAlign","configure","types","Link","openOnClick","CharacterCount","limit","Placeholder","placeholder","onUpdate","getJSON","autofocus","editorProps","attributes","class","History","depth","options","locals","newLocationSearch","deep","newFilters","undefined","onCategoryChange","searchInput","get","concat","name","province_name","set","value","_newsStore$selectedLo","throttle","slug","preserveState","replace","handleInputBlur","setTimeout","handleKeydown","event","key","preventDefault","length","errors","usePage","hasErrors","keys","title","JSON","parse","submit","processing","subcategoryId","data","status","stringify","patch","onBeforeUnmount"],"sourceRoot":""}
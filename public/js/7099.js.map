{"version":3,"file":"js/7099.js","mappings":";6mQAKA,6CCqCE,IAAMA,GAAcC,EAAAA,EAAAA,MAAI,GAClBC,GAAOD,EAAAA,EAAAA,KAAI,MACXE,GAAgBF,EAAAA,EAAAA,KAAI,IACpBG,GAAkBH,EAAAA,EAAAA,KAAI,IAEtBI,GAAUC,EAAAA,EAAAA,UAAS,CACvBC,SAAU,CACRC,KAAM,OACNC,KAAM,OACNC,YAAa,cACbC,KAAM,OACNC,YAAa,cACbC,WAAY,aACZC,WAAY,aACZC,KAAM,OACNC,SAAU,WACVC,UAAW,YACXC,oBAAqB,sBACrBC,sBAAuB,wBACvBC,WAAY,aACZC,oBAAqB,sBACrBC,aAAc,eACdC,kBAAmB,oBACnBC,aAAc,eACdC,UAAW,YACXC,WAAY,aACZC,eAAgB,iBAChBC,aAAc,kBAKZC,EAAmB,SAACC,GACxB5B,EAAK6B,MAAQD,EAAME,OAAOC,MAAM,EAClC,EAEMC,EAAgB,WACpB9B,EAAgB2B,MAAQ,EAC1B,EAEMI,EAAU,iBAAAC,KAAAC,IAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAH,IAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACZ1C,EAAK6B,OAAU5B,EAAc4B,MAAK,CAAAW,EAAAE,KAAA,eAAAF,EAAAG,OAAA,iBAO2B,OALlE7C,EAAY+B,OAAQ,GAEdS,EAAW,IAAIM,UACZC,OAAO,WAAY7C,EAAK6B,OACjCS,EAASO,OAAO,QAAS5C,EAAc4B,OACvCS,EAASO,OAAO,UAAWC,KAAKC,UAAU7C,EAAgB2B,QAAQW,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAG1DM,EAAAA,EAAMC,KAAK,0BAA2BX,EAAU,CACpDY,QAAS,CACP,eAAgB,yBAElB,QACFC,MAAM,+BAA+BX,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAY,GAAAZ,EAAA,SAErCa,QAAQC,MAAM,wBAAuBd,EAAAY,IACrCD,MAAM,0CAA0C,QAKrB,OALqBX,EAAAC,KAAA,GAEhD3C,EAAY+B,OAAQ,EACpB7B,EAAK6B,MAAQ,KACb5B,EAAc4B,MAAQ,GACtB3B,EAAgB2B,MAAQ,GAAGW,EAAAe,OAAA,6BAAAf,EAAAgB,OAAA,GAAAnB,EAAA,uMAE9B,kBA1Be,OAAAH,EAAAuB,MAAA,KAAAC,UAAA","sources":["webpack:///./resources/js/Pages/Admin/Settings/Elements/UploadNewsData.vue?226d","webpack:///./resources/js/Pages/Admin/Settings/Elements/UploadNewsData.vue"],"sourcesContent":["import script from \"./UploadNewsData.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./UploadNewsData.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","  <!-- resources/js/Pages/Admin/UploadNewsData.vue -->\n  <template>\n    <div class=\"container mb-6 rounded-lg bg-gray-100 p-4\">\n      <h2 class=\"mb-4\">Upload Data for News Cities, Provinces, Districts</h2>\n      <form @submit.prevent=\"uploadFile\">\n        <div class=\"flex flex-col form-group gap-2 mb-4 w-fit\">\n          <label class=\"block uppercase font-bold text-xs text-gray-700 dark:text-gray-300\">Select Model</label>\n          <select id=\"model\" v-model=\"selectedModel\" class=\"form-select block w-full\" required @change=\"updateColumns\">\n            <option value=\"\" disabled>Select a model</option>\n            <option value=\"NewsCity\">News Cities</option>\n            <option value=\"NewsProvince\">News Provinces</option>\n            <option value=\"NewsFederalElectoralDistrict\">News Federal Electoral Districts</option>\n            <option value=\"NewsSubnationalElectoralDistrict\">News Subnational Electoral Districts</option>\n          </select>\n        </div>\n        <div v-if=\"selectedModel\" class=\"mb-4\">\n          <h3 class=\"mb-2 font-bold text-xs text-gray-700 dark:text-gray-300\">CSV Format Requirements</h3>\n          <p v-if=\"selectedModel === 'NewsCity'\" class=\"text-xs text-gray-700 dark:text-gray-300\">\n            name, slug, description, type, province_id, country_id, population, area, latitude, longitude, economic_indicators, cultural_significance, city_mayor, tourism_attractions, city_website, year_incorporated, airport_code, time_zone, gmt_offset, gmt_offset_dst, dst_observed\n          </p>\n          <!-- Add similar descriptions for other models if needed -->\n        </div>\n        <div v-if=\"selectedModel\" class=\"mb-4\">\n          <h3 class=\"mb-2 font-bold text-xs text-gray-700 dark:text-gray-300\">Select Columns to Update</h3>\n          <div v-for=\"(label, column) in columns[selectedModel]\" :key=\"column\" class=\"flex items-center gap-2 space-y-2\">\n            <input type=\"checkbox\" :id=\"column\" v-model=\"selectedColumns\" :value=\"column\" />\n            <label :for=\"column\" class=\"text-xs text-gray-700 dark:text-gray-300\">{{ label }}</label>\n          </div>\n        </div>\n        <div class=\"flex flex-col form-group gap-2 mb-4 w-fit\">\n          <label class=\"block uppercase font-bold text-xs text-gray-700 dark:text-gray-300\">Upload CSV File</label>\n          <input type=\"file\" id=\"dataFile\" @change=\"handleFileUpload\" accept=\".csv\" required />\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary\" :disabled=\"isUploading\">Upload</button>\n      </form>\n    </div>\n  </template>\n\n  <script setup>\n  import { reactive, ref } from 'vue'\n  import axios from 'axios';\n\n  const isUploading = ref(false);\n  const file = ref(null);\n  const selectedModel = ref('');\n  const selectedColumns = ref([]);\n\n  const columns = reactive({\n    NewsCity: {\n      name: 'Name',\n      slug: 'Slug',\n      description: 'Description',\n      type: 'Type',\n      province_id: 'Province ID',\n      country_id: 'Country ID',\n      population: 'Population',\n      area: 'Area',\n      latitude: 'Latitude',\n      longitude: 'Longitude',\n      economic_indicators: 'Economic Indicators',\n      cultural_significance: 'Cultural Significance',\n      city_mayor: 'City Mayor',\n      tourism_attractions: 'Tourism Attractions',\n      city_website: 'City Website',\n      year_incorporated: 'Year Incorporated',\n      airport_code: 'Airport Code',\n      time_zone: 'Time Zone',\n      gmt_offset: 'GMT Offset',\n      gmt_offset_dst: 'GMT Offset DST',\n      dst_observed: 'DST Observed'\n    },\n    // Add columns for other models if needed\n  });\n\n  const handleFileUpload = (event) => {\n    file.value = event.target.files[0];\n  };\n\n  const updateColumns = () => {\n    selectedColumns.value = [];\n  };\n\n  const uploadFile = async () => {\n    if (!file.value || !selectedModel.value) return;\n\n    isUploading.value = true;\n\n    const formData = new FormData();\n    formData.append('dataFile', file.value);\n    formData.append('model', selectedModel.value);\n    formData.append('columns', JSON.stringify(selectedColumns.value));\n\n    try {\n      await axios.post('/admin/upload-news-data', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n      alert('File uploaded successfully!');\n    } catch (error) {\n      console.error('Error uploading file:', error);\n      alert('There was an error uploading the file.');\n    } finally {\n      isUploading.value = false;\n      file.value = null;\n      selectedModel.value = '';\n      selectedColumns.value = [];\n    }\n  };\n  </script>\n"],"names":["isUploading","ref","file","selectedModel","selectedColumns","columns","reactive","NewsCity","name","slug","description","type","province_id","country_id","population","area","latitude","longitude","economic_indicators","cultural_significance","city_mayor","tourism_attractions","city_website","year_incorporated","airport_code","time_zone","gmt_offset","gmt_offset_dst","dst_observed","handleFileUpload","event","value","target","files","updateColumns","uploadFile","_ref","_regeneratorRuntime","mark","_callee","formData","wrap","_context","prev","next","abrupt","FormData","append","JSON","stringify","axios","post","headers","alert","t0","console","error","finish","stop","apply","arguments"],"sourceRoot":""}
{"version":3,"file":"js/1712.js","mappings":"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","sources":["webpack://nottvbeta/./resources/js/Components/Global/Text/ColorPicker.vue?cf74","webpack://nottvbeta/./resources/js/Components/Global/TextEditor/TipTapNewsStoryButtons.vue?6e84","webpack://nottvbeta/./resources/js/Components/Global/TextEditor/TipTapNewsStoryEditor.vue?f43f","webpack://nottvbeta/./resources/js/Components/Global/Text/ColorPicker.vue","webpack://nottvbeta/./resources/js/Components/Global/Text/ColorPicker.vue?2c52","webpack://nottvbeta/./resources/js/Components/Global/Text/ColorPicker.vue?dc30","webpack://nottvbeta/./resources/js/Components/Global/TextEditor/TipTapNewsStoryButtons.vue","webpack://nottvbeta/./resources/js/Components/Global/TextEditor/TipTapNewsStoryButtons.vue?1d03","webpack://nottvbeta/./resources/js/Components/Global/TextEditor/TipTapNewsStoryButtons.vue?b562","webpack://nottvbeta/./resources/js/Components/Global/TextEditor/TipTapNewsStoryEditor.vue","webpack://nottvbeta/./resources/js/Components/Global/TextEditor/TipTapNewsStoryEditor.vue?619d","webpack://nottvbeta/./resources/js/Components/Global/TextEditor/TipTapNewsStoryEditor.vue?fda9","webpack://nottvbeta/./resources/js/Components/Pages/News/NewsWriterComponent.vue?1a54","webpack://nottvbeta/./resources/js/Components/Pages/News/NewsWriterComponent.vue"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".overlay[data-v-60d35359]{background:#00000080;height:100%;left:0;position:fixed;top:0;width:100%;z-index:999}.color-picker-dialog[data-v-60d35359]{background:#fff;border-radius:8px;box-shadow:0 2px 10px #0000001a;left:50%;padding:20px;position:fixed;top:50%;transform:translate(-50%,-50%);z-index:1000}.btn-primary[data-v-60d35359]{background-color:#4a5568;border:none;border-radius:4px;color:#fff;cursor:pointer;padding:8px 12px}.btn-primary[data-v-60d35359]:hover{background-color:#2d3748}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/Components/Global/Text/ColorPicker.vue\"],\"names\":[],\"mappings\":\"AAkDA,0BAME,oBAA8B,CAD9B,WAAY,CAFZ,MAAO,CAFP,cAAe,CACf,KAAM,CAEN,UAAW,CAGX,WACF,CAEA,sCAKE,eAAiB,CAEjB,iBAAkB,CAClB,+BAAyC,CALzC,QAAS,CAGT,YAAa,CALb,cAAe,CACf,OAAQ,CAER,8BAAgC,CAKhC,YACF,CAEA,8BACE,wBAAyB,CAGzB,WAAY,CACZ,iBAAkB,CAHlB,UAAY,CAIZ,cAAe,CAHf,gBAIF,CAEA,oCACE,wBACF\",\"sourcesContent\":[\"<template>\\n  <div>\\n    <div class=\\\"overlay\\\" v-if=\\\"visible\\\" @click=\\\"hide\\\"></div>\\n    <div class=\\\"color-picker-dialog\\\" v-if=\\\"visible\\\">\\n      <Chrome v-model=\\\"localColor\\\" />\\n      <button class=\\\"btn btn-primary mt-2\\\" @click=\\\"applyColor\\\">Apply</button>\\n    </div>\\n  </div>\\n</template>\\n\\n<script setup>\\nimport { ref, watch } from 'vue'\\nimport { Chrome } from '@ckpack/vue-color'\\n\\nconst props = defineProps({\\n  visible: {\\n    type: Boolean,\\n    default: false\\n  },\\n  color: {\\n    type: String,\\n    default: '#000000'\\n  }\\n})\\n\\nconst emit = defineEmits(['close', 'apply', 'update:color'])\\n\\nconst localColor = ref(props.color)\\n//\\n// watch(() => props.color, (newColor) => {\\n//   localColor.value = newColor\\n// })\\n\\n// const updateColor = (newColor) => {\\n//   localColor.value = newColor.hex\\n//   emit('update:color', newColor.hex)\\n// }\\n\\nconst applyColor = () => {\\n  console.log(localColor.value.hex)\\n  emit('apply', localColor.value.hex)\\n  hide()\\n}\\n\\nconst hide = () => {\\n  emit('close')\\n}\\n</script>\\n\\n<style scoped>\\n.overlay {\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  height: 100%;\\n  background: rgba(0, 0, 0, 0.5);\\n  z-index: 999;\\n}\\n\\n.color-picker-dialog {\\n  position: fixed;\\n  top: 50%;\\n  left: 50%;\\n  transform: translate(-50%, -50%);\\n  background: white;\\n  padding: 20px;\\n  border-radius: 8px;\\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\\n  z-index: 1000;\\n}\\n\\n.btn-primary {\\n  background-color: #4a5568;\\n  color: white;\\n  padding: 8px 12px;\\n  border: none;\\n  border-radius: 4px;\\n  cursor: pointer;\\n}\\n\\n.btn-primary:hover {\\n  background-color: #2d3748;\\n}\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".toolbar[data-v-51ee9b05]{display:flex;flex-wrap:wrap;gap:8px}.button-group[data-v-51ee9b05]{display:flex;gap:8px;margin-right:16px}.icon-btn[data-v-51ee9b05]{align-items:center;background-color:#4a5568;border:none;border-radius:4px;color:#fff;cursor:pointer;display:flex;height:40px;justify-content:center;padding:8px;transition:background-color .3s,transform .3s;width:40px}.icon-btn.active[data-v-51ee9b05],.icon-btn[data-v-51ee9b05]:hover{background-color:#2d3748}.icon-btn[data-v-51ee9b05]:hover{transform:scale(1.1)}.icon-btn.disabled[data-v-51ee9b05]{background-color:#a0aec0;cursor:not-allowed}.icon-btn i[data-v-51ee9b05]{font-size:16px}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/Components/Global/TextEditor/TipTapNewsStoryButtons.vue\"],\"names\":[],\"mappings\":\"AAmSA,0BACE,YAAa,CAEb,cAAe,CADf,OAEF,CAEA,+BACE,YAAa,CACb,OAAQ,CACR,iBACF,CAEA,2BAQE,kBAAmB,CAPnB,wBAAyB,CAGzB,WAAY,CACZ,iBAAkB,CAHlB,UAAY,CAIZ,cAAe,CACf,YAAa,CAIb,WAAY,CAFZ,sBAAuB,CANvB,WAAY,CASZ,6CAAiD,CAFjD,UAGF,CAMA,mEAHE,wBAMF,CAHA,iCAEE,oBACF,CAEA,oCACE,wBAAyB,CACzB,kBACF,CAEA,6BACE,cACF\",\"sourcesContent\":[\"<template>\\n  <div>\\n    <div class=\\\"toolbar mb-2\\\">\\n      <div class=\\\"flex flex-wrap gap-1 mb-2\\\">\\n        <!-- Text formatting buttons -->\\n        <div class=\\\"button-group\\\">\\n          <button tabindex=\\\"-1\\\" @click.prevent=\\\"toggleBold\\\" class=\\\"icon-btn\\\" :class=\\\"{ 'active': isBoldActive }\\\">\\n            <font-awesome-icon :icon=\\\"['fas', 'bold']\\\" />\\n          </button>\\n          <button tabindex=\\\"-1\\\" @click.prevent=\\\"toggleItalic\\\" class=\\\"icon-btn\\\" :class=\\\"{ 'active': isItalicActive }\\\">\\n            <font-awesome-icon :icon=\\\"['fas', 'italic']\\\" />\\n          </button>\\n          <button tabindex=\\\"-1\\\" @click.prevent=\\\"toggleUnderline\\\" class=\\\"icon-btn\\\" :class=\\\"{ 'active': isUnderlineActive }\\\">\\n            <font-awesome-icon :icon=\\\"['fas', 'underline']\\\" />\\n          </button>\\n          <button tabindex=\\\"-1\\\" @click.prevent=\\\"toggleStrike\\\" class=\\\"icon-btn\\\" :class=\\\"{ 'active': isStrikeActive }\\\">\\n            <font-awesome-icon :icon=\\\"['fas', 'strikethrough']\\\" />\\n          </button>\\n          <button tabindex=\\\"-1\\\" @click.prevent=\\\"toggleSuperscript\\\" class=\\\"icon-btn\\\" :class=\\\"{ 'active': isSuperscriptActive }\\\">\\n            <font-awesome-icon :icon=\\\"['fas', 'superscript']\\\" />\\n          </button>\\n          <button tabindex=\\\"-1\\\" @click.prevent=\\\"toggleSubscript\\\" class=\\\"icon-btn\\\" :class=\\\"{ 'active': isSubscriptActive }\\\">\\n            <font-awesome-icon :icon=\\\"['fas', 'subscript']\\\" />\\n          </button>\\n        </div>\\n\\n        <!-- Heading buttons -->\\n        <div class=\\\"button-group\\\">\\n          <button tabindex=\\\"-1\\\" @click.prevent=\\\"toggleHeading(1)\\\" class=\\\"icon-btn\\\" :class=\\\"{ 'active': isHeadingActive(1) }\\\">\\n            H1\\n          </button>\\n          <button tabindex=\\\"-1\\\" @click.prevent=\\\"toggleHeading(2)\\\" class=\\\"icon-btn\\\" :class=\\\"{ 'active': isHeadingActive(2) }\\\">\\n            H2\\n          </button>\\n          <button tabindex=\\\"-1\\\" @click.prevent=\\\"toggleHeading(3)\\\" class=\\\"icon-btn\\\" :class=\\\"{ 'active': isHeadingActive(3) }\\\">\\n            H3\\n          </button>\\n        </div>\\n\\n        <!-- List buttons -->\\n        <div class=\\\"button-group\\\">\\n          <button tabindex=\\\"-1\\\" @click.prevent=\\\"toggleBulletList\\\" class=\\\"icon-btn\\\" :class=\\\"{ 'active': isBulletListActive }\\\">\\n            <font-awesome-icon :icon=\\\"['fas', 'list-ul']\\\" />\\n          </button>\\n          <button tabindex=\\\"-1\\\" @click.prevent=\\\"toggleOrderedList\\\" class=\\\"icon-btn\\\" :class=\\\"{ 'active': isOrderedListActive }\\\">\\n            <font-awesome-icon :icon=\\\"['fas', 'list-ol']\\\" />\\n          </button>\\n        </div>\\n\\n        <!-- Link buttons -->\\n        <div class=\\\"button-group\\\">\\n          <button tabindex=\\\"-1\\\" @click.prevent=\\\"setLink\\\" class=\\\"icon-btn\\\" :class=\\\"{ 'active': isLinkActive }\\\">\\n            <font-awesome-icon :icon=\\\"['fas', 'link']\\\" />\\n          </button>\\n          <button tabindex=\\\"-1\\\" @click.prevent=\\\"unsetLink\\\" class=\\\"icon-btn\\\" :class=\\\"{ 'disabled': !isLinkActive }\\\" :disabled=\\\"!isLinkActive\\\">\\n            <font-awesome-icon :icon=\\\"['fas', 'unlink']\\\" />\\n          </button>\\n        </div>\\n\\n        <!-- Code and blockquote buttons -->\\n        <div class=\\\"button-group\\\">\\n          <button tabindex=\\\"-1\\\" @click.prevent=\\\"toggleCodeBlock\\\" class=\\\"icon-btn\\\" :class=\\\"{ 'active': isCodeBlockActive }\\\">\\n            <font-awesome-icon :icon=\\\"['fas', 'code']\\\" />\\n          </button>\\n          <button tabindex=\\\"-1\\\" @click.prevent=\\\"toggleBlockquote\\\" class=\\\"icon-btn\\\" :class=\\\"{ 'active': isBlockquoteActive }\\\">\\n            <font-awesome-icon :icon=\\\"['fas', 'quote-right']\\\" />\\n          </button>\\n          <button tabindex=\\\"-1\\\" @click.prevent=\\\"setHorizontalRule\\\" class=\\\"icon-btn\\\">\\n            <font-awesome-icon :icon=\\\"['fas', 'minus']\\\" />\\n          </button>\\n        </div>\\n\\n        <!-- Undo/redo buttons -->\\n        <div class=\\\"button-group\\\">\\n          <button tabindex=\\\"-1\\\" @click.prevent=\\\"undo\\\" class=\\\"icon-btn\\\" :class=\\\"{ 'disabled': !canUndo }\\\" :disabled=\\\"!canUndo\\\">\\n            <font-awesome-icon :icon=\\\"['fas', 'undo']\\\" />\\n          </button>\\n          <button tabindex=\\\"-1\\\" @click.prevent=\\\"redo\\\" class=\\\"icon-btn\\\" :class=\\\"{ 'disabled': !canRedo }\\\" :disabled=\\\"!canRedo\\\">\\n            <font-awesome-icon :icon=\\\"['fas', 'redo']\\\" />\\n          </button>\\n        </div>\\n\\n        <!-- Alignment buttons -->\\n        <div class=\\\"button-group\\\">\\n          <button tabindex=\\\"-1\\\" @click.prevent=\\\"setTextAlign('left')\\\" class=\\\"icon-btn\\\" :class=\\\"{ 'active': isTextAlignLeft }\\\">\\n            <font-awesome-icon :icon=\\\"['fas', 'align-left']\\\" />\\n          </button>\\n          <button tabindex=\\\"-1\\\" @click.prevent=\\\"setTextAlign('center')\\\" class=\\\"icon-btn\\\" :class=\\\"{ 'active': isTextAlignCenter }\\\">\\n            <font-awesome-icon :icon=\\\"['fas', 'align-center']\\\" />\\n          </button>\\n          <button tabindex=\\\"-1\\\" @click.prevent=\\\"setTextAlign('right')\\\" class=\\\"icon-btn\\\" :class=\\\"{ 'active': isTextAlignRight }\\\">\\n            <font-awesome-icon :icon=\\\"['fas', 'align-right']\\\" />\\n          </button>\\n          <button tabindex=\\\"-1\\\" @click.prevent=\\\"setTextAlign('justify')\\\" class=\\\"icon-btn\\\" :class=\\\"{ 'active': isTextAlignJustify }\\\">\\n            <font-awesome-icon :icon=\\\"['fas', 'align-justify']\\\" />\\n          </button>\\n        </div>\\n\\n        <!-- Color and font buttons -->\\n        <div class=\\\"button-group\\\">\\n          <button tabindex=\\\"-1\\\" @click.prevent=\\\"showColorPicker\\\" class=\\\"icon-btn\\\">\\n            <font-awesome-icon :icon=\\\"['fas', 'palette']\\\" />\\n          </button>\\n\\n          <button tabindex=\\\"-1\\\" @click.prevent=\\\"toggleFontFamily\\\" class=\\\"icon-btn\\\">\\n            <font-awesome-icon :icon=\\\"['fas', 'font']\\\" />\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n    <ColorPicker\\n        :visible=\\\"colorPickerVisible\\\"\\n        :color=\\\"currentColor\\\"\\n        @close=\\\"hideColorPicker\\\"\\n        @apply=\\\"applyColor\\\"\\n        @update:color=\\\"currentColor = $event\\\"\\n    />\\n  </div>\\n</template>\\n\\n<script setup>\\nimport { ref, computed } from 'vue'\\nimport ColorPicker from '@/Components/Global/Text/ColorPicker.vue'\\n\\nconst props = defineProps({\\n  editor: Object,\\n})\\n\\nconst colorPickerVisible = ref(false)\\nconst currentColor = ref('#000000')\\n\\nconst showColorPicker = () => {\\n  colorPickerVisible.value = true\\n}\\n\\nconst hideColorPicker = () => {\\n  colorPickerVisible.value = false\\n}\\n\\nconst applyColor = (color) => {\\n  console.log(color)\\n  currentColor.value = color\\n  if (props.editor) {\\n    props.editor.chain().focus().setColor(color).run()\\n  }\\n}\\n\\nconst toggleBold = () => {\\n  if (props.editor) {\\n    props.editor.chain().focus().toggleBold().run()\\n  }\\n}\\n\\nconst toggleItalic = () => {\\n  if (props.editor) {\\n    props.editor.chain().focus().toggleItalic().run()\\n  }\\n}\\n\\nconst toggleUnderline = () => {\\n  if (props.editor) {\\n    props.editor.chain().focus().toggleUnderline().run()\\n  }\\n}\\n\\nconst toggleSuperscript = () => {\\n  if (props.editor) {\\n    props.editor.chain().focus().toggleSuperscript().run()\\n  }\\n}\\n\\nconst toggleSubscript = () => {\\n  if (props.editor) {\\n    props.editor.chain().focus().toggleSubscript().run()\\n  }\\n}\\n\\nconst toggleBulletList = () => {\\n  if (props.editor) {\\n    props.editor.chain().focus().toggleBulletList().run()\\n  }\\n}\\n\\nconst toggleOrderedList = () => {\\n  if (props.editor) {\\n    props.editor.chain().focus().toggleOrderedList().run()\\n  }\\n}\\n\\nconst toggleCodeBlock = () => {\\n  if (props.editor) {\\n    props.editor.chain().focus().toggleCodeBlock().run()\\n  }\\n}\\n\\nconst toggleBlockquote = () => {\\n  if (props.editor) {\\n    props.editor.chain().focus().toggleBlockquote().run()\\n  }\\n}\\n\\nconst setHorizontalRule = () => {\\n  if (props.editor) {\\n    props.editor.chain().focus().setHorizontalRule().run()\\n  }\\n}\\n\\nconst toggleStrike = () => {\\n  if (props.editor) {\\n    props.editor.chain().focus().toggleStrike().run()\\n  }\\n}\\n\\nconst undo = () => {\\n  if (props.editor) {\\n    props.editor.chain().focus().undo().run()\\n  }\\n}\\n\\nconst redo = () => {\\n  if (props.editor) {\\n    props.editor.chain().focus().redo().run()\\n  }\\n}\\n\\nconst setTextAlign = (alignment) => {\\n  if (props.editor) {\\n    props.editor.chain().focus().setTextAlign(alignment).run()\\n  }\\n}\\n\\nconst toggleFontFamily = () => {\\n  // This is where you can implement the logic for changing font family\\n  // You can use a dropdown menu or a predefined set of fonts\\n  const fontOptions = [\\n    'Comic Sans MS, Comic Sans',\\n    'monospace',\\n    'Lucida Handwriting, Pacifico, Brush Script MT, cursive',\\n    'unset'\\n  ];\\n  const currentFont = props.editor.getAttributes('textStyle').fontFamily\\n  const nextFont = fontOptions[(fontOptions.indexOf(currentFont) + 1) % fontOptions.length]\\n\\n  if (nextFont === 'unset') {\\n    props.editor.chain().focus().unsetFontFamily().run()\\n  } else {\\n    props.editor.chain().focus().setFontFamily(nextFont).run()\\n  }\\n}\\n\\nconst toggleHeading = (level) => {\\n  if (props.editor) {\\n    props.editor.chain().focus().toggleHeading({ level }).run()\\n  }\\n}\\n\\nconst isBoldActive = computed(() => props.editor && props.editor.isActive('bold'))\\nconst isItalicActive = computed(() => props.editor && props.editor.isActive('italic'))\\nconst isUnderlineActive = computed(() => props.editor && props.editor.isActive('underline'))\\nconst isSuperscriptActive = computed(() => props.editor && props.editor.isActive('superscript'))\\nconst isSubscriptActive = computed(() => props.editor && props.editor.isActive('subscript'))\\nconst isBulletListActive = computed(() => props.editor && props.editor.isActive('bulletList'))\\nconst isOrderedListActive = computed(() => props.editor && props.editor.isActive('orderedList'))\\nconst isLinkActive = computed(() => props.editor && props.editor.isActive('link'))\\nconst isCodeBlockActive = computed(() => props.editor && props.editor.isActive('codeBlock'))\\nconst isBlockquoteActive = computed(() => props.editor && props.editor.isActive('blockquote'))\\nconst isStrikeActive = computed(() => props.editor && props.editor.isActive('strike'))\\nconst canUndo = computed(() => props.editor && props.editor.can().undo())\\nconst canRedo = computed(() => props.editor && props.editor.can().redo())\\nconst isTextAlignLeft = computed(() => props.editor && props.editor.isActive({ textAlign: 'left' }))\\nconst isTextAlignCenter = computed(() => props.editor && props.editor.isActive({ textAlign: 'center' }))\\nconst isTextAlignRight = computed(() => props.editor && props.editor.isActive({ textAlign: 'right' }))\\nconst isTextAlignJustify = computed(() => props.editor && props.editor.isActive({ textAlign: 'justify' }))\\nconst isHeadingActive = (level) => computed(() => props.editor && props.editor.isActive('heading', { level }))\\n\\nconst setLink = () => {\\n  if (props.editor) {\\n    const previousUrl = props.editor.getAttributes('link').href\\n    const url = window.prompt('URL', previousUrl)\\n    if (url === null) return\\n\\n    if (url === '') {\\n      props.editor.chain().focus().extendMarkRange('link').unsetLink().run()\\n    } else {\\n      props.editor.chain().focus().extendMarkRange('link').setLink({ href: url }).run()\\n    }\\n  }\\n}\\n</script>\\n\\n<style scoped>\\n.toolbar {\\n  display: flex;\\n  gap: 8px;\\n  flex-wrap: wrap;\\n}\\n\\n.button-group {\\n  display: flex;\\n  gap: 8px;\\n  margin-right: 16px;\\n}\\n\\n.icon-btn {\\n  background-color: #4a5568;\\n  color: white;\\n  padding: 8px;\\n  border: none;\\n  border-radius: 4px;\\n  cursor: pointer;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  width: 40px;\\n  height: 40px;\\n  transition: background-color 0.3s, transform 0.3s;\\n}\\n\\n.icon-btn.active {\\n  background-color: #2d3748;\\n}\\n\\n.icon-btn:hover {\\n  background-color: #2d3748;\\n  transform: scale(1.1);\\n}\\n\\n.icon-btn.disabled {\\n  background-color: #a0aec0;\\n  cursor: not-allowed;\\n}\\n\\n.icon-btn i {\\n  font-size: 16px;\\n}\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".tiptap[data-v-48cf0b44]{>*[data-v-48cf0b44]+*{margin-top:.75em}}.character-count[data-v-48cf0b44]{color:#868e96;margin-left:1rem;margin-top:1rem}.tiptap p.is-editor-empty[data-v-48cf0b44]:first-child:before{color:#adb5bd;content:attr(data-placeholder);float:left;height:0;pointer-events:none}.fade-enter-active[data-v-48cf0b44],.fade-leave-active[data-v-48cf0b44]{transition:opacity .5s}.fade-enter[data-v-48cf0b44],.fade-leave-to[data-v-48cf0b44]{opacity:0}.save-message[data-v-48cf0b44]{font-size:1.5rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/Components/Global/TextEditor/TipTapNewsStoryEditor.vue\"],\"names\":[],\"mappings\":\"AAoIA,yBACE,sBACE,gBACF,CACF,CAEA,kCAGE,aAAc,CADd,gBAAiB,CADjB,eAGF,CAGA,8DAGE,aAAc,CAFd,8BAA+B,CAC/B,UAAW,CAGX,QAAS,CADT,mBAEF,CAEA,wEACE,sBACF,CAEA,6DACE,SACF,CAEA,+BACE,gBACF\",\"sourcesContent\":[\"<template>\\n  <TipTapButtons :editor=\\\"editor\\\"/>\\n  <div class=\\\"relative\\\">\\n    <div\\n        class=\\\"tiptap hide-scrollbar h-auto overflow-y-auto min-h-[13rem] max-h-[96rem] mb-2 pb-2 bg-gray-50 border border-1 border-gray-300 focus:outline-none text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500\\\">\\n      <editor-content :editor=\\\"editor\\\" class=\\\"news-story\\\"/>\\n      <div class=\\\"character-count\\\" v-if=\\\"editor\\\">\\n        {{ editor.storage.characterCount.characters() }} characters\\n        <br>\\n        {{ editor.storage.characterCount.words() }} words\\n      </div>\\n    </div>\\n  </div>\\n\\n</template>\\n\\n<script setup>\\nimport { onBeforeUnmount, onMounted, ref } from 'vue'\\nimport { useNewsStore } from '@/Stores/NewsStore'\\nimport { useNotificationStore } from '@/Stores/NotificationStore'\\nimport { Editor, EditorContent } from '@tiptap/vue-3'\\nimport StarterKit from '@tiptap/starter-kit'\\nimport TipTapButtons from '@/Components/Global/TextEditor/TipTapNewsStoryButtons'\\nimport { TextStyle } from '@tiptap/extension-text-style'\\nimport { Color } from '@tiptap/extension-color'\\nimport Typography from '@tiptap/extension-typography'\\nimport CharacterCount from '@tiptap/extension-character-count'\\nimport Placeholder from '@tiptap/extension-placeholder'\\nimport { FontFamily } from '@tiptap/extension-font-family'\\nimport { TextAlign } from '@tiptap/extension-text-align'\\nimport { Underline } from '@tiptap/extension-underline'\\nimport { Subscript } from '@tiptap/extension-subscript'\\nimport { Superscript } from '@tiptap/extension-superscript'\\nimport Link from '@tiptap/extension-link'\\nimport { throttle } from 'lodash'\\n\\nconst newsStore = useNewsStore()\\nconst notificationStore = useNotificationStore()\\n\\nconst limit = 5000\\nconst editor = ref(null)\\nconst hasShownSaveMessage = ref(false)\\nconst isUnmounting = ref(false)\\n\\nconst saveContent = throttle(async () => {\\n  if (isUnmounting.value) return // Skip saving if the component is unmounting\\n\\n  if (!newsStore.id) {\\n    if (!hasShownSaveMessage.value) {\\n      console.log('Please save the story and go to editing mode to enable automatic saving.')\\n      notificationStore.setGeneralServiceNotification('Save Required', 'Please save the story and go to editing mode to enable automatic saving.')\\n      hasShownSaveMessage.value = true\\n    }\\n    return\\n  }\\n  try {\\n    await axios.post('/newsStory/cache', {\\n      id: newsStore.id,\\n      slug: newsStore.slug,\\n      status: newsStore.status,\\n      title: newsStore.title,\\n      content: newsStore.content,\\n      newsPerson: newsStore.newsPerson,\\n      category: newsStore.category,\\n      subCategory: newsStore.subCategory,\\n      city: newsStore.city,\\n      province: newsStore.province,\\n      federalElectoralDistrict: newsStore.federalElectoralDistrict,\\n      subnationalElectoralDistrict: newsStore.subnationalElectoralDistrict\\n    })\\n    newsStore.showSaveMessage = true\\n    setTimeout(() => {\\n      newsStore.showSaveMessage = false\\n    }, 2000)  // Show the save message for 2 seconds\\n  } catch (error) {\\n    console.error('Error caching content:', error)\\n  }\\n}, 5000) // Throttle delay set to 5 seconds\\n\\nconst editorInstance = new Editor({\\n  content: newsStore.content,\\n  extensions: [\\n    StarterKit,\\n    TextStyle,\\n    FontFamily,\\n    Color,\\n    Typography,\\n    Underline,\\n    Subscript,\\n    Superscript,\\n    TextAlign.configure({\\n      types: ['heading', 'paragraph'],\\n    }),\\n    Link.configure({\\n      openOnClick: true,\\n    }),\\n    Placeholder.configure({\\n      placeholder: 'Write something …',\\n    }),\\n    CharacterCount.configure({\\n      limit: null,\\n    })\\n  ],\\n  onUpdate: ({ editor }) => {\\n    newsStore.content = editor.getHTML()\\n    saveContent()\\n  },\\n  autofocus: true,\\n  editorProps: {\\n    attributes: {\\n      class: 'h-auto min-h-[12rem] max-h-[96rem] overflow-y-auto block w-full p-2.5 focus:outline-none',\\n    },\\n  },\\n})\\n\\neditor.value = editorInstance\\n\\nonMounted(() => {\\n  editor.value.commands.setContent(newsStore.content)\\n\\n})\\n\\n// Ensure editor is destroyed properly on component unmount\\nonBeforeUnmount(() => {\\n  isUnmounting.value = true\\n  if (editor.value) {\\n    editor.value.destroy()\\n  }\\n})\\n</script>\\n\\n<style scoped>\\n.tiptap {\\n  > * + * {\\n    margin-top: 0.75em;\\n  }\\n}\\n\\n.character-count {\\n  margin-top: 1rem;\\n  margin-left: 1rem;\\n  color: #868e96;\\n}\\n\\n/* Placeholder (at the top) */\\n.tiptap p.is-editor-empty:first-child::before {\\n  content: attr(data-placeholder);\\n  float: left;\\n  color: #adb5bd;\\n  pointer-events: none;\\n  height: 0;\\n}\\n\\n.fade-enter-active, .fade-leave-active {\\n  transition: opacity 0.5s;\\n}\\n\\n.fade-enter, .fade-leave-to {\\n  opacity: 0;\\n}\\n\\n.save-message {\\n  font-size: 1.5rem;\\n}\\n\\n\\n/* Placeholder (on every new line) */\\n/*.tiptap p.is-empty::before {\\n  content: attr(data-placeholder);\\n  float: left;\\n  color: #adb5bd;\\n  pointer-events: none;\\n  height: 0;\\n}*/\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","<template>\n  <div>\n    <div class=\"overlay\" v-if=\"visible\" @click=\"hide\"></div>\n    <div class=\"color-picker-dialog\" v-if=\"visible\">\n      <Chrome v-model=\"localColor\" />\n      <button class=\"btn btn-primary mt-2\" @click=\"applyColor\">Apply</button>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, watch } from 'vue'\nimport { Chrome } from '@ckpack/vue-color'\n\nconst props = defineProps({\n  visible: {\n    type: Boolean,\n    default: false\n  },\n  color: {\n    type: String,\n    default: '#000000'\n  }\n})\n\nconst emit = defineEmits(['close', 'apply', 'update:color'])\n\nconst localColor = ref(props.color)\n//\n// watch(() => props.color, (newColor) => {\n//   localColor.value = newColor\n// })\n\n// const updateColor = (newColor) => {\n//   localColor.value = newColor.hex\n//   emit('update:color', newColor.hex)\n// }\n\nconst applyColor = () => {\n  console.log(localColor.value.hex)\n  emit('apply', localColor.value.hex)\n  hide()\n}\n\nconst hide = () => {\n  emit('close')\n}\n</script>\n\n<style scoped>\n.overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.5);\n  z-index: 999;\n}\n\n.color-picker-dialog {\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background: white;\n  padding: 20px;\n  border-radius: 8px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  z-index: 1000;\n}\n\n.btn-primary {\n  background-color: #4a5568;\n  color: white;\n  padding: 8px 12px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.btn-primary:hover {\n  background-color: #2d3748;\n}\n</style>\n","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-10.use[1]!../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-10.use[2]!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./ColorPicker.vue?vue&type=style&index=0&id=60d35359&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./ColorPicker.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ColorPicker.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ColorPicker.vue?vue&type=style&index=0&id=60d35359&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-60d35359\"]])\n\nexport default __exports__","<template>\n  <div>\n    <div class=\"toolbar mb-2\">\n      <div class=\"flex flex-wrap gap-1 mb-2\">\n        <!-- Text formatting buttons -->\n        <div class=\"button-group\">\n          <button tabindex=\"-1\" @click.prevent=\"toggleBold\" class=\"icon-btn\" :class=\"{ 'active': isBoldActive }\">\n            <font-awesome-icon :icon=\"['fas', 'bold']\" />\n          </button>\n          <button tabindex=\"-1\" @click.prevent=\"toggleItalic\" class=\"icon-btn\" :class=\"{ 'active': isItalicActive }\">\n            <font-awesome-icon :icon=\"['fas', 'italic']\" />\n          </button>\n          <button tabindex=\"-1\" @click.prevent=\"toggleUnderline\" class=\"icon-btn\" :class=\"{ 'active': isUnderlineActive }\">\n            <font-awesome-icon :icon=\"['fas', 'underline']\" />\n          </button>\n          <button tabindex=\"-1\" @click.prevent=\"toggleStrike\" class=\"icon-btn\" :class=\"{ 'active': isStrikeActive }\">\n            <font-awesome-icon :icon=\"['fas', 'strikethrough']\" />\n          </button>\n          <button tabindex=\"-1\" @click.prevent=\"toggleSuperscript\" class=\"icon-btn\" :class=\"{ 'active': isSuperscriptActive }\">\n            <font-awesome-icon :icon=\"['fas', 'superscript']\" />\n          </button>\n          <button tabindex=\"-1\" @click.prevent=\"toggleSubscript\" class=\"icon-btn\" :class=\"{ 'active': isSubscriptActive }\">\n            <font-awesome-icon :icon=\"['fas', 'subscript']\" />\n          </button>\n        </div>\n\n        <!-- Heading buttons -->\n        <div class=\"button-group\">\n          <button tabindex=\"-1\" @click.prevent=\"toggleHeading(1)\" class=\"icon-btn\" :class=\"{ 'active': isHeadingActive(1) }\">\n            H1\n          </button>\n          <button tabindex=\"-1\" @click.prevent=\"toggleHeading(2)\" class=\"icon-btn\" :class=\"{ 'active': isHeadingActive(2) }\">\n            H2\n          </button>\n          <button tabindex=\"-1\" @click.prevent=\"toggleHeading(3)\" class=\"icon-btn\" :class=\"{ 'active': isHeadingActive(3) }\">\n            H3\n          </button>\n        </div>\n\n        <!-- List buttons -->\n        <div class=\"button-group\">\n          <button tabindex=\"-1\" @click.prevent=\"toggleBulletList\" class=\"icon-btn\" :class=\"{ 'active': isBulletListActive }\">\n            <font-awesome-icon :icon=\"['fas', 'list-ul']\" />\n          </button>\n          <button tabindex=\"-1\" @click.prevent=\"toggleOrderedList\" class=\"icon-btn\" :class=\"{ 'active': isOrderedListActive }\">\n            <font-awesome-icon :icon=\"['fas', 'list-ol']\" />\n          </button>\n        </div>\n\n        <!-- Link buttons -->\n        <div class=\"button-group\">\n          <button tabindex=\"-1\" @click.prevent=\"setLink\" class=\"icon-btn\" :class=\"{ 'active': isLinkActive }\">\n            <font-awesome-icon :icon=\"['fas', 'link']\" />\n          </button>\n          <button tabindex=\"-1\" @click.prevent=\"unsetLink\" class=\"icon-btn\" :class=\"{ 'disabled': !isLinkActive }\" :disabled=\"!isLinkActive\">\n            <font-awesome-icon :icon=\"['fas', 'unlink']\" />\n          </button>\n        </div>\n\n        <!-- Code and blockquote buttons -->\n        <div class=\"button-group\">\n          <button tabindex=\"-1\" @click.prevent=\"toggleCodeBlock\" class=\"icon-btn\" :class=\"{ 'active': isCodeBlockActive }\">\n            <font-awesome-icon :icon=\"['fas', 'code']\" />\n          </button>\n          <button tabindex=\"-1\" @click.prevent=\"toggleBlockquote\" class=\"icon-btn\" :class=\"{ 'active': isBlockquoteActive }\">\n            <font-awesome-icon :icon=\"['fas', 'quote-right']\" />\n          </button>\n          <button tabindex=\"-1\" @click.prevent=\"setHorizontalRule\" class=\"icon-btn\">\n            <font-awesome-icon :icon=\"['fas', 'minus']\" />\n          </button>\n        </div>\n\n        <!-- Undo/redo buttons -->\n        <div class=\"button-group\">\n          <button tabindex=\"-1\" @click.prevent=\"undo\" class=\"icon-btn\" :class=\"{ 'disabled': !canUndo }\" :disabled=\"!canUndo\">\n            <font-awesome-icon :icon=\"['fas', 'undo']\" />\n          </button>\n          <button tabindex=\"-1\" @click.prevent=\"redo\" class=\"icon-btn\" :class=\"{ 'disabled': !canRedo }\" :disabled=\"!canRedo\">\n            <font-awesome-icon :icon=\"['fas', 'redo']\" />\n          </button>\n        </div>\n\n        <!-- Alignment buttons -->\n        <div class=\"button-group\">\n          <button tabindex=\"-1\" @click.prevent=\"setTextAlign('left')\" class=\"icon-btn\" :class=\"{ 'active': isTextAlignLeft }\">\n            <font-awesome-icon :icon=\"['fas', 'align-left']\" />\n          </button>\n          <button tabindex=\"-1\" @click.prevent=\"setTextAlign('center')\" class=\"icon-btn\" :class=\"{ 'active': isTextAlignCenter }\">\n            <font-awesome-icon :icon=\"['fas', 'align-center']\" />\n          </button>\n          <button tabindex=\"-1\" @click.prevent=\"setTextAlign('right')\" class=\"icon-btn\" :class=\"{ 'active': isTextAlignRight }\">\n            <font-awesome-icon :icon=\"['fas', 'align-right']\" />\n          </button>\n          <button tabindex=\"-1\" @click.prevent=\"setTextAlign('justify')\" class=\"icon-btn\" :class=\"{ 'active': isTextAlignJustify }\">\n            <font-awesome-icon :icon=\"['fas', 'align-justify']\" />\n          </button>\n        </div>\n\n        <!-- Color and font buttons -->\n        <div class=\"button-group\">\n          <button tabindex=\"-1\" @click.prevent=\"showColorPicker\" class=\"icon-btn\">\n            <font-awesome-icon :icon=\"['fas', 'palette']\" />\n          </button>\n\n          <button tabindex=\"-1\" @click.prevent=\"toggleFontFamily\" class=\"icon-btn\">\n            <font-awesome-icon :icon=\"['fas', 'font']\" />\n          </button>\n        </div>\n      </div>\n    </div>\n    <ColorPicker\n        :visible=\"colorPickerVisible\"\n        :color=\"currentColor\"\n        @close=\"hideColorPicker\"\n        @apply=\"applyColor\"\n        @update:color=\"currentColor = $event\"\n    />\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed } from 'vue'\nimport ColorPicker from '@/Components/Global/Text/ColorPicker.vue'\n\nconst props = defineProps({\n  editor: Object,\n})\n\nconst colorPickerVisible = ref(false)\nconst currentColor = ref('#000000')\n\nconst showColorPicker = () => {\n  colorPickerVisible.value = true\n}\n\nconst hideColorPicker = () => {\n  colorPickerVisible.value = false\n}\n\nconst applyColor = (color) => {\n  console.log(color)\n  currentColor.value = color\n  if (props.editor) {\n    props.editor.chain().focus().setColor(color).run()\n  }\n}\n\nconst toggleBold = () => {\n  if (props.editor) {\n    props.editor.chain().focus().toggleBold().run()\n  }\n}\n\nconst toggleItalic = () => {\n  if (props.editor) {\n    props.editor.chain().focus().toggleItalic().run()\n  }\n}\n\nconst toggleUnderline = () => {\n  if (props.editor) {\n    props.editor.chain().focus().toggleUnderline().run()\n  }\n}\n\nconst toggleSuperscript = () => {\n  if (props.editor) {\n    props.editor.chain().focus().toggleSuperscript().run()\n  }\n}\n\nconst toggleSubscript = () => {\n  if (props.editor) {\n    props.editor.chain().focus().toggleSubscript().run()\n  }\n}\n\nconst toggleBulletList = () => {\n  if (props.editor) {\n    props.editor.chain().focus().toggleBulletList().run()\n  }\n}\n\nconst toggleOrderedList = () => {\n  if (props.editor) {\n    props.editor.chain().focus().toggleOrderedList().run()\n  }\n}\n\nconst toggleCodeBlock = () => {\n  if (props.editor) {\n    props.editor.chain().focus().toggleCodeBlock().run()\n  }\n}\n\nconst toggleBlockquote = () => {\n  if (props.editor) {\n    props.editor.chain().focus().toggleBlockquote().run()\n  }\n}\n\nconst setHorizontalRule = () => {\n  if (props.editor) {\n    props.editor.chain().focus().setHorizontalRule().run()\n  }\n}\n\nconst toggleStrike = () => {\n  if (props.editor) {\n    props.editor.chain().focus().toggleStrike().run()\n  }\n}\n\nconst undo = () => {\n  if (props.editor) {\n    props.editor.chain().focus().undo().run()\n  }\n}\n\nconst redo = () => {\n  if (props.editor) {\n    props.editor.chain().focus().redo().run()\n  }\n}\n\nconst setTextAlign = (alignment) => {\n  if (props.editor) {\n    props.editor.chain().focus().setTextAlign(alignment).run()\n  }\n}\n\nconst toggleFontFamily = () => {\n  // This is where you can implement the logic for changing font family\n  // You can use a dropdown menu or a predefined set of fonts\n  const fontOptions = [\n    'Comic Sans MS, Comic Sans',\n    'monospace',\n    'Lucida Handwriting, Pacifico, Brush Script MT, cursive',\n    'unset'\n  ];\n  const currentFont = props.editor.getAttributes('textStyle').fontFamily\n  const nextFont = fontOptions[(fontOptions.indexOf(currentFont) + 1) % fontOptions.length]\n\n  if (nextFont === 'unset') {\n    props.editor.chain().focus().unsetFontFamily().run()\n  } else {\n    props.editor.chain().focus().setFontFamily(nextFont).run()\n  }\n}\n\nconst toggleHeading = (level) => {\n  if (props.editor) {\n    props.editor.chain().focus().toggleHeading({ level }).run()\n  }\n}\n\nconst isBoldActive = computed(() => props.editor && props.editor.isActive('bold'))\nconst isItalicActive = computed(() => props.editor && props.editor.isActive('italic'))\nconst isUnderlineActive = computed(() => props.editor && props.editor.isActive('underline'))\nconst isSuperscriptActive = computed(() => props.editor && props.editor.isActive('superscript'))\nconst isSubscriptActive = computed(() => props.editor && props.editor.isActive('subscript'))\nconst isBulletListActive = computed(() => props.editor && props.editor.isActive('bulletList'))\nconst isOrderedListActive = computed(() => props.editor && props.editor.isActive('orderedList'))\nconst isLinkActive = computed(() => props.editor && props.editor.isActive('link'))\nconst isCodeBlockActive = computed(() => props.editor && props.editor.isActive('codeBlock'))\nconst isBlockquoteActive = computed(() => props.editor && props.editor.isActive('blockquote'))\nconst isStrikeActive = computed(() => props.editor && props.editor.isActive('strike'))\nconst canUndo = computed(() => props.editor && props.editor.can().undo())\nconst canRedo = computed(() => props.editor && props.editor.can().redo())\nconst isTextAlignLeft = computed(() => props.editor && props.editor.isActive({ textAlign: 'left' }))\nconst isTextAlignCenter = computed(() => props.editor && props.editor.isActive({ textAlign: 'center' }))\nconst isTextAlignRight = computed(() => props.editor && props.editor.isActive({ textAlign: 'right' }))\nconst isTextAlignJustify = computed(() => props.editor && props.editor.isActive({ textAlign: 'justify' }))\nconst isHeadingActive = (level) => computed(() => props.editor && props.editor.isActive('heading', { level }))\n\nconst setLink = () => {\n  if (props.editor) {\n    const previousUrl = props.editor.getAttributes('link').href\n    const url = window.prompt('URL', previousUrl)\n    if (url === null) return\n\n    if (url === '') {\n      props.editor.chain().focus().extendMarkRange('link').unsetLink().run()\n    } else {\n      props.editor.chain().focus().extendMarkRange('link').setLink({ href: url }).run()\n    }\n  }\n}\n</script>\n\n<style scoped>\n.toolbar {\n  display: flex;\n  gap: 8px;\n  flex-wrap: wrap;\n}\n\n.button-group {\n  display: flex;\n  gap: 8px;\n  margin-right: 16px;\n}\n\n.icon-btn {\n  background-color: #4a5568;\n  color: white;\n  padding: 8px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 40px;\n  height: 40px;\n  transition: background-color 0.3s, transform 0.3s;\n}\n\n.icon-btn.active {\n  background-color: #2d3748;\n}\n\n.icon-btn:hover {\n  background-color: #2d3748;\n  transform: scale(1.1);\n}\n\n.icon-btn.disabled {\n  background-color: #a0aec0;\n  cursor: not-allowed;\n}\n\n.icon-btn i {\n  font-size: 16px;\n}\n</style>\n","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-10.use[1]!../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-10.use[2]!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./TipTapNewsStoryButtons.vue?vue&type=style&index=0&id=51ee9b05&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./TipTapNewsStoryButtons.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TipTapNewsStoryButtons.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./TipTapNewsStoryButtons.vue?vue&type=style&index=0&id=51ee9b05&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-51ee9b05\"]])\n\nexport default __exports__","<template>\n  <TipTapButtons :editor=\"editor\"/>\n  <div class=\"relative\">\n    <div\n        class=\"tiptap hide-scrollbar h-auto overflow-y-auto min-h-[13rem] max-h-[96rem] mb-2 pb-2 bg-gray-50 border border-1 border-gray-300 focus:outline-none text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500\">\n      <editor-content :editor=\"editor\" class=\"news-story\"/>\n      <div class=\"character-count\" v-if=\"editor\">\n        {{ editor.storage.characterCount.characters() }} characters\n        <br>\n        {{ editor.storage.characterCount.words() }} words\n      </div>\n    </div>\n  </div>\n\n</template>\n\n<script setup>\nimport { onBeforeUnmount, onMounted, ref } from 'vue'\nimport { useNewsStore } from '@/Stores/NewsStore'\nimport { useNotificationStore } from '@/Stores/NotificationStore'\nimport { Editor, EditorContent } from '@tiptap/vue-3'\nimport StarterKit from '@tiptap/starter-kit'\nimport TipTapButtons from '@/Components/Global/TextEditor/TipTapNewsStoryButtons'\nimport { TextStyle } from '@tiptap/extension-text-style'\nimport { Color } from '@tiptap/extension-color'\nimport Typography from '@tiptap/extension-typography'\nimport CharacterCount from '@tiptap/extension-character-count'\nimport Placeholder from '@tiptap/extension-placeholder'\nimport { FontFamily } from '@tiptap/extension-font-family'\nimport { TextAlign } from '@tiptap/extension-text-align'\nimport { Underline } from '@tiptap/extension-underline'\nimport { Subscript } from '@tiptap/extension-subscript'\nimport { Superscript } from '@tiptap/extension-superscript'\nimport Link from '@tiptap/extension-link'\nimport { throttle } from 'lodash'\n\nconst newsStore = useNewsStore()\nconst notificationStore = useNotificationStore()\n\nconst limit = 5000\nconst editor = ref(null)\nconst hasShownSaveMessage = ref(false)\nconst isUnmounting = ref(false)\n\nconst saveContent = throttle(async () => {\n  if (isUnmounting.value) return // Skip saving if the component is unmounting\n\n  if (!newsStore.id) {\n    if (!hasShownSaveMessage.value) {\n      console.log('Please save the story and go to editing mode to enable automatic saving.')\n      notificationStore.setGeneralServiceNotification('Save Required', 'Please save the story and go to editing mode to enable automatic saving.')\n      hasShownSaveMessage.value = true\n    }\n    return\n  }\n  try {\n    await axios.post('/newsStory/cache', {\n      id: newsStore.id,\n      slug: newsStore.slug,\n      status: newsStore.status,\n      title: newsStore.title,\n      content: newsStore.content,\n      newsPerson: newsStore.newsPerson,\n      category: newsStore.category,\n      subCategory: newsStore.subCategory,\n      city: newsStore.city,\n      province: newsStore.province,\n      federalElectoralDistrict: newsStore.federalElectoralDistrict,\n      subnationalElectoralDistrict: newsStore.subnationalElectoralDistrict\n    })\n    newsStore.showSaveMessage = true\n    setTimeout(() => {\n      newsStore.showSaveMessage = false\n    }, 2000)  // Show the save message for 2 seconds\n  } catch (error) {\n    console.error('Error caching content:', error)\n  }\n}, 5000) // Throttle delay set to 5 seconds\n\nconst editorInstance = new Editor({\n  content: newsStore.content,\n  extensions: [\n    StarterKit,\n    TextStyle,\n    FontFamily,\n    Color,\n    Typography,\n    Underline,\n    Subscript,\n    Superscript,\n    TextAlign.configure({\n      types: ['heading', 'paragraph'],\n    }),\n    Link.configure({\n      openOnClick: true,\n    }),\n    Placeholder.configure({\n      placeholder: 'Write something …',\n    }),\n    CharacterCount.configure({\n      limit: null,\n    })\n  ],\n  onUpdate: ({ editor }) => {\n    newsStore.content = editor.getHTML()\n    saveContent()\n  },\n  autofocus: true,\n  editorProps: {\n    attributes: {\n      class: 'h-auto min-h-[12rem] max-h-[96rem] overflow-y-auto block w-full p-2.5 focus:outline-none',\n    },\n  },\n})\n\neditor.value = editorInstance\n\nonMounted(() => {\n  editor.value.commands.setContent(newsStore.content)\n\n})\n\n// Ensure editor is destroyed properly on component unmount\nonBeforeUnmount(() => {\n  isUnmounting.value = true\n  if (editor.value) {\n    editor.value.destroy()\n  }\n})\n</script>\n\n<style scoped>\n.tiptap {\n  > * + * {\n    margin-top: 0.75em;\n  }\n}\n\n.character-count {\n  margin-top: 1rem;\n  margin-left: 1rem;\n  color: #868e96;\n}\n\n/* Placeholder (at the top) */\n.tiptap p.is-editor-empty:first-child::before {\n  content: attr(data-placeholder);\n  float: left;\n  color: #adb5bd;\n  pointer-events: none;\n  height: 0;\n}\n\n.fade-enter-active, .fade-leave-active {\n  transition: opacity 0.5s;\n}\n\n.fade-enter, .fade-leave-to {\n  opacity: 0;\n}\n\n.save-message {\n  font-size: 1.5rem;\n}\n\n\n/* Placeholder (on every new line) */\n/*.tiptap p.is-empty::before {\n  content: attr(data-placeholder);\n  float: left;\n  color: #adb5bd;\n  pointer-events: none;\n  height: 0;\n}*/\n</style>\n","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-10.use[1]!../../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-10.use[2]!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./TipTapNewsStoryEditor.vue?vue&type=style&index=0&id=48cf0b44&scoped=true&lang=css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import script from \"./TipTapNewsStoryEditor.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TipTapNewsStoryEditor.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./TipTapNewsStoryEditor.vue?vue&type=style&index=0&id=48cf0b44&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-48cf0b44\"]])\n\nexport default __exports__","import script from \"./NewsWriterComponent.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./NewsWriterComponent.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n<div>\n  <div class=\"mb-6\">\n    <label for=\"Title\" class=\"block mb-2 text-sm font-bold text-gray-900\">Title</label>\n    <input\n        type=\"text\"\n        v-model=\"newsStore.title\"\n        name=\"title\"\n        class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\"\n        placeholder=\"\"\n    />\n    <div v-if=\"newsStore.errors.title\" class=\"text-sm text-red-600\">\n      {{ newsStore.errors.title }}\n    </div>\n  </div>\n\n  <div class=\"mb-6\">\n    <label for=\"Content\" class=\"block mb-2 text-sm font-bold text-gray-900\">Content</label>\n    <tip-tap-news-story-editor />\n    <div v-if=\"newsStore.errors.body\" class=\"text-sm text-red-600\">\n      {{ newsStore.errors.body }}\n    </div>\n  </div>\n</div>\n</template>\n<script setup>\nimport { useNewsStore } from '@/Stores/NewsStore'\nimport TipTapNewsStoryEditor from '@/Components/Global/TextEditor/TipTapNewsStoryEditor'\n\nconst newsStore = useNewsStore()\n\n</script>"],"names":["___CSS_LOADER_EXPORT___","push","module","id","props","__props","emit","__emit","localColor","ref","color","applyColor","console","log","value","hex","hide","options","locals","colorPickerVisible","currentColor","showColorPicker","hideColorPicker","editor","chain","focus","setColor","run","toggleBold","toggleItalic","toggleUnderline","toggleSuperscript","toggleSubscript","toggleBulletList","toggleOrderedList","toggleCodeBlock","toggleBlockquote","setHorizontalRule","toggleStrike","undo","redo","setTextAlign","alignment","toggleFontFamily","fontOptions","currentFont","getAttributes","fontFamily","nextFont","indexOf","length","unsetFontFamily","setFontFamily","toggleHeading","level","isBoldActive","computed","isActive","isItalicActive","isUnderlineActive","isSuperscriptActive","isSubscriptActive","isBulletListActive","isOrderedListActive","isLinkActive","isCodeBlockActive","isBlockquoteActive","isStrikeActive","canUndo","can","canRedo","isTextAlignLeft","textAlign","isTextAlignCenter","isTextAlignRight","isTextAlignJustify","isHeadingActive","setLink","previousUrl","href","url","window","prompt","extendMarkRange","unsetLink","newsStore","useNewsStore","notificationStore","useNotificationStore","hasShownSaveMessage","isUnmounting","saveContent","throttle","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","abrupt","setGeneralServiceNotification","axios","post","slug","status","title","content","newsPerson","category","subCategory","city","province","federalElectoralDistrict","subnationalElectoralDistrict","showSaveMessage","setTimeout","t0","error","stop","editorInstance","Editor","extensions","StarterKit","TextStyle","FontFamily","Color","Typography","Underline","Subscript","Superscript","TextAlign","configure","types","Link","openOnClick","Placeholder","placeholder","CharacterCount","limit","onUpdate","_ref2","getHTML","autofocus","editorProps","attributes","class","onMounted","commands","setContent","onBeforeUnmount","destroy"],"sourceRoot":""}